{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693060"}
{"ref": [{"link": "", "title": "Increasing software development productivity with reversible debugging"}, {"link": "", "title": "University of cambridge study: Failure to adopt reverse debugging costs global economy $41 billion annually"}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "", "title": "Automatic software repair: A survey"}, {"link": "", "title": "Automated patching techniques: the fix is in: technical perspective"}, {"link": "", "title": "Automatic software repair: A bibliography"}, {"link": "", "title": "Automatic runtime error repair and containment via recovery shepherding"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/5477098", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "/document/7552008", "title": "Automated program repair by using similar code containing fix ingredients"}, {"link": "/document/7194598", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/6606623", "title": "Semfix: program repair via semantic analysis"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "", "title": "Angelix: scalable multiline program patch synthesis via symbolic analysis"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "/document/5431737", "title": "Generating fixes from object behavior anomalies"}, {"link": "", "title": "Specification-based program repair using sat"}, {"link": "", "title": "Overfitting in automated program repair: Challenges and solutions"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "", "title": "The Java Virtual Machine Specification, Java SE 8 Edition"}, {"link": "", "title": "Towards practical program repair with on-demand candidate generation"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Prapr website"}, {"link": "", "title": "Antipatterns in search-based program repair"}, {"link": "", "title": "Better test cases for better automated program repair"}, {"link": "", "title": "Program sketching"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Defects4j - version 1.4.0"}, {"link": "", "title": "The Java Language Specification, Java SE 8 Edition"}, {"link": "", "title": "Kotlin language documentation"}, {"link": "", "title": "The scala language specification"}, {"link": "", "title": "Groovy programming language"}, {"link": "/document/8802677", "title": "Defexts: A curated dataset of reproducible real-world bugs for modern jvm languages"}, {"link": "", "title": "List of JVM Languages"}, {"link": "", "title": "Alleviating patch overfitting with automatic test generation: a study of feasibility and effectiveness for the nopol repair system"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "", "title": "Identifying patch correctness in test-based program repair"}, {"link": "/document/7476644", "title": "History driven program repair"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "/document/6982626", "title": "Mutations: How close are they to real faults?"}, {"link": "", "title": "Cdrep: Automatic repair of cryptographic misuses in android applications"}, {"link": "", "title": "Automated program repair through the evolution of assembly code"}, {"link": "/document/8648274", "title": "A semi-autonomic bytecode repair framework"}, {"link": "", "title": "Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization"}, {"link": "", "title": "Fluccs: using code and change metrics to improve fault localization"}, {"link": "", "title": "Boosting spectrum-based fault localization using pagerank"}, {"link": "", "title": "Transforming programs and tests in tandem for fault localization"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952355"}
{"ref": [{"link": "", "title": "Program analysis and specialization for the C programming language"}, {"link": "", "title": "Configurable software verification: Concretizing the convergence of model checking and program analysis"}, {"link": "", "title": "An efficient method of computing static single assignment form"}, {"link": "", "title": "Efficiently computing static single assignment form and the control dependence graph"}, {"link": "", "title": "On the importance of points-to analysis and other memory disambiguation methods for c programs"}, {"link": "", "title": "Error checking with client-driven pointer analysis"}, {"link": "/document/5764696", "title": "Flow-sensitive pointer analysis for millions of lines of code"}, {"link": "", "title": "Hybrid context-sensitivity for points-to analysis"}, {"link": "", "title": "Making context-sensitive points-to analysis with heap cloning practical for the real world"}, {"link": "", "title": "S3: syntax-and semantic-guided repair synthesis via programming by examples"}, {"link": "", "title": "Tracking pointers with path and context sensitivity for bug detection in c programs"}, {"link": "", "title": "Region-based selective flowsensitive pointer analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952426"}
{"ref": [{"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "A study of the documentation essential to software maintenance"}, {"link": "", "title": "Deep code comment generation"}, {"link": "", "title": "Improving automatic source code summarization via deep reinforcement learning"}, {"link": "/document/6624045", "title": "Mining succinct and high-coverage API usage patterns from source code"}, {"link": "", "title": "MAPO: mining and recommending API usage patterns"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/7081848", "title": "Clocom: Mining existing source code for automatic comment generation"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "Summarizing source code using a neural attention model"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Bleu: a method for automatic evaluation of machine translation"}, {"link": "", "title": "METEOR: an automatic metric for MT evaluation with improved correlation with human judgments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952536"}
{"ref": [{"link": "", "title": "Android Developers, UI/Application Exerciser Monkey"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "", "title": "Automated model-based android gui testing using multi-level gui comparison criteria"}, {"link": "", "title": "Rico: A mobile app dataset for building data-driven design applications"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet?"}, {"link": "", "title": "Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "", "title": "Guiding app testing with\u00b4 mined interaction models"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for android applications"}, {"link": "", "title": "Droidbot: A lightweight ui-guided test input generator for android"}, {"link": "", "title": "An empirical study of android test generation tools in industrial cases"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952324"}
{"ref": [{"link": "", "title": "Owasp top 10 - 2017 the ten most critical web application security risks"}, {"link": "/document/7372035", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}, {"link": "", "title": "Bug localization with combination of deep learning and infor- mation retrieval"}, {"link": "/document/8094426", "title": "Cclearner: A deep learning-based clone detection approach"}, {"link": "", "title": "Sql injection behavior mining based deep learning"}, {"link": "", "title": "Wovsqli"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "", "title": "Securing web application code by static analysis and runtime protection"}, {"link": "/document/5369093", "title": "Comparing the effectiveness of penetration testing and static code analysis on the detection of sql injection vulner- abilities in web services"}, {"link": "/document/6963442", "title": "Web application vulnera- bility prediction using hybrid program analysis and machine learning"}, {"link": "", "title": "Distributed representations of sentences and documents"}, {"link": "", "title": "Software assurance dataset project"}, {"link": "", "title": "National vulnerability database"}, {"link": "", "title": "Understanding bag-of-words model: a statistical framework"}, {"link": "", "title": "Medical text classifica- tion using convolutional neural networks"}, {"link": "/document/7259377", "title": "Support vector machines and word2vec for text classification with semantic features"}, {"link": "", "title": "What developers want and need from program analysis: An empirical study"}, {"link": "", "title": "Evaluation of open-source ide plugins for detecting security vulnerabilities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952467"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Samgsung finally explains the Galaxy Note 7 exploding battery mess"}, {"link": "", "title": "Samsung confirms battery faults as cuase of Note 7 fires"}, {"link": "", "title": "Upper saddle river"}, {"link": "", "title": "Top 5 causes of nasty embedded software bugs"}, {"link": "/document/1463211", "title": "Rapid embedded system testing using verification patterns"}, {"link": "/document/980005", "title": "Dependability of COTS microkernel-based systems"}, {"link": "/document/4127318", "title": "Verification and validation of (real time) COTS products using fault injection techniques"}, {"link": "/document/632800", "title": "Comparing operating systems using robustness benchmarks"}, {"link": "/document/464588", "title": "Systematically testing a real-time operating system"}, {"link": "", "title": "An approach to testing commercial embedded systems"}, {"link": "", "title": "Software generated device exception for more intensive device-related software testing: An industrial field study"}, {"link": "", "title": "Phone, app store problems causing more than just headaches"}, {"link": "", "title": "Software Test Automation for High quality Software"}, {"link": "", "title": "Googletest \u2013 Goolge testing and mocking framework"}, {"link": "", "title": "JUnit 5 User Guide"}, {"link": "", "title": "Code Coverage of BlackBerry QNX"}, {"link": "", "title": "Robot Framework"}, {"link": "", "title": "Tesseract-ocr"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952292"}
{"ref": [{"link": "", "title": "An empirical investigation into the nature of test smells"}, {"link": "", "title": "Agile Testing: A Practical Guide for Testers and Agile Teams"}, {"link": "", "title": "Effective Unit Testing: A Guide for Java Developers, ser. Running Series"}, {"link": "", "title": "Working effectively with legacy code"}, {"link": "/document/6405253", "title": "An empirical analysis of the distribution of unit test smells and their impact on software maintenance"}, {"link": "", "title": "Relation of code clones and change couplings"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952538"}
{"ref": [{"link": "", "title": "Jenkins"}, {"link": "", "title": "SonarQube"}, {"link": "/document/7962385", "title": "Oops, my tests broke the build: An explorative analysis of Travis CI with GitHub"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Accelerate: The Science of Lean Software and DevOps Building and Scaling High Performing Technology Organizations"}, {"link": "/document/8360943", "title": "Use and misuse of continuous integration features: An empirical study of projects that (mis)use Travis CI"}, {"link": "", "title": "Tradeoffs in continuous integration: Assurance, security, and flexibility"}, {"link": "", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "/document/6976070", "title": "Why do automated builds break? an empirical study"}, {"link": "", "title": "Understanding the impact of rapid releases on software quality - the case of firefox"}, {"link": "/document/8330201", "title": "Automatically repairing dependency-related build breakage"}, {"link": "", "title": "Key Performance Indicators: Developing, Implementing, and Using Winning Kpis"}, {"link": "/document/8812041", "title": "The seven sins: Security smells in infrastructure as code scripts"}, {"link": "/document/7962384", "title": "An empirical analysis of build failures in the continuous integration workflows of java-based open-source software"}, {"link": "", "title": "Programmers\u2019 build errors: a case study (at Google)"}, {"link": "", "title": "Card sorting: Designing usable categories"}, {"link": "", "title": "StackOverflow"}, {"link": "", "title": "Automated Software Integration Flows in Industry: A Multiple-case Study"}, {"link": "", "title": "How to design a program repair bot?: Insights from the repairnator project"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in github"}, {"link": "/document/8811921", "title": "Automated reporting of anti-patterns and decay in continuous integration"}, {"link": "", "title": "Un-break my build: Assisting developers with build repair hints"}, {"link": "", "title": "Every build you break: Developer-oriented assistance for build failure resolution"}, {"link": "/document/8094420", "title": "A tale of CI build failures: An open source and a financial organization perspective"}, {"link": "/document/8115619", "title": "The impact of continuous integration on other software development practices: A large-scale empirical study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952505"}
{"ref": [{"link": "", "title": "Consistency checking in requirements analysis"}, {"link": "", "title": "A survey on search-based model-driven engineering"}, {"link": "/document/7985709", "title": "UML diagram refinement (focusing on class-and use case diagrams)"}, {"link": "", "title": "Maramaaic: tool support for consistency management and validation of requirements"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "Reusable knowledge in security requirements engineering: a systematic mapping study"}, {"link": "/document/8491123", "title": "Vetting automatically generated trace links: What information is useful to human analysts?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952294"}
{"ref": [{"link": "", "title": "Cisco Visual Networking Index: Forecast and Methodology 2017-2022"}, {"link": "/document/8567817", "title": "The impact of bitrate and GOP pattern on the video quality of H.265/HEVC compression standard"}, {"link": "/document/7562040", "title": "Smart Media Pricing (SMP): Non-Uniform Packet Pricing Game for Wireless Multimedia Communications"}, {"link": "/document/8466359", "title": "Price the QoE, Not the Data: SMP-Economic Resource Allocation in Wireless Multimedia Internet of Things"}, {"link": "", "title": "QoE-Sensitive Economic Pricing Model for Wireless Multimedia Communications Using Stackelberg Game"}, {"link": "/document/7467570", "title": "Game Theoretic Resource Allocation in Media Cloud with Mobile Social Users\u201d"}, {"link": "", "title": "Choices, Values, and Frames"}, {"link": "", "title": "The probability weighting function"}, {"link": "", "title": "An Introduction to Game Theory"}, {"link": "", "title": "Stackelberg Game-Theoretic Spectrum Allocation for QoE-Centric Wireless Multimedia Communications"}, {"link": "/document/4533065", "title": "Parametric packet-layer model for monitoring video quality of IPTV services.\u201d"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952218"}
{"ref": [{"link": "", "title": "Apex: automated inference of error specifications for C apis"}, {"link": "", "title": "SSL_new"}, {"link": "", "title": "Path-based function embedding and its application to specification mining"}, {"link": "", "title": "Pr-miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "Detecting bugs by discovering expectations and their violations"}, {"link": "", "title": "Mining API error-handling specifications from source code"}, {"link": "", "title": "Inferring better contracts"}, {"link": "", "title": "Cpachecker: A tool for configurable software verification"}, {"link": "/document/8802795", "title": "Vetting api usages in c programs with imchecker"}, {"link": "", "title": "Detecting api documentation errors"}, {"link": "", "title": "Expect the unexpected: error code mismatches between documentation and the real world"}, {"link": "", "title": "Automatically diagnosing and repairing error handling bugs in c"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952222"}
{"ref": [{"link": "/document/8530732", "title": "Static javascript call graphs: A comparative study"}, {"link": "", "title": "An analysis of the dynamic behavior of javascript programs"}, {"link": "", "title": "Evaluation of Static JavaScript Call Graph Algorithms"}, {"link": "", "title": "Code2graph: automatic generation of static call graphs for python source code"}, {"link": "", "title": "An empirical study of static call graph extractors"}, {"link": "", "title": "Systematic evaluation of the unsoundness of call graph construction algorithms for java"}, {"link": "", "title": "Comparing call graphs"}, {"link": "", "title": "The pyan tool"}, {"link": "", "title": "The code2flow tool"}, {"link": "", "title": "The understand tool"}, {"link": "", "title": "The pycallgraph tool"}, {"link": "", "title": "Graph Theory"}, {"link": "", "title": "The architecture of complex weighted networks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952190"}
{"ref": [{"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "/document/7515461", "title": "Detecting assumptions on deterministic implementations of non-deterministic specifications"}, {"link": "", "title": "DeFlaker: Automatically detecting flaky tests"}, {"link": "", "title": ""}, {"link": "", "title": "Yesterday, my program worked. Today, it does not. Why?"}, {"link": "", "title": "Towards automated debugging in software evolution: Evaluating delta debugging on real regression bugs from the developers\u2019 perspectives"}, {"link": "", "title": ""}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952328"}
{"ref": [{"link": "", "title": "Generation CS: The growth of computer science"}, {"link": "", "title": "How Learning Works: Seven Research-Based Principles for Smart Teaching"}, {"link": "", "title": "Pex\u2013white box test generation for.NET"}, {"link": "/document/4639353", "title": "DiffGen: Automated regression unit-test generation"}, {"link": "", "title": "Measuring code behavioral similarity for programming and software engineering education"}, {"link": "", "title": "Rostra: A framework for detecting redundant object-oriented unit tests"}, {"link": "", "title": ""}, {"link": "/document/4639325", "title": "Test-suite augmentation for evolving software"}, {"link": "", "title": "eXpress: Guided path exploration for efficient regression test generation"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Automated clustering and\u02c7 program repair for introductory programming assignments"}, {"link": "", "title": "Writing reusable code feedback at scale with mixedinitiative program synthesis"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Learning stateful preconditions modulo a test generator"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952332"}
{"ref": [{"link": "", "title": "Successes, challenges, and rethinking \u2013 an industrial investigation on crowdsourced mobile application testing"}, {"link": "", "title": "Multi-objective test report prioritization using image understanding"}, {"link": "", "title": "Quasi-crowdsourcing testing for educational projects"}, {"link": "", "title": "Quality control in crowdsourcing: A survey of quality attributes, assessment techniques, and assurance actions"}, {"link": "/document/8811987", "title": "Ctras: Crowdsourced test report aggregation and summarization"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Show and tell: Lessons learned from the 2015 mscoco image captioning challenge"}, {"link": "/document/7780677", "title": "Rethinking the inception architecture for computer vision"}, {"link": "", "title": "Binary codes capable of correcting deletions, inser- tions, and reversals"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952296"}
{"ref": [{"link": "/document/6914469", "title": "Research directions for engineering big data analytics software"}, {"link": "/document/7194570", "title": "Measuring software redundancy"}, {"link": "", "title": "Python for data analysis: Data wrangling with Pandas, NumPy, and IPython"}, {"link": "", "title": "Performance issues and optimizations in javascript: An empirical study"}, {"link": "", "title": "How not to structure your database-backed web applications: A study of performance bugs in the wild"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "", "title": "Identifying functionally similar code in complex codebases"}, {"link": "", "title": "The Python standard library: Debugging and profiling"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Semgrex"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952224"}
{"ref": [{"link": "", "title": "A Collection of Well-Known Software Failures"}, {"link": "", "title": "RTist"}, {"link": "", "title": "Concolic Testing for Models of State-based Systems"}, {"link": "", "title": "Property-aware unit testing of uml-rt models in the context of mde"}, {"link": "", "title": "Slicing UML-based Models of Real-time Embedded Systems"}, {"link": "", "title": "Polyglot: modeling and analysis for multiple statechart formalisms"}, {"link": "/document/4639362", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "STG: A symbolic test generation tool"}, {"link": "/document/4276333", "title": "MARTE: Also an uml profile for modeling aadl applications"}, {"link": "", "title": "A practical guide to SysML: the systems modeling language"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "SAGE: whitebox fuzzing for security testing"}, {"link": "/document/7338231", "title": "Incremental symbolic execution of evolving state machines"}, {"link": "/document/8804440", "title": "Concolic testing for high test coverage and reduced human effort in automotive industry"}, {"link": "", "title": "A method for synthesizing sequential circuits"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "Using UML for modeling complex real-time systems"}, {"link": "", "title": "CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Pex\u2013white box test generation for.net"}, {"link": "", "title": "Test input generation with Java PathFinder"}, {"link": "", "title": "Symbolic Execution of UML-RT State Machines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952438"}
{"ref": [{"link": "", "title": "Sitar: GUI test script repair"}, {"link": "", "title": "Sikuli: using GUI screenshots for search and automation"}, {"link": "/document/790410", "title": "Object recognition from local scale-invariant features"}, {"link": "", "title": "A computational approach to edge detection"}, {"link": "", "title": "GUI testing using computer vision"}, {"link": "", "title": "Distinctive image features from scale-invariant keypoints"}, {"link": "/document/7372013", "title": "Reverse engineering mobile application user interfaces with REMAUI"}, {"link": "", "title": "Cross-platform testing and maintenance of web and mobile applications"}, {"link": "/document/8431949", "title": "Design and application of a Sikuli based capture-replay tool"}, {"link": "", "title": "Machine learning-based prototyping of graphical user interfaces for mobile apps"}, {"link": "", "title": "From UI design image to GUI skeleton: a neural machine translator to bootstrap mobile gui implementation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952513"}
{"ref": [{"link": "", "title": "How to deal with inaccurate service requirements? insights in our current approach and new ideas"}, {"link": "", "title": "pix2code: Generating code from a graphical user interface screenshot"}, {"link": "", "title": "Open source language understanding and dialogue management"}, {"link": "", "title": "From ui design image to gui skeleton: a neural machine translator to bootstrap mobile gui implementation"}, {"link": "", "title": "Multi-fidelity prototyping of user interfaces"}, {"link": "", "title": "Interactive prototyping of tabletop and surface applications"}, {"link": "", "title": "Cordula: Software requirements extraction utilizing chatbot as communication interface"}, {"link": "", "title": "What did you mean? - facing the challenges of user generated software requirements"}, {"link": "", "title": "A primer on neural network models for natural language processing"}, {"link": "", "title": "Interactive sketching for the early stages of user interface design"}, {"link": "", "title": "Segbot: A generic neural text segmentation model with pointer network"}, {"link": "", "title": "Unsupervised deep bug report summarization"}, {"link": "", "title": "End-to-end task-completion neural dialogue systems"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "/document/8054882", "title": "Automated identification of component state transition model elements from requirements"}, {"link": "", "title": "Machine learning-based prototyping of graphical user interfaces for mobile apps"}, {"link": "", "title": "On end-to-end program generation from user intention by deep neural networks"}, {"link": "", "title": "An integration of requirements and user interface specifications"}, {"link": "", "title": "A method for extracting and stating software requirements that a user interface prototype contains"}, {"link": "/document/8814225", "title": "Nlsc: Unrestricted natural language-based service composition through sentence embeddings"}, {"link": "", "title": "Low vs. high-fidelity prototyping debate"}, {"link": "", "title": "Paper prototyping: The fast and easy way to design and refine user interfaces"}, {"link": "", "title": "Compositional neural semantic parsing for compound virtual assistant commands"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Trigger-action programming in the wild: An analysis of 200,000 ifttt recipes"}, {"link": "", "title": "Improving mockup-based requirement specification with end-user annotations"}, {"link": "/document/8054881", "title": "From user demand to software service: using machine learning to automate the requirements specification process"}, {"link": "", "title": "Prototyping user interfaces"}, {"link": "/document/8416973", "title": "Recent trends in deep learning based natural language processing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952477"}
{"ref": [{"link": "", "title": "Experience in teaching C++11 within the undergraduate informatics curriculum"}, {"link": "", "title": "Static analyzer: add smart pointer checker"}, {"link": "", "title": "Clang Static Analyzer (CSA)"}, {"link": "", "title": "Clang-Tidy"}, {"link": "", "title": "Cppcheck"}, {"link": "", "title": "What if I delete the pointer that the smart pointer is managing?"}, {"link": "", "title": "C++ create shared ptr to stack object"}, {"link": "/document/6759228", "title": "Pointer ownership model"}, {"link": "", "title": "A practical flow-sensitive and context-sensitive C and C++ memory leak detector"}, {"link": "", "title": "Alias annotations for program understanding"}, {"link": "", "title": "Safe dynamic memory management in Ada and Spark"}, {"link": "", "title": "Comprehensive performance analysis of C++ smart pointers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952230"}
{"ref": [{"link": "", "title": "Model-level debugging in the context of the model-driven development"}, {"link": "", "title": "Costs and benefits of early defect detection: experiences from developing client server and host applications"}, {"link": "", "title": "Programming by sketching for bit-streaming programs"}, {"link": "/document/6227159", "title": "Partial models: Towards modeling and reasoning with uncertainty"}, {"link": "", "title": "Survey and classification of model transformation tools"}, {"link": "", "title": "Real-time object-oriented modeling"}, {"link": "", "title": "PMExec Repository"}, {"link": "", "title": "The Epsilon transformation language"}, {"link": "", "title": "Model-level, platform-independent debugging in the context of the model-driven development of real-time systems"}, {"link": "", "title": "Mdebugger: A model-level debugger for UML-RT"}, {"link": "", "title": "An Executable Formal Semantics for UMLRT"}, {"link": "", "title": "Papyrus for Real Time (Papyrus-RT)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952369"}
{"ref": [{"link": "", "title": "\u201cCompetition on software testing (Test-Comp)"}, {"link": "", "title": "\u201cCoVeriTest: Cooperative verifier-based testing"}, {"link": "", "title": "\u201cSoftware verification: Testing vs. model checking"}, {"link": "", "title": "\u201cReliable benchmarking: Requirements and solutions"}, {"link": "", "title": "\u201cReplication package for article TestCov: Robust test-suite execution and coverage measurement"}, {"link": "/document/4639362", "title": "\u201cHeuristics for scalable dynamic test generation"}, {"link": "", "title": "\u201cKLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "\u201cJoint forces for memory safety checking"}, {"link": "", "title": "\u201cVeriFuzz: Program-aware fuzzing (competition contribution)"}, {"link": "", "title": "\u201cHandling loops in bounded model checking of C programs via k-induction"}, {"link": "", "title": "\u201cQuery-driven program testing"}, {"link": "/document/7153570", "title": "\u201cThe ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "", "title": "\u201cFairFuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952265"}
{"ref": [{"link": "", "title": "Structured merge with autotuning: balancing precision and performance"}, {"link": "", "title": "The Methodology of N-version Programming"}, {"link": "/document/6876249", "title": "Heartbleed 101"}, {"link": "", "title": "Quickly detecting relevant program invariants"}, {"link": "", "title": "Finegrained and accurate source code differencing"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "Becoming a Better Programmer"}, {"link": "", "title": "Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/274940", "title": "An Investigation of the Therac-25 Accidents"}, {"link": "/document/7476644", "title": "History driven program repair"}, {"link": "/document/6035728", "title": "GenProg: A Generic Method for Automatic Software Repair"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the defects4j dataset"}, {"link": "", "title": "Is the cure worse than the disease? Overfitting in automated program repair"}, {"link": "", "title": "A Deeper Look into Bug Fixes:Patterns,Replacements,Deletions,and Additions.MSR\u201916"}, {"link": "", "title": "Common Statement Kind Changes To Inform Automatic Program Repair"}, {"link": "/document/8330211", "title": "Using a Probabilistic Model to Predict Bug Fixes"}, {"link": "/document/6676889", "title": "Efficient automated program repair through fault-recorded testing prioritization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952342"}
{"ref": [{"link": "/document/6227176", "title": "Identifying Linux Bug Fixing Patches"}, {"link": "/document/8802642", "title": "PatchNet: a tool for deep patch classification"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "", "title": ""}, {"link": "", "title": "Machine learning and stable kernels"}, {"link": "", "title": "Mining software repositories for automatic software bug management from bug triaging to patch backporting"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952485"}
{"ref": [{"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "", "title": "Software vulnerability analysis and discovery using machine-learning and data-mining techniques: A survey"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "/document/8812062", "title": "A novel neural source code representation based on abstract syntax tree"}, {"link": "", "title": "Bilateral dependency neural networks for cross-language algorithm classification"}, {"link": "/document/8631448", "title": "Explaining explanations: An overview of interpretability of machine learning"}, {"link": "", "title": "Interpretability beyond feature attribution: Quantitative testing with concept activation vectors (TCAV)"}, {"link": "", "title": "Towards robust interpretability with self-explaining neural networks"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "", "title": "Attention is not explanation"}, {"link": "", "title": "Learning to represent programs with graphs"}, {"link": "", "title": "Explainable software analytics"}, {"link": "", "title": "Visualizing and understanding convolutional networks"}, {"link": "", "title": "Visualizing and understanding neural models in NLP"}, {"link": "/document/8237633", "title": "Interpretable explanations of black boxes by meaningful perturbation"}, {"link": "", "title": "why should I trust you? explaining the predictions of any classifier"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952269"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "The glucose SAT solver"}, {"link": "", "title": "VeriFuzz: program aware fuzzing"}, {"link": "", "title": "Automatic verification of C and java programs: SV-COMP 2019"}, {"link": "", "title": "Strategy selection for software verification based on boolean features- A simple but effective approach"}, {"link": "", "title": "CPAchecker: A tool for configurable software verification"}, {"link": "", "title": "Pinaka: Symbolic execution meets incremental solving - (competition contribution)"}, {"link": "", "title": "Veriabs: Verification by abstraction (competition contribution)"}, {"link": "", "title": "A Tool for Checking ANSI-C Programs"}, {"link": "", "title": "Predicting rankings of software verification tools"}, {"link": "", "title": "Overapproximating loops to prove properties using bounded model checking"}, {"link": "/document/6462668", "title": "Precise analysis of large industry code"}, {"link": "", "title": "Veriabs: Verification by abstraction and test generation - (competition contribution)"}, {"link": "", "title": "A refinement to loop abstraction for bounded model checking"}, {"link": "", "title": "Empirical software metrics for benchmarking of verification tools"}, {"link": "", "title": "ESBMC v6.0: Verifying C programs using k-induction and invariant inference - (competition contribution)"}, {"link": "", "title": "Ultimate automizer and the search for perfect interpolants - (competition contribution)"}, {"link": "", "title": "Static program analysis of large embedded code base: an experience"}, {"link": "", "title": "Property checking array programs using array prunning"}, {"link": "", "title": "Property checking array programs using loop shrinking"}, {"link": "", "title": "Precise range analysis on large industry code"}, {"link": "", "title": "Efficiently learning safety proofs from appearance as well as behaviours"}, {"link": "", "title": "Viap 1.1 - (competition contribution)"}, {"link": "", "title": "Pesco: Predicting sequential combinations of verifiers - (competition contribution)"}, {"link": "", "title": "Algorithm selection for software model checkers"}, {"link": "", "title": "Proteus: Computing disjunctive loop summary via path dependency analysis"}, {"link": "", "title": "American fuzzy lop"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952452"}
{"ref": [{"link": "", "title": "Proposed Regulatory Framework for Modifications to Artificial Intelligence/Machine Learning (AI/ML)-Based Software as a Medical Device"}, {"link": "", "title": "The w3c prov family of specifications for modelling provenance metadata"}, {"link": "/document/8823885", "title": "CAG: compliance adherence and governance in software delivery using blockchain"}, {"link": "/document/8807537", "title": "Shift: software identity framework for global software delivery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952169"}
{"ref": [{"link": "", "title": "Semantics Of Business Vocabulary And Rules (SBVR)"}, {"link": "", "title": "An approach to mine business rule intents from domain-specific documents"}, {"link": "", "title": "Combining lexical, syntactic, and semantic features with maximum entropy models for extracting relations"}, {"link": "/document/588021", "title": "Inducing features of random fields"}, {"link": "", "title": "Relation identification in business rules for domain-specific documents"}, {"link": "", "title": "Sbvr-based business rule creation for legacy programs using variable provenance"}, {"link": "", "title": "Variable provenance in software systems"}, {"link": "", "title": "A systematic review of methods for consistency checking in sbvr-based business rules"}, {"link": "", "title": "The SMT-LIBv2 language and tools: A tutorial"}, {"link": "", "title": "Domain-independent method of detecting inconsistencies in sbvr-based business rules"}, {"link": "", "title": "An automated detection of inconsistencies in sbvr-based business rules using many-sorted logic"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Identifying anomalies in sbvr-based business rules using directed graphs and smt-libv2"}, {"link": "/document/8719543", "title": "Matgap: A systematic approach to perform match and gap analysis among sbvr-based domain specific business rules"}, {"link": "", "title": "Semantic search and query over sbvr-based business rules using SMT based approach and information retrieval method"}, {"link": "", "title": "EU-RentACar case study"}, {"link": "", "title": "Sbvr business rules generation from natural language specification"}, {"link": "/document/921728", "title": "Extracting business logic from existing cobol programs as a basis for redevelopment"}, {"link": "", "title": "Experimental investigation of transformations from SBVR business vocabularies and business rules to owl 2 ontologies"}, {"link": "", "title": "Systematic approach for the gap analysis of business processes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952315"}
{"ref": [{"link": "", "title": "The Definitive ANTLR 4 Reference[M]"}, {"link": "", "title": "Software engineering 9th Edition[J]"}, {"link": "", "title": "Requirements Engineering for Safety-Critical Systems: An Interview Study with Industry Practitioners[J]"}, {"link": "", "title": "Statecharts: A visual formalism for complex systems[J]"}, {"link": "", "title": "Timed automata: Semantics, algorithms and tools[C]"}, {"link": "", "title": "A tutorial on uppaal[C]"}, {"link": "", "title": "Z3: An efficient SMT solver[C]"}, {"link": "", "title": "Principles of model checking[M]"}, {"link": "", "title": "The effect of program and model structure on mc/dc test adequacy coverage[C]"}, {"link": "", "title": "Doors IBM R"}, {"link": "", "title": "Requirements engineering tools: Capabilities, survey and assessment[J]"}, {"link": "/document/8115725", "title": "Towards search-based modelling and analysis of requirements and architecture decisions[C]"}, {"link": "", "title": "DO-333 certification case studies[C]"}, {"link": "", "title": "Automated Requirements Validation for ATP Software via Specification Review and Testing[C]"}, {"link": "", "title": "MDM: A Mode Diagram Modeling Framework for Periodic Control Systems[J]"}, {"link": "", "title": ""}, {"link": "", "title": "Sifakis Early Validation of System Requirements and Design Through Correctness-by-Construction"}, {"link": "", "title": "Configuration logics: Modeling architecture styles"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952250"}
{"ref": [{"link": "", "title": "Log4perf: Suggesting Logging Locations for Web-based Systems\u2019 Performance Monitoring"}, {"link": "/document/6616342", "title": "Behavioral Analysis of Android Applications Using Automated Instrumentation"}, {"link": "", "title": "Studying the effectiveness of application performance management (apm) tools for detecting performance regressions for web applications: An experience report"}, {"link": "", "title": "Application Performance Management: State of the art and challenges for the Future"}, {"link": "", "title": "Exploiting Load Testing and Profiling for Performance Antipattern Detection"}, {"link": "", "title": "Using Dynatrace Monitoring Data for Generating Performance Models of Java EE Applications"}, {"link": "", "title": "Demystifying apm for android"}, {"link": "", "title": "Performance engineering survey: Findings from 400 dev, test, and it ops professionals"}, {"link": "", "title": "Using aspect-oriented programming for trustworthy software development"}, {"link": "", "title": "Aspectj"}, {"link": "", "title": "Android documentation"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "/document/7194581", "title": "Iccta: Detecting Inter-Component Privacy Leaks in Android Apps"}, {"link": "", "title": "Mopeye: Opportunistic monitoring of per-app mobile network performance"}, {"link": "/document/8057166", "title": "Is what you measure what you expect? factors affecting smartphone-based mobile network measurement"}, {"link": "", "title": "Appinsight: Mobile app performance monitoring in the wild"}, {"link": "", "title": "User interaction-based profiling system for android application tuning"}, {"link": "/document/7404721", "title": "Androidperf: A cross-layer profiling system for android applications"}, {"link": "", "title": "Diagdroid: Android performance diagnosis via anatomizing asynchronous executions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952393"}
{"ref": [{"link": "", "title": "DLint: Dynamically Checking Bad Coding Practices in JavaScript"}, {"link": "/document/6240483", "title": "Do Static Type Systems Improve the Maintainability of Software Systems? An Empirical Study"}, {"link": "", "title": "An empirical study of the influence of static type systems on the usability of undocumented software"}, {"link": "", "title": "Empirical Analysis of Programming Language Adoption"}, {"link": "", "title": "A Large Scale Study of Programming Languages and Code Quality in Github"}, {"link": "/document/7985711", "title": "To Type or Not to Type: Quantifying Detectable Bugs in JavaScript"}, {"link": "", "title": "Python Predictive Analysis for Bug Detection"}, {"link": "", "title": "Evaluating the dynamic behaviour of Python applications"}, {"link": "", "title": "A Study on the Changes of Dynamic Feature Code when Fixing Bugs: Towards the Benefits and Costs of Python Dynamic Features"}, {"link": "/document/4602670", "title": "Using Static Analysis to Find Bugs"}, {"link": "", "title": "A Few Billion Lines of Code Later: Using Static Analysis to Find Bugs in the Real World"}, {"link": "", "title": "Why Don\u2019t Software Developers Use Static Analysis Tools to Find Bugs"}, {"link": "/document/7476667", "title": "Analyzing the State of Static Analysis: A Large-Scale Evaluation in Open Source Systems"}, {"link": "/document/8115668", "title": "Why and How JavaScript Developers Use Linters"}, {"link": "", "title": "Randoop: Feedback-Directed Random Testing for Java"}, {"link": "", "title": "EvoSuite: Automatic Test Suite Generation for Object-Oriented Software"}, {"link": "", "title": "Java Unit Testing Tool Competition: Sixth Round"}, {"link": "/document/7102595", "title": "JSEFT: Automated JavaScript Unit Test Generation"}, {"link": "", "title": "A Framework for Automated Testing of JavaScript Web Applications"}, {"link": "", "title": "SymJS: Automatic Symbolic Testing of JavaScript Web Applications"}, {"link": "", "title": "RPython: AStep Towards Reconciling Dynamically and Statically Typed OO Languages"}, {"link": "", "title": "A Static Type Inference for Python"}, {"link": "", "title": "Understanding TypeScript"}, {"link": "", "title": "Python Probabilistic Type Inference with Natural Language Support"}, {"link": "", "title": "Recognizing Potential Runtime Types from Python Docstrings"}, {"link": "", "title": "Deep Learning Type Inference"}, {"link": "/document/8811893", "title": "NL2Type: Inferring JavaScript Function Types from Natural Language Information"}, {"link": "", "title": "Static Analyses in Python Programming Courses"}, {"link": "", "title": "Understanding Metric-based Detectable Smells in Python Software: A Comparative Study"}, {"link": "", "title": "Combined Static and Dynamic Analysis"}, {"link": "", "title": "Combined Static and Dynamic Automated Test Generation"}, {"link": "", "title": "Combined Static and Dynamic Mutability Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952500"}
{"ref": [{"link": "/document/8539073", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "", "title": "Tensorfuzz: Debugging neural networks with coverage-guided fuzzing"}, {"link": "", "title": "Coverage-guided fuzzing for deep neural networks"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Deepstellar: model-based quantitative analysis of stateful deep learning systems"}, {"link": "", "title": "Diffchaser: Detecting disagreements for deep neural networks"}, {"link": "", "title": "Deepct: Tomographic combinatorial testing for deep learning systems"}, {"link": "/document/8812069", "title": "Guiding deep learning system testing using surprise adequacy"}, {"link": "/document/8812047", "title": "Adversarial sample detection for deep neural network through model mutation testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952248"}
{"ref": [{"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Tensorflow: Large-scale machine learning on heterogeneous distributed systems"}, {"link": "/document/8431960", "title": "Munn: Mutation analysis of neural networks"}, {"link": "", "title": "Lenet-5, convolutional neural networks"}, {"link": "/document/6296535", "title": "The mnist database of handwritten digit images for machine learning research [best of the web]"}, {"link": "", "title": "Very deep convolutional networks for large-scale image recognition"}, {"link": "", "title": "The cifar-10 dataset"}, {"link": "/document/8022871", "title": "Activ is: Visual exploration of industry-scale deep neural network models"}, {"link": "", "title": "An interactive node-link visualization of convolutional neural networks"}, {"link": "", "title": "Visual interpretability for deep learning: a survey"}, {"link": "", "title": "Object detectors emerge in deep scene cnns"}, {"link": "", "title": "Neuronblocks\u2013building your nlp dnn models like playing lego"}, {"link": "", "title": "Deepgini: Prioritizing massive tests to reduce labeling cost"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952427"}
{"ref": [{"link": "/document/6498452", "title": "An exploratory study of cloning in industrial software productlines"}, {"link": "", "title": "An exploratory study of thepull-based software development model"}, {"link": "", "title": "Social coding in github:transparency and collaboration in an open software repository"}, {"link": "", "title": "The ghtorent dataset and toolsuite"}, {"link": "", "title": "Three cases of feature-based variability modeling in industry"}, {"link": "", "title": "Identifying features in forks"}, {"link": "", "title": "What the fork: A study of inefficient and efficient forking practices in social coding"}, {"link": "", "title": "Almostthere: A study on quasi-contributors in open-source software projects"}, {"link": "", "title": "Forked and IntegratedVariants in an Open-Source Firmware Project"}, {"link": "", "title": "Almost there:A study on quasi-contributors in open-source software projects"}, {"link": "", "title": "Longitudinal analysis of collaboration in forked opensource software development projects"}, {"link": "", "title": "Social forking in open sourcesoftware: An empirical study"}, {"link": "", "title": "Awareness 2-0: staying aware of projects,developers and tasks using dashboards and feeds"}, {"link": "", "title": "Identifying redundanciesin fork-based development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952395"}
{"ref": [{"link": "", "title": "Links between the personalities, views and attitudes of software engineers"}, {"link": "", "title": "Emotion dynamics"}, {"link": "", "title": "Affective influences on the attentional dynamics supporting awareness"}, {"link": "", "title": "The psychology of emotion: morbid and normal"}, {"link": "", "title": "The relation between short-term emotion dynamics and psychological well-being: A meta-analysis"}, {"link": "", "title": "What\u2019s basic about basic emotions?"}, {"link": "", "title": "Are there basic emotions?"}, {"link": "", "title": "Sentistrength-se: Exploiting domain specificity for improved sentiment analysis in software engineering text"}, {"link": "", "title": "Sentiment polarity detection for software development"}, {"link": "", "title": "Seemo: A computational approach to see emotions"}, {"link": "/document/8272591", "title": "Emotxt: a toolkit for emotion recognition from text"}, {"link": "", "title": "Crowdsourcing a word-emotion association lexicon"}, {"link": "", "title": "Mood as representation of momentum"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952358"}
{"ref": [{"link": "", "title": "Climbing the Software Assurance Ladder - Practical Formal Verifcation for Reliable Software"}, {"link": "", "title": "Specification and Verification: The Spec# Experience"}, {"link": "", "title": "Lessons Learned From Microkernel Verification \u2013 Specification is the New Bottleneck"}, {"link": "", "title": "Automated Theorem Proving in Software Engineering"}, {"link": "", "title": "Understanding Parameters of Deductive Verification: An Empirical Investigation of KeY"}, {"link": "", "title": "Software Considerations in Airborne Systems and Equipment Certification"}, {"link": "", "title": "Model-Based Development and Verification Supplement to DO-178C and DO-278A"}, {"link": "", "title": "Formal Methods Supplement to DO-178C and DO-278A"}, {"link": "/document/1638022", "title": "Simultaneous localization and mapping: part I"}, {"link": "/document/1678144", "title": "Simultaneous localization and mapping (SLAM): part II"}, {"link": "", "title": "Automated Deduction \u2014 A Basis for Applications: Volume III Applications"}, {"link": "/document/4760152", "title": "Common Trends in Software Fault and Failure Data"}, {"link": "", "title": "Rapid Quality Assurance with Requirements Smells"}, {"link": "/document/1245428", "title": "Higher Quality Requirements Specifications through Natural Language Patterns"}, {"link": "", "title": "A Framework to Measure and Improve the Quality of Textual Requirements"}, {"link": "/document/7029714", "title": "Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar"}, {"link": "", "title": "Logic in Computer Science: Modelling and Reasoning About Systems"}, {"link": "", "title": "Unified Modeling Language Reference Manual, The 2Nd Edition"}, {"link": "", "title": "A Practical Guide to SysML: Systems Modeling Language"}, {"link": "", "title": "Graph Transformations and Model-Driven Engineering"}, {"link": "", "title": "Model-Based Engineering with AADL: An Introduction to the SAE Architecture Analysis & Design Language"}, {"link": "", "title": "Component Software: Beyond Object-Oriented Programming"}, {"link": "", "title": "Specification and Development of Interactive Systems: Focus on Streams, Interfaces, and Refinement"}, {"link": "/document/6471965", "title": "Testing or Formal Verification: DO-178C Alternatives and Industrial Experience"}, {"link": "", "title": "Embedded Contract Languages"}, {"link": "", "title": "Building High Integrity Applications with SPARK"}, {"link": "", "title": "Mining software specifications: Methodologies and applications"}, {"link": "/document/5197425", "title": "Data Mining for Software Engineering"}, {"link": "", "title": "Mining Specifications"}, {"link": "/document/7371998", "title": "General LTL Specification Mining"}, {"link": "", "title": "Inductive Logic Programming"}, {"link": "", "title": "Inverse Entailment and Progol"}, {"link": "", "title": "Automated Theory Formation in Mathematics"}, {"link": "", "title": "Automated Theory Formation in Pure Mathematics"}, {"link": "", "title": "Formal Verification of Quasi-Synchronous Systems"}, {"link": "", "title": "Experimentation in Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952397"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Practical pluggable types for Java"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "A few billion lines of code later: using static analysis to find bugs in the real world"}, {"link": "", "title": "Crysl: An extensible approach to validating the correct usage of cryptographic apis"}, {"link": "", "title": "Cryptoguard: High precision detection of cryptographic vulnerabilities in massive-sized java projects"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952221"}
{"ref": [{"link": "", "title": "What do programmers really do anyway"}, {"link": "/document/5463344", "title": "Can development work describe itself?\u201d"}, {"link": "/document/7190080", "title": "BOA: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "A neural architecture for generating natural language descriptions from source code changes"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Neural- machine-translation-based commit message generation: how far are we?\u201d"}, {"link": "", "title": "BLEU: a method for automatic evaluation of machine translation"}, {"link": "/document/8667994", "title": "A neural model for method name generation from functional description"}, {"link": "/document/8813290", "title": "Neural detection of semantic code clones via tree-based convolution"}, {"link": "/document/6086533", "title": "An approach to source-code plagiarism detection and investigation using latent semantic analysis"}, {"link": "", "title": "Semantic clustering: Identifying topics in source code"}, {"link": "", "title": "Deep code comment genera- tion"}, {"link": "", "title": "A file comparison program"}, {"link": "", "title": "Tracking source locations"}, {"link": "/document/4721183", "title": "Tracking your changes: A language-independent approach"}, {"link": "/document/6676894", "title": "Lhdiff: A language-independent hybrid approach for tracking source code lines"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "/document/4656419", "title": "Diff/ts: A tool for fine-grained structural change analysis"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/8115664", "title": "Generating simpler ast edit scripts by considering copy-and-paste"}, {"link": "", "title": "Move-optimized source code tree differencing"}, {"link": "", "title": "Cldiff: generating concise linked code differences"}, {"link": "/document/7203049", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "/document/7551998", "title": "On automatic summarization of what and why information in source code changes"}, {"link": "/document/1342719", "title": "A differencing algo- rithm for object-oriented programs"}, {"link": "", "title": "Umldiff: an algorithm for object-oriented design differencing"}, {"link": "/document/6976116", "title": "Dynamic inference of change contracts"}, {"link": "/document/7190168", "title": "Why did this code change?\u201d"}, {"link": "", "title": "Automatic generation of release notes"}, {"link": "/document/7513412", "title": "Arena: an approach for the automated generation of release notes"}, {"link": "/document/8170128", "title": "Mining version control system for automatically generating commit comment"}, {"link": "/document/4021317", "title": "Reverse engineering method stereotypes"}, {"link": "/document/6080822", "title": "Using stereotypes to help characterize commits"}, {"link": "", "title": "Nematus: a toolkit for neural machine translation"}, {"link": "", "title": "Edinburgh neural machine translation systems for wmt 16"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952539"}
{"ref": [{"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "Training deep neural networks with low precision multiplications"}, {"link": "/document/8425212", "title": "Do Developers Understand IEEE Floating Point?"}, {"link": "", "title": "Handling floating-point exceptions in numeric programs"}, {"link": "", "title": "Relational abstract domains for the detection of floating-point run-time errors"}, {"link": "", "title": "CUDA C Programming Guide"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952258"}
{"ref": [{"link": "/document/6226995", "title": "Pivot: Project insights and visualization toolkit"}, {"link": "/document/6619341", "title": "Cdi: Cost of development index"}, {"link": "/document/6619332", "title": "Adoption and use of new metrics in a large organization: A case study"}, {"link": "/document/7577421", "title": "Agile workbench: Tying people, process, and tools in distributed agile delivery"}, {"link": "/document/7426640", "title": "An automated contextual collaboration approach for distributed agile delivery"}, {"link": "/document/7961477", "title": "What do developers want? an advisor approach for developer priorities"}, {"link": "/document/8823628", "title": "A smart advisor for software delivery \u2013 a bot framework for awareness, alerts and advice"}, {"link": "/document/8816870", "title": "An extended reality approach for creating immersive software project workspaces"}, {"link": "", "title": "An immersive future for software engineering: Avenues and approaches"}, {"link": "/document/7426629", "title": "Software development analytics: Experiences and the way forward"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952441"}
{"ref": [{"link": "", "title": "Feature-Oriented Software Product Lines"}, {"link": "", "title": "What programmers really do - An observational study"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "", "title": "Integrating information retrieval, execution and link analysis algorithms to improve feature location in software"}, {"link": "", "title": "A diagnosis-based approach to software comprehension"}, {"link": "", "title": "Framing program comprehension as fault localization"}, {"link": "/document/6650539", "title": "Using HTML5 visualizations in software fault localization"}, {"link": "", "title": "Gzoltar: an eclipse plug-in for testing and debugging"}, {"link": "/document/6688890", "title": "Cues for scent intensification in debugging"}, {"link": "/document/6676901", "title": "Improving feature location by enhancing source code with stereotypes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952297"}
{"ref": [{"link": "", "title": "Susi: A tool for the fully automated classification and categorization of android sources and sinks"}, {"link": "", "title": "Automatic detection of sources and sinks in arbitrary java libraries"}, {"link": "/document/7972713", "title": "The soot-based toolchain for analyzing android apps"}, {"link": "", "title": "Data Mining, Fourth Edition: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "Codebase-adaptive detection of security-relevant methods"}, {"link": "", "title": "Jsonsimple"}, {"link": "", "title": "Gene expression atlas"}, {"link": "", "title": "Joanaudit: A tool for auditing common injection vulnerabilities"}, {"link": "", "title": "Merlin: Specification inference for explicit information flow problems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952264"}
{"ref": [{"link": "", "title": "CNCF Serverless whitepaper"}, {"link": "/document/7980271", "title": "Serverless programming (function as a service)"}, {"link": "/document/8457830", "title": "Evaluation of production serverless computing environments"}, {"link": "", "title": "AWS Serverless Multi-Tier Architectures; Using Amazon API Gateway and AWS Lambda"}, {"link": "", "title": "Serverless computing: Current trends and open problems"}, {"link": "/document/7912239", "title": "Be wary of the economics of\u201d Serverless\u201d Cloud Computing"}, {"link": "", "title": "Terraform: Up and running: Writing infrastructure as code"}, {"link": "", "title": "Overview of Deployment Options on AWS"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952482"}
{"ref": [{"link": "", "title": "\u201cMarkov decision processes: Discrete stochastic dynamic programming (martin l. puterman)"}, {"link": "", "title": "\u201cCounterexample explanation by learning small strategies in markov decision processes,\u201d"}, {"link": "", "title": "Machine learning, ser. McGraw Hill series in computer science. McGraw-Hill, 1997"}, {"link": "", "title": "\u201cHigh-level counterexamples for probabilistic automata,\u201d"}, {"link": "", "title": "Theory of Linear and Integer Program- ming"}, {"link": "", "title": "\u201cPRISM 4.0: Verification of probabilistic real-time sys- tems,\u201d"}, {"link": "", "title": "Reactive Systems: Modelling, Specification and Verifica- tion"}, {"link": "", "title": "\u201cStrategy representation by decision trees in reactive synthesis,\u201d"}, {"link": "", "title": "\u201cSos: Safe, optimal and small strategies for stochastic hybrid games"}, {"link": "", "title": "\u201cSafe and optimal adaptive cruise control"}, {"link": "/document/926280", "title": "\u201cStability of limit cycles in hybrid systems,\u201d"}, {"link": "", "title": "Inductive Logic Programming"}, {"link": "", "title": "\u201cHHCART: an oblique decision tree,\u201d"}, {"link": "", "title": ""}, {"link": "", "title": "\u201cRoot contention in IEEE 1394,\u201d"}, {"link": "", "title": "\u201cPerformance analysis of probabilistic timed automata using digital clocks"}, {"link": "", "title": "\u201cStrategy representation by decision trees with linear classifiers,\u201d unpublished"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952374"}
{"ref": [{"link": "", "title": "5G Internet of Things: A Survey"}, {"link": "/document/8421013", "title": "Heterogeneous Online Learning for \u201cThing-Adaptive\u201d Fog Computing in IoT"}, {"link": "", "title": "Enabling Technologies for Fog Computing in Healthcare IoT Systems"}, {"link": "/document/8004153", "title": "A Hierarchical Game Framework for Resource Management in Fog Computing"}, {"link": "", "title": "Energy Efficient Multi-Resource Computation Offloading Strategy in Mobile Edge Computing"}, {"link": "/document/6606698", "title": "Selecting Checkpoints along the Time Line: a Novel Temporal Checkpoint Selection Strategy for Monitoring a Batch of Parallel Business Processes"}, {"link": "", "title": "An automated collaborative requirements engineering tool for better validation of requirements"}, {"link": "", "title": "CloudSim: A Toolkit for Modeling and Simulation of Cloud Computing Environments and Evaluation of Resource Provisioning Algorithms"}, {"link": "/document/6404430", "title": "WorkflowSim: A Toolkit for Simulating Scientific Workflows in Distributed Environments"}, {"link": "", "title": "iFogSim: A toolkit for Modeling and Simulation of Resource Management Techniques in the Internet of Things, Edge and Fog Computing Environments"}, {"link": "", "title": "WorkflowGenerator"}, {"link": "/document/7447606", "title": "An Energy-Optimal Offloading Algorithm of Mobile Computing Based on HetNets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952516"}
{"ref": [{"link": "/document/7792435", "title": "\u201cAnastasia: Android malware detection using static analysis of applications,\u201d"}, {"link": "", "title": "\u201cSafedroid: Using structural features for detecting android malwares,\u201d"}, {"link": "", "title": "\u201cGraph-based malware detection using dynamic analysis,\u201d"}, {"link": "", "title": "The Java native interface: programmer's guide and specification"}, {"link": "", "title": "\u201cAndroid malware classification method: Dalvik bytecode frequency analysis,\u201d"}, {"link": "", "title": "Deep Learning, ser. Adaptive computation and machine learning"}, {"link": "", "title": "\u201cTensorflow: A system for largescale machine learning,\u201d"}, {"link": "", "title": "\u201cDeep android malware detection,\u201d"}, {"link": "", "title": "\u201cCharacter-level convolutional networks for text classification"}, {"link": "/document/8465540", "title": "\u201cQuick and accurate android malware detection based on sensitive apis,\u201d"}, {"link": "/document/8560733", "title": "\u201cRepassdroid: Automatic detection of android malware based on essential permissions and semantic features of sensitive apis,\u201d"}, {"link": "", "title": "\u201cMalware images: visualization and automatic classification,\u201d"}, {"link": "", "title": "Sigmoid functional responses by invertebrate predators and parasitoids"}, {"link": "", "title": "Pillow (pil fork)"}, {"link": "", "title": "Deep ground truth analysis of current android malware"}, {"link": "", "title": "A stochastic approximation method"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "/document/8293854", "title": "Android malware familial classification and representative sample selection via frequent subgraph analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952484"}
{"ref": [{"link": "", "title": "Iterative context bounding for systematic testing of multithreaded programs"}, {"link": "", "title": "Concurrency attacks"}, {"link": "", "title": "Fasttrack: Efficient and precise dynamic race detection"}, {"link": "/document/8416485", "title": "Owl: Understanding and detecting concurrency attacks"}, {"link": "", "title": "Effective data-race detection for the kernel"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "", "title": "Predicting null-pointer de in concurrent programs"}, {"link": "", "title": "Ufo: Predictive concurrency use-after-free detection"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Sound deadlock prediction"}, {"link": "/document/6547101", "title": "Sok: Eternal war in memory"}, {"link": "", "title": "Detecting concurrency memory corruption vulnerabilities"}, {"link": "", "title": "Undangle: early detection of dangling pointers in use-after-free and double-free vulnerabilities"}, {"link": "", "title": "Helgrind: a thread error detector"}, {"link": "", "title": "Threadsanitizer: Data race detection in practice"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952233"}
{"ref": [{"link": "", "title": "The cost of poor quality software in the us: A 2018 report"}, {"link": "", "title": "CVE-2016-2108"}, {"link": "/document/8367044", "title": "Finding substitutable binary code for reverse engineering by synthesizing adapters"}, {"link": "", "title": "Finding substitutable binary code by synthesizing adapters"}, {"link": "", "title": "Finding substitutable binary code by synthesizing adapters"}, {"link": "", "title": "Superoptimizer: A look at the smallest program"}, {"link": "", "title": "Denali: A goal-directed superoptimizer"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "The superdiversifier: Peephole individualization for software protection"}, {"link": "", "title": "A deductive approach to program synthesis"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Automatic software repair: A survey"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "/document/7552008", "title": "Automated program repair by using similar code containing fix ingredients"}, {"link": "/document/6643409", "title": "Does genetic programming work well on automated program repair?"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "/document/7194596", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Codeflaws: A programming competition benchmark for evaluating automated program repair tools"}, {"link": "/document/7965318", "title": "How developers debug software the dbgbench dataset: Poster"}, {"link": "/document/7153570", "title": "The manybugs and introclass benchmarks for automated repair of c programs"}, {"link": "", "title": "DARPA Challenge Binaries on Linux, OS X, and Windows"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952199"}
{"ref": [{"link": "", "title": "SDExplorer: A generic toolkit for smoothly exploring massive-scale sequence diagram"}, {"link": "", "title": "Visualization of message passing in an embedded system"}, {"link": "", "title": "Java Pathfinder at SV-COMP 2019 (competition contribution)"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Deterministic replay of Java multithreaded applications"}, {"link": "", "title": "Communicating sequential processes"}, {"link": "", "title": "Illuminating the Path: The Research and Development Agenda for Visual Analytics"}, {"link": "", "title": "jpf-visual"}, {"link": "", "title": "jpf-shell"}, {"link": "", "title": "Visual analytics tool for Java virtual machine execution traces"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "High-Level Data Races"}, {"link": "", "title": "VA4JVM"}, {"link": "", "title": "An overview of AspectJ"}, {"link": "/document/5406531", "title": "Aspect-oriented race detection in Java"}, {"link": "", "title": "The Java memory model"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing` integration faults"}, {"link": "", "title": "Advances and challenges in log analysis"}, {"link": "/document/7458761", "title": "DevOps"}, {"link": "", "title": "OverOps, The OverOps AIOps Platform"}, {"link": "", "title": "Zipkin, OpenZipkin: A distributed tracing system"}, {"link": "", "title": "Debugging distributed systems"}, {"link": "", "title": "The LTTng tracer: A low impact performance and behavior monitor for GNU / Linux"}, {"link": "", "title": "TraceCompass"}, {"link": "", "title": "APP4MC: application platform project for multi- and many-core systems"}, {"link": "", "title": "Test execution logging and visualisation techniques"}, {"link": "", "title": "Analysis of test log information through interactive visualizations"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Using HTML5 visualizations in software fault localization"}, {"link": "/document/6100141", "title": "Guided test visualization: Making sense of errors in concurrent programs"}, {"link": "/document/4291176", "title": "Visualization of concurrent program executions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952488"}
{"ref": [{"link": "", "title": "Continuous integration: improving software quality| and reducing risk"}, {"link": "/document/7194567", "title": "Automated decomposition of build targets"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "", "title": "Hirebuild: An automatic approach to history-driven repair of build scripts"}, {"link": "/document/7962393", "title": "Travistorrent: Synthesizing travis ci and github for full-stack research on continuous integration"}, {"link": "", "title": "Programmers\u2019 build errors: A case study (at google)"}, {"link": "", "title": "A quantitative study of java software buildability"}, {"link": "", "title": "A Large-Scale Empirical Study of the Relationship between Build Technology and Build Maintenance"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/6606626", "title": "Automatic Patch Generation Learned from Human-written Patches"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/7965329", "title": "Mining readme files to support automatic building of java projects in software repositories"}, {"link": "/document/7081841", "title": "Cross-project build co-change prediction"}, {"link": "", "title": "Predicting software build errors"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? - more accurate information retrieval-based bug localization based on bug reports"}, {"link": "/document/8170083", "title": "Automatic building of java projects in software repositories: A study on feasibility and challenges"}, {"link": "/document/8170096", "title": "Change-aware build prediction model for stall avoidance in continuous integration"}, {"link": "/document/7965329", "title": "Mining readme files to support automatic building of java projects in software repositories"}, {"link": "", "title": "Hirebuild: An automatic approach to history-driven repair of build scripts"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952416"}
{"ref": [{"link": "", "title": "How to design a good API and why it matters"}, {"link": "", "title": "A systematic approach to API usability: Taxonomy-derived criteria and a case study"}, {"link": "", "title": "API Design for C++"}, {"link": "", "title": "The implications of method placement on API learnability"}, {"link": "", "title": "API peer reviews: A method for evaluating usability of application programming interfaces"}, {"link": "", "title": "API design reviews at scale"}, {"link": "/document/8506523", "title": "API designers in the field: Design practices and challenges for creating usable APIs"}, {"link": "", "title": "Collect GeometrySystem \u2192 drake_visualizer boilerplate by SeanCurtis-TRI pull request #8526 RobotLocomotion/drake"}, {"link": "", "title": "Reduce boilerplate for subclasses issue #172 parse-community/Parse-SDK-Android"}, {"link": "", "title": "Can java help me avoid boilerplate code in equals()?"}, {"link": "", "title": "Boilerplate code definition of stackoverflow"}, {"link": "", "title": "Boilerplate code definition of wikipedia"}, {"link": "", "title": "Practical API design: Confessions of a Java framework architect"}, {"link": "", "title": "How to avoid writing duplicate boilerplate code for requesting permissions"}, {"link": "/document/8952239", "title": "Marble: Mining for boilerplate code to identify API usability problems"}, {"link": "", "title": "Parameter-free probabilistic API mining across GitHub"}, {"link": "", "title": "Tree edit distance: Robust and memoryefficient"}, {"link": "", "title": "Android API 26 release note"}, {"link": "", "title": "Spring framework"}, {"link": "", "title": "Butterknife"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952241"}
{"ref": [{"link": "", "title": "Manticore Documentation"}, {"link": "", "title": "Mythril Classic"}, {"link": "", "title": "A survey of symbolic execution techniques"}, {"link": "", "title": "An empirical analysis of smart contracts: platforms, applications, and design patterns"}, {"link": "", "title": "Select \u2013 a formal system for testing and debugging programs by symbolic execution"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Cyber Grand Challenge"}, {"link": "/document/7476691", "title": "Binsec/se: A dynamic symbolic execution toolkit for binary-level analysis"}, {"link": "", "title": "Higher-order test generation"}, {"link": "", "title": "DeepState: Symbolic unit testing for C and C++"}, {"link": "", "title": "Kevm: A complete semantics of the ethereum virtual machine"}, {"link": "", "title": "Security assessment \u2013 sai. appendix d: Manticore test case"}, {"link": "", "title": "Security assessment \u2013 ampleforth. appendix f: Manticore formal verification"}, {"link": "", "title": "Security assessment \u2013 gemini"}, {"link": "", "title": "Security assessment \u2013 paxos. appendix c: Manticore testing"}, {"link": "", "title": "Security assessment \u2013 golem. appendix d: Manticore formal verification"}, {"link": "", "title": "Verx: Safety verification of smart contracts"}, {"link": "/document/7546500", "title": "SoK: (State of) The Art of War: Offensive Techniques in Binary Analysis"}, {"link": "", "title": "Benchmarking the capability of symbolic execution tools with logic bombs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952204"}
{"ref": [{"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/7372014", "title": "Codehow: Effective code search based on API understanding and extended boolean model"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "FaCoY-a code-to-code search engine"}, {"link": "", "title": "Sourcerercc: Scaling code clone detection to big-code"}, {"link": "/document/8719437", "title": "SLAMPA: Recommending code snippets with statistical language model"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code"}, {"link": "", "title": ""}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Topic-sensitive pagerank"}, {"link": "", "title": ""}, {"link": "", "title": "Bert: Pre-training of deep bidirectional transformers for language understanding"}, {"link": "", "title": "Debugging method names"}, {"link": "/document/8094426", "title": "Cclearner: A deep learning-based clone detection approach"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952168"}
{"ref": [{"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "Enabling mutation testing for android apps"}, {"link": "/document/7528952", "title": "An experimental evaluation of web mutation operators"}, {"link": "", "title": "Automated testing for sql injection vulnerabilities: an input mutation approach"}, {"link": "", "title": "Mutode: generic javascript and node.js mutation testing tool"}, {"link": "", "title": "Pit"}, {"link": "", "title": "Mdroid+: A mutation testing framework for android"}, {"link": "/document/7107450", "title": "Towards mutation analysis of android apps"}, {"link": "", "title": "Mutation operators for testing android apps"}, {"link": "/document/8645883", "title": "Edroid: A mutation tool for android apps"}, {"link": "/document/8728917", "title": "Testing when mobile apps go to background and come back to foreground"}, {"link": "", "title": "miudroid: An energy-aware mutation testing framework for android"}, {"link": "", "title": "mudroid project at github"}, {"link": "", "title": "Mutapk"}, {"link": "", "title": "Uber apk signer"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952526"}
{"ref": [{"link": "/document/8816786", "title": "World of Code: An Infrastructure for Mining the Universe of Open Source VCS Data"}, {"link": "", "title": "ALFAA: Active Learning Fingerprint Based Anti-Aliasing for Correcting Developer Identity Errors in Version Control Data"}, {"link": "/document/1007994", "title": "Expertise browser: a quantitative approach to identifying expertise"}, {"link": "/document/8816759", "title": "Characterizing the Roles of Contributors in Open-source Scientific Software Projects"}, {"link": "", "title": "Discovery of technical expertise from open source code repositories"}, {"link": "", "title": "Involvement, contribution and influence in GitHub and stack overflow"}, {"link": "", "title": "Impact of developer reputation on code review outcomes in oss projects: An empirical investigation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952390"}
{"ref": [{"link": "", "title": "Modeling of the question answering task in` the yodaqa system"}, {"link": "", "title": "Freebase: a collaboratively created graph database for structuring human knowledge"}, {"link": "", "title": "Constructing a knowledge base of coding conventions from online resources (S)"}, {"link": "", "title": "An empirical comparison of simple domain adaptation methods for neural machine translation"}, {"link": "/document/8085196", "title": "Answering natural language questions by subgraph matching over knowledge graphs"}, {"link": "", "title": "The stanford corenlp natural language processing toolkit"}, {"link": "", "title": "Ms marco: A human generated machine reading comprehension dataset"}, {"link": "", "title": "Question answering over freebase via attentive rnn with similarity matrix based cnn"}, {"link": "", "title": "Squad: 100,000+ questions for machine comprehension of text"}, {"link": "", "title": "Neural architecture for question answering using a knowledge graph and web corpus"}, {"link": "", "title": "Yago: a core of semantic knowledge"}, {"link": "", "title": "Pointer networks"}, {"link": "", "title": "Learning natural language inference with lstm"}, {"link": "", "title": "Machine comprehension using match-lstm and answer pointer"}, {"link": "", "title": "Question answering over knowledge graphs: question understanding via template decomposition"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952314"}
{"ref": [{"link": "", "title": "Bitcoin: A peer-to-peer electronic cash system"}, {"link": "", "title": "Libra white paper"}, {"link": "", "title": "Ethereum white paper: A next-generation smart contract and decentralized application platform"}, {"link": "", "title": "Blockchain challenges and opportunities: A survey"}, {"link": "/document/8668020", "title": "Towards generating cost-effective test-suite for Ethereum smart contract"}, {"link": "", "title": "Mutation testing advances: An analysis and survey"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}, {"link": "", "title": "Injecting mechanical faults to localize developer faults for evolving software"}, {"link": "", "title": "Metallaxis-FL: Mutation-based fault localization"}, {"link": "", "title": "Transforming programs and tests in tandem for fault localization"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "/document/5477098", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "PIT: A practical mutation testing tool for java"}, {"link": "", "title": "Assessment of class mutation operators for C++ with the MuCPP mutation system"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Solidity docs"}, {"link": "/document/6569719", "title": "Efficient javascript mutation testing"}, {"link": "", "title": "Mutation testing for ethereum smart contract"}, {"link": "", "title": "Truffle, a development environment, testing framework and asset pipeline for Ethereum"}, {"link": "", "title": "solidity-parser-antlr, a solidity parser built on top of a robust antlr4 grammar"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952206"}
{"ref": [{"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "", "title": "N-way Model Merging"}, {"link": "", "title": "Facilitating Reuse in Multi-goal Test-Suite Generation for Software Product Lines"}, {"link": "", "title": "Automated N-way Program Merging for Facilitating Family-based Analyses of Variantrich Software"}, {"link": "", "title": "CPAchecker: A Tool for Configurable Software Verification"}, {"link": "/document/1317455", "title": "Generating tests from counterexamples"}, {"link": "", "title": "From Imprecise N-Way Model Matching to Precise N-Way Model Merging"}, {"link": "/document/6958392", "title": "A Method to Evaluate CFG Comparison Algorithms"}, {"link": "", "title": "A survey on model versioning approaches"}, {"link": "", "title": "Consistent merging of model versions"}, {"link": "", "title": "Automated Model Merge by Design Space Exploration"}, {"link": "/document/7372028", "title": "Automating the Extraction of Model-Based Software Product Lines from Model Variants"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952245"}
{"ref": [{"link": "", "title": "The next release problem"}, {"link": "", "title": "Simulating and optimising design decisions in quantitative goal models"}, {"link": "", "title": "Uncertainty, risk, and information value in software requirements and architecture"}, {"link": "", "title": "Thinking, fast and slow"}, {"link": "/document/142871", "title": "Representing and using nonfunctional requirements: A process-oriented approach"}, {"link": "", "title": "Modelling trust for system design using the i* strategic actors framework"}, {"link": "/document/919103", "title": "Quantifying the costs and benefits of architectural decisions"}, {"link": "", "title": "Product Release Planning: Methods, Tools and Applications"}, {"link": "", "title": "A systematic review of software requirements selection and prioritization using sbse approaches"}, {"link": "", "title": "Optimal selection of operationalizations for non-functional requirements"}, {"link": "", "title": "Automating trade-off analysis of security requirements"}, {"link": "", "title": "Reasoning about partial goal satisfaction for requirements and design engineering"}, {"link": "/document/1704057", "title": "Feature diagrams: A survey and a formal semantics"}, {"link": "", "title": "Radar: A lightweight tool for requirements and architecture decision analysis"}, {"link": "", "title": "Uncertain judgements: eliciting experts' probabilities"}, {"link": "/document/4082064", "title": "Information value theory"}, {"link": "", "title": "Need for speed: an efficient algorithm for calculation of single-parameter expected value of partial perfect information"}, {"link": "", "title": "About computing science research methodology"}, {"link": "/document/6152130", "title": "Systematic elaboration of scalability requirements through goal-obstacle analysis"}, {"link": "", "title": "Performance criteria for plastic card fraud detection tools"}, {"link": "/document/7310818", "title": "Improving security policy decisions with models"}, {"link": "/document/6606550", "title": "Guidearch: guiding the exploration of architectural solution space under uncertainty"}, {"link": "/document/1201237", "title": "Quantifying the value of architecture design decisions: lessons from the field"}, {"link": "", "title": "Making architecture design decisions: An economic approach"}, {"link": "", "title": "Scalability analysis of the RADAR decision support tool"}, {"link": "", "title": "A fast elitist nondominated sorting genetic algorithm for multi-objective optimization: Nsga-ii"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115725"}
{"ref": [{"link": "", "title": "Arminer: Mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "", "title": "Mining user opinions in mobile app reviews: A keyword-based approach"}, {"link": "", "title": "Some methods for classification and analysis of multivariate observations"}, {"link": "", "title": "Mining whining in support forums with frictionary"}, {"link": "", "title": "Information needs in bug reports: Improving cooperation between developers and users"}, {"link": "", "title": "Ausum: Approach for unsupervised bug report summarization"}, {"link": "", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "A recommender system of buggy app checkers for app store moderators"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372068"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693059"}
{"ref": [{"link": "", "title": "Dompletion: Dom-aware javascript code completion"}, {"link": "/document/7372022", "title": "Synthesizing web element locators"}, {"link": "", "title": "Firebug"}, {"link": "", "title": "Firepath"}, {"link": "", "title": "Getting started less.js"}, {"link": "", "title": "Selenium, browser automation framework"}, {"link": "", "title": "Crawling Ajax-based web applications through dynamic analysis of user interface state changes"}, {"link": "", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "Overview \u2013 google chrome"}, {"link": "", "title": "Phantomjs phantomjs"}, {"link": "", "title": "saltlab/dompletion"}, {"link": "", "title": "Sass: Syntactically awesome style sheets"}, {"link": "", "title": "Xpath checker"}, {"link": "", "title": "Xpath helper"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372078"}
{"ref": [{"link": "", "title": "Bounded model checking of software using SMT solvers instead of SAT solvers"}, {"link": "", "title": "The SMT-LIB Standard: Version 2.0"}, {"link": "", "title": "Competition on software verification (SV-COMP)"}, {"link": "", "title": "Second competition on software verification (summary of SVCOMP 2013)"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "/document/5431777", "title": "SMT-based bounded model checking for embedded ANSI-C software"}, {"link": "", "title": "A theory of C-style memory allocation"}, {"link": "", "title": "Extending the theory of arrays: Memset, memcpy, and beyond"}, {"link": "", "title": "LLBMC: Improved bounded model checking of C programs using LLVM (competition contribution)"}, {"link": "", "title": "A theory of arrays with set and copy operations (extended abstract)"}, {"link": "", "title": "A decision procedure for bit-vectors and arrays"}, {"link": "", "title": "Efficient SAT-based bounded model checking for software verification"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "KLOVER: A symbolic execution and automatic test generation tool for C++ programs"}, {"link": "", "title": "LLBMC: Bounded model checking of C and C++ programs using a compiler IR"}, {"link": "/document/6601583", "title": "SMT-based bounded model checking of C++ programs"}, {"link": "", "title": "Practical, low-effort equivalence verification of real code"}, {"link": "", "title": "A precise memory model for low-level bounded model checking"}, {"link": "", "title": "LLBMC: A bounded model checker for LLVM's intermediate representation (competition contribution)"}, {"link": "", "title": "Development and evaluation of LAV: An SMT-based error finding platform"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693138"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115610"}
{"ref": [{"link": "", "title": "Object-Oriented Design Principles"}, {"link": "", "title": "Applying Design Principles in Practice"}, {"link": "", "title": "Basic Design Principles in Software Engineering"}, {"link": "", "title": ""}, {"link": "/document/926174", "title": "A controlled experiment for evaluating quality guidelines on the maintainability of object-oriented designs"}, {"link": "/document/6606640", "title": "MIDAS: A Design Quality Assessment Method for Industrial Software"}, {"link": "/document/6227106", "title": "The Quamoco product quality modelling and assessment approach"}, {"link": "", "title": "Operationalised product quality models and assessment: The Quamoco approach"}, {"link": "", "title": "Qualitative Content Analysis: Foundations and Techniques (Qualitative Inhaltsanalyse: Grundlagen und Techniken)"}, {"link": "", "title": "On the Validity of the IT-CISQ Quality Model for Automatic Measurement of Maintainability"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "/document/979986", "title": "A hierarchical model for object-oriented design quality assessment"}, {"link": "/document/941671", "title": "Detecting design flaws via metrics in object-oriented systems"}, {"link": "/document/1357820", "title": "Detection strategies: metrics-based rules for detecting design flaws"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372084"}
{"ref": [{"link": "", "title": "Developer Survey Results"}, {"link": "", "title": "New Node.js Foundation Survey Reports New \u2018Full Stack\u2019 In Demand Among Enterprise Developers"}, {"link": "", "title": "Mugshot: Deterministic Capture and Replay for JavaScript Applications"}, {"link": "", "title": "Node.fz: Fuzzing the Server-Side Event-Driven Architecture"}, {"link": "/document/8115663", "title": "A Comprehensive Study on Real World Concurrency Bugs in Node.js"}, {"link": "/document/7381845", "title": "Fast Reproducing Web Application Errors"}, {"link": "", "title": "Constraint-Based Event Trace Reduction"}, {"link": "", "title": "JavaScript Errors in the Wild: An Empirical Study"}, {"link": "/document/7501855", "title": "A Study of Causes and Consequences of Client-Side JavaScript Bugs"}, {"link": "", "title": "An Empirical Study of Client-side JavaScript Bugs"}, {"link": "", "title": "Learning from Mistakes - A Comprehensive Study on Real World Concurrency Bug Characteristics"}, {"link": "", "title": "TaxDC:A Taxonomy of Non-Deterministic Concurrency Bugs in Datacenter Distributed Systems"}, {"link": "", "title": "Scalable Race Detection for Android Applications"}, {"link": "", "title": "Race Detection for Event-driven Mobile Applications"}, {"link": "", "title": "Race Detection for Web Applications"}, {"link": "", "title": "ARROW: Automated Repair of Races on Client-Side Web Pages"}, {"link": "/document/6227158", "title": "Static Detection of Resource Contention Problems in Server-Side Scripts"}, {"link": "", "title": "Toward Generating Reducible Replay Logs"}, {"link": "", "title": "Dynamic Slicing Long Running Programs Through Execution Fast Forwarding"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-inducing Input"}, {"link": "", "title": "HDD: Hierarchical Delta Debugging"}, {"link": "", "title": "On the Use of Delta Debugging to Reduce Recordings and Facilitate Debugging of Web Applications"}, {"link": "", "title": "A Study on the Most Popular Questions about Concurrent Programming"}, {"link": "", "title": "Characterizing Non-deadlock Concurrency Bug Fixes in Open-source Java Programs"}, {"link": "", "title": "SymJS: Automatic Symbolic Testing of JavaScript Web Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115720"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115612"}
{"ref": [{"link": "", "title": "Type-Safe symmetric composition of metamodels using templates"}, {"link": "", "title": "Challenges in automotive software engineering"}, {"link": "", "title": "Globalizing domain-specific languages (dagstuhl seminar 14412)"}, {"link": "", "title": "Aspect-oriented metamodelling"}, {"link": "", "title": "Generic meta-modelling with concepts, templates and mixin layers"}, {"link": "", "title": "Complexity in engineering design and manufacturing"}, {"link": "", "title": "Design patterns: elements of reusable object-oriented software"}, {"link": "", "title": "On language-independent model modularisation"}, {"link": "", "title": "The grand challenge of scalability for model driven engineering"}, {"link": "", "title": "Principles for modeling language design"}, {"link": "", "title": "Traits: Composable units of behaviour"}, {"link": "", "title": "A modeling language with parameterized modules"}, {"link": "", "title": "Modularity in models: groupings and documentation"}, {"link": "", "title": "Informatics everywhere: information and computation in society, science, and technology"}, {"link": "", "title": "Integrating prose as first-class citizens with models and code"}, {"link": "/document/6227070", "title": "Language modularity with the mps language workbench"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372086"}
{"ref": [{"link": "", "title": "Acquisition of conceptual data models from natural language descriptions"}, {"link": "/document/292398", "title": "An analysis of the requirements traceability problem"}, {"link": "/document/873649", "title": "CM-Builder: An automated NLbased CASE tool"}, {"link": "", "title": "NL-OOPS: From natural language to object oriented requirements using the natural language processing system LOLITA"}, {"link": "", "title": "On the systematic analysis of natural language requirements with CIRCE"}, {"link": "", "title": "A natural language approach for requirements engineering"}, {"link": "", "title": "Deriving static and dynamic concepts from software requirements using sophisticated tagging"}, {"link": "", "title": "A systematic review of transformation approaches between user requirements and analysis models"}, {"link": "", "title": "English verbs as a semantic net"}, {"link": "", "title": "PLANT: A pattern language for transforming scenarios into requirements models"}, {"link": "/document/60316", "title": "An ontological model of an information system"}, {"link": "", "title": "Stanford Typed Dependencies Manual"}, {"link": "", "title": "Building Object-Oriented Systems: An Introduction from Concepts to Implementation in C++"}, {"link": "", "title": "Modellextraktion Aus Nat\u00fcrlichen Sprachen: Eine Methode Zur Systematischen Erstellung von Dom\u00e4nenmodellen"}, {"link": "", "title": "Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693146"}
{"ref": [{"link": "", "title": "RavenDB 2nd generation document database"}, {"link": "", "title": "How developers use the dynamic features of programming languages"}, {"link": "", "title": "Fork/Join Parallelism in the Wild: Documenting Patterns and Anti-patterns in Java Programs Using the Fork/Join Framework"}, {"link": "", "title": "Refactoring sequential Java code for concurrency via concurrent libraries"}, {"link": "", "title": "How Do Programs Become More Concurrent: A Story of Program Transformations"}, {"link": "", "title": "Relooper"}, {"link": "", "title": "Mining Billions of AST Nodes to Study Actual and Potential Usage of Java Language Features"}, {"link": "", "title": "An empirical investigation into a large-scale Java open source code repository"}, {"link": "", "title": "Program restructuring as an aid to software maintenance"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "/document/4563876", "title": "Amdahl's Law in the Multicore Era"}, {"link": "", "title": "Do Developers Benefit from Generic Types? An Empirical Comparison of Generic and Raw Types in Java"}, {"link": "", "title": "Best Practices in Asynchronous Programming"}, {"link": "", "title": "A study of language usage evolution in open source software"}, {"link": "", "title": "A study and toolkit of CHECK-THEN-ACT idioms of Java concurrent collections"}, {"link": "", "title": "Retrofitting Concurrency for Android Applications Through Refactoring"}, {"link": "", "title": "How do developers use parallel libraries?"}, {"link": "", "title": "Converting Parallel Code from Low-Level Abstractions to Higher-Level Abstractions"}, {"link": "", "title": "A study and toolkit for asynchronous programming in C#"}, {"link": "", "title": "Adoption and use of Java generics"}, {"link": "", "title": "Microsoft Asynchronous Programming Patterns"}, {"link": "", "title": "The Roslyn Project"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "", "title": "The F# asynchronous programming model"}, {"link": "", "title": "Are Java programmers transitioning to multicore?: a large scale study of java FLOS S"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372088"}
{"ref": [{"link": "", "title": "The dataflow model: A practical approach to balancing correctness, latency, and cost in massive-scale, unbounded, out-of-order data processing"}, {"link": "", "title": "Data security and privacy: Concepts, approaches, and research directions"}, {"link": "/document/6906759", "title": "Vigiles: Fine-grained access control for mapreduce systems"}, {"link": "", "title": "Privacy and contextual integrity: framework and applications"}, {"link": "", "title": "Privacy as contextual integrity"}, {"link": "/document/5189560", "title": "Privacy-aware role-based access control"}, {"link": "", "title": "A framework to enforce access control over data streams"}, {"link": "", "title": "Differential privacy under continual observation"}, {"link": "", "title": "Achieving k-anonymity privacy protection using generalization and suppression"}, {"link": "", "title": "Towards a model-driven design tool for big data architectures"}, {"link": "", "title": "Model-driven continuous deployment for quality devops"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115726"}
{"ref": [{"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/5726968", "title": "Assessing the benefits of incorporating function clone detection in a development process"}, {"link": "", "title": "The Pragmatic Programmer: From Journeyman to Master"}, {"link": "", "title": "Do code clones matter?"}, {"link": "/document/4023995", "title": "Clone detection using abstract syntax suffix trees"}, {"link": "", "title": "Understanding the evolution of type-3 clones: An exploratory study"}, {"link": "", "title": "Increasing clone maintenance support by unifying clone detection and refactoring activities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372073"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693058"}
{"ref": [{"link": "", "title": "Domain-specific visual languages for specifying and generating data mapping systems"}, {"link": "", "title": "Conceptual modelling and its theoretical foundations"}, {"link": "", "title": "Model transformation by demonstration"}, {"link": "/document/4497411", "title": "Clip: A visual language for explicit schema mappings"}, {"link": "", "title": "Handbook of Graph Grammars and Computing by Graph Transformation"}, {"link": "/document/5070990", "title": "A compositional approach to bidirectional model transformation"}, {"link": "/document/1342738", "title": "Automated data mapping specification via schema heuristics and user interaction"}, {"link": "/document/6344532", "title": "CONVErT: A framework for complex model visualisation and transformation"}, {"link": "", "title": "CONVErT Website"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693141"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115611"}
{"ref": [{"link": "/document/5451922", "title": "Study on beta testing of web application"}, {"link": "/document/887287", "title": "Is more beta better? [beta testing]"}, {"link": "/document/5380492", "title": "Classification of software testing tools based on the software testing methods"}, {"link": "/document/5954415", "title": "Model-based testing with a general purpose keyword-driven test automation framework"}, {"link": "/document/5617141", "title": "Scenario-based approach for blackbox load testing of online game servers"}, {"link": "/document/4493783", "title": "Methodology for verifying the load limit point and bottle-neck of a game server using the large scale virtual clients"}, {"link": "", "title": "Using autonomous avatars to simulate a large-scale multi-user networked virtual environment"}, {"link": "", "title": "The perils of using simulations to evaluate massively multiplayer online game performance"}, {"link": "/document/4658102", "title": "A requirement-based software testing framework: An industrial practice"}, {"link": "/document/5070717", "title": "Test automation framework for implementing continuous integration"}, {"link": "", "title": "New Crushinator (Version 2.9)"}, {"link": "", "title": "Model-based software testing"}, {"link": "", "title": "Virtual Cell"}, {"link": "", "title": "Wowiwe Instruction Co"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693143"}
{"ref": [{"link": "", "title": "MUBench: A Benchmark for API-misuse Detectors"}, {"link": "", "title": "Evolutionary Repair of Faulty Software"}, {"link": "", "title": "DieHard: Probabilistic Memory Safety for Unsafe Languages"}, {"link": "", "title": "Microreboot-a technique for cheap recovery"}, {"link": "", "title": "Automatic Recovery from Runtime Failures"}, {"link": "", "title": "Generating Fixes From Object Behavior Anomalies"}, {"link": "", "title": "Automatic Repair of Buggy If Conditions and Missing Preconditions with SMT"}, {"link": "", "title": "The SPMF Open-Source Data Mining Library Version 2"}, {"link": "", "title": "Safe Memory-leak fixing for C Programs"}, {"link": "", "title": "Fixing Recurring Crash Bugs via Analyzing Q&A Sites"}, {"link": "", "title": "Automatic Runtime Recovery via Error Handler Synthesis"}, {"link": "", "title": "DeepFix: Fixing Common C Language Errors by Deep Learning"}, {"link": "", "title": "Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs"}, {"link": "", "title": "Repairing Programs with Semantic Code Search"}, {"link": "/document/6606626", "title": "Automatic Patch Generation Learned from Human-written Patches"}, {"link": "", "title": "Memories of Bug Fixes"}, {"link": "", "title": "Bolt: On-demand Infinite Loop Escape in Unmodified Binaries"}, {"link": "", "title": "History Driven Program Repair"}, {"link": "/document/6227211", "title": "A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for $8 each"}, {"link": "", "title": "Current Challenges in Automatic Software Repair"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass Benchmarks for Automated Repair of C programs"}, {"link": "/document/6227204", "title": "Automatic Input Rectification"}, {"link": "", "title": "Automatic Patch Generation by Learning Correct Code"}, {"link": "", "title": "Automatic Runtime Error Repair and Containment via Recovery Shepherding"}, {"link": "", "title": "Mining Software Repair Models for Reasoning on the Search Space of Automated Program Fixing"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "Automatic Software Repair: A Bibliography"}, {"link": "", "title": "Mining Frequent Bug-Fix Code Changes"}, {"link": "/document/6776507", "title": "Automated Fixing of Programs with Contracts"}, {"link": "", "title": "The Strength of Random Search on Automated Program Repair"}, {"link": "/document/6311409", "title": "Automated API Property Inference Techniques"}, {"link": "", "title": "Assure: Automatic Software Self-healing Using Rescue Points"}, {"link": "", "title": "Codeflaws: A Programming Competition Benchmark for Evaluating Automated Program Repair Tools"}, {"link": "", "title": "Patches as Better Bug Reports"}, {"link": "/document/6651713", "title": "The DStar Method for Effective Software Fault Localization"}, {"link": "", "title": "CloSpan: Mining: Closed Sequential Patterns in Large Datasets"}, {"link": "", "title": "An Empirical Study on Real Bug Fixes"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115721"}
{"ref": [{"link": "/document/4181707", "title": "Adaptive service composition in flexible processes"}, {"link": "/document/5611553", "title": "Dynamic QoS management and optimization in service-based systems"}, {"link": "", "title": "Formal methods @ runtime"}, {"link": "", "title": "A framework for QoS-aware binding and re-binding of composite web services"}, {"link": "", "title": "QoS management in service-oriented architectures"}, {"link": "", "title": "PRISM 4.0: Verification of probabilistic real-time systems"}, {"link": "/document/1160055", "title": "The vision of autonomic computing"}, {"link": "", "title": "Using continual verification to automate service selection in service-based systems"}, {"link": "", "title": "Self-adaptive software needs quantitative verification at runtime"}, {"link": "/document/5070513", "title": "Model evolution by run-time adaptation"}, {"link": "", "title": "A logic for reasoning about time and reliability"}, {"link": "", "title": "Quality prediction of service compositions through probabilistic model checking"}, {"link": "", "title": "Performance prediction of web service workflows"}, {"link": "", "title": "Run-time efficient probabilistic model checking"}, {"link": "", "title": "An incremental verification framework for component-based software systems"}, {"link": "", "title": "Assume-guarantee verification for probabilistic systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693145"}
{"ref": [{"link": "", "title": "Egit"}, {"link": "", "title": "Semistructured data"}, {"link": "", "title": "Automatic construction of navigable concept networks characterizing text databases"}, {"link": "", "title": "Browsing search results via formal concept analysis: Automatic selection of attributes"}, {"link": "", "title": "Browsing semi-structured web texts using formal concept analysis"}, {"link": "/document/1463229", "title": "Hipikat: A project memory for software development"}, {"link": "", "title": "Rdf data exploration and visualization"}, {"link": "", "title": "Specification-based browsing of software component libraries"}, {"link": "", "title": "Using information fragments to answer the questions developers ask"}, {"link": "", "title": "Formal concept analysis \u2013 mathematical foundations"}, {"link": "", "title": "Design of a browsing interface for information retrieval"}, {"link": "", "title": "Lattice model of browsable data spaces"}, {"link": "", "title": "Colibri/java"}, {"link": "", "title": "Conceptcloud: A tagcloud browser for software archives"}, {"link": "/document/7332415", "title": "Interactive tag cloud visualization of software version control repositories"}, {"link": "", "title": "Synchronized tag clouds for exploring semi-structured clinical trial data"}, {"link": "", "title": "Concept-based component retrieval"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Reengineering of configurations based on mathematical concept analysis"}, {"link": "", "title": "Reengineering class hierarchies using concept analysis"}, {"link": "", "title": "Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372087"}
{"ref": [{"link": "", "title": "Systematic mistake analysis of digital computer programs"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "Efficient predicated bug signature mining via hierarchical instrumentation"}, {"link": "", "title": "Low-overhead and fully automated statistical debugging with abstraction refinement"}, {"link": "", "title": "Mining Software Specifications: Methodologies and Applications"}, {"link": "", "title": "Mining dataflow sensitive specifications"}, {"link": "", "title": "Falcon: Fault localization in concurrent programs"}, {"link": "", "title": "Lighthouse - a code coverage explorer for reverse engineers"}, {"link": "/document/8812045", "title": "Hunting for bugs in code coverage tools via randomized differential testing"}, {"link": "", "title": "Metamorphic testing: A new approach for generating next test cases"}, {"link": "", "title": "Explanations on the coverage results under optimizations"}, {"link": "", "title": "On testing non-testable programs"}, {"link": "", "title": "Predicting dependability by testing"}, {"link": "", "title": "Software testing using model programs"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "Finding and analyzing compiler warning defects"}, {"link": "", "title": "Randomized stress-testing of link-time optimizers"}, {"link": "", "title": "An innovative approach for testing bioinformatics programs using metamorphic testing"}, {"link": "/document/6516430", "title": "Early results from metamorphic testing of epidemiological models"}, {"link": "/document/1579174", "title": "Towards a metamorphic testing methodology for service-oriented software applications"}, {"link": "", "title": "A metamorphic testing approach for online testing of service-oriented software applications"}, {"link": "", "title": "Testing central processing unit scheduling algorithms using metamorphic testing"}, {"link": "/document/4020178", "title": "Self-metamorphic-testing components"}, {"link": "/document/7202957", "title": "Metamorphic model-based testing applied on NASA DAT: An experience report"}, {"link": "", "title": "Testing and validating machine learning classifiers by metamorphic testing"}, {"link": "", "title": "Automated functional testing of online search services"}, {"link": "/document/7254235", "title": "Metamorphic testing for software quality assessment: A study of search engines"}, {"link": "/document/7490306", "title": "Metamorphic testing for cybersecurity"}, {"link": "", "title": "Metamorphic testing of driverless cars"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}, {"link": "", "title": "Guidelines for coverage-based comparisons of nonadequate test suites"}, {"link": "", "title": "Does automated white-box test generation really help software testers?"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "/document/1183927", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "Regression mutation testing"}, {"link": "", "title": "A unified test case prioritization approach"}, {"link": "", "title": "Directed test generation for effective fault localization"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "/document/630875", "title": "A study of effective regression testing in practice"}, {"link": "", "title": "A large-scale evaluation of automated unit test generation using evosuite"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "", "title": "Fault localization prioritization: Comparing information-theoretic and coverage-based approaches"}, {"link": "/document/5070508", "title": "Lightweight fault-localization using multiple coverage types"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952463"}
{"ref": [{"link": "", "title": "Concise and consistent naming"}, {"link": "/document/1631100", "title": "What\u2019s in a name? a study of identifiers"}, {"link": "/document/1021348", "title": "The role of concepts in program comprehension"}, {"link": "/document/7956951", "title": "Effects of variable names on comprehension an empirical study"}, {"link": "", "title": "Debugging method names"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "A general path-based representation for predicting program properties"}, {"link": "", "title": "Code 2vec: Learning distributed representations of code"}, {"link": "/document/7884623", "title": "Shorter identifier names take longer to comprehend"}, {"link": "", "title": "Descriptive compound identifier names improve source code comprehension"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "/document/8812134", "title": "Learning to spot and refactor inconsistent method names"}, {"link": "/document/883022", "title": "Restructuring program identifier names"}, {"link": "", "title": "An empirical study of rules for well-formed identifiers: Research articles"}, {"link": "", "title": "Recommending rename refactorings"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "/document/8090141", "title": "Investigating the use of code analysis and nlp to promote a consistent usage of identifiers"}, {"link": "", "title": "Predicting program properties from \u201cbig code"}, {"link": "", "title": "Deepbugs: A learning approach to name-based bug detection"}, {"link": "", "title": "Recommendation systems in software engineering"}, {"link": "", "title": "Source code-based recommendation systems"}, {"link": "/document/7476636", "title": "A study of visual studio usage in practice"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "/document/6624029", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "/document/7675464", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Learning api usages from bytecode: A statistical approach"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Code completion with neural attention and pointer networks"}, {"link": "", "title": "Pointer networks"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "New dataset"}, {"link": "/document/5328733", "title": "Lexicon bad smells in software"}, {"link": "/document/4362913", "title": "The programmer\u2019s lexicon, volume i: The verbs"}, {"link": "", "title": "Practitioners\u2019 expectations on automated fault localization"}, {"link": "", "title": "Using runtime traces to improve documentation and unit test authoring for dynamic languages"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Neural-machine-translation-based commit message generation: How far are we?"}, {"link": "/document/8812116", "title": "When code completion fails: A case study on real-world completions"}, {"link": "", "title": "Easy over hard: A case study on deep learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952208"}
{"ref": [{"link": "", "title": "Creating and evolving developer documentation: understanding the decisions of open source contributors"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "/document/738502", "title": "Practices of software maintenance"}, {"link": "", "title": "Measuring api documentation on the web"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "From query to usable code: an analysis of stack overflow code snippets"}, {"link": "", "title": "Gistable: Evaluating the executability of code snippets on the web"}, {"link": "", "title": "Enabling static analysis for partial java programs"}, {"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "/document/6624031", "title": "The maven repository dataset of metrics, changes, and dependencies"}, {"link": "", "title": "Statistical learning of api fully qualified names in code snippets of online forums"}, {"link": "", "title": "50k-c: A dataset of compilable, and compiled, java projects"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "/document/6976073", "title": "Cscc: Simple, efficient, context sensitive code completion"}, {"link": "", "title": "Api code recommendation using statistical learning from fine-grained changes"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "On the localness of software"}, {"link": "/document/319225", "title": "Trigger-based language models: A maximum entropy approach"}, {"link": "", "title": "Corpus-based and knowledge-based measures of text semantic similarity"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "/document/6100061", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "", "title": "Adjusting for multiple testing when reporting research results: the bonferroni vs holm methods"}, {"link": "", "title": "Predicting program properties from big code"}, {"link": "", "title": "Deep learning type inference"}, {"link": "/document/8812034", "title": "Recovering variable names for minified code with usage contexts"}, {"link": "/document/8811893", "title": "Nl2type: inferring javascript function types from natural language information"}, {"link": "", "title": "Python probabilistic type inference with natural language support"}, {"link": "", "title": "Software traceability with topic modeling"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "/document/1201194", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "", "title": "Adams re-trace"}, {"link": "", "title": "Feature location via information retrieval based filtering of a single scenario execution trace"}, {"link": "/document/6976083", "title": "Compositional vector space models for improved bug localization"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "", "title": "Portfolio: finding relevant functions and their usage"}, {"link": "/document/6693093", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "/document/7372035", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952501"}
{"ref": [{"link": "/document/6363769", "title": "Time is bandwidth? Narrowing the gap between subjective time perception and Quality of Experience"}, {"link": "", "title": "A Study on Tolerable Waiting Time: How Long Are Web Users Willing to Wait?"}, {"link": "", "title": "The Art of Application Performance Testing"}, {"link": "", "title": "A Systematic Review of Software Architecture Evolution Research"}, {"link": "", "title": "A Genetic Algorithm for Optimized Feature Selection with Resource Constraints in Software Product Lines"}, {"link": "", "title": "Performance Testing of Software Systems"}, {"link": "", "title": "How to Detect Performance Changes in Software History: Performance Analysis of Software System Versions"}, {"link": "/document/5562942", "title": "Mining Performance Regression Testing Repositories for Automated Performance Analysis"}, {"link": "/document/7070431", "title": "Automating the Assessment of the Performance Quality Attribute for Evolving Software Systems: An Exploratory Study"}, {"link": "", "title": "Repeated Results Analysis for Middleware Regression Benchmarking"}, {"link": "", "title": "A Performance Anomaly Detection and Analysis Framework for DBMS Development"}, {"link": "", "title": "Automated Root Cause Isolation of Performance Regressions During Software Development"}, {"link": "", "title": "An Industrial Case Study of Automatically Identifying Performance Regression-Causes"}, {"link": "", "title": "Introduction to Statistical Time Series"}, {"link": "", "title": "Continuous Inspection Schemes"}, {"link": "", "title": "Adaptive Filtering and Change Detection"}, {"link": "", "title": "An Empirical Study on Performance Bugs for Highly Configurable Software Systems"}, {"link": "", "title": "Active Learning Literature Survey"}, {"link": "", "title": "Gaussian processes for machine learning"}, {"link": "", "title": "Automatic Model Construction with Gaussian Processes"}, {"link": "", "title": "Gaussian Processes for time-series modelling"}, {"link": "", "title": "Performance-Influence Models for Highly Configurable Systems"}, {"link": "", "title": "The Design of Optimum Multifactorial Experiments"}, {"link": "/document/8812049", "title": "Distance-based Sampling of Software Configuration Spaces"}, {"link": "/document/6200145", "title": "Using Control Charts for Detecting and Understanding Performance Regressions in Large Software"}, {"link": "", "title": "Automated Detection of Performance Regressions Using Statistical Process Control Techniques"}, {"link": "/document/7190143", "title": "Automatic Detection of Performance Deviations in the Load Testing of Large Scale Systems"}, {"link": "", "title": "Statistically Rigorous Java Performance Evaluation"}, {"link": "/document/7202960", "title": "An Industrial Case Study on the Automated Detection of Performance Regressions in Heterogeneous Environments"}, {"link": "", "title": "Identifying Root Causes of Web Performance Degradation Using Changepoint Analysis"}, {"link": "/document/8130373", "title": "Sequential Bayesian Prediction in the Presence of Changepoints and Faults"}, {"link": "", "title": "Real-time Information Processing of Environmental Sensor Network Data Using Bayesian Gaussian Processes"}, {"link": "/document/6693089", "title": "Variability-aware Performance Prediction: A Statistical Learning Approach"}, {"link": "/document/7372023", "title": "Cost-Efficient Sampling for Performance Prediction of Configurable Systems (T)"}, {"link": "", "title": "Using Bad Learners to Find Good Configurations"}, {"link": "/document/8811988", "title": "DeepPerf: Performance Prediction for Configurable Software with Deep Sparse Neural Network"}, {"link": "/document/6227196", "title": "Predicting Performance via Automated Feature-Interaction Detection"}, {"link": "", "title": "Finding Faster Configurations using FLASH"}, {"link": "", "title": "Finding Near-Optimal Configurations in Product Lines by Random Sampling"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952290"}
{"ref": [{"link": "", "title": "Behavioral consistency of c and verilog programs using bounded model checking"}, {"link": "", "title": "Bounded model checking of concurrent programs"}, {"link": "", "title": "Bounded model checking of multi-threaded c programs via lazy sequentialization"}, {"link": "", "title": "Scheduling constraint based abstraction refinement for multi-threaded program verification"}, {"link": "", "title": "Toward compositional verification of interruptible OS kernels and device drivers"}, {"link": "", "title": "Model checking trampoline OS: a case study on safety analysis for automotive software"}, {"link": "/document/8102260", "title": "Automatic verification of application-tailored OSEK kernels"}, {"link": "/document/6042072", "title": "Modeling and verifying the code-level OSEK/VDX operating system with CSP"}, {"link": "", "title": "Counterexample-guided abstraction refinement"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": "Nusmv: A new symbolic model verifier"}, {"link": "/document/8661998", "title": "A hybrid testing environment between execution test and model checking for IoT system"}, {"link": "", "title": "Lazy abstraction with interpolants"}, {"link": "/document/7371996", "title": "Interpolation guided compositional verification (t)"}, {"link": "", "title": "Refinement of trace abstraction"}, {"link": "", "title": "Verification of concurrent programs using trace abstraction refinement"}, {"link": "", "title": "The software model checker Blast: Applications to software engineering"}, {"link": "", "title": "Thorough static analysis of device drivers"}, {"link": "", "title": "seL4: Formal verification of an OS kernel"}, {"link": "", "title": "Haskell 98 language and libraries: the revised report"}, {"link": "", "title": "OSEK/VDX operating system specification"}, {"link": "", "title": "Verifying OSEK/VDX automotive applications: A spin-based model checking approach"}, {"link": "", "title": "A configurable V&V framework using formal behavioral patterns for OSEK/VDX operating systems"}, {"link": "", "title": "Uppaal\u2014a tool suite for automatic verification of real-time systems"}, {"link": "/document/8462763", "title": "Toward a unified executable formal automobile OS kernel and its applications"}, {"link": "", "title": "Zephyr project"}, {"link": "", "title": "Freertos \u2013 market leading rtos for embedded systems with internet of things extensions"}, {"link": "/document/588521", "title": "The model checker SPIN"}, {"link": "", "title": "Introduction to discrete event systems"}, {"link": "", "title": "MISRA-C:2012: Guidelines for the use of the C language in critical systems"}, {"link": "", "title": "Using partial orders for the efficient verification of deadlock freedom and safety properties"}, {"link": "", "title": "A two-step approach for pattern-based API-call constraint checking"}, {"link": "", "title": "nxtOSEK: ANSI C/C++ with OSEK/\u03bcITRON RTOS for LEGO MIND-STORMS NXT"}, {"link": "", "title": "Constraint-based test generation for automotive operating systems"}, {"link": "", "title": "WinLift application distributed with CodeWarrior V5.1"}, {"link": "", "title": "Control and data abstraction: The cornerstones of practical formal verification"}, {"link": "/document/5279933", "title": "A value analysis for c programs"}, {"link": "/document/6616345", "title": "Data race detection for interrupt-driven programs via bounded model checking"}, {"link": "/document/7195716", "title": "Formal verification of software for the Contiki operating system considering interrupts"}, {"link": "/document/7102612", "title": "Yes! you can use your model checker to verify OSEK/VDX applications"}, {"link": "/document/8305962", "title": "Modeling OSEK/VDX OS requirements in C"}, {"link": "", "title": "LazyCSeq: a lazy sequentialization tool for C"}, {"link": "", "title": "Concurrent program verification with lazy sequentialization and interval analysis"}, {"link": "", "title": "Threader: a verifier for multi-threaded programs"}, {"link": "/document/546611", "title": "Shared memory consistency models: A tutorial"}, {"link": "", "title": "Formal verification of multitasking applications based on timed automata model"}, {"link": "/document/6513734", "title": "Core minimization in SAT-based abstraction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952214"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "A prediction-driven adaptation approach for self-adaptive sensor networks"}, {"link": "/document/844498", "title": "A workload characterization study of the 1998 world cup web site"}, {"link": "", "title": "Software engineering for self-adaptive systems"}, {"link": "", "title": "Stochastic game analysis and latency awareness for proactive self-adaptation"}, {"link": "", "title": "Analyzing latencyaware self-adaptation using stochastic games and simulations"}, {"link": "", "title": "Doctor ai: Predicting clinical events via recurrent neural networks"}, {"link": "/document/8342626", "title": "An effective mechanism to regenerate http flooding ddos attack using real time data set"}, {"link": "", "title": "Artificial neural networks approach to the forecast of stock market price movements"}, {"link": "", "title": "A survey of autonomic communications"}, {"link": "", "title": "Evolving recurrent neural networks for time series data prediction of coal plant parameters"}, {"link": "", "title": "optimizing long short-term memory recurrent neural networks using ant colony optimization to predict turbine engine vibration"}, {"link": "", "title": "Management of uncertainty in self-adaptive software"}, {"link": "/document/6574860", "title": "A learning-based framework for engineering feature-oriented self-adaptive software systems"}, {"link": "", "title": "Wind power prediction using mixture density recurrent neural networks"}, {"link": "/document/6789445", "title": "Learning to Forget: Continual Prediction with LSTM"}, {"link": "", "title": "model-driven autoscaling for cloud applications"}, {"link": "", "title": "Software Architecture-Based Self-Adaptation"}, {"link": "", "title": "Modeling run-time adaptation at the system architecture level in dynamic serviceoriented environments"}, {"link": "", "title": "Another look at measures of forecast accuracy"}, {"link": "/document/8787014", "title": "Machine learning meets quantitative planning: Enabling self-adaptation in autonomous robots"}, {"link": "/document/7503491", "title": "Managing uncertainty in autonomic cloud elasticity controllers"}, {"link": "/document/7312157", "title": "Selflearning cloud controllers: Fuzzy q-learning for knowledge evolution"}, {"link": "", "title": "Cost-benefit analysis at runtime for self-adaptive systems applied to an internet of things application"}, {"link": "", "title": "A cost-sensitive adaptation engine for server consolidation of multitier applications"}, {"link": "/document/1160055", "title": "The vision of autonomic computing"}, {"link": "", "title": "Managing uncertainty in self-adaptive systems with plan reuse and stochastic search"}, {"link": "", "title": "\n            Information reuse and stochastic search: Managing uncertainty in self-\n            "}, {"link": "/document/4221625", "title": "Self-managed systems: an architectural challenge"}, {"link": "", "title": "Probabilistic symbolic model checking with prism: A hybrid approach"}, {"link": "", "title": "Energy efficient gps sensing with cloud offloading"}, {"link": "", "title": "Program image dissemination protocol for low-energy multihop wireless sensor networks"}, {"link": "", "title": "Application of neural network for forecasting of exchange rates and forex trading"}, {"link": "", "title": "Adaptation Timing in Self-Adaptive Systems"}, {"link": "", "title": "Proactive selfadaptation under uncertainty: a probabilistic model checking approach"}, {"link": "", "title": "Flexible and efficient decision-making for proactive latency-aware self-adaptation"}, {"link": "/document/7573126", "title": "Efficient decision-making under uncertainty for proactive self-adaptation"}, {"link": "", "title": "Comparing model-based predictive approaches to selfadaptation: Cobra and pla"}, {"link": "/document/8787013", "title": "Efficient analysis of large adaptation spaces in self-adaptive systems using machine learning"}, {"link": "", "title": "A learning approach to enhance assurances for real-time self-adaptive systems"}, {"link": "", "title": "Self-adaptive software: Landscape and research challenges"}, {"link": "", "title": "Architecture-based selfprotection: composing and reasoning about denial-of-service mitigations"}, {"link": "/document/4220924", "title": "A cost-sensitive model for preemptive intrusion response systems"}, {"link": "/document/7573153", "title": "An organic computing perspective on self-improving system interweaving at runtime"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952178"}
{"ref": [{"link": "", "title": "Apk signing"}, {"link": "", "title": "New Android vulnerability allows attackers to modify apps without affecting their signatures"}, {"link": "", "title": "CVE-2017-13156"}, {"link": "", "title": "APK duplicate file vulnerability"}, {"link": "", "title": "Android Bug Superior to Master Key"}, {"link": "", "title": "Yet Another Android Master Key Bug"}, {"link": "", "title": "Hackers are selling& legitimate code-signing certificates to evade malware detection"}, {"link": "", "title": "Signed jar file"}, {"link": "", "title": "Scheme v2"}, {"link": "", "title": "Scheme v3"}, {"link": "", "title": "Android Distribution and Android Market Share"}, {"link": "", "title": "Android Vulnerability"}, {"link": "", "title": "First malicious use of \u2019master key\u2019 android vulnerability discovered"}, {"link": "", "title": "APK unsigned shorts"}, {"link": "", "title": "APK unchecked name"}, {"link": "", "title": "FakeID"}, {"link": "", "title": "Add api to check certificate chain signatures"}, {"link": "", "title": "apksigner"}, {"link": "", "title": "Online app status protocol"}, {"link": "", "title": "Beyond google play: A large-scale comparative study of chinese android app markets"}, {"link": "", "title": "Deep ground truth analysis of current android malware"}, {"link": "", "title": "Understanding the evolution of mobile app ecosystems: A longitudinal measurement study of google play"}, {"link": "/document/8816783", "title": "Rmvdroid: towards a reliable android malware dataset with app metadata"}, {"link": "", "title": "Appraiser: A large scale analysis of android clone apps"}, {"link": "", "title": "Wukong: A scalable and accurate two-phase approach to android app clone detection"}, {"link": "", "title": "On identifying and explaining similarities in android apps"}, {"link": "", "title": "Why are android apps removed from google play?: a large-scale empirical study"}, {"link": "", "title": "Factors influencing quality of mobile apps: Role of mobile app development life cycle"}, {"link": "", "title": "50 ways to leak your data: An exploration of apps\u2019 circumvention of the android permissions system"}, {"link": "", "title": "Understanding the purpose of permission use in mobile apps"}, {"link": "/document/7417621", "title": "Reevaluating android permission gaps with static and dynamic analysis"}, {"link": "", "title": "Using text mining to infer the purpose of permission use in mobile apps"}, {"link": "", "title": "Apps, trackers, privacy, and regulators"}, {"link": "/document/7546512", "title": "Following devil\u2019s footprints: Cross-platform analysis of potentially harmful libraries on android and ios"}, {"link": "", "title": "Libradar: fast and accurate detection of third-party libraries in android apps"}, {"link": "", "title": "Revisiting the impact of common libraries for android-related investigations"}, {"link": "/document/7985674", "title": "Libd: scalable and precise third-party library detection in android markets"}, {"link": "/document/7527773", "title": "A study of grayware on google play"}, {"link": "", "title": "Dating with scambots: Understanding the ecosystem of fraudulent dating applications"}, {"link": "/document/8668035", "title": "Want to earn a few extra bucks? a first look at money-making apps"}, {"link": "", "title": "Frauddroid: Automated ad fraud detection for android apps"}, {"link": "/document/6807765", "title": "Discovery of ranking fraud for mobile apps"}, {"link": "", "title": "Padetective: A systematic approach to automate detection of promotional attackers in mobile app store"}, {"link": "", "title": "Appnet: understanding app recommendation in google play"}, {"link": "", "title": "An empirical study of cryptographic misuse in android applications"}, {"link": "", "title": "icryptotracer: Dynamic analysis on misuse of cryptography functions in ios applications"}, {"link": "", "title": "Reliable third-party library detection in android and its security applications"}, {"link": "/document/8115707", "title": "Cognicrypt: Supporting developers in using cryptography"}, {"link": "", "title": "Vulnerability assessment of oauth implementations in android applications"}, {"link": "", "title": "Why eve and mallory love android: An analysis of android ssl (in) security"}, {"link": "", "title": "Smv-hunter: Large scale, automated detection of ssl/tls man-in-the-middle vulnerabilities in android apps"}, {"link": "", "title": "Danger is my middle name: experimenting with ssl vulnerabilities in android apps"}, {"link": "/document/7961980", "title": "Open doors for bob and mallory: Open port usage in android apps and security implications"}, {"link": "/document/7194581", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}, {"link": "", "title": "Collusive data leak and more: Large-scale threat analysis of inter-app communications"}, {"link": "/document/7203053", "title": "Analysis of android inter-app security vulnerabilities using covert"}, {"link": "/document/7985672", "title": "A sealant for inter-app security holes in android"}, {"link": "/document/8418628", "title": "The rise of the citizen developer: Assessing the security impact of online app generators"}, {"link": "", "title": "Harvesting developer credentials in android apps"}, {"link": "", "title": "Authorship attribution of android apps"}, {"link": "", "title": "An explorative study of the mobile app ecosystem from app developers\u2019 perspective"}, {"link": "/document/8817033", "title": "Characterizing the global mobile app developers: a large-scale empirical study"}, {"link": "", "title": "Understanding and improving app installation security mechanisms through empirical analysis of android"}, {"link": "", "title": "Baton: Certificate agility for android\u2019s decentralized signing infrastructure"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952357"}
{"ref": [{"link": "/document/1342780", "title": "Interactive visualization of concurrents programs"}, {"link": "", "title": "Odr: Output-deterministic replay for multicore debugging"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "/document/4222588", "title": "A technique for enabling and supporting debugging of field failures"}, {"link": "", "title": "Cooperative crug isolation"}, {"link": "", "title": "Falcon: fault localization in concurrent programs"}, {"link": "", "title": "Isolating failure-inducing thread schedules"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "", "title": "A trace simplification technique for effective debugging of concurrent programs"}, {"link": "", "title": "LEAP: lightweight deterministic multi-processor replay of concurrent java programs"}, {"link": "", "title": "Pervasive detection of process races in deployed systems"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "Cooperative crug isolation"}, {"link": "", "title": "Falcon: Fault localization in concurrent programs"}, {"link": "", "title": "Concurrency bug localization using shared memory access pairs"}, {"link": "/document/6200096", "title": "A unified approach for localizing non-deadlock concurrency bugs"}, {"link": "", "title": "DESCRY: reproducing system-level concurrency failures"}, {"link": "", "title": "Simracer: An automated framework to support testing for process-level races"}, {"link": "", "title": "auditd(8) - linux man page"}, {"link": "", "title": "Principal component analysis (pca) procedure"}, {"link": "", "title": "Racerx: Effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "Effective static race detection for java"}, {"link": "", "title": "Scminer"}, {"link": "", "title": "Searchable linux syscall table for x86 and x86 64"}, {"link": "", "title": "Pervasive detection of process races in deployed systems"}, {"link": "", "title": "Debian bug report logs - #283702"}, {"link": "", "title": "Bash guide for beginners"}, {"link": "", "title": "Principal component analysis"}, {"link": "", "title": "A tutorial on principal component analysis"}, {"link": "", "title": "Variance: Simple definition, step by step examples"}, {"link": "", "title": "What is principal component analysis (pca) and how it is used?"}, {"link": "", "title": "Diagnosing network-wide traffic anomalies"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "", "title": "Principal Component Analysis"}, {"link": "", "title": "Pca - loadings and scores"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "Apache Deadlock"}, {"link": "", "title": "Fast algorithms for mining association rules in large databases"}, {"link": "", "title": "Introduction to Data Mining (2Nd Edition)"}, {"link": "", "title": "Principal components analysis (pca)"}, {"link": "", "title": "Pin - a dynamic binary instrumentation tool"}, {"link": "/document/5413790", "title": "Mining maximal frequent itemsets: A java implementation of fpmax algorithm"}, {"link": "", "title": "Spmf: A java open-source pattern mining library"}, {"link": "", "title": "Principal component analysis based unsupervised anomaly detection"}, {"link": "", "title": ""}, {"link": "/document/5477060", "title": "An industrial survey on contemporary aspects of software testing"}, {"link": "", "title": "The category-partition method for specifying and generating fuctional tests"}, {"link": "", "title": "Beyond accuracy: Precision and recall"}, {"link": "", "title": "Evaluation of ranked retrieval results"}, {"link": "", "title": "JITProf: Pinpointing JIT-unfriendly JavaScript code"}, {"link": "/document/7190094", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "Exact string matching algorithms"}, {"link": "/document/1339268", "title": "Mining sequential patterns by pattern-growth: The prefixspan approach"}, {"link": "/document/5360285", "title": "Online system problem detection by mining patterns of console logs"}, {"link": "/document/8371223", "title": "An integrated method for anomaly detection from massive system logs"}, {"link": "", "title": "Deeplog: Anomaly detection and diagnosis from system logs through deep learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952396"}
{"ref": [{"link": "", "title": "Evaluating and predicting answer quality in community qa"}, {"link": "", "title": "An empirical study of obsolete answers on stack overflow"}, {"link": "", "title": "The good, the bad and their kins: Identifying questions with negative scores in stackoverflow"}, {"link": "", "title": "Detecting high-quality posts in community question answering sites"}, {"link": "/document/8530028", "title": "Improving api caveats accessibility by mining api caveats knowledge graph"}, {"link": "", "title": "Elements of survey sampling"}, {"link": "", "title": "Deriving a large scale taxonomy from wikipedia"}, {"link": "", "title": "Knowledge derived from wikipedia for computing semantic relatedness"}, {"link": "", "title": "Softwarespecific named entity recognition in software engineering social content"}, {"link": "", "title": "The stanford corenlp natural language processing toolkit"}, {"link": "/document/7816484", "title": "Learning to extract api mentions from informal natural language discussions"}, {"link": "", "title": "Textrank: Bringing order into text"}, {"link": "", "title": "The pagerank citation ranking: Bringing order to the web. Stanford InfoLab"}, {"link": "", "title": "An n\u02c65/2 algorithm for maximum matchings in bipartite graphs"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Document clustering and text summarization"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Word representations: A simple and general method for semi-supervised learning"}, {"link": "", "title": "Distributional structure"}, {"link": "", "title": "word2vec explained: deriving mikolov et al.\u2019s negative-sampling word-embedding method"}, {"link": "", "title": "Continuous distributed representations of words as input of lstm network language model"}, {"link": "", "title": "Learning a dual-language vector space for domain-specific cross-lingual question retrieval"}, {"link": "", "title": "Using tf-idf to hide sensitive itemsets"}, {"link": "", "title": "Delta tfidf: An improved feature space for sentiment analysis"}, {"link": "", "title": "An application of hierarchical kappatype statistics in the assessment of majority agreement among multiple observers"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Ordinal methods for behavioral data analysis"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Rosf: Leveraging information retrieval and supervised learning for recommending code snippets"}, {"link": "", "title": "On mining crowd-based speech documentation"}, {"link": "/document/6498455", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "", "title": "Learning embeddings of api tokens to facilitate deep learning based program processing"}, {"link": "", "title": "Api method recommendation without worrying about the task-api knowledge gap"}, {"link": "/document/8115681", "title": "Answerbot: Automated generation of answer summary to developers\u2019 technical questions"}, {"link": "", "title": "Tell them apart: distilling technology differences from crowd-scale comparison discussions"}, {"link": "", "title": "Determinants of quality, latency, and amount of stack overflow answers about recent android apis"}, {"link": "/document/7985684", "title": "Unsupervised software-specific morphological forms inference from informal discussions"}, {"link": "", "title": "Similartech: Automatically recommend analogical libraries across different programming languages"}, {"link": "", "title": "Mining likely analogical apis across third-party libraries via large-scale unsupervised api semantics embedding"}, {"link": "/document/5070525", "title": "Semantics-based code search"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Feature location in source code: a taxonomy and survey"}, {"link": "/document/7190090", "title": "How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952216"}
{"ref": [{"link": "", "title": "Architecting principles for system of systems"}, {"link": "", "title": "Awareness requirements for adaptive systems"}, {"link": "", "title": "Run-time efficient probabilistic model checking"}, {"link": "", "title": "On the challenges of self-adaptation in systems of systems"}, {"link": "", "title": "Software engineering for selfadaptive systems: Research challenges in the provision of assurances"}, {"link": "", "title": "Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime"}, {"link": "/document/7968129", "title": "Lotus@Runtime: A tool for runtime monitoring and verification of selfadaptive systems"}, {"link": "", "title": "Formal design and verification of self-adaptive systems with decentralized control"}, {"link": "/document/8049153", "title": "Identifying conflicting requirements in systems of systems"}, {"link": "", "title": "Threat scenario based security risk analysis using use case modeling in information systems"}, {"link": "", "title": "Supporting incremental behaviour model elaboration"}, {"link": "", "title": "A scenario-based information security risk evaluation method"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "Concurrency: State Models and Java Programs"}, {"link": "/document/4291042", "title": "Model checking aspect-oriented design specification"}, {"link": "", "title": "Inversion of control containers and the dependency injection pattern"}, {"link": "", "title": "Analyzing the evolution of eclipse plugins"}, {"link": "/document/1178048", "title": "Synthesis of behavioral models from scenarios"}, {"link": "", "title": "Message sequence charts"}, {"link": "", "title": "An architectural blueprint for autonomic computing"}, {"link": "", "title": "Problem Frames - Analysing and Structuring Software Development Problems"}, {"link": "", "title": "Concurrency: State Models and Java Programs"}, {"link": "/document/8787155", "title": "Dragonfly: a tool for simulating self-adaptive drone behaviours"}, {"link": "", "title": "Adore: An adaptation-oriented requirement modeling approach for systems of systems"}, {"link": "", "title": "Mining specifications"}, {"link": "/document/4400151", "title": "Detecting implied scenarios from execution traces"}, {"link": "", "title": "Reverse engineering goal models from legacy code"}, {"link": "", "title": "Mining message sequence graphs"}, {"link": "", "title": "Goal-oriented requirements engineering: A guided tour"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "", "title": "Software engineering for self-adaptive systems"}, {"link": "/document/8008800", "title": "Engineering trustworthy self-adaptive software with dynamic assurance cases"}, {"link": "/document/5636887", "title": "Fuzzy goals for requirementsdriven adaptation"}, {"link": "", "title": "Requirementsdriven design of autonomic application software"}, {"link": "/document/4384184", "title": "Specifying monitoring and switching problems in context"}, {"link": "", "title": "Software engineering for safety: A roadmap"}, {"link": "", "title": "Using obstacle analysis to identify contingency requirements on an unpiloted aerial vehicle"}, {"link": "/document/7968127", "title": "Runtime monitoring and resolution of probabilistic obstacles to system goals"}, {"link": "/document/8049153", "title": "Identifying conflicting requirements in systems of systems"}, {"link": "", "title": "Towards a framework for managing inconsistencies in systems of systems"}, {"link": "", "title": "Adapting cots products"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "Aspect-oriented programming beyond dependency injection"}, {"link": "", "title": "From goals to aspects: Discovering aspects from requirements goal models"}, {"link": "", "title": "Formal methods for the certification of autonomous unmanned aircraft systems"}, {"link": "/document/8255739", "title": "Security and privacy for the internet of drones: Challenges and solutions"}, {"link": "", "title": "Dronology: an incubator for cyber-physical systems research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952359"}
{"ref": [{"link": "", "title": "A Look at Google Bouncer"}, {"link": "/document/7163067", "title": "Effective Real-time Android Application Auditing"}, {"link": "", "title": "Identify and Remediate Application Security Vulnerabilities with IBM Application Security"}, {"link": "", "title": "Tencent Kingkong App Scan"}, {"link": "/document/7102585", "title": "Detecting Display Energy Hotspots in Android Apps"}, {"link": "", "title": "Securacy: An Empirical Investigation of Android Applications\u2019 Network Usage, Privacy and Security"}, {"link": "", "title": "Haystack: In Situ Mobile Traffic Analysis in User Space"}, {"link": "", "title": "Identifying Personal Information in Internet Traffic"}, {"link": "", "title": "ReCon: Revealing and Controlling PII Leaks in Mobile Network Traffic"}, {"link": "", "title": "CloudAnalyzer: Uncovering the Cloud Usage of Mobile Apps"}, {"link": "", "title": "ZEDGE"}, {"link": "", "title": "Facebook SDK for Android"}, {"link": "", "title": "Facebook Login API"}, {"link": "", "title": "How Apps on Android Share Data with Facebook"}, {"link": "", "title": "Espresso"}, {"link": "", "title": "UI Automator"}, {"link": "", "title": "Robotium"}, {"link": "", "title": "PUMA: Programmable UI-Automation for Large-Scale Dynamic Analysis of Mobile Apps"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "EvoDroid: Segmented Evolutionary Testing of Android Apps"}, {"link": "/document/7515457", "title": "Automatically Discovering, Reporting and Reproducing Android Application Crashes"}, {"link": "", "title": "Efficiently, Effectively Detecting Mobile App Bugs with AppDoctor"}, {"link": "", "title": "Sapienz: Multi-objective Automated Testing for Android Applications"}, {"link": "", "title": "Guided, Stochastic Model-based GUI Testing of Android Apps"}, {"link": "", "title": "Automated Testing of Android Apps: A Systematic Literature Review"}, {"link": "/document/7372053", "title": "Static Window Transition Graphs for Android"}, {"link": "", "title": "Fragments For All"}, {"link": "", "title": "An Open Protocol to Allow Secure Authorization in a Simple and Standard Method From Web, Mobile and Desktop Applications"}, {"link": "", "title": "The OAuth 2.0 Authorization Framework: Bearer Token Usage"}, {"link": "", "title": ""}, {"link": "", "title": "Google. App Components"}, {"link": "", "title": "Google. App Components. Activity-lifecycle Concepts"}, {"link": "", "title": "FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps"}, {"link": "", "title": ""}, {"link": "", "title": "AXML Printer"}, {"link": "", "title": "Fragment"}, {"link": "/document/7194581", "title": "IccTA: Detecting Inter-component Privacy Leaks in Android Apps"}, {"link": "", "title": "Android Debug Bridge (adb)"}, {"link": "", "title": "SUPOR: Precise and Scalable Sensitive User Input Detection for Android Apps"}, {"link": "", "title": "F-Droid"}, {"link": "/document/7372031", "title": "Automated Test Input Generation for Android: Are We There Yet?"}, {"link": "/document/7194563", "title": "Composite Constant Propagation: Application to Android Inter-Component Communication Analysis"}, {"link": "", "title": "Profiling the Responsiveness of Android Applications via Automated Resource Amplification"}, {"link": "", "title": "Static Detection of Energy Defect Patterns in Android Applications"}, {"link": "", "title": "Launch-mode-aware Context-sensitive Activity Transition Analysis"}, {"link": "/document/8812043", "title": "StoryDroid: Automated Generation of Storyboard for Android Apps"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "Automated Model-based Android GUI Testing Using Multi-level GUI Comparison Criteria"}, {"link": "/document/8812132", "title": "Practical GUI Testing of Android Applications via Model Abstraction and Refinement"}, {"link": "", "title": "Testing Android Apps Through Symbolic Execution"}, {"link": "/document/6616343", "title": "Forced-Path Execution for Android Applications on x86 Platforms"}, {"link": "/document/7381839", "title": "SIG-Droid: Automated System Input Generation for Android Applications"}, {"link": "", "title": "Automated Testing with Targeted Event Sequence Generation"}, {"link": "/document/7098023", "title": "ConDroid: Targeted Dynamic Analysis of Android Applications"}, {"link": "", "title": "SmartDroid: An Automatic System for Revealing UI-based Trigger Conditions in Android Applications"}, {"link": "", "title": "IntelliDroid: A Targeted Input Generator for the Dynamic Analysis of Android Malware"}, {"link": "/document/7985671", "title": "Making Malory Behave Maliciously: Targeted Fuzzing of Android Execution Environments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952363"}
{"ref": [{"link": "", "title": "Compilation error repair: for the student programs, from the student programs"}, {"link": "", "title": "Semantic differential repair for input validation and sanitization"}, {"link": "", "title": "Introduction to software testing"}, {"link": "", "title": "Toward automatic hint generation for logic proof tutoring using historical student data"}, {"link": "", "title": "Synthesizing program input grammars"}, {"link": "/document/7743146", "title": "Towards deriving programming competencies from student errors"}, {"link": "", "title": "Using fast model-based fault localisation to aid students in self-guided program repair and to improve assessment"}, {"link": "", "title": "Understanding the self-directed online learning p, goals, achievements, and challenges of MIT opencourseware subscribers"}, {"link": "", "title": "A web-based bayesian intelligent tutoring system for computer programming"}, {"link": "", "title": "EXE: automatically generating inputs of death"}, {"link": "", "title": "Enhancing syntax error messages appears ineffectual"}, {"link": "", "title": "Are your participants gaming the system?: screening Mechanical Turk workers"}, {"link": "", "title": "Online courses are harming the students who need the most help"}, {"link": "/document/5609691", "title": "A human study of fault localization accuracy"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "SAGE: whitebox fuzzing for security testing"}, {"link": "", "title": "Sample-free learning of input grammars for comprehensive software fuzzing"}, {"link": "", "title": "Online Python Tutor: embeddable web-based program visualization for CS education"}, {"link": "", "title": "DeepFix: Fixing common C language errors by deep learning"}, {"link": "", "title": "What would other programmers do: suggesting solutions to error messages"}, {"link": "", "title": "J-LATTE: a constraint-based tutor for Java"}, {"link": "", "title": "Mining input grammars with AUTOGRAM"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "The future of crowd work"}, {"link": "", "title": "Data-driven program synthesis for hint generation in programming tutors"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "/document/6227204", "title": "Automatic input rectification"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Mind your language: on novices\u2019 interactions with error messages"}, {"link": "", "title": "KATCH: High-coverage testing of software patches"}, {"link": "", "title": "Most popular MITx MOOC reaches 1.2 million enrollments"}, {"link": "", "title": "Angelix: scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Tutoring: Guided learning by doing"}, {"link": "", "title": "Automatic software repair: A bibliography"}, {"link": "", "title": "Automatic grading and feedback using program repair for introductory programming courses"}, {"link": "", "title": "Data-driven hint generation in vast solution spaces: a self-improving Python programming tutor"}, {"link": "", "title": "Coarse-grained detection of student frustration in an introductory programming course"}, {"link": "", "title": "Automated repair of binary and assembly programs for cooperating embedded devices"}, {"link": "", "title": "Learning to blame: localizing novice type errors with data-driven diagnosis"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "A product at every price: A review of MOOC stats and trends in 2017"}, {"link": "", "title": "Measuring and modeling programming experience"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Pex \u2014 white box test generation for.NET"}, {"link": "/document/6693144", "title": "Pex4Fun: A web-based environment for educational gaming via automated test generation"}, {"link": "", "title": "Constructing coding duels in Pex4Fun and code hunt"}, {"link": "", "title": "How long will you wait for a shopping website to load"}, {"link": "", "title": "BlueFix: Using crowd-sourced feedback to support programming students in error diagnosis and repair"}, {"link": "", "title": "A feasibility study of using automated program repair for introductory programming assignments"}, {"link": "", "title": "Yesterday, my program worked. Today, it does not. Why?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952434"}
{"ref": [{"link": "", "title": "Cohesive and isolated development with branches"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "Work practices and challenges in pull-based development: The contributor\u2019s perspective"}, {"link": "", "title": "The state of the octoverse 2018"}, {"link": "/document/7180096", "title": "Wait for it: Determinants of pull request evaluation latency on github"}, {"link": "", "title": "Early prediction of merged code changes to prioritize reviewing tasks"}, {"link": "/document/6976151", "title": "Reviewer recommender of pull-requests in github"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "/document/7203049", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "Neural-machine-translation-based commit message generation: How far are we?"}, {"link": "", "title": "Automatic generation of release notes"}, {"link": "/document/7513412", "title": "Arena: An approach for the automated generation of release notes"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Rouge: A package for automatic evaluation of summaries"}, {"link": "", "title": "Get to the point: Summarization with pointer-generator networks"}, {"link": "/document/8099614", "title": "Self-critical sequence training for image captioning"}, {"link": "", "title": "A deep reinforced model for abstractive summarization"}, {"link": "", "title": "Lexrank: Graph-based lexical centrality as salience in text summarization"}, {"link": "", "title": "Sequence level training with recurrent neural networks"}, {"link": "", "title": "Curating github for engineered software projects"}, {"link": "", "title": "Natural language toolkit nltk 3.4.1 documentation"}, {"link": "/document/7962368", "title": "Choosing an nlp library for analyzing software documentation: A systematic literature review and a series of experiments"}, {"link": "", "title": "pyrouge 0.1.3"}, {"link": "", "title": "The pagerank citation ranking: Bringing order to the web"}, {"link": "", "title": "Deep code comment generation"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "Our replication package"}, {"link": "", "title": "Our source code"}, {"link": "", "title": "Im-proving automatic source code summarization via deep reinforcement learning"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "/document/6976116", "title": "Dynamic inference of change contracts"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "/document/7551998", "title": "On automatic summarization of what and why information in source code changes"}, {"link": "/document/7190168", "title": "Why did this code change?"}, {"link": "", "title": "An empirical study of software release notes"}, {"link": "", "title": "Automated classification of software change messages by semi-supervised latent dirichlet allocation"}, {"link": "", "title": "Automatically classifying software changes via discriminative topic model: Supporting multi-category and cross-project"}, {"link": "", "title": "An insight into the pull requests of github"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in github"}, {"link": "/document/7675420", "title": "Work practices and challenges in pull-based development: The integrator\u2019s perspective"}, {"link": "/document/7180094", "title": "Automatically prioritizing pull requests"}, {"link": "/document/7328331", "title": "Automatically recommending peer reviewers in modern code review"}, {"link": "", "title": "Who should comment on this pull request? analyzing attributes for more accurate commenter recommendation in pull-based development"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Summarizing source code using a neural attention model"}, {"link": "", "title": "Summarizing source code with transferred api knowledge"}, {"link": "", "title": "Deep code comment generation with hybrid lexical and syntactical information"}, {"link": "", "title": "Summarizing software artifacts: A case study of bug reports"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "", "title": "Ausum: Approach for unsupervised bug report summarization"}, {"link": "", "title": "Modelling the \u2018hurried\u2019 bug report reading process to summarize bug reports"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "/document/8115629", "title": "Automatic summarization of api reviews"}, {"link": "", "title": "Automating intention mining"}, {"link": "", "title": "Locating latent design information in developer discussions: A study on pull requests"}, {"link": "", "title": "Summarizing and measuring development activity"}, {"link": "", "title": "Actor-critic algorithms"}, {"link": "", "title": "Simple statistical gradient-following algorithms for connectionist reinforcement learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952330"}
{"ref": [{"link": "", "title": "AI bots trained for 180 years a day to beat humans at Dota2"}, {"link": "", "title": "AI-Benchmark"}, {"link": "", "title": "DNN"}, {"link": "", "title": "DNN Study"}, {"link": "", "title": "GRU"}, {"link": "", "title": "IMDb Dataset"}, {"link": "", "title": "LSTM"}, {"link": "", "title": "Model Quantization"}, {"link": "", "title": "Online Questionnaire"}, {"link": "", "title": "Python ValueError: operands could not be broadcast together with shapes"}, {"link": "", "title": "TextCNN"}, {"link": "", "title": "Unsupported Operation"}, {"link": "", "title": "Wilcoxon Rank Sum Test"}, {"link": "", "title": "Tensorflow: A system for large-scale machine learning"}, {"link": "", "title": "Mobile object detection using TensorFlow Lite and transfer learning"}, {"link": "", "title": "Core ML"}, {"link": "", "title": "An in-depth performance characterization of CPU-and GPU-based DNN training on modern architectures"}, {"link": "", "title": "Comparative study of deep learning software frameworks"}, {"link": "", "title": "Comparative study of caffe, neon, theano, and torch for deep learning"}, {"link": "", "title": "Decision-based adversarial attacks: Reliable attacks against black-box machine learning models"}, {"link": "/document/7958570", "title": "Towards evaluating the robustness of neural networks"}, {"link": "", "title": "Deepdriving: Learning affordance for direct perception in autonomous driving"}, {"link": "", "title": "Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems"}, {"link": "", "title": "Empirical evaluation of gated recurrent neural networks on sequence modeling"}, {"link": "", "title": "Dawnbench: An end-to-end deep learning benchmark and competition"}, {"link": "", "title": "Deepstellar: model-based quantitative analysis of stateful deep learning systems"}, {"link": "", "title": "Explaining and harnessing adversarial examples (2014)"}, {"link": "", "title": "TensorFlow Lite"}, {"link": "", "title": "TensorFlow.js"}, {"link": "/document/7508408", "title": "Lstm: A search space odyssey"}, {"link": "", "title": "Static and dynamic neural networks: from fundamentals to advanced theory"}, {"link": "/document/7780459", "title": "Deep residual learning for image recognition"}, {"link": "", "title": "Speech and language processing"}, {"link": "", "title": "Reluplex: An efficient smt solver for verifying deep neural networks"}, {"link": "/document/8098808", "title": "Comparative analysis of open source frameworks for machine learning with use case in single-threaded and multi-threaded modes"}, {"link": "", "title": "CIFAR-10 dataset"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "", "title": "The MNIST database of handwritten digits"}, {"link": "/document/7723730", "title": "Evaluating the energy efficiency of deep convolutional neural networks on cpus and gpus"}, {"link": "/document/8416388", "title": "Benchmarking deep learning frameworks: Design considerations, metrics and beyond"}, {"link": "/document/8668044", "title": "Deepct: Tomographic combinatorial testing for deep learning systems"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "/document/8539073", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "", "title": "Moving deep learning into web browser: How far can we go?"}, {"link": "", "title": "MMdnn"}, {"link": "", "title": "TensorFuzz: Debugging neural networks with coverage-guided fuzzing"}, {"link": "", "title": "Deep learning for mobile multimedia: A survey"}, {"link": "", "title": "Practical black-box attacks against deep learning systems using adversarial examples"}, {"link": "", "title": "Automatic differentiation in PyTorch"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "/document/8812095", "title": "Cradle: Cross-backend validation to detect and localize bugs in deep learning libraries"}, {"link": "", "title": "Snapdragon"}, {"link": "", "title": "Core ML Quantization"}, {"link": "", "title": "Foolbox: A python toolbox to benchmark the robustness of machine learning models"}, {"link": "", "title": "Software engineering for machine learning: A case study"}, {"link": "", "title": "Samsung Exynos 9"}, {"link": "", "title": "CNTK: Microsoft\u2019s open-source deeplearning toolkit"}, {"link": "/document/7980078", "title": "Evaluation of deep learning frameworks over different HPC architectures"}, {"link": "/document/8355444", "title": "A comparative study of open source deep learning frameworks"}, {"link": "/document/7979887", "title": "Benchmarking state-of-the-art deep learning software tools"}, {"link": "", "title": "Very deep convolutional networks for large-scale image recognition"}, {"link": "", "title": "Post-training Quantization"}, {"link": "", "title": "Quantization-aware Training"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "/document/8416402", "title": "Deep learning towards mobile applications"}, {"link": "", "title": "Kirin 970"}, {"link": "", "title": "Deephunter: a coverage-guided fuzz testing framework for deep neural networks"}, {"link": "", "title": "Diffchaser: Detecting disagreements for deep neural networks"}, {"link": "", "title": "A first look at deep learning apps on smartphones"}, {"link": "", "title": "An empirical study on TensorFlow program bugs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952401"}
{"ref": [{"link": "", "title": "Retracer: Triaging crashes by reverse execution from partial memory dumps,\u201d"}, {"link": "", "title": "Postmortem program analysis with hardware-enhanced post-crash artifacts"}, {"link": "", "title": "Credal: Towards locating a memory corruption vulnerability with your core dump"}, {"link": "", "title": "Analyzing multicore dumps to facilitate concurrency bug reproduction"}, {"link": "", "title": "Clap: Recording local executions to reproduce concurrency failures"}, {"link": "/document/6227168", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Recrash: Making software failures reproducible by preserving object states"}, {"link": "", "title": "Mozilla RR"}, {"link": "", "title": "Doubleplay: parallelizing sequential logging and replay"}, {"link": "", "title": "Coreracer: a practical memory race recorder for multicore x86 tso processors"}, {"link": "", "title": "Gdb and reverse debugging"}, {"link": "", "title": "Time travel debugging"}, {"link": "", "title": "REPT: Reverse debugging of failures in deployed software"}, {"link": "", "title": "Offensive security exploit database archive"}, {"link": "", "title": "Processor tracing"}, {"link": "", "title": "Embedded trace macrocell architecture specification"}, {"link": "", "title": "Analyzing memory accesses in x86 executables"}, {"link": "", "title": "Wysinwyx: What you see is not what you execute"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Learning precise timing with lstm recurrent networks"}, {"link": "", "title": "Learning phrase representations using rnn encoderdecoder for statistical machine translation"}, {"link": "", "title": "Rectifier nonlinearities improve neural network acoustic models"}, {"link": "", "title": "Pattern recognition and machine learning. springer"}, {"link": "", "title": "Minimum cross entropy thresholding"}, {"link": "", "title": "Large-scale machine learning with stochastic gradient descent"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "The vanishing gradient problem during learning recurrent neural nets and problem solutions"}, {"link": "", "title": "Recognizing functions in binaries with neural networks"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Gated feedback recurrent neural networks"}, {"link": "", "title": "Neural nets can learn function type signatures from binaries"}, {"link": "/document/650093", "title": "Bidirectional recurrent neural networks"}, {"link": "", "title": "Deep api learning"}, {"link": "/document/1165342", "title": "An introduction to hidden markov models"}, {"link": "", "title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data"}, {"link": "/document/6638947", "title": "Speech recognition with deep recurrent neural networks"}, {"link": "", "title": "Pin: building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Keras"}, {"link": "", "title": "Theano: A python framework for fast computation of mathematical expressions"}, {"link": "", "title": "Understanding the reproducibility of crowd-reported security vulnerabilities"}, {"link": "", "title": "Recognizing functions in binaries with neural networks"}, {"link": "", "title": "Assembly instruction level reverse execution for debugging"}, {"link": "/document/1317474", "title": "A fast assembly level reverse execution method via dynamic slicing"}, {"link": "", "title": "A new method for program inversion"}, {"link": "", "title": "Automated debugging for arbitrarily long executions"}, {"link": "", "title": "Learning to analyze binary computer code"}, {"link": "", "title": "Byteweight: Learning to recognize functions in binary code"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "/document/8330222", "title": "Using recurrent neural networks for decompilation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952186"}
{"ref": [{"link": "", "title": "Taxonomy and Definitions for Terms Related to Driving Automation Systems for On-Road Motor Vehicles"}, {"link": "", "title": "Waymo, On the road to fully self-driving \u2013 waymo safety report"}, {"link": "", "title": "Handbook of Robotics"}, {"link": "", "title": "Handbook of Driver Assistance Systems"}, {"link": "", "title": "Inside waymo\u2019s secret world for training self-driving cars"}, {"link": "/document/8500406", "title": "Scenarios for development, test and validation of automated vehicles"}, {"link": "/document/1702369", "title": "Automatic generation of floating-point test data"}, {"link": "/document/5954405", "title": "Search-based software testing: Past, present and future"}, {"link": "/document/5210118", "title": "A systematic review of the application and empirical investigation of search-based test case generation"}, {"link": "", "title": "Bayesian Approach to Global Optimization - Theory and Applications"}, {"link": "/document/7795751", "title": "Utilizing s-taliro as an automatic test generation framework for autonomous vehicles"}, {"link": "", "title": "Testing cyber-physical systems through bayesian optimization"}, {"link": "/document/8109236", "title": "Industrial evaluation of search-based test generation techniques for control systems"}, {"link": "", "title": "Experience report: Application of falsification methods on the UxAS system"}, {"link": "", "title": "Search-based automated testing of continuous controllers: Framework, tool support, and case studies"}, {"link": "", "title": "Breach, a toolbox for verification and parameter synthesis of hybrid systems"}, {"link": "", "title": "STaLiRo: A tool for temporal logic falsification for hybrid systems"}, {"link": "", "title": "Robust satisfaction of temporal logic over real-valued signals"}, {"link": "", "title": "Robustness of temporal logic specifications for continuous-time signals"}, {"link": "", "title": "Specification-based monitoring of cyber-physical systems: A survey on theory, tools and applications"}, {"link": "", "title": "Mil testing of highly configurable continuous controllers: scalable search using surrogate models"}, {"link": "", "title": "Cocotest: a tool for model-in-the-loop testing of continuous controllers"}, {"link": "/document/1443364", "title": "LOLA: runtime monitoring of synchronous systems"}, {"link": "", "title": "MathWorks, Global optimization toolbox"}, {"link": "", "title": "MathWorks, Bayesian optimization workflow"}, {"link": "", "title": "CarMaker: Virtual testing of automobiles and light-duty vehicles"}, {"link": "", "title": "IBM Engineering Requirements Management DOORS Family"}, {"link": "/document/4019437", "title": "A multilevel collision mitigation approach \u2013 its situation assessment, decision making, and performance tradeoffs"}, {"link": "", "title": "Analyse einer Testmethode zur Qualit\u00e4tssteigerung im Bereich des hochautomatisierten Fahrens"}, {"link": "", "title": "MathWorks"}, {"link": "", "title": "Robot operating system"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of searchbased testing: Local, global, and hybrid search"}, {"link": "", "title": "Testing autonomous cars for feature interaction failures using many-objective search"}, {"link": "", "title": "Parallelised bayesian optimisation via thompson sampling"}, {"link": "", "title": "Parallel bayesian global optimization of expensive functions"}, {"link": "", "title": "STL*: Extending signal temporal logic with signal-value freezing operator"}, {"link": "", "title": "Robust satisfaction of temporal logic over real-valued signals"}, {"link": "", "title": "Time robustness in mtl and expressivity in hybrid system falsification"}, {"link": "", "title": "The logic of bugs"}, {"link": "", "title": "Falsification of temporal logic requirements using gradient based local search in space and time"}, {"link": "/document/8500632", "title": "Ontology based scene creation for the development of automated vehicles"}, {"link": "/document/5582214", "title": "Stochastic optimization on continuous domains with finite-time guarantees by markov chain monte carlo methods"}, {"link": "/document/6917426", "title": "Robustness-guided temporal logic testing and verification for stochastic cyber-physical systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952365"}
{"ref": [{"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Glove: Global vectors for word representation"}, {"link": "", "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning"}, {"link": "", "title": "Evaluation methods for unsupervised word embeddings"}, {"link": "", "title": "Word representations: a simple and general method for semi-supervised learning"}, {"link": "", "title": "Embeddings for word sense disambiguation: An evaluation study"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Predicting program properties from big code"}, {"link": "/document/8816775", "title": "Semantic source code models using identifier embeddings"}, {"link": "", "title": "Deepbugs: a learning approach to name-based bug detection"}, {"link": "", "title": "Summarizing source code using a neural attention model"}, {"link": "", "title": "code2vec: Learning distributed representations of code"}, {"link": "", "title": "user2code2vec: Embeddings for profiling students based on distributional representations of source code"}, {"link": "/document/8668043", "title": "Sorting and transforming program repair ingredients via deep learning code similarities"}, {"link": "", "title": "Deep api learning"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Learning program embeddings to propagate feedback on student code"}, {"link": "/document/8816754", "title": "Import2vec-learning embeddings for software libraries"}, {"link": "/document/7332513", "title": "Exploring the use of deep learning for feature location"}, {"link": "", "title": "Deep code comment generation"}, {"link": "", "title": "Large-scale and language-oblivious code authorship identification"}, {"link": "", "title": "Sourcerercc: scaling code clone detection to big-code"}, {"link": "", "title": "Learning to represent programs with graphs"}, {"link": "", "title": "Semantic code repair using neuro-symbolic transformation networks"}, {"link": "/document/8668039", "title": "Learning-based recursive aggregation of abstract syntax trees for code clone detection"}, {"link": "", "title": "Cross-language learning for program classification using bilateral tree-based convolutional neural networks"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "A general path-based representation for predicting program properties"}, {"link": "", "title": "Learning to sport and refactor inconsistent method names"}, {"link": "", "title": "Easy over hard: A case study on deep learning"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Bleu: a method for automatic evaluation of machine translation"}, {"link": "", "title": "Correlating automated and human assessments of machine translation quality"}, {"link": "/document/7203049", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "", "title": "Neuralmachine-translation-based commit message generation: how far are we?"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "Opennmt: Open-source toolkit for neural machine translation"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "A survey of modern authorship attribution methods"}, {"link": "", "title": "De-anonymizing programmers via code stylometry"}, {"link": "/document/565012", "title": "Experiment on the automatic detection of function clones in a software system using metrics"}, {"link": "/document/6498452", "title": "An exploratory study of cloning in industrial software product lines"}, {"link": "", "title": "An empirical study on the maintenance of source code clones"}, {"link": "/document/6080794", "title": "Late propagation in software clones"}, {"link": "/document/7332459", "title": "Evaluating clone detection tools with bigclonebench"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "", "title": "Bigcloneeval: A clone detection tool evaluation framework with bigclonebench"}, {"link": "", "title": "Ambient software engineering group seclone project"}, {"link": "", "title": "Positive and unlabeled learning for detecting software functional clones with adversarial training"}, {"link": "", "title": "Oreo: Detection of clones in the twilight zone"}, {"link": "", "title": "Code vectors: understanding programs through embedded abstracted symbolic traces"}, {"link": "", "title": "Distributed representations of sentences and documents"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "", "title": "Mining duplicate questions in stack overflow"}, {"link": "", "title": "Deepam: migrate apis with multi-modal sequence to sequence learning"}, {"link": "", "title": "Problems with evaluation of word embeddings using word similarity tasks"}, {"link": "", "title": "Intrinsic evaluation of word vectors fails to predict extrinsic performance"}, {"link": "", "title": "A literature study of embeddings on source code"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "", "title": "Deep learning type inference"}, {"link": "", "title": "Path-based function embedding and its application to specification mining"}, {"link": "", "title": "Neural code comprehension: A learnable representation of code semantics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952475"}
{"ref": [{"link": "", "title": "Fundamental statistics in psychology and education"}, {"link": "/document/7932530", "title": "A survey of recent trends in testing concurrent software systems"}, {"link": "", "title": "Applications of synchronization coverage"}, {"link": "", "title": "A randomized scheduler with probabilistic guarantees of finding bugs"}, {"link": "", "title": "Efficient and precise datarace detection for multithreaded object-oriented programs"}, {"link": "/document/7985668", "title": "Efficient detection of thread safety violations via coverage-guided generation of concurrent tests"}, {"link": "", "title": "Precise race detection and efficient model checking using locksets"}, {"link": "", "title": "Goldilocks: a race and transaction-aware Java runtime"}, {"link": "", "title": "RacerX: effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "FastTrack: efficient and precise dynamic race detection"}, {"link": "", "title": "Extended static checking for Java"}, {"link": "", "title": "Guidelines for coverage-based comparisons of non-adequate test suites"}, {"link": "", "title": "Java Concurrency in Practice"}, {"link": "", "title": "Testing concurrent programs to achieve high synchronization coverage"}, {"link": "", "title": "Debugging concurrent software: Advances and challenges"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "A new measure of rank correlation"}, {"link": "", "title": "Coverage metrics for saturation-based and search-based testing of concurrent software"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": "Wei. Pfix: Fixing concurrency bugs based on memory access patterns"}, {"link": "/document/7816591", "title": "Towards using concurrent java api correctly"}, {"link": "/document/7092703", "title": "Racechecker: efficient identification of harmful data races"}, {"link": "", "title": "Detecting data races using dynamic escape analysis based on read barrier"}, {"link": "/document/4222570", "title": "Feedback-Directed Random Test Generation"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "UNICORN: a unified approach for localizing non-deadlock concurrency bugs"}, {"link": "", "title": "Notes on the history of correlation"}, {"link": "", "title": "Online data-race detection via coherency guarantees"}, {"link": "", "title": "Multirace: efficient on-the-fly data race detection in multithreaded C++ programs"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "Synthesizing racy tests"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "Effective random testing of concurrent programs"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "Coverage metrics for requirements-based testing: Evaluation of effectiveness"}, {"link": "/document/6569726", "title": "Generating unit tests for concurrent classes"}, {"link": "/document/126769", "title": "Structural testing of concurrent programs"}, {"link": "", "title": "Coverage-driven test code generation for concurrent classes"}, {"link": "", "title": "Associating synchronization constraints with data in an object-oriented language"}, {"link": "", "title": "Object race detection"}, {"link": "", "title": "Static conflict analysis for multi-threaded object-oriented programs"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "", "title": "Individual Comparisons by Ranking Methods"}, {"link": "", "title": "All-dupath coverage for parallel programs"}, {"link": "", "title": "Racetrack: efficient detection of data race conditions via adaptive tracking"}, {"link": "", "title": "Micha\u0142Zalewski. AFL"}, {"link": "", "title": "Software unit test coverage and adequacy"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952403"}
{"ref": [{"link": "", "title": "Github Search"}, {"link": "", "title": "Simian - Similarity Analyzer.[Online]"}, {"link": "", "title": "Spectral Clusterer for WEKA"}, {"link": "", "title": "Stack Overflow"}, {"link": "", "title": "Mining idioms from source code"}, {"link": "", "title": "Pattern recognition and machine learning"}, {"link": "/document/1565664", "title": "Shortest-path kernels on graphs"}, {"link": "", "title": "Protein function prediction via graph kernels"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "", "title": "Enzyme family classification by support vector machines"}, {"link": "/document/1524963", "title": "Document clustering using locality preserving indexing"}, {"link": "", "title": "Parameter-free probabilistic api mining at github scale"}, {"link": "", "title": "A survey of kernels for structured data"}, {"link": "", "title": "Mining unit test cases to synthesize api usage examples"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "The influence of the sigmoid function parameters on the speed of backpropagation learning"}, {"link": "/document/5609665", "title": "Index-based code clone detection: incremental, distributed, scalable"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Towards an intelligent code search engine"}, {"link": "/document/5958261", "title": "Crash graphs: An aggregated view of multiple crashes to improve crash triage"}, {"link": "", "title": "Semantic clustering: Identifying topics in source code"}, {"link": "", "title": "Semi-supervised graph clustering: a kernel approach"}, {"link": "/document/7372014", "title": "Codehow: Effective code search based on API understanding and extended boolean model"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Efficient clustering of high-dimensional data sets with application to reference matching"}, {"link": "/document/7675466", "title": "How can I use this method?"}, {"link": "/document/7727817", "title": "Contextual weisfeiler-lehman graph kernel for malware detection"}, {"link": "", "title": "Api code recommendation using statistical learning from fine-grained changes"}, {"link": "/document/8330220", "title": "A deep neural network language model with contexts for source code"}, {"link": "/document/7675464", "title": "Graph-based statistical language model for code"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "Accurate and efficient structural characteristic feature extraction for clone detection"}, {"link": "/document/8812051", "title": "Focus: A recommender system for mining API function calls and usage patterns"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Learning API usages from bytecode: A statistical approach"}, {"link": "", "title": "Learning to rank code examples for code search engines"}, {"link": "", "title": "A simple and fast algorithm for k-medoids clustering"}, {"link": "/document/853847", "title": "Autoalbum: Clustering digital photographs using probabilistic model merging"}, {"link": "/document/1165342", "title": "An introduction to hidden markov models"}, {"link": "", "title": "Graph kernels for chemical informatics"}, {"link": "", "title": "Topical clustering of tweets"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "", "title": "Kernel methods for pattern analysis"}, {"link": "", "title": "Graph kernels"}, {"link": "/document/6624045", "title": "Mining succinct and high-coverage API usage patterns from source code"}, {"link": "/document/7023378", "title": "Heterogeneous metric learning with content-based regularization for software artifact retrieval"}, {"link": "", "title": "Mapo: Mining API usages from open source repositories"}, {"link": "", "title": "Multiple instance learning on structured data"}, {"link": "", "title": "Semantic video clustering across sources using bipartite spectral clustering"}, {"link": "", "title": "Bing developer assistant: Improving developer productivity by recommending sample code"}, {"link": "", "title": "Mapo: Mining and recommending API usage patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952546"}
{"ref": [{"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "An investigation on the feasibility of cross-project defect prediction"}, {"link": "", "title": "Sample-based software defect prediction with active and semi-supervised learning"}, {"link": "", "title": "Transfer learning for cross-company software defect prediction"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "", "title": "Transfer defect learning"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Adapting a fault prediction model to allow inter language reuse"}, {"link": "", "title": "Multi: Multi-objective effort-aware just-in-time software defect prediction"}, {"link": "", "title": "Problems with precision: a response to comments on"}, {"link": "", "title": "High-order conservative remapping with a posteriori MOOD stabilization on polygonal meshes"}, {"link": "/document/6464273", "title": "Data quality: some comments on the nasa software defect datasets"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "", "title": "Relink: recovering links between bugs and changes"}, {"link": "/document/7372033", "title": "Clami: Defect prediction on unlabeled datasets"}, {"link": "/document/6824804", "title": "Researcher bias: the use of machine learning in software defect prediction"}, {"link": "", "title": "Feature selection for text categorization on imbalanced data"}, {"link": "", "title": "Tackling class overlap and imbalance problems in software defect prediction"}, {"link": "", "title": "Dictionary learning based software defect prediction"}, {"link": "", "title": "Defect prediction from static code features: current results, limitations, new approaches"}, {"link": "/document/8250297", "title": "Software defect prediction using feature selection and random forest algorithm"}, {"link": "", "title": "Software component quality prediction using knn andfuzzy logic"}, {"link": "", "title": "Cost-sensitive feature selection with application in software defect prediction"}, {"link": "", "title": "A systematic review of machine learning techniques for software fault prediction"}, {"link": "/document/6747166", "title": "Cross-project defect prediction models: L\u2019union fait la force"}, {"link": "/document/7972992", "title": "A comparative study to benchmark cross-project defect prediction approaches"}, {"link": "", "title": "How far we have progressed in the journey? an examination of cross-project defect prediction"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Negative samples reduction in cross-company software defects prediction"}, {"link": "", "title": "Empirical evaluation of the effects of mixed project data on learning defect predictors"}, {"link": "", "title": "Value-cognitive boosting with a support vector machine for cross-project defect prediction"}, {"link": "/document/7435328", "title": "Hydra: Massively compositional model for cross-project defect prediction"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "Noise identification with the kmeans algorithm"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "/document/6624057", "title": "Better cross company defect prediction"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "The meaning and use of the area under a receiver operating characteristic (roc) curve"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "", "title": "A comparative study to benchmark cross-project defect prediction approaches"}, {"link": "", "title": "Cliff\u2019s delta calculator: A non-parametric effect size program for two groups of observations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952192"}
{"ref": [{"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "", "title": "S3: A symbolic string solver for vulnerability detection in web applications"}, {"link": "", "title": "Exe: Automatically generating inputs of death"}, {"link": "/document/5431742", "title": "Reggae: Automated test generation for programs using complex regular expressions"}, {"link": "", "title": "Directed test suite augmentation: Techniques and tradeoffs"}, {"link": "", "title": "Covering code behavior on input validation in functional testing"}, {"link": "/document/6296093", "title": "Blendfuzz: A model-based framework for fuzz testing programs with grammatical inputs"}, {"link": "/document/6340148", "title": "Preventing input validation vulnerabilities in web applications through automated type analysis"}, {"link": "/document/6227124", "title": "Verifying client-side input validation functions using string analysis"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "A survivor\u2019s guide to java program analysis with soot"}, {"link": "", "title": "Efficient chaotic iteration strategies with widenings"}, {"link": "", "title": "dk. brics. automaton\u2013finite-state automata and regular expressions for java, 2010"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Umbc ebiquity-core: Semantic textual similarity systems"}, {"link": "", "title": "An n log n algorithm for minimizing states in a finite automaton"}, {"link": "/document/6319228", "title": "Automated discovery of valid test strings from the web using dynamic regular expressions collation and natural language processing"}, {"link": "", "title": "Free-marginal multirater kappa (multirater k [free]): An alternative to fleiss\u2019 fixed-marginal multirater kappa"}, {"link": "", "title": ""}, {"link": "", "title": "Symbolic pathfinder: integrating symbolic execution with model checking for java bytecode analysis"}, {"link": "", "title": "Evosuite: Automatic test suite generation for object-oriented software"}, {"link": "", "title": "Test input generation with java pathfinder"}, {"link": "", "title": "Jpf for beginners"}, {"link": "/document/7985647", "title": "Analyzing apis documentation and code to detect directive defects"}, {"link": "", "title": "acomment: mining annotations from comments and code to detect interrupt related concurrency bugs"}, {"link": "", "title": "/*icomment: Bugs or bad comments?*/"}, {"link": "/document/6200082", "title": "@tcomment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Semantic differential repair for input validation and sanitization"}, {"link": "", "title": "Automatic generation of valid and invalid test data for string validation routines using web searches and regular expressions"}, {"link": "", "title": "Automatic and lightweight grammar generation for fuzz testing"}, {"link": "", "title": "Defending against injection attacks through context-sensitive string evaluation"}, {"link": "", "title": "Finding security vulnerabilities in java applications with static analysis"}, {"link": "", "title": "Detecting format string vulnerabilities with type qualifiers"}, {"link": "", "title": "Stranger: An automata-based string analysis tool for php"}, {"link": "/document/4344094", "title": "Abstracting symbolic execution with string analysis"}, {"link": "", "title": "An evaluation of automata algorithms for string analysis"}, {"link": "", "title": "Precise analysis of string expressions"}, {"link": "", "title": "Automata-based model counting for string constraints"}, {"link": "", "title": "Hampi: A solver for string constraints"}, {"link": "", "title": "String constraints for verification"}, {"link": "", "title": "A decision procedure for subset constraints over regular languages"}, {"link": "", "title": "An efficient smt solver for string constraints"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "A solver-aided language for test input generation"}, {"link": "", "title": "Exploring regular expression usage and context in python"}, {"link": "", "title": "Translating code comments to procedure specifications"}, {"link": "/document/7675443", "title": "Dase: Document-assisted symbolic execution for improving automated software testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952371"}
{"ref": [{"link": "", "title": "I, as a developer, HATE the idea of AirPush. Lets make a list of apps that use it"}, {"link": "", "title": "Google Play Developer Programme Policies"}, {"link": "", "title": "No More Notification Ads and Icon Ads in Android Apps"}, {"link": "", "title": "How to Disable Notifications from Any App in Android"}, {"link": "", "title": "Notifications in Android N"}, {"link": "", "title": "Xposed Framework API"}, {"link": "", "title": "Android Cloud to Device Messaging"}, {"link": "", "title": "Find out which app is pushing ads in my notification bar?"}, {"link": "", "title": "No More Notification Ads and Icon Ads in Android Apps"}, {"link": "", "title": ""}, {"link": "", "title": "Suspicious Push Notification on Android Phone"}, {"link": "", "title": "The 13 most annoying Facebook notifications, ranked"}, {"link": "", "title": "\u2018Ghost Push\u2019 Malware Threatens Android Users"}, {"link": "", "title": "How to block spam notifications and rogue ads on Android smartphones"}, {"link": "", "title": "Accessibility overview"}, {"link": "", "title": "App Store Review Guidelines"}, {"link": "", "title": "Apple Push Notification service"}, {"link": "", "title": "Firebase console"}, {"link": "", "title": "Monkey"}, {"link": "", "title": "Survey results on Github"}, {"link": "", "title": "Tcpdump"}, {"link": "", "title": "The Zeek Network Security Monitor"}, {"link": "", "title": "Virustotal Detection Result"}, {"link": "", "title": "Detecting misuse of google cloud messaging in android badware"}, {"link": "/document/7527773", "title": "A study of grayware on google play"}, {"link": "/document/7675426", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "", "title": "Reliable third-party library detection in android and its security applications"}, {"link": "/document/7911333", "title": "Towards model checking android applications"}, {"link": "", "title": "Survey response rate levels and trends in organizational research"}, {"link": "", "title": "Longitudinal analysis of android ad library permissions"}, {"link": "", "title": "Perplexed messengers from the cloud: Automated security analysis of push-messaging integrations"}, {"link": "", "title": "Madfraud: Investigating ad fraud in android applications"}, {"link": "/document/6930601", "title": "An approach for modeling and analyzing mobile push notification services"}, {"link": "", "title": "Frauddroid: Automated ad fraud detection for android apps"}, {"link": "", "title": "How do mobile apps violate the behavioral policy of advertisement libraries?"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "", "title": "Unsafe exposure analysis of mobile in-app advertisements"}, {"link": "", "title": "Appnet: understanding app recommendation in google play"}, {"link": "/document/8029995", "title": "Detecting and classifying android puas by similarity of dns queries"}, {"link": "/document/8668035", "title": "Want to earn a few extra bucks? a first look at money-making apps"}, {"link": "", "title": "Dating with scambots: Understanding the ecosystem of fraudulent dating applications"}, {"link": "", "title": "Asdroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction"}, {"link": "/document/8453877", "title": "Automated testing of android apps: A systematic literature review"}, {"link": "", "title": "Punobot: Mobile botnet using push notification service in android"}, {"link": "/document/7194581", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}, {"link": "", "title": "Static analysis of android apps: A systematic literature review"}, {"link": "/document/7828100", "title": "Understanding android app piggybacking: A systematic study of malicious code grafting"}, {"link": "", "title": "Revisiting the impact of common libraries for android-related investigations"}, {"link": "/document/7985674", "title": "Libd: scalable and precise third-party library detection in android markets"}, {"link": "", "title": "Mayhem in the push clouds: Understanding and mitigating security hazards in mobile push-messaging services"}, {"link": "", "title": "Droidbot: A lightweight ui-guided test input generator for android"}, {"link": "/document/8621866", "title": "Automated extraction of personal knowledge from smartphone push notifications"}, {"link": "", "title": "A technique for the measurement of attitudes"}, {"link": "", "title": "Efficient privilege de-escalation for ad libraries in mobile apps"}, {"link": "", "title": "{DECAF}: Detecting and characterizing ad fraud in mobile apps"}, {"link": "", "title": "Libradar: fast and accurate detection of third-party libraries in android apps"}, {"link": "/document/7195627", "title": "Intelligent push notification for converged mobile computing and internet of things"}, {"link": "", "title": "An in-situ study of mobile phone notifications"}, {"link": "", "title": "Dismissed!: a detailed exploration of how mobile phone users handle push notifications"}, {"link": "", "title": "Are these ads safe: Detecting hidden attacks through the mobile app-web interfaces"}, {"link": "", "title": "What mobile ads know about mobile users"}, {"link": "", "title": "Investigating user privacy in android ad libraries"}, {"link": "/document/8804455", "title": "A large-scale empirical study on industrial fake apps"}, {"link": "", "title": "Evading android runtime analysis via sandbox detection"}, {"link": "/document/7965410", "title": "Understanding third-party libraries in mobile app analysis"}, {"link": "", "title": "Wukong: A scalable and accurate two-phase approach to android app clone detection"}, {"link": "", "title": "Automated detection and classification of third-party libraries in large scale android apps"}, {"link": "", "title": "Understanding the evolution of mobile app ecosystems: A longitudinal measurement study of google play"}, {"link": "", "title": "Beyond google play: A large-scale comparative study of chinese android app markets"}, {"link": "/document/8816783", "title": "Rmvdroid: towards a reliable android malware dataset with app metadata"}, {"link": "", "title": "Push notification mechanisms for pervasive smartphone applications"}, {"link": "", "title": "Abusing notification services on smartphones for phishing and spamming"}, {"link": "", "title": "Enmobile: Entity-based characterization and analysis of mobile malware"}, {"link": "/document/6807765", "title": "Discovery of ranking fraud for mobile apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952509"}
{"ref": [{"link": "/document/6569712", "title": "Improving test generation under rich contracts by tight bounds and incremental SAT solving"}, {"link": "", "title": "Introduction to software testing"}, {"link": "", "title": "Titanium: efficient analysis of evolving alloy specifications"}, {"link": "/document/796139", "title": "Embracing change with extreme programming"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "", "title": "QuickCheck: a lightweight tool for random testing of Haskell programs"}, {"link": "/document/4564473", "title": "Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy Approach"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "EvoSuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "Analysis of invariants for efficient bounded verification"}, {"link": "", "title": "Regression Towards Mediocrity in Hereditary Stature"}, {"link": "", "title": "Fundamentals of Software Engineering"}, {"link": "", "title": "Software Abstractions: Logic, language, and analysis"}, {"link": "", "title": "An Integrated Approach to Software Engineering"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "TestEra: Specification-Based Testing of Java Programs Using SAT"}, {"link": "", "title": "Program development in Java: abstraction, specification, and object-oriented design"}, {"link": "", "title": "Using contracts and boolean queries to improve the quality of automatic test generation"}, {"link": "", "title": "MuJava: An Automated Class Mutation System"}, {"link": "", "title": "Certification processes for safety-critical and mission-critical aerospace software"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Efficient tight field bounds computation based on shape predicates"}, {"link": "", "title": "Field-Exhaustive Testing"}, {"link": "", "title": "Parallel Bounded Verification of Alloy Models by TranScoping"}, {"link": "", "title": "Whispec: White-box testing of libraries using declarative specifications"}, {"link": "", "title": "Testing container classes: random or systematic?"}, {"link": "", "title": "Pex: White Box Test Generation for.NET"}, {"link": "", "title": "Test Input Generation with Java PathFinder"}, {"link": "", "title": "Test Input Generation for Java Containers using State Matching"}, {"link": "", "title": "Software Unit Test Coverage and Adequacy"}, {"link": "", "title": "JUnit"}, {"link": "", "title": "Jacoco"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952481"}
{"ref": [{"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of Java bytecode"}, {"link": "/document/6234425", "title": "Unleashing Mayhem on Binary Code"}, {"link": "", "title": "Automatic exploit generation"}, {"link": "", "title": "Efficient State Merging in Symbolic Execution"}, {"link": "", "title": "Directed Symbolic Execution"}, {"link": "", "title": "Lambda Calculus Notation with Nameless Dummies, a Tool for Automatic Formula Manipulation, with Application to the Church-Rosser Theorem"}, {"link": "", "title": "KLEE 1.4.0"}, {"link": "", "title": "A Decision Procedure for Bit-Vectors and Arrays"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java PathFinder"}, {"link": "", "title": "Multise: multi-path symbolic execution using value summaries"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Demand-driven compositional symbolic execution"}, {"link": "", "title": "Compositional may-must program analysis: Unleashing the power of alternation"}, {"link": "/document/7194612", "title": "Compositional Symbolic Execution with Memoized Replay"}, {"link": "", "title": "RWset: Attacking Path Explosion in Constraint-Based Test Generation"}, {"link": "/document/5270315", "title": "Fitness-guided path exploration in dynamic symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952548"}
{"ref": [{"link": "/document/7816474", "title": "An automated approach for recommending when to stop performance tests"}, {"link": "", "title": "Virtual machine warmup blows hot and cold"}, {"link": "", "title": "Unit testing performance with stochastic performance logic"}, {"link": "/document/8094434", "title": "An exploratory study of performance regression introducing code changes"}, {"link": "", "title": "Model-Based Software Performance Analysis"}, {"link": "", "title": "Agnostic tests can control the type i and type ii errors simultaneously"}, {"link": "", "title": "Statistically rigorous java performance evaluation"}, {"link": "", "title": "What change history tells us about thread synchronization"}, {"link": "", "title": "Greenminer: A hardware based mining software repositories software energy consumption framework"}, {"link": "", "title": "Rigorous benchmarking in reasonable time"}, {"link": "/document/7332486", "title": "How developers detect and fix performance bottlenecks in android apps"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "Better early than never: Performance test acceleration by regression test selection"}, {"link": "", "title": "How to detect performance changes in software history: Performance analysis of software system versions"}, {"link": "", "title": "Learning from source code history to identify performance failures"}, {"link": "", "title": "More new software performance antipatterns: Even more ways to shoot yourself in the foot"}, {"link": "", "title": "Unit testing performance in java projects: Are we there yet?"}, {"link": "", "title": "Detection and solution of software performance antipatterns in palladio architectural models"}, {"link": "", "title": "Kieker: A framework for application performance monitoring and dynamic software analysis"}, {"link": "", "title": "Including performance benchmarks into continuous integration to enable DevOps"}, {"link": "/document/6606601", "title": "Supporting swift reaction: Automatically uncovering performance problems by systematic experiments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952552"}
{"ref": [{"link": "/document/1000449", "title": "A state-of-the-art survey on software merging"}, {"link": "/document/4228648", "title": "Mining workspace updates in cvs"}, {"link": "", "title": "A formal investigation of diff3"}, {"link": "", "title": "Structured merge with autotuning: Balancing precision and performance"}, {"link": "", "title": "Jdiff: A differencing technique and tool for object-oriented programs"}, {"link": "", "title": "Cdiff: A syntax directed differencer for c++ programs"}, {"link": "", "title": "Structure-oriented merging of revisions of software documents"}, {"link": "", "title": "Semistructured merge: Rethinking merge in revision control systems"}, {"link": "", "title": "Evaluating and improving semistructured merge"}, {"link": "", "title": "Online appendix for the paper the impact of structure on software merging: Semistructured versus structured merge"}, {"link": "/document/7321191", "title": "Assessing semistructured merge in version control systems: A replicated experiment"}, {"link": "", "title": "Integrating noninterfering versions of programs"}, {"link": "", "title": "On merging software extensions"}, {"link": "", "title": "Curating github for engineered software projects"}, {"link": "/document/7962385", "title": "Oops, my tests broke the build: An explorative analysis of travis ci with github"}, {"link": "", "title": "Diversity in software engineering research"}, {"link": "", "title": "Jfstmerge - a semistructured merge tool for java applications"}, {"link": "", "title": "Jdime - structured merge with auto-tuning"}, {"link": "", "title": "Balancing precision and performance in structured merge"}, {"link": "/document/8115665", "title": "Renaming and shifted code in structured merging: Looking ahead for precision and performance"}, {"link": "", "title": "Conflict resolution for structured merge via version space algebra"}, {"link": "/document/8802856", "title": "Enhancing precision of structured merge by proper tree matching"}, {"link": "", "title": "Sample size estimation: how many individuals should be studied?"}, {"link": "/document/8054866", "title": "Evaluation of tools for hairy requirements engineering and software engineering tasks"}, {"link": "", "title": "Syntactic software merging"}, {"link": "/document/4021361", "title": "Object-oriented software configuration management"}, {"link": "/document/4509441", "title": "Effective software merging in the presence of object-oriented refactorings"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "Precise version control of trees with line-based version control systems"}, {"link": "", "title": "Software merge: Semantics of combining changes to programs"}, {"link": "/document/336770", "title": "Semantic diff: A tool for summarizing the effects of modifications"}, {"link": "", "title": "Program integration for languages with procedure calls"}, {"link": "", "title": "Verified three-way program merge"}, {"link": "", "title": "Proactive detection of collaboration conflicts"}, {"link": "/document/6606619", "title": "Cassandra: Proactive conflict minimization through optimized task scheduling"}, {"link": "/document/7070484", "title": "How we resolve conflict: an empirical study of method-level conflict resolution"}, {"link": "/document/7476775", "title": "Modern release engineering in a nutshell \u2013 why researchers should care"}, {"link": "", "title": "Software engineering at google"}, {"link": "", "title": "On the nature of merge conflicts: a study of 2,731 open source java projects hosted by github"}, {"link": "", "title": "Analyzing conflict predictors in open-source java projects"}, {"link": "", "title": "Understanding semi-structured merge conflict characteristics in open-source java projects"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952301"}
{"ref": [{"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "HDD: Hierarchical delta debugging"}, {"link": "/document/8115697", "title": "Automatically reducing tree-structured test inputs"}, {"link": "", "title": "ORBS: Language-independent program slicing"}, {"link": "", "title": "Automated bug isolation via program chipping"}, {"link": "", "title": "Testcase reduction for C compiler bugs"}, {"link": "", "title": "Kotlin fuzzer"}, {"link": "", "title": "JS Delta"}, {"link": "", "title": "An O(ND) difference algorithm and its variations"}, {"link": "", "title": "Diff match patch library"}, {"link": "", "title": "Slicing: Program slices and their applications"}, {"link": "/document/1317473", "title": "Using compressed bytecode traces for slicing Java programs"}, {"link": "", "title": "Pardis: Priority aware test case reduction"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "Delta debugging implementation"}, {"link": "", "title": "Cause reduction: Delta debugging, even without bugs"}, {"link": "", "title": "Kaveri: Delivering the Indus Java program slicer to Eclipse"}, {"link": "/document/8080067", "title": "JavaBST: Java backward slicing tool"}, {"link": "/document/1357853", "title": "CodeSurfer/Path inspector"}, {"link": "", "title": "Efficient unit test case minimization"}, {"link": "", "title": "Locating faulty code using failure-inducing chops"}, {"link": "/document/7962327", "title": "Tree preprocessing and test outcome caching for efficient hierarchical delta debugging"}, {"link": "", "title": "The definitive ANTLR 4 reference"}, {"link": "", "title": "Minimization of randomized unit test cases"}, {"link": "", "title": "Isolating relevant component interactions with JINSI"}, {"link": "", "title": "Perses: Syntax-guided program reduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952444"}
{"ref": [{"link": "/document/8804464", "title": "An empirical investigation of incident triage for online service systems"}, {"link": "", "title": "Outage prediction and diagnosis for cloud service systems"}, {"link": "", "title": "Robust log-based anomaly detection on unstable log data"}, {"link": "", "title": "Compiler bug isolation via effective witness test program generation"}, {"link": "", "title": "An empirical comparison of compiler testing techniques"}, {"link": "/document/8952321", "title": "History-guided configuration diversification for compiler test-program generation"}, {"link": "", "title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation"}, {"link": "", "title": "Applying deep learning based automatic bug triager to industrial projects"}, {"link": "", "title": "Fasttext.zip: Compressing text classification models"}, {"link": "", "title": "Convolutional neural networks for sentence classification"}, {"link": "", "title": "Deep pyramid convolutional neural networks for text categorization"}, {"link": "/document/6472238", "title": "Representation learning: A review and new perspectives"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Deep convolutional neural networks for sentiment analysis of short texts"}, {"link": "", "title": "Fuzzy set and cache-based approach for bug triaging"}, {"link": "/document/7484672", "title": "Improving automated bug triaging with specialized topic model"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "", "title": "Improving bug triage with bug tossing graphs"}, {"link": "/document/6982620", "title": "Effective bug triage based on historical bug-fix information"}, {"link": "/document/6815966", "title": "Towards effective bug triage with software data reduction techniques"}, {"link": "/document/5316025", "title": "Optimized assignment of developers for fixing bugs an initial evaluation for eclipse projects"}, {"link": "/document/6624028", "title": "The eclipse and mozilla defect tracking dataset: A genuine dataset for mining bug information"}, {"link": "", "title": "Fingerprinting the datacenter: automated classification of performance crises"}, {"link": "", "title": "Correlating instrumentation data to system states: A building block for automated diagnosis and control"}, {"link": "", "title": "Capturing, indexing, clustering, and retrieving system history"}, {"link": "/document/4550826", "title": "Guided problem diagnosis through active learning"}, {"link": "", "title": "Automated debugging of SLO violations in enterprise systems"}, {"link": "/document/6693105", "title": "Software analytics for incident management of online services: An experience report"}, {"link": "", "title": "Experience report on applying software analytics in incident management of online service"}, {"link": "", "title": "How to tame your online services"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "/document/7503715", "title": "Learning to rank for bug report assignee recommendation"}, {"link": "", "title": "Automated bug assignment: Ensemble-based machine learning in large scale industrial contexts"}, {"link": "/document/6623999", "title": "Bug report assignee recommendation using activity profiles"}, {"link": "/document/5315994", "title": "An empirical study on bug assignment automation using chinese bug data"}, {"link": "/document/6606580", "title": "Porchlight: A tag-based approach to bug triaging"}, {"link": "", "title": "Reducing the effort of bug report triage: Recommenders for development-oriented decisions"}, {"link": "", "title": "Crowdsourced bug triaging: Leveraging q&a platforms for bug assignment"}, {"link": "/document/5609736", "title": "Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging"}, {"link": "", "title": "A time-based approach to automatic bug report assignment"}, {"link": "/document/6623999", "title": "Bug report assignee recommendation using activity profiles"}, {"link": "/document/6623997", "title": "Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation"}, {"link": "/document/5069491", "title": "Assigning bug reports using a vocabulary-based expertise model of developers"}, {"link": "/document/5609736", "title": "Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging"}, {"link": "", "title": "Fixercache: unsupervised caching active developers for diverse bug triage"}, {"link": "/document/6405306", "title": "Triaging incoming change requests: Bug or commit history, or code authorship?"}, {"link": "/document/7332503", "title": "Crowdsourced bug triaging"}, {"link": "", "title": "Support vector machines for classification and regression"}, {"link": "", "title": "Probabilistic topic models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952483"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6786194", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "/document/8367040", "title": "Qbe: Qlearning-based exploration of android applications"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "/document/7180072", "title": "Mining android app usages for generating actionable gui-based execution scenarios"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for android applications"}, {"link": "/document/7381839", "title": "Sig-droid: Automated system input generation for android applications"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "/document/6823880", "title": "Automated generation of oracles for testing user-interaction features of mobile apps"}, {"link": "/document/7985675", "title": "Analysis and testing of notifications in android wear applications"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "/document/7985701", "title": "Automatic text input generation for mobile testing"}, {"link": "", "title": "Monkey see, monkey do: Effective generation of gui tests with inferred macro events"}, {"link": "/document/6681334", "title": "Real challenges in mobile app development"}, {"link": "/document/7102609", "title": "Understanding the test automation culture of app developers"}, {"link": "/document/8094467", "title": "How do developers test android applications?"}, {"link": "", "title": "Interpolated n-grams for model based testing"}, {"link": "", "title": "\u03bcdroid: an energy-aware mutation testing framework for android"}, {"link": "", "title": "Test migration for efficient large-scale assessment of mobile app coding assignments"}, {"link": "", "title": "Transferring tests across web applications"}, {"link": "", "title": "Automated test migration for mobile apps"}, {"link": "", "title": "Augusto: Exploiting popular` functionalities for the generation of semantic gui tests with oracles"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": ""}, {"link": "", "title": "Soot - a java bytecode optimization framework"}, {"link": "", "title": "Automation of android applications functional testing using machine learning activities classification"}, {"link": "", "title": "Appflow: Using machine learning to synthesize robust, reusable ui tests"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet? (e)"}, {"link": "", "title": "Reducing combinatorics in gui testing of android applications"}, {"link": "", "title": ""}, {"link": "/document/6698881", "title": "A pattern-based approach for gui modeling and testing"}, {"link": "", "title": "Testmig: Migrating gui test cases from ios to android"}, {"link": "/document/8952387", "title": "Test migration between mobile apps with similar functionality"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952228"}
{"ref": [{"link": "", "title": "Definition of reproducible builds"}, {"link": "", "title": "Deterministic builds part one: Cyberwar and global compromise"}, {"link": "", "title": "Nix as HPC package management system"}, {"link": "", "title": "Debian"}, {"link": "", "title": "Guix"}, {"link": "", "title": "F-Droid"}, {"link": "", "title": "Automated localization for unreproducible builds"}, {"link": "", "title": "A large-scale empirical study of the relationship between build technology and build maintenance"}, {"link": "", "title": "Morbig: A static parser for POSIX shell"}, {"link": "", "title": "NodeMerge: Template based efficient data reduction for big-data causality analysis"}, {"link": "", "title": "ReproZip: Using provenance to support computational reproducibility"}, {"link": "", "title": "Coz: Finding code that counts with causal profiling"}, {"link": "", "title": "Behavior query discovery in system-generated temporal graphs"}, {"link": "", "title": "Strace"}, {"link": "", "title": "Cosine similarity"}, {"link": "", "title": "Longest common substring percentage"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "", "title": "The simple difference formula: An approach to teaching nonparametric correlation"}, {"link": "", "title": "DTrace"}, {"link": "", "title": "About event tracing"}, {"link": "", "title": "AIQL: Enabling efficient attack investigation from system monitoring data"}, {"link": "", "title": "SAQL: A stream-based query system for realtime abnormal system behavior detection"}, {"link": "/document/8812082", "title": "Detecting incorrect build rules"}, {"link": "/document/8416513", "title": "Falcon: A practical log-based analysis tool for distributed systems"}, {"link": "", "title": "Practical whole-system provenance capture"}, {"link": "", "title": "Tracing software build processes to uncover license compliance inconsistencies"}, {"link": "", "title": "Host-based intrusion detection system with system calls: Review and future trends"}, {"link": "", "title": "CDE: Run any linux application on-demand without installation"}, {"link": "/document/7909036", "title": "A templating system to generate provenance"}, {"link": "", "title": "Reproducibility in scientific computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952375"}
{"ref": [{"link": "", "title": "How big is uc berkeleys biggest class?"}, {"link": "", "title": "A first for udacity"}, {"link": "", "title": "Booming enrollments: Good times?"}, {"link": "", "title": "Debugging: a review of the literature from an educational perspective"}, {"link": "", "title": "Unexpected tokens: A review of programming error messages and design guidelines for the future"}, {"link": "", "title": "The effects of enhanced compiler error messages on a syntax error debugging test"}, {"link": "", "title": "Automatic Software Repair: a Bibliography"}, {"link": "", "title": "Compilation error repair: For the student programs, from the student programs"}, {"link": "", "title": "A study of the difficulties of novice programmers"}, {"link": "", "title": "Instructional design"}, {"link": "", "title": "Deep reinforcement learning for syntactic error repair in student programs"}, {"link": "", "title": "Deepfix: Fixing common c language errors by deep learning"}, {"link": "", "title": "Automated Correction for Syntax Errors in Programming Assignments using Recurrent Neural Networks"}, {"link": "", "title": "Compiler error messages: What can help novices?"}, {"link": "", "title": "Prutor: A System for Tutoring CS1 and Collecting Student Programs for Analysis"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Toward an instructionally oriented theory of example-based learning"}, {"link": "", "title": "What would other programmers do: Suggesting solutions to error messages"}, {"link": "", "title": "Automated clustering and program repair for introductory programming assignments"}, {"link": "", "title": "All syntax errors are not equal"}, {"link": "", "title": "Keras"}, {"link": "", "title": "Data Mining"}, {"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "", "title": "Dropout: A simple way to prevent neural networks from over-fitting"}, {"link": "", "title": "Tensorflow: A system for large-scale machine learning"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "sk_p: a neural program corrector for moocs"}, {"link": "", "title": "Enhancing syntax error messages appears ineffectual"}, {"link": "", "title": "Automatic grading and feedback using program repair for introductory programming courses"}, {"link": "", "title": "Do enhanced compiler error messages help students?: Results inconclusive"}, {"link": "", "title": "Compiler Error Notifications Revisited: An Interaction-First Approach for Helping Developers More Effectively Comprehend and Resolve Error Notification"}, {"link": "/document/7985695", "title": "Do developers read compiler error messages?"}, {"link": "", "title": "How should compilers explain problems to developers?"}, {"link": "", "title": "Error Messages as Rational Reconstructions"}, {"link": "", "title": "Learning user friendly type-error messages"}, {"link": "/document/8330219", "title": "Syntax and Sensibility: Using Language Models to Detect and Correct Syntax Errors"}, {"link": "", "title": "Enhancing Python Compiler Error Messages via Stack Overflow"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952446"}
{"ref": [{"link": "", "title": "Proactive Detection of Collaboration Conflicts"}, {"link": "/document/6606619", "title": "Cassandra: Proactive Conflict Minimization Through Optimized Task Scheduling"}, {"link": "", "title": "Integrating Noninterfering Versions of Programs"}, {"link": "", "title": "Using a Configuration Management Tool to Coordinate Software Development"}, {"link": "", "title": "Parallel Changes in Large-scale Software Development: an observational case study"}, {"link": "", "title": "Process Model and Awareness in SCM"}, {"link": "/document/4228648", "title": "Mining Workspace Updates in CVS"}, {"link": "/document/1000449", "title": "A State-of-the-Art Survey on Software Merging"}, {"link": "", "title": "Operation-based merging"}, {"link": "", "title": "A Formal Investigation of Diff3"}, {"link": "", "title": "Semistructured merge: Rethinking merge in revision control systems"}, {"link": "/document/7321191", "title": "Assessing Semistructured Merge in Version Control Systems: A Replicated Experiment"}, {"link": "", "title": "Evaluating and improving semistructured merge"}, {"link": "", "title": "Software engineering for the web: the state of the practice"}, {"link": "", "title": "Identifying classes in legacy JavaScript code"}, {"link": "", "title": "Structure-oriented merging of revisions of software documents"}, {"link": "", "title": "Syntactic Software Merging"}, {"link": "", "title": "Cdiff: A Syntax Directed Differencer for C++ Programs"}, {"link": "", "title": "JDiff: A Differencing Technique and Tool for Object-oriented Programs"}, {"link": "", "title": "Superimposition: A language independent approach to software composition"}, {"link": "", "title": "ECMA-262: ECMAScript Language Specification. Edition 5.1"}, {"link": "", "title": "JavaScript Patterns"}, {"link": "", "title": "A Calculus for Uniform Feature Composition"}, {"link": "", "title": "An Algebraic Foundation for Automatic Feature-Based Program Synthesis"}, {"link": "", "title": "FSecurity policies and security models"}, {"link": "", "title": "What's in a GitHub Star? Understanding Repository Starring Practices in a Social Coding Platform"}, {"link": "", "title": "2018 JavaScript Rising Stars"}, {"link": "", "title": "Online Appendix"}, {"link": "", "title": "Some rapid approximate statistical procedures"}, {"link": "", "title": "On a Test of Whether one of Two Random Variables is Stochastically Larger than the Other"}, {"link": "/document/5069475", "title": "The Promises and Perils of Mining Git"}, {"link": "", "title": "Understanding semi-structured merge conflict characteristics in open-source Java projects"}, {"link": "", "title": "Structured Merge with Auto-tuning: Balancing Precision and Performance"}, {"link": "", "title": "Program Integration for Languages with Procedure Calls"}, {"link": "", "title": "A program integration algorithm that accommodates semantics-preserving transformations"}, {"link": "", "title": "To lock, or not to lock: That is the question"}, {"link": "/document/6337868", "title": "Evaluating the Branch Merging Effort in Version Control Systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952450"}
{"ref": [{"link": "", "title": "Designing robust java programs with exceptions"}, {"link": "", "title": "Error propagation analysis for file systems"}, {"link": "", "title": ""}, {"link": "", "title": "Automatically diagnosing and repairing error handling bugs in c"}, {"link": "", "title": "Automatically detecting error handling bugs using error specifications"}, {"link": "", "title": "Eio: Error handling is occasionally correct"}, {"link": "/document/5474182", "title": "Finding error handling bugs in openssl using coccinelle"}, {"link": "", "title": "Fig: A prototype tool for online verification of recovery mechanisms"}, {"link": "", "title": "An extensible technique for high-precision testing of recovery code"}, {"link": "", "title": "Efficient testing of recovery code using fault injection"}, {"link": "/document/5270313", "title": "Lfi: A practical and general librarylevel fault injector"}, {"link": "/document/7381812", "title": "Contrasting exception handling code across languages: An experience report involving 50 open source projects"}, {"link": "", "title": "Apex: Automated inference of error specifications for c apis"}, {"link": "", "title": "Mining api error-handling specifications from source code"}, {"link": "", "title": "Expect the unexpected: Error code mismatches between documentation and the real world"}, {"link": "", "title": "D. analysis"}, {"link": "", "title": "Reaching definition"}, {"link": "", "title": "Satisfiability modulo theories: Introduction and applications"}, {"link": "", "title": "Use define chain"}, {"link": "", "title": "Clang"}, {"link": "", "title": "Llvm"}, {"link": "", "title": "Z3"}, {"link": "", "title": "Sqlite3"}, {"link": "", "title": "Cloc"}, {"link": "", "title": "Eh-miner"}, {"link": "/document/6606613", "title": "Why don\u2019t software developers use static analysis tools to find bugs?"}, {"link": "", "title": "F. scaling"}, {"link": "", "title": "Coverity"}, {"link": "", "title": "Fortify"}, {"link": "/document/8330197", "title": "Smartlog: Place error log statement by deep understanding of log intention"}, {"link": "", "title": "An exploratory study on exception handling bugs in java programs"}, {"link": "", "title": "Do android developers neglect error handling? a maintenance-centric study on the relationship between android abstractions and uncaught exceptions"}, {"link": "", "title": "Exceptions and aspects: the devil is in the details"}, {"link": "", "title": "Global-aware recommendations for repairing violations in exception handling"}, {"link": "", "title": "Automatic runtime recovery via error handler synthesis"}, {"link": "", "title": "Slice-based statistical fault localization"}, {"link": "/document/8371742", "title": "How test suites impact fault localisation starting from the size"}, {"link": "", "title": "Exceptional situations and program reliability"}, {"link": "", "title": "Finding and preventing run-time error handling mistakes"}, {"link": "", "title": "Automatically detecting missing cleanup for ungraceful exits"}, {"link": "", "title": "Path-based function embedding and its application to error-handling specification mining"}, {"link": "", "title": "Discovering faults in idiom-based exception handling"}, {"link": "", "title": "Mining preconditions of apis in large-scale code corpus"}, {"link": "/document/5431763", "title": "Inferring resource specifications from natural language api documentation"}, {"link": "", "title": "icomment: Bugs or bad comments?"}, {"link": "", "title": "Mining api patterns as partial orders from source code: From usage scenarios to specifications"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952517"}
{"ref": [{"link": "", "title": "How Do Software Engineers Understand Code Changes?:An Exploratory Study in Industry"}, {"link": "", "title": "Tree edit distance: Robust and memory-efficient[J]"}, {"link": "/document/7190080", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Neural-machine translation-based commit message generation: how far are we?"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "/document/6975661", "title": "On Automatically Generating Commit Messages via Summarization of Source Code Changes"}, {"link": "/document/7203049", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "/document/6624018", "title": "The Impact of Tangled Code Changes"}, {"link": "", "title": "Helping Developers Help Themselves:Automatic Decomposition of Code Review Changesets"}, {"link": "/document/7961530", "title": "Towards automatic generation of short summaries of commits"}, {"link": "/document/7081844", "title": "Untangling fine-grained code changes"}, {"link": "/document/7180078", "title": "Partitioning composite code changes to facilitate code review"}, {"link": "", "title": "Non-essential changes in version histories"}, {"link": "/document/8115655", "title": "Improved query reformulation for concept location using CodeRank and document structures[C]"}, {"link": "/document/4273265", "title": "Predicting defects for Eclipse"}, {"link": "", "title": "Software inspections and the industrial production of software"}, {"link": "/document/28121", "title": "Software inspections: an Effective Verification Process"}, {"link": "/document/7190109", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "/document/6148202", "title": "Open Source Peer Review Lessons and Recommendations for"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "What makes a code change easier to review: an empirical investigation on code change reviewability"}, {"link": "", "title": "The Anatomy of a Large-Scale Hypertextual Web Search Engine"}, {"link": "", "title": "Fine grained and Accurate Source Code Differencing"}, {"link": "", "title": "ClDiff: generating concise linked code differences"}, {"link": "", "title": "Ranking Systems: The PageRank Axioms"}, {"link": "", "title": "Googles PageRank and Beyond: The Science of Search Engine Rankings"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/7190168", "title": "Why did this code change?"}, {"link": "/document/6832486", "title": "A survey of clustering algorithms for big data: taxonomy and empirical analysis"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "The TREC-8 Question Answering Track Report"}, {"link": "", "title": "Hey! are you committing tangled changes?"}, {"link": "", "title": "Identifying features in forks"}, {"link": "/document/336770", "title": "Semantic diff: A tool for summarizing the effects of modications"}, {"link": "/document/5070564", "title": "Ldiff: An enhanced line differencing tool"}, {"link": "", "title": "idiff: Interaction-based program differencing tool"}, {"link": "/document/7513412", "title": "ARENA:an approach for the automated generation of release notes"}, {"link": "/document/1317478", "title": "Mining version histories to guide software changes"}, {"link": "", "title": "Characterizing the differences between pre- and post-release versions of software"}, {"link": "/document/6676894", "title": "LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Move-optimized source code tree differencing"}, {"link": "", "title": "Open source software peer review practices: a case study of the apache server"}, {"link": "", "title": "Was my contribution fairly reviewed?: a framework to study the perception of fairness in modern code reviews"}, {"link": "/document/4815280", "title": "A systematic survey of program comprehension through dynamic analysis"}, {"link": "", "title": "Understanding software maintenance and evolution by analyzing individual changes: a literature review"}, {"link": "", "title": "Code review quality:how developers see it"}, {"link": "/document/5090050", "title": "Syntax tree fingerprinting for source code similarity detection"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/8811911", "title": "Test-driven code review: an empirical study"}, {"link": "/document/8094433", "title": "On the optimal order of reading source code changes for review[C]"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952413"}
{"ref": [{"link": "", "title": "Finding software license violations through binary code clone detection"}, {"link": "", "title": "Identifying opensource license violation and 1-day security risk at large scale"}, {"link": "", "title": "Vulpecker: an automated vulnerability detection system based on code similarity analysis"}, {"link": "", "title": "Owasp top 10 application security risks"}, {"link": "", "title": "Cwe/sans top 25 most dangerous software errors"}, {"link": "", "title": "Transforming Open Source to Open Access in Closed Applications: Finding Vulnerabilities in Adobe Reader\u2019s XSLT Engine, Zero Day Initiative (ZDI) Std"}, {"link": "", "title": "mpengine contains unrar code forked from unrar prior to 5.0, introduces new bug while fixing others"}, {"link": "", "title": "Synopsys 2018 open source security and risk analysis report"}, {"link": "", "title": "discovre: Efficient cross-architecture identification of bugs in binary code"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "", "title": "\u03b1diff: cross-version binary code similarity detection with dnn"}, {"link": "", "title": "Ubuntu packages"}, {"link": "", "title": "Precise and accurate patch presence test for binaries"}, {"link": "", "title": "Accurate and scalable cross-architecture cross-os binary code search with emulation"}, {"link": "", "title": "Scalable graph-based bug search for firmware images"}, {"link": "", "title": "Bingo: Cross-architecture cross-os binary search"}, {"link": "/document/6624046", "title": "Rendezvous: A search engine for binary code"}, {"link": "", "title": "Information theory and statistical mechanics"}, {"link": "", "title": "Using tf-idf to determine word relevance in document queries"}, {"link": "", "title": "Cassandra: a decentralized structured storage system"}, {"link": "/document/514697", "title": "On finding duplication and near-duplication in large software systems"}, {"link": "", "title": "On the effectiveness of clone detection by string matching"}, {"link": "", "title": "Parameterized duplication in strings: Algorithms and an application to software maintenance"}, {"link": "/document/1019480", "title": "Ccfinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/4222573", "title": "Very-large scale code clone analysis and visualization of open source programs using distributed ccfinder: D-ccfinder"}, {"link": "/document/1610609", "title": "Cp-miner: Finding copy-paste and related bugs in large-scale software code"}, {"link": "/document/6234404", "title": "Redebug: finding unpatched code clones in entire os distributions"}, {"link": "/document/7958600", "title": "Vuddy: a scalable approach for vulnerable code clone discovery"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/7985674", "title": "Libd: scalable and precise third-party library detection in android markets"}, {"link": "", "title": "K-gram based software birthmarks"}, {"link": "", "title": "Binhunt: Automatically finding semantic differences in binary programs"}, {"link": "", "title": "Leveraging semantic signatures for bug search in binary programs"}, {"link": "", "title": "Binslayer: accurate comparison of binary executables"}, {"link": "", "title": "Bindiff"}, {"link": "/document/5380505", "title": "Detecting software theft via system call based birthmarks"}, {"link": "", "title": "Behavior based software theft detection"}, {"link": "/document/7163056", "title": "Crossarchitecture bug search in binary executables"}, {"link": "/document/7956954", "title": "Binary code clone detection across architectures and compiling configurations"}, {"link": "", "title": "Bingo: Cross-architecture cross-os binary search"}, {"link": "", "title": "Accurate and scalable cross-architecture cross-os binary code search with emulation"}, {"link": "", "title": "Detecting software theft via whole program path birthmarks"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952556"}
{"ref": [{"link": "/document/7958570", "title": "Towards evaluating the robustness of neural networks"}, {"link": "", "title": "How important is a neuron"}, {"link": "", "title": "Minimum satisfying assignments for smt"}, {"link": "", "title": "Towards a rigorous science of interpretable machine learning"}, {"link": "", "title": "Output range analysis for deep feedforward neural networks"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Adversarial machine learning at scale"}, {"link": "", "title": "Deep neural networks as 0-1 mixed integer linear programs: A feasibility study"}, {"link": "", "title": "Houdini, an annotation assistant for esc/java"}, {"link": "", "title": "ICE: A robust framework for learning invariants"}, {"link": "", "title": "Learning invariants using decision trees and implication counterexamples"}, {"link": "/document/8418593", "title": "AI2: safety and robustness certification of neural networks with abstract interpretation"}, {"link": "", "title": "Explaining and harnessing adversarial examples"}, {"link": "/document/8952519", "title": "Property inference for deep neural networks"}, {"link": "", "title": "A survey of methods for explaining black box models"}, {"link": "", "title": "Distilling the knowledge in a neural network"}, {"link": "", "title": "Safety verification of deep neural networks"}, {"link": "", "title": "Learning how to explain neural networks: Patternnet and patternattribution"}, {"link": "/document/7778091", "title": "Policy compression for aircraft collision avoidance systems"}, {"link": "", "title": "Reluplex: An efficient SMT solver for verifying deep neural networks"}, {"link": "/document/8624792", "title": "Influence-directed explanations for deep convolutional networks"}, {"link": "", "title": "The mythos of model interpretability"}, {"link": "", "title": "A unified approach to interpreting model predictions"}, {"link": "", "title": "Interpolation and model checking"}, {"link": "", "title": "The MNIST database of handwritten digits Home Page"}, {"link": "/document/7780651", "title": "DeepFool: A simple and accurate method to fool deep neural networks"}, {"link": "/document/7467366", "title": "The limitations of deep learning in adversarial settings"}, {"link": "", "title": "\u201dWhy Should I Trust You?\u201d: Explaining the Predictions of Any Classifier"}, {"link": "", "title": "Anchors: High-precision model-agnostic explanations"}, {"link": "", "title": "Nic: Detecting adversarial samples with neural network invariant checking"}, {"link": "", "title": "Not just a black box: Learning important features through propagating activation differences"}, {"link": "", "title": "Deep inside convolutional networks: Visualising image classification models and saliency maps"}, {"link": "", "title": "Axiomatic attribution for deep networks"}, {"link": "", "title": "Intriguing properties of neural networks"}, {"link": "", "title": "Efficient formal safety analysis of neural networks"}, {"link": "", "title": "Formal security analysis of neural networks using symbolic intervals"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952519"}
{"ref": [{"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Adaptive bug isolation"}, {"link": "", "title": "Sober: Statistical model-based bug localization"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "/document/6676912", "title": "Theory and practice, do they match? a case with spectrum-based fault localization"}, {"link": "", "title": "Statistical debugging using compound boolean predicates"}, {"link": "/document/5070506", "title": "Holmes: Effective statistical debugging via efficient path profiling"}, {"link": "", "title": "Statistical debugging: Simultaneous identification of multiple bugs"}, {"link": "", "title": "Statistical debugging: A hypothesis testing-based approach"}, {"link": "", "title": "Context-aware statistical debugging: From bug predictors to faulty control flow paths"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "/document/7985698", "title": "Evaluating and improving fault localization"}, {"link": "", "title": "Transforming programs and tests in tandem for fault localization"}, {"link": "", "title": "Fluccs: Using code and change metrics to improve fault localization"}, {"link": "", "title": "An empirical study of fault localization families and their combinations"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/7476644", "title": "History driven program repair"}, {"link": "/document/8115676", "title": "Leveraging syntax-related code for automated program repair"}, {"link": "/document/4041886", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "", "title": "A learning-to-rank based fault localization approach using likely invariants"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the Defects4J dataset"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "/document/8115675", "title": "Elixir: Effective object oriented program repair"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "", "title": "Towards practical program repair with on-demand candidate generation"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "", "title": "A manual inspection of defects4j bugs and its implications for automatic program repair"}, {"link": "", "title": "Practitioners\u2019 expectations on automated fault localization"}, {"link": "/document/5431781", "title": "Spectrum-based multiple fault localization"}, {"link": "/document/6651713", "title": "The dstar method for effective software fault localization"}, {"link": "", "title": "A model for spectra-based software diagnosis"}, {"link": "/document/6976085", "title": "Learning to combine multiple ranking metrics for fault localization"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators"}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "/document/6058639", "title": "Effective software fault localization using an rbf neural network"}, {"link": "/document/4539531", "title": "A crosstab-based statistical method for effective fault localization"}, {"link": "", "title": "A deeper look into bug fixes: Patterns, replacements, deletions, and additions"}, {"link": "", "title": "Locating faults through automated predicate switching"}, {"link": "/document/6823877", "title": "Ask the mutants: Mutating faulty programs for fault localization"}, {"link": "", "title": "Pruning dynamic slices with confidence"}, {"link": "", "title": "Metallaxis-fl: Mutation-based fault localization"}, {"link": "", "title": "Bugcache for inspections: Hit or miss?"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}, {"link": "/document/5463280", "title": "Do stack traces help developers fix bugs?"}, {"link": "", "title": "Design and implementation of an efficient dynamic slicer for Java"}, {"link": "", "title": "Using compressed bytecode traces for slicing java programs"}, {"link": "", "title": "Heuristics for automatic localization of software faults"}, {"link": "", "title": "Comparing developer-provided to user-provided tests for fault localization and automated program repair"}, {"link": "", "title": "A model for spectra-based software diagnosis"}, {"link": "", "title": "Exoneration-based fault localization for sql predicates"}, {"link": "", "title": "Spectrum-based fault localization in model transformations"}, {"link": "/document/8539195", "title": "Spectrum-based fault localization for logic-based reasoning"}, {"link": "", "title": "Compiler bug isolation via effective witness test program generation"}, {"link": "", "title": "Spectrum-based fault localization in software product lines"}, {"link": "", "title": "Vfl: Variable-based fault localization"}, {"link": "/document/8539194", "title": "Reduce before you localize: Delta-debugging and spectrum-based fault localization"}, {"link": "", "title": "Data-augmented software diagnosis"}, {"link": "", "title": "A kernel density estimate-based approach to component goodness modeling"}, {"link": "", "title": "Context-aware statistical debugging: From bug predictors to faulty control flow paths"}, {"link": "", "title": "Low-overhead and fully automated statistical debugging with abstraction refinement"}, {"link": "", "title": "An empirical study of the effects of test-suite reduction on fault localization"}, {"link": "/document/5070508", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "On the analysis of spectrum based fault localization using hitting sets"}, {"link": "", "title": "Fusion fault localizers"}, {"link": "", "title": "Search-based fault localization"}, {"link": "", "title": "Information retrieval and spectrum based bug localization: Better together"}, {"link": "", "title": "Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization"}, {"link": "", "title": "An empirical investigation of the relationship between spectra differences and regression faults"}, {"link": "/document/7273287", "title": "A revisit of a theoretical analysis on spectrum-based fault localization"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Revisit of automatic debugging via human focus-tracking analysis"}, {"link": "/document/7816473", "title": "automated debugging considered harmful considered harmful: A user study revisiting the usefulness of spectra-based fault localization techniques with professionals using real bugs from large systems"}, {"link": "", "title": "Combining mutation and fault localization for automated program debugging"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952344"}
{"ref": [{"link": "", "title": "Data Analysis with Microsoft Excel"}, {"link": "", "title": "A critical review of the literature on spreadsheet errors"}, {"link": "", "title": "Revising the panko\u2013halverson taxonomy of spreadsheet errors"}, {"link": "", "title": "A comparison of spreadsheet users with different levels of experience"}, {"link": "", "title": "UCheck: A spreadsheet type checker for end users"}, {"link": "", "title": "Automatic detection of dimension errors in spreadsheets"}, {"link": "", "title": "Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation"}, {"link": "/document/7498607", "title": "CACheck: detecting and repairing cell arrays in spreadsheets"}, {"link": "", "title": "How effectively can spreadsheet anomalies be detected: An empirical study"}, {"link": "", "title": "CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features"}, {"link": "", "title": "ExceLint: Automatically finding spreadsheet formula errors"}, {"link": "/document/8854707", "title": "WARDER: Refining cell clustering for effective spreadsheet defect detection via validity properties"}, {"link": "", "title": "The EUSES spreadsheet corpus: a shared resource for supporting experimentation with spreadsheet dependability mechanisms"}, {"link": "/document/7962365", "title": "SpreadCluster: recovering versioned spreadsheets through similarity-based clustering"}, {"link": "", "title": "RTED: a robust algorithm for the tree edit distance"}, {"link": "", "title": "Efficient algorithms for agglomerative hierarchical clustering methods"}, {"link": "", "title": "Detecting errors in spreadsheets"}, {"link": "", "title": "Inferring templates from spreadsheets"}, {"link": "", "title": "Espresso: Leveraging generic patterns for automatically harvesting semantic relations"}, {"link": "", "title": "LOF identifying density-based local outliers"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Detecting table clones and smells in spreadsheets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952240"}
{"ref": [{"link": "/document/6704677", "title": "A structured approach to the simulation, analysis and characterization of smartphone applications"}, {"link": "", "title": "Integrated epu-gpu power management for 3d mobile games"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "/document/8115614", "title": "Crowd intelligence enhances automated mobile testing"}, {"link": "", "title": "Mobile epu\u2019s rise to power: Quantifying the impact of generational mobile epu design trends on performance, energy, and user satisfaction"}, {"link": "", "title": "Versatile yet lightweight record-and-replay for android"}, {"link": "", "title": "Mobiplay: A remote execution based record-and-replay tool for mobile applications"}, {"link": "", "title": "Engineering record and replay for deployability"}, {"link": "", "title": "Pinplay: A framework for deterministic replay and reproducible analysis of parallel programs"}, {"link": "", "title": "A flight data recorder for enabling full-system multiprocessor deterministic replay"}, {"link": "", "title": "Record and replay for android: Are we there yet in industrial cases?"}, {"link": "", "title": "Mosaic: cross-platform user-interaction record and replay for the fragmented android ecosystem"}, {"link": "/document/7190045", "title": "Reran: Timingand touch-sensitive record and replay for android"}, {"link": "/document/7927971", "title": "Barista: A technique for recording, encoding, and running platform independent android tests"}, {"link": "", "title": "Espresso"}, {"link": "", "title": "Android ui automaton"}, {"link": "", "title": "Artdroid: A virtual-method hooking framework on android art runtime"}, {"link": "", "title": "Tackling runtime-based obfuscation in android with tiro"}, {"link": "", "title": "Predictability of android openssl\u2019s pseudo random number generator"}, {"link": "", "title": "Smali/baksmali"}, {"link": "", "title": "Smali/baksmali"}, {"link": "", "title": "Yahfa"}, {"link": "", "title": "Andhook"}, {"link": "", "title": "Android ui exerciser monkey"}, {"link": "", "title": "Doubleplay: Parallelizing sequential logging and replay"}, {"link": "", "title": "Obfuscation-resilient privacy leak detection for mobile apps through differential analysis"}, {"link": "", "title": "Android open source project"}, {"link": "", "title": "Appbrain"}, {"link": "", "title": "F-droid repository"}, {"link": "/document/6844460", "title": "Moby: A mobile benchmark suite for architectural simulators"}, {"link": "/document/6114205", "title": "Full-system analysis and characterization of interactive smartphone applications"}, {"link": "", "title": "Reinforcement learning for android gui testing"}, {"link": "/document/7582762", "title": "Automated model-based android gui testing using multi-level gui comparison criteria"}, {"link": "", "title": "Frauddroid: Automated ad fraud detection for android apps"}, {"link": "", "title": "Automated reporting of gui design violations for mobile apps"}, {"link": "", "title": "Automatically translating bug reports into test cases for mobile apps"}, {"link": "", "title": "Appflow: using machine learning to synthesize robust, reusable ui tests"}, {"link": "", "title": "Robotium"}, {"link": "", "title": "Mahimahi: Accurate Record-and-Replay for HTTP"}, {"link": "", "title": "Bootstomp: On the security of bootloaders in mobile devices"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952379"}
{"ref": [{"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Bebop: A symbolic model checker for boolean programs"}, {"link": "", "title": "Modular checking for buffer overflows in the large"}, {"link": "", "title": "The software model checker BLAST"}, {"link": "", "title": "SLAM and static driver verifier: Technology transfer of formal methods inside Microsoft"}, {"link": "", "title": "ESP: Path-sensitive program verification in polynomial time"}, {"link": "", "title": "Effective typestate verification in the presence of aliasing"}, {"link": "", "title": "Synthesizing software verifiers from proof rules"}, {"link": "", "title": "Program Tailoring: Slicing by Sequential Criteria"}, {"link": "", "title": "Boomerang: Demand-driven flow- and context-sensitive pointer analysis for Java"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Statically- directed dynamic automated test generation"}, {"link": "", "title": "PSE: Explaining program failures via postmortem static analysis"}, {"link": "", "title": "A system and language for building system-specific, static analyses"}, {"link": "", "title": "Static detection of cross-site scripting vulnerabilities"}, {"link": "", "title": "SCanDroid: Automated security certification of Android"}, {"link": "", "title": "Effective inter-component communication mapping in Android: An essential step towards holistic security analysis"}, {"link": "", "title": "TAJ: Effective taint analysis of web applications"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "/document/7194581", "title": "IccTA: Detecting inter-component privacy leaks in Android apps"}, {"link": "", "title": "Saving the world wide web from vulnerable JavaScript"}, {"link": "", "title": "Practical extensions to the IFDS algorithm"}, {"link": "", "title": "Inter-procedural data-flow analysis with IFDS/IDE and Soot"}, {"link": "/document/7675426", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "/document/7194609", "title": "Tricorder: Building a program analysis ecosystem"}, {"link": "", "title": "Why Google stores billions of lines of code in a single repository"}, {"link": "", "title": "Fossdroid"}, {"link": "", "title": "Control-flow analysis of higher-order languages of taming lambda"}, {"link": "", "title": "A unified approach to global program optimization"}, {"link": "", "title": "Effective representation of aliases and indirect memory operations in SSA form"}, {"link": "", "title": "Ideal: Efficient and precise alias-aware dataflow analysis"}, {"link": "", "title": "Precise interprocedural dataflow analysis with applications to constant propagation"}, {"link": "", "title": "Understanding and detecting evolution-induced compatibility issues in android apps"}, {"link": "", "title": "DroidBench: an open test suite for evaluating the effectiveness of taint-analysis tools specifically for Android apps"}, {"link": "", "title": "FlowDroid"}, {"link": "", "title": "Soot: A Java bytecode optimization framework"}, {"link": "", "title": "Free and open source Android app repository"}, {"link": "", "title": "Implicit flows: Can\u2019t live with \u2018em, can\u2019t live without \u2018em"}, {"link": "/document/7372054", "title": "Static analysis of implicit control flow: Resolving Java reflection and android intents"}, {"link": "", "title": "WALA: T.J. Watson Libraries for Analysis"}, {"link": "", "title": "Semi-sparse flow-sensitive pointer analysis"}, {"link": "/document/5764696", "title": "Flow-sensitive pointer analysis for millions of lines of code"}, {"link": "", "title": "Static memory leak detection using fullsparse value-flow analysis"}, {"link": "", "title": "On-demand strong update analysis via valueflow refinement"}, {"link": "", "title": "Synchronized pushdown systems for pointer and data-flow analysis"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of Android apps"}, {"link": "", "title": "Android taint flow analysis for app sets"}, {"link": "", "title": "Information flow analysis of Android applications in DroidSafe"}, {"link": "", "title": "Leveraging historical versions of Android apps for efficient and precise taint analysis"}, {"link": "", "title": "Do Android taint analysis tools keep their promises?"}, {"link": "", "title": "Scalable and precise taint analysis for Android"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952383"}
{"ref": [{"link": "", "title": "The Java Language Specification, Java SE 8 Edition"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "/document/991326", "title": "Public versus published interfaces"}, {"link": "/document/979986", "title": "A hierarchical model for object-oriented design quality assessment"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Visualizing protected variations in evolving software designs"}, {"link": "", "title": "On the criteria to be used in decomposing systems into modules"}, {"link": "/document/922731", "title": "Protected variation: The importance of being closed"}, {"link": "", "title": "Object-oriented Software Construction"}, {"link": "", "title": "Inversion of control containers and the dependency injection pattern"}, {"link": "/document/4222592", "title": "The factory pattern in API design: A usability evaluation"}, {"link": "/document/6363462", "title": "The link between dependency and cochange: Empirical evidence"}, {"link": "", "title": "Understanding the interplay between the logical and structural coupling of software classes"}, {"link": "", "title": "Integrating conceptual and logical couplings for change impact analysis in software"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "", "title": "MSE and FAMIX 3.0: an Interexchange Format and Source Code Model Family"}, {"link": "/document/6676879", "title": "How we design interfaces, and how to assess it"}, {"link": "", "title": "Fragile base-class problem, problem?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952238"}
{"ref": [{"link": "", "title": "Mutation testing advances: An analysis and survey"}, {"link": "", "title": "Formal verification of a realistic compiler"}, {"link": "", "title": "seL4: Formal verification of an OS kernel"}, {"link": "", "title": "Planning for change in a formal verification of the Raft consensus protocol"}, {"link": "", "title": "QED at large: A survey of engineering of formally verified software"}, {"link": "", "title": "An empirical study on the correctness of formally verified distributed systems"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "How verified (or tested) is my code? Falsification-driven verification and testing"}, {"link": "", "title": "Vacuity in testing"}, {"link": "", "title": "QuickChick Interface"}, {"link": "", "title": "MuCheck: An extensible tool for mutation testing of Haskell programs"}, {"link": "/document/7515477", "title": "Empirical evaluation of test coverage for functional programs"}, {"link": "", "title": "Interactive Theorem Proving and Program Development: Coq\u2019Art: The Calculus of Inductive Constructions"}, {"link": "", "title": "Coq manual: Syntax extensions and interpretation scopes"}, {"link": "", "title": "Coq manual: Utilities"}, {"link": "/document/8115630", "title": "iCoq: Regression proof selection for large-scale verification projects"}, {"link": "", "title": "An extensible, regular-expression-based tool for multi-language mutant generation"}, {"link": "", "title": "SerAPI: Machine-Friendly, Data-Centric Serialization for Coq"}, {"link": "", "title": "Recursive functions of symbolic expressions and their computation by machine, part I"}, {"link": "", "title": "Coq issue #9204"}, {"link": "", "title": "Coq pull request #9206"}, {"link": "", "title": "The new Quickcheck for Isabelle: Random, exhaustive and symbolic testing under one roof"}, {"link": "", "title": "coq-dpdgraph"}, {"link": "", "title": "Nitpick: A counterexample generator for higher-order logic based on a relational model finder"}, {"link": "", "title": "Extending Nunchaku to dependent type theory"}, {"link": "", "title": "Foundational property-based testing"}, {"link": "", "title": "The Cogent case for property-based testing"}, {"link": "", "title": "Automated theory exploration for interactive theorem proving"}, {"link": "", "title": "A tactic language for the system Coq"}, {"link": "", "title": "PPX"}, {"link": "", "title": "jsCoq: Towards hybrid theorem proving interfaces"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "", "title": "Theoretical and empirical studies on using program mutation to test the functional correctness of programs"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Are mutation scores correlated with real fault detection?: A large scale empirical study on the relationship between mutants and real faults"}, {"link": "", "title": "Ltac anti-patterns"}, {"link": "", "title": "PIT mutation testing"}, {"link": "", "title": "The Major mutation framework: Efficient and scalable mutation analysis for Java"}, {"link": "", "title": "Efficient mutation analysis by propagating and partitioning infected execution states"}, {"link": "/document/7942146", "title": "Mutation reduction strategies considered harmful"}, {"link": "", "title": "Predictive mutation testing"}, {"link": "", "title": "Topsy-Turvy: A smarter and faster parallelization of mutation analysis"}, {"link": "", "title": "Faster mutation analysis via equivalence modulo states"}, {"link": "/document/8367036", "title": "Speeding up mutation testing via regression test selection: An extensive study"}, {"link": "", "title": "piCoq: Parallel regression proving for large-scale verification projects"}, {"link": "/document/4637557", "title": "Constructing subtle faults using higher order mutation testing"}, {"link": "", "title": "SerAPI: The Coq Se(xp)rialized Protocol"}, {"link": "", "title": "An introduction to small scale reflection in Coq"}, {"link": "", "title": "jsexp"}, {"link": "", "title": "Asynchronous processing of Coq documents: From the kernel up to the user interface"}, {"link": "", "title": "The Lean theorem prover (system description)"}, {"link": "", "title": "Isabelle/HOL \u2014 A Proof Assistant for Higher-Order Logic"}, {"link": "", "title": "Mitigating the effects of equivalent mutants with mutant classification strategies"}, {"link": "", "title": "Coq manual: Conversion rules"}, {"link": "", "title": "Elaboration in dependent type theory"}, {"link": "", "title": "Mutation testing of functional programming languages"}, {"link": "", "title": "Automating black-box property based testing"}, {"link": "", "title": "FitSpec: Refining property sets for functional testing"}, {"link": "", "title": "Measuring coverage of Prolog programs using mutation testing"}, {"link": "/document/1347524", "title": "Random testing in Isabelle/HOL"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952421"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Starfish: A self-tuning system for big data analytics"}, {"link": "", "title": "Bestconfig: tapping the performance potential of systems via automatic configuration tuning"}, {"link": "/document/7132754", "title": "Rfhoc: A random-forest approach to auto-tuning hadoop\u2019s configuration"}, {"link": "", "title": "Data-efficient performance learning for configurable systems"}, {"link": "", "title": "Mr-cof: a genetic mapreduce configuration optimization framework"}, {"link": "/document/7336160", "title": "Performance prediction for apache spark platform"}, {"link": "", "title": "Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software"}, {"link": "", "title": "Kafka"}, {"link": "", "title": "Hive"}, {"link": "", "title": "Redis"}, {"link": "", "title": "MySQL"}, {"link": "", "title": "Cassandra"}, {"link": "", "title": "Tomcat"}, {"link": "", "title": "A recursive random search algorithm for large-scale network parameter configuration"}, {"link": "/document/4221619", "title": "The future of software performance engineering"}, {"link": "/document/1291833", "title": "Model-based performance prediction in software development: A survey"}, {"link": "", "title": "Performance evaluation of component-based software systems: A survey"}, {"link": "", "title": "A workload-dependent performance analysis of an in-memory database in a multi-tenant configuration"}, {"link": "", "title": "Generating performance distributions via probabilistic symbolic execution"}, {"link": "", "title": "Comparative analysis of software performance prediction approaches in context of component-based system"}, {"link": "", "title": "Random search for hyper-parameter optimization"}, {"link": "", "title": "Searching for better configurations: a rigorous approach to clone evaluation"}, {"link": "", "title": "Using bad learners to find good configurations"}, {"link": "", "title": "Finding near-optimal configurations in product lines by random sampling"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Deep parameter optimisation"}, {"link": "", "title": "A smart hillclimbing algorithm for application server configuration"}, {"link": "", "title": "Practical bayesian optimization of machine learning algorithms"}, {"link": "/document/7372023", "title": "Costefficient sampling for performance prediction of configurable systems"}, {"link": "", "title": "On modelling and prediction of total cpu usage for applications in mapreduce environments"}, {"link": "", "title": "Fast inference in nonlinear dynamical systems using gradient matching"}, {"link": "", "title": "Understanding and auto-adjusting performance-sensitive configurations"}, {"link": "", "title": "Aroma: Automated resource allocation and configuration of mapreduce environment in the cloud"}, {"link": "/document/7979892", "title": "Performance modeling for spark using svm"}, {"link": "/document/7372025", "title": "Performance prediction of configurable software systems by fourier learning"}, {"link": "", "title": "System performance optimization via design and configuration space exploration"}, {"link": "/document/6100118", "title": "Automated planning for feature model configuration based on stakeholders\u2019 business concerns"}, {"link": "", "title": "Faster discovery of faster system configurations with spectral learning"}, {"link": "", "title": "Automated parameter optimization of classification techniques for defect prediction models"}, {"link": "", "title": "BOHB: Robust and efficient hyperparameter optimization at scale"}, {"link": "", "title": "Sequential model based optimization for general algorithm configuration"}, {"link": "", "title": "Hyperopt: A python library for optimizing the hyperparameters of machine learning algorithms"}, {"link": "", "title": "A reinforcement learning approach to map reduce auto-configuration under networked environment"}, {"link": "", "title": "Autoconfig: Automatic configuration tuning for distributed message systems"}, {"link": "/document/5530314", "title": "Experience transfer for the configuration tuning in large-scale computing systems"}, {"link": "/document/8115661", "title": "Transfer learning for performance modeling of configurable systems: An exploratory analysis"}, {"link": "", "title": "Metaheuristics in combinatorial optimization: Overview and conceptual comparison"}, {"link": "", "title": "Combinatorial optimization: algorithms and complexity"}, {"link": "", "title": "Computers and intractability: a guide to np-completeness"}, {"link": "", "title": "A tutorial on bayesian optimization"}, {"link": "", "title": "Cooperatively coevolving particle swarms for large scale optimization"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "/document/5452747", "title": "The hibench benchmark suite: Characterization of the mapreduce-based data analysis"}, {"link": "", "title": "Benchmarking cloud serving systems with ycsb"}, {"link": "", "title": "JMeter"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952456"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "An introduction to categorical data analysis"}, {"link": "", "title": "Using finite-state models for log differencing"}, {"link": "/document/6951474", "title": "Using declarative specification to improve the understanding, extensibility, and comparison of model-inference algorithms"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariantconstrained models"}, {"link": "", "title": "On the synthesis of finitestate machines from samples of their behavior"}, {"link": "", "title": "Behavioral log analysis with statistical guarantees"}, {"link": "", "title": "Rule-based specification mining leveraging learning to rank"}, {"link": "/document/7371999", "title": "Have we seen enough traces?"}, {"link": "", "title": "Discovering models of software processes from event-based data"}, {"link": "/document/6044587", "title": "Automatically generating test cases for specification mining"}, {"link": "", "title": ""}, {"link": "", "title": "Deeplog: Anomaly detection and diagnosis from system logs through deep learning"}, {"link": "", "title": "Dynamically discovering likely program invariants to support program evolution. TSE"}, {"link": "", "title": "Mining behavior models from user-intensive web applications"}, {"link": "", "title": "Experience report: Log-based behavioral differencing"}, {"link": "", "title": "Instrumenting scenarios in a model-driven development environment"}, {"link": "/document/7372001", "title": "Synergizing specification miners through model fissions and fusions (T)"}, {"link": "", "title": "Deep specification mining"}, {"link": "/document/7371998", "title": "General LTL specification mining (T)"}, {"link": "/document/4023976", "title": "Empirical assessment of automaton-based specification miners"}, {"link": "", "title": "Scenario-based and value-based specification mining: better together"}, {"link": "", "title": "Automatic steering of behavioral model inference"}, {"link": "", "title": "Learning extended FSA from software: An empirical assessment"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "", "title": "Mining invariants from console logs for system problem detection"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "", "title": "Introduction to Probability and Statistics. Pearson"}, {"link": "/document/5416729", "title": "Assessing, comparing, and combining state machine-based testing and structural testing: A series of experiments"}, {"link": "", "title": "Verifying an implementation of SSH"}, {"link": "", "title": "Transmission control protocol"}, {"link": "", "title": "A cluster analysis method for grouping means in the analysis of variance"}, {"link": "/document/1650212", "title": "Design synthesis from interaction and statebased specifications"}, {"link": "/document/7497471", "title": "An empirical comparison of model validation techniques for defect prediction models"}, {"link": "/document/1432736", "title": "Probabilistic finite-state machines-part i"}, {"link": "", "title": "Mimicry attacks on host-based intrusion detection systems"}, {"link": "/document/7927986", "title": "Behavioral execution comparison: Are tests representative of field behavior"}, {"link": "", "title": "Introductory Statistics"}, {"link": "", "title": "Cloudseer: Workflow monitoring of cloud infrastructures via interleaved logs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952205"}
{"ref": [{"link": "", "title": "Preemption sealing for efficient concurrency testing"}, {"link": "", "title": "Cluster-based LTL model checking of large systems"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "A scalable lock-free stack algorithm"}, {"link": "/document/5661793", "title": "Swarm verification techniques"}, {"link": "", "title": "Cloud-based verification of concurrent software"}, {"link": "", "title": "Lazy-CSeq: A Lazy Sequentialization tool for C (Competition Contribution)"}, {"link": "", "title": "Bounded Model Checking of Multi-Threaded C Programs via Sequentialization"}, {"link": "/document/7372071", "title": "Lazy-CSeq: A context-bounded model checking tool for multi-threaded C-programs"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "/document/8115686", "title": "Parallel Bug-finding in Concurrent Programs via Reduced Interleaving Instances"}, {"link": "", "title": "c-sat: A parallel SAT solver for clusters"}, {"link": "", "title": "Sicotheo: Simple competitive parallel theorem provers"}, {"link": "", "title": "Strategy parallelism in automated theorem proving"}, {"link": "", "title": "Parallelizing the murphi verifier"}, {"link": "", "title": "Concurrency testing using controlled schedulers: An empirical study"}, {"link": "", "title": "A concurrent portfolio approach to SMT solving"}, {"link": "", "title": "Satzilla: Portfoliobased algorithm selection for SAT"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952527"}
{"ref": [{"link": "", "title": "ISO/IEC 25010:2011 systems and software engineering \u2013 systems and software quality requirements and evaluation (square) \u2013 system and software quality models"}, {"link": "", "title": "Experimental Evaluation of Heuristic Optimization Algorithms: A Tutorial"}, {"link": "", "title": "A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering"}, {"link": "", "title": "Clustering algorithms: A comparative approach"}, {"link": "", "title": "An extensive comparative study of cluster validity indices"}, {"link": "", "title": "Online controlled experiments and A/B testing"}, {"link": "", "title": "Trace-based test selection to support continuous integration in the automotive industry"}, {"link": "", "title": "Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry"}, {"link": "", "title": "Transparency and contracts: continuous integration and delivery in the automotive ecosystem"}, {"link": "", "title": "Continuous integration of machine learning models with ease.ml/ci: Towards a rigorous yet practical treatment"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952173"}
{"ref": [{"link": "", "title": "American fuzzy lop (afl)"}, {"link": "", "title": "libfuzzer a library for coverage-guided fuzz testing"}, {"link": "", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "", "title": "Fairfuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "Rise of the hacrs: Augmenting autonomous cyber reasoning systems with human assistance"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "D3.js - data-driven documents"}, {"link": "", "title": "Graph drawing by force-directed placement"}, {"link": "/document/1702828", "title": "Tidier drawings of trees"}, {"link": "", "title": "PAFL: extend fuzzing optimizations of single mode to industrial parallel mode"}, {"link": "", "title": "SAFL: increasing and accelerating testing coverage with symbolic execution and guided fuzzing"}, {"link": "", "title": "Engineering a better fuzzer with synergically integrated optimizations"}, {"link": "", "title": "Enfuzz: Ensemble fuzzing with seed synchronization among diverse fuzzers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952352"}
{"ref": [{"link": "", "title": "Fuzzing with code fragments"}, {"link": "", "title": "Grammarinator: a grammar-based open source fuzzer"}, {"link": "", "title": "Fishing for deep bugs with grammars"}, {"link": "/document/8811923", "title": "Superion: Grammaraware greybox fuzzing"}, {"link": "", "title": "A sentence generator for testing parsers"}, {"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": "Antlr: A predicated-ll (k) parser generator"}, {"link": "", "title": "The JavaScript Object Notation (JSON) data interchange format"}, {"link": "", "title": "Url grammar"}, {"link": "", "title": "Csv grammar"}, {"link": "", "title": "Markdown-peg grammar"}, {"link": "", "title": "Fuzzinator configs"}, {"link": "", "title": "JaCoCo, version 0.8.2"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "{SciPy}: Open source scientific tools for {Python}"}, {"link": "", "title": "Argo"}, {"link": "", "title": "fastjson"}, {"link": "", "title": "Genson"}, {"link": "", "title": "Gson"}, {"link": "", "title": "Jackson-databind"}, {"link": "", "title": "json-flattener"}, {"link": "", "title": "Json-java"}, {"link": "", "title": "json-simple"}, {"link": "", "title": "json-simple by Cliftonlabs"}, {"link": "", "title": "minimal-json"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Jackson Dataformat CSV"}, {"link": "", "title": "jcsv"}, {"link": "", "title": "Simple Flat Mapper"}, {"link": "", "title": "simplecsv"}, {"link": "", "title": "super-csv"}, {"link": "", "title": "autolink-java"}, {"link": "", "title": "galimatias"}, {"link": "", "title": "jurl"}, {"link": "", "title": "Url Detector"}, {"link": "", "title": "Atlassian Commonmark"}, {"link": "", "title": "Markdown4J"}, {"link": "", "title": "Txtmark"}, {"link": "", "title": "Simple Mail Transfer Protocol"}, {"link": "", "title": "Simple Mail Transfer Protocol"}, {"link": "/document/5388302", "title": "Automatic generation of test cases"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Grammar testing"}, {"link": "", "title": "Controllable combinatorial coverage in grammar-based testing"}, {"link": "", "title": "On program analysis"}, {"link": "", "title": "A taxonomy of model-based testing approaches"}, {"link": "", "title": "Toward an engineering discipline for GRAMMARWARE"}, {"link": "", "title": "Mining input grammars from dynamic taints"}, {"link": "", "title": "Synthesizing program input grammars"}, {"link": "/document/8115618", "title": "Learn&fuzz: Machine learning for input fuzzing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952419"}
{"ref": [{"link": "", "title": "AdapterView"}, {"link": "", "title": "Communicate with the UI thread"}, {"link": "", "title": "Espresso"}, {"link": "", "title": "Automated Test Migration for Mobile Apps"}, {"link": "", "title": "Test Migration for Efficient Large-scale Assessment of Mobile App Coding Assignments"}, {"link": "", "title": "App Test Migrator"}, {"link": "", "title": "WATER: Web Application TEst Repair"}, {"link": "", "title": "Automated GUI Refactoring and Test Script Repair"}, {"link": "", "title": "Monkey See, Monkey Do: Effective Generation of GUI Tests with Inferred Macro Events"}, {"link": "/document/7927971", "title": "Barista: A Technique for Recording, Encoding, and Running Platform Independent Android Tests"}, {"link": "/document/4815332", "title": "Inferring Types of  to GUI Objects in Test Scripts"}, {"link": "", "title": "Maintaining and Evolving GUIdirected Test Scripts"}, {"link": "", "title": "Appflow: Using Machine Learning to Synthesize Robust, Reusable UI Tests"}, {"link": "/document/5477078", "title": "Repairing GUI Test Suites Using a Genetic Algorithm"}, {"link": "", "title": "View-based Maintenance of Graphical User Interfaces"}, {"link": "/document/7927972", "title": "ATOM: Automatic Maintenance of GUI Test Scripts for Evolving Mobile Applications"}, {"link": "/document/8952228", "title": "Test Transfer Across Mobile Apps Through Semantic Mapping"}, {"link": "/document/4021372", "title": "A Strategy and an Eclipse Based Environment for the Migration of Legacy Systems to Multi-tier Web-based Architectures"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/8115614", "title": "Crowd Intelligence Enhances Automated Mobile Testing"}, {"link": "", "title": "Augusto: Exploiting Popular Functionalities for the Generation of Semantic GUI Tests with Oracles"}, {"link": "", "title": "Automatically Repairing Event Sequence-based GUI Test Suites for Regression Testing"}, {"link": "", "title": "Regression Testing of GUIs"}, {"link": "", "title": "Efficient Estimation of Word Representations in Vector Space"}, {"link": "", "title": "Wordnet: A Lexical Database for English"}, {"link": "", "title": "Neo4j"}, {"link": "", "title": "TestMig: Migrating GUI Test Cases from iOS to Android"}, {"link": "", "title": "Efficient GUI Test Generation by Learning from Tests of Other Apps"}, {"link": "", "title": "Transferring Tests Across Web Applications"}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "/document/682181", "title": "Learning String-Edit Distance"}, {"link": "/document/4145043", "title": "Static Analysis of Programs with Graphical User Interface"}, {"link": "/document/7372053", "title": "Static Window Transition Graphs for Android"}, {"link": "", "title": "Automatically Repairing Broken\u00a8 Workflows for Evolving GUI Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952387"}
{"ref": [{"link": "", "title": "American Fuzzy Lop"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "", "title": "Quantized neural networks: Training neural networks with low precision weights and activations"}, {"link": "", "title": "The MNIST database of handwritten digits"}, {"link": "", "title": "The cifar-10 dataset"}, {"link": "", "title": "Deephunter: a coverage-guided fuzz testing framework for deep neural networks"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Tensorfuzz: Debugging neural networks with coverage-guided fuzzing"}, {"link": "", "title": "An empirical study towards characterizing deeplearning development and deployment acrossdifferent frameworks and platforms"}, {"link": "/document/8539073", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "/document/8812069", "title": "Guiding deep learning system testing using surprise adequacy"}, {"link": "", "title": "Diffchaser: Detecting disagreements for deep neural networks"}, {"link": "", "title": "Concolic testing for deep neural networks"}, {"link": "", "title": "Deepstellar: Model-based quantitative analysis of stateful deep learning systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952279"}
{"ref": [{"link": "", "title": "TensorFlow: Large-scale machine learning on heterogeneous systems"}, {"link": "", "title": "Automatic differentiation in pytorch"}, {"link": "", "title": "Theano: A Python framework for fast computation of mathematical expressions"}, {"link": "", "title": "Keras"}, {"link": "/document/8812095", "title": "Cradle: Cross-backend validation to detect and localize bugs in deep learning libraries"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "Understanding myths and realities of test-suite evolution"}, {"link": "", "title": "Error and computer arithmetic"}, {"link": "", "title": "Tensorflow architecture"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "Coverage-directed differential testing of jvm implementations"}, {"link": "", "title": "Testing scientific software: A systematic literature review"}, {"link": "/document/5069155", "title": "How do scientists develop and use scientific software?"}, {"link": "/document/4222616", "title": "Software development environments for scientific and engineering software: A series of case studies"}, {"link": "/document/5069163", "title": "Testing for trustworthiness in scientific software"}, {"link": "/document/1045022", "title": "Metamorphic testing of programs on partial differential equations: a case study"}, {"link": "", "title": "An innovative approach for testing bioinformatics programs using metamorphic testing"}, {"link": "/document/6615099", "title": "Techniques for testing scientific programs without an oracle"}, {"link": "/document/7332456", "title": "An empirical study of bugs in test code"}, {"link": "/document/4539549", "title": "Mining software repositories to study co-evolution of production and test code"}, {"link": "", "title": "When, how, and why developers (do not) test in their ides"}, {"link": "/document/7962385", "title": "Oops, my tests broke the build: An explorative analysis of travis ci with github"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Deepgauge: Multigranularity testing criteria for deep learning systems"}, {"link": "", "title": "Deepstellar: Model-based quantitative analysis of stateful deep learning systems"}, {"link": "/document/8539073", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "", "title": "An empirical study on tensorflow program bugs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952211"}
{"ref": [{"link": "", "title": "Cuda program introduction"}, {"link": "", "title": "Gpgpu introduction"}, {"link": "", "title": "Curd: A dynamic cuda race detector"}, {"link": "", "title": "Barracuda: Binary-level analysis of runtime races in cuda programs"}, {"link": "", "title": "Gklee: Concolic verification and test generation for gpus"}, {"link": "", "title": "Ld: Low-overhead gpu race detection without access monitoring"}, {"link": "", "title": "Efficient and precise datarace detection for multithreaded object-oriented programs"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "An empirical comparison of monitoring algorithms for access anomaly detection"}, {"link": "", "title": "Improving the accuracy of data race detection"}, {"link": "", "title": "The simulee project"}, {"link": "", "title": "Compiler transformations for high-performance computing"}, {"link": "", "title": "Characterizing and detecting cuda program bugs"}, {"link": "/document/8602999", "title": "Automatic synchronization for gpu kernels"}, {"link": "", "title": "Introduction cuda c"}, {"link": "", "title": "Interleaving and lock-step semantics for analysis and verification of gpu kernels"}, {"link": "", "title": "Thundersvm"}, {"link": "", "title": "arrayfire"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "/document/771163", "title": "Evolutionary programming made faster"}, {"link": "", "title": "Gpuverify: A verifier for gpu kernels"}, {"link": "/document/7372075", "title": "Civl: formal verification of parallel programs"}, {"link": "", "title": "Esbmc-gpu a context-bounded model checking tool to verify cuda programs"}, {"link": "", "title": "Gkleetests"}, {"link": "", "title": "Fix race condition in reduce_first_kemel"}, {"link": "", "title": "Remove the need for volatile memory by always using _syncthreads()"}, {"link": "", "title": "The simulee project"}, {"link": "", "title": "Avio: Detecting atomicity violations via access interleaving invariants"}, {"link": "", "title": "Kivati: Fast detection and prevention of atomicity violations"}, {"link": "", "title": "Specification and verification of synchronization with condition variables"}, {"link": "", "title": "Verifying multi-threaded software using smt-based context-bounded model checking"}, {"link": "", "title": "Ldetector: A low overhead race detector for gpu programs"}, {"link": "", "title": "Racecheck tool"}, {"link": "", "title": "Deepfl: integrating multiple fault diagnosis dimensions for deep fault localization"}, {"link": "", "title": "An empirical study of boosting spectrum-based fault localization via pagerank"}, {"link": "", "title": "Transforming programs and tests in tandem for fault localization"}, {"link": "", "title": "An empirical study of fault localization families and their combinations"}, {"link": "/document/7985698", "title": "Evaluating and improving fault localization"}, {"link": "", "title": "Injecting mechanical faults to localize developer faults for evolving software"}, {"link": "", "title": "Fluccs: Using code and change metrics to improve fault localization"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "", "title": "History-driven build failure fixing: how far are we?"}, {"link": "", "title": "Repairing crashes in android apps"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Antipatterns in search-based program repair"}, {"link": "/document/7194598", "title": "Relifix: Automated repair of software regressions"}, {"link": "/document/8667970", "title": "Avatar: Fixing semantic bugs with fix patterns of static analysis violations"}, {"link": "", "title": "Codeflaws: a programming competition benchmark for evaluating automated program repair tools"}, {"link": "", "title": "A correlation study between automated program repair and test-suite metrics"}, {"link": "", "title": "A feasibility study of using automated program repair for introductory programming assignments"}, {"link": "", "title": "Reassert: a tool for repairing broken unit tests"}, {"link": "/document/8952210", "title": "Inferring program transformations from singular examples via big code"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Pfix: fixing concurrency bugs based on memory access patterns"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "/document/7194596", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Testequivalence analysis for automatic patch generation"}, {"link": "", "title": "S3: syntax-and semantic-guided repair synthesis via programming by examples"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952529"}
{"ref": [{"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "An empirical comparison of compiler testing techniques"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Test-case reduction for c compiler bugs"}, {"link": "", "title": "Perses: Syntax-guided program reduction"}, {"link": "", "title": "Compiler bug isolation via effective witness test program generation"}, {"link": "/document/7985706", "title": "Learning to prioritize test programs for compiler testing"}, {"link": "", "title": "Automated testing of graphics shader compilers"}, {"link": "", "title": "Random testing of c compilers targeting arithmetic optimization"}, {"link": "", "title": "RUGRAT: evaluating program analysis and testing tools and compilers with large generated random benchmark applications"}, {"link": "/document/7985700", "title": "Balancing soundness and efficiency for practical testing of configurable systems"}, {"link": "", "title": "Time-space efficient regression testing for configurable systems"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Toward understanding compiler bugs in gcc and llvm"}, {"link": "", "title": "Swarm testing"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Compiler test case generation methods: a survey and assessment"}, {"link": "", "title": "Generating focused random tests using directed swarm testing"}, {"link": "", "title": "Scaling up size and number of expressions in random testing of arithmetic optimization of c compilers"}, {"link": "", "title": "Detecting change in categorical data: Mining contrast sets"}, {"link": "", "title": "Efficient mining of emerging patterns: Discovering trends and differences"}, {"link": "/document/1273228", "title": "Comparison of similarity metrics for texture image retrieval"}, {"link": "", "title": "Particle swarm optimization"}, {"link": "", "title": "Search-based inference of polynomial metamorphic relations"}, {"link": "", "title": "Automatic discovery and cleansing of numerical metamorphic relations"}, {"link": "", "title": "Finding and analyzing compiler warning defects"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}, {"link": "", "title": "Static duplicate bug report identification for compilers"}, {"link": "", "title": "Coverage prediction for accelerating compiler testing"}, {"link": "/document/7515478", "title": "Test case prioritization for compilers: A text-vector based approach"}, {"link": "", "title": "Randomized stress-testing of link-time optimizers"}, {"link": "", "title": "Cause reduction: delta debugging, even without bugs"}, {"link": "/document/6823886", "title": "Cause reduction for quick testing"}, {"link": "/document/494215", "title": "A new optimizer using particle swarm theory"}, {"link": "/document/699146", "title": "A modified particle swarm optimizer"}, {"link": "", "title": "Particle swarm optimization"}, {"link": "", "title": "Skeletal program enumeration for rigorous compiler testing"}, {"link": "/document/6698892", "title": "Help, help, i\u2019m being suppressed! the significance of suppressors in software testing"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "Learning to accelerate compiler testing"}, {"link": "", "title": "A history-based cost-cognizant test case prioritization technique in regression testing"}, {"link": "/document/5770626", "title": "Improving regression testing transparency and efficiency with history-based prioritization\u2013an industrial case study"}, {"link": "/document/7332496", "title": "Efficient regression testing based on test history: An industrial evaluation"}, {"link": "/document/7102622", "title": "History-based test case prioritization for black box testing using ant colony optimization"}, {"link": "", "title": "History-driven build failure fixing: how far are we?"}, {"link": "", "title": "Optimizing test prioritization via test distribution analysis"}, {"link": "/document/8952483", "title": "Continuous incident triage for large-scale online service systems"}, {"link": "/document/5954405", "title": "Search-based software testing: Past, present and future"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Seeding strategies in search-based unit test generation"}, {"link": "", "title": "Search-based system testing: high coverage, no false alarms"}, {"link": "", "title": "Search-based stress testing the elastic resource provisioning for cloud-based applications"}, {"link": "/document/5770605", "title": "An approach for search based testing of null pointer exceptions"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952321"}
{"ref": [{"link": "", "title": "Detecting performance anti-patterns for applications developed using object-relational mapping"}, {"link": "", "title": "How Not to Structure Your Database-backed Web Applications: A Study of Performance Bugs in the Wild"}, {"link": "", "title": "Detecting problems in the database access code of large scale systems: An industrial experience report"}, {"link": "/document/7202959", "title": "Performance Analysis Using Subsuming Methods: An Industrial Case Study"}, {"link": "", "title": "How One Second Could Cost Amazon $1.6 Billion In Sales"}, {"link": "", "title": "Understanding Database Performance Inefficiencies in Real-world Web Applications"}, {"link": "", "title": "Powerstation: automatically detecting and fixing inefficiencies of database-backed web applications in IDE"}, {"link": "", "title": "Usage statistics and market share of PHP for websites"}, {"link": "", "title": "Top 10 PHP Frameworks"}, {"link": "/document/7451264", "title": "Finding and evaluating the performance impact of redundant data access for applications that are developed using object-relational mapping frameworks"}, {"link": "/document/8811938", "title": "View-centric performance optimization for database-backed web applications"}, {"link": "", "title": "Apache Jmeter"}, {"link": "", "title": "Statistically Rigorous Java Performance Evaluation"}, {"link": "", "title": "Clockwork \u2013 PHP dev tools integrated to your browser"}, {"link": "", "title": "Page load time"}, {"link": "", "title": "PHP-Parser \u2013 A PHP parser written in PHP"}, {"link": "", "title": "Appropriate statistics for ordinal level data: Should we really be using t-test and Cohen\u2019sd for evaluating group differences on the NSSE and other surveys?"}, {"link": "", "title": "Cachet: an open source status page system for everyone"}, {"link": "/document/7515456", "title": "A framework to evaluate the effectiveness of different load testing analysis techniques"}, {"link": "", "title": "New software performance antipatterns: More ways to shoot yourself in the foot"}, {"link": "", "title": "More New Software Antipatterns: Even More Ways to Shoot Yourself in the Foot"}, {"link": "", "title": "The effectiveness of test coverage criteria for relational database schema integrity constraints"}, {"link": "", "title": "A family of test adequacy criteria for database-driven applications"}, {"link": "/document/6569729", "title": "Testing DatabaseCentric Applications for Causes of Database Deadlocks"}, {"link": "", "title": "Preventing database deadlocks in applications"}, {"link": "", "title": "Testing Software in Age of Data Privacy: A Balancing Act"}, {"link": "", "title": "Sanitizing and Minimizing Databases for Software Application Test Outsourcing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952177"}
{"ref": [{"link": "", "title": "Odr: Output-deterministic replay for multicore debugging"}, {"link": "", "title": "Hardware-assisted replay of multiprocessor programs"}, {"link": "", "title": "The parsec benchmark suite: Characterization and architectural implications"}, {"link": "", "title": "Doublechecker: Efficient sound and precise atomicity checking"}, {"link": "", "title": "Octet: Capturing and controlling cross-thread dependences efficiently"}, {"link": "", "title": "Deterministic replay: A survey"}, {"link": "", "title": "Partial replay of long-running applications"}, {"link": "", "title": "Deterministic replay of java multithreaded applications"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "Velodrome: A sound and complete dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "Leap: Lightweight deterministic multi-processor replay of concurrent java programs"}, {"link": "", "title": "Clap: Recording local executions to reproduce concurrency failures"}, {"link": "", "title": "Care: Cache guided deterministic replay for concurrent java programs"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": "DETER: Deterministic TCP replay for performance diagnosis"}, {"link": "", "title": "ireplayer: In-situ and identical record-and-replay for multithreaded applications"}, {"link": "", "title": "Light: Replay via tightly bounded recording"}, {"link": "", "title": "Doubletake: Fast and precise error detection via evidence-based dynamic analysis"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "/document/4556734", "title": "Delorean: Recording and deterministically replaying shared-memory multiprocessor execution efficiently"}, {"link": "", "title": "Bugnet: Continuously recording program execution for deterministic replay debugging"}, {"link": "", "title": "Optimal tracing and replay for debugging shared-memory parallel programs"}, {"link": "", "title": "Pres: Probabilistic replay with execution sketching on multiprocessors"}, {"link": "", "title": "Aggreplay: Efficient record and replay of multi-threaded programs"}, {"link": "", "title": "Mobiplay: A remote execution based record-and-replay tool for mobile applications"}, {"link": "/document/7982675", "title": "Leveraging hardware-assisted virtualization for deterministic replay on commodity multi-core processors"}, {"link": "", "title": "Processor-oblivious record and replay"}, {"link": "", "title": "Efficient and sound dynamic atomicity violation checking"}, {"link": "", "title": "A\u201d flight data recorder\u201c for enabling full-system multiprocessor deterministic replay"}, {"link": "", "title": "A regulated transitive reduction (rtr) for longer memory race recording"}, {"link": "/document/6227130", "title": "Stride: Search-based deterministic replay in polynomial time via bounded linkage"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952181"}
{"ref": [{"link": "", "title": "Deflate compressed data format specification version 1.3"}, {"link": "", "title": "Hypertext transfer protocol \u2013 HTTP/1.1"}, {"link": "", "title": "Usage of gzip compression for websites"}, {"link": "", "title": "Energy-aware lossless data compression"}, {"link": "", "title": "A method for the construction of minimum-redundancy codes"}, {"link": "/document/1055714", "title": "A universal algorithm for sequential data compression"}, {"link": "", "title": "Compression and information leakage of plaintext"}, {"link": "", "title": "BREACH: Reviving the CRIME attack"}, {"link": "", "title": "The CRIME attack"}, {"link": "", "title": "HEIST: HTTP encrypted information can be stolen through TCP-windows"}, {"link": "", "title": "Confirmation of consensus on removing compression from TLS 1.3"}, {"link": "", "title": "HPACK: Header compression for HTTP/2"}, {"link": "", "title": "Request and conquer: Exposing cross-origin resource size"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "", "title": "Context-sensitive program analysis as database queries"}, {"link": "", "title": "Finding security vulnerabilities in java applications with static analysis"}, {"link": "", "title": "A user-guided approach to program analysis"}, {"link": "", "title": "django-debreach"}, {"link": "", "title": "CTX: Eliminating BREACH with context hiding"}, {"link": "", "title": "Practical new developments on BREACH"}, {"link": "", "title": "Protecting encrypted cookies from compression side-channel attacks"}, {"link": "", "title": "SafeDeflate: compression without leaking secrets"}, {"link": "", "title": "zlib"}, {"link": "", "title": "Sidebuster: automated detection and quantification of side-channel leaks in web application development"}, {"link": "", "title": "Verifying constant-time implementations"}, {"link": "/document/1159651", "title": "Language-based information-flow security"}, {"link": "/document/6234468", "title": "Security policies and security models"}, {"link": "", "title": "Nocc"}, {"link": "", "title": "Squirrelmail"}, {"link": "", "title": "iaddressbook"}, {"link": "", "title": "Addressbook"}, {"link": "", "title": "Adminer"}, {"link": "", "title": "Program analysis and specialization for the C programming language"}, {"link": "", "title": "In defense of soundiness: a manifesto"}, {"link": "/document/7961989", "title": "Efficient and flexible discovery of PHP application vulnerabilities"}, {"link": "", "title": "The clock is still ticking: Timing attacks in the modern web"}, {"link": "", "title": "Cross-site search attacks"}, {"link": "", "title": "Exposing private information by timing web applications"}, {"link": "", "title": "A challenging but feasible blockwise-adaptive chosenplaintext attack on SSL"}, {"link": "", "title": "Blockwise-adaptive attackers revisiting the (in) security of some provably secure encryption modes: CBC, GEM, IACBC"}, {"link": "", "title": "CVE-2011-3389"}, {"link": "", "title": "String analysis for side channels with segmented oracles"}, {"link": "/document/8418622", "title": "Static evaluation of noninterference using approximate model counting"}, {"link": "/document/8049730", "title": "Synthesis of adaptive side-channel attacks"}, {"link": "", "title": "Decomposition instead of self-composition for proving the absence of timing channels"}, {"link": "", "title": "Precise detection of side-channel vulnerabilities using quantitative cartesian hoare logic"}, {"link": "", "title": "Eliminating timing sidechannel leaks using program repair"}, {"link": "", "title": "Symbolic path cost analysis for side-channel detection"}, {"link": "", "title": "Abstract interpretation under speculative execution"}, {"link": "", "title": "Leakage resilience against concurrent cache attacks"}, {"link": "", "title": "CANAL: A cache timing analysis framework via LLVM transformation"}, {"link": "", "title": "Adversarial symbolic execution for detecting concurrency-related cache timing leaks"}, {"link": "", "title": "Sleuth: Automated verification of software power analysis countermeasures"}, {"link": "", "title": "Formal verification of software countermeasures against side-channel attacks"}, {"link": "", "title": "SC-Infer: Refinement-based verification of software countermeasures against side-channel attacks"}, {"link": "", "title": "Mitigating power side channels during compilation"}, {"link": "", "title": "Finding security vulnerabilities in Java applications with static analysis"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "", "title": "Static DOM event dependency analysis for testing web applications"}, {"link": "", "title": "Datalog-based scalable semantic diffing of concurrent programs"}, {"link": "", "title": "On fast large-scale\u00b4 program analysis in Datalog"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "", "title": "Precise alias analysis for static detection of web application vulnerabilities"}, {"link": "", "title": "Simulation of built-in PHP features for precise static code analysis"}, {"link": "", "title": "Static detection of second-order vulnerabilities in web applications"}, {"link": "", "title": "Code reuse attacks in PHP: Automated pop chain generation"}, {"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "", "title": "NAVEX: Precise and scalable exploit generation for dynamic web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952360"}
{"ref": [{"link": "", "title": "Hacker news"}, {"link": "", "title": "Reddit"}, {"link": "", "title": "Regular expression library"}, {"link": "", "title": "Using grounded theory to study the experience of software development"}, {"link": "/document/7899040", "title": "MutRex: A Mutation-Based Generator of Fault Detecting Strings for Regular Expressions"}, {"link": "/document/7190109", "title": "Expectations, Outcomes, and Challenges of Modern Code Review"}, {"link": "", "title": "Playing regex golf with genetic programming"}, {"link": "/document/7374717", "title": "Inference of Regular Expressions for Text Extraction from Examples"}, {"link": "", "title": "Snowball Sampling: Problems and Techniques of Chain Referral Sampling"}, {"link": "", "title": "Information needs in bug reports"}, {"link": "/document/6227122", "title": "Information Needs for Software Development Analytics"}, {"link": "", "title": "Exploring regular expression usage and context in Python"}, {"link": "", "title": "Exploring regular expression usage and context in Python"}, {"link": "/document/8115653", "title": "Exploring Regular Expression Comprehension"}, {"link": "", "title": "Regular Expression Matching Can Be Simple And Fast (but is slow in Java, Perl, PHP, Python, Ruby,...)"}, {"link": "", "title": "Research design: Qualitative, quantitative, and mixed methods approaches"}, {"link": "", "title": "Denial of service through regular expressions"}, {"link": "", "title": "Denial of Service via Algorithmic Complexity Attacks"}, {"link": "", "title": "The Impact of Regular Expression Denial of Service (ReDoS) in Practice: an Empirical Study at the Ecosystem Scale"}, {"link": "", "title": "Why aren\u2019t regular expressions a lingua franca? an empirical study on the re-use and portability of regular expressions"}, {"link": "/document/8952443", "title": "Testing regex generalizability and its implications: A large-scale many-language measurement study"}, {"link": "", "title": "A Sense of Time for JavaScript and Node.js: First-Class Timeouts as a Cure for Event Handler Poisoning"}, {"link": "", "title": "txt2re"}, {"link": "", "title": "Measure it? Manage it? Ignore it? software practitioners and technical debt"}, {"link": "", "title": "Towards organisational learning enhancement: assessing software engineering practice"}, {"link": "", "title": "Mastering regular expressions"}, {"link": "", "title": "Design Patterns: Abstraction and Reuse of Object-Oriented Design"}, {"link": "", "title": "The Qualitative Report Understanding Reliability and Validity in Qualitative Research"}, {"link": "/document/7675420", "title": "Work practices and challenges in pull-based development: The integrator\u2019s perspective"}, {"link": "/document/5623572", "title": "Regular expressions on the web"}, {"link": "", "title": "Replication package for \u201dRegexes are Hard: Decision-making, Difficulties, and Risks in Programming Regular Expressions\u201d"}, {"link": "", "title": "Personal opinion surveys"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Qualitative research methods for the social sciences"}, {"link": "", "title": "Automatic Checking of Regular Expressions"}, {"link": "/document/7515482", "title": "Generating Evil Test Strings for Regular Expressions"}, {"link": "/document/7194618", "title": "What makes a great software engineer?"}, {"link": "", "title": "Qualitative communication research methods"}, {"link": "", "title": "Regexmagic"}, {"link": "", "title": "What is property based testing?"}, {"link": "/document/1702388", "title": "A Complexity Measure"}, {"link": "", "title": "dk. brics. automaton\u2013finite-state automata and regular expressions for java, 2010"}, {"link": "", "title": "The definitive ANTLR 4 reference"}, {"link": "", "title": "Software Engineering: A Practitioner\u2019s Approach. chapter Process Models"}, {"link": "", "title": "Static Analysis for Regular Expression Exponential Runtime via Substructural Logics"}, {"link": "", "title": "An empirical analysis of equivalence partitioning, boundary value analysis and random testing"}, {"link": "", "title": "Research Article: Recruitment of hard-to-reach population subgroups via adaptations of the snowball sampling strategy"}, {"link": "", "title": "ReScue: Crafting Regular Expression DoS Attacks"}, {"link": "", "title": "Measuring and modeling programming experience"}, {"link": "", "title": "A type system for regular expressions"}, {"link": "", "title": "Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers"}, {"link": "", "title": "Sublime search and replace"}, {"link": "", "title": "Visual studio code \u2013 basic editing"}, {"link": "/document/5477051", "title": "Rex: Symbolic regular expression explorer"}, {"link": "/document/8667972", "title": "Exploring Regular Expression Evolution"}, {"link": "", "title": "Exploring Regular Expression Evolution"}, {"link": "", "title": "How well are regular expressions tested in the wild?"}, {"link": "", "title": "Analyzing matching time behavior of backtracking regular expression matchers by using ambiguity of NFA"}, {"link": "", "title": "Learning from strangers: The art and method of qualitative interview studies"}, {"link": "", "title": "Static Detection of DoS Vulnerabilities in Programs that use Regular Expressions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952499"}
{"ref": [{"link": "", "title": "Flowdroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "A precise and general inter-component data flow analysis framework for security vetting of android apps"}, {"link": "", "title": "Information flow analysis of android applications in droidsafe"}, {"link": "/document/7194581", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}, {"link": "", "title": "Scalable and precise taint analysis for android"}, {"link": "", "title": "Static analysis of android apps: A systematic literature review"}, {"link": "", "title": "What developers want and need from program analysis: an empirical study"}, {"link": "", "title": "Why don\u2019t software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Smartdroid: an automatic system for revealing ui-based trigger conditions in android applications"}, {"link": "/document/7796180", "title": "Static mining and dynamic taint for mobile security threats analysis"}, {"link": "", "title": "Automated testing and notification of mobile app privacy leak-cause behaviours"}, {"link": "/document/7985671", "title": "Making malory behave maliciously: targeted fuzzing of android execution environments"}, {"link": "", "title": "Intellidroid: A targeted input generator for the dynamic analysis of android malware"}, {"link": "/document/7163067", "title": "Effective real-time android application auditing"}, {"link": "", "title": "Dissecting the Android Bouncer"}, {"link": "", "title": "Evading android runtime analysis via sandbox detection"}, {"link": "", "title": "The case for mobile forensics of private data leaks: towards large-scale user-oriented privacy protection"}, {"link": "/document/5504796", "title": "All you ever wanted to know about dynamic taint analysis and forward symbolic execution (but might have been afraid to ask)"}, {"link": "", "title": "DTA++: dynamic taint analysis with targeted control-flow propagation"}, {"link": "", "title": "I know what leaked in your pocket: uncovering privacy leaks on android apps with static taint analysis"}, {"link": "", "title": "Triflow: Triaging android applications using speculative information flows"}, {"link": "", "title": "Deepflow: Deep learning-based malware detection by mining android application for abnormal usage of sensitive data"}, {"link": "", "title": "What did really change with the new release of the app?"}, {"link": "/document/7675426", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "/document/7444819", "title": "Flowmine: Android app analysis via data flow"}, {"link": "", "title": "Redroid: Prioritizing data flows and sinks for app security transformation"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing android sources and sinks"}, {"link": "", "title": "Effective detection of android malware based on the usage of data flow apis and machine learning"}, {"link": "", "title": "Analyzing the analyzers: Flowdroid/iccta, amandroid, and droidsafe"}, {"link": "", "title": "Combining slicing and constraint solving for validation of measurement software"}, {"link": "", "title": "A unified approach to global program optimization"}, {"link": "", "title": "Interprocedural data flow analysis in soot using value contexts"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Interprocedural may-alias analysis for pointers: Beyond k-limiting"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Boomerang: Demand-Driven Flow- and Context-Sensitive Pointer Analysis for Java"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "Do android taint analysis tools keep their promises?"}, {"link": "", "title": "Androzoo: collecting millions of android apps for the research community"}, {"link": "", "title": "Device compatibility"}, {"link": "", "title": "Effective typestate verification in the presence of aliasing"}, {"link": "", "title": ""}, {"link": "/document/7527771", "title": "Target fragmentation in android apps"}, {"link": "", "title": "Platform Versions"}, {"link": "", "title": "Hidden truths in dead software paths"}, {"link": "", "title": "In defense of soundiness: a manifesto"}, {"link": "", "title": "Static Data Flow Analysis for Android Applications"}, {"link": "", "title": "On the unsoundness of static analysis for android guis"}, {"link": "/document/6624000", "title": "Asking for (and about) permissions used by android apps"}, {"link": "/document/7194583", "title": "Appcontext: Differentiating malicious and benign mobile app behaviors using context"}, {"link": "", "title": "Tracking Load-time Configuration Options"}, {"link": "/document/7996335", "title": "Automatic privacy leakage detection for massive android apps via a novel hybrid approach"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Precise interprocedural dataflow analysis with applications to constant propagation"}, {"link": "", "title": "Information flow analysis via path condition refinement"}, {"link": "", "title": "Using targeted symbolic execution for reducing false-positives in dataflow analysis"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "/document/7098023", "title": "Condroid: Targeted dynamic analysis of android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952502"}
{"ref": [{"link": "", "title": "Software change impact analysis"}, {"link": "", "title": "Interactive and guided architectural refactoring with search-based recommendation"}, {"link": "/document/1265817", "title": "A survey of software refactoring"}, {"link": "/document/4159683", "title": "Improving usability of software refactoring tools"}, {"link": "", "title": "High dimensional search-based software engineering: finding tradeoffs among 15 objectives for automating software refactoring using nsga-iii"}, {"link": "", "title": "Search-based refactoring for software maintenance"}, {"link": "", "title": "A comparison of software refactoring tools"}, {"link": "/document/6112738", "title": "How we refactor, and how we know it"}, {"link": "/document/6802406", "title": "An empirical study of refactoringchallenges and benefits at microsoft"}, {"link": "", "title": "A comparative study of manual and automated refactorings"}, {"link": "/document/6227192", "title": "Reconciling manual and automatic refactoring"}, {"link": "/document/1265817", "title": "A survey of software refactoring"}, {"link": "/document/6227190", "title": "Use, disuse, and misuse of automated refactorings"}, {"link": "/document/7335422", "title": "Fault-buster: An automatic code smell refactoring toolset"}, {"link": "", "title": "On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "", "title": "Recommendation system for software refactoring using innovization and interactive dynamic optimization"}, {"link": "", "title": "Many-objective software remodularization using nsga-iii"}, {"link": "", "title": "Reducing interactive refactoring effort via clustering-based multi-objective search"}, {"link": "", "title": "An interactive and dynamic search-based approach to software refactoring recommendations"}, {"link": "", "title": "Recommending refactoring operations in large software systems"}, {"link": "", "title": "A stochastic approach to automated design improvement"}, {"link": "", "title": "Pareto optimal search based refactoring at the design level"}, {"link": "", "title": "Search-based determination of refactorings for improving the class structure of object-oriented systems"}, {"link": "/document/5970166", "title": "Design defects detection and correction by example"}, {"link": "/document/6498470", "title": "Search-based refactoring using recorded code changes"}, {"link": "", "title": "Multicriteria code refactoring using search-based software engineering: an industrial case study"}, {"link": "/document/7820199", "title": "Model transformation modularization as a many-objective optimization problem"}, {"link": "", "title": "Search-based software library recommendation using multiobjective optimization"}, {"link": "", "title": "Web service antipatterns detection using genetic programming"}, {"link": "", "title": "Prioritizing codesmells correction tasks using chemical reaction optimization"}, {"link": "", "title": "Generating transformation rules from examples for behavioral models"}, {"link": "/document/6405274", "title": "Search-based detection of high-level model changes"}, {"link": "", "title": "Search-based design defects detection by example"}, {"link": "", "title": "Example-based sequence diagrams to colored petri nets transformation using heuristic search"}, {"link": "/document/8239928", "title": "Software bots"}, {"link": "", "title": "How software developers mitigate collaboration friction with chatbots"}, {"link": "", "title": "The power of bots: Understanding bots in oss projects"}, {"link": "", "title": "How to design a program repair bot?: insights from the repairnator project"}, {"link": "/document/6648198", "title": "Fix-it: An extensible code auto-fix component in review bot"}, {"link": "/document/8823629", "title": "Towards an autonomous bot for automatic source code refactoring"}, {"link": "/document/979986", "title": "A hierarchical model for object-oriented design quality assessment"}, {"link": "/document/4181709", "title": "Empirical validation of three software metrics suites to predict fault-proneness of object-oriented classes developed using highly iterative or agile software development processes"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "", "title": "Refactoring object-oriented frameworks"}, {"link": "", "title": "Jdeodorant: identification and application of extract class refactorings"}, {"link": "/document/6835187", "title": "A cooperative parallel search-based software engineering approach for code-smells detection"}, {"link": "/document/6976076", "title": "Do they really smell bad? A study on developers\u2019 perception of bad code smells"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952287"}
{"ref": [{"link": "", "title": "Apache Hadoop"}, {"link": "", "title": "Advantages of exceptions"}, {"link": "", "title": "Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems"}, {"link": "", "title": "What bugs live in the cloud? A study of 3000+ issues in cloud systems"}, {"link": "", "title": "An exploratory study on exception handling bugs in Java programs"}, {"link": "", "title": "Do Android developers neglect error handling? A maintenance-centric study on the relationship between Android abstractions and uncaught exceptions"}, {"link": "/document/7180074", "title": "Unveiling exception handling bug hazards in Android based on GitHub and Google code issues"}, {"link": "", "title": "Large-scale analysis of framework-specific exceptions in Android Apps"}, {"link": "", "title": "A catalogue of bug patterns for exception handling in aspect-oriented programs"}, {"link": "", "title": "Jira Software"}, {"link": "", "title": "Apache Cassandra"}, {"link": "", "title": "Apache HBase"}, {"link": "", "title": "HDFS architecture"}, {"link": "", "title": "MapReduce tutorial"}, {"link": "", "title": "Apache Hadoop YARN"}, {"link": "", "title": "Apache ZooKeeper"}, {"link": "", "title": "EBugs in cloud systems"}, {"link": "", "title": "Towards robust file system checkers"}, {"link": "", "title": "An empirical study on crash recovery bugs in large-scale distributed systems"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Torturing databases for fun and profit"}, {"link": "", "title": "FATE and DESTINI: A framework for cloud recovery testing"}, {"link": "", "title": "Correlated crash vulnerabilities"}, {"link": "", "title": "FCatch: Automatically detecting time-of-fault bugs in cloud systems"}, {"link": "", "title": "Jepsen"}, {"link": "", "title": "An analysis of network-partitioning failures in cloud systems"}, {"link": "", "title": "SAMC: Semantic-aware model checking for fast discovery of deep bugs in cloud systems"}, {"link": "", "title": "Redundancy does not imply fault tolerance: Analysis of distributed storage reactions to single errors and corruptions"}, {"link": "", "title": "Revisiting exception handling practices with exception flow analysis"}, {"link": "", "title": "Understanding the exception handling strategies of Java libraries: An empirical study"}, {"link": "/document/6975660", "title": "Pruning, pushdown exception-flow analysis"}, {"link": "", "title": "In-depth characterization of exception flows in software product lines: An empirical study"}, {"link": "", "title": "Interprocedural exception analysis for C++"}, {"link": "", "title": "Exception analysis and points-to analysis: Better together"}, {"link": "/document/5070548", "title": "Mining exception-handling rules as sequence association rules"}, {"link": "/document/8330228", "title": "Improving developers awareness of the exception handling policy"}, {"link": "", "title": "HDFS-14486"}, {"link": "", "title": "CASSANDRA-15111"}, {"link": "", "title": "CASSANDRA-15112"}, {"link": "", "title": "CASSANDRA-15114"}, {"link": "", "title": "CASSANDRA-15116"}, {"link": "", "title": "CASSANDRA-15117"}, {"link": "", "title": "HBASE-22369"}, {"link": "", "title": "Analysis of exception handling patterns in Java projects: An empirical study"}, {"link": "", "title": "Challenging analytical knowledge on exception-handling: An empirical study of 32 Java software packages"}, {"link": "", "title": "Examining programmer practices for locally handling exceptions"}, {"link": "", "title": "TaxDC: A taxonomy of non-deterministic concurrency bugs in datacenter distributed systems"}, {"link": "/document/8360307", "title": "Understanding real-world timeout problems in cloud server systems"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "CTrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "ConMem: Detecting severe concurrency bugs through an effect-oriented approach"}, {"link": "", "title": "Failure sketching: A technique for automated root cause diagnosis of in-production failures"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952179"}
{"ref": [{"link": "", "title": "Symbolic execution and program testing"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "Combining unit-level symbolic execution and system-level concrete execution for testing nasa software"}, {"link": "", "title": "Practical and effective symbolic analysis for buffer overflow detection"}, {"link": "", "title": "Efficient testing of concurrent programs with abstraction-guided symbolic execution"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Cute: A concolic unit testing engine for c"}, {"link": "", "title": "Automating mimicry attacks using static binary analysis"}, {"link": "/document/5504700", "title": "A symbolic execution framework for javascript"}, {"link": "/document/6606611", "title": "Path sensitive static analysis of web applications for remote code execution vulnerability detection"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "", "title": "Compositional solution space quantification for probabilistic software analysis"}, {"link": "", "title": "Iterative distribution-aware sampling for probabilistic symbolic execution"}, {"link": "", "title": "Symbolic string verification: An automata-based approach"}, {"link": "", "title": "Automata-based symbolic string analysis for vulnerability detection"}, {"link": "", "title": "Fast and precise sanitizer analysis with bek"}, {"link": "", "title": "Precise analysis of string expressions"}, {"link": "", "title": "Stranger: An automata-based string analysis tool for php"}, {"link": "", "title": "Z3-str: a z3-based string solver for web application analysis"}, {"link": "", "title": "S3: A symbolic string solver for vulnerability detection in web applications"}, {"link": "", "title": "Progressive reasoning over recursively-defined strings"}, {"link": "", "title": "Path feasibility analysis for string-manipulating programs"}, {"link": "", "title": "Hampi: A solver for word equations over strings, regular expressions, and context-free grammars"}, {"link": "", "title": "Lightweight string reasoning in model finding"}, {"link": "", "title": "Automata-based model counting for string constraints"}, {"link": "", "title": "Evaluation of string constraint solvers in the context of symbolic execution"}, {"link": "", "title": "A model counter for constraints over unbounded strings"}, {"link": "", "title": "Constraint normalization and parameterized caching for quantitative program analysis"}, {"link": "/document/5207642", "title": "Automatic discovery and quantification of information leaks"}, {"link": "", "title": "Symbolic quantitative information flow"}, {"link": "/document/7467345", "title": "Precisely measuring quantitative information flow: 10k lines of code and beyond"}, {"link": "", "title": "Parameterized model counting for string and numeric constraints"}, {"link": "", "title": "Finite-state transducers in language and speech processing"}, {"link": "", "title": "Weighted automata"}, {"link": "", "title": "Weighted Automata Algorithms"}, {"link": "", "title": "Implementation concepts in vaucanson 2"}, {"link": "", "title": "Testing metrics for password creation policies by attacking large sets of revealed passwords"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "/document/8115669", "title": "Automatic testing of symbolic execution engines via program generation and differential testing"}, {"link": "", "title": "Vcsn"}, {"link": "", "title": "Model counting for recursively-defined strings"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952608"}
{"ref": [{"link": "", "title": "American Fuzzy Lop"}, {"link": "", "title": "Reinforcement learning for android GUI testing"}, {"link": "", "title": "Critical success factors to improve the game development process from a developer\u2019s perspective"}, {"link": "", "title": "Deploying search based software engineering with sapienz at facebook"}, {"link": "", "title": "Graphical user interface (GUI) testing: Systematic mapping and repository"}, {"link": "/document/8233151", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "/document/8424642", "title": "Deep reinforcement fuzzing"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Hawkeye: Towards a desired directed greybox fuzzer"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet? (E)"}, {"link": "", "title": "Simulated binary crossover for continuous search space"}, {"link": "", "title": "A fast elitist non-dominated sorting genetic algorithm for multi-objective optimization: Nsga-ii"}, {"link": "", "title": "Aplhago"}, {"link": "", "title": "Dota2"}, {"link": "", "title": "Deepstellar: model-based quantitative analysis of stateful deep learning systems"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "Ui/application exerciser monkey"}, {"link": "/document/7338274", "title": "An automated model based testing approach for platform games"}, {"link": "", "title": "Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift"}, {"link": "", "title": "Prioritizing the devices to test your app on: a case study of android game apps"}, {"link": "", "title": "A Method for Stochastic Optimization"}, {"link": "/document/8367040", "title": "QBE: qlearning-based exploration of android applications"}, {"link": "", "title": "Cerebro: context-aware adaptive fuzzing for effective vulnerability detection"}, {"link": "", "title": "Studying the urgent updates of popular games on the steam platform"}, {"link": "/document/8636923", "title": "Automated tests for mobile games: An experience report"}, {"link": "", "title": "Sapienz: multi-objective automated testing for android applications"}, {"link": "", "title": "Genetic algorithms, tournament selection, and the effects of noise"}, {"link": "", "title": "Asynchronous methods for deep reinforcement learning"}, {"link": "", "title": "Human-level control through deep reinforcement learning"}, {"link": "", "title": "Rectified linear units improve restricted boltzmann machines"}, {"link": "", "title": "Global games market report"}, {"link": "", "title": "Automatic differentiation in pytorch"}, {"link": "", "title": "Mastering the game of go with deep neural networks and tree search"}, {"link": "", "title": "Reinforcement learning for automatic test case prioritization and selection in continuous integration"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "", "title": "Guided, stochastic model-based GUI testing of android apps"}, {"link": "", "title": "Deep neuroevolution: Genetic algorithms are a competitive alternative for training deep neural networks for reinforcement learning"}, {"link": "", "title": "Reinforcement learning: An introduction"}, {"link": "", "title": "A reinforcement learning based approach to automated testing of android applications"}, {"link": "/document/7958599", "title": "Skyfire: Data-driven seed generation for fuzzing"}, {"link": "", "title": ""}, {"link": "", "title": "Deephunter: a coverage-guided fuzz testing framework for deep neural networks"}, {"link": "", "title": "Diffchaser: Detecting disagreements for deep neural networks"}, {"link": "", "title": "Towards Efficient Detection and Optimal Response against Sophisticated Opponents"}, {"link": "", "title": "Bayes-ToMoP - A Fast Detection and Best Response Algorithm Towards Sophisticated Opponents"}, {"link": "", "title": "Weighted Double Deep Multiagent Reinforcement Learning in Stochastic Cooperative Environments"}, {"link": "", "title": "A Deep Bayesian Policy Reuse Approach Against Non-Stationary Agents"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952543"}
{"ref": [{"link": "", "title": "Practical realisation and elimination of an ECC-related software bug attack"}, {"link": "", "title": "Elliptic curve cryptosystems"}, {"link": "", "title": "Use of elliptic curves in cryptography"}, {"link": "", "title": "Curve25519: New Diffie-Hellman speed records"}, {"link": "", "title": "The OpenSSH website"}, {"link": "", "title": "The OpenSSL website"}, {"link": "", "title": "OpenSSL committers"}, {"link": "", "title": "Modular multiplication without trial division"}, {"link": "", "title": "CPAchecker: A tool for configurable software verification"}, {"link": "", "title": "PeSCo: Predicting sequential combinations of verifiers - (competition contribution)"}, {"link": "", "title": "Ultimate Automizer with an on-demand construction of Floyd-Hoare automata - (competition contribution)"}, {"link": "", "title": "SMACK: decoupling source language details from verifier implementations"}, {"link": "", "title": "Verifying arithmetic assembly programs in cryptographic primitives (invited talk)"}, {"link": "", "title": "The LLVM compiler infrastructure project"}, {"link": "/document/1029817", "title": "Separation logic: A logic for shared mutable data structures"}, {"link": "", "title": "Speeding the Pollard and elliptic curve methods of factorization"}, {"link": "", "title": "2LS for program analysis - (competition contribution)"}, {"link": "", "title": "CBMC - C bounded model checker - (competition contribution)"}, {"link": "", "title": "ESBMC v6.0: Verifying C programs using k-induction and invariant inference - (competition contribution)"}, {"link": "", "title": "The software model checker BLAST"}, {"link": "", "title": "VeriAbs: Verification by abstraction (competition contribution)"}, {"link": "", "title": "Automatic verification of C and Java programs: SV-COMP 2019"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "Frama-C: A software analysis perspective"}, {"link": "", "title": "gfverif: Fast and easy verification of finite-field arithmetic"}, {"link": "/document/7782698", "title": "Automated verification of real-world cryptographic implementations"}, {"link": "", "title": "HACL*: A verified modern cryptographic library"}, {"link": "", "title": "Vale: Verifying high-performance cryptographic assembly code"}, {"link": "/document/8835346", "title": "Simple high-level code for cryptographic arithmetic - with proofs, without compromises"}, {"link": "", "title": "The Coq Development Team, The Coq Proof AssistantReference Manual, version 8.9"}, {"link": "", "title": "On construction of a library of formally verified low-level arithmetic functions"}, {"link": "", "title": "Certifying assembly with formal security proofs: The case of BBS"}, {"link": "", "title": "An approach to formal verification of arithmetic functions in assembly"}, {"link": "", "title": "Hoare logic for realistically modelled machine code"}, {"link": "", "title": "Proof pearl: A verified bignum implementation in x86-64 machine code"}, {"link": "", "title": "Verification of a cryptographic primitive: SHA-256"}, {"link": "", "title": "Verified correctness and security of OpenSSL HMAC"}, {"link": "", "title": "Verified correctness and security of mbedTLS HMAC-DRBG"}, {"link": "", "title": "Verifying Curve25519 software"}, {"link": "", "title": "Certified verification of algebraic properties on low-level mathematical constructs in cryptographic programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952256"}
{"ref": [{"link": "", "title": "A descriptive model of computer code trustworthiness"}, {"link": "", "title": "Automatically validating temporal safety properties of interfaces"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "/document/8823633", "title": "Leveraging program invariants to promote population diversity in search-based automatic program repair"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Optimal implementations of upgma and other common clustering algorithms"}, {"link": "", "title": "Fixing bugs in your sleep: How genetic improvement became an overnight success"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "/document/7153570", "title": "The manybugs and introclass benchmarks for automated repair of c programs"}, {"link": "/document/6035728", "title": "Genprog: A genetic method for automatic software repair"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/8804442", "title": "Sapfix: Automated end-to-end repair at scale"}, {"link": "", "title": "Astor: A program repair library for java"}, {"link": "", "title": "Automatic software repair: a bibliography"}, {"link": "", "title": "A guided tour to approximate string matching"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "", "title": "Formal verification by reverse synthesis"}, {"link": "", "title": "ARJA: automated repair of java programs via multi-objective genetic programming"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952219"}
{"ref": [{"link": "", "title": "Frama-c: A software analysis perspective"}, {"link": "", "title": "Astr\u00e9e: From research to industry"}, {"link": "", "title": "SAGE: whitebox fuzzing for security testing"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs in"}, {"link": "/document/7174865", "title": "From categorical logic to facebook engineering in"}, {"link": "", "title": "The static driver verifier research platform"}, {"link": "", "title": "An analysis of x86-64 inline assembly in c programs"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Assigning meanings to programs"}, {"link": "", "title": "An axiomatic basis for computer programming"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints in"}, {"link": "", "title": "Vx86: x86 Assembler Simulated in C Powered by Automated Theorem Proving"}, {"link": "", "title": "Inception: System-wide security testing of real-world embedded systems software"}, {"link": "/document/738514", "title": "Assembly to High-Level Language Translation"}, {"link": "", "title": "Interprocedural data flow decompilation"}, {"link": "", "title": "Decompilation of Binary Programs"}, {"link": "", "title": "Evolving exact decompilation"}, {"link": "", "title": "Native x86 decompilation using semantics-preserving structural analysis and iterative control-flow structuring"}, {"link": "", "title": "BAP: A Binary Analysis Platform"}, {"link": "", "title": "The BINCOA framework for binary code analysis"}, {"link": "/document/8115648", "title": "Testing intermediate representations for binary analysis"}, {"link": "", "title": "Translation validation for an optimizing compiler"}, {"link": "", "title": "Intel\u00ae 64 and IA-32 Architectures Software Developer\u2019s Manual"}, {"link": "", "title": "BINSEC: Binary Code Analysis with Low-Level Regions"}, {"link": "/document/7476691", "title": "BINSEC/SE: A dynamic symbolic execution toolkit for binary-level analysis"}, {"link": "", "title": "Satisfiability modulo theories"}, {"link": "", "title": "DWARF Debugging Information Format Committee, DWARF Debugging Information Formal 5"}, {"link": "", "title": "Recovering High-Level Conditions from Binary Programs"}, {"link": "", "title": "Structuring an abstract interpreter through value and state abstractions:eva, an evolved value analysis for frama-c"}, {"link": "", "title": "Abstract interpretation: past, present and future"}, {"link": "", "title": "WP Manual"}, {"link": "", "title": "Feeding the Fuzzers with KLEE"}, {"link": "", "title": "Formal verification of klibc with the WP frama-c plug-in"}, {"link": "", "title": "ACSL By Example 17.2.0"}, {"link": "", "title": "The Satisfiability Modulo Theories Library (SMT-LIB)"}, {"link": "", "title": "Verification of hypervisor subroutines written in assembler = verifikation von hypervisorunterrutinen, geschrieben in assembler"}, {"link": "", "title": "VCC: A Practical System for Verifying Concurrent C"}, {"link": "", "title": "Integrated Semantics of Intermediate-Language C and Macro-Assembler for Pervasive Formal Verification of Operating Systems and Hypervisors from VerisoftXT"}, {"link": "/document/4637535", "title": "Some assembly required \u2013 program analysis of embedded system code"}, {"link": "/document/4689183", "title": "Machine-code verification for multiple architectures \u2013 an application of decompilation into logic"}, {"link": "", "title": "Analysis of Low-Level Code Using Cooperating Decompilers"}, {"link": "", "title": "Tie: Principled reverse engineering of types in binary programs"}, {"link": "", "title": "From minx to minc: Semantics-driven decompilation of recursive datatypes"}, {"link": "", "title": "An in-depth analysis of disassembly on full-scale x86/x64 binaries"}, {"link": "", "title": "Binary code is not easy"}, {"link": "", "title": "WYSINWYX: what you see is not what you execute"}, {"link": "", "title": "Refinement-Based CFG Reconstruction from Unstructured Programs"}, {"link": "", "title": "Altemating Control Flow Reconstiuction"}, {"link": "", "title": "Precise control flow reconstruction using boolean logic"}, {"link": "/document/6079861", "title": "Precise Static Analysis of Binaries by Extracting Relational Information"}, {"link": "", "title": "Trustworthy specifications of ARMO v8-A and v8-M system level architecture"}, {"link": "", "title": "From system F to typed assembly language"}, {"link": "", "title": "Funtal: Reasonably mixing a functional language with assembly"}, {"link": "", "title": "Translation validation for a verified OS kernel"}, {"link": "", "title": "Certification of compiled assembly code by invariant translation"}, {"link": "", "title": "Formal verification of coalescing graph-coloring register allocation"}, {"link": "", "title": "Simple relational correctness proofs for static analyses and program transformations"}, {"link": "", "title": "Shadow of a doubt: testing for divergences between software versions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952223"}
{"ref": [{"link": "", "title": "A rhetorical theory of diffusion"}, {"link": "", "title": "The tie that binds? coherence among emotion experience, behavior, and physiology"}, {"link": "", "title": "The role of emotion in computer-mediated communication: A review"}, {"link": "", "title": "Affect and creativity at work"}, {"link": "", "title": "Diversity and emotion: The new frontiers in organizational behavior research"}, {"link": "", "title": "Emotional exhaustion as a predictor of job performance and voluntary turnover"}, {"link": "", "title": "Towards emotional awareness in software development teams"}, {"link": "/document/7966869", "title": "Anger and its direction in collaborative software development"}, {"link": "/document/7765515", "title": "A needle in a haystack: What do twitter users say about software?"}, {"link": "", "title": "On the automatic classification of app reviews"}, {"link": "", "title": "Mining valence, arousal, and dominance: Possibilities for detecting burnout and productivity?"}, {"link": "/document/4468714", "title": "A survey of affect recognition methods: Audio, visual, and spontaneous expressions"}, {"link": "", "title": "Emotion recognition from physiological signals using wireless sensors for presence technologies"}, {"link": "", "title": "Bodily maps of emotions"}, {"link": "", "title": "Speech emotion recognition using deep neural network and extreme learning machine"}, {"link": "/document/8462011", "title": "Human-like emotion recognition: Multi-label learning from noisy labeled audio-visual expressive speech"}, {"link": "", "title": "Textual affect sensing for sociable and expressive online communication"}, {"link": "", "title": "Affectivespace 2: enabling affective intuition for concept-level sentiment analysis"}, {"link": "", "title": "Crowds on wall street: Extracting value from collaborative investing platforms"}, {"link": "", "title": "Sentiment polarity detection for software development"}, {"link": "", "title": "Three\u2019s company: Understanding communication channels in three-way distributed collaboration"}, {"link": "", "title": "Beyond valence in the perception of likelihood: The role of emotion specificity"}, {"link": "", "title": "Gaining insights from social media language: Methodologies and challenges"}, {"link": "", "title": "The social world of twitter: Topics, geography, and emotions"}, {"link": "", "title": "Discourse of Twitter and social media: How we use language to create affiliation on the web"}, {"link": "", "title": "The importance of being flexible: The ability to both enhance and suppress emotional expression predicts long-term adjustment"}, {"link": "", "title": "Emotion in organizations: a review and theoretical integration"}, {"link": "", "title": "Emotion display norms in virtual teams"}, {"link": "", "title": "Mood and emotions in small groups and work teams"}, {"link": "", "title": "Collective action and the evolution of social norms"}, {"link": "", "title": "Bridging the work/social divide: the emotional response to organizational social networking sites"}, {"link": "", "title": "Emotional dissonance and the information technology professional"}, {"link": "", "title": "The effects of team flexibility and emotional intelligence on software development performance"}, {"link": "", "title": "Hierarchy and centralization in free and open source software team communications"}, {"link": "", "title": "Developer initiation and social interactions in oss: A case study of the apache software foundation"}, {"link": "", "title": "Developer onboarding in github: The role of prior social links and language experience"}, {"link": "", "title": "Roles and politeness behavior in community-based free/libre open source software development"}, {"link": "", "title": "Sentiment and politeness analysis tools on developer discussions are unreliable, but so are people"}, {"link": "", "title": "Sentiment analysis for software engineering: How far can we go?"}, {"link": "", "title": "A gold standard for emotion annotation in stack overflow"}, {"link": "", "title": "Emobank: Studying the impact of annotation perspective and representation format on dimensional emotion analysis"}, {"link": "", "title": "The dissociation of emotion expression from emotion experience: A personality perspective"}, {"link": "", "title": "An argument for basic emotions"}, {"link": "", "title": "What\u2019s basic about basic emotions?"}, {"link": "", "title": "Emotions revealed: Recognizing faces and feelings to improve communication and emotional life"}, {"link": "", "title": "Self-report captures 27 distinct categories of emotion bridged by continuous gradients"}, {"link": "", "title": "Semeval-2018 Task 1: Affect in tweets"}, {"link": "/document/7180089", "title": "Are bullies more productive?: Empirical study of affectiveness vs. issue fixing time"}, {"link": "", "title": "Ntua-slp at semeval-2018 task 1: Predicting affective content in tweets with deep attentive rnns and transfer learning"}, {"link": "", "title": "The personality structure of affect"}, {"link": "", "title": "The experience sampling method"}, {"link": "", "title": "The relationships among momentary emotion experiences, personality descriptions, and retrospective ratings of emotion"}, {"link": "", "title": "Correspondence between retrospective and momentary ratings of positive and negative affect in old age: Findings from a one-year measurement burst design"}, {"link": "", "title": "Validity and reliability of the experience-sampling method"}, {"link": "", "title": "Emotions beyond the laboratory: Theoretical fundaments, study design, and analytic strategies for advanced ambulatory assessment"}, {"link": "", "title": "evaluating multiepisode events: boundary conditions for the peak-end rule"}, {"link": "", "title": "The importance of physical activity and sleep for affect on stressful days: Two intensive longitudinal studies"}, {"link": "/document/6984514", "title": "Conversation emotional modeling in social networks"}, {"link": "", "title": "Emotionwatch: Visualizing fine-grained emotions in event-related tweets"}, {"link": "/document/7042496", "title": "Pearl: An interactive visual analytic tool for understanding personal emotion style derived from social media"}, {"link": "", "title": "Seemo: A computational approach to see emotions"}, {"link": "", "title": "The big five personality dimensions and job performance: a meta-analysis"}, {"link": "", "title": "Blog tells what kind of personality you have: Egogram estimation from japanese weblog"}, {"link": "", "title": "Personality-targeted design: Theory, experimental procedure, and preliminary results"}, {"link": "", "title": "An examination of personality traits and how they impact on software development teams"}, {"link": "", "title": "The big five trait taxonomy: History, measurement, and theoretical perspectives"}, {"link": "", "title": "Measuring emotion: Development and application of an instrument to measure emotional responses to products"}, {"link": "", "title": "Coherence between expressive and experiential systems in emotion"}, {"link": "", "title": "Emotional expression online: Gender differences in emoticon use"}, {"link": "", "title": "Norms for experiencing emotions in different cultures: Inter-and intranational differences"}, {"link": "", "title": "Separating individual and group effects"}, {"link": "", "title": "Estimating within-group interrater reliability with and without response bias"}, {"link": "", "title": "Beautiful data: the stories behind elegant data solutions"}, {"link": "", "title": "Understanding emotions: A dataset of tweets to study interactions between affect categories"}, {"link": "", "title": "Word affect intensities"}, {"link": "", "title": "Corpus annotation through crowdsourcing:towards best practice guidelines"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Machine learning yearning"}, {"link": "", "title": "R: A Language and Environment for Statistical Computing"}, {"link": "", "title": "The asa\u2019s statement on p-values: Context, process, and purpose"}, {"link": "", "title": "A drunk and her dog: an illustration of cointegration and error correction"}, {"link": "", "title": "Co-integration and error correction: representation, estimation, and testing"}, {"link": "", "title": "tseries: Time Series Analysis and Computational Finance"}, {"link": "", "title": "Emotional regulation in the workplace: A new way to conceptualize emotional labor"}, {"link": "", "title": "Anger and Aggression: An Essay on Emotion"}, {"link": "", "title": "The power-emotion relationship in discourse: Spontaneous expression of emotions in asymmetric dialogue"}, {"link": "", "title": "The structure of emotional expressivity: Each emotion counts"}, {"link": "", "title": "On the social nature of personality: Effects of extraversion, agreeableness, and feedback about collective resource use on cooperation in a resource dilemma"}, {"link": "", "title": "Making use of derived personality: The case of social media ad targeting"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952437"}
{"ref": [{"link": "/document/6613850", "title": "Blogging developer knowledge: Motivations, challenges, and future directions"}, {"link": "/document/7180090", "title": "What is the gist?: Understanding the use of public gists on github"}, {"link": "/document/8530031", "title": "Gistable: Evaluating the executability of python code snippets on github"}, {"link": "", "title": "Exploration and explanation in computational notebooks"}, {"link": "", "title": "Where does google find api documentation?"}, {"link": "/document/7962378", "title": "Stack overflow in github: Any snippets there?"}, {"link": "", "title": "From query to usable code: An analysis of stack overflow code snippets"}, {"link": "", "title": "A quantitative study of java software buildability"}, {"link": "/document/8811897", "title": "Dockerizeme: Automatic inference of environment dependencies for python code snippets"}, {"link": "/document/8816763", "title": "A large-scale study about quality and reproducibility of jupyter notebooks"}, {"link": "", "title": "How do developers utilize source code from stack overflow?"}, {"link": "/document/8330201", "title": "Automatically repairing dependency-related build breakage"}, {"link": "", "title": "Hirebuild: An automatic approach to history-driven repair of build scripts"}, {"link": "", "title": "Pep 373 \u2013 python 2.7 release schedule"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "/document/7426643", "title": "When it breaks, it breaks: How ecosystem developers reason about the stability of dependencies"}, {"link": "", "title": "Programmers\u2019 build errors: A case study (at google)"}, {"link": "", "title": "How to design a program repair bot? insights from the repairnator project"}, {"link": "", "title": "Beyond api signatures: An empirical study on behavioral backward incompatibilities of java software libraries"}, {"link": "", "title": "Patches as better bug reports"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "/document/7884640", "title": "Why do we break apis? first answers from developers"}, {"link": "", "title": "Dependency versioning in the wild"}, {"link": "/document/7962382", "title": "An empirical analysis of the docker container ecosystem on github"}, {"link": "/document/7884604", "title": "An empirical comparison of dependency issues in oss packaging ecosystems"}, {"link": "/document/8115621", "title": "Can automated pull requests encourage software developers to upgrade out-of-date dependencies?"}, {"link": "/document/4359473", "title": "Api-evolution support with diff-catchup"}, {"link": "", "title": "Catchup!: Capturing and replaying refactorings to support api evolution"}, {"link": "", "title": "Recommending adaptive changes for framework evolution"}, {"link": "/document/8115673", "title": "Tortoise: Interactive system configuration repair"}, {"link": "", "title": "Finding faster configurations using flash"}, {"link": "/document/7476644", "title": "History driven program repair"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952262"}
{"ref": [{"link": "/document/7310985", "title": "Refactoring for asynchronous execution on mobile devices"}, {"link": "", "title": "The java.util.concurrent synchronizer framework"}, {"link": "", "title": "A survey on reactive programming"}, {"link": "", "title": "Embedding dynamic dataflow in a call-by-value language"}, {"link": "", "title": "Flapjax: A programming language for Ajax applications"}, {"link": "", "title": "An empirical study on program comprehension with reactive programming"}, {"link": "/document/7827078", "title": "On the positive effect of reactive programming on software comprehension: An empirical study"}, {"link": "", "title": "Asynchronous functional reactive programming for GUIs"}, {"link": "", "title": ""}, {"link": "", "title": "A comparative study of manual and automated refactorings"}, {"link": "", "title": "Retrofitting concurrency for Android applications through refactoring"}, {"link": "", "title": "A study and toolkit for asynchronous programming in C#"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "/document/6606699", "title": "LAMBDAFICATOR: From imperative to functional programming through automated refactoring"}, {"link": "/document/6152131", "title": "A comprehensive approach to naming and accessibility in refactoring Java programs"}, {"link": "", "title": "Abstract execution"}, {"link": "", "title": "Refactoring for reentrancy"}, {"link": "", "title": "Refactoring Java programs for flexible locking"}, {"link": "/document/7985650", "title": "Clone refactoring with lambda expressions"}, {"link": "/document/7985652", "title": "Automated refactoring of legacy java software to default methods"}, {"link": "", "title": "AD-ROOM: A tool for automatic detection of refactorings in object-oriented models"}, {"link": "", "title": "JDeodorant: Clone refactoring"}, {"link": "", "title": "Improving refactoring speed by 10x"}, {"link": "/document/7372011", "title": "Study and refactoring of android asynchronous programming"}, {"link": "", "title": "Toward automatic update from\u00b4 callbacks to promises"}, {"link": "", "title": ""}, {"link": "", "title": "Promises: Linguistic support for efficient asynchronous procedure calls in distributed systems"}, {"link": "", "title": "Elasticsearch: Open Source Search & Analytics"}, {"link": "", "title": "Refactoring object-oriented frameworks"}, {"link": "/document/7372076", "title": "Refactorings for Android asynchronous programming"}, {"link": "", "title": "Declarative intraprocedural flow analysis of Java source code"}, {"link": "", "title": ""}, {"link": "/document/6606588", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Apache Maven Project"}, {"link": "", "title": "Apache Ant Project"}, {"link": "", "title": "Github projects. quality analysis of open-source software"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/6175911", "title": "Automated behavioral testing of refactoring engines"}, {"link": "", "title": ""}, {"link": "/document/7194557", "title": "Views on internal and external validity in empirical software engineering"}, {"link": "", "title": "Constraint-based refactoring"}, {"link": "", "title": "Functional reactive animation"}, {"link": "", "title": ""}, {"link": "", "title": "REScala: Bridging between object-oriented and functional style in reactive applications"}, {"link": "", "title": "Higher-order reactive programming with incremental lists"}, {"link": "/document/8354906", "title": "On the semantics of distributed reactive programming: The cost of consistency"}, {"link": "", "title": "Debugging data flows in reactive programs"}, {"link": "", "title": "Debugging for reactive programming"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Refactoring a legacy component for reuse in a software product line: a case study"}, {"link": "", "title": "Does refactoring improve reusability?"}, {"link": "", "title": "Programmer friendly refactoring tools"}, {"link": "", "title": "Refactoring with synthesis"}, {"link": "", "title": "Correct refactoring of concurrent Java code"}, {"link": "/document/7194590", "title": "Morpheus: Variability-aware refactoring in the wild"}, {"link": "", "title": "Does automated refactoring obviate systematic editing?"}, {"link": "/document/7332467", "title": "Scripting parametric refactorings in Java to retrofit design patterns"}, {"link": "", "title": "Finding broken promises in asynchronous javascript programs"}, {"link": "", "title": "Callback hell"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952329"}
{"ref": [{"link": "", "title": "Working effectively with legacy code"}, {"link": "", "title": "Refactoring to Patterns"}, {"link": "", "title": "A cost-benefit framework for making architectural decisions in a business context"}, {"link": "/document/6336724", "title": "Estimating the principal of an application's technical debt"}, {"link": "/document/6336724", "title": "Estimating the principal of an application's technical debt"}, {"link": "/document/7776447", "title": "The perception of technical debt in the embedded systems domain: An industrial case study"}, {"link": "/document/8115622", "title": "Are developers aware of the architectural impact of their changes?"}, {"link": "", "title": "The WyCash portfolio management system"}, {"link": "", "title": "A case study in locating the architectural roots of technical debt"}, {"link": "", "title": "On the interest of architectural technical debt: Uncovering the contagious debt phenomenon"}, {"link": "", "title": "Sonarqube"}, {"link": "", "title": "Structure101"}, {"link": "", "title": "Architecture antipatterns: Automatically detectable violations of design principles"}, {"link": "", "title": "Experiences applying automated architecture analysis tool suites"}, {"link": "", "title": "Analysing software repositories to understand software evolution"}, {"link": "", "title": "The single responsibility principle"}, {"link": "", "title": "Understand"}, {"link": "", "title": "Simian"}, {"link": "", "title": "The birth, growth, death and rejuvenation of software maintenance communities"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "", "title": "Decoupling level: a new metric for architectural maintenance complexity"}, {"link": "", "title": "Hotspot patterns: The formal definition and automatic detection of architecture smells"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/6624018", "title": "The impact of tangled code changes"}, {"link": "/document/7675400", "title": "Helping developers help themselves: Automatic decomposition of code review change-sets"}, {"link": "", "title": "Types of software evolution and software maintenance"}, {"link": "/document/4659256", "title": "The past, present, and future of software evolution"}, {"link": "/document/883030", "title": "Evolution in open source software: A case study"}, {"link": "", "title": "Mining large software compilations over time: another perspective of software evolution"}, {"link": "/document/6985636", "title": "Forecasting java software evolution trends employing network models"}, {"link": "/document/7057560", "title": "Architectural refactoring: A task-centric view on software evolution"}, {"link": "", "title": "Identifying and quantifying architectural debt"}, {"link": "", "title": "Design rule spaces: A new form of architecture insight"}, {"link": "/document/8094424", "title": "Bug propagation through code cloning: An empirical study"}, {"link": "/document/1357812", "title": "Predicting change propagation in software systems"}, {"link": "/document/1463228", "title": "Mining version histories to guide software changes"}, {"link": "/document/4268249", "title": "Mining software repositories for traceability links"}, {"link": "", "title": "Chianti: a tool for change impact analysis of java programs"}, {"link": "/document/8530037", "title": "An empirical study of multi-entity changes in real bug fixes"}, {"link": "/document/6336722", "title": "Technical debt: From metaphor to theory and practice"}, {"link": "", "title": "Reliable Computer Systems: Design and Evaluatuion"}, {"link": "", "title": "A controlled experiment investigation of an object-oriented design heuristic for maintainability"}, {"link": "/document/4658071", "title": "Assessing the effect of clones on changeability"}, {"link": "/document/5741260", "title": "An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension"}, {"link": "/document/5328703", "title": "An exploratory study of the impact of code smells on software change-proneness"}, {"link": "", "title": "Detecting architecturally-relevant code smells in evolving software systems"}, {"link": "/document/8170086", "title": "On the influence of human factors for identifying code smells: A multi-trial empirical study"}, {"link": "", "title": "Competitive coevolutionary code-smells detection"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "/document/6693086", "title": "Detecting bad smells in source code using change history information"}, {"link": "/document/7675424", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "Patterns and antipatterns"}, {"link": "", "title": "An\u00b4 exploratory study of the impact of antipatterns on class change-and fault-proneness"}, {"link": "/document/6606614", "title": "Exploring the impact of inter-smell relations on software maintainability: An empirical study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952512"}
{"ref": [{"link": "", "title": "Survey on user ratings and reviews"}, {"link": "", "title": "Online app review analysis for identifying emerging issues"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "", "title": "Ratings, reviews, and responses in app store"}, {"link": "", "title": "View and analyze your app\u2019s ratings and reviews"}, {"link": "", "title": "Facilitating developer-user interactions with mobile app review digests"}, {"link": "/document/7325189", "title": "Is it worth responding to reviews? studying the top free apps in google play"}, {"link": "", "title": "Studying the dialogue between users and developers of free apps in the google play store"}, {"link": "", "title": "Essmart way to manage user requests"}, {"link": "", "title": "Steering output style and topic in neural response generation"}, {"link": "", "title": "A syntactically constrained bidirectional-asynchronous approach for emotional conversation generation"}, {"link": "", "title": "A neural network approach to context-sensitive generation of conversational responses"}, {"link": "", "title": "The design and implementation of xiaoice, an empathetic social chatbot"}, {"link": "", "title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "Language to logical form with neural attention"}, {"link": "/document/7961530", "title": "Towards automatic generation of short summaries of commits"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "Deep learning type inference"}, {"link": "/document/6919058", "title": "Numeric rating of apps on google play store by sentiment analysis on user reviews"}, {"link": "", "title": "Review spam detector with rating consistency check"}, {"link": "", "title": "Neural-machine-translation-based commit message generation: how far are we?"}, {"link": "", "title": "An information retrieval approach to short text conversation"}, {"link": "", "title": "An ensemble of retrieval-based and generation-based human-computer conversation systems"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Bleu: a method for automatic evaluation of machine translation"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Links between perceptrons, mlps and svms"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "/document/7320414", "title": "Bug report, feature request, or simply praise? on automatically classifying app reviews"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "A neural attention model for abstractive sentence summarization"}, {"link": "", "title": "A structured self-attentive sentence embedding"}, {"link": "", "title": "Topic memory networks for short text classi\ufb01cation"}, {"link": "", "title": "Ar-miner: mining informative reviews for developers from mobile app marketplace"}, {"link": "/document/6912257", "title": "How do users like this feature? a \ufb01ne grained sentiment analysis of app reviews"}, {"link": "", "title": "Sentiment in short strength detection informal text"}, {"link": "", "title": "Training feedforward neural networks using genetic algorithms"}, {"link": "", "title": "Wordnet: A lexical database for english"}, {"link": "", "title": "Empirical evaluation of gated recurrent neural networks on sequence modeling"}, {"link": "/document/7472657", "title": "Investigating gated recurrent networks for speech synthesis"}, {"link": "", "title": "Glove: Global vectors for word representation"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "Pytorch"}, {"link": "/document/6224306", "title": "App store mining and analysis: MSR for app stores"}, {"link": "", "title": "App annie"}, {"link": "/document/7774515", "title": "Experience report: Understanding cross-platform app issues from user reviews"}, {"link": "/document/7372063", "title": "Mining user opinions in mobile app reviews: A keyword-based approach (T)"}, {"link": "", "title": "How NOT to evaluate your dialogue system: An empirical study of unsupervised evaluation metrics for dialogue response generation"}, {"link": "", "title": "A syntactic neural model for general-purpose code generation"}, {"link": "", "title": "Knowledge diffusion for neural dialogue generation"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "", "title": "Effect sizes for research: A broad application approach"}, {"link": "", "title": "Harvesting paragraph-level question-answer pairs from wikipedia"}, {"link": "", "title": "Practitioners\u2019 expectations on automated fault localization"}, {"link": "/document/7133542", "title": "Ar-tracker: Track the dynamics of mobile apps via user review mining"}, {"link": "", "title": "Developers can \ufb01nally respond to app store reviews"}, {"link": "", "title": "A benchmark study on sentiment analysis for software engineering research"}, {"link": "/document/7675447", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "Four commentaries on the use of students and professionals in empirical software engineering experiments"}, {"link": "/document/7985654", "title": "Recommending and localizing change requests for mobile apps based on user reviews"}, {"link": "/document/8330198", "title": "Exploring the integration of user feedback in automated testing of android applications"}, {"link": "", "title": "Emerging app issue identi\ufb01cation from user feedback: experience on wechat"}, {"link": "", "title": "What are you complaining about?: a study of online reviews of mobile applications"}, {"link": "/document/6624001", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "/document/7372064", "title": "\u201dwhat parts of your apps are loved by users?\u201d (T)"}, {"link": "/document/7765038", "title": "A survey of app store analysis for software engineering"}, {"link": "", "title": "What you say and how you say it: Joint modeling of topics and discourse in microblog conversations"}, {"link": "", "title": "Evaluating conversational characters created through question generation"}, {"link": "", "title": "Data-driven response generation in social media"}, {"link": "", "title": "A neural conversational model"}, {"link": "", "title": "Moses: Open source toolkit for statistical machine translation"}, {"link": "", "title": "A vector space model for automatic indexing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952476"}
{"ref": [{"link": "", "title": "No more gotos: Decompilation using pattern-independent control-flow structuring and semantics-preserving transformations"}, {"link": "/document/7546501", "title": "Helping Johnny to analyze malware: A usability-optimized decompiler and malware analysis user study"}, {"link": "/document/6671321", "title": "PsybOt malware: A step-by-step decompilation case study"}, {"link": "", "title": "Static single assignment for decompilation"}, {"link": "", "title": "Native x86 decompilation using semantics-preserving structural analysis and iterative controlflow structuring"}, {"link": "", "title": "Your botnet is my botnet: Analysis of a botnet takeover"}, {"link": "", "title": "Uroburos: Highly complex espionage software with Russian roots"}, {"link": "/document/6547104", "title": "SoK: P2PWNED \u2014 Modeling and evaluating the resilience of peer-to-peer botnets"}, {"link": "", "title": "objdump"}, {"link": "", "title": "Ida"}, {"link": "", "title": "The hex-rays decompiler"}, {"link": "", "title": "The ghidra decompiler"}, {"link": "", "title": "An investigation of procedure and variable names as beacons during program comprehension"}, {"link": "/document/1631100", "title": "What\u2019s in a name? A study of identifiers"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "/document/7203008", "title": "New initiative: The naturalness of software"}, {"link": "", "title": "Predicting program properties from \u201cBig Code\u201d"}, {"link": "", "title": "Recovering clear, natural identifiers from obfuscated JavaScript names"}, {"link": "", "title": "Context2Name: A deep learning-based approach to infer natural variable names from usage contexts"}, {"link": "", "title": "A general path-based representation for predicting program properties"}, {"link": "", "title": "Meaningful variable names for decompiled code: A machine translation approach"}, {"link": "", "title": "DEBIN: Predicting debug information in stripped binaries"}, {"link": "", "title": "Neural reverse engineering of stripped binaries"}, {"link": "", "title": "Statistical machine translation"}, {"link": "/document/8330222", "title": "Using recurrent neural networks for decompilation"}, {"link": "", "title": "Introduction to the DWARF debugging format"}, {"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Learning to represent programs with graphs"}, {"link": "", "title": "code2seq: Generating sequences from structured representations of code"}, {"link": "", "title": "Learning representations by back-propagating errors"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "/document/4700287", "title": "The graph neural network model"}, {"link": "", "title": "Gated graph sequence neural networks"}, {"link": "", "title": "Neural message passing for quantum chemistry"}, {"link": "", "title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation"}, {"link": "", "title": "SentencePiece: A simple and language independent subword tokenizer and detokenizer for neural text processing"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "/document/7243334", "title": "Describing multimedia content using attention-based encoder-decoder networks"}, {"link": "", "title": "CharacTer: Translation edit rate on character level"}, {"link": "", "title": "The adverse effects of code duplication in machine learning models of code"}, {"link": "", "title": "Numerical Recipes in C: The Art of Scientific Computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952404"}
{"ref": [{"link": "/document/7582804", "title": "Mining revision histories to detect cross-language clones without intermediates"}, {"link": "", "title": "ModelDriven Software Migration: A Methodology: Reengineering, Recovery and Modernization of Legacy Systems"}, {"link": "", "title": "Microservices: yesterday, today, and tomorrow"}, {"link": "", "title": "Antlr3"}, {"link": "", "title": "Apache Lucene"}, {"link": "", "title": "Factual Developers"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "", "title": "Supporting the Analysis of Clones in Software Systems: A Case Study"}, {"link": "", "title": "Article: A Survey of Software Clone Detection Techniques"}, {"link": "", "title": "Removing clones from the code"}, {"link": "/document/4023973", "title": "\u201cCloning Considered Harmful\u201d Considered Harmful"}, {"link": "/document/8330250", "title": "LICCA: A tool for cross-language clone detection"}, {"link": "", "title": "CLCMiner: Detecting cross language clones without intermediates"}, {"link": "/document/1019480", "title": "CCFinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones"}, {"link": "/document/5970189", "title": "The NiCad Clone Detector"}, {"link": "", "title": "SourcererCC: scaling code clone detection to big-code"}, {"link": "", "title": "SSQSA architecture"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Elementary Linear Algebra"}, {"link": "", "title": "The Technical Writer\u2019s Handbook"}, {"link": "", "title": "Abstract Syntax Tree (AST)"}, {"link": "", "title": "Antlr"}, {"link": "", "title": "Oreo: detection of clones in the twilight zone"}, {"link": "", "title": "The SQO-OSS quality model: measurement based open source software evaluation"}, {"link": "/document/6227134", "title": "Recommending source code for use in rapid software prototypes"}, {"link": "", "title": "How developers search for code: a case study"}, {"link": "/document/1011328", "title": "Software quality analysis by code clones in industrial legacy software"}, {"link": "/document/8530727", "title": "CroLSim: Cross Language Software Similarity Detector Using API Documentation"}, {"link": "/document/7476655", "title": "Mining Analogical Libraries in Q&A Discussions \u2013 Incorporating Relational and Categorical Knowledge into Word Embedding"}, {"link": "", "title": "Deep learning"}, {"link": "/document/624575", "title": "Evaluation experiments on the detection of programming patterns using software metrics"}, {"link": "/document/565012", "title": "Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics"}, {"link": "/document/777743", "title": "Extending software quality assessment techniques to java systems"}, {"link": "", "title": "ImageNet Classification with Deep Convolutional Neural Networks"}, {"link": "", "title": "Deep learning in neural networks: An overview"}, {"link": "", "title": "Deep learning for NLP (without magic)"}, {"link": "", "title": "Better representations: Invariant, disentangled and reusable"}, {"link": "/document/6797067", "title": "Neural networks for fingerprint recognition"}, {"link": "", "title": "Deep sparse rectifier neural networks"}, {"link": "", "title": "A study of machine learning approaches to cross-language code clone detection"}, {"link": "/document/8816761", "title": "Cross-language clone detection by learning over abstract syntax trees"}, {"link": "", "title": "The dropout learning algorithm"}, {"link": "", "title": "On information and sufficiency"}, {"link": "/document/7410480", "title": "Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification"}, {"link": "/document/4656397", "title": "An Empirical Study of Function Clones in Open Source Software"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "/document/792593", "title": "A Language Independent Approach for Detecting Duplicated Code"}, {"link": "/document/989796", "title": "Identification of High-level Concept Clones in Source Code"}, {"link": "", "title": "Tool Clone Detective (part of ConQAT)"}, {"link": "", "title": "Incremental Clone Detection"}, {"link": "/document/738528", "title": "Clone Detection Using Abstract Syntax Trees"}, {"link": "", "title": "Duplicate Code Detection Using Anti Unification"}, {"link": "", "title": "Tool SimScan"}, {"link": "/document/1045051", "title": "An Approach to Identify Duplicated Web Pages"}, {"link": "/document/957835", "title": "Identifying Similar Code with Program Dependence Graphs"}, {"link": "", "title": "GPLAG: Detection of Software Plagiarism by Program Dependence Graph Analysis"}, {"link": "", "title": "Cross-language Clone Detection"}, {"link": "/document/6385136", "title": "Detecting clones across microsoft. net programming languages"}, {"link": "", "title": "Detecting code clones in binary executables"}, {"link": "", "title": "Supervised Deep Features for Software Functional Clone Detection by Exploiting Lexical and Syntactical Information in Source Code"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "CLCDSA working version"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952189"}
{"ref": [{"link": "", "title": "Cyber-physical systems (CPS)"}, {"link": "", "title": "Cyber-physical systems: the next computing revolution"}, {"link": "", "title": "Water treatment plant hacked, chemical mix changed for tap supplies"}, {"link": "", "title": "Cyber-attack against Ukrainian critical infrastructure"}, {"link": "", "title": "Orpheus: Enforcing cyber-physical execution semantics to defend against data-oriented attacks"}, {"link": "/document/7925416", "title": "Log-based anomaly detection of CPS using a statistical method"}, {"link": "/document/8215783", "title": "Anomaly detection for a water treatment system using unsupervised machine learning"}, {"link": "/document/6160641", "title": "Cyber-physical attacks in power networks: Models, fundamental limitations and monitor design"}, {"link": "", "title": "CORGIDS: A correlation-based generic intrusion detection system"}, {"link": "", "title": "Truth will out: Departure-based process-level detection of stealthy attacks on control systems"}, {"link": "", "title": "Detecting zeroday controller hijacking attacks on the power-grid with enhanced deep learning"}, {"link": "", "title": "Detecting cyber attacks in industrial control systems using convolutional neural networks"}, {"link": "", "title": "TABOR: A graphical model-based approach for anomaly detection in industrial control systems"}, {"link": "", "title": "Learning based anomaly detection for industrial arm applications"}, {"link": "", "title": "High-performance unsupervised anomaly detection for cyber-physical system networks"}, {"link": "", "title": "NoisePrint: Attack detection using sensor and process noise fingerprint in cyber physical systems"}, {"link": "", "title": "Noise matters: Using sensor and process noise fingerprint to detect stealthy cyber attacks and authenticate sensors in CPS"}, {"link": "/document/8490185", "title": "Fingerprinting for cyber-physical system security: Device physics matters too"}, {"link": "", "title": "Scission: Signal characteristic-based sender identification and intrusion detection in automotive networks"}, {"link": "", "title": "Attacks against process control systems: risk assessment, detection, and response"}, {"link": "", "title": "Using process invariants to detect cyber attacks on a water treatment system"}, {"link": "", "title": "Distributed detection of single-stage multipoint cyber attacks in a water treatment plant"}, {"link": "", "title": "Towards learning and verifying invariants of cyber-physical systems by code mutation"}, {"link": "", "title": "Distributed attack detection in a water treatment plant: Method and case study"}, {"link": "/document/8418629", "title": "Learning from mutants: Using code mutation to learn and monitor invariants of a cyber-physical system"}, {"link": "", "title": "Detecting attacks against robotic vehicles: A control invariant approach"}, {"link": "", "title": "A survey of physics-based attack detection in cyber-physical systems"}, {"link": "", "title": "iTrust Labs: Datasets"}, {"link": "", "title": "A dataset to support research in the design of secure water treatment systems"}, {"link": "", "title": "Assessing the effectiveness of attack detection at a hackfest on industrial control systems"}, {"link": "", "title": "Genetic Algorithms in Search, Optimization and Machine Learning"}, {"link": "", "title": "Secure Water Treatment (SWaT)"}, {"link": "", "title": "WADI: a water distribution testbed for research in the design of secure cyber physical systems"}, {"link": "", "title": "Water-defense: a method to detect multi-point cyber attacks on water treatment systems"}, {"link": "", "title": "Fuzzing for Software Security Testing and Quality Assurance"}, {"link": "/document/7163057", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "American fuzzy lop"}, {"link": "", "title": "HAMIDS: hierarchical monitoring intrusion detection system for industrial control systems"}, {"link": "/document/7911887", "title": "Anomaly detection in cyber physical systems using recurrent neural networks"}, {"link": "", "title": "A systematic framework to generate invariants for anomaly detection in industrial control systems"}, {"link": "/document/7346865", "title": "Internetfacing plcs as a network backdoor"}, {"link": "", "title": "Ghost in the PLC: Designing an undetectable programmable logic controller rootkit via pin control attack"}, {"link": "", "title": "Hey, my malware knows physics! Attacking PLCs with physical model aware rootkit"}, {"link": "/document/6789445", "title": "Learning to forget: Continual prediction with LSTM"}, {"link": "", "title": "Support vector regression machines"}, {"link": "", "title": "Keras"}, {"link": "", "title": "API design for machine learning software: experiences from the scikit-learn project"}, {"link": "", "title": "pycomm"}, {"link": "", "title": "Supplementary material"}, {"link": "", "title": "False data injection attacks against state estimation in electric power grids"}, {"link": "/document/8416479", "title": "Algorithmic attack synthesis using hybrid dynamics of power grid critical infrastructures"}, {"link": "", "title": "Limiting the impact of stealthy attacks on industrial control systems"}, {"link": "/document/8004305", "title": "Testing the effectiveness of attack detection mechanisms in industrial control systems"}, {"link": "/document/6740891", "title": "A framework for evaluating intrusion detection architectures in advanced metering infrastructures"}, {"link": "", "title": "CyFuzz: A differential testing framework for cyber-physical systems development environments"}, {"link": "", "title": "Testing network-based intrusion detection signatures using mutant exploits"}, {"link": "", "title": "Model-based security analysis of a water treatment system"}, {"link": "", "title": "Finding dependencies between cyber-physical domains for security testing of industrial control systems"}, {"link": "", "title": "A trusted safety verifier for process controller code"}, {"link": "", "title": "CPAC: securing critical infrastructure with cyber-physical access control"}, {"link": "", "title": "SpaceEx: Scalable verification of hybrid systems"}, {"link": "", "title": "Towards \u2019verifying\u2019 a water treatment system"}, {"link": "", "title": "dReal: An SMT solver for nonlinear theories over the reals"}, {"link": "", "title": "Exercises in nonstandard static analysis of hybrid systems"}, {"link": "/document/8049737", "title": "A formal approach to cyber-physical attacks"}, {"link": "", "title": "Towards concolic testing for hybrid systems"}, {"link": "", "title": "How to model and prove hybrid systems with KeYmaera: a tutorial on safety"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952193"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Reusing constraint proofs in program analysis"}, {"link": "/document/7985682", "title": "Heuristically matching solution spaces of arithmetic formulas to efficiently reuse solutions"}, {"link": "", "title": "Automata-based model counting for string constraints"}, {"link": "", "title": "Parameterized model counting for string and numeric constraints"}, {"link": "/document/5207642", "title": "Automatic discovery and quantification of information leaks"}, {"link": "", "title": "Latte integrale v1. 7.2"}, {"link": "", "title": "String analysis for side channels with segmented oracles"}, {"link": "/document/8406607", "title": "Online synthesis of adaptive side-channel attacks based on noisy observations"}, {"link": "", "title": "Cvc4"}, {"link": "", "title": "Efficient symbolic representations for arithmetic constraints in verification"}, {"link": "", "title": "A polynomial time algorithm for counting integral points in polyhedra when the dimension is fixed"}, {"link": "", "title": "Iterative distribution-aware sampling for probabilistic symbolic execution"}, {"link": "", "title": "Model-counting approaches for nonlinear numerical constraints"}, {"link": "", "title": "Constraint normalization and parameterized caching for quantitative program analysis"}, {"link": "", "title": "The MONA project"}, {"link": "", "title": "Distribution-aware sampling and weighted model counting for SAT"}, {"link": "", "title": "Approximate probabilistic inference via word-level counting"}, {"link": "", "title": "The mathsat5 smt solver"}, {"link": "", "title": "Time trial: Racing towards practical remote timing attacks"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "The yices smt solver"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "", "title": "Multi-terminal binary decision diagrams: An efficient data structure for matrix representation"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "", "title": "Enhancing reuse of constraint solutions to improve symbolic execution"}, {"link": "", "title": "A model counter for constraints over unbounded strings"}, {"link": "/document/8049730", "title": "Synthesis of adaptive side-channel attacks"}, {"link": "", "title": "Quantifying information leaks using reliability analysis"}, {"link": "", "title": "Symbolic quantitative information flow"}, {"link": "", "title": "Incremental adaptive attack synthesis"}, {"link": "", "title": "Attack synthesis for strings using meta-heuristics"}, {"link": "/document/5504700", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "Model counting for recursively-defined strings"}, {"link": "", "title": "Green: reducing, reusing and recycling constraints in program analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952551"}
{"ref": [{"link": "", "title": "Exploring regular expression usage and context in Python"}, {"link": "", "title": "The Impact of Regular Expression Denial of Service (ReDoS) in Practice: an Empirical Study at the Ecosystem Scale"}, {"link": "/document/8115653", "title": "Exploring Regular Expression Comprehension"}, {"link": "", "title": "How well are regular expressions tested in the wild"}, {"link": "", "title": "Exploring Regular Expression Evolution"}, {"link": "", "title": "Static Detection of DoS Vulnerabilities in Programs that use Regular Expressions"}, {"link": "", "title": "Why arent regular expressions a lingua franca? an empirical study on the re-use and portability of regular expressions"}, {"link": "", "title": "Regular expression \u2014 Wikipedia, the free encyclopedia"}, {"link": "", "title": "An examination of software engineering work practices"}, {"link": "", "title": "Introduction to the Theory of Computation"}, {"link": "", "title": "A regular-expression matcher"}, {"link": "", "title": "Regular Expression Search Algorithm"}, {"link": "", "title": "A Formal Study of Practical Regular Expressions"}, {"link": "", "title": "On the intersection of regex languages with regular languages"}, {"link": "", "title": "On the Semantics of Regular Expression parsing in the Wild"}, {"link": "", "title": "On the Semantics of Atomic Subgroups in Practical Regular Expressions"}, {"link": "", "title": "Denial of service through regular expressions"}, {"link": "", "title": "Regular Expression Matching Can Be Simple And Fast (but is slow in Java, Perl, PHP, Python, Ruby,...)"}, {"link": "", "title": "Static Analysis for Regular Expression Exponential Runtime via Substructural Logics"}, {"link": "", "title": "Static Analysis of Regular Expressions"}, {"link": "", "title": "Denial of Service via Algorithmic Complexity Attacks"}, {"link": "", "title": "VAC - ReDoS: Regular Expression Denial Of Service"}, {"link": "", "title": "New Tool: SDL Regex Fuzzer"}, {"link": "", "title": "Details of the cloudflare outage on july 2, 2019"}, {"link": "", "title": "SWYN: A visual representation for regular expressions"}, {"link": "", "title": "RegViz: Visual Debugging of Regular Expressions"}, {"link": "", "title": "Regexper"}, {"link": "/document/5477051", "title": "Rex: Symbolic regular expression explorer"}, {"link": "/document/7515482", "title": "Generating Evil Test Strings for Regular Expressions"}, {"link": "/document/7899040", "title": "MutRex: A Mutation-Based Generator of Fault Detecting Strings for Regular Expressions"}, {"link": "", "title": "Analyzing matching time behavior of backtracking regular expression matchers by using ambiguity of NFA"}, {"link": "", "title": "ReScue: Crafting Regular Expression DoS Attacks"}, {"link": "", "title": "A Tale of Two Greps"}, {"link": "/document/932231", "title": "Towards faster string matching for intrusion detection or exceeding the speed of Snort"}, {"link": "", "title": "Turning Evil Regexes Harmless"}, {"link": "", "title": "A Sense of Time for JavaScript and Node.js: First-Class Timeouts as a Cure for Event Handler Poisoning"}, {"link": "", "title": "The Computer Scientist as Toolsmith II"}, {"link": "/document/4557710", "title": "Software artifacts recovery using abstract regular expressions"}, {"link": "/document/660187", "title": "Scripting: Higher level programming for the 21st century"}, {"link": "/document/876288", "title": "An empirical comparison of seven programming languages"}, {"link": "", "title": "Descriptional and computational complexity of finite automata - A survey"}, {"link": "", "title": "networkx.algorithms.simple paths.all simple paths"}, {"link": "", "title": "Derivatives of Regular Expressions"}, {"link": "", "title": "Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers"}, {"link": "", "title": "Algorithms for finding patterns in strings"}, {"link": "", "title": "Automata and transducer library for.net"}, {"link": "", "title": "Exploring network structure, dynamics, and function using networkx"}, {"link": "", "title": "The state of the octoverse"}, {"link": "", "title": "npm - the heart of the modern development community"}, {"link": "", "title": "Pypi - the python package index"}, {"link": "", "title": "Maven repository"}, {"link": "", "title": "What\u2019s in a GitHub Star? Understanding Repository Starring Practices in a Social Coding Platform"}, {"link": "", "title": "cloc: cloc counts blank lines, comment lines, and physical lines of source code in many programming languages"}, {"link": "", "title": "Babel"}, {"link": "", "title": "npm: A package manager for javascript"}, {"link": "", "title": "Javaparser"}, {"link": "", "title": "mvn: Apache maven"}, {"link": "", "title": "gradle: Adaptable, fast automation for all"}, {"link": "", "title": "astor: Python ast read/write"}, {"link": "", "title": "distutils: Building and installing python modules"}, {"link": "", "title": "tox: Command line driven ci frontend and development task automation tool"}, {"link": "", "title": "nox: Flexible test automation for python"}, {"link": "", "title": "pytest: The pytest framework"}, {"link": "", "title": "nosetests: Nose is nicer testing for python"}, {"link": "", "title": "Why Do Developers Use Trivial Packages? An Empirical Case Study on npm"}, {"link": "", "title": "Use of ranks in one-criterion variance analysis"}, {"link": "", "title": "A power primer"}, {"link": "", "title": "An alternative to cohen\u2019s standardized mean difference effect size: a robust parameter and confidence interval in the two independent groups case"}, {"link": "", "title": "Effect size measures in a two-independent-samples case with nonnormal and nonhomogeneous data"}, {"link": "", "title": "Regexr: Learn, build, & test regex"}, {"link": "", "title": "Online regex tester and debugger: Php, pcre, python, golang and javascript"}, {"link": "", "title": "Mastering regular expressions"}, {"link": "/document/8952499", "title": "Regexes are hard: Decision-making, difficulties, and risks in programming regular expressions"}, {"link": "", "title": "Towards a theory of software development expertise"}, {"link": "", "title": "Snort - Lightweight Intrusion Detection for Networks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952443"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Using finite-state models for log differencing"}, {"link": "", "title": "Statebased model slicing: A survey"}, {"link": "/document/6951474", "title": "Using declarative specification to improve the understanding, extensibility, and comparison of model-inference algorithms"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariantconstrained models"}, {"link": "", "title": "On the synthesis of finitestate machines from samples of their behavior"}, {"link": "", "title": ""}, {"link": "", "title": "Behavioral log analysis with statistical guarantees"}, {"link": "/document/7371999", "title": "Have we seen enough traces?"}, {"link": "", "title": "Discovering models of software processes from event-based data"}, {"link": "", "title": "Inferring extended probabilistic finite-state automaton models from software executions"}, {"link": "/document/8109094", "title": "Experience report: Log-based behavioral differencing"}, {"link": "", "title": "On NFA reductions"}, {"link": "", "title": "Reducing NFAs by invariant equivalences. Theoretical Computer Science"}, {"link": "", "title": "CCS expressions, finite state processes, and three problems of equivalence"}, {"link": "/document/7372001", "title": "Synergizing specification miners through model fissions and fusions"}, {"link": "/document/4023976", "title": "Quark: Empirical assessment of automaton-based specification miners"}, {"link": "", "title": "SMArTIC: towards building an accurate, robust and scalable specification miner"}, {"link": "", "title": "Automatic steering of behavioral model inference"}, {"link": "", "title": "Learning extended FSA from software: An empirical assessment"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "/document/4302690", "title": "Dynamic detection of COTS component incompatibility"}, {"link": "", "title": "Three partition refinement algorithms"}, {"link": "", "title": "Verifying an implementation of SSH"}, {"link": "", "title": "Transmission control protocol. RFC 793"}, {"link": "/document/5609576", "title": "A framework for the evaluation of specification miners based on finite state machines"}, {"link": "/document/919096", "title": "Encoding program executions"}, {"link": "", "title": "Handbook of Formal Languages"}, {"link": "", "title": "Automated comparison of state-based software models in terms of their language and structure"}, {"link": "/document/7927986", "title": "Behavioral execution comparison: Are tests representative of field behavior?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952335"}
{"ref": [{"link": "", "title": "Be conservative: Enhancing failure diagnosis with proactive logging"}, {"link": "", "title": "Pensieve: Nonintrusive failure reproduction for distributed systems using the event chaining approach"}, {"link": "", "title": "The mystery machine: End-to-end performance analysis of large-scale internet services"}, {"link": "", "title": "Structured comparative analysis of systems logs to diagnose performance problems"}, {"link": "", "title": "Deeplog: Anomaly detection and diagnosis from system logs through deep learning"}, {"link": "/document/7266837", "title": "Detection of early-stage enterprise infection by mining large-scale log data"}, {"link": "", "title": "The unified logging infrastructure for data analytics at twitter"}, {"link": "", "title": "Advances and challenges in log analysis"}, {"link": "/document/7412635", "title": "Operational-log analysis for big data systems: Challenges and solutions"}, {"link": "", "title": "In-situ mapreduce for log processing"}, {"link": "/document/7023349", "title": "Identifying recurrent and unknown performance issues"}, {"link": "/document/7675425", "title": "Learning to log: Helping developers make informed logging decisions"}, {"link": "", "title": "Which log level should developers choose for a new logging statement?"}, {"link": "", "title": "Where do developers log? an empirical study on logging practices in industry"}, {"link": "", "title": "Log20: Fully automated optimal placement of log printing statements under specified overhead threshold"}, {"link": "/document/7152468", "title": "Cowic: A column-wise independent compression for log stream analysis"}, {"link": "/document/8804456", "title": "Tools and benchmarks for automated log parsing"}, {"link": "", "title": "Identifying impactful service system problems via log analysis"}, {"link": "/document/7837916", "title": "Spell: Streaming parsing of system event logs"}, {"link": "", "title": "Trie \u2014 Wikipedia, the free encyclopedia"}, {"link": "/document/5360240", "title": "Execution anomaly detection in distributed systems through unstructured log analysis"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "/document/7152468", "title": "Cowic: A column-wise independent compression for log stream analysis"}, {"link": "", "title": "Adaptive log compression for massive log data"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "/document/4273008", "title": "What supercomputers say: A study of five system logs"}, {"link": "", "title": "An automated approach to estimating code coverage measures via execution logs"}, {"link": "", "title": "Log clustering based problem identification for online service systems"}, {"link": "/document/7985651", "title": "Characterizing and detecting anti-patterns in the logging code"}, {"link": "", "title": "Prediction of web user behavior by discovering temporal relational rules from web log data"}, {"link": "", "title": "Business process mining from e-commerce web logs"}, {"link": "/document/6264693", "title": "Evidence of log integrity in policy-based security monitoring"}, {"link": "/document/1251233", "title": "A data clustering algorithm for mining patterns from event logs"}, {"link": "", "title": "Clustering event logs using iterative partitioning"}, {"link": "/document/8029742", "title": "Drain: An online log parsing approach with fixed depth tree"}, {"link": "", "title": "A directed acyclic graph approach to online log parsing"}, {"link": "/document/1055714", "title": "A universal algorithm for sequential data compression"}, {"link": "/document/1055934", "title": "Compression of individual sequences via variable-rate coding"}, {"link": "/document/6603755", "title": "Text compression and encryption through smart devices for mobile communication"}, {"link": "", "title": "A lempel-ziv-style compression method for repetitive texts"}, {"link": "/document/488385", "title": "A guaranteed compression scheme for repetitive dna sequences"}, {"link": "", "title": "An optimal text compression algorithm based on frequent pattern mining"}, {"link": "", "title": "Comprehensive log compression with frequent patterns"}, {"link": "/document/1281533", "title": "High density compression of log files"}, {"link": "/document/7847098", "title": "MLC: an efficient multi-level log compression method for cloud backup systems"}, {"link": "/document/8067504", "title": "Towards automated log parsing for large-scale log data analysis"}, {"link": "/document/7579781", "title": "An evaluation study on log parsing and its use in log mining"}, {"link": "/document/7774521", "title": "Experience report: System log analysis for anomaly detection"}, {"link": "", "title": "Characterizing the natural language descriptions in software logging statements"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952406"}
{"ref": [{"link": "", "title": "Netflix adds 9 million paying subscribers, but stock falls"}, {"link": "", "title": "How one second could cost amazon 1.6 billion in sales"}, {"link": "", "title": "Geeking with greg: Marissa mayer at web 2.0"}, {"link": "/document/888628", "title": "Experience with performance testing of software systems: issues, an approach, and case study"}, {"link": "", "title": "Characterizing computer systems workloads"}, {"link": "", "title": "Workload characterization: A survey revisited"}, {"link": "/document/1587691", "title": "Design and testing of scalable web-based systems with performance constraints"}, {"link": "/document/4015510", "title": "A synthetic workload generation technique for stress testing session-based systems"}, {"link": "/document/6068339", "title": "Towards automatic performance and scalability testing of rich internet applications in the cloud"}, {"link": "", "title": "Stress testing of transactional database systems"}, {"link": "", "title": "Continuous validation of performance test workloads"}, {"link": "", "title": "The workload for the specweb96 benchmark"}, {"link": "", "title": "Automated detection of performance regressions using regression models on clustered performance counters"}, {"link": "", "title": "Capturing, indexing, clustering, and retrieving system history"}, {"link": "", "title": "WESSBAS: extraction of probabilistic workload specifications for load testing and performance prediction - a model-driven approach for session-based application systems"}, {"link": "/document/7581265", "title": "Characterizing the workload of a netflix streaming video server"}, {"link": "/document/6114193", "title": "Characterization of real workloads of web search engines"}, {"link": "", "title": "An industrial case study of customizing operational profiles using log compression"}, {"link": "/document/7451264", "title": "Finding and evaluating the performance impact of redundant data access for applications that are developed using object-relational mapping frameworks"}, {"link": "", "title": "On the accuracy and scalability of intensive I/O workload replay"}, {"link": "", "title": "Discovery of application workloads from network file traces"}, {"link": "", "title": "Automated workload characterization for I/O performance analysis in virtualized environments"}, {"link": "/document/6598677", "title": "IO workload characterization revisited: A data-mining approach"}, {"link": "", "title": "Resource central: Understanding and predicting workloads for improved resource management in large cloud platforms"}, {"link": "", "title": "The bones of the system: A case study of logging and telemetry at microsoft"}, {"link": "", "title": "Advances and challenges in log analysis"}, {"link": "/document/4658079", "title": "Automatic identification of load testing problems"}, {"link": "/document/5306331", "title": "Automated performance analysis of load tests"}, {"link": "/document/6424841", "title": "Logmaster: Mining event correlations in logs of large-scale cluster systems"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariantconstrained models"}, {"link": "", "title": "Inferring models of concurrent systems from logs of their behavior with csight"}, {"link": "/document/7190078", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "", "title": "Log clustering based problem identification for online service systems"}, {"link": "", "title": "Identifying impactful service system problems via log analysis"}, {"link": "", "title": "An automated approach for abstracting execution logs to execution events"}, {"link": "", "title": "The data model concept in statistical mapping"}, {"link": "/document/5362080", "title": "Efficiently extracting operational profiles from execution logs using suffix arrays"}, {"link": "", "title": "Application of string similarity ratio and edit distance in automatic metabolite reconciliation comparing reconstructions and models"}, {"link": "", "title": "A comprehensive survey of clustering algorithms"}, {"link": "", "title": "Automated detection of performance regressions using regression models on clustered performance counters"}, {"link": "", "title": "A dendrite method for cluster analysis"}, {"link": "", "title": "Continuous validation of load test suites"}, {"link": "", "title": "Finding groups in data: an introduction to cluster analysis"}, {"link": "", "title": "axboe/fio"}, {"link": "", "title": "Apache jmeter - apache jmete"}, {"link": "/document/7515456", "title": "A framework to evaluate the effectiveness of different load testing analysis techniques"}, {"link": "", "title": "Cacheoptimizer: Helping developers configure caching frameworks for hibernate-based database-centric web applications"}, {"link": "", "title": "Studying the effectiveness of application performance management (apm) tools for detecting performance regressions for web applications: an experience report"}, {"link": "", "title": "Large-scale cluster management at Google with Borg"}, {"link": "", "title": "pidstat(1): Report statistics for tasks - linux man page"}, {"link": "", "title": "Google ai blog: More google cluster data"}, {"link": "/document/1375706", "title": "Validating clusters using the hopkins statistic"}, {"link": "", "title": "The mann-whitney u: A test for assessing whether two independent samples come from the same distribution"}, {"link": "", "title": "Effect size (es)"}, {"link": "/document/7965448", "title": "Analytics-driven load testing: An industrial experience report on load testing of large-scale systems"}, {"link": "/document/6217434", "title": "Separating performance anomalies from workload-explained failures in streaming servers"}, {"link": "/document/4630116", "title": "Anomaly? application change? or workload change? towards automated detection of application performance anomaly and change"}, {"link": "/document/1000236", "title": "Mean shift: A robust approach toward feature space analysis"}, {"link": "/document/6613033", "title": "A mutation analysis based benchmarking framework for clone detectors"}, {"link": "/document/7332459", "title": "Evaluating clone detection tools with bigclonebench"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952553"}
{"ref": [{"link": "", "title": "Solution of a problem in concurrent programming control"}, {"link": "", "title": "The Art of Multiprocessor Programming"}, {"link": "", "title": "Empirical studies of competitve spinning for a shared-memory multiprocessor"}, {"link": "", "title": "Algorithms for scalable synchronization on shared-memory multiprocessors"}, {"link": "", "title": "Nonblocking algorithms and preemption-safe locking on multiprogrammed shared memory multiprocessors"}, {"link": "", "title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms"}, {"link": "/document/1203503", "title": "Obstruction-free synchronization: Double-ended queues as an example"}, {"link": "", "title": "A lazy concurrent list-based set algorithm"}, {"link": "", "title": "Safe memory reclamation for dynamic lockfree objects using atomic reads and writes"}, {"link": "", "title": "Transactional predication: High-performance concurrent sets and maps for stm"}, {"link": "", "title": "Concurrent programming without locks"}, {"link": "", "title": "Nonblocking binary search trees"}, {"link": "", "title": "A contention-friendly binary search tree"}, {"link": "", "title": "Concurrent updates with rcu: Search tree as an example"}, {"link": "", "title": "Software transactional memory"}, {"link": "", "title": "III, Software transactional memory for dynamic-sized data structures"}, {"link": "", "title": "Composable memory transactions"}, {"link": "", "title": "Adaptive software transactional memory"}, {"link": "", "title": "The POET language manual"}, {"link": "", "title": "Linearizability: A correctness condition for concurrent objects"}, {"link": "", "title": "Read-copy-update: Using execution history to solve concurrency problems"}, {"link": "", "title": "Read-logupdate: A lightweight synchronization mechanism for concurrent programming"}, {"link": "", "title": "A methodology for implementing highly concurrent data objects"}, {"link": "", "title": "Jr., Lock-free reference counting"}, {"link": "/document/4620111", "title": "Efficient and reliable lock-free memory reclamation based on reference counting"}, {"link": "/document/5479555", "title": "Understanding and effectively preventing the aba problem in descriptor-based lock-free designs"}, {"link": "", "title": "Engineering a Compiler"}, {"link": "", "title": "POET: A scripting language for applying parameterized source-to-source program transformations"}, {"link": "/document/1639722", "title": "Annotating user-defined abstractions for optimization"}, {"link": "/document/6603321", "title": "Lc/dc: Lockless containers and data concurrency: A novel nonblocking container library for multicore applications"}, {"link": "", "title": "Lowering the overhead of nonblocking software transactional memory"}, {"link": "", "title": "Intel Threading Building Blocks Reference Manual"}, {"link": "", "title": "Flat combining and the synchronization-parallelism tradeoff"}, {"link": "", "title": "A highly-efficient waitfree universal construction"}, {"link": "", "title": "Boost 1.56.0 Library Documentation"}, {"link": "", "title": "Concurrent Data Structures library"}, {"link": "", "title": "Systems Programming: Coping with Parallelism"}, {"link": "/document/7536527", "title": "An efficient lock-free logarithmic search data structure based on multi-dimensional list"}, {"link": "", "title": "Bridges User Guide"}, {"link": "", "title": "Mv-rlu: Scaling read-log-update with multiversioning"}, {"link": "", "title": "Wait-free synchronization"}, {"link": "", "title": "Locking without blocking: Making lock based concurrent data structure algorithms nonblocking"}, {"link": "", "title": "Wait-free made fast"}, {"link": "", "title": "Reagents: Expressing and composing fine-grained concurrency"}, {"link": "", "title": "Predicate rcu: An rcu for scalable concurrent updates"}, {"link": "", "title": "Speculative synchronization: Applying thread-level speculation to explicitly parallel applications"}, {"link": "/document/698569", "title": "Transactional memory: Architectural support for lock-free data structures"}, {"link": "/document/6762795", "title": "Haswell: The fourth-generation intel core processor"}, {"link": "", "title": "Evaluation of amd\u2019s advanced synchronization facility within a complete transactional memory stack"}, {"link": "", "title": "Software transactional memory"}, {"link": "", "title": "Language support for lightweight transactions"}, {"link": "", "title": "Transactional monitors for concurrent objects"}, {"link": "", "title": "Transparent support for wait-free transactions"}, {"link": "", "title": "Mcrt-stm: A high performance software transactional memory system for a multi-core runtime"}, {"link": "", "title": "Advanced contention management for dynamic software transactional memory"}, {"link": "/document/4145102", "title": "Understanding tradeoffs in software transactional memory"}, {"link": "/document/5070539", "title": "Refactoring sequential java code for concurrency via concurrent libraries"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Efficient synthesis for concurrency by semanticspreserving transformations"}, {"link": "", "title": "Pfix: Fixing concurrency bugs based on memory access patterns"}, {"link": "", "title": "Sketching concurrent data structures"}, {"link": "", "title": "Abstraction-guided synthesis of synchronization"}, {"link": "", "title": "Deriving linearizable fine-grained concurrent objects"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952270"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "StackOverflow"}, {"link": "/document/5070525", "title": "Semantics-based code search"}, {"link": "", "title": "Query expansion via wordnet for effective code search"}, {"link": "/document/7372014", "title": "Codehow: Effective code search based on api understanding and extended boolean model (e)"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Improving automatic source code summarization via deep reinforcement learning"}, {"link": "", "title": "Compilers, principles, techniques"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Improved semantic representations from tree-structured long short-term memory networks"}, {"link": "", "title": "Gated graph sequence neural networks"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "Learning program embeddings to propagate feedback on student code"}, {"link": "", "title": "Neuro-symbolic program synthesis"}, {"link": "", "title": "Structured generative models of natural source code"}, {"link": "", "title": "A deep language model for software code"}, {"link": "", "title": "Latent predictor networks for code generation"}, {"link": "", "title": "Bimodal modelling of source code and natural language"}, {"link": "", "title": "Abstractive text-image summarization using multi-modal attentional hierarchical rnn"}, {"link": "", "title": "Multimodal generative adversarial network for short product title generation in mobile e-commerce"}, {"link": "", "title": "Multimodal dual attention memory for video story question answering"}, {"link": "/document/8682583", "title": "End-to-end audio visual scene-aware dialog using multimodal attention-based video features"}, {"link": "", "title": "Cross-modal retrieval in the cooking context: Learning semantic textimage embeddings"}, {"link": "/document/7410658", "title": "Multimodal convolutional neural networks for matching image and sentence"}, {"link": "", "title": "Deep visual-semantic hashing for cross-modal retrieval"}, {"link": "/document/8099831", "title": "Deep cross-modal hashing"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "/document/7780872", "title": "Image captioning with semantic attention"}, {"link": "", "title": "The application of two-level attention models in deep convolutional neural network for fine-grained image classification"}, {"link": "", "title": "Hierarchical question-image co-attention for visual question answering"}, {"link": "", "title": "Recurrent models of visual attention"}, {"link": "", "title": "Deep networks with internal selective attention through feedback connections"}, {"link": "", "title": "Draw: A recurrent neural network for image generation"}, {"link": "", "title": "Show, attend and tell: Neural image caption generation with visual attention"}, {"link": "/document/7780379", "title": "Stacked attention networks for image question answering"}, {"link": "", "title": "Dynamic memory networks for visual and textual question answering"}, {"link": "/document/7780868", "title": "Where to look: Focus regions for visual question answering"}, {"link": "", "title": "A hierarchical neural autoencoder for paragraphs and documents"}, {"link": "", "title": "A neural attention model for abstractive sentence summarization"}, {"link": "", "title": "Ask me anything: Dynamic memory networks for natural language processing"}, {"link": "/document/8099715", "title": "Dual attention networks for multimodal reasoning and matching"}, {"link": "", "title": "A deep reinforced model for abstractive summarization"}, {"link": "", "title": "Self-attention generative adversarial networks"}, {"link": "/document/8269806", "title": "Multimodal machine learning: A survey and taxonomy"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "", "title": "Attention is all you need"}, {"link": "", "title": "Long short-term memory-networks for machine reading"}, {"link": "", "title": "A decomposable attention model for natural language inference"}, {"link": "", "title": "Empirical evaluation of gated recurrent neural networks on sequence modeling"}, {"link": "", "title": "Unifying visual-semantic embeddings with multimodal neural language models"}, {"link": "", "title": "Clean code: a handbook of agile software craftsmanship"}, {"link": "", "title": "Svf: interprocedural static value-flow analysis in llvm"}, {"link": "/document/6720116", "title": "Detecting memory leaks statically with fullsparse value-flow analysis"}, {"link": "", "title": "On-demand strong update analysis via value-flow refinement"}, {"link": "", "title": "Reevaluating automatic metrics for image captioning"}, {"link": "", "title": "Adam: A method for stochastic optimization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952337"}
{"ref": [{"link": "/document/7927986", "title": "Behavioral execution comparison: Are tests representative of field behavior?"}, {"link": "/document/7965335", "title": "Predicting defects using test execution logs in an industrial setting"}, {"link": "", "title": "On\u00a8 rapid releases and software testing: a case study and a semi-systematic literature review"}, {"link": "/document/6410318", "title": "Toward fine-grained, unsupervised, scalable performance diagnosis for production cloud computing systems"}, {"link": "", "title": "DevOps: A Software Architect\u2019s Perspective"}, {"link": "/document/6636712", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "AR-Miner: mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": "User reviews matter! tracking crowdsourced reviews to support evolution of successful apps"}, {"link": "", "title": "Release planning of mobile apps based on user reviews"}, {"link": "", "title": "Online app review analysis for identifying emerging issues"}, {"link": "", "title": "It operations and ai"}, {"link": "", "title": "Efficient discovery of abnormal event sequences in enterprise security systems"}, {"link": "", "title": "Correlating events with time series for incident diagnosis"}, {"link": "", "title": "PreFix: Switch failure prediction in datacenter networks"}, {"link": "", "title": "DeepLog: Anomaly detection and diagnosis from system logs through deep learning"}, {"link": "", "title": "Log clustering based problem identification for online service systems"}, {"link": "", "title": "CherryPick: Adaptively unearthing the best cloud configurations for big data analytics"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "", "title": "Phrase-based extraction of user opinions in mobile app reviews"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "/document/6208875", "title": "Sequential anomaly detection in the presence of noise and limited feedback"}, {"link": "", "title": "Time series anomaly detection for trustworthy services in cloud computing systems"}, {"link": "", "title": "Feedback-guided anomaly discovery via online optimization"}, {"link": "/document/8539065", "title": "Robust and rapid adaption for concept drift in software system anomaly detection"}, {"link": "/document/8624168", "title": "Robust and rapid clustering of kpis for large-scale anomaly detection"}, {"link": "/document/8288614", "title": "Hotspot: Anomaly localization for additive kpis with multi-dimensional attributes"}, {"link": "", "title": "Generic and scalable framework for automated time-series anomaly detection"}, {"link": "", "title": "Unsupervised anomaly detection via variational auto-encoder for seasonal kpis in web applications"}, {"link": "", "title": "Opprentice: Towards practical and automatic anomaly detection through machine learning"}, {"link": "", "title": "YADING: Fast clustering of large-scale time series data"}, {"link": "", "title": "iDice: Problem identification for emerging issues"}, {"link": "/document/5463340", "title": "Identifying security bug reports via text mining: An industrial case study"}, {"link": "/document/4658083", "title": "Automated severity assessment of software defect reports"}, {"link": "", "title": "Combining text mining and data mining for bug report classification"}, {"link": "", "title": "Is it a bug or an enhancement?: A text-based approach to classify change requests"}, {"link": "/document/5463284", "title": "Predicting the severity of a reported bug"}, {"link": "", "title": "Dependency-based gated recursive neural network for chinese word segmentation"}, {"link": "/document/1216141", "title": "Arima models to predict next-day electricity prices"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Xgboost: A scalable tree boosting system"}, {"link": "", "title": "Efficient Estimation of Word Representations in Vector Space"}, {"link": "", "title": "Data Mining and Knowledge Discovery Handbook"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952229"}
{"ref": [{"link": "", "title": "Artificial neural network development by means of a novel combination of grammatical evolution and genetic algorithm"}, {"link": "", "title": "Designing Neural Network Architectures using Reinforcement Learning"}, {"link": "", "title": "Building powerful image classification models using very little data"}, {"link": "/document/1510768", "title": "An empirical comparison of combinations of evolutionary algorithms and neural networks for classification problems"}, {"link": "/document/8579132", "title": "Prune Deep Neural Networks With the Modified L1/2 Penalty"}, {"link": "", "title": "Convolutional Neural Networks for CIFAR-10"}, {"link": "/document/6790885", "title": "A computationally efficient evolutionary algorithm for real-parameter optimization"}, {"link": "/document/5206848", "title": "ImageNet: A Large-Scale Hierarchical Image Database"}, {"link": "", "title": "Adaptive subgradient methods for online learning, and stochastic optimization"}, {"link": "/document/8753425", "title": "Dynamic recurrent neural networks: Theory and applications"}, {"link": "", "title": "Understanding the difficulty of training deep feedforward neural networks"}, {"link": "", "title": "Generative Adversarial Nets"}, {"link": "", "title": "Explaining and Harnessing Adversarial Examples"}, {"link": "", "title": "Towards deep neural network architectures robust to adversarial examples"}, {"link": "", "title": "DSD: regularizing deep neural networks with dense-sparse-dense training flow"}, {"link": "/document/7780459", "title": "Deep residual learning for image recognition"}, {"link": "", "title": "Neuroevolution strategies for episodic reinforcement learning"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "A proposed iteration optimization approach integrating backpropagation neural network with genetic algorithm"}, {"link": "/document/1299414", "title": "Neuroevolution for reinforcement learning using evolution strategies"}, {"link": "", "title": "Image Preprocessing"}, {"link": "", "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift"}, {"link": "", "title": "Keras Documentation"}, {"link": "", "title": "Keras Documentation: Usage of activations"}, {"link": "", "title": "Adam: A Method for Sthochastic Optimization"}, {"link": "", "title": "Learning multiple layers of features from tiny images"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "", "title": "Deep learning"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "/document/7961141", "title": "Input Layer Regularization of Multilayer Feedforward Neural Networks"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "/document/8539073", "title": "DeepMutation: Mutation testing of deep learning systems"}, {"link": "", "title": "MODE: automated neural network model debugging via state differential analysis and input selection"}, {"link": "", "title": "Training Feedforward Neural Networks Using Genetic Algorithms"}, {"link": "/document/7780651", "title": "DeepFool: a simple and accurate method to fool deep neural networks"}, {"link": "/document/8014906", "title": "Simple black-box adversarial attacks on deep neural networks"}, {"link": "", "title": "Tensorfuzz: Debugging neural networks with coverage-guided fuzzing"}, {"link": "", "title": "Practical Black-Box Attacks against Machine Learning"}, {"link": "", "title": "DeepXplore: Automated Whitebox Testing of Deep Learning Systems"}, {"link": "", "title": "Large-scale evolution of image classifiers"}, {"link": "", "title": "Learning internal representations by error propagation, California Univ San Diego La Jolla Inst for Cognitive Science"}, {"link": "", "title": "Group sparse regularization for deep neural networks"}, {"link": "", "title": "Very Deep convolutional networks for large-scale image recognition"}, {"link": "/document/6599788", "title": "Artificial neural networks generation using grammatical evolution"}, {"link": "", "title": "CS231n Convolutional Neural Networks for Visual Recognition"}, {"link": "/document/8601309", "title": "One pixel attack for fooling deep neural networks"}, {"link": "", "title": "Testing deep neural networks"}, {"link": "", "title": "Intriguing properties of neural networks"}, {"link": "", "title": "TensorFlow: An end-to-end open source machine learning platform"}, {"link": "", "title": "TensorFlow-Slim image classification model library"}, {"link": "", "title": "DeepTest: Automated testing of deepneural-network-driven autonomous cars"}, {"link": "", "title": "Neural network training by means of cooperative evolutionary search, Nuclear Instruments and Methods"}, {"link": "", "title": "Trains a Resnet on the CIFAR10 dataset"}, {"link": "", "title": "Regularization of Neural Networks using DropConnect"}, {"link": "", "title": "Generating adversarial examples with adversarial networks"}, {"link": "", "title": "An evolutionary constructive and pruning algorithm for artificial neural networks and its prediction applications"}, {"link": "", "title": "Recurrent Neural Network Regularization"}, {"link": "", "title": "ADADELTA: An Adaptive Learning Rate Method"}, {"link": "", "title": "Places: A 10 million image database for scene recognition"}, {"link": "", "title": "Neural Architecture Search with Reinforcement Learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952197"}
{"ref": [{"link": "", "title": "Facebook: Security update"}, {"link": "", "title": "Oauth 1.0"}, {"link": "", "title": "Oauth demystified for mobile application developers"}, {"link": "", "title": "Vetting single sign-on SDK implementations via symbolic reasoning"}, {"link": "", "title": "Security issues in oauth 2.0 SSO implementations"}, {"link": "/document/6924292", "title": "Towards enhancing the security of oauth implementations in smart phones"}, {"link": "", "title": "Oauth 2.0"}, {"link": "", "title": "The oauth 1.0 protocol"}, {"link": "", "title": "The oauth 2.0 authorization framework"}, {"link": "", "title": "Oauth with the twitter apis"}, {"link": "", "title": "The oauth 2.0 authorization frame-work: Bearer token usage"}, {"link": "", "title": "Facebook: Securing graph api requests"}, {"link": "", "title": "Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Gofundme android application"}, {"link": "", "title": "Waplog android application"}, {"link": "", "title": "Topface android application"}, {"link": "", "title": "Authenticate your users"}, {"link": "", "title": "M-trends 2017 by fireeye"}, {"link": "", "title": "Chatous android application"}, {"link": "", "title": "Wish android application"}, {"link": "", "title": "Authenticate with a backend server"}, {"link": "", "title": "Cbs sports android application"}, {"link": "", "title": "The devil is in the (implementation) details: an empirical analysis of oauth SSO systems"}, {"link": "", "title": "Model-based security testing: An empirical study on oauth 2.0 implementations"}, {"link": "", "title": "More guidelines than rules: CSRF vulnerabilities from noncompliant oauth 2.0 implementations"}, {"link": "", "title": "Wpse: Fortifying web protocols via browser-side security monitoring"}, {"link": "", "title": "O single sign-off, where art thou? an empirical analysis of single sign-on account hijacking and session management on the web"}, {"link": "", "title": "A privacy-enhanced oauth 2.0 based protocol for smart city mobile applications"}, {"link": "", "title": "Authscope: Towards automatic discovery of vulnerable authorizations in online services"}, {"link": "", "title": "Vulnerability assessment of oauth implementations in android applications"}, {"link": "", "title": "A comprehensive formal security analysis of oauth 2.0"}, {"link": "/document/5966531", "title": "Formal verification of oauth 2.0 using alloy framework"}, {"link": "", "title": "Formal analysis of a single sign-on protocol implementation for android"}, {"link": "", "title": "An empirical study of cryptographic misuse in android applications"}, {"link": "", "title": "Vetting SSL usage in applications with SSLINT"}, {"link": "", "title": "Flowdroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "EXPLORER: query- and demand-driven exploration of interprocedural control flow properties"}, {"link": "", "title": "Finding application errors and security flaws using PQL: a program query language"}, {"link": "", "title": "Demand-driven points-to analysis for java"}, {"link": "", "title": "Apposcopy: semantics-based detection of android malware through static analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952200"}
{"ref": [{"link": "", "title": "License usage and changes: A large-scale study on GitHub"}, {"link": "/document/5070520", "title": "License integration patterns: Addressing license mismatches in component-based development"}, {"link": "", "title": "Automated software license analysis"}, {"link": "", "title": "A sentence-matching method for automatic license identification of source code files"}, {"link": "/document/5463282", "title": "Identifying licensing of jar archives using a code-search approach"}, {"link": "/document/7985655", "title": "Machine learning-based detection of open source license exceptions"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Understanding interobserver agreement: The Kappa statistic"}, {"link": "/document/5521758", "title": "Understanding and auditing the licensing of open source software distributions"}, {"link": "", "title": "Qdox"}, {"link": "", "title": "Licensefinder"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Practical very large scale CRFs"}, {"link": "/document/1054010", "title": "Error bounds for convolutional codes and an asymptotically optimum decoding algorithm"}, {"link": "", "title": "LIBSVM: A library for support vector machines"}, {"link": "", "title": "Significant and highly significant"}, {"link": "", "title": "Dominance statistics: Ordinal analyses to answer ordinal questions"}, {"link": "", "title": "Appropriate statistics for ordinal level data: Should we really be using t-test and Cohens d for evaluating group differences on the NSSE and other surveys"}, {"link": "", "title": "An exploratory study of the evolution of software licensing"}, {"link": "", "title": "A dual model of open source license growth"}, {"link": "", "title": "Impacts of license choice and organizational sponsorship on user interest and development activity in open source software projects"}, {"link": "", "title": "Software licenses in context: The challenge of heterogeneously-licensed systems"}, {"link": "/document/7476659", "title": "On the detection of licenses violations in the Android ecosystem"}, {"link": "/document/5069483", "title": "Code siblings: Technical and legal implications of copying code between applications"}, {"link": "", "title": "Evolutional analysis of licenses in FOSS"}, {"link": "/document/7180091", "title": "A method to detect license inconsistencies in large-scale open source projects"}, {"link": "/document/7332449", "title": "When and why developers adopt and change software licenses"}, {"link": "", "title": "Determinants of the choice of open source software license"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952518"}
{"ref": [{"link": "", "title": "A feasibility study of using automated program repair for introductory programming assignments"}, {"link": "", "title": "Example-based learning in computer-aided stem education"}, {"link": "", "title": "Automated clustering and program repair for introductory programming assignments"}, {"link": "", "title": "Search, align, and repair: data-driven feedback generation for introductory programming exercises"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Neuro-symbolic program repair for correcting introductory programming assignments"}, {"link": "/document/7985680", "title": "Learning syntactic program transformations from examples"}, {"link": "", "title": "Skp: A neural program corrector for moocs"}, {"link": "", "title": "Test-equivalence analysis for automatic patch generation"}, {"link": "", "title": "Automatic diagnosis and correction of logical errors for functional programming assignments"}, {"link": "", "title": "MITx MOOC"}, {"link": "", "title": "Density estimation for statistics and data analysis"}, {"link": "", "title": "Automated program repair"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Prophet: Automatic patch generation via learning from successful patches"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "", "title": "Semantic program repair using a reference implementation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952522"}
{"ref": [{"link": "", "title": ""}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "", "title": "Automatic software repair: A survey"}, {"link": "", "title": "Automatic runtime error repair and containment via recovery shepherding"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "", "title": "History driven program repair"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "", "title": "Towards practical program repair with on-demand candidate generation"}, {"link": "/document/8115675", "title": "Elixir: effective object oriented program repair"}, {"link": "/document/8115676", "title": "Leveraging syntax-related code for automated program repair"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/5477098", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "/document/8823633", "title": "Leveraging program invariants to promote population diversity in search-based automatic program repair"}, {"link": "", "title": "Advanced techniques for search-based program repair"}, {"link": "", "title": "Overfitting in automated program repair: Challenges and solutions"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "", "title": "The Java Virtual Machine Specification, Java SE 8 Edition"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}, {"link": "", "title": "Eclipse Class Decompiler"}, {"link": "", "title": "Antipatterns in search-based program repair"}, {"link": "", "title": "Better test cases for better automated program repair"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": ""}, {"link": "/document/8802677", "title": "Defexts: A curated dataset of reproducible real-world bugs for modern jvm languages"}, {"link": "", "title": "List of JVM Languages"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "", "title": "Identifying patch correctness in test-based program repair"}, {"link": "", "title": "PraPR"}, {"link": "", "title": "Astor: A program repair library for java (demo)"}, {"link": "", "title": "Cdrep: Automatic repair of cryptographic misuses in android applications"}, {"link": "", "title": "Automated program repair through the evolution of assembly code"}, {"link": "/document/8648274", "title": "A semi-autonomic bytecode repair framework"}, {"link": "", "title": "Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization"}, {"link": "", "title": "Fluccs: using code and change metrics to improve fault localization"}, {"link": "", "title": "Boosting spectrum-based fault localization using pagerank"}, {"link": "", "title": "Transforming programs and tests in tandem for fault localization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952486"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Apache Ant User Manual"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "CSharp Programming/Syntax"}, {"link": "", "title": "Enabling static analysis for partial java programs"}, {"link": "", "title": "A deep language model for software code"}, {"link": "", "title": "Eclipse"}, {"link": "/document/1342740", "title": "Automatic method completion"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "/document/6080790", "title": "An evaluation of the strategies of sorting, filtering, and grouping API methods for code completion"}, {"link": "", "title": "Informer"}, {"link": "", "title": "Intellisense"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Manning and Hinrich Schutze"}, {"link": "", "title": "N-gram"}, {"link": "/document/8330220", "title": "A deep neural network language model with contexts for source code"}, {"link": "/document/7675464", "title": "Graph-based statistical language model for code"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "/document/6227133", "title": "Active code completion"}, {"link": "", "title": "Ratatype. Average typing speed"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/4639335", "title": "How program history can improve code completion"}, {"link": "", "title": "On the localness of software"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "/document/8115678", "title": "A language model for statements of software code"}, {"link": "/document/6227136", "title": "Automatic parameter recommendation for practical API usage"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952235"}
{"ref": [{"link": "", "title": "Using probabilistic generative models for ranking risks of android apps"}, {"link": "", "title": "Droidapiminer: Mining api-level features for robust malware detection in android"}, {"link": "/document/6891250", "title": "Exploring permission-induced risk in android applications for malicious application detection"}, {"link": "", "title": "Drebin: Effective and explainable detection of android malware in your pocket"}, {"link": "", "title": "Semantics-aware android malware classification using weighted contextual api dependency graphs"}, {"link": "", "title": "Apposcopy: Semanticsbased detection of android malware through static analysis"}, {"link": "", "title": "Eight years of rider measurement in the android malware ecosystem: evolution and lessons learned"}, {"link": "", "title": "Mamadroid: Detecting android malware by building markov chains of behavioral models"}, {"link": "", "title": "Finding unknown malice in 10 seconds: Mass vetting for new threats at the google-play scale"}, {"link": "", "title": "Centrality in social networks conceptual clarification"}, {"link": "", "title": "A new status index derived from sociometric analysis"}, {"link": "", "title": "Lethality and centrality in protein networks"}, {"link": "", "title": "Co-authorship networks in the digital library research community"}, {"link": "", "title": "The worldwide air transportation network: Anomalous centrality, community structure, and cities\u2019 global roles"}, {"link": "", "title": "It\u2019s not what you know-it\u2019s who you know that counts. analysing serious crime groups as social networks"}, {"link": "", "title": "Virustotal - free online virus, malware and url scanner"}, {"link": "", "title": "Centrality in affiliation networks"}, {"link": "", "title": "Harmony in the small-world"}, {"link": "", "title": "A set of measures of centrality based on betweenness"}, {"link": "", "title": "Percolation centrality: Quantifying graph-theoretic impact of nodes during percolation in networks"}, {"link": "/document/6589150", "title": "A study of xss worm propagation and detection mechanisms in online social networks"}, {"link": "", "title": "Eigencentrality based on dissimilarity measures reveals central nodes in complex networks"}, {"link": "", "title": "Androzoo: Collecting millions of android apps for the research community"}, {"link": "", "title": "Pscout: Analyzing the android permission specification"}, {"link": "", "title": "Statistical methods for psychology"}, {"link": "", "title": "Androguard"}, {"link": "", "title": "scikit-learn"}, {"link": "", "title": "Android hiv: A study of repackaging malware for evading machine-learning detection"}, {"link": "", "title": "Sandroid - an automatic android application analysis system"}, {"link": "", "title": "Android permissions: A perspective combining risks and benefits"}, {"link": "", "title": "Hey, you, get off of my market: Detecting malicious apps in official and alternative android markets"}, {"link": "/document/8255798", "title": "Significant permission identification for machine-learning-based android malware detection"}, {"link": "/document/7194583", "title": "Appcontext: Differentiating malicious and benign mobile app behaviors using context"}, {"link": "", "title": "Improving accuracy of android malware detection with lightweight contextual awareness"}, {"link": "", "title": "Enmobile: Entity-based characterization and analysis of mobile malware"}, {"link": "/document/7675426", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "", "title": "Taintdroid: An informationflow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Using loops for malware classification resilient to feature-unaware perturbations"}, {"link": "/document/7422770", "title": "Madam: Effective and efficient behavior-based android malware detection and prevention"}, {"link": "", "title": "A multi-view context-aware approach to android malware detection and malicious code localization"}, {"link": "", "title": "Automated synthesis of semantic malware signatures using maximum satisfiability"}, {"link": "", "title": "Lightweight, obfuscationresilient detection and family identification of android malware"}, {"link": "", "title": "Adversarial examples for malware detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952382"}
{"ref": [{"link": "", "title": "Plaid: a permission-based programming language"}, {"link": "", "title": "The Plaid language: Typed core specification, Technical report"}, {"link": "", "title": "minium: A Permission-Based Concurrent-by-Default Programming Language Approach"}, {"link": "", "title": "Modular type state checking of aliased objects"}, {"link": "", "title": "Automatic inference of symbolic permissions for sequential java programs"}, {"link": "", "title": "Plural: Checking protocol compliance under aliasing"}, {"link": "", "title": "Automated Verification of Specifications with Typestates and Access Permissions"}, {"link": "", "title": "Model Checking with Edge-valued Decision Diagrams"}, {"link": "", "title": "Logic in Computer Science: Modelling and Reasoning About Systems"}, {"link": "", "title": "Acase study on the light weight verification of amulti-threaded task server"}, {"link": "", "title": "Automatic Inference of Access Permissions"}, {"link": "", "title": "Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "An overview of the Scala programming language"}, {"link": "", "title": "Permission inference for array programs"}, {"link": "", "title": "Viper: A verification infrastructure for permission-based reasoning"}, {"link": "", "title": "Verification of Concurrent Programs with Chalice"}, {"link": "", "title": "Abstract read permissions: Fractional permissions without the fractions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952453"}
{"ref": [{"link": "", "title": "Diagrams based on structural object perception"}, {"link": "/document/7203009", "title": "Virtual reality in software engineering: Affordances, applications, and challenges"}, {"link": "", "title": "Give your ideas some legs: The positive effect of walking on creative thinking"}, {"link": "", "title": "An immersive future for software engineering: Avenues and approaches"}, {"link": "/document/8807488", "title": "Extended reality in global software delivery: Towards a common fabric of understanding and insights"}, {"link": "/document/4564449", "title": "An overview of 3d software visualization"}, {"link": "/document/1201299", "title": "Source viewer 3d (sv3d) - a framework for software visualization"}, {"link": "/document/4290706", "title": "Visualizing software systems as cities"}, {"link": "/document/6295797", "title": "Visualizing the evolution of software systems using the forest metaphor"}, {"link": "/document/1217996", "title": "A 3d metaphor for software production visualization"}, {"link": "/document/663876", "title": "Constrained 3d navigation with 2d controllers"}, {"link": "/document/8094470", "title": "Cityvr: Gameful software visualization"}, {"link": "/document/8004366", "title": "Vr city: Software analysis in virtual reality environment"}, {"link": "/document/8446057", "title": "Immersive exploration of osgi-based software systems in virtual reality"}, {"link": "", "title": "A systematic literature review of software visualization evaluation"}, {"link": "/document/7961477", "title": "What do developers want?: An advisor approach for developer priorities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952170"}
{"ref": [{"link": "", "title": "Agile in distress: Architecture to the rescue"}, {"link": "", "title": "Domain-Driven Design: Tacking Complexity In the Heart of Software"}, {"link": "", "title": "Supporting large-scale agile development with domain-driven design"}, {"link": "", "title": "Agile enterprise software development using domain-driven design and test first"}, {"link": "", "title": "Model driven engineering"}, {"link": "/document/1597083", "title": "Guest editor's introduction: Model-driven engineering"}, {"link": "", "title": "Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering"}, {"link": "", "title": "Modeldriven engineering practices in industry"}, {"link": "", "title": "Empirical assessment of MDE in industry"}, {"link": "", "title": "Industrial adoption of model-driven engineering: Are the tools really the problem?"}, {"link": "/document/6507223", "title": "The state of practice in model-driven engineering"}, {"link": "", "title": "Modeldriven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure"}, {"link": "", "title": "Experiences of models@runtime with EMF and CDO"}, {"link": "", "title": "The problems with eclipse modeling tools: a topic analysis of eclipse forums"}, {"link": "", "title": "Industrial adoption of model-driven engineering: Are the tools really the problem?"}, {"link": "", "title": "EMF: Eclipse Modeling Framework 2.0"}, {"link": "", "title": "Assessing the Use of Eclipse MDE Technologies in Open-Source Software Projects"}, {"link": "/document/1309646", "title": "Model-driven reverse engineering"}, {"link": "/document/7372047", "title": "Experiences from designing and validating a software modernization transformation (E)"}, {"link": "/document/8101268", "title": "Ecoreification: Making Arbitrary Java Code Accessible to Metamodel-Based Tools"}, {"link": "", "title": "Bridging proprietary modelling and opensource model management tools: The case of PTC integrity modeller and epsilon"}, {"link": "", "title": "Applying MDE tools at runtime: Experiments upon runtime models"}, {"link": "", "title": "Decision Support Benchmark (version 2)"}, {"link": "", "title": "Combinators for Bi-directional Tree Transformations: a Linguistic Approach to the View Update Problem"}, {"link": "", "title": "Generating synchronization engines between running systems and their model-based views"}, {"link": "", "title": "Sm@rt: representing run-time system data as mofcompliant models"}, {"link": "", "title": "Supporting runtime software architecture: A bidirectional-transformation-based approach"}, {"link": "", "title": "Instant and incremental QVT transformation for runtime models"}, {"link": "", "title": "A feature-based survey of model view approaches"}, {"link": "/document/43044", "title": "Reverse engineering and design recovery: A taxonomy"}, {"link": "/document/526527", "title": "Domain-retargetable reverse engineering. III. layered modeling"}, {"link": "/document/806944", "title": "Reusing domains for the construction of reverse engineering tools"}, {"link": "", "title": "A reverse-engineering approach to subsystem structure identification"}, {"link": "", "title": "Extracting architectural features from source code"}, {"link": "", "title": "Pattern-based reverse-engineering of design components"}, {"link": "/document/914973", "title": "Reverse engineering a large component-based software product"}, {"link": "/document/4493304", "title": "Reverse engineering software-models of component-based systems"}, {"link": "/document/336762", "title": "Domain analysis and reverse engineering"}, {"link": "/document/526542", "title": "A software re-engineering method using domain models"}, {"link": "", "title": "Modisco: A model driven reverse engineering framework"}, {"link": "", "title": "Models from code, or code as models?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952237"}
{"ref": [{"link": "", "title": "How to design a good API and why it matters"}, {"link": "", "title": "A systematic approach to API usability: Taxonomy-derived criteria and a case study"}, {"link": "", "title": "APl Design for C++"}, {"link": "", "title": "The implications of method placement on API learnability"}, {"link": "", "title": "API peer reviews: A method for evaluating usability of application programming interfaces"}, {"link": "", "title": "API design reviews at scale"}, {"link": "/document/8506523", "title": "API designers in the field: Design practices and challenges for creating usable APIs"}, {"link": "", "title": "Improving API usability"}, {"link": "", "title": "How to design a good API and why it matters"}, {"link": "/document/6311409", "title": "Automated API property inference techniques"}, {"link": "", "title": "Are code examples on an online Q&A forum reliable?\u201d"}, {"link": "", "title": "Visualizing API usage examples at scale"}, {"link": "", "title": "Parameter-free probabilistic API mining across GitHub"}, {"link": "", "title": "Collect GeometrySystem  drake-visualizer boilerplate by SeanCurtis-TRI pull request #8526 RobotLocomotion/drake"}, {"link": "", "title": "Reduce boilerplate for subclasses issue #172 parse-community/Parse-SDK-Android"}, {"link": "", "title": "Can java help me avoid boilerplate code in equals()?"}, {"link": "", "title": "Boilerplate code definition of stackoverflow"}, {"link": "", "title": "Boilerplate code definition of wikipedia"}, {"link": "", "title": "Practical API design: Confessions of a Java framework architect"}, {"link": "", "title": "Marble source code and the result"}, {"link": "", "title": "Using concept maps to evaluate the usability of APIs"}, {"link": "/document/6681333", "title": "An empirical study of API usability"}, {"link": "", "title": "Effective Java"}, {"link": "", "title": "Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable.NET Libraries"}, {"link": "/document/6223018", "title": "A case study of using HCI methods to improve tools for programmers"}, {"link": "", "title": "Methods towards API usability: A structural analysis of usability problem categories"}, {"link": "", "title": "Some structural measures of API usability"}, {"link": "", "title": "Automated measurement of API usability: The API concepts framework"}, {"link": "", "title": "Detecting missing method calls as violations of the majority rule"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "/document/8816795", "title": "Investigating next steps in static API-misuse detection"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": "Summarizing software API usage examples using clustering techniques"}, {"link": "/document/4262535", "title": "Frequent closed sequence mining without candidate maintenance"}, {"link": "", "title": "Discovering API usability problems at scale"}, {"link": "", "title": "cloning considered harmful\u201d considered harmful: patterns of cloning in software"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "", "title": "Sourcerercc: scaling code clone detection to big-code,\u201d"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Scrap your boilerplate: a practical design pattern for generic programming"}, {"link": "", "title": "htm15-boi1erp1ate"}, {"link": "", "title": "Boilerplate code definition of quora"}, {"link": "", "title": "How to avoid writing duplicate boilerplate code for requesting permissions?\u201d"}, {"link": "", "title": "How to avoid writing boilerplate code in java swing mvc?"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "Project lombok"}, {"link": "/document/543975", "title": "The expectation-maximization algorithm"}, {"link": "", "title": "Tree edit distance: Robust and memory-efficient"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "Fast unfolding of communities in large networks"}, {"link": "/document/1524911", "title": "Building effective defect-prediction models in practice"}, {"link": "", "title": "Why don\u2019t software developers use static analysis tools to find bugs?"}, {"link": "", "title": "GHTorrent: GitHub\u2019s data from a fire-hose"}, {"link": "", "title": "Probabilistic API mining implementation"}, {"link": "", "title": "Ap-ted implementation"}, {"link": "", "title": "Community detection package"}, {"link": "", "title": "How to avoid boilerplate code when loading images with pi-casso library"}, {"link": "", "title": "Spring framework"}, {"link": "", "title": "Greendao"}, {"link": "", "title": "Android API 26 release note"}, {"link": "", "title": "Butterknife,\u201d"}, {"link": "", "title": "Program slicing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952239"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "42 Variability Bugs in the Linux Kernel: A Qualitative Analysis"}, {"link": "", "title": "Similarity-based prioritization in software product-line testing"}, {"link": "", "title": "Apache Httpd"}, {"link": "", "title": "An overview of feature-oriented software development"}, {"link": "", "title": "Exploring feature interactions in the wild: The new feature-interaction challenge"}, {"link": "/document/6100075", "title": "Detection of Feature Interactions Using Feature-aware Verification"}, {"link": "", "title": "Feature models, grammars, and propositional formulas"}, {"link": "/document/6572787", "title": "A study of variability models and languages in the systems software domain"}, {"link": "", "title": "A survey of variability modeling in industrial practice"}, {"link": "", "title": "Spllift: Statically analyzing software product lines in minutes instead of years"}, {"link": "", "title": "Intraprocedural dataflow analysis for software product lines"}, {"link": "", "title": "Busy Box"}, {"link": "", "title": "Improving the testing and testability of software product lines"}, {"link": "", "title": "Extending type inference to variational programs"}, {"link": "", "title": "Extending type inference to variational programs"}, {"link": "", "title": "Symbolic model checking of software product lines"}, {"link": "", "title": "Model checking lots of systems: Efficient verification of temporal properties in software product lines"}, {"link": "", "title": "Model checking lots of systems: Efficient verification of temporal properties in software product lines"}, {"link": "", "title": "Interaction testing of highly-configurable systems in the presence of constraints"}, {"link": "", "title": "Verifying feature-based model templates against well-formedness OCL constraints"}, {"link": "/document/988497", "title": "Test case prioritization: a family of empirical studies"}, {"link": "", "title": "The choice calculus: A representation for software variation"}, {"link": "", "title": "Variation programming with the choice calculus"}, {"link": "/document/6132957", "title": "Feature interaction faults revisited: An exploratory study"}, {"link": "/document/6227189", "title": "Test confessions: A study of testing practices for plug-in systems"}, {"link": "", "title": "Modeling and model checking software product lines"}, {"link": "", "title": "An algorithm for generating t-wise covering arrays from large feature models"}, {"link": "", "title": "Feature-oriented domain analysis (foda) feasibility study"}, {"link": "", "title": "Virtual separation of concerns: toward preprocessors 2.0. it-Information Technology Methoden und innovative Anwendungen der Informatik und Informationstechnik"}, {"link": "", "title": "Type checking annotation-based product lines"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "TypeChef: Toward Type Checking #Ifdef Variability in C"}, {"link": "/document/5431764", "title": "Model checking of domain artifacts in product line engineering"}, {"link": "", "title": "Ipog-ipog-d: Efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "libpng"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "Linux Kernel"}, {"link": "", "title": "On strategies for testing software product lines: A systematic literature review"}, {"link": "", "title": "Practical pairwise testing for software product lines"}, {"link": "", "title": "Marlin"}, {"link": "", "title": "A comparison of 10 sampling algorithms for configurable systems"}, {"link": "", "title": "On essential configuration complexity: Measuring interactions in highly-configurable systems"}, {"link": "", "title": "SAT-based analysis of feature models is easy"}, {"link": "", "title": "Exploring variability-aware execution for testing plugin-based web applications"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Automated incremental pairwise testing of software product lines"}, {"link": "/document/5477055", "title": "Automated and scalable t-wise test case generation strategies for software product lines"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques"}, {"link": "/document/4639338", "title": "Configuration lifting: Verification meets software configuration"}, {"link": "/document/962562", "title": "Priori-tizing test cases for regression testing"}, {"link": "", "title": "Static analysis of variability in system software: The 90,000# ifdefs issue"}, {"link": "", "title": "Configuration coverage in the analysis of large-scale system software"}, {"link": "", "title": "Safe composition of product lines"}, {"link": "", "title": "Analysis strategies for software product lines"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "xterm"}, {"link": "/document/6569749", "title": "Acts: A combinatorial test generation tool"}, {"link": "", "title": "Programming methodology. chapter An Experiment in Feature Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952386"}
{"ref": [{"link": "/document/8952401", "title": "An empirical study towards characterizing deep learning development and deployment across different frameworks and platforms"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "", "title": "Deephunter: A coverage-guided fuzz testing framework for deep neural networks"}, {"link": "", "title": "Diffchaser: Detecting disagreements for deep neural networks"}, {"link": "", "title": "Extracting automata from recurrent neural networks using queries and counterexamples"}, {"link": "/document/8812047", "title": "Adversarial sample detection for deep neural network through model mutation testing"}, {"link": "/document/6795963", "title": "Long Short-Term Memory"}, {"link": "", "title": "On the properties of neural machine translation: Encoder-decoder approaches"}, {"link": "", "title": "Constructing Deterministic Finite-State Automata in Recurrent Neural Networks"}, {"link": "", "title": "Deepstellar: Modelbased quantitative analysis of stateful deep learning systems"}, {"link": "/document/8424625", "title": "Audio Adversarial Examples: Targeted Attacks on Speech-to-Text"}, {"link": "/document/1245447", "title": "State Automata Extraction from Recurrent Neural Nets Using k-Means and Fuzzy Clustering"}, {"link": "", "title": "Learning with Interpretable Structure from RNN"}, {"link": "", "title": "A baseline for detecting misclassified and out-of-distribution examples in neural networks"}, {"link": "", "title": "Feature squeezing: Detecting adversarial examples in deep neural networks"}, {"link": "", "title": "Tensorfuzz: Debugging neural networks with coverage-guided fuzzing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952565"}
{"ref": [{"link": "", "title": "Scaling Java Points-to Analysis Using Spark"}, {"link": "", "title": "Demand-driven Context-sensitive Alias Analysis for Java"}, {"link": "/document/5070515", "title": "Accurate interprocedural null-dereference analysis for java"}, {"link": "", "title": "Effective Static Race Detection for Java"}, {"link": "", "title": "Identifying Refactoring Opportunities for Replacing Type Code with Subclass and State"}, {"link": "", "title": "Program Analysis and Specialization for the C Programming Language"}, {"link": "", "title": "Aliasing in object-oriented programming"}, {"link": "", "title": "Pointer Analysis: Haven\u2019t We Solved This Problem Yet?\u201d"}, {"link": "", "title": "Parameterized Object Sensitivity for Points-to and Side-effect Analyses for Java"}, {"link": "", "title": "Client-driven Pointer Analysis"}, {"link": "", "title": "Demanddriven Points-to Analysis for Java"}, {"link": "", "title": "Refinement-based Context-sensitive Points-to Analysis for Java"}, {"link": "", "title": "On-demand dynamic summarybased points-to analysis"}, {"link": "", "title": "Boomerang: Demand-Driven Flow- and Context-Sensitive Pointer Analysis for Java"}, {"link": "", "title": "Parallel Pointer Analysis with CFLReachability"}, {"link": "", "title": "Demand-driven Alias Analysis for C"}, {"link": "", "title": "Discussion in Soot mailing list on demand-driven points-to analyses"}, {"link": "", "title": "Linear Cost is Sometimes Quadratic"}, {"link": "", "title": "Which Pointer Analysis Should I Use?\u201d"}, {"link": "", "title": "Scaling CFL-Reachability- Based Points-To Analysis Using Context-Sensitive Must-Not-Alias Analysis"}, {"link": "", "title": "Context-, Flow-, and Field-sensitive Data-flow Analysis Using Synchronized Pushdown Systems"}, {"link": "", "title": "A Java Chart Library"}, {"link": "", "title": "Source Code: Demand-Driven Context-Sensitive Alias Analysis for Java"}, {"link": "", "title": "An Incremental Pointsto Analysis with CFL-Reachability"}, {"link": "", "title": "Source Code: Batch Alias Analysis (BatchAnalyzer)"}, {"link": "", "title": "Soot - a Java Bytecode Optimization Framework, booktitle = Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research"}, {"link": "", "title": "The DaCapo Benchmarks: Java Benchmarking Development and Analysis"}, {"link": "", "title": "Taming Reflection: Aiding Static Analysis in the Presence of Reflection and Custom Class Loaders"}, {"link": "/document/7965339", "title": "Refactoring Opportunities for Replacing Type Code with State and Subclass"}, {"link": "", "title": "Dimensions of Precision in Reference Analysis of Object-Oriented Programming Languages"}, {"link": "", "title": "Compare less, defer more: scaling value-contexts based whole-program heap analyses"}, {"link": "", "title": "Selective Contextsensitivity Guided by Impact Pre-analysis"}, {"link": "", "title": "Data-driven Contextsensitivity for Points-to Analysis\u201d"}, {"link": "", "title": "Refinement in Object-sensitivity Points-to Analysis via Slicing\u201d"}, {"link": "", "title": "On Abstraction Refinement for Program Analyses in Datalog\u201d"}, {"link": "", "title": "Type-based Alias Analysis\u201d"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952457"}
{"ref": [{"link": "/document/5070531", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Memories of bug fixes"}, {"link": "/document/7372020", "title": "Fixing recurring crash bugs via analyzing Q&A sites"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs, ser. ICSE"}, {"link": "", "title": "A case study of cross-system porting in forked projects"}, {"link": "", "title": "Repertoire: A cross-system porting analysis tool for forked software projects"}, {"link": "", "title": "SWIN: towards type-safe java program adaptation between apis"}, {"link": "", "title": "Transforming programs between apis with many-to-many mappings"}, {"link": "", "title": "Refactoring: An aid in designing application frameworks and evolving object-oriented systems"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Lase: Locating and applying systematic edits by learning from examples, ser. ICSE \u201913"}, {"link": "/document/7985680", "title": "Learning syntactic program transformations from examples"}, {"link": "", "title": "Automatic inference of code transforms for patch generation"}, {"link": "", "title": "On the naturalness of buggy code"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "/document/7476644", "title": "History driven program repair"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "/document/4639337", "title": "Generic patch inference"}, {"link": "", "title": "Semantic patch inference"}, {"link": "", "title": "Phoenix: Automated datadriven synthesis of repairs for static analysis violations"}, {"link": "/document/8812071", "title": "Graph-based mining of in-the-wild, fine-grained, semantic code change patterns"}, {"link": "/document/7962375", "title": "Mining change histories for unknown systematic edits"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/8330202", "title": "Mining stackoverflow for program repair"}, {"link": "", "title": "Search-based generalization and refinement of code templates"}, {"link": "", "title": "Documenting and automating collateral evolutions in linux device drivers"}, {"link": "", "title": "Using twinning to adapt programs to alternative apis"}, {"link": "", "title": "Stratego/xt 0.17. a language and toolset for program transformation"}, {"link": "", "title": "An update calculus for expressing type-safe program updates"}, {"link": "", "title": "The txl source transformation language"}, {"link": "", "title": "Mining software repair models for reasoning on the search space of automated program fixing"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Prototypical networks for few-shot learning"}, {"link": "", "title": "Thin slicing"}, {"link": "", "title": "Early detection of configuration errors to reduce failure damage"}, {"link": "/document/995792", "title": "A precise demand-driven definition-use chaining algorithm"}, {"link": "", "title": "Efficient computation of interprocedural definition-use chains"}, {"link": "", "title": "Finegrained and accurate source code differencing"}, {"link": "", "title": "History-driven build failure fixing: How far are we?"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/8115676", "title": "Leveraging syntax-related code for automated program repair"}, {"link": "/document/8115675", "title": "Elixir: Effective object oriented program repair"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "A manual inspection of defects4j bugs and its implications for automatic program repair"}, {"link": "", "title": "Automatic clustering of code changes"}, {"link": "/document/4339230", "title": "Change distilling:tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "An empirical investigation into learning bug-fixing patches in the wild via neural machine translation"}, {"link": "/document/6693078", "title": "A study of repetitiveness of code changes in software evolution"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "", "title": "Evaluating and improving fault localization"}, {"link": "", "title": "Gemund, An evaluation of similarity coefficients for software fault localization, ser. PRDC"}, {"link": "", "title": "Fluccs: Using code and change metrics to improve fault localization, ser. ISSTA"}, {"link": "", "title": "An empirical study of fault localization families and their combinations"}, {"link": "", "title": "Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization"}, {"link": "", "title": "Compiler bug isolation via effective witness test program generation"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the Defects4J dataset"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "", "title": "Practical program repair via bytecode mutation"}, {"link": "", "title": "Towards practical program repair with on-demand candidate generation"}, {"link": "", "title": "Identifying patch correctness in test-based program repair"}, {"link": "", "title": "Antipatterns in search-based program repair"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952210"}
{"ref": [{"link": "", "title": "Architectural styles and the design of network-based software architectures"}, {"link": "", "title": "What makes APIs hard to learn? the answers of developers"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "/document/6225476", "title": "On designing better tools for learning APIs"}, {"link": "", "title": "API documentation with executable examples"}, {"link": "", "title": "What makes a good code example?: A study of programming Q&A in StackOverflow"}, {"link": "", "title": "Measuring API documentation on the web"}, {"link": "", "title": "Who asked what: Integrating crowdsourced faqs into api documentation"}, {"link": "", "title": "Live api documentation"}, {"link": "/document/5783175", "title": "SaaS support in software documentation systems"}, {"link": "", "title": "Jadeite: Improving API documentation using usage information"}, {"link": "", "title": "Investigating web APIs on the world wide web"}, {"link": "", "title": "Web API growing pains: Stories from client developers and their code"}, {"link": "", "title": "Validation and interactivity of web API documentation"}, {"link": "", "title": "Functional descriptions as the bridge between hypermedia APIs and the semantic web"}, {"link": "", "title": "On the origin of services using riddl for description, evolution and composition of restful services"}, {"link": "/document/4740521", "title": "hrests: An html microformat for describing restful web services"}, {"link": "", "title": "Omnivoke: A framework for automating the invocation of web apis"}, {"link": "", "title": "Studying the documentation of an api for enterprise service-oriented architecture"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372015"}
{"ref": [{"link": "", "title": "ARM architecture reference manual"}, {"link": "", "title": "Intel\u00ae 64 and ia-32 architectures software developer's manual"}, {"link": "", "title": "MeanDiff"}, {"link": "", "title": "Pyvex"}, {"link": "", "title": "QEMU-devel archives"}, {"link": "", "title": "QEMU-devel archives"}, {"link": "", "title": "Radare2"}, {"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": "Enhancing symbolic execution with Veritesting"}, {"link": "", "title": "WYSINWYX: What you see is not what you execute"}, {"link": "", "title": "The BINCOA framework for binary code analysis"}, {"link": "", "title": "QEMU, a fast and portable dynamic translator"}, {"link": "/document/1191551", "title": "An infrastructure for adaptive dynamic optimization"}, {"link": "", "title": "BAP: A binary analysis platform"}, {"link": "", "title": "Unleashing mayhem on binary code"}, {"link": "", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "S2E: A platform for invivo multi-path analysis of software systems"}, {"link": "/document/1425057", "title": "Semantics-aware malware detection"}, {"link": "/document/693332", "title": "Specifying the semantics of machine instructions"}, {"link": "/document/825697", "title": "UQBT: Adaptable binary translation at low cost"}, {"link": "", "title": "Tupni: Automatic reverse engineering of input formats"}, {"link": "", "title": "Embedded software verification using symbolic execution and uninterpreted functions"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "REIL: A platform-independent intermediate representation of disassembled code for static code analysis"}, {"link": "", "title": "Insight: An open binary analysis framework"}, {"link": "", "title": "Vx32: Lightweight user-level sandboxing on the x86"}, {"link": "", "title": "SAGE: Whitebox fuzzing for security testing"}, {"link": "", "title": "Automated synthesis of symbolic instruction encodings from i/o samples"}, {"link": "", "title": "Checking correctness of code generator architecture specifications"}, {"link": "", "title": "Lifting assembly to intermediate representation: A novel approach leveraging compilers"}, {"link": "", "title": "Formal verification in hardware design: A survey"}, {"link": "", "title": "Jakstab: A static analysis platform for binaries"}, {"link": "", "title": "Detecting kernel-level rootkits through binary analysis"}, {"link": "", "title": "SYMDIFF: A language-agnostic semantic diff tool for imperative programs"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "PEBIL: Efficient static binary instrumentation for linux"}, {"link": "", "title": "Bochs: A portable PC emulator for Unix/X"}, {"link": "", "title": "TIE: Principled reverse engineering of types in binary programs"}, {"link": "", "title": "Deriving input syntactic structure from execution"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "/document/982916", "title": "Simics: A full system simulation platform"}, {"link": "", "title": "Testing system virtual machines"}, {"link": "", "title": "Testing cpu emulators"}, {"link": "", "title": "Valgrind: A program supervision framework"}, {"link": "", "title": "Valgrind: a framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "N-version disassembly: Differential testing of x86 disassemblers"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Shared and distributed memory parallel security analysis of large-scale source code and binary applications"}, {"link": "", "title": "symMMU: Symbolically executed runtime libraries for symbolic memory access"}, {"link": "", "title": "An SMT-LIB theory of binary floating-point arithmetic"}, {"link": "", "title": "Native x86 decompilation using semantics-preserving structural analysis and iterative control-flow structuring"}, {"link": "", "title": "BitBlaze: A new approach to computer security via binary analysis"}, {"link": "", "title": "Reflections on trusting trust"}, {"link": "", "title": "Trail of Bits"}, {"link": "", "title": "Using a decompiler for realworld source recovery"}, {"link": "", "title": "No more gotos: Decompilation using pattern-independent control-flow structuring and semantics-preserving transformations"}, {"link": "", "title": "Panorama: Capturing system-wide information flow for malware detection and analysis"}, {"link": "", "title": "Practical control flow integrity and randomization for binary executables"}, {"link": "", "title": "Control flow integrity for COTS binaries"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115648"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "IEEE Trans. Knowl. Data Eng"}, {"link": "", "title": "ESEC/SIGSOFT FSE"}, {"link": "", "title": "ICSE"}, {"link": "", "title": "SIGSOFT FSE"}, {"link": "", "title": "IEEE Trans. Comput"}, {"link": "", "title": "SIGSOFT FSE, 2015"}, {"link": "", "title": "ASE, 2014"}, {"link": "", "title": "ACM Trans. Softw. Eng. Me thodol"}, {"link": "", "title": "Nonparametric Statistics: A Step-by-Step Approach"}, {"link": "", "title": ""}, {"link": "/document/6044587", "title": "IEEE Trans. Software Eng"}, {"link": "", "title": "WCRE"}, {"link": "", "title": "KDD"}, {"link": "", "title": "TSE"}, {"link": "", "title": "Mining Branching LSCs: CrossFTP, Columba traces and results. 3TU.DataCentrum, 2013. doi: 10.4121/uuid:aa7db920-aae"}, {"link": "/document/6693102", "title": "Mining branching-time scenarios"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Information & Software Technology"}, {"link": "", "title": "Automatic Mining of Specifications from Invocation Traces and Method Invariants"}, {"link": "", "title": "ICSE"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "", "title": "WCRE"}, {"link": "", "title": "SIGSOFT FSE"}, {"link": "", "title": "ASE"}, {"link": "", "title": "Scenario-based and value-based specification mining: better together"}, {"link": "", "title": "Mining modal scenario-based specifications from execution traces of reactive systems. In R. E. K. Stirewalt. A. Egyed, and B. Fischer, editors, ASE"}, {"link": "", "title": "Journal of Systems and Software"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "/document/4222571", "title": "Compatibility and regression testing of COTS-component-based software"}, {"link": "", "title": "ICECCS"}, {"link": "", "title": "IEEE Trans. Softw. Eng., 37(2):161\u2013"}, {"link": "", "title": "RCIS"}, {"link": "", "title": "WITS"}, {"link": "", "title": ""}, {"link": "", "title": "ICSM"}, {"link": "", "title": "ASE"}, {"link": "", "title": "Dynamic protocol recovery"}, {"link": "", "title": "ICSE"}, {"link": "", "title": "IEEE Trans. Softw. Eng"}, {"link": "", "title": "ASE"}, {"link": "", "title": "Perracotta: mining temporal API rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371999"}
{"ref": [{"link": "", "title": "An ethnographic study of copy and paste programming practices in oopl"}, {"link": "/document/4362914", "title": "A framework for studying clones in large software systems"}, {"link": "", "title": "Frequency and risks of changes to clones"}, {"link": "/document/4796208", "title": "A data mining approach for detecting higher-level clones in software"}, {"link": "", "title": "Detecting higher-level similarity patterns in programs"}, {"link": "/document/6676875", "title": "Mining logical clones in software: Revealing high-level business and programming rules"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "", "title": "En-hancing clone-and-own with systematic reuse for developing software variants"}, {"link": "", "title": "Automating the extraction of model-based software product lines from model variants (t)"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "Reengineering legacy software products into software product line"}, {"link": "/document/6080809", "title": "Incremental and iterative reengineering towards software product line: An industrial case study"}, {"link": "", "title": "Feature-Oriented Software Product Lines: Concepts and Implementation"}, {"link": "", "title": "MICoDe Website"}, {"link": "", "title": "Jhotdraw"}, {"link": "", "title": "Hierarchical clustering via joint between-within distances: Extending ward's minimum variance method"}, {"link": "", "title": "Fast algorithms for mining association rules in large databases"}, {"link": "", "title": "Algorithmic Graph Theory and Perfect Graphs (Annals of Discrete Mathematics"}, {"link": "", "title": "Mining frequent patterns without candidate generation: A frequent-pattern tree approach"}, {"link": "", "title": "Detecting differences across multiple instances of code clones"}, {"link": "", "title": "Clone-based and interactive recommendation for modifying pasted code"}, {"link": "", "title": "Maximum matching and a polyhedron with 0,1-vertices"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "/document/514697", "title": "On finding duplication and near-duplication in large software systems"}, {"link": "/document/1019480", "title": "Ccfinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Clonede-tective - a workbench for clone detection research"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Using slicing to identify duplication in source code"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "Clonepedia: Summarizing code clones by common syntactic context for software maintenance"}, {"link": "/document/1232284", "title": "Polymetric views - a lightweight visual approach to reverse engineering"}, {"link": "/document/4658096", "title": "Towards reverse engineering software ecosystems"}, {"link": "", "title": "Bunch: a clustering tool for the recovery and maintenance of software system structures"}, {"link": "/document/4400185", "title": "Reverse engineering for software performance engineering"}, {"link": "", "title": "A perspective on architectural re-engineering"}, {"link": "", "title": "Rigi: a visualization environment for reverse engineering"}, {"link": "/document/5440167", "title": "Reverse engineering on the mainframe: Lessons learned from \u201cin vivo\u201d research"}, {"link": "", "title": "Reverse engineering feature models from programs' feature sets"}, {"link": "/document/6613490", "title": "Variability mining: Consistent semi-automatic detection of product-line features"}, {"link": "/document/5928352", "title": "A semi-automatic approach for extracting software product lines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115652"}
{"ref": [{"link": "", "title": "Polyhedron model"}, {"link": "", "title": "A scalable method for run-time loop parallelization"}, {"link": "/document/4536285", "title": "Parallelizing irregular C codes assisted by interprocedural shape analysis"}, {"link": "", "title": "Automatic parallelization of while-loops using speculative execution"}, {"link": "", "title": "The Challenges of Non-linear Parameters and Variables in Automatic Loop Parallelisation"}, {"link": "", "title": "Polly - Polyhedral optimization in LLVM"}, {"link": "", "title": "Polly - Performing polyhedral optimizations on a low-level intermediate representation"}, {"link": "", "title": "GRAPHITE two years after: First lessons learned from real-world polyhedral compilation"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "/document/1342537", "title": "Code generation in the polyhedral model is easier than you think"}, {"link": "", "title": "Hilbert's tenth problem is unsolvable"}, {"link": "", "title": "Clang: A C Language Family Frontend for LLVM"}, {"link": "", "title": "Rubinius: An Environment for the Ruby Programming Language"}, {"link": "", "title": "Allocation removal by partial evaluation in a tracing JIT"}, {"link": "", "title": "The program structure tree: Computing control regions in linear time"}, {"link": "", "title": "OProfile - A System Profiler for Linux"}, {"link": "", "title": "GNU Gprof"}, {"link": "", "title": "Portable programming interface for performance evaluation on modern processors"}, {"link": "", "title": "Violin plots: A box plot-density trace synergism"}, {"link": "", "title": "An analysis of variance test for normality (complete samples)"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "Use of ranks in one-criterion variance analysis"}, {"link": "", "title": "SunSpider: JavaScript Benchmark"}, {"link": "/document/6693108", "title": "The potential of polyhedral optimization"}, {"link": "/document/6385133", "title": "Empirically examining the parallelizability of open source software systems"}, {"link": "", "title": "The polyhedral model is more widely applicable than you think"}, {"link": "", "title": "On the space-time mapping of while-loops"}, {"link": "", "title": "The loop parallelizer LooPo-Announcement"}, {"link": "/document/5644877", "title": "Combined iterative and model-driven optimization in an automatic parallelization framework"}, {"link": "", "title": "A practical automatic polyhedral parallelizer and locality optimizer"}, {"link": "", "title": "Automatic transformations for communicationminimized parallelization and locality optimization in the polyhedral model"}, {"link": "/document/4145111", "title": "Iterative optimization in the polyhedral model: Part I, one-dimensional time"}, {"link": "", "title": "Iterative optimization in the polyhedral model: Part II, multidimensional time"}, {"link": "", "title": "Semi-automatic composition of loop transformations for deep parallelism and memory hierarchies"}, {"link": "", "title": "A model for fusion and code motion in an automatic parallelizing compiler"}, {"link": "", "title": "Adapting the Polytope Model for Dynamic and Speculative Parallelization"}, {"link": "/document/752782", "title": "The LRPD test: Speculative run-time parallelization of loops with privatization and reduction parallelization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693108"}
{"ref": [{"link": "", "title": "The DOPLER meta-tool for decision-oriented variability modeling: A multiple case study"}, {"link": "", "title": "A formal semantics for decision-oriented variability modeling with DOPLER"}, {"link": "", "title": "Automated verification of interactive rule-based configuration systems (additional material)"}, {"link": "", "title": "Resolution theorem proving"}, {"link": "", "title": "Paramodulation-based theorem proving"}, {"link": "", "title": "Combining superposition, sorts and splitting"}, {"link": "/document/1185845", "title": "Fuzzy rule base systems verification using high-level petri nets"}, {"link": "/document/5431764", "title": "Model checking of domain artifacts in product line engineering"}, {"link": "", "title": "Verifying feature-based model templates against well-formedness OCL constraints"}, {"link": "/document/4639338", "title": "Configuration lifting: Verification meets software configuration"}, {"link": "/document/4339252", "title": "Feature diagrams and logics: There and back again"}, {"link": "", "title": "SAT-based analysis of feature models is easy"}, {"link": "", "title": "Automated analysis of feature models using atomic sets"}, {"link": "", "title": "A BDD-based approach to verifying clone-enabled feature models' constraints and customization"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "/document/4567924", "title": "The temporal logic of programs"}, {"link": "", "title": "Propositional dynamic logic of regular programs"}, {"link": "", "title": "A PLTL-prover based on labelled superposition with partial model guidance"}, {"link": "", "title": "Labelled superposition for PLTL"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693112"}
{"ref": [{"link": "", "title": "Collaborative verification of information flow for a high-assurance app store"}, {"link": "", "title": "Procedural reflection in programming languages"}, {"link": "", "title": "Effective inter-component communication mapping in Android with Epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "A type-based approach to program security"}, {"link": "", "title": "Free and open source Android app repository"}, {"link": "", "title": "Effective Java Programming Language Guide"}, {"link": "", "title": "Analyzing interapplication communication in Android"}, {"link": "", "title": "APKParser"}, {"link": "", "title": "Retargeting Android applications to Java bytecode"}, {"link": "", "title": "Composite constant propagation: Application to Android inter-component communication analysis"}, {"link": "", "title": "IccTA: Detecting inter-component privacy leaks in Android apps"}, {"link": "", "title": "Practical pluggable types for Java"}, {"link": "", "title": "Static analysis of implicit control flow: Resolving Java reflection and Android intents (extended version)"}, {"link": "", "title": "Living with reflection: Towards coexistence of program transformation by middleware and reflection in Java applications"}, {"link": "", "title": "Reflection analysis for Java"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Averroes: Whole-program analysis without the whole program"}, {"link": "", "title": "Finding errors in multithreaded GUI applications"}, {"link": "", "title": "Javari: Adding reference immutability to Java"}, {"link": "", "title": "Self-inferencing reflection resolution for Java"}, {"link": "", "title": "SCanDroid: Automated security certification of Android applications"}, {"link": "", "title": "TaintDroid: an information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "These aren't the droids you're looking for: Retrofitting Android to protect data from imperious applications"}, {"link": "", "title": "PiOS: Detecting privacy leaks in iOS applications"}, {"link": "", "title": "Systematic detection of capability leaks in stock Android smartphones"}, {"link": "", "title": "AndroidLeaks: Automatically detecting potential privacy leaks in Android applications on a large scale"}, {"link": "", "title": "A framework for static detection of privacy leaks in Android applications"}, {"link": "", "title": "RiskRanker: Scalable and accurate zero-day Android malware detection"}, {"link": "", "title": "Hey, you, get off of my market: Detecting malicious apps in official and alternative Android markets"}, {"link": "", "title": "DroidScope: Seamlessly reconstructing the OS and Dalvik semantic views for dynamic Android malware analysis"}, {"link": "", "title": "Aurasium: Practical policy enforcement for Android applications"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "User-aware privacy control via extended static-information-flow analysis"}, {"link": "", "title": "Scalable propagation-based call graph construction algorithms"}, {"link": "", "title": "Using inter-procedural side-effect information in JIT optimizations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372054"}
{"ref": [{"link": "", "title": "Crane: Failure prediction, change analysis and test prioritization in practice - experiences from windows"}, {"link": "/document/4288197", "title": "Problems with Precision: A Response to \u201cComments on \u2018Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "/document/6068375", "title": "Empirical evaluation of mixed-project defect prediction models"}, {"link": "", "title": "LACE2: Better privacy-preserving data sharing for cross project defect prediction"}, {"link": "", "title": "Recalling the \u201cimprecision\u201d of cross-project defect prediction"}, {"link": "", "title": "Too much automation? the bellwether effect and its implications for transfer learning"}, {"link": "", "title": "Data mining methods and cost estimation models: Why is it so hard to infuse new ideas?"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "", "title": "Less is more: Minimizing code reorganization using XTREE"}, {"link": "", "title": "Simpler Transfer Learning (Using \u201cBellwethers"}, {"link": "", "title": "Artificial Intelligence: A Modern Approach."}, {"link": "", "title": "Automated Planning: theory and practice"}, {"link": "", "title": "Intelligent agents: Theory and practice"}, {"link": "", "title": "Constrained Markov decision processes"}, {"link": "", "title": "Htn planning with preferences"}, {"link": "", "title": "Search based software engineering: A comprehensive analysis and review of trends techniques and applications"}, {"link": "", "title": "An (accidental) exploration of alternatives to evolutionary algorithms for sbse"}, {"link": "/document/996017", "title": "A Fast Elitist Multi-Objective Genetic Algorithm: NSGA-II"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs"}, {"link": "/document/6693104", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "/document/7194602", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "Search-based refactoring: An empirical study"}, {"link": "", "title": "Recommendation system for software refactoring using innovization and interactive dynamic optimization"}, {"link": "/document/979986", "title": "A hierarchical model for object-oriented design quality assessment"}, {"link": "", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "Tuning for software analytics: is it really necessary?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115719"}
{"ref": [{"link": "", "title": "Software traceability: Trends and future directions"}, {"link": "/document/1531058", "title": "Overcoming the traceability benefit problem"}, {"link": "", "title": "An analysis of the requirements traceability problem"}, {"link": "/document/895989", "title": "Toward reference models for requirements traceability"}, {"link": "", "title": "Preventing defects: The impact of requirements traceability completeness on software quality"}, {"link": "", "title": "Automated software traceability in very small companies: A case study and lessons learned"}, {"link": "", "title": "Recovering from a Decade: a Systematic Mapping of Information Retrieval Approaches to Software Traceability"}, {"link": "", "title": "A machine learning approach for tracing regulatory codes to product specific requirements"}, {"link": "/document/4384003", "title": "Survey of traceability approaches in model-driven engineering"}, {"link": "", "title": "Rule-based generation of requirements traceability relations"}, {"link": "", "title": "The impact of retrieval direction on ir-based traceability link recovery"}, {"link": "/document/4249808", "title": "Best Practices for Automated Traceability"}, {"link": "", "title": "Predicting query quality for applications of text retrieval to software engineering tasks"}, {"link": "", "title": "Imbalanced Learning: Foundations, Algorithms, and Applications."}, {"link": "", "title": "Smote: Synthetic minority over-sampling technique"}, {"link": "/document/5128907", "title": "Learning from imbalanced data"}, {"link": "", "title": "On integrating orthogonal information retrieval methods to improve traceability recovery"}, {"link": "", "title": "Requirements traceability for object oriented systems by partitioning source code"}, {"link": "", "title": "Requirements tracing on target (retro): Improving software maintenance through traceability recovery"}, {"link": "", "title": "Cold-start software analytics"}, {"link": "", "title": "How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms"}, {"link": "", "title": "Tracing object-oriented code into functional requirements"}, {"link": "", "title": "Recovering code to documentation links in oo systems"}, {"link": "", "title": "Information retrieval models for recovering traceability links between code and documentation"}, {"link": "", "title": "Recovery of traceability links between software documentation and source code"}, {"link": "", "title": "Software traceability with topic modeling"}, {"link": "", "title": "Learning to rank improves ir in se"}, {"link": "", "title": "Clustering support for automated tracing"}, {"link": "/document/1115010", "title": "Automating requirements traceability: Beyond the record & replay paradigm"}, {"link": "", "title": "Revising rules to capture requirements traceability relations: A machine learning approach"}, {"link": "", "title": "Automated classification of non-functional requirements"}, {"link": "/document/6227153", "title": "A tactic-centric approach for automating traceability of quality concerns"}, {"link": "", "title": "Estimating the number of remaining links in traceability recovery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115723"}
{"ref": [{"link": "/document/4196177", "title": "XULRunner: A new approach for developing rich internet applications"}, {"link": "/document/1516047", "title": "Building rich Web applications with Ajax"}, {"link": "", "title": "World Internet Usage Statistics News and World Population Stats"}, {"link": "", "title": "Prioritizing Web Usability"}, {"link": "/document/6032335", "title": "Assessing web site usability in retail electronic commerce"}, {"link": "", "title": "Ajax Design Patterns"}, {"link": "/document/4539539", "title": "State-based testing of ajax web applications"}, {"link": "/document/5070522", "title": "Invariant-based automatic testing of ajax user interfaces"}, {"link": "/document/5476509", "title": "An iterative approach for the reverse engineering of rich internet application user interfaces"}, {"link": "", "title": "A framework for automated testing of javascript web applications"}, {"link": "", "title": "Using static analysis for ajax intrusion detection"}, {"link": "/document/6178915", "title": "Extracting interactionbased stateful behavior in rich internet applications"}, {"link": "", "title": ""}, {"link": "", "title": "White paper: Rich internet applicationb"}, {"link": "", "title": "Rich internet application are the next evolution of the web"}, {"link": "/document/4283806", "title": "Rich internet applications the next stage of application development"}, {"link": "", "title": "Automatic verification of design pattern in java"}, {"link": "", "title": "Property Pattern Mappings for Ltl"}, {"link": "/document/4221630", "title": "New frontiers of reverse engineering"}, {"link": "/document/1021325", "title": "Enhancing program comprehension with recovered state models"}, {"link": "", "title": "Model Checking"}, {"link": "/document/919078", "title": "Analysis and testing of web applications"}, {"link": "/document/6151633", "title": "Reajax: A reverse engineering tool for ajax web applications"}, {"link": "", "title": "Automated cross-browser compatibility testing"}, {"link": "/document/6227174", "title": "Automated analysis of css rules to support style maintenance"}, {"link": "", "title": "Code patterns for automatically validating requirements-to-code traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693076"}
{"ref": [{"link": "", "title": "Flow-Based Programming: A New Approach to Application Development"}, {"link": "", "title": "Patterns for Parallel Programming"}, {"link": "", "title": "Resources on Parallel Patterns"}, {"link": "", "title": "GPars (Groovy Parallel Systems)"}, {"link": "", "title": "Intel Threading Building Blocks"}, {"link": "", "title": "TPL Dataflow"}, {"link": "", "title": "Expressing pipeline parallelism using TBB constructs: A case study on what works and what doesn't"}, {"link": "", "title": "Prospector: A dynamic data- dependence profiler to help parallel programming"}, {"link": "/document/1386065", "title": "The OpenMP source code repository"}, {"link": "", "title": "High Performance Compilers for Parallel Computing"}, {"link": "", "title": "Alias Analysis for Object-Oriented Programs"}, {"link": "/document/5070538", "title": "Effective static race detection for java"}, {"link": "", "title": "Soot - A Java bytecode optimization framework"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for java"}, {"link": "", "title": "Two Approaches to Interprocedural Data Flow Analysis"}, {"link": "", "title": "Function allocation: Algorithm, alchemy or apostasy?"}, {"link": "", "title": "Lire: Lucene Image retrieval - An Extensible Java CBIR library"}, {"link": "", "title": "The paralax infrastructure: Automatic parallelization with a helping hand"}, {"link": "/document/5389740", "title": "Automatic partitioning of a program dependence graph into parallel tasks"}, {"link": "", "title": "Program dependence graph and its use in optimization"}, {"link": "/document/4408268", "title": "A practical approach to exploiting coarse-grained pipeline parallelism in C programs"}, {"link": "", "title": "OoOJava: Software out of- order execution"}, {"link": "", "title": "Ease of use with concurrent collections (CnC)"}, {"link": "", "title": "Feedback-directed pipeline parallelism"}, {"link": "", "title": "T.J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "Effective Static Race Detection for Java"}, {"link": "", "title": "A schema for interprocedural modification side-effect analysis with pointer aliasing"}, {"link": "", "title": "Inferring ownership transfer for efficient message passing"}, {"link": "", "title": "Ownership types for flexible alias protection"}, {"link": "", "title": "Benchmarking Modern Multiprocessors"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Advances in dataflow programming languages"}, {"link": "/document/1653939", "title": "Data flow program graphs"}, {"link": "", "title": "LUCID, the Dataflow Programming Language"}, {"link": "", "title": "An asynchronous programming language and computing machine"}, {"link": "", "title": "What Is NI Labview?"}, {"link": "", "title": "PROGRAPH: A preliminary report"}, {"link": "/document/1653938", "title": "Data flow languages"}, {"link": "", "title": "Java Flow-Based Programming"}, {"link": "", "title": "Brook for GPUs: Stream computing on graphics hardware"}, {"link": "", "title": "StreamIt: A language for streaming applications"}, {"link": "/document/1220582", "title": "Programmable stream processors"}, {"link": "", "title": "A type and effect system for deterministic parallel java"}, {"link": "", "title": "Using data groups to specify and check side effects"}, {"link": "", "title": "Polymorphic effect systems"}, {"link": "", "title": "Static Universe Type Inference"}, {"link": "", "title": "Static Universe Type Inference Using A SAT-solver"}, {"link": "/document/5431752", "title": "Inferring method effect summaries for nested heap regions"}, {"link": "", "title": "A profile-based tool for finding pipeline parallelism in sequential programs"}, {"link": "", "title": "Semi-automatic extraction and exploitation of hierarchical pipeline parallelism using profiling information"}, {"link": "/document/5695564", "title": "SD3: A scalable approach to dynamic data-dependence profiling"}, {"link": "", "title": "SUIF explorer: An interactive and interprocedural parallelizer"}, {"link": "/document/86108", "title": "Interactive parallel programming using the ParaScope Editor"}, {"link": "/document/5071031", "title": "Concurrencer: A tool for retrofitting concurrency into sequential java applications via concurrent libraries"}, {"link": "", "title": "Relooper: Refactoring for loop parallelism in java"}, {"link": "", "title": "Transformation for class immutability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693080"}
{"ref": [{"link": "", "title": "A java fork/join framework"}, {"link": "", "title": "Parallelism (The Java Tutorials > Collections > Aggregate Operations)"}, {"link": "", "title": "Scala actors: Unifying thread-based and event-based programming"}, {"link": "", "title": "The groovy programming language"}, {"link": "", "title": "A dynamic programming language that targets the java virtual machine"}, {"link": "", "title": "Bws: Balanced work stealing for time-sharing multicores"}, {"link": "", "title": "An adaptive task creation strategy for work-stealing scheduling"}, {"link": "", "title": "Adaptive work-stealing with parallelism feedback"}, {"link": "", "title": "Energy-efficient work-stealing language runtimes"}, {"link": "", "title": "A large-scale study on the usage of javas concurrent programming constructs"}, {"link": "", "title": "The implementation of the cilk-5 multithreaded language"}, {"link": "", "title": "Akka"}, {"link": "", "title": "Understanding energy behaviors of thread management constructs"}, {"link": "", "title": "Data-oriented characterization of application-level energy optimization"}, {"link": "", "title": "Rapl: Memory power estimation and capping"}, {"link": "", "title": "actors"}, {"link": "", "title": "Go with the flow: Profiling copies to find runtime bloat"}, {"link": "", "title": "Managing energy-performance tradeoffs for multithreaded applications on multiprocessor architectures"}, {"link": "", "title": "The thrifty barrier: Energy-aware synchronization in shared-memory multiprocessors"}, {"link": "/document/4336206", "title": "Language and virtual machine support for efficient fine-grained futures in java"}, {"link": "", "title": "Proving acceptability properties of relaxed nondeterministic approximate programs"}, {"link": "", "title": "Dancing with uncertainty"}, {"link": "", "title": "Task types for pervasive atomicity"}, {"link": "", "title": "Spores: A type-based foundation for closures in the age of concurrency and distribution"}, {"link": "", "title": "Everything you always wanted to know about synchronization but were afraid to ask"}, {"link": "", "title": "High performance concurrent multi-path communication for mpi"}, {"link": "", "title": "A preliminary assessment of haskell's software transactional memory constructs"}, {"link": "/document/6227200", "title": "Combining functional and imperative programming for multicore software: An empirical study evaluating scala and java"}, {"link": "", "title": "A comprehensive study on the energy efficiency of java's thread-safe collections"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems"}, {"link": "", "title": "What bugs live in the cloud? a study of 3000+ issues in cloud systems"}, {"link": "", "title": "Check-then-act misuse of java concurrent collections"}, {"link": "", "title": "Retrofitting concurrency for android applications through refactoring"}, {"link": "", "title": "How do developers use parallel libraries?"}, {"link": "", "title": "Refactoring sequential java code for concurrency via concurrent libraries"}, {"link": "/document/7372011", "title": "Study and refactoring of android asynchronous programming (t)"}, {"link": "", "title": "Fork/join parallelism in the wild: Documenting patterns and anti-patterns in java programs using the fork/join framework"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115687"}
{"ref": [{"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Dynamically detecting likely program invariants"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Patches as better bug reports"}, {"link": "", "title": "Feedback-driven dynamic invariant discovery"}, {"link": "", "title": "Data-driven precondition inference with learned features"}, {"link": "", "title": "Learning invariants using decision trees and implication counterexamples"}, {"link": "", "title": "A Counterexample-guided Approach to Finding Numerical Invariants"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java PathFinder"}, {"link": "/document/6227149", "title": "Using Dynamic Analysis to Discover Polynomial and Array Invariants"}, {"link": "", "title": "Using Dynamic Analysis to Generate Disjunctive Invariants"}, {"link": "", "title": "DIG: A Dynamic Invariant Generator for Polynomial and Array Invariants"}, {"link": "", "title": "The Astr\u00e9e analyzer"}, {"link": "/document/7958606", "title": "Ver-ifying and synthesizing constant-resource implementations with types"}, {"link": "", "title": "Decomposition instead of self-composition for proving the absence of timing channels"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automatically validating temporal safety properties of interfaces"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": "ESP: path-sensitive program verification in polynomial time"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Formal certification of a compiler back-end or: programming a compiler with a proof assistant"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "A static analyzer for large safety-critical software"}, {"link": "", "title": "Control-flow refinement and progress invariants for bound analysis"}, {"link": "", "title": "Memoized symbolic execution"}, {"link": "", "title": "Sage Mathematics Software"}, {"link": "", "title": "Generating all polynomial invariants in simple loops"}, {"link": "", "title": "A data-driven approach for algebraic loop invariants"}, {"link": "", "title": "SPEED: Symbolic complexity bound analysis"}, {"link": "", "title": "SPEED: precise and efficient static estimation of program computational complexity"}, {"link": "", "title": "Inductive invariant generation via abductive inference"}, {"link": "", "title": "The software model checker BLAST"}, {"link": "", "title": "Invgen: An efficient invariant generator"}, {"link": "", "title": "Interproc analyzer for recursive programs with numerical variables"}, {"link": "", "title": "Green: Reducing, Reusing and Recycling Constraints in Program Analysis"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Parallel symbolic execution for structural test generation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115691"}
{"ref": [{"link": "", "title": "Dynodroid: an input generation system for Android apps"}, {"link": "", "title": "Reducing combinatorics in GUI testing of android applications"}, {"link": "", "title": "Monkey see, monkey do: effective generation of GUI tests with inferred macro events"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Using GUI ripping for automated testing of android applications"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Guided GUI testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "Automated model-based android GUI testing using multi-level GUI comparison criteria"}, {"link": "", "title": "Sapienz: multi-objective automated testing for android applications"}, {"link": "", "title": "Finding resume and restart errors in android applications"}, {"link": "", "title": "Analysis and testing of notifications in android wear applications"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet? (E)"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in android applications"}, {"link": "", "title": "Soot (poster session): A java bytecode optimization and annotation framework"}, {"link": "", "title": "Free and open source app repository"}, {"link": "", "title": "Google play store"}, {"link": "", "title": "The monkey ui android testing tool"}, {"link": "", "title": "Xmlprinter"}, {"link": "", "title": "Android debug bridge"}, {"link": "", "title": "Robotium"}, {"link": "", "title": "Jacoco: Java code coverage library"}, {"link": "", "title": "Emma: a free java code coverage tool"}, {"link": "", "title": "Automatic text input generation for mobile testing"}, {"link": "", "title": "Automating GUI testing for android applications"}, {"link": "", "title": "A GUI crawling-based technique for android mobile application testing"}, {"link": "", "title": "Intent fuzzer"}, {"link": "", "title": "Intent fuzzer: crafting intents of death"}, {"link": "", "title": "Droidfuzzer: Fuzzing the android apps with intent-filter tag"}, {"link": "", "title": "Flowdroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "/document/6227232", "title": "EXSYST: search-based GUI testing"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Hierarchy viewer"}, {"link": "", "title": "PUMA: programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Execution and property specifications for jpf-android"}, {"link": "", "title": "EvoDroid: segmented evolutionary testing of android apps"}, {"link": "/document/7381839", "title": "SIG-Droid: Automated system input generation for android applications"}, {"link": "", "title": "Efficiently, effectively detecting mobile app bugs with appdoctor"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115615"}
{"ref": [{"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Debugging with Gdb: The Gnu Source-level Debugger for Gdb Version 5.1. 1"}, {"link": "", "title": "Dynamic instrumentation of production systems"}, {"link": "", "title": "Locating system problems using dynamic instrumentation"}, {"link": "", "title": "The lttng tracer: A low impact performance and behavior monitor for gnu/linux"}, {"link": "", "title": "Utrace"}, {"link": "", "title": "Ptrace:linux Process Trace"}, {"link": "", "title": "An api for runtime code patching"}, {"link": "", "title": "Logging in Java with the JDK 1.4 Logging API and Apache log4j"}, {"link": "", "title": "Log4c: Logging for C Library"}, {"link": "", "title": "Livepatch"}, {"link": "", "title": "Katana: Towards patching as a runtime part of the compiler-linker-loader toolchain"}, {"link": "", "title": "A runtime code modification method for application programs"}, {"link": "", "title": "Pannus: A Hot Patching Tool"}, {"link": "", "title": "Calling Conventions for Different Operating Systems"}, {"link": "", "title": "Pax Aslr Documentation"}, {"link": "", "title": "Gcc Options for Code Generation"}, {"link": "", "title": "Object Dump"}, {"link": "", "title": "Spec cpu2006 benchmark descriptions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693147"}
{"ref": [{"link": "/document/5222784", "title": "What do we know about agile software development?"}, {"link": "", "title": "Currents trends, people, projects the top 10 burning research questions from practitioners"}, {"link": "", "title": "A unified approach for software policy modeling: Incorporating implementation into a modeling methodology"}, {"link": "/document/1174458", "title": "Multi-criteria task assignment in workflow management systems"}, {"link": "/document/1293077", "title": "A task allocation optimizer for software construction"}, {"link": "/document/4054897", "title": "Task coordination in an agile distributed software development environment"}, {"link": "", "title": "A market based approach for resolving resource constrained task allocation problems in a software development process"}, {"link": "", "title": "Planning poker or how to avoid analysis paralysis while release planning"}, {"link": "", "title": "Introduction: Special issue on distributed constraint satisfaction"}, {"link": "", "title": "Stochastic Network Optimization with Application to Communication and Queueing Systems"}, {"link": "", "title": "Multi-Agent System: An Introduction to Distributed Artificial Intelligence"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693151"}
{"ref": [{"link": "", "title": "Computer Organization and Design: The Hardware/Software Interface"}, {"link": "", "title": "Designing and Building Parallel Programs (Online)"}, {"link": "", "title": "A universal modular actor formalism for artificial intelligence"}, {"link": "", "title": "Programming Erlang"}, {"link": "", "title": "Actor-based programming with the asynchronous agents library"}, {"link": "", "title": "Flow-Based Programming: A New Approach to Application Development"}, {"link": "/document/6693080", "title": "JFlow: Practical refactorings for flow-based parallelism"}, {"link": "", "title": "Modern C++ Design: Generic Programming and Design Patterns Applied"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372089"}
{"ref": [{"link": "", "title": "Supporting active learning and example based instruction with classroom technology"}, {"link": "", "title": "Approximate matching of hierarchical data using pq-grams"}, {"link": "", "title": "Example-centric programming: Integrating web search into the development environment"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Fast exact graph matching using adjacency matrices"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/1695784", "title": "Cognitive view of reuse and redesign"}, {"link": "", "title": "Using critics to empower users"}, {"link": "", "title": "A search engine for finding highly relevant applications"}, {"link": "", "title": "Assieme: finding and leveraging implicit references in a web search interface for programmers"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "An evaluation of the strategies of sorting, filtering, and grouping api methods for code completion"}, {"link": "", "title": "Debugging reinvented: Asking and answering why and why not questions about program behavior"}, {"link": "", "title": "The role of conceptual knowledge in API usability"}, {"link": "", "title": "Six learning barriers in end-user programming systems"}, {"link": "", "title": "Data-driven program synthesis for hint generation in programming tutors"}, {"link": "", "title": "Dynamic query-based debugging of object-oriented programs"}, {"link": "", "title": "An intelligent sql tutor on the web"}, {"link": "", "title": "Understanding source code evolution using abstract syntax tree matching"}, {"link": "/document/1323804", "title": "A (sub)graph isomorphism algorithm for matching large graphs"}, {"link": "", "title": "Usability issues in the design of novice programming systems"}, {"link": "", "title": "Reducing the variability of programmers' performance through explained examples"}, {"link": "", "title": "Automating hint generation with solution space path construction"}, {"link": "/document/5235134", "title": "Recom-mendation systems for software engineering"}, {"link": "", "title": "CriticAL: A Critic for APIs and Libraries"}, {"link": "", "title": "Pattern Matching in Strings, Trees and Arrays"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "The tree-to-tree correction problem"}, {"link": "", "title": "Soot \u2013 a Java Bytecode Optimization Framework"}, {"link": "", "title": "Graph similarity scoring and matching"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372017"}
{"ref": [{"link": "", "title": "Finding safety errors with ACO. In 9th Intl. Conf. on Genetic and Evolutionary Computation (GECCO\u201807)"}, {"link": "", "title": "Searching for liveness property violations in concurrent systems with AC O. In 10th Intl. Conf. on Genetic and Evolutionary Computation (GECCO\u201808)"}, {"link": "", "title": "Formal Methods in System Design"}, {"link": "", "title": "Formal Modeling and Analysis of Timed Systems (FORMATS\u201803)"}, {"link": "/document/5704237", "title": "IEEE Trans. on Software Engineering"}, {"link": "", "title": "33rd Intl. Conf. on Software Engineering (ICSE\u201811)"}, {"link": "", "title": "Computer Aided Verification (CAV\u201896)"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "10th Intl. Conf. on Concurrency Theory (CONCUR\u201899)"}, {"link": "", "title": "17th Intl. Conf. on Tools and Algorithms Construction and Analysis of Systems (TACAS'11)"}, {"link": "", "title": "17th Intl. Conf. on Tools and Algorithms Construction and Analysis of Systems (TACAS\u201813)"}, {"link": "", "title": "UPPAAL - a tool suite for automatic verification of real-time systems"}, {"link": "", "title": "15th Intl. Conf. on Foundations of Software Technology and Theoretical Computer Science (FSTTCS\u201895)"}, {"link": "/document/962984", "title": "Computer"}, {"link": "", "title": "ACM SIGACT News"}, {"link": "", "title": "Artificial Intelligence"}, {"link": "", "title": "18th Intl. Conf. on Fundamental Approaches to Software Engineering (FASE\u201815)"}, {"link": "", "title": "Communications of the ACM"}, {"link": "", "title": "IEEE Trans. on Software Engineering"}, {"link": "", "title": "31st Intl. Conf. on Software Engineering (ICSE\u201809)"}, {"link": "", "title": "7th Intl. Conf. on Genetic and Evolutionary Computation (GECCO\u201805)"}, {"link": "", "title": "Artificial Intelligence"}, {"link": "", "title": "NASA Formal Methods"}, {"link": "", "title": ""}, {"link": "", "title": "Model checking"}, {"link": "/document/4222617", "title": "29th Intl. Conf. on Software Engineering (ICSE\u201807)"}, {"link": "/document/996017", "title": "IEEE Trans. on Evolutionary Computation"}, {"link": "", "title": "Advances in Engineering Software, 42:760\u2013771"}, {"link": "/document/5415586", "title": "IEEE Trans. on Evolutionary Computation"}, {"link": "", "title": "35th Intl. Conf. on Software Engineering (ICSE\u201813)"}, {"link": "", "title": "Formal Aspects of Computing"}, {"link": "", "title": ""}, {"link": "/document/6152257", "title": "IEEE Trans. on Software Engineering"}, {"link": "", "title": "Metaheuristics for multiobjective optimisation"}, {"link": "", "title": ""}, {"link": "", "title": "Formal Aspects of Computing"}, {"link": "", "title": "18th Intl. Software Product Line Conf"}, {"link": "", "title": ""}, {"link": "", "title": "ACM Computing Surveys"}, {"link": "", "title": "Empirical Software Engineering and Verification"}, {"link": "", "title": "Genetic Programming"}, {"link": "/document/1595801", "title": "2nd Intl. Conf. on Quantitative Evaluation of Systems (QEST\u201805)"}, {"link": "", "title": "Performance Evaluation"}, {"link": "", "title": "15th Intl. Workshop on Verification of Infinite-State Systems (INFINITY\u2019"}, {"link": "", "title": "Genetic Programming: On the Programming of Computers by Means of Natural Selection"}, {"link": "", "title": ""}, {"link": "", "title": "23rd Intl. Conf. on Computer Aided Verification (CAV\u201811)"}, {"link": "", "title": "Int. Journal on Software Tools for Technology Transfer"}, {"link": "", "title": "World Automation Congress (WAC\u201814)"}, {"link": "", "title": "ACM Trans. on Software Engineering and Methodology"}, {"link": "", "title": "Intl. Journal of Intelligent Systems"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/5406532", "title": "IEEE Trans. on Software Engineering"}, {"link": "/document/952737", "title": "IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems"}, {"link": "", "title": ""}, {"link": "/document/6693104", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "/document/4378215", "title": "IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems"}, {"link": "", "title": "24th Intl. Conf. on Tools with Artificial Intelligence (ICTAI\u201812)"}, {"link": "", "title": "Multiobjective Evolutionary Algorithms: Classifications, Analyses, and New Innovations"}, {"link": "", "title": "ACM Computing Surveys, 41(4):19"}, {"link": "", "title": "17th Intl. Conf. on Computer Aided Verification (CAV\u201805)"}, {"link": "", "title": "Journal of Artificial Intelligence Research (JAIR)"}, {"link": "", "title": "4th Intl. Conf. on Evolutionary Multi-criterion Optimization (EMO\u201807)"}, {"link": "", "title": "Multiobjective Optimization"}, {"link": "", "title": "Evolutionary Methods for Design Optimization and Control with Applications to Industrial Problems (EUROGEN\u201801)"}, {"link": "/document/797969", "title": "IEEE Trans. on Evolutionary Computation"}, {"link": "/document/1197687", "title": "IEEE Trans. on Evolutionary Computation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372021"}
{"ref": [{"link": "/document/7181430", "title": "I know what you did last summer - an investigation of how developers spend their time"}, {"link": "", "title": "An integrated measure of software maintainability"}, {"link": "", "title": "Measuring Understandability of Aspect-Oriented Code"}, {"link": "", "title": "A model for measuring software understandability"}, {"link": "/document/6227188", "title": "How do professional developers comprehend software?"}, {"link": "", "title": "Evaluation of Software Understandability Using Rough Sets"}, {"link": "", "title": "Evaluating Human-Assessed Software Maintainability Metrics"}, {"link": "/document/1421034", "title": "Theories, methods and tools in program comprehension: past, present and future"}, {"link": "/document/624572", "title": "How do program understanding tools affect how programmers understand programs?"}, {"link": "/document/5332232", "title": "Learning a metric for code readability"}, {"link": "", "title": "A simpler model of software readability"}, {"link": "", "title": "A general software readability model"}, {"link": "", "title": "Modeling readability to improve unit tests"}, {"link": "/document/7503707", "title": "Improving code readability models with textual features"}, {"link": "", "title": "Evaluation of software understandability based on fuzzy matrix"}, {"link": "", "title": "An exploratory study of the effect of aspect-oriented programming on maintainability"}, {"link": "/document/1281406", "title": "Evolution of understandability in oss projects"}, {"link": "", "title": "Effective identifier names for comprehension and memory"}, {"link": "", "title": "What's in a name? a study of identifiers"}, {"link": "", "title": "Restructuring program identifier names"}, {"link": "/document/4026863", "title": "Syntactic identifier conciseness and consistency"}, {"link": "/document/5069482", "title": "Mining source code to automatically split identifiers for software analysis"}, {"link": "", "title": "Linguistic antipatterns: What they are and how developers perceive them"}, {"link": "", "title": "Comparative study of cognitive complexity measures"}, {"link": "/document/6178", "title": "Evaluating software complexity measures"}, {"link": "/document/979986", "title": "A hierarchical model for object-oriented design quality assessment"}, {"link": "", "title": "Measuring the difficulty of code comprehension tasks using software metrics"}, {"link": "/document/1166925", "title": "An approach to experimental evaluation of software understandability"}, {"link": "", "title": "ISO/IEC."}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "How to write plain English: A book for lawyers and consumers"}, {"link": "", "title": "How documentation evolves over time"}, {"link": "", "title": "Algorithm design"}, {"link": "", "title": "Exploratory data analysis"}, {"link": "", "title": "A new measure of rank correlation"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115654"}
{"ref": [{"link": "", "title": "Writing effective use cases"}, {"link": "", "title": "Automated Classification of Business Rules from Text"}, {"link": "", "title": "Comparing conceptual, divisive and agglomerative clustering for learning taxonomies from text"}, {"link": "", "title": "Annotation of scientific summaries for information retrieval"}, {"link": "", "title": "Sentence extraction and rhetorical classification for flexible abstracts"}, {"link": "", "title": "Defining Business Rules, What Are They Really?"}, {"link": "", "title": "Stratified Sampling Method"}, {"link": "", "title": "Tags: Penn English Treebank"}, {"link": "", "title": "Agile Business Rule Development"}, {"link": "", "title": "Business Rule Concepts: Getting to the Point of Knowledge (Third Edition)"}, {"link": "", "title": "Business RULES - Show power, promise"}, {"link": "", "title": "The Business Rule Book: Classifying, Defining and Modeling Rules"}, {"link": "", "title": "Designing database applications with objects and rules"}, {"link": "/document/287770", "title": "Challenges to the field of reverse engineering"}, {"link": "", "title": "A decision making methodology in support of the business rules life cycle"}, {"link": "", "title": "Classification and representation of business rules"}, {"link": "", "title": "Alignment of business process management and business rules"}, {"link": "", "title": "The specification of business rules: A comparison of selected methodologies"}, {"link": "", "title": "Automated classification of non-functional requirements"}, {"link": "/document/1560402", "title": "Rule extraction methodology by using XML for business rules documentation"}, {"link": "", "title": "A text mining technique using association rules extraction"}, {"link": "", "title": "Mining rule semantics to understand legislative compliance"}, {"link": "", "title": "Automated extraction of security policies from natural-language software documents"}, {"link": "/document/6227137", "title": "Inferring method specifications from natural language API descriptions"}, {"link": "", "title": "Knowledge Assisted Requirements Evolution"}, {"link": "/document/5623810", "title": "A semantic and collaborative platform for agile requirements evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693114"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Managing Forked Product Variants"}, {"link": "", "title": ""}, {"link": "", "title": "A Survey of Program Slicing Techniques"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Featherweight Java: A Minimal Core Calculus for Java and GJ"}, {"link": "", "title": "Type-Checking Software Product Lines - A Formal Approach"}, {"link": "", "title": "Classifying Change Types for Qualifying Change Couplings"}, {"link": "", "title": "Change Detection in Hierarchically Structured Information"}, {"link": "", "title": "A Framework for Evaluating Regression Test Selection Techniques"}, {"link": "", "title": "Chianti: A Tool for Change Impact Analysis of Java Programs"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Precise Interprocedural Dataflow Analysis with Applications to Constant Propagation"}, {"link": "", "title": "Differential Symbolic Execution"}, {"link": "", "title": "Differential Static Analysis: Opportunities, Applications, and Challenges"}, {"link": "", "title": ""}, {"link": "", "title": "Fine-grained and Accurate Source Code Differencing"}, {"link": "", "title": "A Survey on Tree Edit Distance and Related Problems"}, {"link": "/document/4656419", "title": "Diff/TS: A Tool for Fine-Grained Structural Change Analysis"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "/document/1201210", "title": "Whole Program Path-Based Dynamic Impact Analysis"}, {"link": "/document/4658057", "title": "Change impact analysis for AspectJ programs"}, {"link": "", "title": "Localizing Failure-inducing Program Edits Based on Spectrum Information"}, {"link": "", "title": "Change Impact Identification in Object Oriented Software Maintenance"}, {"link": "", "title": "Leveraging Field Data for Impact Analysis and Regression Testing"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-inducing Input"}, {"link": "", "title": ""}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles, and Techniques"}, {"link": "", "title": "Guaranteeing Syntactic Correctness for all Product Line Variants: A Language-Independent Approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372056"}
{"ref": [{"link": "", "title": "Architecting principles for systems-of-systems"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "/document/6401109", "title": "Monitoring our requirements"}, {"link": "", "title": "A requirements monitoring framework for enterprise systems"}, {"link": "", "title": "Monitoring architectural properties in dynamic component-based systems"}, {"link": "", "title": "Supporting strong reliability for distributed complex event processing systems"}, {"link": "", "title": "Self-adaptive software needs quantitative verification at runtime"}, {"link": "/document/6227237", "title": "Runtime monitoring of component changes with Spy@Runtime"}, {"link": "", "title": "Foundations for the run-time monitoring of reactive systems - fundamentals of the MaC language"}, {"link": "", "title": "A formal monitoring-based framework for software development and analysis"}, {"link": "", "title": "Efficient runtime monitoring with metric temporal logic: A case study in the Android operating system"}, {"link": "", "title": "Monitoring of real-time properties"}, {"link": "", "title": "RBSLA - a declarative rule-based service level agreement language based on RuleML"}, {"link": "", "title": "Extended OCL for goal monitoring"}, {"link": "", "title": "Event-based multi-level service monitoring"}, {"link": "", "title": "Considering the exceptional: Incorporating exceptions into property specifications"}, {"link": "/document/244791", "title": "Monitoring distributed systems"}, {"link": "", "title": "Strengthening architectures of smart CPS by modeling them as runtime product-lines"}, {"link": "", "title": "Towards fully automatic execution monitoring"}, {"link": "", "title": "Efficient monitoring of safety properties"}, {"link": "", "title": "Kicker: A framework for application performance monitoring and dynamic software analysis"}, {"link": "", "title": "Instant consistency checking for the UML"}, {"link": "", "title": "Flexible and scalable consistency checking on product line variability models"}, {"link": "", "title": "ReMinds: A flexible runtime monitoring framework for systems of systems"}, {"link": "", "title": "A case study on testing, commissioning, and operation of very-large-scale software systems"}, {"link": "", "title": "Variability management for a runtime monitoring infrastructure"}, {"link": "", "title": "Requirements Engineering: From System Goals to UML Models to Software Specifications"}, {"link": "", "title": "Engineering runtime requirements-monitoring systems using MDA technologies"}, {"link": "", "title": "RELAX: a language to address uncertainty in self-adaptive systems requirement"}, {"link": "", "title": "An approach to monitor scenario-based temporal properties in web service compositions"}, {"link": "", "title": "Run-time monitoring of architecturally significant behaviors using behavioral profiles and aspects"}, {"link": "/document/5481367", "title": "Comprehensive monitoring of BPEL processes"}, {"link": "", "title": "Event processing for business: Organizing the real-time enterprise"}, {"link": "", "title": "Applying a consistency checking framework for heterogeneous models and artifacts in industrial product lines"}, {"link": "", "title": "Requirements monitoring in dynamic environments"}, {"link": "", "title": "Event handling in the J-OCM monitoring system"}, {"link": "", "title": "OMIS: Online Monitoring Interface Specification (v. 2.0)"}, {"link": "", "title": "The SERENITY runtime monitoring framework"}, {"link": "", "title": "Java-MaC: A run-time assurance approach for Java programs"}, {"link": "", "title": "Monitoring business constraints with the event calculus"}, {"link": "", "title": "Towards a model-driven infrastructure for runtime monitoring"}, {"link": "", "title": "Provably correct runtime monitoring"}, {"link": "", "title": "Domain-specific languages in practice: A user study on the success factors"}, {"link": "/document/6030048", "title": "Product line engineering using domain-specific languages"}, {"link": "", "title": "User guidance for creating precise and accessible property specifications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372060"}
{"ref": [{"link": "/document/1541846", "title": "Cloning by accident: An empirical study of source code cloning across software systems"}, {"link": "", "title": "Parameterized duplication in strings: Algorithms and an application to software maintenance"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "", "title": "Recommending adaptive changes for framework evolution"}, {"link": "/document/792593", "title": "Language independent approach for detecting duplicated code"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "", "title": "Comparing fine-grained source code changes and code churn for bug prediction"}, {"link": "/document/6224284", "title": "Can we predict types of code changes? An empirical analysis"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Non-essential changes in version histories"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "Memories of bug fixes"}, {"link": "", "title": "Using Slicing to Identify Duplication in Source Code"}, {"link": "/document/1610609", "title": "CP-Miner: Finding copy-paste and related bugs in large-scale software code"}, {"link": "/document/989796", "title": "Identification of high-level concept clones in source code"}, {"link": "", "title": "An evaluation of code similarity identification for the grow-and-prune model"}, {"link": "/document/6606596", "title": "LASE: Locating and applying systematic edits by learning from examples"}, {"link": "/document/4273078", "title": "Large-scale code reuse in open source software"}, {"link": "/document/5069476", "title": "Amassing and indexing a large sample of version control systems: Towards the census of public source code history"}, {"link": "", "title": "Mining continuous code changes to detect frequent program transformations"}, {"link": "", "title": "Is it dangerous to use version control histories to study source code evolution?"}, {"link": "/document/6007141", "title": "Clone management for evolving software"}, {"link": "", "title": "A graph-based approach to API usage adaptation"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs"}, {"link": "", "title": "A case study of cross-system porting in forked projects"}, {"link": "", "title": "REPERTOIRE: A cross-system porting analysis tool for forked software projects"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "/document/6226427", "title": "Reducing features to improve code change-based bug prediction"}, {"link": "", "title": "How do software engineers understand code changes?: An exploratory study in industry"}, {"link": "/document/6227176", "title": "Identifying Linux bug fixing patches"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "/document/4273265", "title": "Predicting defects for eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693078"}
{"ref": [{"link": "", "title": "Learning string transformations from examples"}, {"link": "", "title": "Matching lenses: Alignment and view update"}, {"link": "", "title": "Optimizing database-backed applications with query synthesis"}, {"link": "", "title": ""}, {"link": "", "title": "Synthesizing view definitions from data"}, {"link": "", "title": "Database Journal"}, {"link": "", "title": "LearnPADS: Automatic tool generation from ad hoc data"}, {"link": "", "title": "From dirt to shovels: Fully automatic tool generation from ad hoc data"}, {"link": "", "title": ""}, {"link": "", "title": "Generating accurate rule sets without global optimization"}, {"link": "", "title": "Dimensions in program synthesis"}, {"link": "", "title": "Automating string processing in spreadsheets using input-output examples"}, {"link": "", "title": "The WEKA data mining software: An update"}, {"link": "", "title": "Spreadsheet table transformations from examples"}, {"link": "", "title": "Automatic example queries for ad hoc databases"}, {"link": "", "title": "Wrangler: Interactive visual specification of data transformation scripts"}, {"link": "", "title": "SnipSuggest: Context-aware autocompletion for sql"}, {"link": "", "title": "Programming by demonstration using version space algebra"}, {"link": "", "title": "Version space algebra and its application to programming by demonstration"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Induction of decision trees"}, {"link": "", "title": "Database Management Systems"}, {"link": "", "title": "Learning semantic string transformations from examples"}, {"link": "", "title": ""}, {"link": "", "title": "Query by output"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6080769", "title": "Localizing failureinducing program edits based on spectrum information"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}, {"link": "/document/6606671", "title": "Practical semantic test simplification"}, {"link": "", "title": "Effective identification of failure-inducing changes: A hybrid approach"}, {"link": "", "title": "Combined static and dynamic automated test generation"}, {"link": "/document/6100145", "title": "Automated documentation inference to explain failed tests"}, {"link": "", "title": "Query-by-example: The invocation and definition of tables and forms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693082"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Proving termination of nonlinear command sequences"}, {"link": "", "title": "The SLAM toolkit"}, {"link": "", "title": "Satisfiability modulo theories"}, {"link": "", "title": "Software verification with validation of results"}, {"link": "", "title": "The software model checker blast"}, {"link": "", "title": "Cpachecker: A tool for configurable software verification"}, {"link": "", "title": "A training algorithm for optimal margin classifiers"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "/document/7371995", "title": "Synthesising interprocedural bit-precise termination proofs (T)"}, {"link": "", "title": "Counterexample-guided abstraction refinement for symbolic model checking"}, {"link": "", "title": "Linear invariant generation using non-linear constraint solving"}, {"link": "", "title": "Automatic discovery of linear restraints among variables of a program"}, {"link": "", "title": "Coarse sample complexity bounds for active learning"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "Guarded commands, nondeterminacy and formal derivation of programs"}, {"link": "", "title": "Inductive invariant generation via abductive inference"}, {"link": "", "title": "ICE: A robust framework for learning invariants"}, {"link": "", "title": "Learning invariants using decision trees and implication counterexamples"}, {"link": "", "title": "Learning invariants using decision trees and implication counterexamples"}, {"link": "", "title": "Query by committee made real"}, {"link": "", "title": "Automatically refining abstract interpretations"}, {"link": "", "title": "Program analysis as constraint solving"}, {"link": "", "title": "Constraint-based invariant inference over predicate abstraction"}, {"link": "", "title": "Invgen: An efficient invariant generator"}, {"link": "", "title": "Invgen: An efficient invariant generator"}, {"link": "", "title": "Abstractions from proofs"}, {"link": "", "title": "Software verification with blast"}, {"link": "", "title": "Kernel based algorithms for mining huge data sets"}, {"link": "", "title": "Interproc analyzer for recursive programs with numerical variables"}, {"link": "", "title": "Subpolyhedra: A (more) scalable approach to infer linear inequalities"}, {"link": "", "title": "A sequential algorithm for training text classifiers"}, {"link": "", "title": "Interpolation guided compositional verification (t)"}, {"link": "", "title": "Interpolation and sat-based model checking"}, {"link": "", "title": "Lazy abstraction with interpolants"}, {"link": "", "title": "The octagon abstract domain"}, {"link": "", "title": "Perceptrons: An Introduction to Computational Geometry"}, {"link": "", "title": "A survey of new trends in symbolic execution for software testing and analysis"}, {"link": "", "title": "Sequential minimal optimization: A fast algorithm for training support vector machines"}, {"link": "", "title": "Induction of decision trees"}, {"link": "", "title": "What good are experiments?"}, {"link": "", "title": "Less is more: Active learning with support vector machines"}, {"link": "", "title": "Active Learning"}, {"link": "", "title": "From invariant checking to invariant inference using randomized search"}, {"link": "", "title": "Simplifying loop invariant generation using splitter predicates"}, {"link": "", "title": "A data driven approach for algebraic loop invariants"}, {"link": "", "title": "Verification as learning geometric concepts"}, {"link": "", "title": "Interpolants as classifiers"}, {"link": "", "title": "Support vector machine active learning for image retrieval"}, {"link": "", "title": "Support vector machine active learning with applications to text classification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115689"}
{"ref": [{"link": "", "title": "Event Forecasting with Pattern Markov Chains"}, {"link": "/document/7029714", "title": "Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "/document/6693102", "title": "Mining branching-time scenarios"}, {"link": "", "title": "Javert: fully automatic mining of general temporal properties from dynamic traces"}, {"link": "", "title": "Genetic algorithms and machine learning"}, {"link": "", "title": "Learning from 6,000 Projects: Lightweight Cross-project Anomaly Detection"}, {"link": "", "title": "The WEKA Data Mining Software: An Update"}, {"link": "", "title": "Synergizing Specification Miners Through Model Fissions and Fusions (T)"}, {"link": "/document/7371998", "title": "General LTL Specification Mining (T)"}, {"link": "", "title": "Scalable specification mining for verification and diagnosis"}, {"link": "", "title": "Mining Software Specifications: Methodologies and Applications"}, {"link": "", "title": "Scenario-based and value-based specification mining: better together"}, {"link": "", "title": "Automatic Generation of Software Behavioral Models"}, {"link": "", "title": "Declarative Specification and Verification of Service Chore-ographies"}, {"link": "", "title": "Systems of Systems Engineering: Basic Concepts, Model-Based Techniques, and Research Directions"}, {"link": "", "title": "Automatic Generation of Object Usage Specifications from Large Method Traces"}, {"link": "", "title": "A Comparison Framework for Runtime Monitoring Approaches"}, {"link": "/document/6693129", "title": "A pattern-based approach to parametric specification mining"}, {"link": "", "title": "Mining Behavior Models from Enterprise Web Applications"}, {"link": "/document/4589215", "title": "Static Specification Mining Using Automata-Based Abstractions"}, {"link": "", "title": "Using Machine Learning to Infer Constraints for Product Lines"}, {"link": "", "title": "Process mining manifesto"}, {"link": "", "title": "Requirements Monitoring Frameworks: A Systematic Review"}, {"link": "", "title": "Developing a DSL-Based Approach for Event-Based Monitoring of Systems of Systems: Experiences and Lessons Learned"}, {"link": "", "title": "ReMinds: A Flexible Runtime Monitoring Framework for Systems of Systems"}, {"link": "", "title": "Mining Temporal Specifications for Error Detection"}, {"link": "", "title": "Mining binary constraints in the construction of feature models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115693"}
{"ref": [{"link": "", "title": "Eclipse JDT"}, {"link": "", "title": "Maven Central"}, {"link": "", "title": "TestMiner - Repository"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "", "title": "On the efficiency of automated testing"}, {"link": "", "title": "Automatically generating realistic test input from web services"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Similarity estimation techniques from rounding algorithms"}, {"link": "", "title": "Efficient search for inputs causing high floating-point errors"}, {"link": "", "title": "Guided GUI testing of Android apps with minimal restart and approximate learning"}, {"link": "", "title": "Efficient detection of thread safety violations via coverage-guided generation of concurrent tests"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet? (E)"}, {"link": "", "title": "Investigating the use of lexical information for software system clustering"}, {"link": "", "title": "JCrasher: an automatic robustness tester for Java"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "/document/6698889", "title": "Improving search-based test suite generation with dynamic symbolic execution"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Search-based system testing: High coverage, no false alarms"}, {"link": "", "title": "Debugging method names"}, {"link": "", "title": "OCAT: object capture-based automated testing"}, {"link": "", "title": "Incremental Latent Semantic Indexing for Automatic Traceability Link Evolution Management"}, {"link": "", "title": "Defects4j: a database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Combining Deep Learning with Information Retrieval to Localize Buggy Files for Bug Reports"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Nomen est omen: Exploring and exploiting similarities between argument and parameter names"}, {"link": "", "title": "Automatic text input generation for mobile testing"}, {"link": "", "title": "Sarma. Detecting near-duplicates for web crawling"}, {"link": "", "title": "Link: exploiting the web of data to generate test inputs"}, {"link": "/document/6200106", "title": "Search-based test input generation for string data types using the results of web queries"}, {"link": "", "title": "Leveraging Existing Tests in Automated Test Generation for Web Applications"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Detecting anomalies in the order of equally-typed method arguments"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "EventBreak: Analyzing the responsiveness of user interfaces through performance-guided test generation"}, {"link": "", "title": "QUICKAR: Automatic Query Reformulation for Concept Location Using Crowdsourced Knowledge"}, {"link": "", "title": "Retrieval from Software Libraries for Bug Localization: A Comparative Study of Generic and Composite Text Models"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Seeding strategies in search-based unit test generation"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "/document/6319228", "title": "Automated discovery of valid test strings from the web using dynamic regular expressions collation and natural language processing"}, {"link": "", "title": "Black-box string test case generation through a multi-objective optimization"}, {"link": "/document/7372009", "title": "Do automatically generated unit tests find real faults? an empirical study of effectiveness and challenges (T)"}, {"link": "", "title": "/*icomment: bugs or bad comments?*/"}, {"link": "", "title": "Dy-Gen: Automatic generation of high-coverage tests via mining gigabytes of dynamic traces"}, {"link": "", "title": "MSeqGen: Object-oriented unit-test generation via mining source code"}, {"link": "", "title": "Synthesizing method sequences for high-coverage testing"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "Z3-str: a z3-based string solver for web application analysis"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}, {"link": "", "title": "Learning to Rank for Question-Oriented Software Text Retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115617"}
{"ref": [{"link": "", "title": "Automating the addition of fault-tolerance"}, {"link": "", "title": "Synthesis of fault-tolerant concurrent programs"}, {"link": "/document/1459815", "title": "Principles of Model Checking"}, {"link": "", "title": "Model checking fault tolerant systems"}, {"link": "", "title": "DCTL: A branching time temporal logic for fault-tolerant system verification"}, {"link": "", "title": "Design and synthesis of synchronization skeletons using branching-time temporal logic"}, {"link": "", "title": "Characterizing fault-tolerant systems by means of simulation relations"}, {"link": "", "title": "Synthesizing masking fault-tolerant systems from deontic specifications"}, {"link": "", "title": "FTSyn: A framework for automatic synthesis of fault-tolerance"}, {"link": "", "title": "Fundamentals of fault-tolerant distributed computing in asynchronous environments"}, {"link": "/document/492576", "title": "Computing simulations on finite and infinite graphs"}, {"link": "", "title": "On bisimulation, fault-monotonicity and provable fault-tolerance"}, {"link": "", "title": "A formal method for developing provably correct fault-tolerant systems using partial refinement and composition"}, {"link": "/document/1311891", "title": "Automated synthesis of multitolerance"}, {"link": "", "title": "Specifying and verifying fault-tolerant systems"}, {"link": "", "title": "Applications of deontic logic in computer science: A concise overview"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693149"}
{"ref": [{"link": "", "title": "Do developers update their library dependencies?"}, {"link": "/document/4400160", "title": "A model to understand the building and running inter-dependencies of software"}, {"link": "/document/7081868", "title": "Tracking known security vulnerabilities in proprietary software systems"}, {"link": "", "title": "Studying reuse of outdated third-party code in open source projects"}, {"link": "", "title": "Top 10 Security Risks"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "", "title": "Beyond api signatures: An empirical study on behavioral backward incompatibilities of java software libraries"}, {"link": "", "title": "Creating a shared understanding of testing culture on a social coding site"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in github"}, {"link": "", "title": "Disrupting developer productivity one bot at a time"}, {"link": "/document/7180096", "title": "Wait for it: Determinants of pull request evaluation latency on GitHub"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "A graph-based approach to api usage adaptation"}, {"link": "", "title": "How to break an api: Cost negotiation and community values in three software ecosystems"}, {"link": "/document/7884604", "title": "An empirical comparison of dependency issues in oss packaging ecosystems"}, {"link": "", "title": "Why do developers use trivial packages? an empirical case study on npm"}, {"link": "", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "", "title": "Coding In-depth Semistructured Interviews"}, {"link": "", "title": "Belief & evidence in empirical software engineering"}, {"link": "", "title": "Code drones"}, {"link": "", "title": "The\u2018problem'with automation: inappropriate feedback and interaction, not\u2018over-automation\u2019"}, {"link": "", "title": "Early identification of incompatibilities in multi-component upgrades"}, {"link": "/document/6676878", "title": "An empirical study of api stability and adoption in the android ecosystem"}, {"link": "", "title": "On the reaction to deprecation of 25,357 clients of 4+1 popular java apis"}, {"link": "", "title": "How do apis evolve&quest; a story of refactoring: Research articles"}, {"link": "", "title": "Recovering inter-project dependencies in software ecosystems"}, {"link": "", "title": "How the apache community upgrades dependencies: An evolutionary study"}, {"link": "", "title": "Apiwave: Keeping track of api popularity and migration"}, {"link": "", "title": "Catchup!: Capturing and replaying refactorings to support api evolution"}, {"link": "", "title": "Recommending adaptive changes for framework evolutien"}, {"link": "/document/4359473", "title": "Api-evolution support with diff-catchup"}, {"link": "", "title": "Seeking the ground truth: A retroactive study on the evolution and migration of software libraries"}, {"link": "", "title": "Why google stores billions of lines of code in a single repository"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115621"}
{"ref": [{"link": "", "title": "Semantic differential repair for input validation and sanitization"}, {"link": "", "title": "Coping with an open bug repository"}, {"link": "", "title": "Congress on Evolutionary Computation"}, {"link": "/document/4222647", "title": "SYNTHESIS: A tool for automatically assembling correct and distributed component-based systems"}, {"link": "", "title": "Yuriy Brun, Premkumar Devanbu, Mark Harman, and Federica Sarro. The plastic surgery hypothesis. In"}, {"link": "", "title": "Mark Harman, Yue Jia, Alexandru Marginean, and Justyna Petke. Automated software transplantation. In"}, {"link": "", "title": ""}, {"link": "", "title": "Reversible debugging software. Technical report, University of Cambridge"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Rinard. Detecting and escaping infinite loops with Jolt"}, {"link": "", "title": "Automatic recovery from runtime failures"}, {"link": "", "title": "Automatic workarounds for web applications"}, {"link": "/document/1702368", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": "Journal of Systems and Software (JSS)"}, {"link": "", "title": "Program transformations to fix C integers"}, {"link": "", "title": "Generating fixes from object behavior anomalies"}, {"link": "", "title": "Tools and Algorithms for the Construction and Analysis of Systems"}, {"link": "", "title": "International Conference on Software Testing, Verification, and Validation"}, {"link": "", "title": ""}, {"link": "", "title": "Automatic repair of real bugs: An experience report on the Defects4J dataset"}, {"link": "", "title": "ACMI/IEEE International Conference on Software Engineering (ICSE) Formal Demonstration track"}, {"link": "", "title": "Science"}, {"link": "", "title": "Bryan Landau, and Westley Weimer. A human study of patch maintainability. In"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "CodeHint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Workshop on Search-driven Development: Users, Infrastructure, Tools, and Evaluation (SUITE)"}, {"link": "", "title": "Specification-based program repair using SAT"}, {"link": "", "title": "Synthesizing geometry constructions"}, {"link": "/document/6606704", "title": "Query quality prediction and reformulation for source code search: The refoqus tool"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": "BugFix: A learning-based tool to assist developers in fixing bugs"}, {"link": "", "title": "ACM/\u00d7IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Mary Jean Harrold, and John Stasko. Visualization of test information to assist fault localization. In"}, {"link": "", "title": "cloning considered harmful"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Communications of the ACM"}, {"link": "", "title": "Genetic Programming: On the Programming of Computers by Means of Natural Selection"}, {"link": "", "title": "AMC/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "/document/6035728", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": "SIGPLAN Conference on Programming Language Design and Implementation (PLDI)"}, {"link": "", "title": ""}, {"link": "", "title": "Context-aware fixing of concurrency bugs"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "DirectFix: Looking for simple program repairs"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "IEEE Transactions on Evolutionary Computation"}, {"link": "", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": "Automated Software Engineering"}, {"link": "", "title": "and Martin Rinard. Automatically patching errors in deployed software. In"}, {"link": "", "title": "ACM Transactions on Software Engineering and Methodology (TOSEM)"}, {"link": "", "title": "Efficient automated program repair through fault-recorded testing prioritization"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": ""}, {"link": "", "title": "IEEE Security and Privacy"}, {"link": "", "title": ""}, {"link": "", "title": "ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)"}, {"link": "", "title": ""}, {"link": "", "title": "Earl Barr, Claire Le Goues, and Yuriy Brun. Is the cure worse than the disease? Overfitting in automated program repair. In"}, {"link": "", "title": "Solving the Search for Source Code"}, {"link": "", "title": ""}, {"link": "", "title": "Sebastian Elbaum, and Daniel Dobos. Solving the search for source code"}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": ""}, {"link": "", "title": "International Conference on Generative Programming and Component Engineering (GPCE)"}, {"link": "", "title": "Automatic program repair with evolutionary computation"}, {"link": "", "title": "IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/4228638", "title": "How long will it take to fix this bug?"}, {"link": "", "title": "Conference on Genetic and Evolutionary Computation (GECCO)"}, {"link": "", "title": "ACM Transactions on Software Engineering and Methodology (TOSEM)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372019"}
{"ref": [{"link": "/document/1291833", "title": "Model-based performance prediction in software development: A survey"}, {"link": "", "title": "Software engineering economics"}, {"link": "", "title": "Coverage and adequacy in software product line testing"}, {"link": "", "title": "Modeling decision tree performance with the power law"}, {"link": "", "title": "Variability-aware performance prediction: A statistical learning approach"}, {"link": "", "title": "Smoothing techniques: With implementation in S"}, {"link": "", "title": "Static versus dynamic sampling for data mining"}, {"link": "", "title": "Practical combinatorial testing"}, {"link": "/document/4525537", "title": "Practical combinatorial testing: Beyond pairwise"}, {"link": "", "title": "Improving data mining utility with projective sampling"}, {"link": "", "title": "Data reduction using multiple models integration"}, {"link": "", "title": "Improving progressive sampling via meta-learning on learning curves"}, {"link": "", "title": "On issues of instance selection"}, {"link": "", "title": "Engineering statistics"}, {"link": "", "title": "Efficient progressive sampling"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "", "title": "Maximizing classifier utility when there are data acquisition and modeling costs"}, {"link": "", "title": "Automated inference of goal-oriented performance prediction functions"}, {"link": "/document/1553572", "title": "Main effects screening: A distributed continuous quality assurance process for monitoring performance degradation in evolving software systems"}, {"link": "/document/7372025", "title": "Performance prediction of configurable software systems by Fourier learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372023"}
{"ref": [{"link": "", "title": "Bugzilla, a Bug-Tracking System"}, {"link": "", "title": "JIRA: plan, track, and release software."}, {"link": "", "title": "Github, a Web-based Git or Version Control Repository and Internet Hosting Service"}, {"link": "", "title": "Software release planning"}, {"link": "/document/7181530", "title": "Guidelines for benchmarking automated software traceability techniques"}, {"link": "", "title": "Empirical studies in software and systems traceability"}, {"link": "", "title": "How API documentation fails"}, {"link": "", "title": "An empirical study on evolution of API documentation"}, {"link": "", "title": "It's not a Bug, it's a Feature: How Misclassification Impacts Bug Prediction"}, {"link": "/document/7829407", "title": "The work life of developers: Activities, switches and perceived productivity"}, {"link": "", "title": "A Linguistic Analysis of How People Describe Software Problems"}, {"link": "", "title": "Extracting Structural Information from Bug Reports"}, {"link": "", "title": "What Makes a Good Bug Report?"}, {"link": "", "title": "How to Write a Feature Request"}, {"link": "", "title": "How do I Write a Good Feature Request?"}, {"link": "", "title": "Understanding Computers and Cognition: A New Foundation for Design"}, {"link": "", "title": "The Stanford Typed Dependencies Representation"}, {"link": "", "title": "Building a Large Annotated Corpus of English: The Penn Treebank"}, {"link": "", "title": "Fuzzy Methods in Machine Learning and Data Mining: Status and Prospects"}, {"link": "", "title": "Mining Association Rules Between Sets of Items in Large Databases"}, {"link": "", "title": "An Introduction to Information Retrieval"}, {"link": "", "title": "Selecting and Interpreting Measures of Thematic Classification Accuracy"}, {"link": "", "title": "Extracting structural information from bug reports"}, {"link": "", "title": "Machine Learning in Automated Text Categorization"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "Term-weighting Approaches in Automatic Text Retrieval"}, {"link": "", "title": "What Would Users Change in My App? Summarizing App Reviews for Recommending Software Changes"}, {"link": "", "title": "Rascal: Calculation of Graph Similarity using Maximum Common Edge Subgraphs"}, {"link": "", "title": "Automated Extraction and Clustering of Requirements Glossary Terms"}, {"link": "", "title": "The Key Roles of Maintainability in an Ontology for System Qualities"}, {"link": "/document/6240488", "title": "Using IR methods for Labeling Source Code Artifacts: Is it Worthwhile?"}, {"link": "", "title": "Au-tomated Support for Managing Feature Requests in Open Forums"}, {"link": "", "title": "Personas in the Middle: Automated Support for Creating Personas as Focal Points in Feature Gathering Forums"}, {"link": "", "title": "Semi-automation for Ambiguity Resolution in Open Source Software Requirements"}, {"link": "/document/7765547", "title": "Is It a New Feature or Simply Don't Know Yet? On Automated Redundant OSS Feature Requests Identification"}, {"link": "/document/6693088", "title": "Automatic Recommendation of API Methods from Feature Requests"}, {"link": "/document/7371991", "title": "Development Emails Content Analyzer: Intention Mining in Developer Discussions (T)"}, {"link": "/document/7765522", "title": "Software Feature Request Detection in Issue Tracking Systems"}, {"link": "", "title": "How Can I Improve my App? Classifying User Reviews for Software Maintenance and Evolution"}, {"link": "/document/7320414", "title": "Bug report, Feature Request, or simply Praise? on Automatically Classifying app Reviews"}, {"link": "", "title": "Release Planning of Mobile Apps based on User Reviews"}, {"link": "/document/7332475", "title": "User Reviews Matter! Tracking Crowdsourced Reviews to Support Evolution of Successful Apps"}, {"link": "", "title": "Automatic fine-grained issue report reclassification"}, {"link": "", "title": "Ardoc: App reviews development oriented classifier"}, {"link": "/document/6240510", "title": "Mining Source Code Descriptions from Developer Communications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115656"}
{"ref": [{"link": "/document/5280648", "title": "Models@runtime"}, {"link": "/document/5280651", "title": "Models@runtime to support dynamic adaptation"}, {"link": "/document/6606549", "title": "Managing non-functional uncertainty via model-driven adaptivity"}, {"link": "/document/6606550", "title": "Guidearch: guiding the exploration of architectural solution space under uncertainty"}, {"link": "", "title": "Self-adaptive software needs quantitative verification at runtime"}, {"link": "/document/6606552", "title": "Learning revised models for planning in adaptive systems"}, {"link": "", "title": "Self-adaptation through incremental generative model transformations at runtime"}, {"link": "", "title": "Hope for the best, prepare for the worst: multi-tier control for adaptive systems"}, {"link": "", "title": "Presence-condition simplification in highly configurable systems"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "", "title": "Software Engineering for Self-Adaptive Systems: A Second Research Roadmap"}, {"link": "", "title": "Reliability of runtime quality-of-service evaluation using parametric model checking"}, {"link": "", "title": "Family-based performance analysis of variant-rich software systems"}, {"link": "/document/7372029", "title": "Scaling size and parameter spaces in variability-aware software performance models"}, {"link": "", "title": "Symbolic model checking of product-line requirements using sat-based methods"}, {"link": "", "title": "Symbolic performance adaptation"}, {"link": "", "title": "An analytical model for multi-tier internet services and its applications"}, {"link": "", "title": "Adaptive control of multi-tiered web applications using queueing predictor"}, {"link": "", "title": "Con-trolling quality of service in multi-tier web applications"}, {"link": "", "title": "A capacity planning process for performance assurance of component-based distributed systems"}, {"link": "/document/4221619", "title": "The future of software performance engineering"}, {"link": "", "title": "Model-Based Software Performance Analysis"}, {"link": "", "title": "Software performance engineering then and now: A position paper"}, {"link": "", "title": "Solutions of ordinary differential equations as limits of pure Markov processes"}, {"link": "", "title": "Continuous approximation of collective system behaviour: A tutorial"}, {"link": "", "title": "Automated design of self-adaptive software with control-theoretical formal guarantees"}, {"link": "", "title": "Control theory for model-based performance-driven software adaptation"}, {"link": "", "title": "Model predictive control: Theory and practice-a survey"}, {"link": "/document/5374030", "title": "On the application of predictive control techniques for adaptive performance management of computing systems"}, {"link": "", "title": "Mixed integer programming: Analyzing 12 years of progress"}, {"link": "", "title": "Queueing model based network server performance control"}, {"link": "", "title": "Design and evaluation of load control in web server systems"}, {"link": "", "title": "Optimal cloud resource auto-scaling for web applications"}, {"link": "", "title": "Replica placement in cloud through simple stochastic model predictive control"}, {"link": "", "title": "PRISM 4.0: Verification of probabilistic real-time systems"}, {"link": "", "title": "Proactive self-adaptation under uncertainty: A probabilistic model checking approach"}, {"link": "", "title": "PRIMA-UML: a performance validation incremental methodology on early uml diagrams"}, {"link": "", "title": "Performance evaluation of UML software architectures with multiclass queueing network models"}, {"link": "", "title": "Performance model interchange format (PMIF 2): A comprehensive approach to queueing network model interoperability"}, {"link": "", "title": "Integrating performance analysis in the model driven development of software product lines"}, {"link": "/document/6030049", "title": "Automatic derivation of a product performance model from a software product line model"}, {"link": "/document/6314480", "title": "A fluid model for layered queueing networks"}, {"link": "", "title": "A proactive approach for runtime self-adaptation based on queueing network fluid analysis"}, {"link": "", "title": "Optimal static load balancing in distributed computer systems"}, {"link": "", "title": "Queueing networks and Markov chains: modeling and performance evaluation with computer science applications"}, {"link": "/document/1160055", "title": "The vision of autonomic computing"}, {"link": "", "title": "Julia: A fresh approach to numerical computing"}, {"link": "", "title": "Non-convex mixed-integer nonlinear programming: A survey"}, {"link": "", "title": "On the copositive representation of binary and continuous nonconvex quadratic programs"}, {"link": "", "title": "Load balancing for heterogeneous web servers"}, {"link": "", "title": "Toward a cloud-ready dynamic load balancer based on the apache web server"}, {"link": "/document/4515874", "title": "Performance model estimation and tracking using optimal filters"}, {"link": "", "title": "Integrated estimation and tracking of performance model parameters with autoregressive trends"}, {"link": "/document/7194574", "title": "Lightweight adaptive filtering for efficient learning and updating of probabilistic models"}, {"link": "", "title": "Model evolution by run-time parameter adaptation"}, {"link": "", "title": "Computing missing service demand parameters for performance models"}, {"link": "", "title": "On the predictive properties of performance models derived through input-output relationships"}, {"link": "", "title": "Model-based performance analysis of software architectures under uncertainty"}, {"link": "", "title": "Performance-based selection of software and hardware features under parameter uncertainty"}, {"link": "/document/4221625", "title": "Self-managed systems: an architectural challenge"}, {"link": "", "title": "Software engineering for self-adaptive systems: A research roadmap"}, {"link": "", "title": "Software engineering processes for self-adaptive systems"}, {"link": "", "title": "Efficient autoscaling in the cloud using predictive models for workload forecasting"}, {"link": "", "title": "Dynamic energy-aware capacity provisioning for cloud computing environments"}, {"link": "", "title": "A discrete-time feedback controller for containerized cloud applications"}, {"link": "", "title": "Continuous approximation of PEPA models and Petri nets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115660"}
{"ref": [{"link": "", "title": "A survey of variability modeling in industrial practice"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "An overview of feature-oriented software development"}, {"link": "/document/4339252", "title": "Feature diagrams and logics: There and back again"}, {"link": "/document/5070526", "title": "Reasoning about edits to feature models"}, {"link": "", "title": "Design and implementation of the sweble wikitext parser: Unlocking the structured data of wikipedia"}, {"link": "", "title": "The anatomy of a sales configurator: An empirical study of 111 cases"}, {"link": "", "title": "Thinking is bad: Implications of human error research for spreadsheet research and practice"}, {"link": "", "title": "UCheck: A spreadsheet type checker for end users"}, {"link": "", "title": "Automatically extracting class diagrams from spreadsheets"}, {"link": "", "title": "Type-safe evolution of spreadsheets"}, {"link": "/document/6227171", "title": "Detecting and visualizing inter-worksheet smells in spreadsheets"}, {"link": "", "title": "On extracting feature models from product descriptions"}, {"link": "", "title": "On-demand feature recommendations derived from mining public product descriptions"}, {"link": "/document/4626837", "title": "Sample spaces and feature models: There and back again"}, {"link": "", "title": "On extracting feature models from sets of valid feature combinations"}, {"link": "", "title": "Extraction of feature models from formal contexts"}, {"link": "", "title": "Reverse engineering feature models"}, {"link": "", "title": "Efficient synthesis of feature models"}, {"link": "", "title": "Support for reverse engineering and maintaining feature models"}, {"link": "", "title": "Feature model extraction from large collections of informal product descriptions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693116"}
{"ref": [{"link": "/document/5487527", "title": "What makes a good bug report?"}, {"link": "/document/5070506", "title": "HOLMES: Effective statistical debugging via efficient path profiling"}, {"link": "/document/4222588", "title": "A technique for enabling and supporting debugging of field failures"}, {"link": "", "title": "The Amazing VM Record/Replay Feature in VMware Workstation 6"}, {"link": "", "title": "Context-aware statistical debugging: From bug predictors to faulty control flow paths"}, {"link": "/document/6227168", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Directed test generation using symbolic grammars"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Grammar-based Genetic Programming: A survey"}, {"link": "/document/942529", "title": "Grammatical evolution"}, {"link": "", "title": "The estimation of stochastic context-free grammars using the inside-outside algorithm"}, {"link": "", "title": "Introduction to Algorithms"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "EXE: Automatically generating inputs of death"}, {"link": "", "title": "XRT- Exploring Runtime for .NET architecture and applications"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Test input generation with Java PathFinder"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "", "title": "Search-based software test data generation: A survey"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Snugglebug: A powerful approach to weakest preconditions"}, {"link": "/document/5070515", "title": "Accurate interprocedural null-dereference analysis for java"}, {"link": "", "title": "Extended static checking for Java"}, {"link": "", "title": "SherLog: Error diagnosis by connecting clues from run-time logs"}, {"link": "", "title": "Improving software diagnosability via log enhancement"}, {"link": "", "title": "ReCrash: Making software failures reproducible by preserving object states"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "Striking a new balance between program instrumentation and debugging time"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "", "title": "PRES: Probabilistic replay with execution sketching on multiprocessors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693120"}
{"ref": [{"link": "", "title": "Polyglot: Systematic Analysis for Multiple Statechart Formalisms"}, {"link": "", "title": "Compositional Solution Space Quantification for Probabilistic Software Analysis"}, {"link": "", "title": "Korat: Automated Testing Based on Java Predicates"}, {"link": "", "title": "Simulation Distances"}, {"link": "", "title": "Effective lattice point counting in rational convex polytopes"}, {"link": "/document/6606608", "title": "Reliability Analysis in Symbolic Pathfinder"}, {"link": "", "title": "Statistical Symbolic Execution with Informed Sampling"}, {"link": "", "title": "Trie memory"}, {"link": "", "title": "Probabilistic Symbolic Execution"}, {"link": "", "title": "Probabilistic Programming"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "Exact and Approximate Probabilistic Symbolic Execution for Nondeterministic Programs"}, {"link": "", "title": "SemFix: Program Repair via Semantic Analysis"}, {"link": "", "title": "Abstract Semantic Differencing for Numerical Programs"}, {"link": "", "title": "Abstract semantic differencing via speculative correlation"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Mathematical Statistics"}, {"link": "", "title": "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "SIR. Software-artifact Infrastructure Repository"}, {"link": "", "title": "New trie data structures which support very fast search operations"}, {"link": "", "title": "Directed Incremental Symbolic Execution"}, {"link": "", "title": "Memoized Symbolic Execution"}, {"link": "", "title": "Bayesian statistical model checking with application to Stateflow/Simulink verification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372058"}
{"ref": [{"link": "", "title": "Model Checking"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Finding common ground: choose, assert, and assume"}, {"link": "", "title": "Random testing and model checking: Building a common framework for nondeterministic exploration"}, {"link": "", "title": "A Discipline of Programming"}, {"link": "", "title": "Exploiting traces in program analysis"}, {"link": "/document/1586741", "title": "Efficient generation of counterexamples and witnesses in symbolic model checking"}, {"link": "", "title": "(Quickly) testing the tester via path coverage"}, {"link": "", "title": "Coverage and its discontents"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "Testing static analyzers with randomly generated programs"}, {"link": "/document/781330", "title": "Coverage estimation for symbolic model checking"}, {"link": "", "title": "A practical approach to coverage in model checking"}, {"link": "", "title": "Mutation analysis"}, {"link": "", "title": "Fault diagnosis of computer programs"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "", "title": "Guidelines for coverage-based comparisons of non-adequate test suites"}, {"link": "", "title": "The Logic of Scientific Discovery"}, {"link": "", "title": "quicksort.c"}, {"link": "", "title": "Efficient computation of recurrence diameters"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of a simple fast and effective equivalent mutant detection technique"}, {"link": "", "title": "Mutation of model checker specifications for test generation and evaluation"}, {"link": "", "title": "If Death Ever Slept."}, {"link": "", "title": "Finding all paths of minimum length to a node using dijkstras algorithm"}, {"link": "", "title": "Programming pearls: Writing correct programs"}, {"link": "", "title": "Extra, extra - read all about it: Nearly all binary searches and mergesorts are broken"}, {"link": "", "title": "[SOLVED] doubly linked list insertion sort in C"}, {"link": "", "title": "Practical fast searching in strings"}, {"link": "", "title": "Finding model-checkable needles in large source code haystacks: Modular bug-finding via static analysis and dynamic invariant discovery"}, {"link": "", "title": "Structured deferral: synchronization via procrastination"}, {"link": "", "title": "Read-copy update: Using execution history to solve concurrency problems"}, {"link": "", "title": "The read-copy-update mechanism for supporting real-time applications on shared-memory multiprocessor systems with Linux"}, {"link": "", "title": "Improving energy efficiency on asymmetric multiprocessing systems"}, {"link": "", "title": ""}, {"link": "", "title": "Verification challenge 5: Uses of RCU"}, {"link": "", "title": "Re: [PATCH fyi] RCU: the bloatwatch edition"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "", "title": "Tools and Algorithms for the Construction and Analysis of Systems"}, {"link": "", "title": "When only random testing will do"}, {"link": "", "title": "Randomized differential testing as a prelude to formal verification"}, {"link": "", "title": "Mutation coverage estimation for model checking"}, {"link": "", "title": "A theory of mutations with applications to vacuity, coverage, and fault tolerance"}, {"link": "", "title": "Formal verification of arbiters using property strengthening and underapproximations"}, {"link": "/document/6186866", "title": "Computing mutation coverage in interpolation-based model checking"}, {"link": "", "title": "Beyond vacuity: Towards the strongest passing formula"}, {"link": "", "title": "Abstraction for falsification"}, {"link": "", "title": "Assessing oracle quality with checked coverage"}, {"link": "", "title": "Checked coverage: an indicator for oracle quality"}, {"link": "", "title": "Are we there yet? determining the adequacy of formalized requirements and test suites"}, {"link": "", "title": "Precise dynamic slicing algorithms"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "", "title": "Error explanation with distance metrics"}, {"link": "", "title": "Making the most of BMC counterexamples"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Symbolic pathfinder: integrating symbolic execution with model checking for java bytecode analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372062"}
{"ref": [{"link": "", "title": "A Bibliography of Papers on Symbolic Execution Technique and Its Applications"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Introduction to Software Testing"}, {"link": "", "title": "Leaping loops in the presence of abstraction"}, {"link": "", "title": "CVC3"}, {"link": "", "title": "Symbolic verification of communication protocols with infinite state spaces using QDDs"}, {"link": "", "title": "Input generation via decomposition and re-stitching: Finding bugs in malware"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "EXE: Automatically generating inputs of death"}, {"link": "", "title": "Symbolic security analysis of Ruby-on- Rails web applications"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "EvoSuite: Automatic test suite generation for object-oriented software"}, {"link": "/document/6227195", "title": "Sound empirical evidence in software testing"}, {"link": "", "title": "Proving memory safety of floating-point computations by combining static and dynamic program analysis"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "/document/4602671", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Automatic partial loop summarization in dynamic test generation"}, {"link": "", "title": "Compositional may-must program analysis: Unleashing the power of alternation"}, {"link": "", "title": "Has the bug really been fixed?"}, {"link": "", "title": "Dimensions in program synthesis"}, {"link": "", "title": "SPEED: Precise and efficient static estimation of program computational complexity"}, {"link": "/document/4639333", "title": "Improving structural testing of object-oriented programs via integrating evolutionary testing and symbolic execution"}, {"link": "", "title": "HadoopToSQL: A MapReduce query optimizer"}, {"link": "", "title": "TRACER: A symbolic execution tool for verification"}, {"link": "", "title": "Unbounded symbolic execution for program verification"}, {"link": "", "title": "An interpolation method for CLP traversal"}, {"link": "", "title": "OCAT: Object capturebased automated testing"}, {"link": "/document/6227168", "title": "BugRedux: Reproducing field failures for in-house debugging"}, {"link": "/document/6200090", "title": "A scalable distributed concolic testing approach: An empirical evaluation"}, {"link": "", "title": "SCORE: A scalable concolic testing tool for reliable embedded software"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Counterexample guided abstraction refinement via program execution"}, {"link": "", "title": "Handling dynamic data structures in search based testing"}, {"link": "", "title": "An empirical investigation into branch coverage for C programs using CUTE and AUSTIN"}, {"link": "/document/5431742", "title": "Reggae: Automated test generation for programs using complex regular expressions"}, {"link": "/document/5069054", "title": "An empirical study of testing file-system-dependent software with mock objects"}, {"link": "", "title": "Loop-extended symbolic execution on binary programs"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Abstracting path conditions"}, {"link": "", "title": "EXpress: Guided path exploration for efficient regression test generation"}, {"link": "", "title": "MODA: Automated test generation for database applications via mock objects"}, {"link": "", "title": "Testing flow graph reducibility"}, {"link": "", "title": "Synthesizing method sequences for high-coverage testing"}, {"link": "", "title": "MSeqGen: Object-oriented unit-test generation via mining source code"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "MetaSymploit: Day-one defense against script-based attacks with security-enhanced symbolic analysis"}, {"link": "", "title": "Problem identification for structural test generation: First step towards cooperative developer testing"}, {"link": "", "title": "Covana: Precise identification of problems in Pex"}, {"link": "", "title": "Precise identification of problems for structural test generation"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "/document/5270315", "title": "Fitness-guided path exploration in dynamic symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693084"}
{"ref": [{"link": "", "title": "List of popular hosting cloud services"}, {"link": "", "title": "Jenkins ci."}, {"link": "", "title": "Maven surefire source repository"}, {"link": "", "title": "Our web page"}, {"link": "", "title": "Travis ci."}, {"link": "", "title": "Efficient dependency detection for safe java test acceleration"}, {"link": "", "title": "Proactive detection of collaboration conflicts"}, {"link": "", "title": "Aleksandar Milicevic, and Milos Gligoric. Regression test selection across JVM boundaries"}, {"link": "", "title": "Unix StackExchange community. Using isolcpus"}, {"link": "", "title": "Delta execution for efficient state-space exploration of object-oriented programs"}, {"link": "/document/4528965", "title": "Delta execution for efficient state-space exploration of object-oriented programs"}, {"link": "", "title": "Cut: Automatic unit testing in the cloud"}, {"link": "", "title": "Github. Github about stars"}, {"link": "", "title": "Github. Github api web site"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "GoogleTechTalks. Tools for continuous integration at google"}, {"link": "", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "", "title": "JUnit. Junit web site"}, {"link": "", "title": "JUnit. Parallelcomputer (junit api)"}, {"link": "", "title": "Kernel.org. Kernel linux options"}, {"link": "", "title": "Shared execution for efficiently testing product lines"}, {"link": "", "title": "SPLat: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "Linux man Page. timeout - run a command with a time limit"}, {"link": "", "title": "Maven"}, {"link": "", "title": "Sanjeev Dhanda, Eric Nickell, Rob Siemborski, and John Micco. Taming google-scale continuous testing. In"}, {"link": "", "title": "Exploring variability-aware execution for testing plugin-based web applications"}, {"link": "", "title": "NUnit. Nunit web site"}, {"link": "", "title": "Maven Dependency Plugin"}, {"link": "", "title": "Maven Surefire Plugin"}, {"link": "/document/6617629", "title": "Taking control of your engineering tools"}, {"link": "", "title": "Accelerated test execution using gpus"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "/document/1251050", "title": "Reducing wasted development time via continuous testing"}, {"link": "", "title": "Multise: Multi-path symbolic execution using value summaries"}, {"link": "", "title": "Change-based test selection: An empirical evaluation"}, {"link": "", "title": "TestNG. Testng web site"}, {"link": "", "title": "Google Engineering Tools. Testing at the speed and scale of google"}, {"link": "", "title": "File-level vs. module-level regression test selection for. net"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in github"}, {"link": "", "title": "Compiler-assisted test acceleration on gpus for embedded software"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115695"}
{"ref": [{"link": "", "title": "DevOps: So you say you want a revolution?"}, {"link": "", "title": "What is DevOps?"}, {"link": "", "title": "Why enterprises must adopt DevOps to enable continuous delivery"}, {"link": "", "title": "Adopting DevOps practices in quality assurance"}, {"link": "/document/7582778", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "", "title": "State of the cloud report: DevOps trends"}, {"link": "", "title": "Continuous integration (CI) needs and wishes for developers of proprietary code"}, {"link": "", "title": "Continuous integration"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "/document/5261055", "title": "Enabling agile testing through continuous integration"}, {"link": "", "title": "Creating a shared understanding of testing culture on a social coding site"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in GitHub"}, {"link": "", "title": "Work practices and challenges in pull-based development: the integrator's perspective"}, {"link": "", "title": "Continuous integration is dead"}, {"link": "", "title": "Continuous integration"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "/document/4599493", "title": "A hundred days of continuous integration"}, {"link": "", "title": "Using continuous integration and automated test techniques for a robust C4ISR system"}, {"link": "/document/7057604", "title": "The highways and country roads to continuous deployment"}, {"link": "/document/4599529", "title": "Pushing the boundaries of testing and continuous integration"}, {"link": "", "title": "The impact of agile methods on software project management"}, {"link": "", "title": "Oops, my tests broke the build: An analysis of Travis CI builds with GitHub"}, {"link": "", "title": "GHTorrent: GitHub's data from a fire-hose"}, {"link": "", "title": "The sky is not the limit: Multitasking on GitHub projects"}, {"link": "/document/7962393", "title": "TravisTorrent: Synthesizing Travis CI and GitHub for full-stack research on continuous integration"}, {"link": "", "title": "Continuous integration in a social-coding world: Empirical evidence from GitHub"}, {"link": "", "title": "Mining email social networks"}, {"link": "/document/7180131", "title": "A data set for social diversity studies of GitHub teams"}, {"link": "/document/7962384", "title": "An empirical analysis of build failures in the continuous integration workflows of Java-based open-source software"}, {"link": "", "title": "Regression discontinuity designs: A guide to practice"}, {"link": "", "title": "Quasi-experimentation: Design & analysis issues for field settings"}, {"link": "", "title": "Seg-mented regression analysis of interrupted time series studies in medication use research"}, {"link": "", "title": "A general and simple method for obtaining r2 from generalized linear mixed-effects models"}, {"link": "", "title": "Extension of nakagawa & schielzeth's r2GLMM to random slopes models"}, {"link": "", "title": "How do centralized and distributed version control systems impact software changes?"}, {"link": "", "title": "Continuous integration and quality assurance: a case study of two open source projects"}, {"link": "", "title": "Continuous Integration in Open Source Software Development"}, {"link": "", "title": "Continuous integration and its tools"}, {"link": "/document/7180096", "title": "Wait for it: Determinants of pull request evaluation latency on GitHub"}, {"link": "", "title": "Determinants of pull-based development in the context of continuous integration"}, {"link": "", "title": "Work practices and challenges in pull-based development: the contributor's perspective"}, {"link": "/document/7284593", "title": "Stakeholder perceptions of the adoption of continuous integration - a case study"}, {"link": "", "title": "Challenges When Adopting Continuous Integration: A Case Study"}, {"link": "", "title": "Automated software integration flows in industry: A multiple-case study"}, {"link": "", "title": "Modeling continuous integration practice differences in industry software development"}, {"link": "", "title": "Experienced benefits of continuous integration in industry software product development: A case study"}, {"link": "", "title": "Fit for continuous integration: How organizations assimilate an agile practice"}, {"link": "", "title": "Continuous test generation: enhancing continuous integration with automated test generation"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Implementation and evaluation of automatic prioritization for continuous integration test cases"}, {"link": "", "title": "Communicating continuous integration servers for increasing effectiveness of automated testing"}, {"link": "", "title": "Collaborative testing across shared software components (doctoral symposium)"}, {"link": "", "title": "Visualizing testing activities to support continuous integration: A multiple case study"}, {"link": "", "title": "Empirical studies of software engineering: a roadmap"}, {"link": "", "title": "Comparing fine-grained source code changes and code churn for bug prediction"}, {"link": "", "title": "Abductive Inference Design"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115619"}
{"ref": [{"link": "", "title": "Sentiment analysis of twitter data"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "", "title": "Sentiment knowledge discovery in twitter streaming data"}, {"link": "", "title": "NLTK: The Natural Language Toolkit"}, {"link": "/document/6681346", "title": "Impact of peer code review on peer impression formation: A survey"}, {"link": "", "title": "Smote: synthetic minority over-sampling technique"}, {"link": "", "title": "Understanding affect in the workplace via social media"}, {"link": "", "title": "C4. 5, class imbalance, and cost sensitivity: why under-sampling beats over-sampling"}, {"link": "", "title": "Sentiment analysis using product review data"}, {"link": "", "title": "Measuring nominal scale agreement among many raters"}, {"link": "", "title": "The role of emotions in contributors activity: A case study on the Gentoo community"}, {"link": "", "title": "Comparative study of classification algorithms used in sentiment analysis"}, {"link": "", "title": "Sentiment analysis of commit comments in github: an empirical study"}, {"link": "", "title": "Towards emotional awareness in software development teams"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Vader: A parsimonious rule-based model for sentiment analysis of social media text"}, {"link": "/document/4492780", "title": "Text document preprocessing with the bayes formula for classification using the support vector machine"}, {"link": "/document/7962370", "title": "Leveraging automated sentiment analysis in software engineering"}, {"link": "", "title": "Choosing your weapons: On sentiment analysis tools for software engineering research"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "An enhanced support vector machine classification framework by using euclidean distance function for text document categorization"}, {"link": "", "title": "Sentiment analysis and opinion mining"}, {"link": "", "title": "A survey of opinion mining and sentiment analysis"}, {"link": "", "title": "Exploratory undersampling for class-imbalance learning"}, {"link": "", "title": "Textblob: simplified text processing"}, {"link": "", "title": "Do developers feel emotions? an exploratory analysis of emotions in software artifacts"}, {"link": "", "title": "Fast and accurate sentiment classification using an enhanced naive bayes model"}, {"link": "", "title": "A new anew: Evaluation of a word list for sentiment analysis in microblogs"}, {"link": "", "title": "A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts"}, {"link": "", "title": "Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales"}, {"link": "", "title": "Opinion mining and sentiment analysis"}, {"link": "", "title": "Thumbs up?: sentiment classification using machine learning techniques"}, {"link": "", "title": "Distinguishing the popularity between topics: A system for up-to-date opinion retrieval and mining in the web"}, {"link": "", "title": "Scikit-learn: Machine Learning in Python"}, {"link": "", "title": "Democrats, republicans and starbucks afficionados: user classification in twitter"}, {"link": "", "title": "Security and emotion: sentiment analysis of security discussions on github"}, {"link": "", "title": "Snowball: A language for stemming algorithms"}, {"link": "", "title": "Senti-ment analysis of free/open source developers: Preliminary findings from a case study"}, {"link": "", "title": "Learning representations by back-propagating errors"}, {"link": "", "title": "Bio-com_usp: tweet sentiment analysis with adaptive boosting ensemble"}, {"link": "", "title": "The impact of social media on software engineering practices and tools"}, {"link": "", "title": "Lexicon-based methods for sentiment analysis"}, {"link": "", "title": "Heart and soul: Sentiment strength detection in the social web with sentistrength"}, {"link": "", "title": "Senti-ment strength detection in short informal text"}, {"link": "", "title": "Introduction to the conll-2000 shared task: Chunking"}, {"link": "", "title": "Monitoring sentiment in open source mailing lists: exploratory study on the apache ecosystem"}, {"link": "", "title": "Thumbs up or thumbs down?: semantic orientation applied to unsupervised classification of reviews"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115623"}
{"ref": [{"link": "", "title": "Machine learning: An artificial intelligence approach"}, {"link": "", "title": "Proceedings of the 10th ACM International Conference on Generative Programming and Component Engineering"}, {"link": "", "title": "CoRR"}, {"link": "", "title": "Journal of Systems and Software"}, {"link": "", "title": ""}, {"link": "", "title": "Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on"}, {"link": "", "title": "Journal of the American Statistical Association"}, {"link": "", "title": "SIAM Journal on Computing"}, {"link": "", "title": "J. ACM"}, {"link": "", "title": "Theoretical advances in neural computation and learning"}, {"link": "", "title": "Analysis of Boolean Functions"}, {"link": "", "title": "Automated Software Engineering (ASE), 2015 IEEE/ACM 30th International Conference on, to appear, 2015"}, {"link": "/document/6227196", "title": "Software Engineering (ICSE), 2012 34th International Conference on"}, {"link": "/document/6030057", "title": "Software Product Line Conference (SPLC), 2011 15th International"}, {"link": "", "title": "Software Engineering Conference (APSEC), 2010 17th Asia Pacific"}, {"link": "/document/6030049", "title": "Software Product Line Conference (SPLC), 2011 15th International"}, {"link": "", "title": "Proceedings of the ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems"}, {"link": "", "title": "sharpsat counting models with advanced component caching and implicit bcp. In Armin Biere and Carla P. Gomes, editors, Theory and Applications of Satisfiability Testing - SAT 2006"}, {"link": "", "title": "All of statistics"}, {"link": "", "title": "Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372025"}
{"ref": [{"link": "", "title": "Building information modeling (BIM): Trends, benefits, risks, and challenges for the AEC industry"}, {"link": "", "title": "MoDisco: A model driven reverse engineering framework"}, {"link": "", "title": "JSONDiscoverer: Visualizing the schema lurking behind JSON documents"}, {"link": "", "title": "ATL: A model transformation tool"}, {"link": "", "title": "Open data: an international comparison of strategies"}, {"link": "", "title": "Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure"}, {"link": "", "title": "The state of practice in model-driven engineering"}, {"link": "", "title": "A research roadmap towards achieving scalability in model driven engineering"}, {"link": "", "title": "UML Specification"}, {"link": "", "title": "The CDO Model Repository (CDO)"}, {"link": "", "title": "Neoemf: a multi-database model persistence framework for very large models"}, {"link": "", "title": "A repository for scalable model management"}, {"link": "", "title": "An efficient computation strategy for allinstances()"}, {"link": "", "title": "The Gremlin Language"}, {"link": "", "title": "OCL Specification"}, {"link": "", "title": "QVT Specification"}, {"link": "", "title": "Morsa: A scalable approach for persisting and accessing large models"}, {"link": "", "title": "Neo4EMF, a Scalable Persistence Layer for EMF Models"}, {"link": "", "title": "Blueprints API"}, {"link": "", "title": "Map-based transparent persistence for very large models"}, {"link": "", "title": "Mogwa\u00ef: a framework to handle complex queries on large models"}, {"link": "", "title": "Inferring versioned schemas from NoSQL databases and its applications"}, {"link": "/document/1115027", "title": "Viatra-visual automated transformations for formal verification and validation of UML models"}, {"link": "", "title": "Knowledge Discovery Metamodel (KDM)"}, {"link": "", "title": "Model differences in the eclipse modeling framework"}, {"link": "", "title": "Distributed model-to-model transformation with ATL on MapReduce"}, {"link": "", "title": "Parallel execution of ATL transformation rules"}, {"link": "", "title": "A linda-based platform for the parallel execution of out-place model transformations"}, {"link": "", "title": "A survey of approaches to automatic schema matching"}, {"link": "", "title": "Coma: a system for flexible combination of schema matching approaches"}, {"link": "", "title": "Generic schema matching with cupid"}, {"link": "", "title": "Quickmig: automatic schema matching for data migration projects"}, {"link": "", "title": "Implementing graph transformations in the bulk synchronous parallel model"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115658"}
{"ref": [{"link": "", "title": "IEEE standard for binary floating-point arithmetic"}, {"link": "", "title": "Toyota: Software to blame for Prius brake problems"}, {"link": "", "title": "PARI/GP, version 2. 9. 0. Bordeaux"}, {"link": "", "title": "The Explosion of the Ariane 5"}, {"link": "", "title": "GSL - GNU Scientific Library"}, {"link": "", "title": "LAPACK - Linear Algebra PACKage"}, {"link": "", "title": "NumPy: Base N-Dimensional Array Package"}, {"link": "", "title": "The Wall Street Journal"}, {"link": "", "title": "Fpinst: Floating point error analysis using dyninst"}, {"link": "", "title": "On-the-fly detection of instability problems in floating-point program execution"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "A dynamic program analysis to find floating-point accuracy problems"}, {"link": "", "title": "How does exception handling behavior evolve? an exploratory study in java and c# applications"}, {"link": "", "title": "Efficient search for inputs causing high floating-point errors"}, {"link": "", "title": "Practical floating-point divergence detection"}, {"link": "/document/7180074", "title": "Unveiling exception handling bug hazards in android based on github and google code issues"}, {"link": "", "title": "Sound compilation of reals"}, {"link": "", "title": "Towards an industrial use of fluctuat on safety-critical avionics software"}, {"link": "", "title": "Understanding integer overflow in c/c++"}, {"link": "", "title": "Automated backward error analysis for numerical code"}, {"link": "", "title": "Beyond floating point: Next-generation computer arithmetic"}, {"link": "", "title": "IEEE. 1788\u20132015 - IEEE Standard for Interval Arithmetic"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "SciPy: Open source scientific tools for Python, 2001"}, {"link": "", "title": "Automatically adapting programs for mixed-precision floating-point computation"}, {"link": "", "title": "RAIVE: runtime assessment of floating-point instability by vectorization"}, {"link": "", "title": "Taxdc: A taxonomy of non-deterministic concurrency bugs in datacenter distributed systems"}, {"link": "/document/8115670", "title": "Floating-point symbolic execution: A case study in N-version programming"}, {"link": "", "title": "Check-then-act misuse of java concurrent collections"}, {"link": "/document/7372011", "title": "Study and refactoring of android asynchronous programming (T)"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Learning from mistakes: a comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "An empirical study of client-side javascript bugs"}, {"link": "", "title": "A study and toolkit for asynchronous programming in c#"}, {"link": "", "title": "Automatically improving accuracy for floating point expressions"}, {"link": "", "title": "Elemental: A new framework for distributed memory dense matrix computations"}, {"link": "", "title": "Precimonious: tuning assistant for floating-point precision"}, {"link": "", "title": "Floating-point precision tuning using blame analysis"}, {"link": "", "title": "Performance issues and optimizations in javascript: an empirical study"}, {"link": "", "title": "Roundoff error and the patriot missile"}, {"link": "", "title": "Rigorous estimation of floating-point round-off errors with symbolic taylor expansions"}, {"link": "", "title": "An empirical study of bugs in test code"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "A genetic algorithm for detecting significant floating-point inaccuracies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115662"}
{"ref": [{"link": "", "title": "Modeling dimensions of self-adaptive software systems"}, {"link": "/document/6227084", "title": "BRACE: An assertion framework for debugging cyber-physical systems"}, {"link": "", "title": "Engineering self-adaptive systems through feedback loops"}, {"link": "/document/1237173", "title": "CARISMA: Contextaware reflective middleware system for mobile applications"}, {"link": "", "title": "Software engineering for self-adaptive systems: A research roadmap"}, {"link": "/document/4016571", "title": "Goal-directed reasoning for specification-based data structure repair"}, {"link": "", "title": "Taming uncertainty in self-adaptive software"}, {"link": "", "title": "Increasing System Dependability through Architecture-Based Self-Repair"}, {"link": "", "title": "Towards correcting input data errors probabilistically using integrity constraints"}, {"link": "/document/4221625", "title": "Self-managed systems: An architectural challenge"}, {"link": "/document/5396345", "title": "A framework for programming robust context-aware applications"}, {"link": "", "title": "AFChecker: Effective model checking for context-aware adaptive applications"}, {"link": "", "title": "Testing context-aware middleware-centric programs: A data flow approach and an RFID-based experimentation"}, {"link": "", "title": "LIME: A coordination model and middleware supporting mobility of hosts and agents"}, {"link": "/document/6224396", "title": "A taxonomy of uncertainty for dynamically adaptive systems"}, {"link": "/document/5432224", "title": "Context-aware adaptive applications: Fault patterns and their automated identification"}, {"link": "", "title": "Atomicity and isolation for transactional processes"}, {"link": "/document/4222602", "title": "Automated generation of context-aware tests"}, {"link": "", "title": "Inconsistency detection and resolution for context-aware middleware support"}, {"link": "", "title": "On impact-oriented automatic resolution of pervasive context inconsistency"}, {"link": "", "title": "Partial constraint checking for context consistency in pervasive computing"}, {"link": "", "title": "ADAM: Identifying defects in context-aware adaptation"}, {"link": "/document/6340221", "title": "ConsView: Towards application-specific consistent context views"}, {"link": "", "title": "Atomicity analysis of service composition across organizations"}, {"link": "/document/6462653", "title": "Resynchronizing model-based self-adaptive systems with environments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693118"}
{"ref": [{"link": "", "title": "Dynamic Noncooperative Game Theory"}, {"link": "", "title": "Sequential stackelberg equilibria in two-person games"}, {"link": "", "title": "Prisoners dilemma in software testing"}, {"link": "", "title": "Planning poker or how to avoid analysis paralysis while release planning"}, {"link": "", "title": "Computing optimal randomized resource allocations for massive security games"}, {"link": "/document/1007961", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "Selecting the Most Appropriate Framework for Value Based Requirements Prioritization"}, {"link": "/document/4658075", "title": "Using random test selection to gain confidence in modified software"}, {"link": "", "title": "The Delphi Method"}, {"link": "", "title": "Prisoner's dilemma: John von neumann game theory and the puzzle of the bomb"}, {"link": "", "title": "Defending against terrorist attacks with limited resources"}, {"link": "", "title": "Value-based management of software testing"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Security and Game Theory: Algorithms, Deployed Systems, Lessons Learned"}, {"link": "", "title": "Evaluating Deployed Decision Support Systems for Security: Challenges, Analysis, and Approaches"}, {"link": "", "title": "Theory of Games and Economic Behavior (Commemorative Edition)"}, {"link": "", "title": "Market Structure and Equilibrium"}, {"link": "/document/630875", "title": "A study of effective regression testing in practice"}, {"link": "", "title": "Maximizing the value of the software development process by game theoretic analysis"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693122"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "N-gram-based detection of new malicious code"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Towards finite-state analysis of lexical cohesion"}, {"link": "", "title": "Class-based n-gram models of natural language"}, {"link": "", "title": "N-gram-based text categorization"}, {"link": "", "title": "Ar-miner: mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": "Unsupervised part-of-speech tagging with bilingual graph-based projections"}, {"link": "", "title": "Generating typed dependency parses from phrase structure parses"}, {"link": "", "title": "Development emails content analyzer: Intention mining in developer discussions"}, {"link": "", "title": "A holistic lexicon-based approach to opinion mining"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "", "title": "Analysis of user comments: an approach for software requirements evolution"}, {"link": "/document/6912257", "title": "How do users like this feature? a fine grained sentiment analysis of app reviews"}, {"link": "", "title": "N-gram feature selection for authorship identification"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Revminer: An extractive interface for navigating reviews on a smartphone"}, {"link": "/document/6624001", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "Aspect and sentiment unification model for online review analysis"}, {"link": "", "title": "N-gram-based author profiles for authorship attribution"}, {"link": "/document/5208530", "title": "The operational meaning of min-and max-entropy"}, {"link": "", "title": "Using n-gram and word network features for native language identification"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/7180073", "title": "The app sampling problem for app store mining"}, {"link": "", "title": "Maximum entropy markov models for information extraction and segmentation"}, {"link": "", "title": "Analyzing the quality of information solicited from targeted strangers on social media"}, {"link": "", "title": "User involvement in software evolution practice: a case study"}, {"link": "/document/6636712", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "Opinion mining and sentiment analysis"}, {"link": "/document/7332474", "title": "How can i improve my app? classifying user reviews for software maintenance and evolution"}, {"link": "/document/7320410", "title": "Feature lifecycles as they spread, migrate, remain and die in app stores"}, {"link": "", "title": "Parsing with compositional vector grammars"}, {"link": "", "title": "Detecting duplicate bug report using character n-gram-based features"}, {"link": "", "title": "Review spotlight: a user interface for summarizing user-generated reviews using adjective noun word pairs"}, {"link": "", "title": "Movie review mining and summarization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372064"}
{"ref": [{"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/5741260", "title": "An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change-and fault-proneness"}, {"link": "/document/5328703", "title": "An exploratory study of the impact of code smells on software change-proneness"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "/document/1281423", "title": "Using history information to improve design flaws detection"}, {"link": "", "title": "Assessing the impact of bad smells using historical information"}, {"link": "", "title": "Jdeodorant: Identification and application of extract class refactorings"}, {"link": "", "title": "Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "/document/1317478", "title": "Mining version histories to guide software changes"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "A unified framework for cohesion measurement in object-oriented systems"}, {"link": "/document/4021340", "title": "On the use of line co-change for identifying crosscutting concern code"}, {"link": "/document/1324645", "title": "Predicting source code changes by mining change history"}, {"link": "/document/5645449", "title": "Blending conceptual and evolutionary couplings to support change impact analysis in source code"}, {"link": "", "title": "Pitfalls of Object Oriented Development"}, {"link": "", "title": "Object-Oriented Design Heuristics"}, {"link": "", "title": "Detecting defects in object oriented designs: Using reading techniques to increase software quality"}, {"link": "/document/914965", "title": "Metrics based refactoring"}, {"link": "/document/1173068", "title": "Java quality assurance by detecting code smells"}, {"link": "", "title": "Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems"}, {"link": "/document/1509293", "title": "Product metrics for automatic identification of \"bad smell\" design problems in java source-code"}, {"link": "/document/5381430", "title": "A bayesian approach for the detection of code and design smells"}, {"link": "/document/5714444", "title": "Numerical signatures of antipatterns: An approach based on b-splines"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "", "title": "Identifying crosscutting concerns using historical code changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693086"}
{"ref": [{"link": "/document/4140988", "title": "Toward automated dynamic malware analysis using CWSandbox"}, {"link": "", "title": "TTAnalyze: A tool for analyzing malware"}, {"link": "", "title": "Scalable, behavior-based malware clustering"}, {"link": "", "title": "Testing malware detectors"}, {"link": "", "title": "A quantitative study of accuracy in system call-based malware detection"}, {"link": "/document/5633410", "title": "Malware obfuscation techniques: A brief survey"}, {"link": "/document/6137327", "title": "Modeling high-level behavior patterns for precise similarity analysis of software"}, {"link": "", "title": "Effective and efficient malware detection at the end host"}, {"link": "", "title": "Scalable malware clustering through coarse-grained behavior modeling"}, {"link": "", "title": "Microsoft windows internals, 4th Edition"}, {"link": "", "title": "Automatic analysis of malware behavior using machine learning"}, {"link": "", "title": ""}, {"link": "", "title": "Mining specifications of malicious behavior"}, {"link": "", "title": "Dynamic spyware analysis"}, {"link": "", "title": "A layered architecture for detecting malicious behaviors"}, {"link": "", "title": "Characterizing bots' remote control behavior"}, {"link": "", "title": "The WEKA data mining software: An update"}, {"link": "", "title": "Applied Logistic Regression Analysis"}, {"link": "", "title": "AccessMiner: Using system-centric models for malware protection"}, {"link": "/document/5504788", "title": "Synthesizing near-optimal malware specifications from suspicious behaviors"}, {"link": "", "title": "Behavior-based spyware detection"}, {"link": "/document/4413008", "title": "Limits of static analysis for malware detection"}, {"link": "", "title": "Support Vector Machines"}, {"link": "", "title": "Andromaly: A behavioral malware detection framework for Android devices"}, {"link": "", "title": "Symantec Internet Security Threat Report"}, {"link": "", "title": "Bitshred: Feature hashing malware for scalable triage and semantic analysis"}, {"link": "", "title": "Process and Threads"}, {"link": "", "title": "Windows NT/2000 Native API Reference"}, {"link": "", "title": "Registry"}, {"link": "", "title": "Automated structural classification of malware"}, {"link": "", "title": "Synchronization"}, {"link": "", "title": "Section Objects and Views"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693090"}
{"ref": [{"link": "", "title": "Expertise in debugging computer programs: A process analysis"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "HDD: Hierarchical delta debugging"}, {"link": "", "title": "Test-case reduction for C compiler bugs"}, {"link": "", "title": "Python AST library"}, {"link": "", "title": "Learning to fuzz: Application-independent fuzz testing with probabilistic, generative models of input data"}, {"link": "", "title": "Esprima"}, {"link": "", "title": "Learning from \u201cBig Code\u201d"}, {"link": "", "title": "Contagio malware dump"}, {"link": "", "title": "PDFMiner"}, {"link": "", "title": "iText PDF"}, {"link": "", "title": "PDF Scrutinizer: Detecting JavaScript-based attacks in PDF documents"}, {"link": "", "title": "Hindawi XML Corpus"}, {"link": "", "title": "The XML C parser and toolkit of Gnome"}, {"link": "", "title": "gcov - a test coverage program"}, {"link": "", "title": "Practical improvements to the minimizing delta debugging algorithm"}, {"link": "", "title": "Modernizing hierarchical delta debugging"}, {"link": "", "title": "Deriving input syntactic structure from execution"}, {"link": "", "title": "Finding bugs in dynamic web applications"}, {"link": "", "title": "Penumbra: automatically identifying failure-relevant inputs using dynamic tainting"}, {"link": "", "title": "Violating assumptions with fuzzing"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Fuzzing with code fragments"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Flax: Systematic discovery of client-side validation vulnerabilities in rich web applications"}, {"link": "", "title": "25 million flows later: Large-scale detection of DOM-based XSS"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "Zoltar: A toolset for automatic fault localization"}, {"link": "", "title": "Fault localization using execution slices and dataflow tests"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Locating faulty code using failure-inducing chops"}, {"link": "", "title": "Minimizing reproduction of software failures"}, {"link": "", "title": "On the use of delta debugging to reduce recordings and facilitate debugging of web applications"}, {"link": "", "title": "Cause clue clauses: error localization using maximum satisfiability"}, {"link": "", "title": "Efficient unit test case minimization"}, {"link": "", "title": "Minimization of randomized unit test cases"}, {"link": "/document/6823886", "title": "Cause reduction for quick testing"}, {"link": "", "title": "Evaluating non-adequate test-case reduction"}, {"link": "", "title": "Mining input grammars from dynamic taints"}, {"link": "", "title": "Synthesizing program input grammars"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115697"}
{"ref": [{"link": "", "title": "Introduction to modern information retrieval"}, {"link": "", "title": "WordNet: a lexical database for English"}, {"link": "", "title": "DBpediaa large-scale, multilingual knowledge base extracted from Wikipedia"}, {"link": "", "title": "YAGO2: A spatially and temporally enhanced knowledge base from Wikipedia"}, {"link": "", "title": "Computing semantic relatedness using wikipedia-based explicit semantic analysis"}, {"link": "", "title": "Concept-based information retrieval using explicit semantic analysis"}, {"link": "", "title": "Knowledge-based graph document modeling"}, {"link": "", "title": "Latent entity space: a novel retrieval approach for entity-bearing queries"}, {"link": "", "title": "Esdrank: Connecting query and documents through external semi-structured data"}, {"link": "", "title": "Document retrieval using entity-based language models"}, {"link": "", "title": "Semantic documents relatedness using concept graph representation"}, {"link": "", "title": "Recovering traceability links between an API and its learning resources"}, {"link": "", "title": "Learning Entity and Relation Embeddings for Knowledge Graph Completion"}, {"link": "", "title": "An information retrieval approach to concept location in source code"}, {"link": "", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "", "title": "Where should the bugs be fixed?-more accurate information retrieval-based bug localization based on bug reports"}, {"link": "", "title": "Integrating information retrieval, execution and link analysis algorithms to improve feature location in software"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "", "title": "Information retrieval models for recovering traceability links between code and documentation"}, {"link": "", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "", "title": "On the equivalence of information retrieval methods for automated traceability link recovery"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming prompter"}, {"link": "", "title": "Improving the Retrieval of Related Questions in StackOverflow"}, {"link": "", "title": "Predicting semantically linkable knowledge in developer online forums via convolutional neural network"}, {"link": "", "title": "Detecting Semantically Equivalent Questions in Online User Forums"}, {"link": "", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms"}, {"link": "", "title": "Automated construction of a software-specific word similarity database"}, {"link": "", "title": "SEWordSim: Software-specific word similarity database"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "/document/6224276", "title": "Inferring semantically related words from software context"}, {"link": "/document/6405332", "title": "Inferring semantically related software terms and their taxonomy by leveraging collaborative tagging"}, {"link": "", "title": "Learning to rank for question-oriented software text retrieval (t)"}, {"link": "", "title": "Im-proved document ranking in ontology-based document search engine using evidential reasoning"}, {"link": "/document/4222646", "title": "Suade: Topology-based searches for software investigation"}, {"link": "/document/5069582", "title": "Combining textual and structural analysis of software artifacts for traceability link recovery"}, {"link": "", "title": "Clustering support for static concept location in source code"}, {"link": "", "title": "Searching connected api subgraph via text phrases"}, {"link": "", "title": "Portfolio: Searching for relevant functions and their usages in millions of lines of code"}, {"link": "", "title": "When and how using structural information to improve ir-based traceability recovery"}, {"link": "", "title": "Link analysis algorithms for static concept location: an empirical assessment"}, {"link": "", "title": "Translating embeddings for modeling multi-relational data"}, {"link": "", "title": "Corpus-based and knowledge-based measures of text semantic similarity"}, {"link": "", "title": "Okapi at TREC-3"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "The TREC-8 Question Answering Track Report"}, {"link": "", "title": "An investigation into coupling measures for C++"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115625"}
{"ref": [{"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "", "title": "Recovering feature-to-code mappings in mixed-variability software systems"}, {"link": "/document/6606686", "title": "A Framework for Managing Cloned Product Variants"}, {"link": "", "title": "Information flow control for Java based on path conditions in dependence graphs"}, {"link": "", "title": "Identifying Inactive Code in Product Lines with Configuration-Aware System Dependence Graphs"}, {"link": "", "title": "A Case Study on Software Ecosystem Characteristics in Industrial Automation Software"}, {"link": "/document/6928832", "title": "Software Evolution in an Industrial Automation Ecosystem: An Exploratory Study"}, {"link": "/document/972736", "title": "RIPPLES: tool for change in legacy software"}, {"link": "", "title": "Static execute after/before as a replacement of traditional software dependencies"}, {"link": "", "title": "Extending software change impact analysis into COTS components"}, {"link": "", "title": "Computing ripple effect for software maintenance"}, {"link": "", "title": "Combining slicing and constraint solving for validation of measurement software"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Custom-developed vs. model-based configuration tools: Experiences from an industrial automation ecosystem"}, {"link": "", "title": ""}, {"link": "", "title": "conflict resolution in a recursive descent compiler generator"}, {"link": "", "title": "Modisco: A model driven reverse engineering framework"}, {"link": "", "title": "Developing a Multi-language Program Analysis Approach for Industrial Automation Systems: Experiences and Lessons Learned"}, {"link": "", "title": "Ex-ploring Feature Interactions in the Wild: The New Feature-interaction Challenge"}, {"link": "", "title": "Variability Modeling in the Real: A Perspective from the Operating Systems Domain"}, {"link": "", "title": "Using symbolic evaluation to understand behavior in configurable software systems"}, {"link": "", "title": "Tracking Load-time Configuration Options"}, {"link": "", "title": "Do Not Blame Users for Misconfigurations"}, {"link": "", "title": "Intraprocedural Dataflow Analysis for Software Product Lines"}, {"link": "/document/6613490", "title": "Variability mining: Consistent semi-automatic detection of product-line features"}, {"link": "", "title": "Automated diagnosis of software configuration errors"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "Systematic Derivation of Static Analyses for Software Product Lines"}, {"link": "", "title": "Variability-aware Change Impact Analysis of Multi-language Product Lines (Doctoral Symposium Paper)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372027"}
{"ref": [{"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "MobiGUITAR \u2013 a tool for automated model-based testing of mobile apps"}, {"link": "", "title": "Automated Concolic Testing of Smartphone Apps"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Dexpler: Converting Android Dalvik Bytecode to Jimple for Static Analysis with Soot"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "WebMate: Generating Test Cases for Web 2.0"}, {"link": "", "title": "TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "/document/6227232", "title": "EXSYST: Search-based GUI Testing"}, {"link": "", "title": "PUMA: Programmable UI-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Automating GUI Testing for Android Applications"}, {"link": "", "title": "Charting the API minefield using software telemetry data"}, {"link": "", "title": "Verifying android applications using java pathfinder"}, {"link": "", "title": "Google bouncer"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "EvoDroid: Segmented Evolutionary Testing of Android Apps"}, {"link": "", "title": "An empirical study of the robustness of inter-component communication in android"}, {"link": "/document/6200099", "title": "AutoBlackTest: Automatic Black-Box Testing of Interactive Applications"}, {"link": "/document/1287256", "title": "GUI Ripping: Reverse Engineering of Graphical User Interfaces for Testing"}, {"link": "", "title": "Crawling Ajax-based Web Applications through Dynamic Analysis of User Interface State Changes"}, {"link": "", "title": "The Monkey UI android testing tool"}, {"link": "", "title": "Intent fuzzer"}, {"link": "", "title": "Retargeting Android Applications to Java Bytecode"}, {"link": "", "title": "X-PERT: Accurate Identification of Cross-browser Issues in Web Applications"}, {"link": "", "title": "Intent Fuzzer: Crafting Intents of Death"}, {"link": "", "title": "Smalilbaksmali, an assembler/disassembler for the dex format used by Dalvik"}, {"link": "", "title": "Verifying Android Applications Using Java PathFinder"}, {"link": "", "title": "Execution and Property Specifications for JPF-android"}, {"link": "", "title": "ProfileDroid: Multilayer Profiling of Android Applications"}, {"link": "", "title": "A Grey-box Approach for Automated GUI-model Generation of Mobile Applications"}, {"link": "", "title": "DroidFuzzer: Fuzzing the Android Apps with Intent-Filter Tag"}, {"link": "/document/6823880", "title": "Automated generation of oracles for testing user-interaction features of mobile apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372031"}
{"ref": [{"link": "", "title": "Systems of Systems Engineering: Basic Concepts, Model-Based Techniques, and Research Directions"}, {"link": "", "title": "Requirements Monitoring Frameworks: A Systematic Review"}, {"link": "", "title": "A Comparison Framework for Runtime Monitoring Approaches"}, {"link": "", "title": "A requirements monitoring framework for enterprise systems"}, {"link": "", "title": "ReMinds: A Flexible Runtime Monitoring Framework for Systems of Systems"}, {"link": "", "title": "Developing a DSL-Based Approach for Event-Based Monitoring of Systems of Systems: Experiences and Lessons Learned"}, {"link": "", "title": "Assessing the Usefulness of a Requirements Monitoring Tool: A Study Involving Industrial Software Engineers"}, {"link": "", "title": "From Requirements Monitoring to Diagnosis Support in System of Systems"}, {"link": "", "title": "The REMINDS Tool Suite for Runtime Monitoring of Systems of Systems"}, {"link": "/document/7320412", "title": "A Requirements Monitoring Model for Systems of Systems"}, {"link": "", "title": "Notational Systems - the Cognitive Dimensions of Notations framework"}, {"link": "", "title": "Event-based multi-level service monitoring"}, {"link": "", "title": "Monitoring and recovery for web service applications"}, {"link": "", "title": "Multi-level monitoring and analysis of web-scale service based applications"}, {"link": "", "title": "Run-time monitoring and real-time visualization of software architectures"}, {"link": "", "title": "Monitoring architectural properties in dynamic component-based systems"}, {"link": "", "title": "Software landscape and application visualization for system comprehension with ExplorViz"}, {"link": "", "title": "Monere: Monitoring of service compositions for failure diagnosis"}, {"link": "", "title": "Kieker: A Framework for Application Performance Monitoring and Dynamic Software Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115700"}
{"ref": [{"link": "", "title": "LHD-iff: A Language-Independent Hybrid Approach for Tracking Source Code Lines"}, {"link": "", "title": "A file comparison program"}, {"link": "", "title": "An o(nd) difference algorithm and its variations"}, {"link": "", "title": "Change Detection in Hierarchically Structured Information"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "/document/4656419", "title": "Diff/TS: A Tool for Fine-Grained Structural Change Analysis"}, {"link": "", "title": "Rted: A robust algorithm for the tree edit distance"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/7180071", "title": "An empirical study of the copy and paste behavior during development"}, {"link": "", "title": "An Ethnographic Study of Copy and Paste Programming Practices in OOPL"}, {"link": "/document/4509441", "title": "Effective Software Merging in the Presence of Object-Oriented Refactorings"}, {"link": "", "title": "COPE: Vision for a Change-oriented Programming Environment"}, {"link": "", "title": "An Empirical Study of Code Clone Genealogies"}, {"link": "/document/1610609", "title": "CP-Miner: Finding Copy-Paste and Related Bugs in Large-Scale Software Code"}, {"link": "", "title": "CReN: A Tool for Tracking Copy-and-paste Code Clones and Renaming Identifiers Consistently in the IDE"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "Software Clone Detection: A Systematic Review"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "", "title": "An Editing-operation Replayer with Highlights Supporting Investigation of Program Modifications"}, {"link": "", "title": "Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems"}, {"link": "", "title": "diffx: An algorithm to detect changes in multi-version xml documents"}, {"link": "/document/994696", "title": "Detecting changes in xml documents"}, {"link": "", "title": "Cvs-vintage: A dataset of 14 cvs repositories of java software"}, {"link": "", "title": "DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115664"}
{"ref": [{"link": "/document/1007991", "title": "Visualization of test information to assist fault localization"}, {"link": "/document/497652", "title": "Fault localization using execution slices and dataflow tests"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Integration Coverage Based Debugging"}, {"link": "", "title": "An empirical investigation of program spectra"}, {"link": "/document/972727", "title": "The impact of software evolution on code coverage information"}, {"link": "/document/4291037", "title": "Effective fault localization using code coverage"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Evaluating instrumentation strategies by program simulation"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Coverage-based Debugging Visualization"}, {"link": "", "title": "Estat\u00edstica Aplicada"}, {"link": "", "title": "Fault localization based on information flow coverage"}, {"link": "", "title": "Minimizing reproduction of software failures"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "", "title": "Context-aware statistical debugging: From bug predictors to faulty control flow paths"}, {"link": "/document/4639361", "title": "Rapid: Identifying bug signatures to support debugging activities"}, {"link": "", "title": "Identifying bug signatures using discriminative graph mining"}, {"link": "/document/5569241", "title": "Finding suspicious patterns of objectoriented programs based on variance analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693124"}
{"ref": [{"link": "/document/4518994", "title": "Understanding the current state of US defense systems of systems and the implications for systems engineering"}, {"link": "", "title": "System of systems engineering requirements: challenges and guidelines"}, {"link": "", "title": "Architecting principles for systems-of-systems"}, {"link": "/document/6401109", "title": "Monitoring our requirements"}, {"link": "", "title": "A requirements monitoring framework for enterprise systems"}, {"link": "", "title": "Event handling in the J-OCM monitoring system"}, {"link": "", "title": "Kieker: A framework for application performance monitoring and dynamic software analysis"}, {"link": "/document/5481367", "title": "Comprehensive monitoring of BPEL processes"}, {"link": "", "title": "A framework for requirements monitoring of service based systems"}, {"link": "", "title": "ReMinds: A flexible runtime monitoring framework for systems of systems"}, {"link": "/document/6827101", "title": "A flexible framework for runtime monitoring of system-of-systems architectures"}, {"link": "/document/7320412", "title": "A requirements monitoring model for systems of systems"}, {"link": "", "title": "A case study on testing, commissioning, and operation of very-large-scale software systems"}, {"link": "/document/244791", "title": "Monitoring distributed systems"}, {"link": "", "title": "Developing a DSL-based approach for event-based monitoring of systems of systems: Experiences and lessons learned"}, {"link": "", "title": "21st century processes for acquiring 21st century software-intensive systems of systems"}, {"link": "", "title": "Variability management for a runtime monitoring infrastructure"}, {"link": "", "title": "Applying a consistency checking framework for heterogeneous models and artifacts in industrial product lines"}, {"link": "", "title": "Cool features and tough decisions: A comparison of variability modeling approaches"}, {"link": "", "title": "Xtext"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "Extended OCL for goal monitoring"}, {"link": "", "title": "Event-based multi-level service monitoring"}, {"link": "", "title": "Event Processing for Business: Organizing the Real-Time Enterprise"}, {"link": "", "title": "MOP: an efficient and generic runtime verification framework"}, {"link": "", "title": "Checking and correcting behaviors of Java programs at runtime with Java-MOP"}, {"link": "", "title": "Dealing with software process deviations using fuzzy logic based monitoring"}, {"link": "", "title": "Efficient runtime monitoring with metric temporal logic: A case study in the Android operating system"}, {"link": "/document/6227237", "title": "Runtime monitoring of component changes with Spy@Runtime"}, {"link": "", "title": "The SERENITY runtime monitoring framework"}, {"link": "", "title": "Monitoring architectural properties in dynamic component-based systems"}, {"link": "", "title": "A formal monitoring-based framework for software development and analysis"}, {"link": "", "title": "Kinesthetics extreme: An external infrastructure for monitoring distributed legacy systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372066"}
{"ref": [{"link": "", "title": "Generation of collision-free trajectories for a quadrocopter fleet: A sequential convex programming approach"}, {"link": "", "title": "Full control of a quadrotor"}, {"link": "", "title": "Distributed processing applications for uav/drones: A survey"}, {"link": "", "title": "Engineering a platform for mission planning of autonomous and resilient quadrotors"}, {"link": "", "title": "The role of parts in the system behaviour"}, {"link": "", "title": "A survey of motion planning algorithms from the perspective of autonomous uav guidance"}, {"link": "", "title": "Quadrocopter trajectory generation and control"}, {"link": "", "title": "Atl: A model transformation tool"}, {"link": "/document/5152549", "title": "Embedded autopilot for accurate waypoint navigation and trajectory tracking: Application to miniature rotorcraft uavs"}, {"link": "", "title": "Cyber-physical cloud computing implemented as paas"}, {"link": "", "title": "Towards a fully autonomous swarm of unmanned aerial vehicles"}, {"link": "/document/4840568", "title": "CsI: A language to specify and re-specify mobile sensor network behaviors"}, {"link": "", "title": "The algorithm design manual"}, {"link": "", "title": "Unmanned Aircraft Systems for Civilian Missions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372070"}
{"ref": [{"link": "/document/6498458", "title": "Empirical evaluation of bug linking"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Explaining the Gibbs sampler"}, {"link": "", "title": "Searching connected api subgraph via text phrases"}, {"link": "", "title": "Bigtable: A distributed storage system for structured data"}, {"link": "/document/6044587", "title": "Automatically generating test cases for specification mining"}, {"link": "", "title": "Integrating information retrieval, execution and link analysis algorithms to improve feature location in software"}, {"link": "/document/5306315", "title": "On the use of relevance feedback in IR-based concept location"}, {"link": "/document/6100115", "title": "Improving source code search with natural language phrasal representations of method signatures"}, {"link": "/document/4630070", "title": "Automated duplicate detection for bug tracking systems"}, {"link": "", "title": "Mining message sequence graphs"}, {"link": "", "title": "SMArTIC: Towards building an accurate, robust and scalable specification miner"}, {"link": "", "title": "Mining past-time temporal rules from execution traces"}, {"link": "", "title": "Specification mining of symbolic scenario-based models"}, {"link": "/document/5431759", "title": "Mining hierarchical scenario-based specifications"}, {"link": "", "title": "Scenario-based and value-based specification mining: Better together"}, {"link": "/document/5328700", "title": "Mining quantified temporal rules: Formalism, algorithms, and evaluation"}, {"link": "", "title": "Api hyperlinking via structural overlap"}, {"link": "", "title": "Jungloid mining: Helping to navigate the api jungle"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "", "title": "Retrieval from software libraries for bug localization: A comparative study of generic and composite text models"}, {"link": "", "title": "Automatic generation of suggestions for program investigation"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "Recommending random walks"}, {"link": "/document/4589215", "title": "Static specification mining using automata-based abstractions"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "/document/6100061", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}, {"link": "/document/6079831", "title": "Concern localization using information retrieval: An empirical study on linux kernel"}, {"link": "", "title": "Extracting paraphrases of technical terms from noisy parallel software corpora"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "", "title": "Flow-augmented call graph: A new foundation for taming api complexity"}, {"link": "", "title": "SNIAFL: Towards a static noninteractive approach to feature location"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? More accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693088"}
{"ref": [{"link": "/document/4021964", "title": "Software Security: Building Security"}, {"link": "", "title": "FindBugsTM- Find Bugs in Java Programs"}, {"link": "", "title": "Threat Modeling"}, {"link": "", "title": "Analyzing security architectures"}, {"link": "/document/6498476", "title": "Extracting and analyzing the implemented security architecture of business applications"}, {"link": "", "title": "Static extraction and conformance analysis of hierarchical runtime architectural structure using annotations"}, {"link": "/document/6385122", "title": "Ownership object graphs with dataflow edges"}, {"link": "/document/1514406", "title": "Demystifying the threat-modeling process"}, {"link": "", "title": "The CERT Oracle Secure Coding Standard for Java"}, {"link": "", "title": "Writing Secure Code"}, {"link": "", "title": "ArchJava: Connecting software architecture to implementation"}, {"link": "", "title": "Automated verification of UMLsec models for security requirements"}, {"link": "", "title": "SecureUML: A UML-based modeling language for model-driven security"}, {"link": "", "title": "Automatic Distribution of Object-Oriented Programs"}, {"link": "", "title": "Scoria Evaluation. Online Appendix"}, {"link": "", "title": "Java Platform Standard Edition 6 API Specification"}, {"link": "", "title": "Mobile Application Security on Android"}, {"link": "", "title": "Android API Guides"}, {"link": "/document/6498463", "title": "Software analytics for mobile applications - Insights & lessons learned"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for java"}, {"link": "/document/908960", "title": "Lightweight extraction of object models from bytecode"}, {"link": "", "title": "The soot framework for java program analysis: A retrospective"}, {"link": "", "title": "T. J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "Automatically securing permission-based software by reducing the attack surface: An application to android"}, {"link": "", "title": "A study of android application security"}, {"link": "", "title": "SCanDroid: Automated security certification of android applications"}, {"link": "", "title": "A few billion lines of code later: Using static analysis to find bugs in the real world"}, {"link": "/document/1366126", "title": "Static analysis for security"}, {"link": "", "title": "Fine-grained access control with object-sensitive roles"}, {"link": "", "title": "Taking an object-centric view on dynamic information with object flow analysis"}, {"link": "", "title": "Making sense of large heaps"}, {"link": "/document/6331492", "title": "Abstracting runtime heaps for program understanding"}, {"link": "", "title": "Verifying security invariants in ExpressOS"}, {"link": "", "title": "The Common Weakness Enumeration (CWE) Initiative"}, {"link": "", "title": "Idea: Towards architecture-centric security analysis of software"}, {"link": "", "title": "Bauhaus - A tool suite for program analysis and reverse engineering"}, {"link": "", "title": "Object Constraint Language"}, {"link": "/document/917525", "title": "Software reflexion models: Bridging the gap between design and implementation"}, {"link": "", "title": "Supporting automated vulnerability analysis using formalized vulnerability signatures"}, {"link": "/document/6606612", "title": "Automated software architecture security risk analysis using formalized signatures"}, {"link": "", "title": "Formally analyzing software architectural specifications using SAM"}, {"link": "", "title": "JFlow: Practical mostly-static information flow control"}, {"link": "", "title": "TAJ: Effective taint analysis of web applications"}, {"link": "", "title": "Highly precise taint analysis for android applications"}, {"link": "", "title": "ANDROMEDA: Accurate and scalable security analysis of web applications"}, {"link": "", "title": "Analyzing A Heap Dump Using Object Query Language (OQL)"}, {"link": "", "title": "Finding application errors and security flaws using PQL: A program query language"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693092"}
{"ref": [{"link": "", "title": "2012 Norton Cybercrime Report"}, {"link": "", "title": "Analyzing Inter-Application Communication in Android"}, {"link": "", "title": "XManDroid: A New Android Evolution to Mitigate Privilege Escalation Attacks"}, {"link": "", "title": "Effective Inter-component Communication Mapping in Android with Epicc: An Essential Step Towards Holistic Security Analysis"}, {"link": "", "title": "Chex: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "IccTA: Detecting Inter-Component Privacy Leaks in Android App"}, {"link": "/document/7579768", "title": "Practical, Formal Synthesis and Automatic Enforcement of Security Policies for Android"}, {"link": "", "title": "Android Taint Flow Analysis for App Sets"}, {"link": "", "title": "Amandroid: A Precise and General Inter-component Data Flow Analysis Framework for Security Vetting of Android Apps"}, {"link": "/document/7079508", "title": "COVERT: Compositional Analysis of Android Inter-App Permission Leakage"}, {"link": "", "title": "A SEALANT for Inter-app Security Holes in Android"}, {"link": "", "title": "ViVA: A Visualization and Analysis Tool for Distributed Event-based Systems"}, {"link": "", "title": "Apk Extractor"}, {"link": "", "title": "A Machine-Learning Approach for Classifying and Categorizing Android Sources and Sinks"}, {"link": "", "title": "android.app I Android Developers"}, {"link": "", "title": "Intents and Intent Filters | Android Developers"}, {"link": "", "title": "Composite Constant Propagation: Application to Android Inter-Component Communication Analysis"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "jQuery"}, {"link": "", "title": "Bootstrap"}, {"link": "", "title": "D3.js - Data-Driven Documents"}, {"link": "", "title": "DroidBench"}, {"link": "", "title": "Google Play"}, {"link": "/document/6234407", "title": "Dissecting Android Malware: Characterization and Evolution"}, {"link": "", "title": "So Many Apps, So Much Time For Entertainment"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115699"}
{"ref": [{"link": "", "title": "Relink: recovering links between bugs and changes"}, {"link": "", "title": "Software process data quality and characteristics: a historical view on open and closed source projects"}, {"link": "", "title": "The missing links: bugs and bug-fix commits"}, {"link": "", "title": "How do centralized and distributed version control systems impact software changes?"}, {"link": "", "title": "Multi-layered approach for recovering links between bug reports and fixes"}, {"link": "", "title": "Rclinker: Automated linking of issue reports and commits leveraging rich contextual information"}, {"link": "", "title": "Frlink: Improving the recovery of missing issue-commit links by revisiting file relevance"}, {"link": "", "title": "Learning classifiers from only positive and unlabeled data"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "", "title": "Understanding the contribution of non-source documents in improving missing link recovery: An empirical study"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115627"}
{"ref": [{"link": "", "title": "Software model checking"}, {"link": "", "title": "Model checking and abstraction"}, {"link": "", "title": "Model checking and the state explosion problem"}, {"link": "", "title": "Counterexample-guided abstraction refinement for symbolic model checking"}, {"link": "", "title": "Software Verification with Blast"}, {"link": "", "title": "The SLAM project: debugging system software via static analysis"}, {"link": "/document/6895263", "title": "Making CEGAR More Efficient in Software Model Checking"}, {"link": "/document/6606566", "title": "Detecting Spurious Counterexamples Efficiently in Abstract Model Checking"}, {"link": "/document/6462562", "title": "Algorithms for software model checking: Predicate abstraction vs. impact"}, {"link": "", "title": "Linear reasoning. a new form of the Herbrand-Gentzen theorem"}, {"link": "", "title": "Lazy abstraction with interpolants"}, {"link": "", "title": "Software model checking via large-block encoding"}, {"link": "", "title": "Predicate abstraction with adjustable-block encoding"}, {"link": "", "title": "Interpolation and SAT-based model checking"}, {"link": "", "title": "Interpolation-sequence based model checking"}, {"link": "", "title": "Explicit-state software model checking based on CEGAR and interpolation"}, {"link": "", "title": "Symbolic polytopes for quantitative interpolation and verification"}, {"link": "", "title": "Optimization techniques for Craig interpolant compaction in unbounded model checking"}, {"link": "", "title": "Program verification via Craig interpolation for Presburger arithmetic with arrays"}, {"link": "", "title": "Whale: An interpolation-based algorithm for inter-procedural verification"}, {"link": "", "title": "Boosting concolic testing via interpolation"}, {"link": "", "title": "Lazy annotation for program testing and verification"}, {"link": "", "title": "A framework to synergize partial order reduction with state interpolation"}, {"link": "", "title": "Verifying multithreaded software with impact"}, {"link": "", "title": "Abstractions from proofs"}, {"link": "", "title": "Software verification and verifiable witnesses (Report on SV-COMP 2015)"}, {"link": "", "title": "Reliable and reproducible competition results with benchex-ec and witnesses (report on sv-comp 2016)"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": "Software verification in the google app-engine cloud"}, {"link": "", "title": "Bugs found in linux kernel with CPAChekcer"}, {"link": "", "title": "Applicability of the blast model checker: An industrial case study"}, {"link": "", "title": "Competition on software verification"}, {"link": "", "title": "Error invariants"}, {"link": "", "title": "Intertwined forward-backward reachability analysis using interpolants"}, {"link": "", "title": "The science of programming."}, {"link": "", "title": "Smack+ corral: A modular verifier"}, {"link": "", "title": "Satabs: a bit-precise verifier for c programs"}, {"link": "", "title": "Refinement selection"}, {"link": "", "title": "Block abstraction memoization for cpachecker"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115631"}
{"ref": [{"link": "/document/6311410", "title": "Software architecture optimization methods: A systematic literature review"}, {"link": "/document/1291833", "title": "Model-based performance prediction in software development: A survey"}, {"link": "", "title": "Performance evaluation of UML software architectures with multiclass queueing network models"}, {"link": "", "title": "Open, Closed, and Mixed Networks of Queues with Different Classes of Customers"}, {"link": "", "title": "Compositional type checking of delta-oriented software product lines"}, {"link": "", "title": "Queueing networks and Markov chains: modeling and performance evaluation with computer science applications"}, {"link": "", "title": "Continuous approximation of collective system behaviour: A tutorial"}, {"link": "", "title": "Replicating Web Services for Scalability"}, {"link": "/document/6920061", "title": "Quantitative evaluation of model-driven performance analysis and simulation of component-based architectures"}, {"link": "", "title": "Model-based system reconfiguration for dynamic performance management"}, {"link": "", "title": "Model checking lots of systems: Efficient verification of temporal properties in software product lines"}, {"link": "", "title": "Model-Based Software Performance Analysis"}, {"link": "", "title": "Deriving a queueing network based performance model from uml diagrams"}, {"link": "", "title": "PRIMA-UML: a performance validation incremental methodology on early UML diagrams"}, {"link": "/document/650143", "title": "Self-similarity in world wide web traffic: Evidence and possible causes"}, {"link": "", "title": "On the canonical representation of homogeneous Markov processes modelling failure-time distributions"}, {"link": "", "title": "Compositional generation of software architecture performance QN models"}, {"link": "", "title": "Performance-based selection of software and hardware features under parameter uncertainty"}, {"link": "/document/4626853", "title": "Formal modeling for product families engineering"}, {"link": "", "title": "Run-time efficient probabilistic model checking"}, {"link": "/document/4620121", "title": "Enhanced modeling and solution of layered queueing networks"}, {"link": "/document/6030058", "title": "Verifying non-functional properties of software product lines: Towards an efficient approach using parametric model checking"}, {"link": "", "title": "A Compositional Approach to Performance Modelling"}, {"link": "", "title": "Stochastic process algebras: From individuals to populations"}, {"link": "", "title": "Family-based performance analysis of variant-rich software systems"}, {"link": "", "title": "Solutions of ordinary differential equations as limits of pure Markov processes"}, {"link": "/document/6423193", "title": "A tale of the tails: Power-laws in internet measurements"}, {"link": "", "title": "Performance prediction of web service workflows"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques. Secaucus"}, {"link": "", "title": "Variability modelling for model-driven development of software product lines"}, {"link": "", "title": "Performance Model Interchange Format (PMIF 2): A comprehensive approach to queueing network model interoperability"}, {"link": "", "title": "Probability, Markov Chains, Queues, and Simulation"}, {"link": "/document/6030049", "title": "Automatic derivation of a product performance model from a software product line model"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "Relating layered queueing networks and process algebra models"}, {"link": "/document/6314480", "title": "A fluid model for layered queueing networks"}, {"link": "", "title": "Behavioral relations in a process algebra for variants"}, {"link": "/document/5975178", "title": "Fluid rewards for a stochastic process algebra"}, {"link": "", "title": "Automatic extraction of PEPA performance models from UML activity diagrams annotated with the MARTE profile"}, {"link": "/document/5567115", "title": "Scalable differential analysis of process algebra models"}, {"link": "", "title": "Model-based performance analysis of software architectures under uncertainty"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372029"}
{"ref": [{"link": "", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "An empirical evaluation of regression testing based on fix-cache recommendations"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "/document/553637", "title": "Predicting fault-prone software modules in telephone switches"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "/document/4021378", "title": "A method for an accurate early prediction of faults in modified classes"}, {"link": "", "title": "Are popular classes more defect prone?"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "", "title": "Don't touch my code!: Examining the effects of ownership on software quality"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "Micro interaction metrics for defect prediction"}, {"link": "", "title": "Sample-based software defect prediction with active and semi -supervised learning"}, {"link": "", "title": "An adaptive approach with active learning in software fault prediction"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "/document/1553571", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "", "title": "How, and why, process metrics are better"}, {"link": "", "title": "Transfer learning for cross-company software defect prediction"}, {"link": "", "title": "Transfer defect learning"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Adapting a fault prediction model to allow inter languagereuse"}, {"link": "", "title": "Recalling the\u201cimprecision\u201d of cross-project defect prediction"}, {"link": "", "title": "Multi-objective cross-project defect prediction"}, {"link": "", "title": "Cross-project defect prediction models: L'union fait la force"}, {"link": "", "title": "Clustering and metrics thresholds based software fault prediction of unlabeled program modules"}, {"link": "/document/1281739", "title": "Unsupervised learning for expert-based software quality estimation"}, {"link": "", "title": "Towards building a universal defect prediction model"}, {"link": "", "title": "On the dataset shift problem in software engineering prediction models"}, {"link": "/document/5288526", "title": "A survey on transfer learning"}, {"link": "/document/6226427", "title": "Reducing features to improve code change-based bug prediction"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "/document/5611551", "title": "A general software defect-proneness prediction framework"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "An empirical study of just-in-time defect prediction using cross-project models"}, {"link": "", "title": "Less is more: Temporal fault predictive performance over multiple hadoop releases"}, {"link": "", "title": "Selection of relevant features and examples in machine learning"}, {"link": "", "title": "Choosing software metrics for defect prediction: An investigation on feature selection techniques"}, {"link": "", "title": "How many software metrics should be selected for defect prediction?"}, {"link": "/document/6392173", "title": "Active learning and effort estimation: Finding the essential content of software effort estimation data"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "/document/6698911", "title": "Predicting defects using change genealogies"}, {"link": "", "title": "Finding prototypes for nearest neighbor classifiers"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "A study of project selection and feature weighting for analogy based software cost estimation"}, {"link": "", "title": "Relink: Recovering links between bugs and changes"}, {"link": "", "title": "It's not a bug, it's a feature: How misclassification impacts bug prediction"}, {"link": "", "title": "Fair and balanced?: Bias in bug-fix datasets"}, {"link": "", "title": ""}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "High-impact defects: a study of breakage and surprise defects"}, {"link": "", "title": "Survey on software defect prediction"}, {"link": "", "title": "Revisiting the impact of classification techniques on the performance of defect prediction models"}, {"link": "/document/1357820", "title": "Detection strategies: metrics-based rules for detecting design flaws"}, {"link": "", "title": "Dictionary learning based software defect prediction"}, {"link": "", "title": "Method-level bug prediction"}, {"link": "", "title": "Statistical comparisons of classifiers over multiple data sets"}, {"link": "/document/4288197", "title": "Problems with precision: A response to \u201ccomments on \u2018data mining static code attributes to learn defect predictors\u2018"}, {"link": "", "title": "An empirical study on software defect prediction with a simplified metric set"}, {"link": "", "title": "Predicting defects for eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372033"}
{"ref": [{"link": "", "title": "General LTL Specification Mining"}, {"link": "", "title": "Patterns in Property Specifications for Finite-State Verification"}, {"link": "", "title": "Formal Specifications on Industrial-Strength Code-From Myth to Reality"}, {"link": "", "title": "Generating test cases for specification mining"}, {"link": "", "title": "Automated Program Verification"}, {"link": "", "title": "Mining specifications of malicious behavior"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Dynamic property mining for embedded software"}, {"link": "/document/7084172", "title": "Mining requirements from closed-loop control models"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "Perracotta: mining temporal API rules from imperfect traces"}, {"link": "", "title": "Automatically inferring temporal properties for program evolution"}, {"link": "/document/7927993", "title": "Timed k-tail: Automatic inference of timed automata"}, {"link": "", "title": "Behavioral resource-aware model inference"}, {"link": "", "title": "Rosenblum. Mining performance specifications"}, {"link": "", "title": "Complexity of automaton identification from given data"}, {"link": "", "title": "Dynamically Inferring Temporal Properties"}, {"link": "", "title": "Specification-based anomaly detection: A new approach for detecting network intrusions"}, {"link": "/document/1585652", "title": "Formal verification of a realtime hardware design"}, {"link": "", "title": "Mining timed regular expressions from system traces"}, {"link": "", "title": "Montre: A tool for monitoring timed regular expressions"}, {"link": "", "title": "Timed regular expressions"}, {"link": "", "title": "A theory of timed automata"}, {"link": "", "title": "UPPAAL in a Nutshell"}, {"link": "", "title": "Lm: A miner for scenario-based specifications"}, {"link": "", "title": "Flask Web Development: Developing Web Applications with Python"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115702"}
{"ref": [{"link": "", "title": "Code Review Quality: How Developers See It"}, {"link": "", "title": "Git"}, {"link": "", "title": "Git - git-diff Documentation"}, {"link": "", "title": "Property Differencing for Incremental Checking"}, {"link": "", "title": "Differential Assertion Checking"}, {"link": "/document/908957", "title": "Dy-namically discovering likely program invariants to support program evolution"}, {"link": "", "title": "google/gson"}, {"link": "", "title": "The Impact of Code Review Coverage and Code Review Participation on Software Quality: A Case Study of the Qt, VTK, and ITK Projects"}, {"link": "/document/4222570", "title": "Feedback-Directed Random Test Generation"}, {"link": "", "title": "Design recommendations for concern elaboration tools"}, {"link": "", "title": "How Do Software Engineers Understand Code Changes?: An Exploratory Study in Industry"}, {"link": "", "title": "Identifying program, test, and environmental changes that affect behaviour"}, {"link": "", "title": "Mining Software Contracts for Software Evolution"}, {"link": "", "title": "Apache Maven Project"}, {"link": "", "title": "JUnit 4"}, {"link": "", "title": "Automatic inference of JML-based security specifications with exception handling"}, {"link": "", "title": "Apache Commons - Apache Commons"}, {"link": "", "title": "Getty Main Repository"}, {"link": "", "title": "Maven - Maven EMMA plugin"}, {"link": "", "title": "Coverage is Not Strongly Correlated with Test Suite Effectiveness"}, {"link": "", "title": "Eclipse Debug Project"}, {"link": "", "title": "Git - git-blame Documentation"}, {"link": "", "title": "[CLI-252] LongOpt falsely detected as ambiguous - ASF JIRA"}, {"link": "", "title": "Die K\u00f6lner Phonetik. Ein Verfahren zur Identi-fizierung von Personennamen auf der Grundlage der Gestaltanalyse"}, {"link": "", "title": "Thinking-aloud in user interface design: a method promoting cognitive ergonomics"}, {"link": "", "title": "Constructive Interaction and the Iterative Process of Understanding"}, {"link": "", "title": "Added test to use BigDecimal to parse number when requesting it as a\u2026google/gson@e450822"}, {"link": "", "title": "LazilyParsedNumber does not implement eqals and hashCode methods \u00b7 Issue #627. google/gson"}, {"link": "", "title": "Parse all JSON numbers as either BigDecimal or BigInteger. From ther\u2026 google/gson@d5319d9"}, {"link": "", "title": "Differential Static Analysis: Opportunities, Applications, and Challenges"}, {"link": "", "title": "Dif-ferential Symbolic Execution"}, {"link": "", "title": "A Change Impact Analysis to Characterize Evolving Program Behaviors"}, {"link": "/document/6405261", "title": "A Change Impact Analysis to Characterize Evolving Program Behaviors"}, {"link": "", "title": "Software Change Contracts"}, {"link": "", "title": "Dy-namic Inference of Change Contracts"}, {"link": "", "title": "Shadow of a Doubt: Testing for Divergences Between Software Versions"}, {"link": "", "title": "Gerrit Code Review"}, {"link": "", "title": "Phacility - Phabricator"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115666"}
{"ref": [{"link": "", "title": "Competition on Software Verification (SV-COMP)"}, {"link": "", "title": "KLEE pull request 657: Implement basic support for vectorized instructions"}, {"link": "", "title": "[SMT-COMP] Contribution of QF_FPBV and QF_FPABV benchmarks"}, {"link": "/document/1252469", "title": "FPgen - a test generation framework for datapath floating-point verification"}, {"link": "/document/1701972", "title": "The N-version approach to fault-tolerant software"}, {"link": "", "title": "Symbolic path-oriented test data generation for floating-point programs"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "/document/4272865", "title": "Formal verification of floating-point programs"}, {"link": "", "title": "Combining Coq and Gappa for certifying floating-point programs"}, {"link": "/document/6200102", "title": "Symbolic execution with interval solving and meta-heuristic search"}, {"link": "", "title": "Symbolic Execution of Floating-point Computations"}, {"link": "", "title": "Interpolation-Based Verification of Floating-Point Programs with Abstract CDCL"}, {"link": "", "title": "Deciding floating-point logic with abstract conflict driven clause learning"}, {"link": "", "title": "An Automatable Formal Semantics for IEEE-754 Floating-Point Arithmetic"}, {"link": "", "title": "Mixed abstractions for floating-point arithmetic"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "Symbolic Execution for Software Testing in Practice-Preliminary Assessment"}, {"link": "", "title": "N-version programming: A fault-tolerance approach to reliability of software operation"}, {"link": "", "title": "Generating test cases inside suspicious intervals for floating-point number programs"}, {"link": "", "title": "Searching Critical Values for Floating-Point Programs"}, {"link": "", "title": "Symbolic crosschecking of floating-point and SIMD code"}, {"link": "", "title": "Symbolic testing of OpenCL code"}, {"link": "", "title": "Sound compilation of reals"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Floating Point correctness infrastructure repository"}, {"link": "", "title": "Aachen floating point correctness benchmark repository"}, {"link": "", "title": "Imperial floating point correctness benchmark repository"}, {"link": "/document/8115662", "title": "A Comprehensive Study of Real-World Numerical Bug Characteristics"}, {"link": "", "title": "gcov - A Test Coverage Program"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Static Analyses of the Precision of Floating-Point Operations"}, {"link": "", "title": "Asserting the Precision of Floating-Point Computations: A Simple Abstract Interpreter"}, {"link": "", "title": "the GMP development team, GNU MP: The GNU Multiple Precision Arithmetic Library"}, {"link": "", "title": "GNU Scientific Library"}, {"link": "", "title": "Behavioral Non-portability in Scientific Numeric Computing"}, {"link": "", "title": "Deciding floating-point logic with systematic abstraction"}, {"link": "", "title": "IEEE Standard for Floating-Point Arithmetic"}, {"link": "", "title": "Intel, Intel(R) 64 and IA-32 Architectures Software Devloper's Manual"}, {"link": "", "title": "Information technology - Microprocessor Systems - Floating-Point arithmetic"}, {"link": "", "title": "Programming languages - C"}, {"link": "", "title": "Information technology - Programming languages - C"}, {"link": "", "title": "Paranoia"}, {"link": "", "title": "Paranoia-a floating-point benchmark"}, {"link": "", "title": "Decision Procedures: An Algorithmic Point of View"}, {"link": "", "title": "FloPSy - Search-Based Floating Point Constraint Solving for Symbolic Execution"}, {"link": "", "title": "Make it real: Effective floating-point reasoning via exact arithmetic"}, {"link": "", "title": "KLEE Floating Point Extensions Team Imperial"}, {"link": "", "title": "LLVM Bug 30781: APFloat does not correctly handle signaling NaN"}, {"link": "", "title": "LLVM Bug 31292: llvm:: APFloat Assertion \u2018lost_fraction==lfExact-lyZero\u2019 failed"}, {"link": "", "title": "LLVM Bug 31294: llvm:: APFloat when using x87DoubleExtended semantics does not handle unsupported operands properly"}, {"link": "", "title": "Certified Roundoff Error Bounds Using Semidefinite Programming"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Alive-FP: Automated Verification of Floating Point Based Peephole Optimizations in LLVM"}, {"link": "", "title": "Docker: Lightweight Linux Containers for Consistent Development and Deployment"}, {"link": "", "title": "The pitfalls of verifying floating-point computations"}, {"link": "", "title": "Solving SAT and SAT Modulo Theories: From an Abstract Davis-Putnam-Logemann-Loveland Procedure to DPLL(T)"}, {"link": "", "title": "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "/document/6200187", "title": "Combining Constraint Programming and Abstract Interpretation for Value Analysis of Floating-point Programs"}, {"link": "", "title": "Verifying floating-point programs with constraint programming and abstract interpretation techniques"}, {"link": "", "title": "Numerical Recipes 3rd Edition: The Art of Scientific Computing"}, {"link": "", "title": "Static Analysis-Based Validation of Floating-Point Computations"}, {"link": "", "title": "Hotspot Symbolic Execution of Floating-Point Programs"}, {"link": "", "title": "Symbolic Execution for Checking the Accuracy of Floating-Point Programs"}, {"link": "", "title": "An SMT-LIB Theory of Binary Floating-Point Arithmetic"}, {"link": "", "title": "KLEE Floating Point Extensions Team Aachen"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Address-Sanitizer: A fast address sanity checker"}, {"link": "", "title": "SMT-COMP competition 2006"}, {"link": "", "title": "Rigorous Estimation of Floating-Point Round-off Errors with Symbolic Taylor Expansions"}, {"link": "", "title": "CORAL: Solving Complex Constraints for Symbolic PathFinder"}, {"link": "", "title": "Pex: white box test generation for. NET"}, {"link": "", "title": "Undefined Behavior Sanitizer"}, {"link": "", "title": "Z3 issue 1035: Unexpected huge performance difference between solver using \u201cdefault"}, {"link": "", "title": "Z3 issue 1251: Overflow encountered when expanding vector"}, {"link": "", "title": "Z3 issue 577: No theory of floating point, bitvectors and arrays and mixed performance?"}, {"link": "", "title": "Z3 issue 740: Invalid model generated without warning"}, {"link": "", "title": "Approximations for Model Construction"}, {"link": "", "title": "An Approximation Framework for Solvers and Decision Procedures"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115670"}
{"ref": [{"link": "", "title": "Review: A systematic review of software fault prediction studies"}, {"link": "/document/5635057", "title": "Change bursts as defect predictors"}, {"link": "/document/6224300", "title": "Think locally, act globally: Improving defect and effort prediction models"}, {"link": "", "title": "Local vs. Global lessons for defect prediction and effort estimation"}, {"link": "/document/6100072", "title": "Local vs. Global models for effort estimation and defect prediction"}, {"link": "", "title": "Predicting component failures at design time"}, {"link": "/document/4273265", "title": "Predicting defects for eclipse"}, {"link": "", "title": "Have things changed now?: An empirical study of bug characteristics in modern open source software"}, {"link": "", "title": "The PROMISE Repository of Empirical Software Engineering Data"}, {"link": "", "title": "A systematic and comprehensive investigation of methods to build and evaluate fault prediction models"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "/document/5609530", "title": "Revisiting common bug prediction findings using effortaware models"}, {"link": "/document/6079848", "title": "Assessing software quality by program clustering and defect prediction"}, {"link": "/document/1421025", "title": "JRipples: A tool for program comprehension during incremental change"}, {"link": "", "title": "Low-bias Extraction of Domain-specific Concepts"}, {"link": "/document/5970158", "title": "Clustering support for static concept location in source code"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "/document/1542070", "title": "Empirical validation of object-oriented metrics on open source software for fault prediction"}, {"link": "/document/1717471", "title": "Empirical analysis of object-oriented design metrics for predicting high and low severity faults"}, {"link": "", "title": "The Goal Question Metric Paradigm, Encyclopedia of Software Engineering"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "A genetic algorithm to configure support vector machines for predicting fault-prone components"}, {"link": "/document/4160970", "title": "Cross versus within-company cost estimation studies: A systematic review"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "Generalized Linear Models"}, {"link": "", "title": "Predictive inference: An introduction"}, {"link": "/document/965338", "title": "Modeling development effort in object-oriented systems using design properties"}, {"link": "", "title": "Kernel methods for software effort estimation - Effects of different kernel functions and bandwidths on estimation accuracy"}, {"link": "/document/6606637", "title": "Distributed development considered harmful?"}, {"link": "", "title": "Practical Nonparametric Statistics"}, {"link": "", "title": "Experimentation in Software Engineering - An Introduction"}, {"link": "", "title": "A systematic review of effect size in software engineering experiments"}, {"link": "", "title": "Current concepts review - Sample size and statistical power in clinical orthopaedic research"}, {"link": "", "title": "An analysis of variance test for normality"}, {"link": "", "title": "Evaluating guidelines for reporting empirical software engineering studies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693126"}
{"ref": [{"link": "", "title": "SketchREAD: A multi-domain sketch recognition engine"}, {"link": "/document/1231149", "title": "Model-driven development: A metamodeling foundation"}, {"link": "", "title": "Recognition and processing of hand-drawn diagrams using syntactic and semantic analysis"}, {"link": "", "title": "Model driven architecture: Principles and practice"}, {"link": "", "title": "Let's go to the whiteboard: How and why software developers use drawings"}, {"link": "", "title": "Design patterns for metamodels"}, {"link": "/document/6226010", "title": "Creating visual domain-specific modeling languages from end-user demonstration"}, {"link": "/document/4634773", "title": "Automating co-evolution in model-driven engineering"}, {"link": "", "title": "Bottom-up meta-modelling: An interactive approach"}, {"link": "", "title": "Language of languages for flexible development"}, {"link": "", "title": "The grail project: An experiment in man-machine communications"}, {"link": "", "title": "MetaBuilder: The diagrammer's diagrammer"}, {"link": "", "title": "How can metamodels be used flexibly?"}, {"link": "/document/4222590", "title": "Supporting generic sketching-based input of diagrams in a domain-specific visual language meta-tool"}, {"link": "", "title": "MARS: A metamodel recovery system using grammar inference"}, {"link": "", "title": "Computational support for sketching in design: A review"}, {"link": "", "title": "Design guidelines for domain specific languages"}, {"link": "", "title": "Software Language Engineering: Creating Domain-specific Languages Using Metamodels"}, {"link": "", "title": "Software design sketching with Calico"}, {"link": "/document/5353439", "title": "The physics of notations: Toward a scientific basis for constructing visual notations in software engineering"}, {"link": "", "title": "Workshop on flexible modeling tools (FlexiTools2010)"}, {"link": "", "title": "Principles for modeling language design"}, {"link": "", "title": "INTERACTING with sketched interface designs: An evaluation study"}, {"link": "", "title": "An empirical study of specification by example in a software engineering tool"}, {"link": "/document/5431736", "title": "Enhanced automation for managing model and metamodel inconsistency"}, {"link": "", "title": "A pattern-based approach to DSL development"}, {"link": "", "title": "MetaEdit+: Defining and using integrated domain-specific modeling languages"}, {"link": "", "title": "The open meta modeling environment"}, {"link": "", "title": "Metamodel adaptation and model co-adaptation"}, {"link": "/document/6345826", "title": "Flexible, lightweight requirements modeling with FlexiSketch"}, {"link": "", "title": "FlexiSketch: A mobile sketching tool for software modeling"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693130"}
{"ref": [{"link": "", "title": "Architectural styles and the design of network-based software architectures"}, {"link": "", "title": "Web API growing pains: Stories from client developers and their code"}, {"link": "", "title": "Validation and interactivity of web API documentation"}, {"link": "/document/7372015", "title": "SpyREST: Automated RESTful API documentation using HTTP proxy server"}, {"link": "", "title": "What makes APls hard to learn? the answers of developers"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "/document/6225476", "title": "On designing better tools for learning APls"}, {"link": "", "title": "API documentation with executable examples"}, {"link": "", "title": "What makes a good code example?: A study of programming Q&A in StackOverftow"}, {"link": "", "title": "Measuring API documentation on the web"}, {"link": "", "title": "Who asked what: Integrating crowdsourced faqs into api documentation"}, {"link": "/document/5783175", "title": "SaaS support in software documentation systems"}, {"link": "", "title": "Functional descriptions as the bridge between hypermedia APls and the semantic web"}, {"link": "", "title": "On the origin of services using riddl for description, evolution and composition of restful services"}, {"link": "/document/4740521", "title": "hrests: An HTML microformat for describing restful web services"}, {"link": "", "title": "Studying the documentation of an API for enterprise service-oriented architecture"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372072"}
{"ref": [{"link": "", "title": "On Mutation"}, {"link": "", "title": "How to overcome the equivalent mutant problem and achieve tailored selective mutation using co-evolution"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "On the automation of fixing software bugs"}, {"link": "", "title": "Heuristics for determining equivalence of program mutations"}, {"link": "", "title": "Reversible debugging sfotware"}, {"link": "", "title": "Mutation Analysis of Program Test Data"}, {"link": "", "title": "Detecting and escaping infinite loops with Jolt"}, {"link": "/document/6606624", "title": "Automatic recovery from runtime failures"}, {"link": "/document/6606625", "title": "Program transformations to fix C integers"}, {"link": "", "title": "Online Exposure: Social Networks, Mobile Phones, and Scams Can Threaten Your Security"}, {"link": "/document/5477098", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "", "title": "Inference and enforcement of data structure consistency specifications"}, {"link": "", "title": "Designing better fitness functions for automated program repair"}, {"link": "", "title": "A genetic programming approach to automated software repair"}, {"link": "", "title": "A human study of patch maintainability"}, {"link": "/document/142681", "title": "Estimation and enhancement of real-time software reliability through mutation analysis"}, {"link": "", "title": "Using program slicing to assist in the detection of equivalent mutants"}, {"link": "/document/1702959", "title": "Weak mutation testing and completeness of test sets"}, {"link": "/document/4637557", "title": "Constructing subtle faults using higher order mutation testing"}, {"link": "/document/4670308", "title": "MILU: A customizable, runtime-optimized higher order mutation testing tool for the full C language"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Automated atomicityviolation fixing"}, {"link": "", "title": "Empirical evaluation of the Tarantula automatic fault-localization technique"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Representations and operators for improving evolutionary software repair"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automated software repair"}, {"link": "/document/170248", "title": "Performance, effectiveness, and reliability issues in software testing"}, {"link": "", "title": "An empirical comparison of data flow and mutation-based test adequacy criteria"}, {"link": "", "title": "Dynamic test generation to find integer bugs in x86 binary Linux programs"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "/document/6606623", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "Using compiler optimization techniques to detect equivalent mutants"}, {"link": "", "title": "Automatically detecting equivalent mutants and infeasible paths"}, {"link": "", "title": "The coupling effect: Fact or fiction"}, {"link": "", "title": "Investigations of the software testing coupling effect"}, {"link": "/document/5685268", "title": "Flight of the FINCH through the Java wilderness"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "", "title": "Chianti: A tool for change impact analysis of java programs"}, {"link": "/document/5477100", "title": "(Un)covering equivalent mutants"}, {"link": "", "title": "Software mutational robustness"}, {"link": "", "title": "Sufficient mutation operators for measuring test effectiveness"}, {"link": "/document/1556535", "title": "Countering network worms through automatic patch generation"}, {"link": "", "title": "Dira: Automatic detection, identification and repair of control-hijacking attacks"}, {"link": "", "title": "Internet Security Threat Report"}, {"link": "", "title": "Internet Security Threat Report"}, {"link": "", "title": "Mutation analysis using mutant schemata"}, {"link": "", "title": "Software Fault Injection: Inoculating Programs Against Errors"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Patches as better bug reports"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/5688317", "title": "Evolutionary improvement of programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693094"}
{"ref": [{"link": "", "title": "Testing against visual contracts: Model-based coverage"}, {"link": "", "title": "Test case generation using visual contracts"}, {"link": "", "title": "Model-driven monitoring: An application of graph transformation for design by contract"}, {"link": "", "title": "Model-based development of web services descriptions enabling a precise matching concept"}, {"link": "", "title": "Learning minimal and maximal rules from observations of graph transformations"}, {"link": "", "title": "Towards dynamic reverse engineering visual contracts from Java"}, {"link": "", "title": "Fundamentals of Algebraic Graph Transformation (Monographs in Theoretical Computer Science. An EATCS Series)"}, {"link": "", "title": "Verification of architectural refac-torings: Rule extraction and tool support"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Henshin: Advanced concepts and tools for in-place EMF model transformations"}, {"link": "", "title": "Towards process mining with graph transformation systems"}, {"link": "", "title": "Learning patterns in the dynamics of biological networks"}, {"link": "", "title": "Easing model transformation learning with automatically aligned examples"}, {"link": "", "title": "Reverse engineering: An analysis of static behaviors of object oriented programs by extracting UML class diagram"}, {"link": "", "title": "Static control-flow analysis for reverse engineering of UML sequence diagrams"}, {"link": "", "title": "Software Maintenance, 2003. ICSM 2003. Proceedings. International Conference on"}, {"link": "", "title": "On-the-fly extraction of hierarchical object graphs"}, {"link": "", "title": "A fully dynamic approach to the reverse engineering of UML sequence diagrams"}, {"link": "/document/5383371", "title": "Program behavior discovery and verification: A graph grammar approach"}, {"link": "", "title": "Conceptual modelling and its theoretical foundations"}, {"link": "", "title": "A taxonomy of model transformation"}, {"link": "", "title": "Generating model transformation rules from examples using an evolutionary algorithm"}, {"link": "", "title": "Model transformation by example"}, {"link": "", "title": "Model transformation by example using inductive logic programming"}, {"link": "", "title": "Model-to-model transformations by demonstration"}, {"link": "", "title": "A new approach of graph isomorphism detection based on decision tree"}, {"link": "", "title": "Thirty years of graph matching in pattern recognition"}, {"link": "", "title": "Efficient sub graph matching using topological node feature constraints"}, {"link": "", "title": "Attributed graph matching using local descriptions"}, {"link": "", "title": "Adaptive testing of software components"}, {"link": "", "title": "Hyper/j: Multi-dimensional separation of concerns for Java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372000"}
{"ref": [{"link": "", "title": "github.com"}, {"link": "", "title": "Sentiment Analysis and Subjectivity"}, {"link": "", "title": "Comprehensive review of opinion summarization"}, {"link": "", "title": "Generating comparative summaries of contradictory opinions in text"}, {"link": "", "title": "A better Java JSON library?"}, {"link": "", "title": "Ohloh.net"}, {"link": "", "title": "The Maven Central Repository"}, {"link": "", "title": "Mining aspects in API reviews"}, {"link": "", "title": "Senti-ment in short strength detection informal text"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Building a sentiment summarizer for local search reviews"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Sentiment Analysis and Subjectivity"}, {"link": "", "title": "scikit learn"}, {"link": "", "title": "A practical guide to support vector classification"}, {"link": "", "title": "Data Mining for Imbalanced Datasets: An Overview."}, {"link": "", "title": "Baselines and bigrams: simple, good sentiment and topic classification"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usages"}, {"link": "", "title": "Modeling online reviews with multi-grain topic models"}, {"link": "", "title": "Extracting product features and opinions from reviews"}, {"link": "", "title": "Rated aspect summarization of short comments"}, {"link": "", "title": "Topic sentiment mixture: modeling facets and opinions in weblogs"}, {"link": "", "title": "Opinion extraction, summarization and tracking in news and blog corpora"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "On Finding the Natural Number of Topics with Latent Dirichlet Allocation: Some Observations"}, {"link": "", "title": "Exploring the space of topic coherence measures"}, {"link": "", "title": "The automatic creation of literature abstracts"}, {"link": "", "title": "Lexrank: graph-based lexical centrality as salience in text summarization"}, {"link": "", "title": "Textrank: Bringing order into texts"}, {"link": "", "title": "Extractive summarization under strict length constraints"}, {"link": "", "title": "Opinosis: a graph-based approach to abstractive summarization of highly redundant opinions"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "The User Is Always Right: A Practical Guide to Creating and Using Personas for the Web"}, {"link": "", "title": "Json license considered harmful"}, {"link": "", "title": "Automatic Summarization of API reviews"}, {"link": "", "title": "What are developers talking about? an analysis of topics and trends in stack overflow"}, {"link": "", "title": "What are mobile developers asking about? a large scale study using stack overflow"}, {"link": "", "title": "Mining successful answers in stack overflow"}, {"link": "", "title": "Mining questions asked by web developers"}, {"link": "", "title": "Miqs: Characterization and prediction of migrated questions on stackexchange"}, {"link": "", "title": "Chaff from the wheat: Characterization and modeling of deleted questions on stack overflow"}, {"link": "", "title": "How social q&a sites are changing knowledge sharing in open source software communities"}, {"link": "", "title": "Using and asking: APIs used in the android market and asked about in stackoverflow"}, {"link": "/document/6676932", "title": "On the personality traits of stackoverflow users"}, {"link": "", "title": "User profiling for answer quality assessment in q&a communities"}, {"link": "", "title": "Steering user behavior with badges"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Routing questions for collaborative answering in community question answering"}, {"link": "", "title": "Collaborative problem solving: A study of math overflow"}, {"link": "", "title": "Predicting tags for stackoverflow posts"}, {"link": "", "title": "Automatic summarization of bug reports"}, {"link": "/document/1657944", "title": "How are java software developers using the eclipse ide?"}, {"link": "/document/4016572", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "", "title": "Reducing the effort of bug report triage: Recommenders for development-oriented decisions"}, {"link": "", "title": "Towards automatically generating summary comments for Java methods"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Leveraging informal documentation to summarize classes and methods in context"}, {"link": "", "title": "Lightweight Structural Summarization as an Aid to Software Evolution."}, {"link": "", "title": "Shared waypoints and social tagging to support collaboration in software development"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Selection and presentation practices for code example summarization"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115629"}
{"ref": [{"link": "", "title": "A decade of software model checking with slam"}, {"link": "", "title": "Software verification and verifiable witnesses"}, {"link": "", "title": "Witness validation and stepwise testification across software verifiers"}, {"link": "", "title": "Conditional model checking"}, {"link": "", "title": "Conditional model checking: a technique to pass information between verifiers"}, {"link": "", "title": "Configurable software verification: Concretizing the convergence of model checking and program analysis"}, {"link": "", "title": "Explicit-state software model checking based on cegar and interpolation"}, {"link": "", "title": "Symbolic model checking using sat procedures instead of bdds"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Model checker execution reports"}, {"link": "", "title": "Integrated environment for diagnosing verification errors"}, {"link": "", "title": "Collaborative verification and testing with explicit assumptions"}, {"link": "", "title": "Just test what you cannot verify!"}, {"link": "", "title": "Alloy+ hotcore: A fast approximation to unsat core"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": "Software Abstractions: logic, language, and analysis."}, {"link": "", "title": "Software model checking"}, {"link": "", "title": "Powering the static driver verifier using corral"}, {"link": "", "title": "A solver for reachability modulo theories"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": "My model checker died!: how well did it do?"}, {"link": "", "title": "Mux: algorithm selection for software model checkers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115633"}
{"ref": [{"link": "", "title": "Deep neural network language models"}, {"link": "", "title": "Software traceability with topic modeling. In ICSE '10"}, {"link": "", "title": "Foundations and Trends in Machine Learning \u2013 Learning Deep Architectures for AI"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "", "title": "Bug localization using latent dirichlet allocation"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and info. retrieval"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? \u2013 more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372035"}
{"ref": [{"link": "", "title": "Program slicing"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "State-based model slicing: A survey"}, {"link": "", "title": "Flow sensitive slicing for mat-lab/simulink models"}, {"link": "", "title": "Kompren: modeling and generating model slicers"}, {"link": "", "title": "Automatically deriving the specification of model editing operations from meta-models"}, {"link": "", "title": "OO-SPL modelling of the focused case study"}, {"link": "", "title": "Consistency-preserving edit scripts in model versioning"}, {"link": "", "title": "Workspace updates of visual models"}, {"link": "", "title": "Henshin: advanced concepts and tools for in-place emf model transformations"}, {"link": "", "title": "Henshin: A usability-focused framework for emf model transformation development"}, {"link": "", "title": "Automatic generation of consistency-preserving edit operations for MDE tools"}, {"link": "", "title": "Understanding model evolution through semantically lifting model differences with silift"}, {"link": "", "title": "U. of Siegen, Software Engineering Group"}, {"link": "/document/1510162", "title": "Context-free slicing of uml class models"}, {"link": "/document/5680909", "title": "A dynamic slicing technique for uml architectural models"}, {"link": "", "title": "A sysml-based approach to traceability management and design slicing in support of safety certification: Framework, tool support, and case studies"}, {"link": "", "title": "Query-driven incremental synchronization of view models"}, {"link": "", "title": "A generic model decomposition technique and its application to the eclipse modeling framework"}, {"link": "", "title": "From subsets of model elements to submodels"}, {"link": "", "title": "Applying incremental model slicing to product-line regression testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115704"}
{"ref": [{"link": "", "title": "Linerizability. A correctness condition for concurrent objects"}, {"link": "", "title": "The Art of Multiprocessor Programming"}, {"link": "", "title": "Quasi-Linearizability: Relaxed consistency for improved concurrency"}, {"link": "", "title": "Quantitative relaxation of concurrent data structures"}, {"link": "", "title": "Distributed queues in shared memory: Multicore performance and scalability through quantitative relaxation"}, {"link": "", "title": "Performance, scalability, and semantics of concurrent fifo queues"}, {"link": "", "title": "Incorrect systems: It's not the problem, it's the solution"}, {"link": "", "title": "Scalability versus semantics of concurrent fifo queues"}, {"link": "", "title": "Shape-value abstraction for verifying linearizability"}, {"link": "", "title": "Proving correctness of highly-concurrent linearisable objects"}, {"link": "", "title": "Model checking linearizability via refinement"}, {"link": "", "title": "Experience with model checking linearizability"}, {"link": "", "title": "Model checking of linearizability of concurrent list implementations"}, {"link": "", "title": "Inspect: A runtime model checker for multithreaded C programs"}, {"link": "", "title": "Scal: High-performance Multicore-scalable Data Structures"}, {"link": "", "title": "Line-up: A complete and automatic linearizability checker"}, {"link": "", "title": "Verifying a quantitative relaxation of linearizability via refinement"}, {"link": "/document/1675439", "title": "How to make a multiprocessor computer that correctly executes multiprocess programs"}, {"link": "", "title": "Counting networks"}, {"link": "", "title": "Eventually consistent"}, {"link": "", "title": "A type and effect system for atomicity"}, {"link": "", "title": "Causal atomicity"}, {"link": "/document/5970516", "title": "Predictive analysis for detecting serializability violations through trace segmentation"}, {"link": "", "title": "Atomizer: A dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "A serializability violation detector for shared-memory server programs"}, {"link": "", "title": "AVIO: Detecting atomicity violations via access interleaving invariants"}, {"link": "/document/1599419", "title": "Runtime analysis of atomicity for multithreaded programs"}, {"link": "", "title": "Parametric and sliced causality"}, {"link": "", "title": "Monitoring atomicity in concurrent programs"}, {"link": "", "title": "Velodrome: A sound and complete dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "Symbolic predictive analysis for concurrent programs"}, {"link": "", "title": "Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis"}, {"link": "", "title": "Trace-based symbolic analysis for atomicity violations"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "", "title": "Using concurrency to check concurrency: Checking serializability in software transactional memory"}, {"link": "", "title": "On interference abstractions"}, {"link": "", "title": "Generating data race witnesses by an SMT-based analysis"}, {"link": "", "title": "Predicting concurrency failures in generalized traces of x86 executables"}, {"link": "", "title": "Universal Causality Graphs: A precise happens-before model for detecting bugs in concurrent programs"}, {"link": "", "title": "Persuasive prediction of concurrency access anomalies"}, {"link": "", "title": "Lock removal for concurrent trace programs"}, {"link": "", "title": "Maximal causal models for sequentially consistent systems"}, {"link": "", "title": "Scaling predictive analysis of concurrent programs by removing trace redundancy"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693061"}
{"ref": [{"link": "", "title": "Software engineering economics"}, {"link": "", "title": "Understanding the value of program analysis tools"}, {"link": "", "title": "Analyzing the state of static analysis: A large-scale evaluation in open source software"}, {"link": "", "title": "Language trends on github"}, {"link": "", "title": "Using javascript as a real programming language"}, {"link": "", "title": "Javascript errors in the wild: An empirical study"}, {"link": "", "title": "Typedevil: Dynamic type inconsistency analysis for javascript"}, {"link": "", "title": "Practical static analysis of javascript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Jsai: A static analysis platform for javascript"}, {"link": "/document/6648192", "title": "Jsnose: Detecting javascript code smells"}, {"link": "", "title": "Using static analysis to find bugs"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "What developers want and need from program analysis: an empirical study"}, {"link": "", "title": "Eslint"}, {"link": "", "title": "Npm stats on jshint, jslint, eslint and jscs"}, {"link": "", "title": "Static correspondence and correlation between field defects and warnings reported by a bug finding tool"}, {"link": "", "title": "Research design: Qualitative, quantitative, and mixed methods approaches"}, {"link": "", "title": "Remodeling grounded theory"}, {"link": "", "title": "Findbugs"}, {"link": "", "title": "Checkstyle"}, {"link": "", "title": "Pmd"}, {"link": "", "title": "Jshint"}, {"link": "", "title": "Jscs"}, {"link": "", "title": "Jslint"}, {"link": "", "title": "The eval that men do"}, {"link": "", "title": "Airbnb eslint preset"}, {"link": "", "title": "Standard preset and linter"}, {"link": "", "title": "Using grounded theory to study the experience of software development"}, {"link": "", "title": "Experiences from conducting semi-structured interviews in empirical software engineering research"}, {"link": "", "title": "Why and How JavaScript Developers Use Linters: Technical Report"}, {"link": "", "title": "React"}, {"link": "", "title": "An analysis of the dynamic behavior of javascript programs"}, {"link": "", "title": "Dlint: Dynamically checking bad coding practices in javascript"}, {"link": "", "title": "Flow"}, {"link": "", "title": "A comparison of bug finding tools for java"}, {"link": "", "title": "Tricorder: Building a program analysis ecosystem"}, {"link": "/document/6606642", "title": "Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation"}, {"link": "/document/7081826", "title": "Would static analysis tools help developers with code reviews?"}, {"link": "", "title": "Social barriers faced by newcomers placing their first contribution in open source software projects"}, {"link": "", "title": "A few billion lines of code later: using static analysis to find bugs in the real world"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "Z-ranking: Using statistical analysis to counter the impact of static analysis approximations"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "", "title": "Object-oriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems"}, {"link": "", "title": "Pmd, description of god class metric"}, {"link": "", "title": "Evaluating static analysis defect warnings on production software"}, {"link": "", "title": "Criteria for assessing the trustworthiness of naturalistic inquiries"}, {"link": "", "title": "Experimentation in software engineering"}, {"link": "/document/1628970", "title": "On the value of static analysis for fault detection in software"}, {"link": "/document/4815346", "title": "The effectiveness of automated static analysis tools for fault detection and refactoring prediction"}, {"link": "", "title": "A report on a survey and study of static analysis users"}, {"link": "", "title": "Which warnings should i fix first?"}, {"link": "", "title": "Adaptively ranking alerts generated from automated static analysis"}, {"link": "", "title": "Predicting accurate and actionable static analysis warnings: an experimental approach"}, {"link": "", "title": "Type analysis for javascript."}, {"link": "", "title": "Correlation tracking for points-to analysis of javascript"}, {"link": "", "title": "Modeling the html dom and browser api in static analysis of javascript web applications"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "To type or not to type: quantifying detectable bugs in javascript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115668"}
{"ref": [{"link": "", "title": "Property directed polyhedral abstraction"}, {"link": "", "title": "Tighter loop bound analysis"}, {"link": "", "title": "Guiding dynamic symbolic execution toward unverified program executions"}, {"link": "", "title": "Abstract interpretation"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Automatic discovery of linear constraints among variables of a program"}, {"link": "", "title": "CVE-common vulnerabilities and exposures"}, {"link": "", "title": "Targeted test input generation using symbolic-concrete backward execution"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automatic partial loop summarization in dynamic test generation"}, {"link": "", "title": "Apron: A library of numerical abstract domains for static analysis"}, {"link": "", "title": "Loop summarization using state and transition invariants"}, {"link": "", "title": "Pentagons: A weakly relational abstract domain for the efficient validation of array accesses"}, {"link": "", "title": "Weakly Relational Numerical Abstract Domains"}, {"link": "", "title": "The Octagon abstract domain"}, {"link": "", "title": "Loop-extended symbolic execution on binary programs"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "Symbolic Execution and Program Loops"}, {"link": "", "title": "The Gauge domain: Scalable analysis of linear inequality invariants"}, {"link": "/document/6693084", "title": "Characteristic studies of loop problems for structural test generation via symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115672"}
{"ref": [{"link": "", "title": "Permission re-delegation: Attacks and defenses"}, {"link": "", "title": "Soot - A java bytecode optimization framework"}, {"link": "", "title": "Optimizing java bytecode using the soot framework: Is it feasible?"}, {"link": "", "title": "Dexpler: Converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "", "title": "Pscout: Analyzing the android permission specification"}, {"link": "/document/6693128", "title": "Flow permissions for android"}, {"link": "", "title": "Unsafe exposure analysis of mobile in-app advertisements"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Amazon ec2"}, {"link": "", "title": "Dex2jar"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Chex: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Securing java code: Heuristics and an evaluation of static analysis tools"}, {"link": "", "title": "Scandroid: Automated Security Certification of Android Applications"}, {"link": "", "title": "A framework for static detection of privacy leaks in android applications"}, {"link": "", "title": "Droidchecker: Analyzing android applications for capability leak"}, {"link": "", "title": "ScanDal: Static analyzer for detecting privacy leaks in android applications"}, {"link": "/document/6258212", "title": "Analysis of malicious and benign android applications"}, {"link": "", "title": "Mockdroid: Trading privacy for application functionality on smartphones"}, {"link": "", "title": "Aurasium: Practical policy enforcement for android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693128"}
{"ref": [{"link": "/document/1241365", "title": "Requirements engineering: The state of the practice"}, {"link": "", "title": "Semantics and analysis of business process models in bpmn"}, {"link": "", "title": "Owl: Representing information using the web ontology language"}, {"link": "", "title": "The Owl Api"}, {"link": "", "title": "Hermit Resoner"}, {"link": "", "title": "Protege"}, {"link": "", "title": ""}, {"link": "", "title": "The Description Logic Handbook: Theory, Implementation, and Applications"}, {"link": "", "title": "Emf: Eclipse Modeling Framework, 2/E"}, {"link": "", "title": "A comparison of string distance metrics for name-matching tasks"}, {"link": "", "title": "Semantic Distance in Wordnet: An Experimental, Application-oriented Evaluation of Five Measures"}, {"link": "", "title": "Triplet extraction from sentences"}, {"link": "", "title": "Automatic transition of natural language software requirements specification into formal presentation"}, {"link": "", "title": "Automatically Mapping Natural Language Requirements to Domain-specific Process Models"}, {"link": "", "title": "Apache Opennlp"}, {"link": "", "title": "Requirements analysis tool: A tool for automatically analyzing software requirements documents"}, {"link": "/document/1579139", "title": "Ontology based requirements analysis: Lightweight semantic processing approach"}, {"link": "", "title": "Ontology-driven guidance for requirements elicitation"}, {"link": "", "title": "Domain requirements elicitation and analysis - An ontology-based approach"}, {"link": "", "title": "On the systematic analysis of natural language requirements with CIRCE"}, {"link": "", "title": "Putting pieces together: Combining FrameNet, VerbNet and WordNet for robust semantic parsing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693132"}
{"ref": [{"link": "", "title": "Learning to generate pseudo-code from source code using statistical machine translation"}, {"link": "", "title": "The mathematics of statistical machine translation: Parameter estimation"}, {"link": "", "title": "Statistical Machine Translation"}, {"link": "", "title": "Migrating code with statistical machine translation"}, {"link": "", "title": "Statistical machine translation"}, {"link": "", "title": "Statistical syntax-directed translation with extended domain of locality"}, {"link": "", "title": "On the elements of an accurate tree-to-string machine translation system"}, {"link": "", "title": "The mathematics of statistical machine translation: Parameter estimation"}, {"link": "", "title": "An unsupervised model for joint phrase alignment and extraction"}, {"link": "", "title": "What's in a translation rule?"}, {"link": "", "title": "Applying conditional random fields to japanese morphological analysis"}, {"link": "", "title": "Scalable modified Kneser-Ney language model estimation"}, {"link": "", "title": "Travatar: A forest-to-string machine translation engine based on tree transducers"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "/document/1509493", "title": "Spoken programs"}, {"link": "", "title": "Metafor: Visualizing stories as code"}, {"link": "", "title": "Using semantic unification to generate regular expressions from natural language"}, {"link": "", "title": "From natural language specifications to program input parsers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372074"}
{"ref": [{"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Dynamic slicing in the presence of unconstrained pointers"}, {"link": "", "title": "Exploiting hardware performance counters with flow and context sensitive profiling"}, {"link": "/document/1223646", "title": "Design and implementation of a fine-grained software inspection tool"}, {"link": "", "title": "Selective path profiling"}, {"link": "", "title": "Adaptive bug isolation"}, {"link": "/document/566449", "title": "Efficient path profiling"}, {"link": "", "title": "A formalisation of the relationship between forms of program slicing"}, {"link": "", "title": "An empirical study of static program slice size"}, {"link": "", "title": "Probabilistic calling context"}, {"link": "", "title": "Monitoring deployed software using software tomography"}, {"link": "/document/4222588", "title": "A technique for enabling and supporting debugging of field failures"}, {"link": "", "title": "Striking a new balance between program instrumentation and debugging time"}, {"link": "", "title": "The case for automated software testing"}, {"link": "", "title": "Hybrid slicing: Integrating dynamic information with static analysis"}, {"link": "/document/5386906", "title": "Software debugging, testing, and verification"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "/document/5282499", "title": "Better debugging via output tracing and callstack-sensitive slicing"}, {"link": "", "title": "FULLDOC: A full reporting debugger for optimized code"}, {"link": "/document/6227168", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Three approaches to interprocedural dynamic slicing"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Dynamic slicing of computer programs"}, {"link": "/document/1386156", "title": "Context-sensitivity matters, but context does not"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "/document/6340248", "title": "Effective statistical fault localization using program slices"}, {"link": "", "title": "Interprocedural path profiling"}, {"link": "", "title": "Effective slicing: A generalization of full and relevant slicing"}, {"link": "", "title": "Call-mark slicing: An efficient and economical way of reducing slice"}, {"link": "", "title": "Gamma system: Continuous evolution of software after deployment"}, {"link": "", "title": "The program dependence graph in a software development environment"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "", "title": "Software-artifact Infrastructure Repository"}, {"link": "", "title": "Precise calling context encoding"}, {"link": "/document/1021338", "title": "Dependence-cache slicing: A program slicing method using lightweight dynamic information"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "", "title": "Non-Transparent Debugging of Optimized Code"}, {"link": "", "title": "Preferential path profiling: Compactly numbering interesting paths"}, {"link": "", "title": "The semantic approach to program slicing"}, {"link": "", "title": "Analyzing multicore dumps to facilitate concurrency bug reproduction"}, {"link": "/document/5010248", "title": "Program slicing"}, {"link": "", "title": "Sherlog: Error diagnosis by connecting clues from run-time logs"}, {"link": "", "title": "Improving software diagnosability via log enhancement"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "Cost effective dynamic program slicing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693096"}
{"ref": [{"link": "", "title": "Stock market search engine"}, {"link": "", "title": "People search service"}, {"link": "", "title": "Flight tracking web service"}, {"link": "", "title": "Google glasses"}, {"link": "", "title": "Wordlens camera translation application"}, {"link": "", "title": "Systems and software engineering - vocabulary"}, {"link": "", "title": ""}, {"link": "/document/7102589", "title": "Generating complex and faulty test data through model-based mutation analysis"}, {"link": "", "title": "Essentials of Metaheuristics"}, {"link": "/document/5210118", "title": "A systematic review of the application and empirical investigation of search-based test case generation"}, {"link": "", "title": "A systematic review of search-based testing for non-functional system properties"}, {"link": "", "title": "Environment modeling and simulation for automated testing of soft real-time embedded software"}, {"link": "", "title": "Model based test validation and oracles for data acquisition systems"}, {"link": "", "title": "The object constraint language"}, {"link": "", "title": "CCSDS 732.0-B-2 AOS space data link protocol"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "", "title": "Selective breeding in a multiobjective genetic algorithm"}, {"link": "", "title": "The pareto archived evolution strategy: A new baseline algorithm for pareto"}, {"link": "", "title": "JaCoCo library"}, {"link": "", "title": "Proceedings of EUROGEN 2001 - Evolutionary Methods for Design, Optimisation and Control with Applications to Industrial Problems"}, {"link": "", "title": "Management of an academic hpc cluster: The ul experience"}, {"link": "", "title": "A hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "", "title": "Generation of test data structures using constraint logic programming"}, {"link": "", "title": "TestEra: Specification-based testing of Java programs using SAT"}, {"link": "", "title": "A model-based attack injection approach for security validation"}, {"link": "", "title": "UMLintr: A UML profile for specifying intrusions"}, {"link": "/document/6155723", "title": "Automated security test generation with formal threat models"}, {"link": "", "title": "Grammar based testing of HTML injection vulnerabilities in RSS feeds"}, {"link": "", "title": "Automated generation of positive and negative tests for parsers"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Fault-based generation of test cases from UML-models: Approach and some experiences"}, {"link": "", "title": "Mutation analysis testing for model transformations"}, {"link": "", "title": "Generating structurally complex test cases by data mutation"}, {"link": "", "title": "Testing of PolPA-based usage control systems"}, {"link": "", "title": "Automated evaluation of syntax error recovery"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Using genetic algorithms for early schedulability analysis and stress testing in real-time systems"}, {"link": "", "title": "Modeling robustness behavior using aspect-oriented modeling to support robustness testing of industrial systems"}, {"link": "", "title": "Security and robustness by protocol testing"}, {"link": "", "title": "Structural and functional sequence test of dynamic and state-based software with evolutionary algorithms"}, {"link": "", "title": "Considering signal constraints in search-based testing of continuous systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372002"}
{"ref": [{"link": "", "title": "Business processes attempts to find a definition"}, {"link": "", "title": "Business process compliance"}, {"link": "", "title": "Model-Driven Development in Practice: From Requirements to Code"}, {"link": "", "title": "A Business Process-Driven Approach for Requirements Dependency Analysis"}, {"link": "", "title": "Towards CMMI-compliant Business Process-Driven Requirements Engineering"}, {"link": "", "title": "Automated model driven development processes"}, {"link": "", "title": "Web Services Business Process Execution Language Version 2.0"}, {"link": "", "title": "Business Process Model and Notation (BPMN V 2.0)"}, {"link": "", "title": "Semantics and analysis of business process models in BPMN"}, {"link": "", "title": "Formalisations and applications of BPMN"}, {"link": "", "title": "Formal Analysis of BPMN Via a Translation into COWS"}, {"link": "", "title": "Soundness Verification of Business Processes Specified in the Pi-Calculus"}, {"link": "", "title": "A structural approach to operational semantics"}, {"link": "", "title": "The structured phase of concurrency"}, {"link": "", "title": "All about maude-a high-performance logical framework: how to specify, program and verify systems in rewriting logic"}, {"link": "", "title": "BPM Academic Initiative - Fostering Empirical Research"}, {"link": "", "title": "Business Process Management"}, {"link": "", "title": "How Much Language Is Enough? Theoretical and Practical Use of the Business Process Modeling Notation"}, {"link": "", "title": "Business process verification-finally a reality!"}, {"link": "", "title": "The Impact of Structuredness on Error Probability of Process Models"}, {"link": "", "title": "On structured workflow modelling"}, {"link": "", "title": "Structuring acyclic process models"}, {"link": "", "title": "Max-imal Structuring of Acyclic Process Models"}, {"link": "", "title": "A Survey of Formal Verification for Business Process Modeling"}, {"link": "/document/6642901", "title": "Towards Living Inter-organizational Processes"}, {"link": "", "title": "Structural characterizations of sound workflow nets"}, {"link": "", "title": "An operational semantics of BPMN collaboration"}, {"link": "", "title": "Conditional rewriting logic as a unified model of concurrency"}, {"link": "", "title": "Twenty years of rewriting logic"}, {"link": "", "title": "An executable formal semantics of C with applications"}, {"link": "", "title": "Defining the #ff0000ness of C"}, {"link": "", "title": "K-java: A complete semantics of java"}, {"link": "", "title": "KJS: a complete formal semantics of javascript"}, {"link": "", "title": "The Maude LTL model checker"}, {"link": "", "title": "The temporal logic of programs"}, {"link": "/document/8115708", "title": "BProVe: Tool Support for Business Process Verification"}, {"link": "", "title": "Towards understanding process modeling the case of the BPM academic initiative"}, {"link": "", "title": "A survey of formal business process verification: From soundness to variability"}, {"link": "", "title": "State-of-the-Art of Business Process Compliance Approaches: A Survey"}, {"link": "", "title": "A visual token-based formalization of BPMN 2.0 based on in-place transformations"}, {"link": "", "title": "Towards Compliance Verification Between Global and Local Process Models"}, {"link": "", "title": "BPMN Formalization and Verification Using Maude"}, {"link": "", "title": "A Method for Verifiable and Validatable Business Process Modeling"}, {"link": "", "title": "A Rigorous Semantics for BPMN 2.0 Process Diagrams"}, {"link": "", "title": "Towards Trustworthy Composite Service Through Business Process Model Verification"}, {"link": "", "title": "Use of Petri Nets and Business Processes Management Notation in Modelling and Simulation of Multimodal Logistics Chains"}, {"link": "", "title": "BPMN formalisation using coloured petri nets"}, {"link": "", "title": "Diagnosing and Repairing Data Anomalies in Process Models"}, {"link": "", "title": "Transformation of BPMN Diagrams to YAWL Nets"}, {"link": "", "title": "Trans-forming BPMN diagrams into YAWL nets"}, {"link": "", "title": "Specification and Verification of Complex Business Processes - A High-Level Petri Net-Based Approach"}, {"link": "", "title": "Formal verification of complex business processes based on high-level Petri nets"}, {"link": "", "title": "A Process Semantics for BPMN"}, {"link": "", "title": "Investigations on Soundness Regarding Lazy Activities"}, {"link": "", "title": "Business Processes Verification for e-Government Service Delivery"}, {"link": "", "title": "Formal methods to improve public administration business processes"}, {"link": "", "title": "An eclipse plug-in for formal verification of BPMN processes"}, {"link": "/document/4601536", "title": "Verifying Business Process Compatibility (Short Paper)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115635"}
{"ref": [{"link": "/document/6100103", "title": "Extracting structured data from natural language documents with island parsing"}, {"link": "", "title": "Pattern recognition and machine learning"}, {"link": "", "title": "A semi-supervised approach for component recommendation based on citations"}, {"link": "", "title": "Combining rule-based and information retrieval techniques to assign software change requests"}, {"link": "", "title": "Exploiting user feedback to learn to rank answers in q&a forums: a case study with stack overflow"}, {"link": "/document/788645", "title": "Support vector machines for spam categorization"}, {"link": "", "title": "An introduction to roc analysis"}, {"link": "", "title": "Large-scale bayesian logistic regression for text categorization"}, {"link": "/document/6100069", "title": "Finding relevant answers in software forums"}, {"link": "", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "Facts or friends?: distinguishing informational and conversational questions in social q&a sites"}, {"link": "", "title": "Corpus-based question answering for why-questions"}, {"link": "/document/6100115", "title": "Improving source code search with natural language phrasal representations of method signatures"}, {"link": "", "title": "Question classification using head words and their hypernyms"}, {"link": "", "title": ""}, {"link": "/document/6100076", "title": "Querying source code with natural language"}, {"link": "", "title": "Ranking application software retrieval results using application attributes and context"}, {"link": "", "title": "Cognitive processes in program comprehension"}, {"link": "", "title": "Finding the merits and drawbacks of software resources from comments"}, {"link": "", "title": "Foundations and Trends in Information Retrieval"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "On the use of text retrieval techniques in software engineering"}, {"link": "/document/6405249", "title": "What makes a good code example?: A study of programming q&a in stackoverflow"}, {"link": "", "title": "Snowball: A language for stemming algorithms"}, {"link": "", "title": "Information gain, correlation and support vector machines"}, {"link": "", "title": "Solving the search for source code"}, {"link": "", "title": "Towards domain independent why text segment classification based on bag of function words"}, {"link": "/document/6227176", "title": "Identifying linux bug fixing patches"}, {"link": "", "title": "How do programmers ask and answer questions on the web?: Nier track"}, {"link": "", "title": "What is not in the bag of words for why-qa? Computational Linguistics"}, {"link": "", "title": "Learning to rank for why-question answering"}, {"link": "", "title": "Active code search: incorporating user feedback to improve code search relevance"}, {"link": "", "title": "A theoretical analysis of ndcg ranking measures"}, {"link": "", "title": "Supporting developers with natural language queries"}, {"link": "", "title": "Want a good answer? ask a good question first!"}, {"link": "", "title": "Interrogative-guided re-ranking for question-oriented software text retrieval"}, {"link": "", "title": "A two-stage approach to retrieving answers for how-to questions"}, {"link": "", "title": "Adapting the naive bayes classifier to rank procedural texts"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}, {"link": "", "title": "Result refinement in web services retrieval based on multiple instances learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371990"}
{"ref": [{"link": "/document/5033175", "title": "An improved metaheuristic search for constrained interaction testing"}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "/document/1583600", "title": "Covering arrays for efficient fault characterization in complex configuration spaces"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Interaction testing of highly-configurable systems in the presence of constraints"}, {"link": "/document/605761", "title": "The AETG system: An approach to testing based on combinatiorial design"}, {"link": "", "title": "In-parameter-order: A test generation strategy for pairwise testing"}, {"link": "", "title": "An efficient algorithm for constraint handling in combinatorial test generation"}, {"link": "", "title": "Generating combinatorial test suite using combinatorial optimization"}, {"link": "", "title": "Evaluating improvements to a meta-heuristic search for constrained interaction testing"}, {"link": "", "title": "Diversification and determinism in local search for satisfiability"}, {"link": "", "title": "Improving stochastic local search for SAT with a new probability distribution"}, {"link": "", "title": "Configuration checking with aspiration in local search for SAT"}, {"link": "", "title": "Improving local search for random 3-SAT using quantitative configuration checking"}, {"link": "", "title": "Local search for boolean satisfiability with configuration checking and subscore"}, {"link": "", "title": "Double configuration checking in stochastic local search for satisfiability"}, {"link": "", "title": "More efficient two-mode stochastic local search for random 3-satisfiability"}, {"link": "", "title": "Clause states based configuration checking in local search for satisfiability"}, {"link": "", "title": "Tailoring local search for partial maxsat"}, {"link": "/document/6874523", "title": "CCLS: an efficient local search algorithm for weighted maximum satisfiability"}, {"link": "", "title": "Upper bounds for covering arrays by tabu search"}, {"link": "", "title": "An extensible sat-solver"}, {"link": "/document/4564473", "title": "Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy approach"}, {"link": "/document/1201186", "title": "Constructing test suites for interaction testing"}, {"link": "", "title": "IPOG: A general strategy for t-way software testing"}, {"link": "", "title": "Automatic Generation of Combinatorial Test Data"}, {"link": "", "title": "Introduction to Combinatorial Testing"}, {"link": "/document/1553557", "title": "A framework of greedy methods for constructing interaction test suites"}, {"link": "", "title": "Effective testing of factor combinations"}, {"link": "", "title": "The density algorithm for pairwise interaction testing"}, {"link": "", "title": "A density-based greedy algorithm for higher strength covering arrays"}, {"link": "", "title": "Pairwise testing in the real world: Practical extensions to test-case scenarios"}, {"link": "", "title": "Automating test case generation for the new generation mission software system"}, {"link": "", "title": "A new heuristic for test suite generation for pair-wise testing"}, {"link": "", "title": "Automatic test generation for n-way combinatorial testing"}, {"link": "", "title": "Generating optimal test set for neighbor factors combinatorial testing"}, {"link": "", "title": "Generating combinatorial test suite for interaction relationship"}, {"link": "/document/4601539", "title": "Greedy heuristic algorithms to generate variable strength combinatorial test suite"}, {"link": "", "title": "IPOG/IPOG-D: efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "One-test-at-a-time heuristic search for interaction test suites"}, {"link": "", "title": "Construction of mixed covering arrays of variable strength using a tabu search approach"}, {"link": "", "title": "Variable strength interaction testing of components"}, {"link": "/document/1251061", "title": "Augmenting simulated annealing to build interaction test suites"}, {"link": "", "title": "Pair-wise test coverage using genetic algorithms"}, {"link": "", "title": "Generation of pairwise test sets using a genetic algorithm"}, {"link": "", "title": "Determination of test configurations for pair-wise interaction coverage"}, {"link": "", "title": "A new method for constructing pair-wise covering designs for software testing"}, {"link": "", "title": "Generating combinatorial test cases by efficient SAT encodings suitable for CDCL SAT solvers"}, {"link": "/document/7102599", "title": "Optimization of combinatorial testing by incremental SAT solving"}, {"link": "", "title": "Learning combinatorial interaction test generation strategies using hyperheuristic search"}, {"link": "", "title": "Handling constraints in the input space when using combination strategies for software testing"}, {"link": "/document/4221631", "title": "The current state and future of search based software engineering"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Pareto optimal search based refactoring at the design level"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "", "title": "An empirical study of the robustness of two module clustering fitness functions"}, {"link": "", "title": "Efficiency and early fault detection with lower and higher strength combinatorial interaction testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372037"}
{"ref": [{"link": "", "title": "Habanero-Java: the new adventures of old X10"}, {"link": "", "title": "Permission regions for race-free parallelism"}, {"link": "", "title": "Practical permissions for race-free parallelism"}, {"link": "", "title": "Habanero-Java library: A Java 8 framework for multicore programming"}, {"link": "", "title": "Symbolic Pathfinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Dynamic verification of MPI programs with reductions in presence of split operations and relaxed orderings"}, {"link": "", "title": "Iterative Context Bounding for Systematic Testing of Multithreaded Programs"}, {"link": "", "title": "Delay-bounded scheduling"}, {"link": "", "title": "Model Checking for Programming Languages Using Verisoft"}, {"link": "", "title": "FastTrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "JPF verification of Habanero Java programs"}, {"link": "", "title": "JPF verification of Habanero Java programs using gradual type permission regions"}, {"link": "", "title": "Automated verification of Chapel programs using model checking and symbolic execution"}, {"link": "", "title": "X 10X: Model checking a new programming language with an \u201dold\u201d model checker"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372041"}
{"ref": [{"link": "", "title": "Configurable software verification: Concretizing the convergence of model checking and program analysis"}, {"link": "/document/1366126", "title": "Static analysis for security"}, {"link": "/document/5928354", "title": "Smt-based bounded model checking for embedded ansi-c software"}, {"link": "", "title": "Securing web application code by static analysis and runtime protection"}, {"link": "", "title": "Use runtime verification to improve the quality of medical care practice"}, {"link": "", "title": "Data-centered runtime verification of wireless medical cyber-physical system"}, {"link": "", "title": "From stateflow simulation to verified implementation: A verification approach and a real-time train controller design"}, {"link": "/document/6786041", "title": "Design and optimization of multiclocked embedded systems using formal techniques"}, {"link": "/document/6874581", "title": "Design of mixed synchronous/asynchronous systems with multiple clocks"}, {"link": "", "title": "Smt-based false positive elimination in static program analysis"}, {"link": "", "title": "Filtering false alarms of buffer overflow analysis using smt solvers"}, {"link": "", "title": "Cbmc-c bounded model checker"}, {"link": "", "title": "Comparing model checking and static program analysis: A case study in error detection approaches"}, {"link": "", "title": "Estimating the volume of solution space for satisfiability modulo linear real arithmetic"}, {"link": "", "title": "Array theory of bounded elements and its applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115706"}
{"ref": [{"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Testing at the speed and scale of Google"}, {"link": "", "title": "Tools for continuous integration at Google scale"}, {"link": "", "title": "CloudBuild: Microsoft's distributed and caching build service"}, {"link": "", "title": "Effectively prioritizing tests in development environment"}, {"link": "", "title": "Empirically detecting false test alarms using association rules"}, {"link": "", "title": "An extensive study of static regression test selection in modern software evolution"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Ekstazi: Lightweight test selection"}, {"link": "", "title": "Yet Another Simple Graph Library"}, {"link": "", "title": "JGraphT"}, {"link": "", "title": "Introduction to Maven 2.0 Plugin Development"}, {"link": "/document/131377", "title": "A study of integration testing and software regression at the integration level"}, {"link": "", "title": "Class firewall, test order, and regression testing of object-oriented programs"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "jdeps"}, {"link": "", "title": "Maven is broken by design"}, {"link": "", "title": "Guide to naming conventions"}, {"link": "", "title": "Travis-CI"}, {"link": "", "title": "Reliable testing: detecting state-polluting tests to prevent test dependency"}, {"link": "", "title": "Empirically revisiting the test independence assumption"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115710"}
{"ref": [{"link": "/document/4907646", "title": "Communication-sensitive static dataflow for parallel message passing applications"}, {"link": "", "title": "Checkfence: Checking consistency of concurrent data types on relaxed memory models"}, {"link": "/document/1435343", "title": "The complexity of verifying memory coherence and consistency"}, {"link": "", "title": "Exploiting step semantics for efficient bounded model checking of asynchronous systems"}, {"link": "", "title": "A fast linear-arithmetic solver for DPLL(T)"}, {"link": "", "title": "CRI: Symbolic debugger for MCAPI applications"}, {"link": "", "title": "Debugging support tool for mcapi applications"}, {"link": "", "title": "Dynamic partial-order reduction for modeling checking software"}, {"link": "", "title": "Targeting complex embedded architectures by combining the multicore communications API (MCAPI) with compiletime virtualisation"}, {"link": "", "title": "Proving MCAPI Executions Are Correct Using SMT (Extended)"}, {"link": "", "title": "Monotonic partial order reduction: An optimal symbolic partial order reduction technique"}, {"link": "", "title": "SMT-based modular analysis of sequential systems code"}, {"link": "", "title": "Back to the future revisiting precise program verification using SMT solvers"}, {"link": "", "title": "MCA: The Multicore Association"}, {"link": "", "title": "MCA: The Multicore Association Resource Management API"}, {"link": "", "title": "Modeling asynchronous message passing for C program"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "MPPTest: MPPTest Benchmark"}, {"link": "", "title": "Debugging race conditions in message-passing programs"}, {"link": "", "title": "Private Conversation on Active Research"}, {"link": "/document/5351145", "title": "MCC - A runtime verification tool for MCAPI user applications"}, {"link": "", "title": "Verifying parallel programs with MPI-Spin"}, {"link": "", "title": "Formal analysis of message passing"}, {"link": "", "title": "Automatic formal verification of MPI-based parallel programs"}, {"link": "", "title": "Loop invariant symbolic execution for parallel program"}, {"link": "", "title": "Reduced execution semantics of MPI: From theory to pratice"}, {"link": "", "title": "Isp tool update: Scalable MPI verification"}, {"link": "", "title": "Symbolic pruning of concurrent program executions"}, {"link": "", "title": "Barrier matching for programs with textually unaligned barriers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693063"}
{"ref": [{"link": "", "title": "A hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering"}, {"link": "", "title": "A novel co-evolutionary approach to automatic software bug fixing"}, {"link": "", "title": "Angelic debugging"}, {"link": "", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with SMT"}, {"link": "", "title": "Automatic detection and repair of errors in data structures"}, {"link": "", "title": "Juzi: a tool for repairing complex data structures"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Defects4J: A database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "MintHint: automated synthesis of repair hints"}, {"link": "", "title": "Repairing programs with semantic code search"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "History driven program repair"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "A case for automated debugging using data structure repair"}, {"link": "", "title": "Automatic repair of real bugs in Java: A large-scale experiment on the Defects4J dataset"}, {"link": "", "title": "Do the fix ingredients already exist? An empirical inquiry into the redundancy assumptions of program repair approaches"}, {"link": "", "title": "DirectFix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Automatic software repair: a bibliography"}, {"link": "/document/6606623", "title": "SemFix: program repair via semantic analysis"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "/document/6100080", "title": "Code-based automated program fixing"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Is the cure worse than the disease? Overfitting in automated program repair"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "A family of code coverage-based heuristics for effective fault localization"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in Java programs"}, {"link": "", "title": "Locating faults through automated predicate switching"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115674"}
{"ref": [{"link": "", "title": "Rigorous identification and encoding of trace-links in model-driven engineering"}, {"link": "", "title": "Model matching for trace link generation in model-driven software development"}, {"link": "", "title": "Object Management Group: Mof 2.0 Query View Transformation"}, {"link": "", "title": "Mofscript"}, {"link": "", "title": "Atlas Transformation Language"}, {"link": "", "title": "Loosely coupled traceability for ATL"}, {"link": "", "title": "A generic traceability framework for facet-based traceability data extraction in model-driven software development"}, {"link": "", "title": "Traceability-based change management in operational mappings"}, {"link": "/document/5630193", "title": "Using aspect-oriented programming to trace imperative transformations"}, {"link": "", "title": "Traceability visualization in model transformations with tracevis"}, {"link": "", "title": "Traceability approach for i* and UML models"}, {"link": "", "title": "Eclipse Modeling Framework (Eclipse Series)"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "/document/6790764", "title": "Combining convergence and diversity in evolutionary multiobjective optimization"}, {"link": "", "title": "Jess Rule Engine."}, {"link": "", "title": "Implementation of the conformance relation for incremental development of behavioural models"}, {"link": "", "title": "A proposed tool and process to design domain specific modeling languages"}, {"link": "", "title": "Generation of operational transformation rules from examples of model transformations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693134"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Traceview"}, {"link": "", "title": "Activitys, Threads and Memory Leaks"}, {"link": "", "title": "Android Processes and Threads"}, {"link": "", "title": "Android's AsyncTask"}, {"link": "", "title": "The dark side of AsyncTask"}, {"link": "", "title": "Eclips Refactoring Engine"}, {"link": "", "title": "Eclipse Java development tools (JDT)"}, {"link": "", "title": "Java Serializability"}, {"link": "", "title": "JDK Swing Framework"}, {"link": "", "title": "The SWT Toolkit"}, {"link": "", "title": "Modular performance modelling for mobile applications"}, {"link": "", "title": "Performance modeling and analysis of context-aware mobile software systems"}, {"link": "/document/5672516", "title": "A refactoring approach to parallelism"}, {"link": "", "title": "Refactoring sequential Java code for concurrency via concurrent libraries"}, {"link": "", "title": "How do programs become more concurrent? A story of program transformations"}, {"link": "", "title": "ReLooper: refactoring for loop parallelism in Java"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "", "title": "Race detection for event-driven mobile applications"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Transformation for class immutability"}, {"link": "", "title": "Tracking load-time configuration options"}, {"link": "", "title": "Check-Then-Act misuse of Java concurrent collections"}, {"link": "", "title": "A study and toolkit of Check-Then-Act idioms of java concurrent collections"}, {"link": "/document/7372011", "title": "Study and refactoring of android asynchronous programming"}, {"link": "", "title": "Retrofitting concurrency for android applications through refactoring"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Race Detection for Android Applications"}, {"link": "", "title": "Practical static race detection for Java parallel loops"}, {"link": "", "title": "Correct refactoring of concurrent Java code"}, {"link": "", "title": "Refactoring Java programs for flexible locking"}, {"link": "", "title": "Inferring method effect summaries for nested heap regions"}, {"link": "", "title": "Refactoring for reentrancy"}, {"link": "", "title": "Systematic testing for resource leaks in Android applications"}, {"link": "/document/6614215", "title": "Testing for poor responsiveness in Android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372076"}
{"ref": [{"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Modbnosat: A model-based API tester for event-driven systems"}, {"link": "/document/6693077", "title": "Software model checking for distributed systems with selector-based, non-blocking communication"}, {"link": "", "title": "An open graph visualization system and its applications to software engineering"}, {"link": "", "title": "Programming Scala, ser. O'Reilly Series. O'Reilly Media"}, {"link": "", "title": "Programming in Scala: A Comprehensive Step-by-step Guide"}, {"link": "", "title": "Domain-specific languages with scala"}, {"link": "", "title": "Separation of transitions, actions, and exceptions in model-based testing"}, {"link": "", "title": "Model-based testing of object-oriented reactive systems with Spec Explorer"}, {"link": "", "title": "Java Platform SE 8"}, {"link": "", "title": "Modbat"}, {"link": "", "title": "Handbook of Satisfiability, ser. Frontiers in Artificial Intelligence and Applications"}, {"link": "", "title": "Model-based testing for verification backends"}, {"link": "", "title": "Yet another local search solver and Lingeling and friends entering the SAT competition 2014"}, {"link": "", "title": "SAT-race 2015"}, {"link": "", "title": "PicoSAT"}, {"link": "", "title": "A systematic review of state-based test tools"}, {"link": "", "title": "Model-based testing (MBT)"}, {"link": "", "title": "ScalaCheck, a powerful tool for automatic unit testing"}, {"link": "", "title": "Industrial-strength model-based testing - state of the art and current challenges"}, {"link": "", "title": "Momut::UML model-based mutation testing for UML"}, {"link": "", "title": "T-VEC"}, {"link": "", "title": "An Introduction to TTCN-3"}, {"link": "", "title": "Model-Based Software Testing and Analysis with C#"}, {"link": "", "title": "Using built-in domain-specific modeling support to guide model-based test generation"}, {"link": "", "title": "Comparing complexity of API designs: an exploratory experiment on DSL-based framework integration"}, {"link": "", "title": "A taxonomy of model-based testing approaches"}, {"link": "", "title": "Quickcheck: a lightweight tool for random testing of Haskell programs"}, {"link": "", "title": "Multi-paradigmatic model-based testing"}, {"link": "", "title": "With an open mind: How to write good models"}, {"link": "", "title": "Modbat tool demonstration"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372080"}
{"ref": [{"link": "", "title": "Towards type inference for JavaScript"}, {"link": "", "title": "Practical fault localization for dynamic web applications"}, {"link": "/document/5416728", "title": "Finding bugs in web applications using dynamic test generation and explicit-state model checking"}, {"link": "/document/6100056", "title": "Localizing SQL faults in database applications"}, {"link": "", "title": "Formalizing homogeneous language embeddings"}, {"link": "", "title": "Lightweight defect localization for Java"}, {"link": "/document/1317486", "title": "Static checking of dynamically generated queries in database applications"}, {"link": "", "title": "Automated identification of parameter mismatches in web applications"}, {"link": "", "title": "Recency types for analyzing scripting languages"}, {"link": "", "title": "Remedying the eval that men do"}, {"link": "", "title": "Fault localization using value replacement"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "SOBER: Statistical model-based bug localization"}, {"link": "", "title": "Static approximation of dynamically generatedWeb pages"}, {"link": "/document/6100047", "title": "Autolocating and fix-propagating for HTML validation errors to PHP serverside code"}, {"link": "/document/6606702", "title": "DRC: A detection tool for dangling references in PHP-based web applications"}, {"link": "", "title": "The eval that men do: A large-scale study of the use of eval in javascript applications"}, {"link": "", "title": "Fault localization for data-centric programs"}, {"link": "/document/5070508", "title": "Lightweight faultlocalization using multiple coverage types"}, {"link": "/document/5504700", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "Locating need-totranslate constant strings in web applications"}, {"link": "", "title": "Static detection of cross-site scripting vulnerabilities"}, {"link": "", "title": "Time will tell: Fault localization using time spectra"}, {"link": "", "title": "Locating faults through automated predicate switching"}, {"link": "", "title": "Cost effective dynamic program slicing"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "HappyJIT: A tracing JIT compiler for PHP"}, {"link": "", "title": "The HipHop compiler for PHP"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693098"}
{"ref": [{"link": "", "title": "Coverity"}, {"link": "", "title": "FxCop."}, {"link": "", "title": "IntelliJ."}, {"link": "", "title": "jUnit."}, {"link": "", "title": "Mockito."}, {"link": "", "title": "PMD."}, {"link": "", "title": "An empirical analysis of the distribution of unit test smells and their impact on software maintenance"}, {"link": "", "title": "Are test smells really harmful? an empirical study"}, {"link": "", "title": "A few billion lines of code later: Using static analysis to find bugs in the real world"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Automated detection of test fixture strategies and smells"}, {"link": "/document/6606682", "title": "Hunting for smells in natural language tests"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "Improving oracle quality by detecting brittle assertions and unused inputs in tests"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "XUnit Test Patterns: Refactoring Test Code"}, {"link": "", "title": "Utilising code smells to detect quality problems in ttcn-3 test suites"}, {"link": "", "title": "Refactoring test code"}, {"link": "/document/4359471", "title": "On the detection of test smells: A metrics-based approach for general fixture and eager test"}, {"link": "", "title": "Empirically revisiting the test independence assumption"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372004"}
{"ref": [{"link": "", "title": "2014\u201306-19 - NUCLEAR EK FROM 5.135.28.118"}, {"link": "", "title": "2014\u201306-28 - SWEET ORANGE EK FROM 94.185.80.43 PORT 8590"}, {"link": "", "title": "2014\u201308-15 - NUCLEAR EK FROM 178.32.92.105"}, {"link": "", "title": "2014\u201308-22 - NUCLEAR EK FROM 87.117.255.66"}, {"link": "", "title": "2014\u201309-05 - SWEET ORANGE EK FROM 8.28.175.69"}, {"link": "", "title": "2014\u201309-11 - SWEET ORANGE EK FROM 87.118.126.94"}, {"link": "", "title": "2014\u201309-29 - NUCLEAR EK Delivers Digitally-signed Cryptowall Malware"}, {"link": "", "title": "2014\u201310-06 - Sweet Orange EK"}, {"link": "", "title": "2014\u201311-11 - ANGLER EK USES DIFFERENT OBFUSCATION FOR THE MALWARE PAYLOAD"}, {"link": "", "title": "2016\u201307-25 - MAGNITUDE EK FROM 51.254.181.39 SENDS CERBER RANSOMWARE"}, {"link": "", "title": "2016\u201307-25 - MAGNITUDE EK FROM 51.254.181.39 SENDS CERBER RANSOMWARE"}, {"link": "", "title": "3,000 High-Profile Japanese Sites Hit By Massive Malvertising Campaign"}, {"link": "", "title": "A Different Exploit Angle on Adobe's Recent Zero-Day"}, {"link": "", "title": "Angler Exploit kit breaks Referer chain using HTTPS to HTTP redirection"}, {"link": "", "title": "CVE-2013\u20132551: Buffer overflow in the Pixel Bender parser in Flash Player"}, {"link": "", "title": "CVE-2014\u20130322: An use-after-free vulnerability in IE"}, {"link": "", "title": "CVE-2014\u20130515: Use-after-free involving the CMarkup object in IE"}, {"link": "", "title": "CVE-2014\u20130569: Interger Overflow in Sound.toString() in Flash Player"}, {"link": "", "title": "CVE-2015\u20132419: Double-free in jscript9's JSON APIs"}, {"link": "", "title": "CVE-2015\u20135560: Integer overflow in mp3 ID3 tag in Flash Player"}, {"link": "", "title": "CVE-2015\u20138651: Integer overflow in domainMemory in Flash Player"}, {"link": "", "title": "CVE-2016\u20130162: An information-disclosure vulnerability in IE"}, {"link": "", "title": "CVE-2016\u20131019: Type confusion in FileReference class's type checking in Flash"}, {"link": "", "title": "CVE-2016\u20134117: Out-of-bound read in DeleteRangeTimelineOperation in Flash"}, {"link": "", "title": "CVE-2016\u20137200, CVE-2016-7201 (Edge) and Exploit Kits"}, {"link": "", "title": "CVE-2016\u20137200: Info leak in Array.filter in Chakra JavaScript engine"}, {"link": "", "title": "CVE-2016\u20137201: Type confusion in FillFromPrototypes in Chakra"}, {"link": "", "title": "DDoS Attacks - A new twist in Malvertisements"}, {"link": "", "title": "Malvertisement on FileServe delivers Password Stealer via Exploits"}, {"link": "", "title": "Malvertising on Indonesian portal gopego.com delivers Cryptowall 3.0"}, {"link": "", "title": "Microsoft Patches CVE-2016\u20133351 Zero-Day, Exploited By AdGholas and GooNky Malvertising Groups"}, {"link": "", "title": "New wave of malvertising leverages latest Flash exploit"}, {"link": "", "title": "Readers of popular websites targeted by stealthy Stegano exploit kit hiding in pixels of malicious ads"}, {"link": "", "title": "Recent example of KaiXin exploit kit"}, {"link": "", "title": "Security: Referer chain breaking by abusing src-less iframe body context"}, {"link": "", "title": "The Wild Wild Web: YouTube ads serving malware"}, {"link": "", "title": "Anatomy of a Malware Ad on NYTimes.com"}, {"link": "", "title": "Three Alleged International Cyber Criminals Responsible For Creating And Distributing Virus"}, {"link": "", "title": "Cyphort Lab, The Rise of Malvertising"}, {"link": "", "title": "Eset Research, Readers of popular websites targeted by stealthy Stegano exploit kit hiding in pixels of malicious ads"}, {"link": "", "title": "Mimi An, Why People Block Ads And What It Means for Marketers and Advertisers"}, {"link": "", "title": "Proofpoint, Massive AdGholas Malvertising Campaigns Use Steganography and File Whitelisting to Hide in Plain Sight"}, {"link": "", "title": "The Guardian, Major sites including New York Times and BBC hit by \u2018ransomware\u2019 malvertising"}, {"link": "", "title": "The Interactive Advertising Bureau (IAB)"}, {"link": "", "title": "W3Techs Web Technology Surveys"}, {"link": "", "title": "Malvertising campaign hits MSN.com, NY Times, BBC, AOL"}, {"link": "", "title": "PageFair"}, {"link": "", "title": "Adaptive User Profiles in Pervasive Advertising Environments"}, {"link": "", "title": "Ad-sentry: Comprehensive and Flexible Confinement of Javascript-based Advertisements"}, {"link": "", "title": "Analyzing and Detecting Malicious Flash Advertisements"}, {"link": "", "title": "Fine-Grained Role- and Attribute-Based Access Control for Web Applications"}, {"link": "", "title": "The Economic and Cognitive Costs of Annoying Display Advertisements"}, {"link": "", "title": "Truth in Advertising: The Hidden Cost of Mobile Ads for Software Developers"}, {"link": "", "title": "What Aspects of Mobile Ads Do Users Care About? An Empirical Study of Mobile In-app Ad Reviews"}, {"link": "", "title": "Security-policy Monitoring and Enforcement with JavaMOP"}, {"link": "", "title": "Knowing Your Enemy: Understanding and Detecting Malicious Web Advertising"}, {"link": "", "title": "Adjail: Practical Enforcement of Confidentiality and Integrity Policies on Web Advertisements"}, {"link": "", "title": "Detecting Malicious HTTP Redirections Using Trees of User Browsing Activity"}, {"link": "", "title": "The Mashware Challenge: Bridging the Gap Between Web Development and Software Engineering"}, {"link": "", "title": "Demalvertising: A Kernel Approach for Detecting Malwares in Advertising Networks"}, {"link": "", "title": "Shady Paths: Leveraging Surfing Crowds to Detect Malicious Web Pages"}, {"link": "", "title": "WebRanz: Web Page Randomization for Better Advertisement Delivery and Web-bot Prevention"}, {"link": "", "title": "Understanding Malvertising Through Ad-Injecting Browser Extensions"}, {"link": "", "title": "The Dark Alleys of Madison Avenue: Understanding Malicious Advertisements"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115637"}
{"ref": [{"link": "", "title": "Social networking websites and teens: An overview"}, {"link": "", "title": "Trust and privacy concern within social networking sites: A comparison of facebook and myspace"}, {"link": "", "title": "Online and offline social networks: Use of social networking sites by emerging adults"}, {"link": "", "title": "Facebook and online privacy: Attitudes, behaviors, and unintended consequences"}, {"link": "", "title": "Study says facebook privacy concerns are on the rise - is it accurate?"}, {"link": "", "title": "Facebook and privacy: it's complicated"}, {"link": "", "title": "A study of privacy settings errors in an online social network"}, {"link": "", "title": "Adaptive sharing for online social networks: A trade-off between privacy risk and social benefit"}, {"link": "", "title": "Can you see me now? audience and disclosure regulation in online social network sites"}, {"link": "/document/1595801", "title": "A markov reward model checker"}, {"link": "", "title": "Ymer: A statistical model checker"}, {"link": "", "title": "Prism 4.0: Verification of probabilistic real-time systems"}, {"link": "", "title": "A logic for reasoning about time and reliability"}, {"link": "", "title": "On probabilistic computation tree logic"}, {"link": "", "title": "Model-based verification of quantitative non-functional properties for software product lines"}, {"link": "", "title": "Verifying team formation protocols with probabilistic model checking"}, {"link": "", "title": "Using observation ageing to improve markovian model learning in qos engineering"}, {"link": "", "title": "Content-based multimedia information retrieval: State of the art and challenges"}, {"link": "", "title": "Modern information retrieval"}, {"link": "", "title": "Similarity measures for text document clustering"}, {"link": "", "title": "Mining of massive datasets"}, {"link": "", "title": "Reducing the dimensionality of data with neural networks"}, {"link": "", "title": "Spatio-temporal video autoencoder with differentiable memory"}, {"link": "", "title": "Comparing images using color coherence vectors"}, {"link": "", "title": "Efficient clustering of high-dimensional data sets with application to reference matching"}, {"link": "", "title": "Privacy manipulation and acclimation in a location sharing application"}, {"link": "", "title": "I Regretted the Minute I Pressed Share\u201d: A Qualitative Study of Regrets on Facebook"}, {"link": "", "title": "An extended privacy calculus model for e-commerce transactions"}, {"link": "", "title": "Online social networks: Why we disclose"}, {"link": "", "title": "The role of push-pull technology in privacy calculus: The case of location-based services"}, {"link": "", "title": "Privacy as Contextual Integrity"}, {"link": "", "title": "Privacy and contextual integrity: Framework and applications"}, {"link": "", "title": "Handling privacy as contextual integrity in decentralized virtual communities: The privacias framework"}, {"link": "", "title": "Adaptive information-sharing for privacy-aware mobile social networks"}, {"link": "", "title": "Modeling information diffusion in implicit networks"}, {"link": "", "title": "Meme-tracking and the dynamics of the news cycle"}, {"link": "", "title": "A predictive model for the temporal dynamics of information diffusion in online social networks"}, {"link": "", "title": "Predicting aggregate social activities using continuous-time stochastic process"}, {"link": "", "title": "The statistical evaluation of social network dynamics"}, {"link": "", "title": "Social network user influence dynamics prediction"}, {"link": "", "title": "Privacy Dynamics: Learning Privacy Norms for Social Software"}, {"link": "", "title": "The cross-purposes of cross-posting: Boundary reshaping behavior in online discussion communities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115641"}
{"ref": [{"link": "", "title": "Apache Lucene - Apache Solr"}, {"link": "", "title": "Code Search\u2019 GitHub"}, {"link": "", "title": "CodeExchange"}, {"link": "", "title": "GitHub. Build software better, together"}, {"link": "", "title": "Google Code"}, {"link": "", "title": "Hacker News"}, {"link": "", "title": "Java Forums at the Big Moose Saloon"}, {"link": "", "title": "Java"}, {"link": "", "title": "jQuery"}, {"link": "", "title": "MALLET homepage"}, {"link": "", "title": "Ohloh Code Search"}, {"link": "", "title": "searchcode | source code search engine"}, {"link": "", "title": "Similarity (Lucene 2.9.4 API)"}, {"link": "", "title": "Sourcegraph"}, {"link": "", "title": "Stack Overflow"}, {"link": "", "title": "GraPacc: A Graph-based Pattern-oriented, Context-sensitive Code Completion Tool"}, {"link": "", "title": "Context-Based Search in Software Development"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "What's in a Name? A Study of Identifiers"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Jungloid Mining: Helping to Navigate the API Jungle"}, {"link": "", "title": "SearchBar: A Search-centric Web History for Task Resumption and Information Re-finding"}, {"link": "", "title": "Sourcerer: Mining and Searching Internet-scale Software Repositories"}, {"link": "", "title": "Applying a Semantic Layer in a Source Code Search Tool"}, {"link": "", "title": "Concise and consistent naming [software system identifier naming]"}, {"link": "/document/130658", "title": "Cognitive Tools for Locating and Comprehending Software Objects for Reuse"}, {"link": "", "title": "Term-weighting approaches in automatic text retrieval"}, {"link": "", "title": "Contextual Correlates of Synonymy"}, {"link": "", "title": "Example-centric Programming: Integrating Web Search into the Development Environment"}, {"link": "", "title": "Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code"}, {"link": "", "title": "Statistical Power Analysis for the Behavioral Sciences"}, {"link": "", "title": "What's so great about \u2018grep\u2019? Implications for program comprehension tools"}, {"link": "", "title": "Working with search results"}, {"link": "", "title": "Mica: A Web-Search Tool for Finding API Components and Examples"}, {"link": "", "title": "Solving the Search for Source Code"}, {"link": "", "title": "Learning from Examples to Improve Code Completion Systems"}, {"link": "", "title": "What Makes RABBIT Run?"}, {"link": "/document/4639060", "title": "Codetrail: Connecting source code and web resources"}, {"link": "", "title": "Archetypal Internet-Scale Source Code Searching"}, {"link": "", "title": "Thesaurus-based Automatic Query Expansion for Interface-driven Code Search"}, {"link": "", "title": "CodeGenie: Using Test-cases to Search and Reuse Source Code"}, {"link": "", "title": "Characterizing Example Embedding as a software activity"}, {"link": "/document/4602673", "title": "Code Conjurer: Pulling Reusable Software out of Thin Air"}, {"link": "", "title": "What Kinds of Development Problems Can Be Solved by Searching the Web?: A Field Study"}, {"link": "", "title": "Assieme: Finding and Leveraging Implicit References in a Web Search Interface for Programmers"}, {"link": "", "title": "Do developers search for source code examples using multiple facts?"}, {"link": "/document/4016572", "title": "Approximate Structural Context Matching: An Approach to Recommend Relevant Examples"}, {"link": "", "title": "Using an Information Retrieval System to Retrieve Source Code Samples"}, {"link": "", "title": "SNIFF: A Search Engine for Java Using Free-Form Queries"}, {"link": "", "title": "An Information Foraging Theory Perspective on Tools for Debugging, Refactoring, and Reuse Tasks"}, {"link": "", "title": "A Controlled Experiment on the Process Used by Developers During Internet-Scale Code Search"}, {"link": "", "title": "Automatic Query Reformulations for Text Retrieval in Software Engineering"}, {"link": "/document/311059", "title": "Using iterative refinement to find reusable software"}, {"link": "", "title": "Analyzing and mining a code search engine usage log"}, {"link": "", "title": "Semantics-based Code Search"}, {"link": "", "title": "Parseweb: A Programmer Assistant for Reusing Open Source Code on the Web"}, {"link": "", "title": "Discussion of the Papers of Messrs. Anscombe and Daniel"}, {"link": "", "title": "How developers use multi-recommendation system in local code search"}, {"link": "", "title": "Supporting Reuse by Delivering Task-relevant and Personalized Information"}, {"link": "", "title": "Influences on Query Reformulation in Collaborative Web Search"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371992"}
{"ref": [{"link": "", "title": "Automata learning through counterexample guided abstraction refinement"}, {"link": "", "title": "Mining API patterns as partial orders from source code: From usage scenarios to specifications"}, {"link": "", "title": "Symbolic compositional verification by learning assumptions"}, {"link": "", "title": "Synthesis of interface specifications for java classes"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Learning regular sets from queries and counterexamples"}, {"link": "", "title": "Proof rules for automated compositional verification through learning"}, {"link": "", "title": "LIBSVM: A library for support vector machines"}, {"link": "/document/1702519", "title": "Testing software design modeled by finite-state machines"}, {"link": "", "title": "QuickCheck: A lightweight tool for random testing of Haskell programs"}, {"link": "", "title": "Generating test cases for specification mining"}, {"link": "", "title": "Mining object behavior with ADABU"}, {"link": "/document/1566607", "title": "Generating annotated behavior models from end-user scenarios"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Symbolic learning of component interfaces"}, {"link": "", "title": "AMC: An adaptive model checker"}, {"link": "", "title": "Introduction to Automata Theory, Languages, and Computation"}, {"link": "", "title": "Hybrid learning: Interface generation through static, dynamic, and symbolic analysis"}, {"link": "", "title": "CELL: A compositional verification framework"}, {"link": "/document/5197434", "title": "Combinatorial software testing"}, {"link": "/document/533956", "title": "Principles and methods of testing finite state machines - A survey"}, {"link": "", "title": "An efficient algorithm for learning event-recording automata"}, {"link": "/document/5453353", "title": "Counterexample-guided assume-guarantee synthesis through learning"}, {"link": "", "title": "Automatic compositional verification of timed systems"}, {"link": "/document/5431768", "title": "A divergence-oriented approach to adaptive random testing of java programs"}, {"link": "", "title": "Mining software specifications: Method- ologies and applications"}, {"link": "", "title": "Deriving object typestates in the presence of inter-object references"}, {"link": "", "title": "Randoop: Feedback-directed random testing for java"}, {"link": "/document/5431756", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "", "title": "The sk-strings method for inferring PFSA"}, {"link": "", "title": "Advances in Kernel Methods: Support Vector Learning"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Interpolants as classifiers"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Discovering likely method specifications"}, {"link": "", "title": ""}, {"link": "/document/5431763", "title": "Inferring resource specifications from natural language API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693101"}
{"ref": [{"link": "/document/1631937", "title": "The problem with threads"}, {"link": "", "title": "The design, implementation, and evaluation of Jade"}, {"link": "", "title": "Serialization sets: A dynamic dependence-based parallel execution model"}, {"link": "", "title": "CoreDet: A compiler and runtime system for deterministic multithreaded execution"}, {"link": "", "title": "A type and effect system for deterministic parallel java"}, {"link": "", "title": "Safe nondeterminism in a deterministic-by-default parallel language"}, {"link": "", "title": "Inferring method effect summaries for nested heap regions"}, {"link": "", "title": "Technical report: Region and effect inference for safe parallelism"}, {"link": "", "title": "An effect system and language for deterministic-by-default parallel programming"}, {"link": "", "title": "Uniqueness and reference immutability for safe parallelism"}, {"link": "", "title": "Inference and checking of object ownership"}, {"link": "", "title": "Reasoning about programs in continuation-passing style"}, {"link": "", "title": "The essence of compiling with continuations"}, {"link": "", "title": "Region and Effects Annotations Inference Engine"}, {"link": "", "title": "clang: a C language family frontend for LLVM"}, {"link": "", "title": "Threading Building Blocks"}, {"link": "", "title": "Region and Effects Annotations Inference Solver & Benchmarks"}, {"link": "", "title": "SLOCCount"}, {"link": "", "title": "Program analysis and specialization for the C programming language"}, {"link": "", "title": "Partial online cycle elimination in inclusion constraint graphs"}, {"link": "", "title": "Off-line variable substitution for scaling points-to analysis"}, {"link": "", "title": "The ant and the grasshopper: Fast and accurate pointer analysis for millions of lines of code"}, {"link": "", "title": "Implementation of the typed call-by-value A-calculus using a stack of regions"}, {"link": "", "title": "Better static memory management: Improving region-based analysis of higher-order languages"}, {"link": "", "title": "Region analysis and transformation for java programs"}, {"link": "", "title": "Polymorphic effect systems"}, {"link": "", "title": "SharC: Checking data sharing strategies for multithreaded C"}, {"link": "", "title": "Kendo: Efficient deterministic multithreading in software"}, {"link": "", "title": "Deterministic parallelism via liquid effects"}, {"link": "", "title": "Language support for dynamic, hierarchical data partitioning"}, {"link": "", "title": "Effects and effect inference for a core Java calculus"}, {"link": "", "title": "An object-oriented effects system"}, {"link": "", "title": "An efficient way to find the side effects of procedure calls and the aliases of variables"}, {"link": "", "title": "A schema for interprocedural modification side-effect analysis with pointer aliasing"}, {"link": "", "title": "Interprocedural side-effect analysis for Java programs in the presence of dynamic class loading"}, {"link": "", "title": "Precise identification of side-effect-free methods in java"}, {"link": "", "title": "Purity and side effect analysis for Java programs"}, {"link": "", "title": "Algebraic reconstruction of types and effects"}, {"link": "", "title": "Polymorphic type, region and effect inference"}, {"link": "", "title": "A region inference algorithm"}, {"link": "", "title": "Parameter reference immutability: formal definition, inference tool, and comparison"}, {"link": "", "title": "JPure: A Modular Purity System for Java"}, {"link": "", "title": "Inference of Reference Immutability"}, {"link": "", "title": "ReIm & ReImInfer: Checking and Inference of Reference Immutability and Method Purity"}, {"link": "", "title": "Low-level liquid types"}, {"link": "", "title": "Ownership types for flexible alias protection"}, {"link": "", "title": "Formal methods for components and objects"}, {"link": "", "title": "Tunable Static Inference for Generic Universe Types"}, {"link": "/document/6601306", "title": "OwnKit: Inferring modularly checkable ownership annotations for java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372039"}
{"ref": [{"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "SAFEWAP1: Web API misuse detector for web applications"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}, {"link": "", "title": "JSAI: A static analysis platform for JavaScript"}, {"link": "", "title": "Correlation tracking for points-to analysis of Javascript"}, {"link": "", "title": "Document Object Model Activity Statement"}, {"link": "", "title": "HTML Living Standard"}, {"link": "", "title": "Local hoare reasoning about DOM"}, {"link": "", "title": "Modeling and reasoning about DOM events"}, {"link": "", "title": "JavaScript instrumentation for browser security"}, {"link": "", "title": "GATEKEEPER: mostly static enforcement of security and reliability policies for JavaScript code"}, {"link": "", "title": "Modeling the HTML DOM and browser API in static analysis of JavaScript web applications"}, {"link": "", "title": "SAFE: Formal specification and implementation of a scalable analysis framework for ECMAScript"}, {"link": "", "title": "Research material"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "SAFE: JavaScript analysis framework"}, {"link": "", "title": "The SAFE specification"}, {"link": "", "title": "ECMA-262: ECMAScript Language Specification. Edition 5.1"}, {"link": "", "title": "Recency types for analyzing scripting languages"}, {"link": "", "title": "A correspondence between two approaches to interprocedural analysis in the presence of join"}, {"link": "", "title": "Scalable and precise static analysis of JavaScript applications via loop-sensitivity"}, {"link": "", "title": "Jericho HTML parser"}, {"link": "", "title": "Cyberneko HTML parser"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "Checking correctness of TypeScript interfaces for JavaScript libraries"}, {"link": "", "title": "Remedying the eval that men do"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372043"}
{"ref": [{"link": "", "title": "Business processes attempts to find a definition"}, {"link": "", "title": "A Business Process-Driven Approach for Requirements Dependency Analysis"}, {"link": "", "title": "An operational semantics of BPMN collaboration"}, {"link": "", "title": "A structural approach to operational semantics"}, {"link": "", "title": "The Impact of Structuredness on Error Probability of Process Models"}, {"link": "", "title": "The structured phase of concurrency"}, {"link": "", "title": "On structured workflow modelling"}, {"link": "", "title": "Max-imal Structuring of Acyclic Process Models"}, {"link": "", "title": "A Survey of Formal Verification for Business Process Modeling"}, {"link": "/document/6642901", "title": "Towards Living Inter-organizational Processes"}, {"link": "", "title": "Structural characterizations of sound workflow nets"}, {"link": "/document/8115635", "title": "BProVe: a Formal Verification Framework for Business Process Models"}, {"link": "", "title": "All about maude-a high-performance logical framework: how to spec., program and verify syst. in rewriting logic."}, {"link": "", "title": "The Maude LTL model checker"}, {"link": "", "title": "Business process verification-finally a reality!"}, {"link": "", "title": "Semantics and analysis of business process models in BPMN"}, {"link": "", "title": "Fundamentals of business process management."}, {"link": "", "title": "Towards Compliance Verification Between Global and Local Process Models"}, {"link": "", "title": "A Process Semantics for BPMN"}, {"link": "", "title": "Formal verification of complex business processes based on high-level Petri nets"}, {"link": "", "title": "A Tool for Business Process Architecture Analysis"}, {"link": "", "title": "Towards Trustworthy Composite Service Through Business Process Model Verification"}, {"link": "", "title": "Transformation of BPMN Diagrams to YAWL Nets"}, {"link": "", "title": "Trans-forming BPMN diagrams into YAWL nets"}, {"link": "", "title": "Business Processes Verification for e-Government Service Delivery"}, {"link": "", "title": "An eclipse plug-in for formal verification of BPMN processes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115708"}
{"ref": [{"link": "", "title": "Testing location-based function services for mobile applications"}, {"link": "", "title": "Considering context events in event-based testing of mobile applications"}, {"link": "", "title": "System and method for testing peer-to-peer network applications"}, {"link": "", "title": "P2PTester: A tool for measuring P2P platform performance"}, {"link": "", "title": "Propagation of public safety warning messages: A delay tolerant network approach"}, {"link": "", "title": "Ad hoc Network for Emergency Rescue System based on Unmanned Aerial Vehicles"}, {"link": "", "title": "Testing peer-to-peer systems"}, {"link": "", "title": "Wi-Fi Direct Multi-group Data Dissemination for Public Safety The Wi-Fi Direct Technology Multi-group Communication with Android devices"}, {"link": "", "title": "A JESS AGENT Based Architecture for Testing Distributed Systems"}, {"link": "", "title": "Log-based testing"}, {"link": "", "title": "The Emergency Direct Mobile App: Safety Message Dissemination over a Multi-Group Network of Smartphones using Wi-Fi Direct"}, {"link": "/document/6985517", "title": "Device-to-device communications for national security and public safety"}, {"link": "", "title": "Mobile testing-as-a-service (MTaaS) - Infrastructures, issues, solutions and needs"}, {"link": "/document/5434384", "title": "DistressNet: A Wireless Ad Hoc and Sensor Network Architecture for Situation Management in Disaster Response"}, {"link": "", "title": "No way out: Emergency evacuation with no internet access"}, {"link": "", "title": "Virtual P2P environment for testing and evaluation of mobile P2P agents networks"}, {"link": "", "title": "A model-based approach to test automation for context-aware mobile applications"}, {"link": "", "title": "Automating UI tests for mobile applications with formal gesture descriptions"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "MobileTest: A tool supporting automatic black box test for software on smart mobile devices"}, {"link": "", "title": "ProximAid: Proximal adhoc networking to aid emergency response"}, {"link": "", "title": "Caiipa: Automated Large-scale Mobile App Testing through Contextual Fuzzing"}, {"link": "", "title": "Context-Dependent Testing of Applications for Mobile Devices"}, {"link": "/document/7888396", "title": "Robotic Testing of Mobile Apps for Truly Black-Box Automation"}, {"link": "", "title": "A novel distributed testing approach based on test cases dependencies for communication protocols"}, {"link": "/document/8115712", "title": "AndroFleet: Testing WiFi Peer-to-Peer Mobile Apps in the Large"}, {"link": "", "title": "Automated Testing of Mobile Applications: A Systematic Map and Review"}, {"link": "", "title": "Help Me: Opportunistic smart rescue application and system"}, {"link": "", "title": "Designing mobile applications for emergency response: Citizens acting as human sensors"}, {"link": "", "title": "Model-based testing of global properties on large-scale distributed systems"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "", "title": "Cloud-Based Mobile App Testing Framework: Architecture, Implementation and Execution"}, {"link": "", "title": "An Agent-based Collaborative Framework for Mobile Peer-to-Peer Applications"}, {"link": "", "title": "Wi-FI Alliance"}, {"link": "", "title": "External Event-Based Test Cases for Mobile Application"}, {"link": "", "title": "Mobile application test case generation focusing on external events"}, {"link": "", "title": "A test analysis method for black box testing using AUT and fault knowledge"}, {"link": "", "title": "Pigeon: A framework for testing peer-to-peer massively multiplayer online games over heterogeneous network"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115712"}
{"ref": [{"link": "", "title": "Aurora: A new model and architecture for data stream management"}, {"link": "", "title": "Odr: Output-deterministic replay for multicore debugging"}, {"link": "", "title": "Traceback: First fault diagnosis by reconstruction of distributed control flow"}, {"link": "", "title": "Qemu, a fast and portable dynamic translator"}, {"link": "/document/6253540", "title": "Maitland: Lighter-weight vm introspection to support cyber-security in the cloud"}, {"link": "", "title": "Framework for instruction-level tracing and analysis of program executions"}, {"link": "", "title": "Pandora's Bochs: Automated Malware Unpacking"}, {"link": "", "title": "Tracking bad apples: Reporting the origin of null and undefined value errors"}, {"link": "", "title": "Binary code extraction and interface identification for security applications"}, {"link": "", "title": "Digital fx!32 running 32-bit x86 applications on alpha nt"}, {"link": "", "title": "S2e: A platform for in-vivo multi-path analysis of software systems"}, {"link": "", "title": "Decoupling dynamic program analysis from execution in virtual environments"}, {"link": "", "title": "Shade: A fast instruction-set simulator for execution profiling"}, {"link": "/document/5958036", "title": "Virtuoso: Narrowing the semantic gap in virtual machine introspection"}, {"link": "", "title": "Revirt: Enabling intrusion analysis through virtualmachine logging and replay"}, {"link": "/document/6234438", "title": "Space traveling across vm: Automatically bridging the semantic gap in virtual machine introspection via online kernel data redirection"}, {"link": "", "title": "Towards self-propagate mal-packets in sensor networks"}, {"link": "", "title": "Stealthy malware detection through vmm-based\"out-of-the-box\" semantic view reconstruction"}, {"link": "", "title": "Xcomp/xpack Download Page"}, {"link": "", "title": "Renovo: A hidden code extractor for packed executables"}, {"link": "", "title": "Dualslicing"}, {"link": "/document/5504785", "title": "Inspector gadget: Automated extraction of proprietary gadgets from malware binaries"}, {"link": "", "title": "Platform Independent Trace Project Website"}, {"link": "", "title": "Whole program paths"}, {"link": "", "title": "T-check: Bug finding for sensor networks"}, {"link": "", "title": ""}, {"link": "", "title": "Upx: The Ultimate Packer for Executables"}, {"link": "/document/4413009", "title": "Omniunpack: Fast, generic, and safe unpacking of malware"}, {"link": "/document/1431564", "title": "Bugnet: Continuously recording program execution for deterministic replay debugging"}, {"link": "", "title": "[Tinyos-contrib-commits] Cvs: Tinyos-1.x/contrib/ucb/tos/cc1000pulse cc1000radiointm.nc, 1.2, 1.3"}, {"link": "/document/1381912", "title": "Atemu: A fine-grained sensor network simulator"}, {"link": "", "title": "Polyunpack: Automating the hidden-code extraction of unpackexecuting malware"}, {"link": "", "title": "Jockey: A user-space library for record-replay debugging"}, {"link": "", "title": "A universal semantic bridge for virtual machine introspection"}, {"link": "", "title": "Exploits Database by Offensive Security"}, {"link": "", "title": "Assure: Automatic software selfhealing using rescue points"}, {"link": "", "title": "Flashback: A lightweight extension for rollback and deterministic replay for software debugging"}, {"link": "", "title": "Record and transplay: Partial checkpointing for replay debugging across heterogeneous systems"}, {"link": "", "title": ""}, {"link": "/document/5718653", "title": "Xtrec: Secure real-time execution trace recording on commodity platforms"}, {"link": "", "title": "Antivirus Scan"}, {"link": "", "title": "Efficient checkpointing of java software using context-sensitive capture and replay"}, {"link": "/document/1206994", "title": "A \"flight data recorder\" for enabling full-system multiprocessor deterministic replay"}, {"link": "", "title": "Retrace: Collecting execution trace with virtual machine deterministic replay"}, {"link": "", "title": "Clairvoyant: A comprehensive source-level debugger for wireless sensor networks"}, {"link": "", "title": "Obfuscation resilient binary code reuse through trace-oriented programming"}, {"link": "/document/1550986", "title": "Whole execution traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693065"}
{"ref": [{"link": "/document/6227211", "title": "A systematic study of automated program repair: fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: models and first results"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "History driven program repair"}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "Toward improving graftability on automated program repair"}, {"link": "", "title": "File cloning in open source java projects: The good, the bad, and the ugly"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Repairing programs with semantic code search (t)"}, {"link": "/document/6624047", "title": "An unabridged source code dataset for research in software reuse"}, {"link": "", "title": "GZoltar: an eclipse plug-in for testing and debugging"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "", "title": "Apache Lucene"}, {"link": "", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "/document/1019480", "title": "CCFinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Lucene Practical Scoring Function."}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Defects4J: A database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "ASTOR: A Program Repair Library for Java"}, {"link": "", "title": "Nopol: Automatic Repair of conditional Statement Bugs in Java Programs"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "SpoonLabs Nopol"}, {"link": "", "title": "HD Repair"}, {"link": "", "title": "ACS"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Automatic repair of real bugs: An experience report on the Defects4J dataset"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "", "title": "Better test cases for better automated program repair"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "", "title": "Test Case Generation for Program Repair: A Study of Feasibility and Effectiveness"}, {"link": "", "title": "Identifying patch correctness in test-based automatic program repair"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "/document/6606623", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "Qlose: Program repair with quantitative objectives"}, {"link": "", "title": "S3: syntax-and semantic-guided repair synthesis via programming by examples"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Detecting and escaping infinite loops with jolt"}, {"link": "", "title": "MintHint: Automated synthesis of repair hints"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Systematic editing: generating program transformations from an example"}, {"link": "", "title": "LASE: locating and applying systematic edits by learning from examples"}, {"link": "", "title": "Learning syntactic program transformations from examples"}, {"link": "", "title": "Automatic inference of code transforms for patch generation"}, {"link": "", "title": "Automated software transplantation"}, {"link": "", "title": "Program fracture and recombination for efficient automatic code reuse"}, {"link": "", "title": "Codecarboncopy"}, {"link": "", "title": "Automated transplantation and differential testing for clones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115676"}
{"ref": [{"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "", "title": "Fast Algorithms for Mining Association Rules"}, {"link": "", "title": "Generalized association rule mining with constraints"}, {"link": "", "title": "On the use of cross-validation for time series predictor evaluation"}, {"link": "/document/1421041", "title": "Clustering Software Artifacts Based on Frequent Common Changes"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "", "title": "Random Forests"}, {"link": "", "title": "Loss functions for binary class probability estimation and classification: structure and application"}, {"link": "", "title": "An empirical comparison of supervised learning algorithms"}, {"link": "", "title": "Case-Based Reasoning with Confidence"}, {"link": "", "title": "Measures of Solution Accuracy in Case-Based Reasoning Systems"}, {"link": "/document/1463229", "title": "Hipikat: a project memory for software development"}, {"link": "/document/895984", "title": "Does code decay? Assessing the evidence from change management data"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "/document/1231205", "title": "CVS release history data for detecting logical couplings"}, {"link": "", "title": "Interestingness measures for data mining"}, {"link": "/document/1357812", "title": "Predicting change propagation in software systems"}, {"link": "", "title": "Research issues in data stream association rule mining"}, {"link": "/document/5645449", "title": "Blending conceptual and evolutionary couplings to support change impact analysis in source code"}, {"link": "", "title": "Association Rule Pruning based on Interestingness Measures with Clustering"}, {"link": "", "title": "Beyond support and confidence: Exploring interestingness measures for rule-based specification mining"}, {"link": "", "title": "Should I follow this fault localization tool's output?"}, {"link": "", "title": "Predicting Effectiveness of IR-Based Bug Localization Techniques"}, {"link": "", "title": "On selecting interestingness measures for association rules: User oriented description and multiple criteria decision aid"}, {"link": "", "title": "Efficient Adaptive-Support Association Rule Mining for Recommender Systems"}, {"link": "", "title": "Pruning and summarizing the discovered associations"}, {"link": "", "title": "Data Mining and Knowledge Discovery Handbook"}, {"link": "", "title": "A survey of interestingness measures for knowledge discovery"}, {"link": "", "title": "Exploring the Effects of History Length and Age on Mining Software Change Impact"}, {"link": "", "title": "Practical Guidelines for Change Recommendation using Association Rule Mining"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Recommender systems"}, {"link": "/document/4656392", "title": "Logical Coupling Based on Fine-Grained Change Information"}, {"link": "", "title": "Generalizing the Analysis of Evolutionary Coupling for Software Change Impact Analysis"}, {"link": "/document/7832888", "title": "Improving change recommendation using aggregated association rules"}, {"link": "", "title": "Mining Association Rules with Item Constraints"}, {"link": "", "title": "Selecting the right interestingness measure for association patterns"}, {"link": "", "title": "Pruning and Grouping Discovered Association Rules"}, {"link": "", "title": "Mining Generalized Association Rules with Multiple Minimum Supports"}, {"link": "/document/1324645", "title": "Predicting source code changes by mining change history"}, {"link": "", "title": "Generating non-redundant association rules"}, {"link": "", "title": "Impact analysis of change requests on source code based on interaction and commit histories"}, {"link": "", "title": "Real world performance of association rule algorithms"}, {"link": "/document/1463228", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115680"}
{"ref": [{"link": "", "title": "Cloud Broker: Helping you buy better"}, {"link": "", "title": "Smart CloudBench: Automated performance benchmarking of the cloud"}, {"link": "", "title": "Policy-based Automation of SLA establishment for cloud computing services"}, {"link": "", "title": "AutoSLAM - A policy-driven middleware for automated SLA establishment in SOA environments"}, {"link": "", "title": "TPC Benchmark W (Web Commerce) Specication, Version 2.0r. Technical Specication"}, {"link": "", "title": "Clearing the clouds: A study of emerging scale-out workloads on modern hardware"}, {"link": "", "title": "RightScale State of the Cloud Report 2013"}, {"link": "/document/6340191", "title": "Demystifying cloud benchmarking paradigm - An in depth view"}, {"link": "", "title": "A performance analysis of EC2 cloud computing services for scientific computing"}, {"link": "", "title": "IaaS cloud benchmarking: Approaches, challenges, and experience"}, {"link": "", "title": "CloudCmp: Comparing public cloud providers"}, {"link": "", "title": "CloudProphet: Towards application performance prediction in cloud"}, {"link": "/document/5693181", "title": "Evaluating cloud platform architecture with the care framework"}, {"link": "", "title": "CloudRank-D: Benchmarking and ranking cloud computing systems for data processing applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693136"}
{"ref": [{"link": "", "title": "A view of cloud computing"}, {"link": "", "title": "A Framework for Self-adaptive Controllers in the Cloud"}, {"link": "", "title": "Automated software testing as a service"}, {"link": "", "title": "Cloud9: A software testing service"}, {"link": "/document/6015579", "title": "Principles of elastic processes"}, {"link": "", "title": "Evosuite: Automatic test suite generation for object-oriented software"}, {"link": "", "title": "Service specification in cloud environments based on extensions to open standards"}, {"link": "/document/6604429", "title": "Testing elastic systems with surrogate models"}, {"link": "/document/6635971", "title": "RESTful business process management in the cloud"}, {"link": "", "title": "Protecting SLA with surrogate models"}, {"link": "", "title": "A surrogate modeling and adaptive sampling toolbox for computer based design"}, {"link": "", "title": "Testing of data-centric and event-based dynamic service compositions"}, {"link": "", "title": "Testing idempotence for infrastructure as code"}, {"link": "", "title": "Elastic stream processing in the cloud"}, {"link": "/document/6253496", "title": "Expertus: A generator approach to automate performance testing in iaas clouds"}, {"link": "", "title": "The JOpera visual composition language"}, {"link": "", "title": "Engineering autonomic controllers for virtualized web applications"}, {"link": "", "title": "Automating experimentation on distributed testbeds"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693140"}
{"ref": [{"link": "", "title": "Stack Trace Analysis for Large Scale Debugging"}, {"link": "", "title": "Leveraging Existing Instrumentation to Automatically Infer Invariant-Constrained Models"}, {"link": "", "title": "Generating Test Cases for Specification Mining"}, {"link": "", "title": "Mining temporal rules for software maintenance"}, {"link": "", "title": "SPOT: an Extensible Model Checking Library using Transition-based Generalized B\u00fcchi Automata"}, {"link": "", "title": "Patterns in Property Specifications for Finite-state Verification"}, {"link": "", "title": "Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, chapter Temporal and Modal Logic"}, {"link": "/document/908957", "title": "Dynamically Discovering Likely Program Invariants to Support Program Evolution"}, {"link": "", "title": "Javert: Fully Automatic Mining of General Temporal Properties from Dynamic Traces"}, {"link": "", "title": "Symbolic Mining of Temporal Specifications"}, {"link": "", "title": "Online Inference and Enforcement of Temporal Properties"}, {"link": "", "title": "A Pattern-Based Approach to Parametric Specification Mining"}, {"link": "/document/7371998", "title": "General LTL Specification Mining"}, {"link": "", "title": "Scalable Specification Mining for Verification and Diagnosis"}, {"link": "", "title": "Understanding User Understanding: Determining Correctness of Generated Program Invariants"}, {"link": "", "title": "/*Icomment: Bugs or Bad Comments?*/"}, {"link": "", "title": "Process Mining and Verification of Properties: An Approach Based on Temporal Logic"}, {"link": "", "title": "Mining Temporal Specifications for Error Detection"}, {"link": "", "title": "Perracotta: Mining Temporal API Rules from Imperfect Traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372082"}
{"ref": [{"link": "", "title": "Linux device drivers (Third Edition)"}, {"link": "", "title": "Era of SoCs"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "Improving the reliability of commodity operating systems"}, {"link": "", "title": "Dingo: Taming device drivers"}, {"link": "", "title": "Programming languages - C"}, {"link": "", "title": "Thorough static analysis of device drivers"}, {"link": "", "title": "Predicate abstraction of ANSI-C programs using SAT"}, {"link": "", "title": "Checking system rules using system-specific, programmer-written compiler extensions"}, {"link": "", "title": "Temporal-safety proofs for systems code"}, {"link": "", "title": "Termination proofs for systems code"}, {"link": "", "title": "Testing closed-source binary device drivers with DDT"}, {"link": "", "title": "SymDrive: Testing drivers without devices"}, {"link": "", "title": "A solver for reachability modulo theories"}, {"link": "", "title": "Finding kernel problems automatically"}, {"link": "", "title": "Documenting and automating collateral evolutions in Linux device drivers"}, {"link": "", "title": "The kernel lock validator"}, {"link": "", "title": "RacerX: effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "KISS: Keep it simple and sequential"}, {"link": "", "title": "LOCKSMITH: Context-sensitive correlation analysis for race detection"}, {"link": "", "title": "RELAY: Static race detection on millions of lines of code"}, {"link": "", "title": "Software and the concurrency revolution"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": ""}, {"link": "", "title": "Hybrid dynamic data race detection"}, {"link": "", "title": "Goldilocks: A race and transaction-aware Java runtime"}, {"link": "", "title": "FastTrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "Weakest-precondition of unstructured programs"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "The LLVM compiler infrastructure"}, {"link": "", "title": "Clang: A C language family frontend for LLVM"}, {"link": "", "title": "SMACK: Decoupling source language details from verifier implementations"}, {"link": "", "title": "SMACK: A bounded software verifier for C programs"}, {"link": "", "title": "BoogiePL: A typed procedural language for checking object-oriented programs"}, {"link": "", "title": "A scalable memory model for low-level code"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Engineering a static verification tool for GPU kernels"}, {"link": "", "title": "Houdini, an annotation assistant for ESC/Java"}, {"link": "", "title": "In defense of soundiness: a manifesto"}, {"link": "", "title": "Powering the Static Driver Verifier using Corral"}, {"link": "", "title": "Delay-bounded scheduling"}, {"link": "", "title": "Static and precise detection of concurrency errors in systems code using SMT solvers"}, {"link": "", "title": "Reducing concurrent analysis under a context bound to sequential analysis"}, {"link": "", "title": "Effective data-race detection for the kernel"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems - An Approach to the State-Explosion Problem"}, {"link": "", "title": "Fast and accurate static data-race detection for concurrent programs"}, {"link": "", "title": "Semantic reduction of thread interleavings in concurrent programs"}, {"link": "", "title": "Section based program analysis to reduce overhead of detecting unsynchronized thread communication"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "", "title": "WARLOCK - A static data race analysis tool"}, {"link": "", "title": "Oracle Corporation, \u201cAnalyzing program performance with Sun Work-Shop, Chapter 5: Lock analysis tool"}, {"link": "", "title": "Efficient and precise datarace detection for multithreaded object-oriented programs"}, {"link": "", "title": "The design and implementation of a verification technique for GPU kernels"}, {"link": "", "title": "Verification of infinite state systems by compositional model checking"}, {"link": "", "title": "Automatic verification of data race freedom in device drivers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372006"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 33rd International Conference on Software Engineering"}, {"link": "", "title": "Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering -"}, {"link": "", "title": "Future Internet Testing"}, {"link": "", "title": ""}, {"link": "", "title": "In Adaptable and extensible component systems, 2002"}, {"link": "", "title": "Proceedings of the 9th Asian Computing Science Conference on Advances in Computer Science: Dedicated to Jean-Louis Lasse: on the Occasion of His 5th Cycle Birthday"}, {"link": "", "title": "J. Syst. Softw"}, {"link": "", "title": "Adaptive random testing for object-oriented software"}, {"link": "", "title": ""}, {"link": "", "title": "Software: Practice and Experience"}, {"link": "/document/6044587", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 34th International Conference on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "ACM Trans. Softw. Eng. Methodol"}, {"link": "", "title": "Proceedings of the 24th International Symposium on Software Reliability Engineering, ISSRE'13"}, {"link": "", "title": ""}, {"link": "", "title": "SIGPLAN Not"}, {"link": "", "title": ""}, {"link": "", "title": "Encyclopedia of Software Engineering"}, {"link": "", "title": "SIGPLAN Not"}, {"link": "", "title": "Proceedings of the 8th International Workshop on Dynamic Analysis"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering"}, {"link": "", "title": "SIGSOFT Softw. Eng. Notes"}, {"link": "", "title": "Proceedings of the 2014 International Conference on Generative Programming: Concepts and Experiences"}, {"link": "", "title": "The 8th Int. Workshop on Search-Based Softare Testing"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Advanced Compiler Design and Implementation"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 19th European Conference on Object-Oriented Programming"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 29th International Conference on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "Int. J. Softw. Tools Technol. Transf"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 34th International Conference on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "The 8th Int. Workshop on Search-Based Softare Testing"}, {"link": "", "title": "Cute and jcute: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "SIGSOFT Softw. Eng. Notes"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "Purity and side effect analysis for Java programs"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 2Nd International Conference on Tests and Proofs"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications"}, {"link": "", "title": "Dynamic purity analysis for Java programs"}, {"link": "", "title": "Journal of Educational and Behavioral Statistics"}, {"link": "", "title": "Proceedings of the 16th European Conference on Machine Learning"}, {"link": "", "title": "SIGSOFT Softw. Eng. Notes"}, {"link": "", "title": "Proceedings of the 11th International Conference on Tools and Algorithms for the Construction and Analysis of Systems"}, {"link": "", "title": "Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the IEEE/ACM International Conference on Automated Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372010"}
{"ref": [{"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "IccTA: Detecting inter-component privacy leaks in Android apps"}, {"link": "", "title": "TaintDroid: An information flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Android implicit information flow demystified"}, {"link": "", "title": "UI/Application Exerciser Monkey"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "SuSi: A Tool for the Fully Automated Classification and Categorization of Android Sources and Sinks"}, {"link": "", "title": "Causation"}, {"link": "", "title": "Macworld"}, {"link": "", "title": "Mining sandboxes"}, {"link": "", "title": "Droidbench 2.0"}, {"link": "", "title": "DroidRA: taming reflection to support whole-program analysis of android apps"}, {"link": "", "title": "Constructing grounded theory: a practical guide through qualitative analysis."}, {"link": "", "title": "How practitioners perceive the relevance of software engineering research"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "Card Sorting In"}, {"link": "", "title": "JADX: Dex to Java decompiler"}, {"link": "", "title": "Scalable and precise taint analysis for android"}, {"link": "", "title": "Detecting sensitive data disclosure via bi-directional text correlation analysis"}, {"link": "", "title": "Experimental program analysis: A new program analysis paradigm"}, {"link": "", "title": "Javalanche: Efficient mutation testing for Java"}, {"link": "", "title": "Sensa: Sensitivity analysis for quantitative change-impact prediction"}, {"link": "", "title": "Orbs: Language-independent program slicing"}, {"link": "", "title": "Directed greybox fuzzing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115639"}
{"ref": [{"link": "", "title": "Dynamic Program Slicing"}, {"link": "", "title": "Mobi GUITAR - a tool for automated model-based testing of mobile apps"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Using Machine Learning to Support Debugging with Tarantula"}, {"link": "/document/1317470", "title": "Finding Latent Code Errors via Machine Learning over Program Executions"}, {"link": "", "title": "Improving the Utility of Compiler"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "/document/7372031", "title": "Automated Test Input Generation for Android: Are We There Yet? (E)"}, {"link": "", "title": "Minimizing GUI event traces"}, {"link": "", "title": "Testing can be formal, too"}, {"link": "", "title": "An Efficient Relevant Slicing Method for Debugging"}, {"link": "", "title": "PUMA: Programmable UI-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Empirical Evaluation of the Tarantula Automatic FaultLocalization Technique"}, {"link": "/document/6169", "title": "PELAS - Program Error-Locating Assistant System"}, {"link": "", "title": "Forward Computation of Dynamic Program Slices"}, {"link": "", "title": "Scalable Statistical Bug Isolation"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "Sapienz: multi-objective automated testing for Android applications"}, {"link": "", "title": "HDD: Hierarchical Delta Debugging"}, {"link": "", "title": "Test-case Reduction for C Compiler Bugs"}, {"link": "/document/1240292", "title": "Fault Localization with Nearest Neighbor Queries"}, {"link": "", "title": "The Use of Program Profiling for Software Maintenance with Applications to the Year 2000 Problem"}, {"link": "", "title": "Programmers use Slices when Debugging"}, {"link": "/document/5010248", "title": "Program slicing"}, {"link": "", "title": "Yesterday, my program worked"}, {"link": "", "title": "Isolating Cause-Effect Chains from Computer Programs"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-Inducing Input"}, {"link": "", "title": "Precise Dynamic Slicing Algorithms"}, {"link": "", "title": "Android uiautomator"}, {"link": "", "title": "C-Reduce"}, {"link": "", "title": "Delta"}, {"link": "", "title": "Delta Debugging"}, {"link": "", "title": "Garnter. Worldwide smartphone sales to end users by operating system in 3Q16"}, {"link": "", "title": "Google Play. The Google Play application market"}, {"link": "", "title": "Mobile Testing Center of Baidu"}, {"link": "", "title": "Monkeyrunner"}, {"link": "", "title": "Robotium"}, {"link": "", "title": "Statista. Number of available applications in the Google Play Store from"}, {"link": "", "title": "Testin"}, {"link": "", "title": "The Monkey UI android testing tool"}, {"link": "", "title": "UTEST platform of Tencent"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115643"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "More SPASS with isabelle - superposition with hard sorts and configurable simplification"}, {"link": "", "title": "Inductive verification of data model invariants for web applications"}, {"link": "", "title": "Coexecutability for efficient verification of data model updates"}, {"link": "", "title": "Sort it out with monotonicity - translating between many-sorted and unsorted first-order logic"}, {"link": "", "title": ""}, {"link": "", "title": "Efficient e-matching for smt solvers"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": ""}, {"link": "", "title": "A fast linear-arithmetic solver for DPLL(T)"}, {"link": "", "title": "A mathematical introduction to logic"}, {"link": "", "title": ""}, {"link": "", "title": "Architectural Styles and the Design of Network-based Software Architectures"}, {"link": "", "title": "Extended static checking for java"}, {"link": "", "title": ""}, {"link": "", "title": "Order-sorted algebra I: equational deduction for multiple inheritance, overloading, exceptions and partial operations"}, {"link": "", "title": "Alloy: A lightweight object modelling notation"}, {"link": "", "title": "Software Abstractions: Logic, Language, and Analysis"}, {"link": "", "title": ""}, {"link": "", "title": "First-order theorem proving and vampire"}, {"link": "", "title": "A cookbook for using the model-view controller user interface paradigm in Smalltalk-80"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": ""}, {"link": "/document/6612274", "title": "An integrated data model verifier with property templates"}, {"link": "", "title": "Bounded verification of Ruby on Rails data models"}, {"link": "", "title": "Unbounded data model verification using SMT solvers"}, {"link": "", "title": "The Development of CASC"}, {"link": "", "title": ""}, {"link": "", "title": "Quantification and the empty domain"}, {"link": "", "title": ""}, {"link": "", "title": "Overview - Redmine"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Deductive composition of astronomical software from subroutine libraries"}, {"link": "", "title": "The TPTP typed first-order form with arithmetic"}, {"link": "", "title": "The State of CASC"}, {"link": "", "title": "The TPTP problem library"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Spass input syntax version 1.5"}, {"link": "", "title": "SPASS version 3.5"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371994"}
{"ref": [{"link": "", "title": "Assessing the maintainability of software product line feature models using structural metrics"}, {"link": "", "title": "Perfect hashing and CNF encodings of cardinality constraints"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "A first step towards a framework for the automated analysis of feature models"}, {"link": "", "title": "Automated reasoning on feature models"}, {"link": "", "title": "Handbook of Satisfiability"}, {"link": "", "title": "Treewidth: Characterizations, applications, and computations"}, {"link": "", "title": "Upper bounds to the clique width of graphs"}, {"link": "", "title": "Cool features and tough decisions: A comparison of variability modeling approaches"}, {"link": "", "title": "Exploiting problem structure for solution counting"}, {"link": "", "title": "Better Algorithms for Satisfiability Problems for Formulas of Bounded Rank-width"}, {"link": "", "title": "Are there any good digraph width measures?"}, {"link": "", "title": "Sans constraints? Feature diagrams vs. Feature models"}, {"link": "", "title": "The structure of tractable constraint satisfaction problems"}, {"link": "", "title": "Width parameters beyond tree-width and their applications"}, {"link": "/document/1232832", "title": "A consumer report on BDD packages"}, {"link": "", "title": "Feature- Oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "Empirical study of the anatomy of modern SAT solvers"}, {"link": "/document/5989796", "title": "CPU accounting for multicore processors"}, {"link": "", "title": "Approximating fractional hypertree width"}, {"link": "", "title": "SAT-based analysis of feature models is easy"}, {"link": "", "title": "Efficient Reasoning Techniques for Large Scale Feature Models"}, {"link": "", "title": "Rank-width and vertex-minors"}, {"link": "", "title": "The order encoding: From tractable CSP to tractable SAT"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques"}, {"link": "/document/6100068", "title": "A performance comparison of contemporary algorithmic approaches for automated analysis operations on feature models"}, {"link": "", "title": "Graph minors. III. Planar tree-width"}, {"link": "", "title": "Constraint satisfaction with bounded treewidth revisited"}, {"link": "/document/6606595", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "/document/1704057", "title": "Feature diagrams: A survey and a formal semantics"}, {"link": "", "title": "BeTTy: Benchmarking and testing on the automated analysis of feature models"}, {"link": "", "title": "ETHOM: An Evolutionary Algorithm for Optimized Feature Models Generation (V. 1.1)"}, {"link": "", "title": "Variability model of the Linux kernel"}, {"link": "", "title": "Towards an optimal CNF encoding of boolean cardinality constraints"}, {"link": "", "title": "Compiling finite linear CSP into SAT"}, {"link": "", "title": "Measuring complexity of domain models represented by feature diagrams"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693103"}
{"ref": [{"link": "", "title": "Software development with code maps"}, {"link": "", "title": "Surfelipse: Context-aware meta search in the ide"}, {"link": "", "title": "Theories, tools and research methods in program comprehension: Past, present and future"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Statistical Machine Translation"}, {"link": "", "title": "Statistical machine translation"}, {"link": "", "title": "The mathematics of statistical machine translation: Parameter estimation"}, {"link": "", "title": "Statistical phrase-based translation"}, {"link": "", "title": "Phrase-based statistical translation of programming languages"}, {"link": "", "title": "The alignment template approach to statistical machine translation"}, {"link": "", "title": "Statistical syntax-directed translation with extended domain of locality"}, {"link": "", "title": "Accurate unlexicalized parsing"}, {"link": "", "title": "Learning accurate, compact, and interpretable tree annotation"}, {"link": "", "title": "The mathematics of statistical machine translation: Parameter estimation"}, {"link": "", "title": "An unsupervised model for joint phrase alignment and extraction"}, {"link": "", "title": "What's in a translation rule?"}, {"link": "", "title": "Improved backing-off for m-gram language modeling"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Applying conditional random fields to Japanese morphological analysis"}, {"link": "", "title": "Scalable modified Kneser-Ney language model estimation"}, {"link": "", "title": "Moses: Open source toolkit for statistical machine translation"}, {"link": "", "title": "Travatar: A forest-to-string machine translation engine based on tree transducers"}, {"link": "", "title": "Bleu: A method for automatic evaluation of machine translation"}, {"link": "", "title": "Overview of the patent machine translation task at the ntcir-10 workshop"}, {"link": "", "title": "Proc. WMT"}, {"link": "", "title": "Statistical significance tests for machine translation evaluation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372045"}
{"ref": [{"link": "", "title": "Trustrace: Mining software repositories to improve the accuracy of requirement traceability links"}, {"link": "", "title": "Database interfaces"}, {"link": "", "title": "Software traceability: trends and future directions"}, {"link": "", "title": "Software and Systems Traceability"}, {"link": "", "title": "Requirements tracing on target (retro): improving software maintenance through traceability recovery"}, {"link": "", "title": "An overview of a natural language-assisted database user interface: Enli"}, {"link": "", "title": "Accurate unlexicalized parsing"}, {"link": "", "title": "Requirements engineering management handbook"}, {"link": "", "title": "Evaluating the interpretation of natural language trace queries"}, {"link": "", "title": "Live study: Collecting natural language trace queries"}, {"link": "", "title": "A visual traceability modeling language"}, {"link": "/document/5069577", "title": "TQL: A query language to support traceability"}, {"link": "", "title": "The stanford corenlp natural language processing toolkit"}, {"link": "", "title": "Novel terms and cooperation in a natural language interface"}, {"link": "", "title": "H2 database engine"}, {"link": "/document/6912254", "title": "TiQi: Towards natural language trace queries"}, {"link": "", "title": "Tiqi: answering unstructured natural language trace queries"}, {"link": "", "title": "Direct manipulation vs. interface agents"}, {"link": "", "title": "Learning to parse natural language database queries into logical form"}, {"link": "", "title": "Natural language for database queries: A laboratory study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115714"}
{"ref": [{"link": "", "title": "Efficient string matching: An aid to bibliographic search"}, {"link": "", "title": "Adding trace matching with free variables to AspectJ"}, {"link": "", "title": "Making trace monitors feasible"}, {"link": "", "title": "Runtime Verification - First International Conference, RV"}, {"link": "", "title": "Rule systems for run-time monitoring: From eagle to ruler"}, {"link": "", "title": "Monpoly: Monitoring usage-control policies"}, {"link": "", "title": "Behavior abstraction in malware analysis"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "J-LO A Tool for Runtime-checking Temporal Assertions"}, {"link": "", "title": "Dependent advice: A general approach to optimizing history-based aspects"}, {"link": "", "title": "A staged static program analysis to improve the performance of runtime monitoring"}, {"link": "", "title": "String-rewriting systems"}, {"link": "", "title": "Instumenting C programs with nested word monitors"}, {"link": "/document/5431757", "title": "Efficient formalismindependent monitoring of parametric properties"}, {"link": "", "title": "Towards monitoring-oriented programming: A paradigm combining specification and implementation"}, {"link": "", "title": "MOP: An efficient and generic runtime verification framework"}, {"link": "", "title": "All about Maude-A High-Performance Logical Framework: How to Specify, Program, and Verify Systems in Rewriting Logic"}, {"link": "/document/5368053", "title": "Larva - Safer monitoring of real-time java programs (tool paper)"}, {"link": "", "title": "Event-based runtime verification of Java programs"}, {"link": "", "title": "Temporal Rover 1997-2009"}, {"link": "", "title": "Relational queries over program traces"}, {"link": "", "title": "Monitoring Java programs with Java PathExplorer"}, {"link": "", "title": "Garbage collection for monitoring parametric properties"}, {"link": "", "title": "An overview of aspectJ"}, {"link": "", "title": "Java-MaC: A run-time assurance approach for Java programs"}, {"link": "", "title": "Finding application errors and security flaws using PQL: A program query language"}, {"link": "", "title": "Efficient monitoring of parametric context-free patterns"}, {"link": "", "title": "An overview of the MOP runtime verification framework"}, {"link": "", "title": "Enforceable security policies"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693067"}
{"ref": [{"link": "", "title": "The design of the Borealis stream processing engine"}, {"link": "", "title": "Flume- Java: Easy, efficient data-parallel pipelines"}, {"link": "/document/735431", "title": "Combining mutation operators in evolutionary programming"}, {"link": "/document/536462", "title": "The combinatorial design approach to automatic test generation"}, {"link": "", "title": "MapReduce: Simplified data processing on large clusters"}, {"link": "", "title": "A report on random testing"}, {"link": "", "title": "Swarm testing"}, {"link": "", "title": "Partition and compose: Parallel complex event processing"}, {"link": "/document/6517299", "title": "IBM Streams Processing Language: Analyzing big data in motion"}, {"link": "", "title": "Opening the black boxes in data flow optimization"}, {"link": "", "title": ""}, {"link": "", "title": "Program analysis for event-based distributed systems"}, {"link": "", "title": "Advances in dataflow programming languages"}, {"link": "/document/1458143", "title": "Synchronous data flow"}, {"link": "", "title": "Deadlock avoidance for streaming computations with filtering"}, {"link": "", "title": "Extending a general-purpose streaming system for XML"}, {"link": "", "title": "Generating example data for dataflow programs"}, {"link": "", "title": "Parallel-stage decoupled software pipelining"}, {"link": "", "title": "Commutativity analysis: A new analysis framework for parallelizing compilers"}, {"link": "", "title": "Autoparallelizing stateful distributed streaming applications"}, {"link": "", "title": "From a calculus to an execution environment for stream processing"}, {"link": "", "title": "A universal calculus for stream processing languages"}, {"link": "", "title": "A survey of stream processing"}, {"link": "", "title": "An empirical characterization of stream programs and its implications for language and compiler design"}, {"link": "/document/6704673", "title": "Semantic characterization of mapreduce workloads"}, {"link": "", "title": "Distributed aggregation for data-parallel computing: Interfaces and implementations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693071"}
{"ref": [{"link": "", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "A deep language model for software code"}, {"link": "", "title": "Aerospike documentation"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Antlr4"}, {"link": "", "title": "Probabilistic model for code with decision trees"}, {"link": "", "title": "Learning programs from noisy data"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "venukb. Eclipse jdt"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Pcc"}, {"link": "", "title": "Experiment data"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115678"}
{"ref": [{"link": "", "title": "Processpair: A tool for automated performance analysis and improvement recommendation in software development"}, {"link": "", "title": "Cvexplorer: Identifying candidate developers by mining and exploring their open source contributions"}, {"link": "/document/865905", "title": "An individual-based description of learning within an organization"}, {"link": "", "title": "Learning curve models and applications: Literature review and research directions"}, {"link": "", "title": "A probabilistic framework to learn from multiple annotators with time-varying accuracy"}, {"link": "", "title": "Learning from crowds"}, {"link": "", "title": "The multidimensional wisdom of crowds"}, {"link": "", "title": "Predicting next label quality: A time-series model of crowdwork"}, {"link": "", "title": "Dynamic task allocation algorithm for hiring workers that learn"}, {"link": "", "title": "Behind the learning curve: A sketch of the learning process"}, {"link": "", "title": "Performance improvement theory"}, {"link": "", "title": "The organizational learning curve"}, {"link": "", "title": "Learning as accumulation: A reexamination of the learning curve"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115682"}
{"ref": [{"link": "", "title": "LLVM Compiler"}, {"link": "", "title": "Design of mutant operators for the C programming language"}, {"link": "", "title": "Software Testing Techniques"}, {"link": "", "title": "CoreDet: A compiler and runtime system for deterministic multithreaded execution"}, {"link": "", "title": "An empirical framework for comparing effectiveness of testing and property-based formal analysis"}, {"link": "/document/4144730", "title": "Mutation operators for concurrent Java (J2SE 5.0)"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "/document/5958815", "title": "Enabling sophisticated analyses of x86 binaries with RevGen"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "/document/4344123", "title": "The Csaw C mutation tool: Initial results"}, {"link": "/document/5477101", "title": "MuTMuT: Efficient exploration for mutation testing of multithreaded code"}, {"link": "", "title": "Native Client"}, {"link": "", "title": "Strong higher order mutation-based test data generation"}, {"link": "/document/6569735", "title": "The impact of concurrent coverage metrics on testing effectiveness"}, {"link": "/document/4637557", "title": "Constructing subtle faults using higher order mutation testing"}, {"link": "/document/4670308", "title": "MILU: A customizable, runtime-optimized higher order mutation testing tool for the full C language"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "/document/5954433", "title": "Para\u03bc - A partial and higher-order mutation tool with concurrency operators"}, {"link": "", "title": "Juliet Test Suites"}, {"link": "/document/1463233", "title": "Toward understanding the rhetoric of small source code changes"}, {"link": "", "title": "Data structures in the multicore age"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693142"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "Journal of Computer Science"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 2007 ACM SIGPLAN Conference on Programming Language Design and Implementation"}, {"link": "", "title": "A small place to discover languages in GitHub"}, {"link": "", "title": "Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation"}, {"link": "", "title": "Proceedings of the 48th International Conference on Objects, Models, Components, Patterns"}, {"link": "", "title": "Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Communications of the ACM"}, {"link": "", "title": ""}, {"link": "", "title": "ESEC/FSE, 2013"}, {"link": "/document/5728834", "title": "IEEE Transactions on Softw. Eng"}, {"link": "", "title": "xUnit test patterns: Refactoring test code"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": "Proceedings of the International Conference on Software Testing, Verification and Validation (ICST)"}, {"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "", "title": ""}, {"link": "", "title": "Conference on Programming Language Design and Implementation (PLDI)"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 9th Joint Meeting on Foundations of Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Document Object Model (DOM)"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372008"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Software process: Improvement and practice"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/544352", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "AntiPatterns: refactoring software, architectures, and projects in crisis"}, {"link": "", "title": ""}, {"link": "", "title": "IEEE Transactions on Software Engineering, 20(6):476\u2013493"}, {"link": "", "title": "Journal of Software"}, {"link": "", "title": ""}, {"link": "", "title": "Software Metrics: A Rigorous and Practical Approach"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Proc of the 22nd IEEE International Requirements Engineering Conference (RE)"}, {"link": "", "title": ""}, {"link": "/document/5328703", "title": "An exploratory study of the impact of code smells on software change-proneness"}, {"link": "", "title": "An Exploratory Study of the Impact of Antipatterns on Class Change- and Fault-proneness"}, {"link": "", "title": "Journal of systems and software"}, {"link": "", "title": "Domain matters: bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in java mobile apps"}, {"link": "", "title": "13/0"}, {"link": "", "title": "In ICSM (Industrial and Tool"}, {"link": "/document/1702388", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": "17th European Conference on Software Maintenance and Reengineering (CSMR)"}, {"link": "/document/5196681", "title": "Meur. DECOR: A Method for the Specification and Detection of Code and Design Smells"}, {"link": "/document/5196681", "title": "Meur. Decor: A method for the specification and detection of code and design smells"}, {"link": "", "title": "CoRR"}, {"link": "", "title": "PRoc of the 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Software & Systems Modeling"}, {"link": "", "title": "20th International Conference on Program Comprehension (ICPC)"}, {"link": "", "title": "Reconstructing dalvik applications"}, {"link": "", "title": "Software quality journal"}, {"link": "/document/4493342", "title": "Software Maintenance and Reengineering, 2008. CSMR 2008. 12th European Conference on"}, {"link": "", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "Exploratory Data Analysis"}, {"link": "", "title": "Soot-a java bytecode optimization framework"}, {"link": "", "title": ""}, {"link": "", "title": "Code Smells in the Mobile Applications Domain"}, {"link": "", "title": "IEEE International Conference on Software Maintenance (ICSM\u201809)"}, {"link": "", "title": "Intl. Conf. Softw. Maint"}, {"link": "", "title": "Techniques and Tools for Analyzing and Understanding Android Applications"}, {"link": "", "title": "28th IEEE International Conference on Software Maintenance (ICSM)"}, {"link": "", "title": ""}, {"link": "", "title": "Software, IEEE"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372012"}
{"ref": [{"link": "", "title": "objdump"}, {"link": "", "title": "BinDiff"}, {"link": "", "title": "Bindiff release note"}, {"link": "", "title": "Comparing randomized search and grid search for hyperparameter estimation"}, {"link": "", "title": "Feature importance"}, {"link": "", "title": "Radiff2"}, {"link": "", "title": "ByteWeight: Learning to recognize functions in binary code"}, {"link": "", "title": "Scalable, behavior-based malware clustering"}, {"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "", "title": "Random forests"}, {"link": "/document/4531150", "title": "Automatic patch-based exploit generation is possible: Techniques and implications"}, {"link": "", "title": "Detecting self-mutating malware using control-flow graph matching"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Software Similarity and Classification"}, {"link": "", "title": "BinGo: Cross-architecture cross-OS binary search"}, {"link": "", "title": "Operating system protection through program evolution"}, {"link": "", "title": "Manufacturing cheap, resilient, and stealthy opaque constructs"}, {"link": "", "title": "Statistical similarity of binaries"}, {"link": "", "title": "Tracelet-based code search in executables"}, {"link": "", "title": "Graph-based comparison of executable objects"}, {"link": "", "title": "Blanket execution: Dynamic similarity testing for program binaries and components"}, {"link": "", "title": "discovRE: Efficient cross-architecture identification of bugs in binary code"}, {"link": "", "title": "Structural comparison of executable objects"}, {"link": "", "title": "An empirical study of the robustness of windows NT applications using random testing"}, {"link": "", "title": "Scalable detection of semantic clones"}, {"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "BinHunt: Automatically finding semantic differences in binary programs"}, {"link": "", "title": "Extremely randomized trees"}, {"link": "", "title": "Micro execution"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Dowsing for overflows: A guided fuzzer to find buffer boundary violations"}, {"link": "/document/708428", "title": "Sup-port vector machines"}, {"link": "", "title": "Large-scale malware indexing using function-call graphs"}, {"link": "", "title": "Cross-architecture binary semantics understanding via similar code comparison"}, {"link": "", "title": "Towards automatic software lineage inference"}, {"link": "/document/7076635", "title": "Program characterization using runtime values and its application to software plagiarism detection"}, {"link": "", "title": "Value-based program characterization and its application to software plagiarism detection"}, {"link": "", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "", "title": "Binary function clustering using semantic hashes"}, {"link": "", "title": "Obfuscator-LLVM: Software protection for the masses"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "SoK: Automated software diversity"}, {"link": "", "title": "Macroscopic Data Structure Analysis and Optimization"}, {"link": "", "title": "CP-Miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "/document/7823022", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software and algorithm plagiarism detection"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "", "title": "An empirical study of the reliability of unix utilities"}, {"link": "/document/7490384", "title": "Deviation-based obfuscation-resilient program equivalence checking with application to software plagiarism detection"}, {"link": "", "title": "BinSim: Trace-based semantic binary diffing via system call sliced segment equivalence checking"}, {"link": "", "title": "Detecting software theft via whole program path birthmarks"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "", "title": "Cross-architecture bug search in binary executables"}, {"link": "", "title": "Detecting code clones in binary executables"}, {"link": "/document/97458", "title": "A survey of decision tree classifier methodology"}, {"link": "", "title": "A dynamic birthmark for Java"}, {"link": "", "title": "Recognizing functions in binaries with neural networks"}, {"link": "", "title": "Fuzzing: Brute Force Vulnerability Discovery"}, {"link": "", "title": "Model-based whitebox fuzzing for program binaries"}, {"link": "", "title": "Semantics-aware machine learning for function recognition in binary code"}, {"link": "", "title": "Detecting software theft via system call based birthmarks"}, {"link": "", "title": "Program logic based software plagiarism detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115645"}
{"ref": [{"link": "", "title": "http://smt-lib.org/"}, {"link": "", "title": "http://smt-lib.org/"}, {"link": "", "title": ""}, {"link": "", "title": "Symbolic compositional verification by learning assumptions"}, {"link": "", "title": "Learning regular sets from queries and counterexamples"}, {"link": "", "title": "SAVCBS"}, {"link": "", "title": "CAV"}, {"link": "", "title": "Exact learning boolean function via the monotone theory"}, {"link": "", "title": "IFM"}, {"link": "", "title": "Automated compositional abstraction refinement for concurrent c programs: A two-level approach"}, {"link": "", "title": "TACAS"}, {"link": "", "title": "CAV"}, {"link": "", "title": "TACAS"}, {"link": "", "title": "Design and sythesis of synchronization skeletons using branching time temporal logic"}, {"link": "", "title": "LICS 1989"}, {"link": "", "title": "TACAS"}, {"link": "", "title": "ISSTA"}, {"link": "", "title": "A new form of the herbrand-gentzen theorem"}, {"link": "", "title": "Refining interface alphabets for compositional verification"}, {"link": "", "title": "CONCUR"}, {"link": "", "title": "You assume, we guarantee: Methodology and case studies"}, {"link": "", "title": "Interpolant-based transition relation approximation"}, {"link": "", "title": "Interpolant-based transition relation approximation"}, {"link": "/document/1645117", "title": "Hierarchical interface-based supervisory control of a flexible manufacturing system"}, {"link": "", "title": "ATVA"}, {"link": "/document/6682903", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "/document/5453353", "title": "Counterexample-guided assume-guarantee synthesis through learning"}, {"link": "", "title": "Compositional synthesis of concurrent systems through causal model checking and learning"}, {"link": "", "title": "Automatic compositional verification of timed systems"}, {"link": "", "title": "Symbolic Model Checking: An approach to the state explosion problem"}, {"link": "", "title": "Interpolation and sat-based model checking"}, {"link": "", "title": "Learning-based symbolic assume-guarantee reasoning with automatic decomposition"}, {"link": "", "title": "ASE"}, {"link": "", "title": "Logics and Models of Concurrent Systems"}, {"link": "", "title": "Specification and verification of concurrent systems in CESAR"}, {"link": "", "title": "Multitasking supervisory control of discrete-event systems"}, {"link": "", "title": "SAT-based compositional verification using lazy learning"}, {"link": "", "title": "CAV"}, {"link": "", "title": "The rely-guarantee method for verifying shared variable concurrent programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371996"}
{"ref": [{"link": "", "title": "Amazon's S3 cloud service turns into a puff of smoke"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "DebugAdvisor: A recommender system for debugging"}, {"link": "", "title": "Fingerprinting the datacenter: Automated classification of performance crises"}, {"link": "", "title": "Formal concept analysis applied to fault localization"}, {"link": "", "title": "Correlating instrumentation data to system states: A building block for automated diagnosis and control"}, {"link": "", "title": "Capturing, indexing, clustering, and retrieving system history"}, {"link": "", "title": "XIAO: Tuning code clones at hands of engineers in practice"}, {"link": "", "title": "Healing online service systems via mining historical issue repositories"}, {"link": "/document/6424866", "title": "Performance issue diagnosis for online service systems"}, {"link": "", "title": "Understanding the crucial differences between classification and discovery of association rules - A position paper"}, {"link": "/document/6227198", "title": "Performance debugging in the large via mining millions of stack traces"}, {"link": "", "title": "Achieving scalable automated diagnosis of distributed systems performance problems"}, {"link": "", "title": "Outages force cloud computing users to rethink tactics"}, {"link": "", "title": "Mining optimal class association rule set"}, {"link": "", "title": "SOBER: Statistical model-based bug localization"}, {"link": "", "title": "A simple way to estimate the cost of downtime"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "", "title": "Generalized vector spaces model in information retrieval"}, {"link": "", "title": "Automated known problem diagnosis with event traces"}, {"link": "/document/1467838", "title": "Ensembles of models for automated diagnosis of system performance problems"}, {"link": "", "title": "Software analytics as a learning case in practice: Approaches and experiences"}, {"link": "/document/6559957", "title": "Software analytics in practice"}, {"link": "/document/6227121", "title": "Software analytics in practice: Mini tutorial"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693105"}
{"ref": [{"link": "/document/6693060", "title": "Big problems in industry (panel)"}, {"link": "", "title": "The TXL source transformation language"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "Knowledge-based Configuration: From Research to Business Cases"}, {"link": "", "title": "In defense of soundiness: a manifesto"}, {"link": "", "title": "Why do computers stop and what can be done about it?"}, {"link": "", "title": "Fail fast"}, {"link": "", "title": "The spoofax language workbench: rules for declarative specification of languages and ides"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Efficient symbolic execution for analysing cryptographic protocol implementations"}, {"link": "", "title": "Translation validation"}, {"link": "", "title": "Practical, low-effort equivalence verification of real code"}, {"link": "", "title": "Symbolic crosschecking of floating-point and SIMD code"}, {"link": "", "title": "Proving optimizations correct using parameterized program equivalence"}, {"link": "", "title": "Compiler optimization correctness by temporal logic"}, {"link": "", "title": "On verifying ATL transformations using \u2018off-the-shelf\u2019 SMT solvers"}, {"link": "", "title": "Verification of ATL transformations using transformation models and model finders"}, {"link": "", "title": "Checking model transformation refinement"}, {"link": "", "title": "Verification of graph-based model transformations using alloy"}, {"link": "", "title": "Information & Software Technology"}, {"link": "", "title": "DMS \u00ae: program transformations for practical scalable software evolution"}, {"link": "", "title": "CORBA 3 fundamentals and programming"}, {"link": "", "title": "Model transformations for migrating legacy deployment models in the automotive industry"}, {"link": "", "title": "Automated verification of model transformations in the automotive industry"}, {"link": "", "title": "Specification and verification of graph-based model transformation properties"}, {"link": "", "title": "AUTOSAR - the standardized software architecture"}, {"link": "", "title": "ATL: A model transformation tool"}, {"link": "", "title": "Dsltrans: A turing incomplete transformation language"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372047"}
{"ref": [{"link": "", "title": "Aspect oriented programming"}, {"link": "", "title": "Does aspect-oriented programming work?"}, {"link": "", "title": "An overview of aspectj"}, {"link": "", "title": "PCDiff: Attacking the fragile pointcut problem"}, {"link": "", "title": "Scope: an aspectj compiler for supporting user-defined analysis-based pointcuts"}, {"link": "/document/6958384", "title": "Improving the quality of aspectj application: Translating name-based pointcuts to analysis-based pointcuts"}, {"link": "", "title": "Open modules: Modular reasoning about advice"}, {"link": "", "title": "Enforcing behavioral constraints in evolving aspect-oriented programs"}, {"link": "", "title": "Bridging java and aspectj through explicit join points"}, {"link": "", "title": "Join point interfaces for safe and flexible decoupling of aspects"}, {"link": "", "title": "Managing the evolution of aspect-oriented software with model-based pointcuts"}, {"link": "/document/1510166", "title": "Using pointcut delta analysis to support evolution of aspect-oriented software"}, {"link": "", "title": "Change impact analysis for aspect-oriented software evolution"}, {"link": "", "title": "Tool support for understanding and diagnosing pointcut expressions"}, {"link": "", "title": "Aspect recommendation for evolving software"}, {"link": "", "title": "Tool-supported refactoring of aspect-oriented programs"}, {"link": "/document/5710951", "title": "Pointcut rejuvenation: Recovering pointcut expressions in evolving aspect-oriented software"}, {"link": "", "title": "Mylar: a degree-of-interest model for ides"}, {"link": "", "title": "Composition patterns: An approach to designing reusable aspects"}, {"link": "", "title": "A compilation and optimization model for aspect -oriented programs"}, {"link": "", "title": "How aspectj is used: An analysis of eleven aspectj programs"}, {"link": "", "title": "Concern graphs: finding and describing concerns using structural program dependencies"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Inferring structural patterns for concern traceability in evolving software"}, {"link": "", "title": "Optimization of object-oriented programs using static class hierarchy analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372051"}
{"ref": [{"link": "", "title": "Java Programming Language Enhancements"}, {"link": "", "title": "Default methods"}, {"link": "", "title": "Interface evolution via virtual extensions methods"}, {"link": "", "title": "Effective Java"}, {"link": "", "title": "Automated refactoring of legacy Java software to default methods"}, {"link": "", "title": "Towards improving interface modularity in legacy java software through automated refactoring"}, {"link": "", "title": "Object-oriented type systems"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Integrating refactoring support into a Java development tool"}, {"link": "", "title": "The Java Language Specification"}, {"link": "", "title": "Performance of using default methods to compile scala trait methods"}, {"link": "", "title": "eclipse/jetty.project pull request #773"}, {"link": "", "title": "Automatic inheritance hierarchy restructuring and method refactoring"}, {"link": "", "title": "Migrating large object-oriented applications into component-based ones: Instantiation and inheritance transformation"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "", "title": "Automated refactoring of legacy Java software to enumerated types"}, {"link": "", "title": "Rejuvenating C++ programs through demacrofication"}, {"link": "", "title": "Improving refac-toring speed by 10x"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115716"}
{"ref": [{"link": "/document/6606573", "title": "Comparative causality: Explaining the differences between executions"}, {"link": "", "title": "SYNERGY: A new algorithm for property checking"}, {"link": "", "title": "Economics of software verification"}, {"link": "", "title": "Using Valgrind to detect undefined value errors with bit-precision"}, {"link": "", "title": "Address-Sanitizer: A fast address sanity checker"}, {"link": "", "title": "Analyzing concurrency bugs using dual slicing"}, {"link": "", "title": "Race frontier: Reproducing data races in parallel-program debugging"}, {"link": "", "title": "Record/replay for nondeterministic program executions"}, {"link": "", "title": "Doubleplay: Parallelizing sequential logging and replay"}, {"link": "", "title": "Debugging operating systems with time-traveling virtual machines"}, {"link": "", "title": "Algorithms for automatically computing the causal paths of failures"}, {"link": "/document/5958039", "title": "Differential slicing: Identifying causal execution differences for security applications"}, {"link": "", "title": "Efficient program execution indexing"}, {"link": "", "title": "Scalable temporal order analysis for large scale debugging"}, {"link": "/document/5963696", "title": "Precise calling context encoding"}, {"link": "", "title": "Valgrind: A framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "CTrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}, {"link": "", "title": "Accurate, efficient, and adaptive calling context profiling"}, {"link": "", "title": "Probabilistic calling context"}, {"link": "", "title": "Breadcrumbs: Efficient context sensitivity for dynamic bug detection analyses"}, {"link": "", "title": "Inferred call path profiling"}, {"link": "/document/566449", "title": "Efficient path profiling"}, {"link": "", "title": "A software instruction counter"}, {"link": "", "title": "Fast loop-level data dependence profiling"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Program dependence graph and its use in optimization"}, {"link": "", "title": "Accurately choosing execution runs for software fault localization"}, {"link": "/document/4907650", "title": "Alchemist: A transparent dependence distance profiling infrastructure"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "/document/1553577", "title": "Locating causes of program failures"}, {"link": "", "title": "Symbolic model checking without bdds"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Sequentializing program dependence graphs for irreducible programs"}, {"link": "", "title": "On loops, dominators, and dominance frontiers"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "/document/1577061", "title": "Diablo: A reliable, retargetable and extensible link-time rewriting framework"}, {"link": "", "title": "Pruning dynamic slices with confidence"}, {"link": "", "title": "Control-flow Analysis of Higher-order Languages"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693069"}
{"ref": [{"link": "/document/1311957", "title": "Characterization of the impact of faulty drivers on the robustness of the linux kernel"}, {"link": "", "title": "Designing fault injection experiments using state-based model to test a space software"}, {"link": "", "title": "Mining specifications"}, {"link": "/document/980005", "title": "Dependability of COTS microkernel-based systems"}, {"link": "/document/4630121", "title": "Analyzing the effects of disk-pointer corruption"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "Spectral Graph Theory"}, {"link": "", "title": "A case study on state-based robustness testing of an operating system for the avionic domain"}, {"link": "/document/5283184", "title": "Assessment and improvement of hang detection in the linux operating system"}, {"link": "/document/5431737", "title": "Generating fixes from object behavior anomalies"}, {"link": "/document/466945", "title": "Measuring robustness of a fault tolerant aerospace system"}, {"link": "/document/1185639", "title": "Multidimensional characterization of the impact of faulty drivers on the operating systems behavior"}, {"link": "", "title": "Biological Sequence Analysis"}, {"link": "", "title": "A model-based approach for robustness testing"}, {"link": "", "title": "Windows XP kernel crash analysis"}, {"link": "/document/730892", "title": "A methodology for detection and estimation of software aging"}, {"link": "/document/730886", "title": "Testing the robustness of windows NT software"}, {"link": "/document/1209956", "title": "Characterization of linux kernel behavior under errors"}, {"link": "", "title": "Achieving scalable model-based testing through test case diversity"}, {"link": "", "title": "IEEE Standard Glossary of Software Engineering Terminology"}, {"link": "", "title": "IEEE Standard for Information Technology-Portable Operating System Interface (POSIX) Part 1"}, {"link": "", "title": "SystemTap: Instrumenting the Linux kernel for analyzing performance and functional problems"}, {"link": "/document/4402204", "title": "On the impact of injection triggers for OS robustness evaluation"}, {"link": "/document/4273001", "title": "On the selection of error model(s) for OS robustness evaluation"}, {"link": "/document/1311938", "title": "Benchmarking the dependability of windows NT4, 2000 and XP"}, {"link": "/document/1544717", "title": "Benchmarking the dependability of windows and linux using postmark\u2122 workloads"}, {"link": "", "title": "Dependability Benchmarking for Computer Systems"}, {"link": "/document/877845", "title": "The exception handling effectiveness of POSIX operating systems"}, {"link": "/document/387474", "title": "Software dependability in the Tandem GUARDIAN system"}, {"link": "", "title": "State based robustness testing for components"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "/document/4302690", "title": "Dynamic detection of COTS component incompatibility"}, {"link": "", "title": "SolarisTM Performance and Tools: DTrace and MDB Techniques for Solaris 10 and OpenSolaris"}, {"link": "", "title": "Study of the reliability of UNIX utilities"}, {"link": "", "title": "Fuzz revisited: A re-examination of the reliability of UNIX utilities and services"}, {"link": "", "title": "Fault Injection Capabilities Infrastructure"}, {"link": "/document/4273002", "title": "Experimental risk assessment and comparison using software fault injection"}, {"link": "", "title": "Httperf - A tool for measuring web server performance"}, {"link": "/document/5474200", "title": "Emulation of transient software faults for dependability assessment: A case study"}, {"link": "/document/1467854", "title": "Model-based failure analysis of journaling file systems"}, {"link": "", "title": "DO-178B Software Considerations in Airborne Systems and Equipment Certification"}, {"link": "", "title": "WindowsR Sysinternals Administrator's Reference"}, {"link": "", "title": "Profiling the operational behavior of OS device drivers"}, {"link": "/document/146625", "title": "Software defects and their impact on system availability-A study of field failures in operating systems"}, {"link": "", "title": "A tutorial on spectral clustering"}, {"link": "", "title": "Recognizing behavioral patterns at runtime using finite automata"}, {"link": "", "title": "The impact of fault models on software robustness evaluations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693073"}
{"ref": [{"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "ConLock: A constraint-based approach to dynamic checking on deadlocks in multithreaded programs"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "Extended static checking for Java"}, {"link": "", "title": "Racerx: Effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "Static deadlock detection for Java libraries"}, {"link": "", "title": "Using runtime analysis to guide model checking of Java programs"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "/document/6227156", "title": "Magicfuzzer: Scalable deadlock detection for large-scale applications"}, {"link": "", "title": "Sherlock: scalable deadlock detection for concurrent programs"}, {"link": "", "title": "Multicore SDK: A practical and efficient deadlock detector for real-world applications"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Grail: Context-aware fixing of concurrency bugs"}, {"link": "/document/6227184", "title": "Axis: Automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "Fixing deadlocks via lock pre-acquisitions"}, {"link": "", "title": "Deadlock immunity: Enabling systems to defend against deadlocks"}, {"link": "", "title": "Deadlocks: From exhibiting to healing"}, {"link": "", "title": "Finding concurrency bugs in Java"}, {"link": "", "title": "Backtraces - glibc"}, {"link": "", "title": "TLS performance overhead and cost on gnu/linux"}, {"link": "", "title": "Pulse: A dynamic deadlock detection mechanism using speculative execution"}, {"link": "", "title": "Syncperf: Categorizing, detecting, and diagnosing synchronization performance bugs"}, {"link": "", "title": "Dimmunix: Deadlock immunity system for Java/C/C++ software"}, {"link": "", "title": "The parsec benchmark suite: Characterization and architectural implications"}, {"link": "", "title": "PARSEC 2.0: A new benchmark suite for chip-multiprocessors"}, {"link": "", "title": "Pure python memcached client"}, {"link": "", "title": "How sqlite is tested"}, {"link": "", "title": "ab - apache http server benchmarking tool"}, {"link": "", "title": "Mocklinter: Linting mutual exclusive deadlocks with lock allocation graphs"}, {"link": "", "title": "Low-overhead bug fingerprinting for fast debugging"}, {"link": "", "title": "Trace driven dynamic deadlock detection and reproduction"}, {"link": "", "title": "Dynamic deadlock analysis of multithreaded programs"}, {"link": "", "title": "Dynamic deadlock verification for general barrier synchronisation"}, {"link": "", "title": "Testing database-centric applications for causes of database deadlocks"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "Multithreaded test synthesis for deadlock detection"}, {"link": "", "title": "Gadara: Dynamic deadlock avoidance for multithreaded programs"}, {"link": "", "title": "Static lock capabilities for deadlock freedom"}, {"link": "", "title": "Automatic repair for multi-threaded programs with deadlock/livelock using maximum satisfiability"}, {"link": "", "title": "Avoiding deadlock avoidance"}, {"link": "", "title": "Preventing database deadlocks in applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115684"}
{"ref": [{"link": "/document/5071032", "title": "Exploiting the synergy between automated-test-generation and programming-by-contract"}, {"link": "", "title": "Using games in introductory courses: Tips from the trenches"}, {"link": "", "title": "Browser-based software for technology transfer"}, {"link": "", "title": "Execution generated test cases: How to make systems code crash itself"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "Comparing alice, greenfoot & scratch"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Game programming in introductory courses with direct state manipulation"}, {"link": "", "title": "A games first approach to teaching introductory programming"}, {"link": "", "title": "Scratch for budding computer scientists"}, {"link": "", "title": "Programming by choice: Urban youth learning programming with Scratch"}, {"link": "", "title": "A brief architectural overview of Alice, a rapid prototyping system for virtual reality"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Experiences with Marmoset: Designing and using an advanced submission and testing system for programming courses"}, {"link": "", "title": "DiffGen: Automated regression unit-test generation"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "Parameterized unit testing: Theory and practice"}, {"link": "/document/6606662", "title": "Teaching and learning programming and software engineering via interactive gaming"}, {"link": "", "title": "The future of teaching programming is on mobile devices"}, {"link": "", "title": "Parameterized unit tests"}, {"link": "", "title": "Alice, greenfoot, and scratch - A discussion"}, {"link": "", "title": "Teaching and training developer-testing techniques and tool support"}, {"link": "/document/6632588", "title": "Educational software engineering: Where software engineering, education, and gaming meet"}, {"link": "", "title": "Future of developer testing: Building quality in code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693144"}
{"ref": [{"link": "/document/5287006", "title": "What makes APIs hard to learn? answers from developers"}, {"link": "", "title": "Krugle code search"}, {"link": "", "title": "Ohloh code search"}, {"link": "", "title": "Sourcerer: mining and searching internet-scale software repositories"}, {"link": "", "title": "Modern Information Retrieval: The Concepts and Technology behind Search"}, {"link": "/document/6100115", "title": "Improving source code search with natural language phrasal representations of method signatures"}, {"link": "/document/6224276", "title": "Inferring semantically related words from software context"}, {"link": "", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "Identifying word relations in software: A comparative study of semantic similarity tools"}, {"link": "", "title": "Extended boolean information retrieval"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "", "title": "Leveraging usage similarity for effective retrieval of examples in code repositories"}, {"link": "", "title": "A search engine for finding highly relevant applications"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "/document/1524916", "title": "Opportunistic problem solving in software engineering"}, {"link": "", "title": "Finding Source Code on the Web for Remix and Reuse"}, {"link": "", "title": "Code fragment summarization"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Sando: An extensible local code search framework"}, {"link": "", "title": "Strathcona example recommendation tool"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Sniff: A search engine for Java using free-form queries"}, {"link": "/document/1698785", "title": "Mica: A web-search tool for finding API components and examples"}, {"link": "", "title": "Examplecentric programming: Integrating web search into the development environment"}, {"link": "", "title": "Assieme: Finding and leveraging implicit references in a web search interface for programmers"}, {"link": "", "title": "Towards an intelligent code search engine"}, {"link": "", "title": "Xsnippet: Mining for sample code"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Grapace: A graph-based pattern-oriented, context-sensitive code completion tool"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usage"}, {"link": "/document/5989838", "title": "Exemplar: A source code search engine for finding highly relevant applications"}, {"link": "", "title": "The concept assignment problem in program understanding"}, {"link": "", "title": "Software reconnaissance: Mapping program features to code"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}, {"link": "/document/6227244", "title": "Tracelab: An experimental workbench for equipping researchers to innovate, synthesize, and comparatively evaluate traceability solutions"}, {"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "/document/1201194", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "/document/5306315", "title": "On the use of relevance feedback in IR-based concept location"}, {"link": "", "title": "Active code search: Incorporating user feedback to improve code search relevance"}, {"link": "/document/6693117", "title": "Learning effective query transformations for enhanced requirements trace retrieval"}, {"link": "", "title": "Automated construction of a softwarespecific word similarity database"}, {"link": "", "title": "Automatically capturing source code context of NL-queries for software maintenance and reuse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372014"}
{"ref": [{"link": "", "title": "Cross-architecture bug search in binary executables"}, {"link": "", "title": "DiscovRE: Efficient cross-architecture identification of bugs in binary code"}, {"link": "", "title": "Statistical similarity of binaries"}, {"link": "", "title": "Scalable graph-based bug search for firmware images"}, {"link": "", "title": "Value-based program characterization and its application to software plagiarism detection"}, {"link": "", "title": "A first step towards algorithm plagiarism detection"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "", "title": "Detecting code clones in binary executables"}, {"link": "", "title": "Structural comparison of executable objects"}, {"link": "", "title": "Zynamics BinDiff"}, {"link": "", "title": "Binslayer: accurate comparison of binary executables"}, {"link": "", "title": "Binhunt: Automatically finding semantic differences in binary programs"}, {"link": "", "title": "iBinHunt: Binary hunting with inter-procedural control flow"}, {"link": "", "title": "Bingo: Cross-architecture cross-os binary search"}, {"link": "", "title": "Automatic patch-based exploit generation is possible: Techniques and implications"}, {"link": "", "title": "Information retrieval for music and motion"}, {"link": "", "title": "FastDTW: Toward Accurate Dynamic Time Warping in Linear Time and Space"}, {"link": "", "title": "Towards accurate binary correspondence using runtime-observed values"}, {"link": "", "title": "Pin: building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Obfuscator-LLVM - software protection for the masses"}, {"link": "", "title": "Matching execution histories of program versions"}, {"link": "/document/4362621", "title": "Matching control flow of program versions"}, {"link": "", "title": "Blanket execution: Dynamic similarity testing for program binaries and components"}, {"link": "", "title": "Malgene: Automatic extraction of malware analysis evasion signature"}, {"link": "", "title": "Identification of common molecular subsequences"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115647"}
{"ref": [{"link": "", "title": "Proceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design and Implementation"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "Runtime Verification"}, {"link": "/document/6659015", "title": "2013 International Conference on Hardware/Software Codesign and System Synthesis (CODES"}, {"link": "/document/6951474", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": ""}, {"link": "", "title": "SIGSOFT FSE"}, {"link": "", "title": "Proceedings of the Eighth IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Journal of Software Maintenance and Evolution: Research and Practice"}, {"link": "", "title": "Inference and enforcement of data structure consistency specifications"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 21st International Conference on Software Engineering"}, {"link": "", "title": "Handbook of Theoretical Computer Science, Volume B:Formal Models and Semantics"}, {"link": "/document/908957", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": "Proceedings of the Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 2008 International Conference on Software Engineering, 2008"}, {"link": "", "title": "Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering -"}, {"link": "", "title": ""}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering"}, {"link": "", "title": "Proceedings of the Second International Workshop on Software Mining"}, {"link": "", "title": "CACM"}, {"link": "", "title": "Software Analysis, Evolution and Reengineering (SANER), 2015 IEEE 22nd International Conference on"}, {"link": "", "title": "Proceedings of the 47th Design Automation Conference"}, {"link": "", "title": ""}, {"link": "", "title": "Scenario-based and value-based specification mining: Better together"}, {"link": "", "title": "Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "Sci. Comput. Program"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "Proceedings of the 26th IEEE/ACM International Conference On Automated Software Engineering (ASE)"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}, {"link": "/document/6311409", "title": "Software Engineering, IEEE Transactions on"}, {"link": "", "title": "Electron. Notes Theor. Comput. Sci."}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Process Mining and Verification of Properties: An Approach Based on Temporal Logic. In R. Meersman and Z. Tari, editors"}, {"link": "", "title": "Logics for Concurrency"}, {"link": "", "title": "Inferring finite-state models with temporal constraints"}, {"link": "", "title": "Empirical Software Engineering"}, {"link": "", "title": "Proceedings of the 11th International Conference on Tools and Algorithms for the Construction and Analysis of Systems"}, {"link": "", "title": "ACM/IEEE International Conference on Software Engineering (ICSE)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371998"}
{"ref": [{"link": "", "title": "Questions programmers ask during software evolution tasks"}, {"link": "", "title": "Locating user interface concepts in source code"}, {"link": "", "title": "Coca: and automated debugger for C"}, {"link": "/document/1342739", "title": "A dataflow language for scriptable debugging"}, {"link": "", "title": "Expositor: Scriptable time-travel debugging with first-class traces"}, {"link": "/document/1684306", "title": "The paradox of software visualization"}, {"link": "", "title": "A field study of how developers locate features in source code"}, {"link": "", "title": "An exploratory study of feature location process: Distinct phases, recurring patterns, and elementary actions"}, {"link": "/document/1553555", "title": "Eliciting design requirements for maintenance-oriented IDEs: A detailed study of corrective and perfective maintenance tasks"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "ORBS: Language-independent program slicing"}, {"link": "", "title": "Cross-language program slicing for dynamic web applications"}, {"link": "", "title": "Debugging revisited: Toward understanding the debugging needs of contemporary software developers"}, {"link": "", "title": "Browsing and searching source code of applications written using a GUI framework"}, {"link": "", "title": "Enhancing static source code search with dynamic data"}, {"link": "", "title": "Moldable, context-aware searching with Spotter"}, {"link": "", "title": "Generating method documentation using concrete values from executions"}, {"link": "", "title": "Debugging reinvented: Asking and answering why and why not questions about program behavior"}, {"link": "/document/6227167", "title": "Object-centric debugging"}, {"link": "/document/1021348", "title": "The role of concepts in program comprehension"}, {"link": "/document/852498", "title": "Case study of feature location using dependence graph"}, {"link": "", "title": "Analyzing dynamic call graphs enhanced with program state information for feature location and understanding"}, {"link": "", "title": "Feature location via information retrieval based filtering of a single scenario execution trace"}, {"link": "", "title": "Domain-driven technique for functionality identification in source code"}, {"link": "", "title": "\n            FLAT\n            "}, {"link": "", "title": "Rethinking user interfaces for feature location"}, {"link": "", "title": "Guiding identification of missing scenarios for dynamic feature location"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115651"}
{"ref": [{"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "Relation of code clones and change couplings"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "/document/4023973", "title": "'Cloning considered harmful' considered harmful"}, {"link": "", "title": "Pattern matching for clone and concept detection"}, {"link": "/document/565012", "title": "Experiment on the automatic detection of function clones in a software system using metrics"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/957835", "title": "Identifying similar code with program dependence graphs"}, {"link": "", "title": "On the effectiveness of clone detection by string matching"}, {"link": "/document/4556129", "title": "NICAD: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Scalable detection of semantic clones"}, {"link": "/document/4639364", "title": "Cleman: Comprehensive clone group evolution management"}, {"link": "/document/1011326", "title": "Gemini: Maintenance support environment based on code clone analysis"}, {"link": "", "title": "Querybased filtering and graphical view generation for clone analysis"}, {"link": "", "title": "Removing clones from the code"}, {"link": "/document/1342759", "title": "Evaluating clone detection techniques from a refactoring perspective"}, {"link": "", "title": "Increasing clone maintenance support by unifying clone detection and refactoring activities"}, {"link": "/document/6007141", "title": "Clone management for evolving software"}, {"link": "/document/6227869", "title": "Industrial application of clone change management system"}, {"link": "/document/6405284", "title": "Cloning practices: Why developers clone and what can be changed"}, {"link": "/document/4222573", "title": "Very-large scale code clone analysis and visualization of open source programs using distributed CCFinder: D-CCFinder"}, {"link": "/document/4796208", "title": "A data mining approach for detecting higherlevel clones in software"}, {"link": "", "title": "Software clone management towards industrial application (dagstuhl seminar 12071)"}, {"link": "", "title": "Automated scheduling for clone-based refactoring using a competent GA"}, {"link": "", "title": "Active refinement of clone anomaly reports"}, {"link": "", "title": "Can i clone this piece of code here?"}, {"link": "/document/1372317", "title": "Managing duplicated code with linked editing"}, {"link": "", "title": "Clone region descriptors: Representing and tracking duplication in source code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693107"}
{"ref": [{"link": "", "title": "A survey on model-based testing approaches: A systematic review"}, {"link": "/document/5381477", "title": "A survey of model-driven testing techniques"}, {"link": "", "title": "A taxonomy of modelbased testing approaches"}, {"link": "", "title": "LEIRIOS test generator: Automated test generation from B models"}, {"link": "", "title": "Model based testing with labelled transition systems"}, {"link": "", "title": "Model-based testing of object-oriented reactive systems with spec explorer"}, {"link": "", "title": "Testing data types implementations from algebraic specifications"}, {"link": "", "title": "A two-level approach to automated conformance testing of VHDL designs"}, {"link": "", "title": "Generating transition probabilities to support model-based software testing"}, {"link": "", "title": "Test selection strategies for lustre descriptions in GATeL"}, {"link": "", "title": "Model-based testing in practice"}, {"link": "/document/382538", "title": "Improved error model of data acquisition systems"}, {"link": "/document/1223216", "title": "Data acquisition system faults detection"}, {"link": "/document/301303", "title": "DAQSIM: A data acquisition system simulation tool"}, {"link": "", "title": "Formally refining software architectures with \u03c0-ARL: A case study"}, {"link": "", "title": "Designing and comparing automated test oracles for GUI-based software applications"}, {"link": "/document/5298471", "title": "A comparative study on automated software test oracle methods"}, {"link": "", "title": "Using data mining for automated software testing"}, {"link": "", "title": "Software testing using model programs"}, {"link": "", "title": "Using a neural network in the software testing process"}, {"link": "/document/1115005", "title": "Generating expected results for automated black-box testing"}, {"link": "", "title": "Automated test oracles for GUIs"}, {"link": "", "title": "Automated generation of test oracles using a model-driven approach"}, {"link": "/document/5416729", "title": "Assessing, comparing, and combining state machine-based testing and structural testing: A series of experiments"}, {"link": "/document/1167787", "title": "Testing web applications"}, {"link": "/document/6405445", "title": "Integrating model-based and constraint-based testing using SpecExplorer"}, {"link": "", "title": "Ecore Tools"}, {"link": "", "title": "The Apache Maven Project"}, {"link": "", "title": "Groovy: A Dynamic Language for the Java Platform"}, {"link": "", "title": "Experiences of applying UML/MARTE on three industrial projects"}, {"link": "/document/6113898", "title": "Using sysml for modeling of safety-critical software-hardware interfaces: Guidelines and industry experience"}, {"link": "", "title": "The Experimentation in Software Engineering - An Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693111"}
{"ref": [{"link": "", "title": "An-dromeda: Accurate and scalable security analysis of web applications"}, {"link": "", "title": "Flow Droid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Scalable flow-sensitive pointer analysis for java with strong updates"}, {"link": "", "title": "Flow analysis and optimization of lisp-like structures"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Inter-procedural data-flow analysis with IFDS/IDE and Soot"}, {"link": "", "title": "Typestate-like analysis of multiple interacting objects"}, {"link": "", "title": "Flowtwist: Efficient context-sensitive inside-out taint analysis for large codebases"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Design your analysis: A case study on implementation reusability of data-flow functions"}, {"link": "", "title": "Stanford SecuriBench"}, {"link": "", "title": "Interprocedural may-alias analysis for pointers: Beyond k-limiting"}, {"link": "", "title": "Precise interprocedural side-effect analysis"}, {"link": "", "title": "Demand-driven points-to analysis for java"}, {"link": "", "title": "Demand-driven context-sensitive alias analysis for java"}, {"link": "", "title": "Scaling CFL-reachability-based points-to analysis using context-sensitive must-not-alias analysis"}, {"link": "", "title": "Snugglebug: a powerful approach to weakest preconditions"}, {"link": "", "title": "Generating precise and concise procedure summaries"}, {"link": "", "title": "A safe approximate algorithm for interprocedural aliasing"}, {"link": "", "title": "Interprocedural analysis with lazy propagation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372049"}
{"ref": [{"link": "", "title": "Experiences of system-level model-based GUI testing of an Android application"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Systematic testing for resource leaks in Android applications"}, {"link": "/document/6614215", "title": "Testing for poor responsiveness in Android applications"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of Android apps"}, {"link": "", "title": "Using GUI ripping for automated testing of Android applications"}, {"link": "", "title": "SCanDroid: Automated security certification of Android applications"}, {"link": "", "title": "Analyzing interapplication communication in Android"}, {"link": "", "title": "Systematic detection of capability leaks in stock Android smartphones"}, {"link": "", "title": "SmartDroid: An automatic system for revealing UI-based trigger conditions in Android applications"}, {"link": "", "title": "Effective inter-component communication mapping in Android with Epicc"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "CHEX: Statically vetting Android apps for component hijacking vulnerabilities"}, {"link": "", "title": "AsDroid: Detecting stealthy behaviors in Android applications by user interface and program behavior contradiction"}, {"link": "", "title": "Apposcopy: Semantics-based detection of Android malware through static analysis"}, {"link": "", "title": "Retrofitting concurrency for Android applications through refactoring"}, {"link": "", "title": "What is keeping my phone awake?"}, {"link": "", "title": "GreenDroid: Automated diagnosis of energy inefficiency for smartphone applications"}, {"link": "", "title": "Detecting energy bugs and hotspots in mobile apps"}, {"link": "", "title": "Stopping and restarting an activity"}, {"link": "", "title": "Memory management for Android applications"}, {"link": "", "title": "Characterizing and detecting resource leaks in Android applications"}, {"link": "", "title": "Finding errors in multithreaded GUI applications"}, {"link": "", "title": "Static analysis of Android programs"}, {"link": "", "title": "Tasks and back stack"}, {"link": "", "title": "APV PDF viewer"}, {"link": "", "title": "Android dialogs"}, {"link": "", "title": "A grey-box approach for automated GUI-model generation of mobile applications"}, {"link": "", "title": "SCanDroid: Security Certifier for anDroid"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in Android applications"}, {"link": "", "title": "Sound and precise malware analysis for Android via pushdown reachability and entry-point saturation"}, {"link": "", "title": "Static analyses of GUI behavior in Android applications"}, {"link": "", "title": "Static reference analysis for GUI objects in Android software"}, {"link": "", "title": "Program analyses for understanding the behavior and performance of traditional and mobile object-oriented software"}, {"link": "", "title": "Intents and intent filters"}, {"link": "", "title": "Composite constant propagation: Application to Android inter-component communication analysis"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "Robotium testing framework for Android"}, {"link": "", "title": "GATOR: Program Analysis Toolkit For Android"}, {"link": "", "title": "An operational semantics for Android activities"}, {"link": "/document/1287256", "title": "GUI ripping: Reverse engineering of graphical user interfaces for testing"}, {"link": "/document/1542069", "title": "Studying the fault-detection effectiveness of GUI test cases for rapidly evolving software"}, {"link": "", "title": "Search-based system testing: High coverage, no false alarms"}, {"link": "", "title": "Android GUI Ripper"}, {"link": "", "title": "Automatic Android GUI traversal with high coverage"}, {"link": "", "title": "Generating test cases for GUI responsibilities using complete interaction sequences"}, {"link": "", "title": "Coverage criteria for GUI testing"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "", "title": "Using a pilot study to derive a GUI model for automated testing"}, {"link": "", "title": "Generating event sequence-based test cases using GUI run-time state feedback"}, {"link": "/document/5444885", "title": "GUI interaction testing: Incorporating event context"}, {"link": "", "title": "Lightweight static analysis for GUI testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372053"}
{"ref": [{"link": "", "title": "F.A.A. Orders Fix for Possible Power Loss in Boeing 787"}, {"link": "", "title": "CVE-2016\u20139793"}, {"link": "", "title": "CVE-2016\u20139754"}, {"link": "", "title": "2011 CWE/SANS Top 25 Most Dangerous Software Errors"}, {"link": "", "title": "MIPS IV Instruction Set"}, {"link": "", "title": "Modular bug-finding for integer overflows in the large: Sound, efficient, bit-precise static analysis"}, {"link": "", "title": "Dynamic test generation to find integer bugs in x86 binary linux programs"}, {"link": "", "title": "Targeted automatic integer overflow discovery using goal-directed conditional branch enforcement"}, {"link": "", "title": "Im-proving integer security for systems with KINT"}, {"link": "", "title": "RICH: automatically protecting against integer-based vulnerabilities"}, {"link": "", "title": "Understanding integer overflow in C/C++"}, {"link": "", "title": "As-if infinitely ranged integer model"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/6606623", "title": "Semfix: program repair via semantic analysis"}, {"link": "", "title": "Minthint: automated synthesis of repair hints"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Program transformations to fix C integers"}, {"link": "", "title": "Automatic fix for C integer errors by precision improvement"}, {"link": "", "title": "A new algorithm for weighted partial maxsat"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "Interval arithmetic: From principles to implementation"}, {"link": "", "title": "Program analysis and specialization for the c programming language"}, {"link": "", "title": "Principles of program analysis"}, {"link": "", "title": "Configurable software verification: Concretizing the convergence of model checking and program analysis"}, {"link": "", "title": "The smt-lib standard version 2.0"}, {"link": "", "title": "Equality logic and uninterpreted functions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115718"}
{"ref": [{"link": "", "title": "Git Version Control System"}, {"link": "", "title": "Apache Subversion (SVN) version control system"}, {"link": "", "title": "Managing Forked Product Variants"}, {"link": "/document/7372057", "title": "Development History Granularity Transformations"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "", "title": "Change Impact Identification in Object Oriented Software Maintenance"}, {"link": "/document/1201210", "title": "Whole Program Path-Based Dynamic Impact Analysis"}, {"link": "", "title": "Chianti: A Tool for Change Impact Analysis of Java Programs"}, {"link": "", "title": "Localizing Failure-inducing Program Edits Based on Spectrum Information"}, {"link": "/document/6112738", "title": "How We Refactor, and How We Know It"}, {"link": "/document/6520859", "title": "Early Detection of Collaboration Conflicts and Risks"}, {"link": "/document/6100097", "title": "History Slicing"}, {"link": "", "title": "Yesterday, My Program Worked. Today, It Does Not. Why?"}, {"link": "", "title": "Selective Bisection Debugging"}, {"link": "", "title": "Mining Version Histories to Guide Software Changes"}, {"link": "", "title": "The Impact of Tangled Code Changes"}, {"link": "", "title": "Refactoring Edit History of Source Code"}, {"link": "/document/536955", "title": "Analyzing Regression Test Selection Techniques"}, {"link": "", "title": "Empirical Evaluation of Hunk Metrics As Bug Predictors"}, {"link": "/document/7372056", "title": "Semantic Slicing of Software Version Histories"}, {"link": "", "title": "Semantic Slicing of Software Version Histories"}, {"link": "", "title": "Precise Semantic History Slicing through Dynamic Delta Refinement"}, {"link": "", "title": "FHistorian: Locating Features in Version Histories"}, {"link": "/document/7962412", "title": "A Dataset for Dynamic Discovery of Semantic Changes in Version Controlled Software Histories"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115722"}
{"ref": [{"link": "", "title": "Tight bounds + Incremental SAT = Better test generation under rich contracts"}, {"link": "", "title": "The B-Book: Assigning Programs to Meanings"}, {"link": "", "title": ""}, {"link": "", "title": "Lingeling plingeling PicoSAT and PrecoSAT at SAT race"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "GrADSAT: A parallel SAT solver for the grid"}, {"link": "", "title": "Modular verification of code with SAT"}, {"link": "", "title": "A belated proof of self-stabilization"}, {"link": "", "title": "Finding bugs efficiently with a SAT solver"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "", "title": "Ranged model checking"}, {"link": "", "title": "Analysis of invariants for efficient bounded verification"}, {"link": "/document/6482141", "title": "TACO: Efficient SAT-based bounded verification using symmetry breaking and tight bounds"}, {"link": "", "title": "PMSat: A parallel version of MiniSAT"}, {"link": "", "title": "ManySAT: A parallel SAT solver"}, {"link": "", "title": "IEEE Standard for A High-Performance Serial Bus"}, {"link": "", "title": "Software Abstractions"}, {"link": "", "title": "Formal modeling and analysis of a flash filesystem in alloy"}, {"link": "", "title": "Analyzing architectural styles"}, {"link": "", "title": "JML: A notation for detailed design"}, {"link": "", "title": "Using the spec# language, methodology, and tools to write bug-free programs"}, {"link": "/document/989787", "title": "TestEra: A novel framework for automated testing of java programs"}, {"link": "", "title": "Parallel test generation and execution with Korat"}, {"link": "", "title": "CD2Alloy: Class diagrams analysis using alloy revisited"}, {"link": "", "title": "OCL Specification v 2.3.1"}, {"link": "", "title": "C-sat: A parallel SAT solver for clusters"}, {"link": "", "title": "Parallel bounded analysis in code with rich invariants by refinement of field bounds"}, {"link": "", "title": "Parallel bounded verification of alloy models by TranScoping"}, {"link": "", "title": "Generating effective symmetry-breaking predicates for search problems"}, {"link": "/document/4815357", "title": "PKorat: Parallel generation of structurally complex test inputs"}, {"link": "", "title": "Scaling symbolic execution using ranged analysis"}, {"link": "/document/5635077", "title": "Optimizing incremental scope-bounded checking with data-flow analysis"}, {"link": "", "title": "An incremental approach to scope- bounded checking using a lightweight formal method"}, {"link": "", "title": "The Z Notation: A Reference Manual"}, {"link": "/document/1180543", "title": "Chord: A scalable peer-to-peer lookup service for internet applications"}, {"link": "", "title": "Kodkod: A relational model finder"}, {"link": "/document/873645", "title": "Model checking programs"}, {"link": "", "title": "Test input generation for java containers using state matching"}, {"link": "", "title": "Compositional binding in network domains"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693075"}
{"ref": [{"link": "/document/5661793", "title": "Swarm verification techniques"}, {"link": "", "title": "Parallelizing the murphi verifier"}, {"link": "", "title": "c-sat: A parallel SAT solver for clusters"}, {"link": "/document/4639302", "title": "Swarm verification"}, {"link": "", "title": "Satzilla: Portfolio-based algorithm selection for SAT"}, {"link": "", "title": "Sicotheo: Simple competitive parallel theorem provers"}, {"link": "", "title": "Strategy parallelism in automated theorem proving"}, {"link": "", "title": "Smart selective competition parallelism ATP"}, {"link": "", "title": "Iterative context bounding for systematic testing of multithreaded programs"}, {"link": "/document/7372071", "title": "Lazy-cseq: A context-bounded model checking tool for multi-threaded c-programs"}, {"link": "", "title": "Bounded model checking of multi-threaded C programs via lazy sequentialization"}, {"link": "", "title": "Bug with a context switch bound 5"}, {"link": "", "title": "A scalable lock-free stack algorithm"}, {"link": "", "title": "Behavioral consistency of C and verilog programs using bounded model checking"}, {"link": "", "title": "Variations on Constants - Flow Analysis of Sequential and Parallel Programs, ser. Lecture Notes in Computer Science"}, {"link": "", "title": "Cseq: A concurrency preprocessor for sequential C verification tools"}, {"link": "", "title": "CBMC - C bounded model checker - (competition contribution)"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Lazy sequentialization for TSO and PSO via shared memory abstractions"}, {"link": "", "title": "Concurrency testing using controlled schedulers: An empirical study"}, {"link": "", "title": "Even better dcas-based concurrent deques"}, {"link": "", "title": "Tractable refinement checking for concurrent objects"}, {"link": "", "title": "Cluster-based LTL model checking of large systems"}, {"link": "", "title": "Scalable multi-core LTL model-checking"}, {"link": "/document/4302778", "title": "The design of a multicore extension of the SPIN model checker"}, {"link": "", "title": "A concurrent portfolio approach to SMT solving"}, {"link": "", "title": "Cloud-based verification of concurrent software"}, {"link": "", "title": "KISS: keep it simple and sequential"}, {"link": "", "title": "Reducing concurrent analysis under a context bound to sequential analysis"}, {"link": "", "title": "Reducing context-bounded concurrent reachability to sequential reachability"}, {"link": "", "title": "Lazy-cseq: A lazy sequentialization tool for C - (competition contribution)"}, {"link": "", "title": "Concurrent program verification with lazy sequentialization and interval analysis"}, {"link": "", "title": "Lazy sequentialization for the safety verification of unbounded concurrent programs"}, {"link": "", "title": "Con2colic testing"}, {"link": "", "title": "Bounded-interference sequential-ization for testing concurrent programs"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "", "title": "Concurrency testing using schedule bounding: an empirical study"}, {"link": "", "title": "Preemption sealing for efficient concurrency testing"}, {"link": "", "title": "Conseq: detecting concurrency bugs through sequential errors"}, {"link": "", "title": "Concurrent test generation using concolic multi-trace analysis"}, {"link": "", "title": "Analyzing recursive programs using a fixed-point calculus"}, {"link": "", "title": "Model-checking parameterized concurrent programs using linear interfaces"}, {"link": "/document/5368112", "title": "Relational interprocedural verification of concurrent programs"}, {"link": "", "title": "Lazy-cseq 2.0: Combining lazy sequentialization with abstract interpretation - (competition contribution)"}, {"link": "", "title": "Mu-cseq 0.4: Individual memory location unwindings - (competition contribution)"}, {"link": "", "title": "Verifying concurrent programs by memory unwinding"}, {"link": "", "title": "Using shared memory abstractions to design eager sequentializations for weak memory models"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115686"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Beautiful interpolants"}, {"link": "", "title": "The SLAM toolkit"}, {"link": "", "title": "Path invariants"}, {"link": "", "title": "CPAchecker: A tool for configurable software verification"}, {"link": "", "title": "Understanding IC3"}, {"link": "", "title": "Compositional shape analysis by means of bi-abduction"}, {"link": "", "title": "Programming Languages and Systems (APLAS)"}, {"link": "", "title": "Counterexample-guided abstraction refinement for symbolic model checking"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Linear invariant generation using non-linear constraint solving"}, {"link": "", "title": "Systematic design of program analysis frameworks"}, {"link": "", "title": "Automatic discovery of linear restraints among variables of a program"}, {"link": "", "title": "Three uses of the herbrand-gentzen theorem in relating model theory and proof theory"}, {"link": "", "title": "Predicate calculus and program semantics"}, {"link": "", "title": "Inductive invariant generation via abductive inference"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Houdini, an annotation assistant for ESC/Java"}, {"link": "", "title": "Assigning meanings to programs"}, {"link": "", "title": "Ice: A robust framework for learning invariants"}, {"link": "", "title": "Learning invariants using decision trees and implication counterexamples"}, {"link": "", "title": "Abductive analysis of modular logic programs"}, {"link": "", "title": "Counterexample driven refinement for abstract interpretation"}, {"link": "", "title": "Lifting abstract interpreters to quantified logical domains"}, {"link": "", "title": "Program analysis as constraint solving"}, {"link": "", "title": "Constraint-based invariant inference over predicate abstraction"}, {"link": "", "title": "InvGen: An efficient invariant generator"}, {"link": "", "title": "Abstractions from proofs"}, {"link": "", "title": "Software verification with BLAST"}, {"link": "", "title": "An axiomatic basis for computer programming"}, {"link": "", "title": "Interproc analyzer for recursive programs with numerical variables"}, {"link": "", "title": "A practical and complete approach to predicate refinement"}, {"link": "", "title": "Affine relationships among variables of a program"}, {"link": "", "title": "Subpolyhedra: A (more) scalable approach to infer linear inequalities"}, {"link": "", "title": "Predicate generation for learning-based quantifier-free loop invariant inference"}, {"link": "", "title": "Interpolation guided compositional verification"}, {"link": "", "title": "Interpolation and SAT-based model checking"}, {"link": "", "title": "Lazy abstraction with interpolants"}, {"link": "", "title": "Lazy annotation for program testing and verification"}, {"link": "", "title": "The octagon abstract domain"}, {"link": "", "title": "Collected Papers of Charles Sanders Peirce"}, {"link": "", "title": "Generating invariants for nonlinear loops by linear algebraic methods"}, {"link": "", "title": "Automatic generation of polynomial invariants of bounded degree using abstract interpretation"}, {"link": "", "title": "Non-linear loop invariant generation using gr\u00f6bner bases"}, {"link": "", "title": "From invariant checking to invariant inference using randomized search"}, {"link": "", "title": "A data driven approach for algebraic loop invariants"}, {"link": "", "title": "Verification as learning geometric concepts"}, {"link": "", "title": "Intertwined forward-backward reachability analysis using interpolants"}, {"link": "", "title": "The Formal Semantics of Programming Languages: An Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115690"}
{"ref": [{"link": "", "title": "Symbolic execution for software testing: Three decades later"}, {"link": "/document/7102580", "title": "Achievements, open problems and challenges for search based software testing"}, {"link": "/document/7372031", "title": "Automated test input generation for Android: Are we there yet?"}, {"link": "", "title": "Automatically generating realistic test input from web services"}, {"link": "/document/7180072", "title": "Mining Android app usages for generating actionable GUI-based execution scenarios"}, {"link": "", "title": "Automatically discovering, reporting and reproducing Android application crashes"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for Android applications"}, {"link": "", "title": "RERAN: Timing-and touch-sensitive record and replay for android"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "What are dna sequence motifs?"}, {"link": "", "title": "A survey of dna motif finding algorithms"}, {"link": "", "title": "Optimizing genetic algorithm for motif discovery"}, {"link": "", "title": "Mogamod: Multi-objective genetic algorithm for motif discovery"}, {"link": "", "title": "The Dos and Don'ts of Crowdsourcing Software Development"}, {"link": "", "title": "Software unit test coverage and adequacy"}, {"link": "", "title": "Coverage criteria for gui testing"}, {"link": "", "title": "The art of software testing"}, {"link": "", "title": "Minimizing gui event traces"}, {"link": "", "title": "Monkey see, monkey do: Effective generation of gui tests with inferred macro events"}, {"link": "", "title": "Who are the Turkers? worker demographics in Amazon mechanical turk"}, {"link": "", "title": "Who are the crowdworkers? shifting demographics in mechanical turk"}, {"link": "", "title": "A survey of the use of crowdsourcing in software engineering"}, {"link": "", "title": "Crowd debugging"}, {"link": "", "title": "Local-based active classification of test report to assist crowdsourced testing"}, {"link": "", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "/document/6606679", "title": "Pricing Crowdsourcing Based Software Development Tasks"}, {"link": "", "title": "Developer recommendation for crowdsourced software development tasks"}, {"link": "", "title": "Crowdsourcing GUI tests"}, {"link": "", "title": "Crowdsourced user interface testing for multimedia applications"}, {"link": "", "title": "The power of the crowd: Performing usability testing using an on-demand workforce"}, {"link": "", "title": "Puzzle-based automatic testing: Bringing humans into the loop by solving puzzles"}, {"link": "", "title": "CrowdOracles: Can the crowd solve the oracle problem?"}, {"link": "", "title": "Appium: Automation for iOS and Android apps"}, {"link": "", "title": "Robotium: User scenario testing for Android"}, {"link": "", "title": "Automated test input generation for android: Are we really there yet in an industrial case?"}, {"link": "", "title": "Dynodroid: An input generation system for Android apps"}, {"link": "", "title": "Guided GUI testing of Android apps with minimal restart and approximate learning"}, {"link": "", "title": "A grey-box approach for automated GUI-model generation of mobile applications"}, {"link": "", "title": "PUMA: Programmable UI-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Reducing combinatorics in GUI testing of Android applications"}, {"link": "", "title": "EvoDroid: Segmented evolutionary testing of Android apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115614"}
{"ref": [{"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "Reducing the effort of bug report triage: Recommenders for development-oriented decisions"}, {"link": "/document/488299", "title": "Software visualization in the large"}, {"link": "", "title": "Automatic bug triage using text categorization"}, {"link": "/document/846201", "title": "Leveraging legacy system dollars for E-business"}, {"link": "", "title": "Models of debugging"}, {"link": "/document/1572315", "title": "How developers drive software evolution"}, {"link": "", "title": "Replaying past changes in multideveloper projects"}, {"link": "", "title": "Deep intellisense: A tool for rehydrating evaporated information"}, {"link": "/document/1007991", "title": "Visualization of test information to assist fault localization"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Hard-to-answer questions about code"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "/document/5069491", "title": "Assigning bug reports using a vocabulary-based expertise model of developers"}, {"link": "/document/6100097", "title": "History slicing"}, {"link": "", "title": "History slicing : Assisting code-evolution tasks"}, {"link": "/document/6227208", "title": "WhoseFault: Automatic developer-to-fault assignment through fault localization"}, {"link": "/document/6650547", "title": "Chronos: Visualizing slices of source-code history"}, {"link": "", "title": "CASI: Preventing indirect conflicts through a live visualization"}, {"link": "/document/6623997", "title": "Why so complicated? Simple term filtering and weighting for location-based bug report assignment recommendation"}, {"link": "", "title": "Expertise in debugging computer programs: A process analysis"}, {"link": "", "title": "CVSscan: Visualization of code evolution"}, {"link": "", "title": "Program understanding behavior during debugging of large scale software"}, {"link": "/document/4290706", "title": "Visualizing software systems as cities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693150"}
{"ref": [{"link": "", "title": "Thinking for a living: how to get better performances and results from knowledge workers"}, {"link": "/document/4375254", "title": "Jazz and the eclipse way of collaboration"}, {"link": "", "title": "Seahawk: Stack overflow in the IDE"}, {"link": "", "title": "Mylar: a degree-of-interest model for IDEs"}, {"link": "", "title": "Contextual web history: Using visual and contextual cues to improve web browser history"}, {"link": "", "title": "On the theory of spatial and temporal locality"}, {"link": "", "title": "Forget-me-not: intimate computing in support of human memory"}, {"link": "", "title": "Reverse engineering time-series interaction data from screen-captured videos"}, {"link": "", "title": "Object recognition from local scale-invariant features"}, {"link": "", "title": "Speeded-up robust features (surf)"}, {"link": "", "title": "Computer vision: a modern approach"}, {"link": "", "title": "Swish: Semantic analysis of window titles and switching history"}, {"link": "", "title": "Caad: An automatic task support system"}, {"link": "", "title": "Connections: Using context to enhance file search"}, {"link": "", "title": "TaskTracer: a desktop environment to support multi-tasking knowledge workers"}, {"link": "", "title": "Reverb: Recommending code-related web pages"}, {"link": "", "title": "Automatically identifying targets users interact with during real world tasks"}, {"link": "", "title": "Perspectives on activity theory"}, {"link": "", "title": "Laevo: A Temporal Desktop Interface for Integrated KnowledgeWork"}, {"link": "", "title": "ActivitySpace: Managing Device Ecologies in an Activity-Centric Configuration Spate"}, {"link": "", "title": "Activity-centric support for ad hoc knowledge work: A case study of co-activity manager"}, {"link": "", "title": "NooSphere: An Activity-Centric Infrastructure for Distributed Interaction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372016"}
{"ref": [{"link": "", "title": "Memories of bug fixes"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs"}, {"link": "", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Crashlocator: Locating crashing faults based on crash stacks"}, {"link": "", "title": "Automatic detection and repair of errors in data structures"}, {"link": "", "title": "Predicting recurring crash stacks"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Enabling static analysis for partial java programs"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/4339230", "title": "Change distilling:tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "Change detection in hierarchically structured information"}, {"link": "", "title": "Eclipse ast parser"}, {"link": "", "title": "Efficient automatic patch generation and defect identification in kali"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "A critical review of\u201cautomatic patch generation learned from human-written patches\u201d : Essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Specification-based program repair using sat"}, {"link": "/document/6100080", "title": "Code-based automated program fixing"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Prophet: Automatic patch generation via learning from successful human patches"}, {"link": "", "title": "Program repair as sound optimization of broken programs"}, {"link": "", "title": "More efficient automatic repair of large-scale programs using weak recompilation"}, {"link": "", "title": "Minthint: Automated synthesis of repair hints"}, {"link": "", "title": "Auto-mated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Supporting automatic model inconsistency fixing"}, {"link": "", "title": "A dynamic-priority based approach to fixing inconsistent feature models"}, {"link": "/document/6991616", "title": "Range fixes: Interactive error resolution for software configuration"}, {"link": "", "title": "Caramel: Detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Safe memory-leak fixing for c programs"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "", "title": "Interactive fault localization using test information"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}, {"link": "", "title": "Combining probabilistic ranking and latent semantic indexing for feature identification"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "", "title": "Boosting bug-report-oriented fault localization with segmentation and stack-trace analysis"}, {"link": "", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "", "title": "Mining stackoverflow to turn the ide into a self-confident programming prompter"}, {"link": "/document/6233418", "title": "Context-based recommendation to support problem solving in software development"}, {"link": "", "title": "Retrieving answers from frequently asked questions pages on the web"}, {"link": "", "title": "Finding semantically similar questions based on their answers"}, {"link": "", "title": "Question answering from frequently asked question files: Experiences with the faq finder system"}, {"link": "", "title": "Scaling question answering to the web"}, {"link": "", "title": "Methods for using textual entailment in open-domain question answering"}, {"link": "", "title": "A graph-based semi-supervised learning for question-answering"}, {"link": "", "title": "Semi-automatically extracting faqs to improve accessibility of software development knowledge"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "", "title": "Lase: Locating and applying systematic edits by learning from examples"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372020"}
{"ref": [{"link": "", "title": "From under-approximations to over-approximations and back"}, {"link": "", "title": "Abstract analysis of symbolic executions"}, {"link": "", "title": "Proofs from tests"}, {"link": "", "title": "Boosting k-induction with continuously-refined invariants"}, {"link": "", "title": "Conditional model checking: A technique to pass information between verifiers"}, {"link": "", "title": "CPAchecker: A tool for configurable software verification"}, {"link": "", "title": "Reuse of verification results"}, {"link": "", "title": "Iterative distribution-aware sampling for probabilistic symbolic execution"}, {"link": "", "title": "Compositional solution space quantification for probabilistic software analysis"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Moving Fast with Software Verification"}, {"link": "", "title": "Unleashing mayhem on binary code"}, {"link": "", "title": "CIVL: Concurrency Intermediate Verification Language"}, {"link": "", "title": "Counterexample-Guided Abstraction Refinement"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "The ASTREE Analyzer"}, {"link": "", "title": "CPAchecker tool"}, {"link": "", "title": "Abstraction-driven concolic testing"}, {"link": "", "title": "Abstract interpretation of reactive systems"}, {"link": "", "title": "ESP: Path-sensitive program verification in polynomial time"}, {"link": "", "title": "Verification of real-time systems by successive over and under approximation"}, {"link": "", "title": "aiT: Worst-case execution time prediction by static program analysis"}, {"link": "", "title": "Statistical symbolic execution with informed sampling"}, {"link": "/document/6606608", "title": "Reliability analysis in Symbolic Pathfinder"}, {"link": "", "title": "CPA-BAM: Block-abstraction memoization with value analysis and predicate analysis"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Compositional may-must program analysis: Unleashing the power of alternation"}, {"link": "", "title": "Has the bug really been fixed?"}, {"link": "", "title": "Alternation for termination"}, {"link": "", "title": "Software Model Checking for People Who Love Automata"}, {"link": "", "title": "Automated bug neighborhood analysis for identifying incomplete bug fixes"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Exact and approximate probabilistic symbolic execution for nondeterministic programs"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "KATCH: High-coverage testing of software patches"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "/document/7536389", "title": "Multi-run side-channel analysis using symbolic execution and Max-SMT"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Polyspace code prover"}, {"link": "", "title": "A calculus of logical relations for over- and underap-proximating static analyses"}, {"link": "", "title": "CIVL: The Concurrency Intermediate Verification Language"}, {"link": "", "title": "Alternate and learn: Finding witnesses without looking all over"}, {"link": "", "title": "SV-COMP benchmarks"}, {"link": "", "title": "SV-COMP 2016 results"}, {"link": "", "title": "SV-COMP 2017 results"}, {"link": "", "title": "UltimateAutomizer tool"}, {"link": "", "title": "Efficient online detection of dynamic control dependence"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in Java programs"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "Testing, abstraction, theorem proving: Better together!"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115649"}
{"ref": [{"link": "", "title": "Fully automatic wrapper generation for search engines"}, {"link": "", "title": "Analysis of different technique for detection of sql injection"}, {"link": "", "title": "The Bro Network Security Monitor"}, {"link": "/document/1106666", "title": "Assisting network intrusion detection with reconfigurable hardware"}, {"link": "", "title": "An improved dfa for fast regular expression matching"}, {"link": "", "title": "A type system for regular expressions"}, {"link": "", "title": "Online regex tester, debugger with highlighting for php, pcre, python, golang and javascript"}, {"link": "", "title": "Regexr: Learn, build, and test regex"}, {"link": "", "title": "Regular expression visualizer using railroad diagrams"}, {"link": "", "title": "Rex @ rise4fun from microsoft"}, {"link": "", "title": "Hampi: A solver for word equations over strings, regular expressions, and context-free grammars"}, {"link": "", "title": "Rex: Symbolic regular expression explorer"}, {"link": "", "title": "Clustering based approach to learning regular expressions over large alphabet for noisy unstructured text"}, {"link": "", "title": "Regular expression learning for information extraction"}, {"link": "", "title": "An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension"}, {"link": "", "title": "Does god class decomposition affect comprehensibility?"}, {"link": "", "title": "Exploring regular expression usage and context in python"}, {"link": "", "title": "dk.brics.automaton - finite-state automata and regular expressions for Java"}, {"link": "", "title": "Refactoring pipe-like mashups for end-user programmers"}, {"link": "/document/6589568", "title": "Identification, impact, and refactoring of smells in pipe-like web mashups"}, {"link": "", "title": "Regviz: Visual debugging of regular expressions"}, {"link": "/document/6227133", "title": "Active code completion"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Detecting code smells in spreadsheet formulas"}, {"link": "", "title": "Detecting and refactoring code smells in spreadsheet formulas"}, {"link": "/document/6589568", "title": "Identification, impact, and refactoring of smells in pipe-like web mashups"}, {"link": "/document/1265817", "title": "A survey of software refactoring"}, {"link": "", "title": "Refactoring object-oriented frameworks"}, {"link": "", "title": "Automated assistance for program restructuring"}, {"link": "", "title": "A search for improved performance in regular expressions"}, {"link": "", "title": "Fast text searching for regular expressions or automaton searching on tries"}, {"link": "", "title": "Jst: An automatic test generation tool for industrial java applications with strings"}, {"link": "", "title": "Survey on test data generation tools"}, {"link": "", "title": "An orchestrated survey of methodologies for automated software test case generation"}, {"link": "", "title": "Transferring an automated test generation tool to practice: From pex to fakes and code digger"}, {"link": "", "title": "S3: A symbolic string solver for vulnerability detection in web applications"}, {"link": "/document/7899040", "title": "Mutrex: A mutation-based generator of fault detecting strings for regular expressions"}, {"link": "", "title": "How developers use the dynamic features of programming languages: The case of smalltalk"}, {"link": "", "title": "An analysis of the dynamic behavior of javascript programs"}, {"link": "", "title": "Mining billions of ast nodes to study actual and potential usage of java language features"}, {"link": "", "title": "An empirical investigation into a large-scale java open source code repository"}, {"link": "", "title": "Adoption and use of java generics"}, {"link": "", "title": "Reflection analysis for java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115653"}
{"ref": [{"link": "", "title": "Finding bugs in dynamic web applications"}, {"link": "/document/4539529", "title": "Structural testing of executables"}, {"link": "", "title": "Osmose: Automatic structural testing of executables"}, {"link": "/document/1317455", "title": "Generating test from counterexamples"}, {"link": "/document/4639362", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Jcrasher: An automatic robustness tester for java"}, {"link": "", "title": "Check 'n' crash: Combining static checking and testing"}, {"link": "", "title": "Precise pointer reasoning for dynamic test generation"}, {"link": "", "title": "Dynamic test input generation for database applications"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Automatic partial loop summarization in dynamic test generation"}, {"link": "", "title": "Concolic testing of the multi-sector read operation for flash storage platform software"}, {"link": "/document/6200131", "title": "Industrial application of concolic testing on embedded software: Case studies"}, {"link": "/document/5510242", "title": "Comparative study on software model checkers as unit testing tools: An industrial case study"}, {"link": "/document/6200090", "title": "A scalable distributed concolic testing approach: An empirical evaluation"}, {"link": "/document/6227105", "title": "Industrial application of concolic testing approach: A case study on libexif by using CREST-BV and KLEE"}, {"link": "", "title": "Environment modeling for automated testing of cloud applications"}, {"link": "", "title": "Making unit testing practical for embedded development"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of c programs"}, {"link": "", "title": "Test input generation using dynamic programming"}, {"link": "", "title": "Eclat: Automatic generation and classification of test inputs"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/6100152", "title": "Generating program inputs for database application testing"}, {"link": "", "title": "Feedbackdirected unit test generation for C/C++ using concolic execution"}, {"link": "/document/1657935", "title": "A survey of unit testing practices"}, {"link": "", "title": "The Art of Unit Testing"}, {"link": "", "title": "Realview Compilation Tools"}, {"link": "", "title": "KleeNet: Discovering insidious interaction bugs in wireless sensor networks before deployment"}, {"link": "", "title": "Loop-extended symbolic execution on binary programs"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Retrofitting Unit Tests for Parameterized Unit Testing"}, {"link": "", "title": "Parameterized unit tests"}, {"link": "", "title": "Test input generation with Java PathFinder"}, {"link": "", "title": "Pathcrawler: Automatic generation of path tests by combining static and dynamic analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693109"}
{"ref": [{"link": "/document/981648", "title": "An integrated measure of software maintainability"}, {"link": "", "title": "A study of the documentation essential to software maintenance"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": ""}, {"link": "", "title": "Crowd documentation: Exploring the coverage and the dynamics of API discussions on stack overflow"}, {"link": "/document/6624012", "title": "Making sense of online code snippets"}, {"link": "", "title": "Stanford CoreNLP"}, {"link": "", "title": "Tregex"}, {"link": "", "title": "Part-of-speech tagging guidelines for the penn treebank project (3rd revision, 2nd printing)"}, {"link": "", "title": "How English Works: A Linguistic Introduction"}, {"link": "", "title": "The Software and Text Similarity Tester SIM"}, {"link": "", "title": "WordNet: A Lexical Database for English"}, {"link": "/document/6100145", "title": "Automated documentation inference to explain failed tests"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "/document/5970165", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "/document/6080777", "title": "Generating natural language summaries for crosscutting source code concerns"}, {"link": "", "title": "Towards Comment Generation for MPI Programs"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/6240510", "title": "Mining source code descriptions from developer communications"}, {"link": "/document/6227207", "title": "Recovering traceability links between an API and its learning resources"}, {"link": "", "title": "Enriching documents with examples: A corpus mining approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693113"}
{"ref": [{"link": "", "title": "Threat report h2 2013"}, {"link": "", "title": "Collaborative verification of information flow for a high-assurance app store"}, {"link": "", "title": "Information flows as a permission mechanism"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Chex: statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Vetting undesirable behaviors in android apps with permission use analysis"}, {"link": "", "title": "Android permissions demystified"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Effective inter-component communication mapping in android with epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}, {"link": "", "title": "Soot - a java bytecode optimization framework"}, {"link": "", "title": "An analysis of the anserverbot trojan"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Scandroid: Automated security certification of android applications"}, {"link": "", "title": "Analysis of malicious and benign android applications"}, {"link": "", "title": "Mockdroid: trading privacy for application functionality on smartphones"}, {"link": "", "title": "Aurasium: practical policy enforcement for android applications"}, {"link": "", "title": "Crowdroid: behavior-based malware detection system for android"}, {"link": "", "title": "Towards an understanding of the impact of advertising on data leaks"}, {"link": "", "title": "Pios: Detecting privacy leaks in ios applications"}, {"link": "", "title": "Analyzing inter-application communication in android"}, {"link": "", "title": "Systematic detection of capability leaks in stock android smartphones"}, {"link": "", "title": "The confused deputy: (or why capabilities might have been invented)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372055"}
{"ref": [{"link": "", "title": "Java nano patterns: a set of reusable objects"}, {"link": "", "title": "A Preliminary Study Examining Relationships between Nano-Patterns and Software Security Vulnerabilities"}, {"link": "", "title": "Correlation Analysis among Java Nano-patterns and Software Vulnerabilities"}, {"link": "", "title": "Fundamental Nano-Patterns to Characterize and Classify Java Methods"}, {"link": "", "title": "Micro patterns in Java code"}, {"link": "", "title": "Micro pattern evolution"}, {"link": "", "title": "Preliminary Study on Assessing Software Defects Using Nano-Pattern Detection"}, {"link": "/document/6328166", "title": "Micro Pattern Fault-Proneness"}, {"link": "/document/5560680", "title": "Evaluating Complexity, Code Churn, and Developer Activity Metrics as Indicators of Software Vulnerabilities"}, {"link": "", "title": "Using complexity, coupling, and cohesion metrics as early indicators of vulnerabilities"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Finding security errors in Java programs with static analysis"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115724"}
{"ref": [{"link": "", "title": "Modern Operating Systems"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Efficient model checking of networked applications"}, {"link": "/document/5431750", "title": "Cache-based model checking of networked applications: From linear to branching time"}, {"link": "/document/6100043", "title": "Model checking distributed systems by combining caching and process checkpointing"}, {"link": "", "title": "Nginx: The high-performance web server and reverse proxy"}, {"link": "", "title": "The C10K Problem"}, {"link": "", "title": "Modbat: A model-based API tester for event-driven systems"}, {"link": "", "title": "Rupy - A Tiny Java Nio HTTP Application Server"}, {"link": "", "title": "Overview (Java Platform SE 7)"}, {"link": "", "title": "Software model checking: The VeriSoft approach"}, {"link": "", "title": "Finding and reproducing Heisenbugs in concurrent programs"}, {"link": "", "title": "Dynamic model checking with property driven pruning to detect race conditions"}, {"link": "", "title": "Model checking of concurrent algorithms: From Java to C"}, {"link": "", "title": "Model checking of multi-process applications using SBUML and GDB"}, {"link": "", "title": "Transformations for model checking distributed java programs"}, {"link": "/document/4019573", "title": "Accurate centralization for applying model checking on networked applications"}, {"link": "/document/6605873", "title": "Analyzing distributed Java applications by automatic centralization"}, {"link": "", "title": "NetStub: A framework for verification of distributed Java applications"}, {"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Programming in Scala: A Comprehensive Step-by-step Guide"}, {"link": "/document/6328163", "title": "Random test case generation and manual unit testing: Substitute or complement in retrofitting tests for legacy code?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693077"}
{"ref": [{"link": "/document/5290799", "title": "Evolution styles: Foundations and tool support for software architecture evolution"}, {"link": "", "title": "Evolution styles: Foundations and models for software architecture evolution"}, {"link": "/document/5070563", "title": "\u00c6vol: A tool for defining and planning architecture evolution"}, {"link": "/document/6597188", "title": "Challenges in developing a software architecture evolution tool as a plug-in"}, {"link": "", "title": "Styles D'\u00e9volution dans les Architectures Logicielles"}, {"link": "/document/5959724", "title": "Analysis and management of architectural dependencies in iterative release planning"}, {"link": "/document/1434908", "title": "Formalizing architectural refactorings as graph transformation systems"}, {"link": "", "title": "Automated Planning: Theory and Practice"}, {"link": "", "title": "Documenting Software Architecture: Views and beyond"}, {"link": "", "title": "PDDL-The planning domain definition language, version 1.2"}, {"link": "", "title": "PDDL2.1: An extension to PDDL for expressing temporal planning domains"}, {"link": "", "title": "PDDL2.2: The language for the classical part of the 4th International Planning Competition"}, {"link": "", "title": "Preferences and soft constraints in PDDL3"}, {"link": "", "title": "The loyal opposition comments on Plan Domain Description Languages"}, {"link": "", "title": "Compilation of LTL goal formulas into PDDL"}, {"link": "", "title": "An approach to temporal planning and scheduling in domains with predictable exogenous events"}, {"link": "", "title": "Temporal planning with preferences and time-dependent continuous costs"}, {"link": "", "title": "When Is Temporal Planning Really Temporal?"}, {"link": "", "title": "Reasoning with time intervals: A logical and computational perspective"}, {"link": "", "title": "PDDL+: Modelling continuous time-dependent effects"}, {"link": "/document/4553302", "title": "TLP-GP: Solving temporally-expressive planning problems"}, {"link": "", "title": "A systematic review of software architecture evolution research"}, {"link": "/document/6498478", "title": "A framework for classifying and comparing architecture-centric software evolution research"}, {"link": "", "title": "A graph transformation approach to software architecture reconfiguration"}, {"link": "", "title": "Guiding architects in selecting architectural evolution alternatives"}, {"link": "", "title": "ACME vs PDDL: Support for dynamic reconfiguration of software architectures"}, {"link": "", "title": "Automated planning for configuration changes"}, {"link": "/document/1376813", "title": "Automated planning in a service-oriented architecture"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693081"}
{"ref": [{"link": "", "title": "The state explosion problem"}, {"link": "", "title": "State space reduction using partial order techniques"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems - An Approach to the State-Explosion Problem, ser. LNCS."}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "", "title": "Cartesian partial-order reduction"}, {"link": "", "title": "Optimal dynamic partial order reduction"}, {"link": "", "title": "Dthreads: efficient deterministic multithreading"}, {"link": "", "title": "Parrot: a practical runtime for deterministic, stable, and reliable threads"}, {"link": "", "title": "Trace theory"}, {"link": "", "title": "The LLVM compiler infrastructure"}, {"link": "", "title": "Efficient deterministic multithreading through schedule relaxation"}, {"link": "", "title": "Verifying multi-threaded software with impact"}, {"link": "", "title": "Iterative context bounding for systematic testing of multithreaded programs"}, {"link": "", "title": "Coredet: a compiler and runtime system for deterministic multithreaded execution"}, {"link": "", "title": "Efficient system-enforced deterministic parallelism"}, {"link": "", "title": "Bounded model checking of concurrent programs"}, {"link": "", "title": "Verifying multi-threaded software using smt-based context-bounded model checking"}, {"link": "", "title": "Effective program verification for relaxed memory models"}, {"link": "", "title": "Automatic fence insertion for shared memory multiprocessing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115688"}
{"ref": [{"link": "", "title": "LL(*): The foundation of the ANTLR parser generator"}, {"link": "", "title": "Packrat parsing:: Simple, powerful, lazy, linear time, functional pearl"}, {"link": "", "title": "Adaptive LL(*) parsing: The power of dynamic analysis"}, {"link": "", "title": "GLL parsing,\u201d Electronic Notes in Theoretical Computer Science"}, {"link": "", "title": "Interactive parser synthesis by example"}, {"link": "", "title": "Learning regular sets from queries and counterexamples"}, {"link": "", "title": "Recognition and parsing of context-free languages in time n3"}, {"link": "", "title": "Using filters for the disambiguation of context-free grammars"}, {"link": "", "title": "Disambiguating grammars by exclusion of sub-parse trees"}, {"link": "", "title": "grammars v4"}, {"link": "", "title": "Parsing Techniques: A Practical Guide"}, {"link": "", "title": "Watch What I Do - Programming by Demonstration"}, {"link": "", "title": "Synthesis from examples: Interaction models and algorithms"}, {"link": "", "title": "Your Wish is My Command: Programming by Example"}, {"link": "", "title": "FlashMeta: A framework for inductive program synthesis"}, {"link": "", "title": "Learning string transformations from examples"}, {"link": "", "title": "Automating string processing in spreadsheets using input-output examples"}, {"link": "", "title": "A machine learning framework for programming by example"}, {"link": "", "title": "Flashrelate: Extracting relational data from semi-structured spreadsheets using examples"}, {"link": "", "title": "Spreadsheet table transformations from examples"}, {"link": "", "title": "Synthesizing number transformations from input-output examples"}, {"link": "", "title": "FlashExtract: A framework for data extraction by examples"}, {"link": "", "title": "Lightweight structured text processing"}, {"link": "", "title": "Programming by demonstration using version space algebra"}, {"link": "", "title": "Aligning development tools with the way programmers think about code changes"}, {"link": "", "title": "A colorful approach to text processing by example"}, {"link": "", "title": "A bibliographical study of grammatical inference"}, {"link": "", "title": "Grammatical inference: An introductory survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115692"}
{"ref": [{"link": "", "title": "Using GUI ripping for automated testing of android applications"}, {"link": "", "title": "MobiGUITAR: Automated model-based testing of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": ""}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Automated model-based android GUI testing using multi-level GUI comparison criteria"}, {"link": "/document/7372054", "title": "Static analysis of implicit control flow: Resolving java reflection and android intents"}, {"link": "", "title": "GUI testing using computer vision"}, {"link": "", "title": "Guided GUI testing of android apps with minimal restart and approximate learning"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet?"}, {"link": "", "title": "Minimizing GUI event traces"}, {"link": "", "title": "SITAR: GUI test script repair"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "", "title": "Automatically repairing event sequence-based GUI test suites for regression testing"}, {"link": "/document/1287256", "title": "GUI ripping: reverse engineering of graphical user interfaces for testing"}, {"link": "", "title": "Advances in automated model-based system testing of software applications with a GUI front-end"}, {"link": "", "title": "Coverage criteria for GUI testing"}, {"link": "/document/1542069", "title": "Studying the fault-detection effectiveness of GUI test cases for rapidly evolving software"}, {"link": "", "title": "Reducing combinatorics in GUI testing of android applications"}, {"link": "", "title": "Testing android apps through symbolic execution"}, {"link": "/document/6714448", "title": "An observe-model-exercise paradigm to test event-driven systems with undetermined input spaces"}, {"link": "", "title": "GUITAR: an innovative tool for automated testing of GUI-driven software"}, {"link": "", "title": "MobiPlay: A remote execution based record-and-replay tool for mobile applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115616"}
{"ref": [{"link": "", "title": "Inference of Emergent Behaviours of Scenariobased Specifications"}, {"link": "/document/1214326", "title": "Inference of message sequence charts"}, {"link": "/document/5670032", "title": "A technique and a tool to detect emergent behavior of distributed systems using scenario-based specifications"}, {"link": "", "title": "Analysing message sequence graph specifications"}, {"link": "", "title": "Runtime verification of interactions: From MSCs to aspects"}, {"link": "", "title": "An approach to identifying causes of implied scenarios using unenforceable orders"}, {"link": "", "title": "Seamless Method-and Model-based Software and Systems Engineering"}, {"link": "", "title": "Detecting implied scenarios analyzing non-local branching choices"}, {"link": "/document/4400151", "title": "Detecting Implied scenarios from execution traces"}, {"link": "/document/4509440", "title": "Characterizing communication channel deadlocks in sequence diagrams"}, {"link": "", "title": "Incremental Elaboration of Scenario-based Specifications and Behaviour Models Using Implied Scenarios"}, {"link": "", "title": "Deriving event-based transition systems from goal-oriented requirements models"}, {"link": "", "title": "Generating statechart designs from scenarios"}, {"link": "", "title": "Model checking epistemic and probabilistic properties of multi-agent systems"}, {"link": "", "title": "Validation of multiagent systems by symbolic model checking"}, {"link": "", "title": "Abstraction in model checking multi-agent systems"}, {"link": "", "title": "Automatic data-abstraction in model checking multi-agent systems"}, {"link": "/document/1347068", "title": "Model checking rational agents"}, {"link": "", "title": "Model checking multi-agent systems with MABLE"}, {"link": "", "title": "Neutral nodes in a network of heterogeneous agent based system"}, {"link": "/document/6642473", "title": "Detecting distributed software components that will not cause emergent behavior in asynchronous communication style"}, {"link": "", "title": "Visualizing the network of software agents for verification of multiagent systems"}, {"link": "/document/6632796", "title": "Detection and verification of a new type of emergent behavior in multiagent systems"}, {"link": "/document/6567839", "title": "Detecting a certain kind of emergent behavior in multi agent systems applied on MaSE methodology"}, {"link": "/document/6303009", "title": "A method for detecting agents that will not cause emergent behavior in agent based systems - A case study in agent based auction systems"}, {"link": "/document/6378019", "title": "Detecting emergent behavior in autonomous distributed systems with many components of the same type"}, {"link": "", "title": "Clustering social networks to remove neutral nodes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693148"}
{"ref": [{"link": "", "title": "An introduction to sociolinguistics: Society and identity"}, {"link": "", "title": "Two types of linguistic relativity"}, {"link": "", "title": "Special language and general language: Linguistic and didactic aspects"}, {"link": "", "title": "Situated learning: Legitimate peripheral participation"}, {"link": "", "title": "Communities of practice: Learning, meaning, and identity"}, {"link": "", "title": "Cultivating communities of practice: A guide to managing knowledge"}, {"link": "", "title": "The community of practice: Theories and methodologies in language and gender research"}, {"link": "", "title": "The impact of structuring characteristics on the launching of virtual communities of practice"}, {"link": "", "title": "Social influence in networks of practice: An analysis of organizational communication content"}, {"link": "", "title": "The Routledge companion to sociolinguistics"}, {"link": "", "title": "Communities of practice"}, {"link": "", "title": "Technical terminology: some linguistic properties and an algorithm for identification in text"}, {"link": "", "title": "Human communication as narration: Toward a philosophy of reason, value, and action"}, {"link": "", "title": "Book reviews"}, {"link": "", "title": "Acculturation and human diversity in a multicultural society"}, {"link": "", "title": "Acculturation and assimilation: A clarification"}, {"link": "", "title": "Involvement and communication discrepancy as determinants of opinion conformity"}, {"link": "", "title": "Two examples of linguistic acculturation: The yaqui of sonora and arizona and the tewa of new mexico"}, {"link": "", "title": "Communities of practice in higher education"}, {"link": "", "title": "Measuring the effect of social communications on individual working rhythms: A case study of open source software"}, {"link": "", "title": "Converging work-talk patterns in online task-oriented communities"}, {"link": "", "title": "Three approaches to the quantitative definition ofinformation\u2019"}, {"link": "", "title": "Kolmogorov's contributions to information theory and algorithmic complexity"}, {"link": "", "title": "Elements of information theory"}, {"link": "", "title": "The complexity and entropy of literary styles"}, {"link": "", "title": "A controlled-corpus experiment in authorship identification by cross-entropy"}, {"link": "", "title": "An information-theoretic evaluation of narrative complexity for interactive writing support"}, {"link": "", "title": "Social coding in github: transparency and collaboration in an open software repository"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in github"}, {"link": "", "title": "Understanding the popular users: Following, affiliation influence and leadership on github"}, {"link": "/document/7180096", "title": "Wait for it: Determinants of pull request evaluation latency on github"}, {"link": "", "title": "Exploring the use of@-mention to assist software development in github"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "", "title": "A neural probabilistic language model"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}, {"link": "", "title": "Regression diagnostics: Identifying influential data and sources of collinearity"}, {"link": "", "title": "Methods of meta-analysis: Correcting error and bias in research findings"}, {"link": "", "title": "What does it mean to have a low r-squared? a warning about misleading interpretation"}, {"link": "", "title": "On correlation, r, and r-squared"}, {"link": "", "title": "r-squared abuse"}, {"link": "", "title": "Applied multiple regression/correlation analysis for the behavioral sciences"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences (revised ed.)"}, {"link": "", "title": "Clustered language models based on regular expressions for smt"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Mining stack exchange: Expertise is evident from initial contributions"}, {"link": "/document/6542459", "title": "Gender, representation and online participation: A quantitative study of stackoverflow"}, {"link": "", "title": "Gender and tenure diversity in github teams"}, {"link": "", "title": "How do developers fix cross-project correlated bugs?"}, {"link": "", "title": "When does feedback facilitate learning of words?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115620"}
{"ref": [{"link": "", "title": "Deriving architectural tactics: A step toward methodical architectural design"}, {"link": "/document/4273351", "title": "A tool for managing software architecture knowledge"}, {"link": "/document/5672512", "title": "Draw me a picture"}, {"link": "", "title": "Design and Use of Software Architectures: Adopting and Evolving A Product-line Approach"}, {"link": "", "title": "Software engineering using rationale"}, {"link": "", "title": "A web-based tool for managing architectural design decisions"}, {"link": "", "title": "On non-functional requirements in software engineering"}, {"link": "", "title": "Dealing with change: An approach using non-functional requirements"}, {"link": "", "title": "Determining the cost-quality trade-off for automated software traceability"}, {"link": "", "title": "Patterns for fault tolerant software"}, {"link": "/document/4343775", "title": "How software designs decay: A pilot study of pattern evolution"}, {"link": "/document/1620096", "title": "Software architecture as a set of architectural design decisions"}, {"link": "", "title": "An ontology of architectural design decisions"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "A decision-centric approach for tracing reliability concerns in embedded software systems"}, {"link": "", "title": "A pattern system for tracing architectural concerns"}, {"link": "", "title": "Tracing architectural concerns in high assurance systems: (Nier track)"}, {"link": "", "title": "Tracing non-functional requirements"}, {"link": "/document/6080779", "title": "Using tactic traceability information models to reduce the risk of architectural degradation during system maintenance"}, {"link": "", "title": "Variability points and design pattern usage in architectural tactics"}, {"link": "/document/6227153", "title": "A tactic centric approach for automating traceability of quality concerns"}, {"link": "", "title": "Foundations for the study of software architecture"}, {"link": "", "title": "A rationale-based architecture model for design traceability and reasoning"}, {"link": "", "title": "Software Architecture: Foundations Theory and Practice"}, {"link": "", "title": "Design preservation over subsequent releases of a software product: A case study of Baan ERP"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693152"}
{"ref": [{"link": "", "title": "A survey of software reuse repositories"}, {"link": "", "title": "Automatic categorization algorithm for evolvable software archive"}, {"link": "/document/1371919", "title": "Mudablue: an automatic categorization system for open source repositories"}, {"link": "", "title": "What's the code?: Automatic classification of source code archives"}, {"link": "", "title": "On using machine learning to automatically classify software applications into domain categories"}, {"link": "", "title": "Categorizing software applications for maintenance"}, {"link": "/document/7181451", "title": "Unsupervised software categorization using bytecode"}, {"link": "/document/1167756", "title": "An approach to classify software maintenance requests"}, {"link": "", "title": "Introduction to machine learning"}, {"link": "/document/5069496", "title": "Using latent dirichlet allocation for automatic categorization of software"}, {"link": "/document/6676895", "title": "Mining software profile across multiple repositories for hierarchical categorization"}, {"link": "", "title": "Detecting similar applications with collaborative tagging"}, {"link": "/document/5609751", "title": "Fuzzy set approach for automatic tagging in evolving software"}, {"link": "", "title": "Inferring semantically related software terms and their taxonomy by leveraging collaborative tagging"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": ""}, {"link": "", "title": "An introduction to latent semantic analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372018"}
{"ref": [{"link": "", "title": "Generating and utilizing robust XPath expressions"}, {"link": "", "title": "Selectable methods for generating robust xpath expressions"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": "System and method for generating an xpath expression"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Watch what I do: programming by demonstration"}, {"link": "", "title": "Proceedings of the 3rd international conference on Intelligent user interfaces"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "ACM SIGPLAN Notices"}, {"link": "", "title": "WAMBSE (Workshop on Advances in Model-Based Software Engineering) Special Issue, Infosys Labs Briefings, 2012"}, {"link": "", "title": "Symbolic and Numeric Algorithms for Scientific Computing (SYNASC), 2012 14th International Symposium on"}, {"link": "", "title": ""}, {"link": "", "title": "Quality of Information and Communications Technology (QUATIC), 2010 Seventh International Conference on the"}, {"link": "/document/520818", "title": "Visual Languages, IEEE Symposium on"}, {"link": "", "title": "Learning repetitive text-editing procedures with SMARTedit"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proc. International Conference on Software Testing, Verification and Validation (ICST)"}, {"link": "", "title": "Your wish is my command: Programming by example"}, {"link": "", "title": "USENIX Annual Technical Conference, General Track"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the ACM / IEEE International Symposium on Empirical Software Engineering and Measurement"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6642415", "title": "Web Systems Evolution (WSE), 2013 15th IEEE International Symposium on"}, {"link": "", "title": ""}, {"link": "", "title": "Minisat v l. 13-a sat solver with confiict-clause minimization"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 26th annual ACM symposium on User interface software and technology"}, {"link": "", "title": "Computer-Aided Design and Computer Graphics, 2009. CAD/Graphics \u201809. 11th IEEE International Conference on"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372022"}
{"ref": [{"link": "", "title": "ACER experimental data."}, {"link": "", "title": "Debbugger source lookup does not work with variables."}, {"link": "", "title": "Example code snippet."}, {"link": "", "title": "Samurai prefix and suffix list."}, {"link": "", "title": "Resampling."}, {"link": "", "title": "Stop word list."}, {"link": "", "title": "Software Process Data Quality and Characteristics: A Historical View on Open and Closed Source Projects"}, {"link": "", "title": "Structural Information based Term Weighting in Text Retrieval for Feature Location"}, {"link": "", "title": "Graph-based Term Weighting for Information Retrieval"}, {"link": "", "title": "The Anatomy of a Large-Scale Hypertextual Web Search Engine"}, {"link": "", "title": "Estimating the Query Difficulty for Information Retrieval."}, {"link": "", "title": "What Makes a Query Difficult?"}, {"link": "", "title": "A Survey of Automatic Query Expansion in Information Retrieval"}, {"link": "/document/5069482", "title": "Mining Source Code to Automatically Split Identifiers for Software Analysis"}, {"link": "", "title": "The Vocabulary Problem in Human-system Communication"}, {"link": "/document/5306315", "title": "On the Use of Relevance Feedback in IR-based Concept Location"}, {"link": "", "title": "On the Use of Domain Terms in Source Code"}, {"link": "", "title": "On the Effect of the Query in IR-based Concept Location"}, {"link": "", "title": "Automatic Query Performance Assessment During the Retrieval of Software Artifacts"}, {"link": "/document/6227101", "title": "Evaluating the Specificity of Text Retrieval Queries to Support Software Engineering Tasks"}, {"link": "", "title": "Automatic Query Reformulations for Text Retrieval in Software Engineering"}, {"link": "/document/6606704", "title": "Query Quality Prediction and Reformulation for Source Code Search: the Refoqus Tool"}, {"link": "", "title": "Automatically Capturing Source Code Context of NL-queries for Software Maintenance and Reuse"}, {"link": "", "title": "On the Use of Stemming for Concern Location and Bug Localization in Java"}, {"link": "", "title": "Automatically Mining Software-based, Semantically-Similar Words from Comment-Code Mappings"}, {"link": "", "title": "A Statistical Interpretation of Term Specificity and Its Application in Retrieval"}, {"link": "", "title": "Parametric Bootstrapping for Assessing Software Reliability Measures"}, {"link": "", "title": "Automatic Search Term Identification for Change Tasks"}, {"link": "", "title": "A Dictionary to Translate Change Tasks to Source Code"}, {"link": "", "title": "Feature Location via Information Retrieval based Filtering of a Single Scenario Execution Trace"}, {"link": "/document/1374321", "title": "An Information Retrieval Approach to Concept Location in Source Code"}, {"link": "", "title": "Textrank: Bringing Order into Texts"}, {"link": "/document/6976081", "title": "On the Use of Stack Traces to Improve Text Retrieval-based Bug Localization"}, {"link": "", "title": "Query-based Configuration of Text Retrieval Solutions for Software Engineering Tasks"}, {"link": "", "title": "Are Automated Debugging Techniques Actually Helping Programmers?"}, {"link": "", "title": "Seahawk: Stack Overflow in the IDE"}, {"link": "", "title": "Mining StackOverflow to Turn the IDE into a Self-confident Programming Prompter"}, {"link": "", "title": "On the Use of Context in Recommending Exception Handling Code Examples"}, {"link": "", "title": "TextRank Based Search Term Identification for Software Change Tasks"}, {"link": "", "title": "QUICKAR: Automatic Query Reformulation for Concept Location Using Crowdsourced Knowledge"}, {"link": "/document/7884611", "title": "STRICT: Information Retrieval Based Search Term Identification for Concept Location"}, {"link": "/document/6606629", "title": "Discovering Essential Code Elements in Informal Documentation"}, {"link": "", "title": "The SMART Retrieval System-Experiments in Automatic Document Processing."}, {"link": "", "title": "CONQUER: A Tool for NL-based Query Refinement and Contextualizing Code Search Results"}, {"link": "", "title": "Improving Bug Localization using Structured Information Retrieval"}, {"link": "", "title": "A Vector Space Model for Automatic Indexing"}, {"link": "", "title": "FLAT3: Feature Location and Textual Tracing Tool"}, {"link": "", "title": "Using Natural Language Program Analysis to Locate and Understand Action-Oriented Concerns"}, {"link": "", "title": "Assisting Code Search with Automatic Query Reformulation for Bug Localization"}, {"link": "", "title": "Online Defect Prediction for Imbalanced Data"}, {"link": "", "title": "CODES: Mining Source Code Descriptions from Developers Discussions"}, {"link": "/document/4075629", "title": "Expertise in Debugging Computer Programs: An Analysis of the Content of Verbal Protocols"}, {"link": "", "title": "Inferring Semantically Related Words from Software Context"}, {"link": "", "title": "Keyword Query Reformulation on Structured Data"}, {"link": "", "title": "Automated Construction of a Software-specific Word Similarity Database"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115655"}
{"ref": [{"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "/document/292400", "title": "Software requirements as negotiated win conditions"}, {"link": "", "title": "Staged configuration using feature models"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "/document/605933", "title": "A cost-value approach for prioritizing requirements"}, {"link": "", "title": "Rational cooperation in the finitely repeated prisoners' dilemma"}, {"link": "", "title": "Collaborative product configuration : Formalization and efficient algorithms for dependency analysis"}, {"link": "", "title": "Game Theory: Analysis of Conflict"}, {"link": "", "title": "The bargaining problem. Econometrica"}, {"link": "", "title": "A distributed scheduling framework based on selfish autonomous agents for federated cloud environments"}, {"link": "/document/4483151", "title": "Bilateral bargaining game and fuzzy logic in the system handling sla-based workflow"}, {"link": "", "title": "Automated support for quality requirements in web-service-based systems"}, {"link": "", "title": "Using constraint programming for the automatic detection of conflicts in quality requirements"}, {"link": "", "title": "A time-constrained SLA negotiation strategy in competitive computational grids"}, {"link": "", "title": "A gametheoretic method of fair resource allocation for cloud computing services"}, {"link": "", "title": "Automated diagnosis of feature model configurations"}, {"link": "/document/5567093", "title": "An adaptive and intelligent sla negotiation system for web services"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693115"}
{"ref": [{"link": "", "title": "Does distributed development affect software quality? An empirical case study of Windows Vista"}, {"link": "", "title": "The promises and perils of mining Git"}, {"link": "", "title": "Proactive detection of collaboration conflicts"}, {"link": "", "title": "Early detection of collaboration conflicts and risks"}, {"link": "", "title": "Modeling dependencies for cascading selective undo"}, {"link": "", "title": "Supporting empirical studies by non-intrusive collection and visualization of fine-grained revision history"}, {"link": "", "title": "The Subversion project: Building a better CVS"}, {"link": "", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "An empirical study of fine-grained software modifications"}, {"link": "", "title": "Git"}, {"link": "", "title": "Git annotate"}, {"link": "", "title": "Git bisect"}, {"link": "", "title": "Git blame"}, {"link": "", "title": "Git: History rewriting"}, {"link": "", "title": "Git: Rebase"}, {"link": "", "title": "Capturing and exploiting fine-grained IDE interactions"}, {"link": "", "title": "Toward Effective Debugging by Capturing and Reusing Knowledge"}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Hey! Are you committing tangled changes? In"}, {"link": "/document/7372056", "title": "Semantic slicing of software version histories"}, {"link": "", "title": "DynaMine: Finding common error patterns by mining software revision histories"}, {"link": "", "title": "Fine-grained revision control for collaborative software development"}, {"link": "", "title": "The Storyteller version control system: Tackling version control, code comments, and team learning"}, {"link": "", "title": "Defect prediction from static code features: Current results"}, {"link": "", "title": "Mercurial"}, {"link": "", "title": "Mercurial: Editing history"}, {"link": "", "title": "AI-based software defect predictors: Applications and benefits in a case study"}, {"link": "", "title": "Making offline analyses continuous"}, {"link": "", "title": "Reducing feedback delay of software development tools via continuous analyses"}, {"link": "", "title": "Solstice"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Change bursts as defect predictors"}, {"link": "", "title": "Mining fine-grained code changes to detect unknown change patterns"}, {"link": "", "title": "Is it dangerous to use version control histories to study source code evolution?"}, {"link": "", "title": "A fine-grained version and configuration model in analysis and design"}, {"link": "", "title": "Where the bugs are"}, {"link": "", "title": "Chianti: A tool for change impact analysis of Java programs"}, {"link": "", "title": "An Eclipse-based course project snapshot and submission system"}, {"link": "", "title": "Software repository mining with Marmoset: An automated programming project snapshot and testing system"}, {"link": "", "title": "A consistency model and supporting schemes for real-time cooperative editing systems"}, {"link": "/document/6227190", "title": "Use, disuse, and misuse of automated refactorings"}, {"link": "", "title": "A calculus for modeling and implementing variation"}, {"link": "", "title": "Backtracking Support in Code Editing"}, {"link": "", "title": "Capturing and analyzing low-level events from the code editor"}, {"link": "", "title": "A longitudinal study of programmers' backtracking"}, {"link": "", "title": "Supporting selective undo in a code editor"}, {"link": "", "title": "Yesterday, my program worked. Today, it does not. Why?"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372057"}
{"ref": [{"link": "", "title": "DO-178CIED-12C: Software Considerations in Airborne Systems and Equipment Certification"}, {"link": "", "title": "Certification Cost Estimates for Future Communication Radio Platforms"}, {"link": "", "title": "DO-178B Costs versus Benefits"}, {"link": "", "title": "Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering"}, {"link": "", "title": "Proc. Workshop on Software-Architekturen fur Onboardsysteme in der Luft- und Raumfahrt"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/5992019", "title": "Safe Software: Does It Cost More to Develop?"}, {"link": "", "title": ""}, {"link": "", "title": "Reporting Guidelines for Controlled Experiments in Software Engineering"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques"}, {"link": "", "title": "OMG Systems Modeling Language (OMG SysML), Version 1.3"}, {"link": "", "title": "PolarSys: Towards Long-Term Availability of Engineering Tools for Embedded Systems"}, {"link": "", "title": "OMG Object Constraint Language (OCL), Version 2.3.1"}, {"link": "", "title": "Software Cost Estimation in 2002"}, {"link": "", "title": "Reducing Avionics Software Cost Through Component Based Product Line Development"}, {"link": "", "title": "Proc. Int\u2019 l Software Product Line Conference (SPLC)"}, {"link": "", "title": "Creating Reference Architectures: An Example from Avionics"}, {"link": "", "title": "Model-Driven Software Development of Safety-Critical Avionics Systems: An Experience Report"}, {"link": "", "title": "The Product-Line Engineering Approach in a Model-Driven Process"}, {"link": "", "title": "Validate, Simulate, and Implement ARINC653 Systems Using the AADL"}, {"link": "", "title": ""}, {"link": "", "title": "Model-Driven Development of ARINC 653 Configuration Tables"}, {"link": "", "title": "Configuration Tool for ARINC 653 Operating Systems"}, {"link": "", "title": "Efficient Development of Airborne Software with SCADE Suite"}, {"link": "/document/6030066", "title": "Implementing a Software Product Line for a Complex Avionics System"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372061"}
{"ref": [{"link": "", "title": "Henshin: Advanced concepts and tools for in-place EMF model transformations"}, {"link": "", "title": "Model differences in the eclipse modelling framework"}, {"link": "", "title": "Lifting parallel graph transformation concepts to model transformation based on the eclipse modeling framework"}, {"link": "", "title": "Version Models for Software Configuration Management"}, {"link": "", "title": "Proc. Intl. ICSE Workshop on Comparison and Versioning of Software Models"}, {"link": "", "title": "Bibliography on Comparison and Versioning of Software Models"}, {"link": "/document/4509441", "title": "Effective software merging in the presence of object-oriented refactorings"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Fundamentals of algebraic graph transformation"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": ""}, {"link": "", "title": "Towards a generic operation recorder for model evolution;"}, {"link": "", "title": "Language evolution in practice: The history of GMF; The"}, {"link": "", "title": ""}, {"link": "/document/6100050", "title": "A rule-based approach to the semantic lifting of model differences in the context of model versioning;"}, {"link": "/document/6693079", "title": "Consistency-preserving edit scripts in model versioning;"}, {"link": "/document/6405342", "title": "Understanding model evolution through semantically lifting model differences with SiLift"}, {"link": "", "title": "Adaptability of model comparison tools"}, {"link": "", "title": "Generating edit operations for profiled UML models"}, {"link": "", "title": "Patchen von modellen;"}, {"link": "", "title": "A generic difference algorithm for UML models"}, {"link": "", "title": "Model-independent Differences;"}, {"link": "", "title": "Capturing the intention of model changes"}, {"link": "", "title": "Different Models for Model Matching;"}, {"link": "", "title": "A posteriori operation detection in evolving software models"}, {"link": "", "title": "Operation-based merging"}, {"link": "/document/1000449", "title": "A state-of-the-art survey on software merging;"}, {"link": "", "title": ""}, {"link": "", "title": "Object Constraint Language: Version 2.0"}, {"link": "", "title": "CoObRA - A small step for development tools to collaborative environments"}, {"link": "", "title": "A review of UML model comparison techniques"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Towards refactoring of rule-based in-place model transformation systems"}, {"link": "", "title": "Generating domain-specific model editors with complex editing commands"}, {"link": "", "title": "A fundamental approach to model versioning based on graph modifications: From theory to implementation"}, {"link": "", "title": ""}, {"link": "", "title": "Unique Identification of Elements in Evolving Models: Towards Fine-Grained Traceability in Model-Driven Engineering"}, {"link": "/document/988710", "title": "A layered architecture for uniform version management"}, {"link": "/document/4023996", "title": "Refactoring detection based on UMLDiff changefacts queries"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693079"}
{"ref": [{"link": "", "title": "Asterix: Towards a scalable, semistructured data platform for evolving-world models"}, {"link": "/document/4221699", "title": "Reverse query processing"}, {"link": "", "title": "QAGen: Generating query-aware test databases"}, {"link": "/document/6200102", "title": "Symbolic execution with interval solving and meta-heuristic search"}, {"link": "", "title": "Exploiting positive equality in a logic of equality with uninterpreted functions"}, {"link": "", "title": "Automatic verification of pipelined microprocessor control"}, {"link": "", "title": "Execution generated test cases: How to make systems code crash itself"}, {"link": "", "title": "Satisfiability modulo theories: Introduction and applications"}, {"link": "", "title": "Dynamic test input generation for database applications"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Dryad: Distributed data-parallel programs from sequential building blocks"}, {"link": "", "title": "Dsc+mock: A test case + mock class generator in support of coding against interfaces"}, {"link": "", "title": "Dynamic symbolic database application testing"}, {"link": "", "title": "Java Native Interface: Programmer's Guide and Specification"}, {"link": "", "title": "Test input generation for database programs using relational constraints"}, {"link": "", "title": "Generating example data for dataflow programs"}, {"link": "", "title": "Pig latin: A not-so-foreign language for data processing"}, {"link": "/document/6100152", "title": "Generating program inputs for database application testing"}, {"link": "", "title": "CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "Combining static and dynamic reasoning for bug detection"}, {"link": "", "title": "Scalable automatic test data generation from modeling diagrams"}, {"link": "", "title": "Hive - A warehousing solution over a mapreduce framework"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "Full predicate coverage for testing SQL database queries"}, {"link": "", "title": "Qex: Symbolic SQL query explorer"}, {"link": "", "title": "Precise identification of problems for structural test generation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693083"}
{"ref": [{"link": "", "title": "is quickly becoming the year of the api economy"}, {"link": "", "title": "Jeff bezos' mandate: Amazon and web services"}, {"link": "", "title": "U. of Rochester Computer Science (URCS). Intuitive computing"}, {"link": "", "title": "Natural Language for Developers"}, {"link": "", "title": "Conversational User Experience Platform. Now we're talking"}, {"link": "", "title": "Build a great conversationalist"}, {"link": "", "title": "Amazon Lex: Conversational interfaces for your applications"}, {"link": "", "title": "Conversation Service"}, {"link": "", "title": "Rise of the chatbots: bigger than apps?"}, {"link": "", "title": "Forget apps, now the bots take over"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Speech and Language Processing"}, {"link": "", "title": "Natural language processing with Python"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Crowds in two seconds: Enabling realtime crowd-powered interfaces"}, {"link": "", "title": "Vizwiz: Nearly real-time answers to visual questions"}, {"link": "", "title": "Guardian: A crowd-powered spoken dialog system for web apis"}, {"link": "/document/7476656", "title": "Rack: Automatic api recommendation using crowdsourced knowledge"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usage"}, {"link": "", "title": "Searching connected api subgraph via text phrases"}, {"link": "", "title": "Program synthesis using natural language"}, {"link": "", "title": "Nlyze: Interactive programming by natural language for spreadsheet data analysis and manipulation"}, {"link": "", "title": "Augur: Mining human behaviors from fiction to power interactive systems"}, {"link": "", "title": "Learning knowledge graphs for question answering through conversational dialog"}, {"link": "", "title": "Commandspace: Modeling the relationships between tasks, descriptions and features"}, {"link": "", "title": "Query-feature graphs: Bridging user vocabulary and system functionality"}, {"link": "", "title": "Synthesizing java expressions from free-form queries"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115694"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Synthesizing program input grammars"}, {"link": "", "title": "Automated correction for syntax errors in programming assignments using recurrent neural networks"}, {"link": "", "title": "Adaptive neural compilation"}, {"link": "", "title": "QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs"}, {"link": "", "title": "Yagg: an easy-to-use generator for structured test inputs"}, {"link": "", "title": "Tupni: Automatic reverse engineering of input formats"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Robustfill: Neural program learning under noisy I/O"}, {"link": "", "title": "Grammar-based Whitebox Fuzzing"}, {"link": "", "title": "Automated Whitebox Fuzz Testing"}, {"link": "", "title": "Generating sequences with recurrent neural networks"}, {"link": "", "title": "Towards end-to-end speech recognition with recurrent neural networks"}, {"link": "", "title": "Deepfix: Fixing common c language errors by deep learning"}, {"link": "", "title": "Automatic Generation of Test Cases"}, {"link": "", "title": "Long short-term memory"}, {"link": "", "title": "Mining input grammars from dynamic taints"}, {"link": "", "title": "Neural random-access machines"}, {"link": "", "title": "Controllable combinatorial coverage in grammar-based testing"}, {"link": "", "title": "Directed Test Generation using Symbolic Grammars"}, {"link": "/document/56422", "title": "Generating test data with enhanced context-free grammars"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "", "title": "Neuro-symbolic program synthesis"}, {"link": "", "title": "Learning to fuzz: Application-independent fuzz testing with probabilistic, generative models of input data"}, {"link": "", "title": "sk_p: a neural program corrector for moocs"}, {"link": "", "title": "A sentence generator for testing parsers"}, {"link": "", "title": "Neural programmer-interpreters"}, {"link": "", "title": "AP: artificial programming"}, {"link": "", "title": "Using production grammars in software testing"}, {"link": "", "title": "Fuzzing: Brute Force Vulnerability Discovery"}, {"link": "", "title": "A Taxonomy of Model-Based Testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115618"}
{"ref": [{"link": "", "title": "Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives"}, {"link": "", "title": "Characterizing software architecture changes: A systematic review"}, {"link": "/document/6606638", "title": "Measuring architecture quality by structure plus history analysis"}, {"link": "", "title": "Identifying and quantifying architectural debt"}, {"link": "", "title": "Object-oriented metrics that predict maintainability"}, {"link": "", "title": "Predicting object-oriented software maintainability using multivariate adaptive regression splines"}, {"link": "", "title": "Hidden dependencies in program comprehension and change propagation"}, {"link": "/document/1541168", "title": "Object-oriented cohesion as a surrogate of software comprehension: an empirical study"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Object-oriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems"}, {"link": "", "title": "Measuring coupling and cohesion in object-oriented systems"}, {"link": "", "title": "A unified framework for cohesion measurement in object-oriented systems"}, {"link": "/document/748920", "title": "A unified framework for coupling measurement in object-oriented systems"}, {"link": "/document/693283", "title": "Using automatic clustering to produce high-level system organizations of source code"}, {"link": "", "title": "Using information retrieval based coupling measures for impact analysis"}, {"link": "", "title": "On the impact of software evolution on software clustering"}, {"link": "", "title": "An empirical study on the developers' perception of software coupling"}, {"link": "", "title": "Using cohesion and coupling for software remodularization: Is it enough ?"}, {"link": "/document/1610610", "title": "On the automatic modularization of software systems using the bunch tool"}, {"link": "", "title": "An empirical study of cohesion and coupling: Balancing optimisation and disruption"}, {"link": "", "title": "Decoupling level"}, {"link": "", "title": "An empirical study of architectural change in open-source software systems"}, {"link": "", "title": "Controlling software architecture erosion: A survey"}, {"link": "", "title": "Measure it? manage it? ignore it? software practitioners and technical debt"}, {"link": "/document/6336722", "title": "Technical debt: From metaphor to theory and practice"}, {"link": "", "title": "Experimental assessment of software metrics using automated refactoring"}, {"link": "", "title": "Search-based refactoring: Metrics are not enough"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Gerrit code review for git"}, {"link": "", "title": ""}, {"link": "", "title": "Couchbase Projects"}, {"link": "", "title": "Establishing the source code disruption caused by automated remodularisation tools"}, {"link": "", "title": "On the congruence of modularity and code coupling"}, {"link": "", "title": "Supervised software modularisation"}, {"link": "", "title": "Obtaining ground-truth software architectures"}, {"link": "", "title": "Learning from optimization: A case study with apache ant"}, {"link": "", "title": "Scitools"}, {"link": "", "title": "Supporting material for: Are developers aware of the architectural impact of their changes"}, {"link": "", "title": "Exploratory data analysis"}, {"link": "/document/7817894", "title": "When and why your code starts to smell bad (and whether the smells go away)"}, {"link": "", "title": "Rank correlation methods"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences"}, {"link": "", "title": "The confounding effect of class size on the validity of object-oriented metrics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115622"}
{"ref": [{"link": "", "title": "Harvard Business Review"}, {"link": "", "title": "Delivering large-scale IT projects on time, on budget, and on value"}, {"link": "", "title": "Chaos report"}, {"link": "", "title": "Software risk management: principles and practices"}, {"link": "", "title": "Taxonomy-Based Risk Identification"}, {"link": "/document/7180087", "title": "Characterization and prediction of issue-related risks in software projects"}, {"link": "/document/4228638", "title": "How Long Will It Take to Fix This Bug?"}, {"link": "", "title": "Predicting the fix time of bugs"}, {"link": "/document/4228666", "title": "Predicting Eclipse Bug Lifetimes"}, {"link": "", "title": "Studying the fix-time for bugs in large open source projects"}, {"link": "", "title": "Bug-fix time prediction models"}, {"link": "", "title": "Collective Classification with Relational Dependency Networks"}, {"link": "", "title": "Learning Associative Markov Networks"}, {"link": "", "title": "Link-based classification"}, {"link": "", "title": "Genome-wide discovery of transcriptional modules from DNA sequence and gene expression"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "Support Vector Machines for Multi-Class Pattern Recognition"}, {"link": "", "title": "Multinomial logistic regression algorithm"}, {"link": "", "title": "Latent Dirichlet Allocation"}, {"link": "/document/6227173", "title": "Graph-based Analysis and Prediction for Software Evolution"}, {"link": "", "title": "Classification in Networked Data: A toolkit and a univariate case study"}, {"link": "", "title": "Graphical models"}, {"link": "", "title": "A simple relational classifier"}, {"link": "", "title": "Stacked Graphical Models for Efficient Inference in Markov Random Fields"}, {"link": "", "title": "Relational classifiers in a non-relational world: Using homophily to create relations"}, {"link": "", "title": "Birds of a Feather: Homophily in Social Networks"}, {"link": "", "title": "Homophily of neighborhood in graph relational classifier"}, {"link": "", "title": "How homophily affects the speed of learning and best-response dynamics"}, {"link": "/document/4767390", "title": "On the foundations of relaxation labeling processes"}, {"link": "", "title": "Evaluation Measures for Ordinal Regression"}, {"link": "", "title": "CMM-based software risk control optimization"}, {"link": "", "title": "A Risk Assessment Model for Offshoring Using CMMI Quantitative Approach"}, {"link": "", "title": "Uncertainty, risk, and information value in software requirements and architecture"}, {"link": "", "title": "Software project risk analysis using Bayesian networks with causality constraints"}, {"link": "", "title": "Characterizing and predicting blocking bugs in open source projects"}, {"link": "/document/6227112", "title": "Characterizing and predicting which bugs get reopened"}, {"link": "", "title": "Studying re-opened bugs in open source software"}, {"link": "", "title": "Predicting the severity of a reported bug"}, {"link": "/document/4658083", "title": "Automated severity assessment of software defect reports"}, {"link": "", "title": "An Empirical Study of Delays in the Integration of Addressed Issues"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "Reducing the effort of bug report triage"}, {"link": "/document/5316025", "title": "Optimized assignment of developers for fixing bugs an initial evaluation for eclipse projects"}, {"link": "", "title": "Automatic bug triage using text categorization"}, {"link": "/document/4222611", "title": "Detection of Duplicate Defect Reports Using Natural Language Processing"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "/document/4658082", "title": "Duplicate bug reports considered harmful \u2026 really?"}, {"link": "", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "/document/4630070", "title": "Automated duplicate detection for bug tracking systems"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "Detecting bad smells in source code using change history information"}, {"link": "", "title": "Personalized defect prediction"}, {"link": "", "title": "Studying the impact of dependency network measures on software quality"}, {"link": "", "title": "Predicting build failures using social network analysis on developer communication"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "/document/6624058", "title": "Using citation influence to predict software defects"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372024"}
{"ref": [{"link": "", "title": "Combining global optimization with local selection for efficient QoS-aware service composition"}, {"link": "", "title": "A theory of timed automata"}, {"link": "", "title": "An introduction to MCMC for machine learning"}, {"link": "", "title": "Global and local QoS constraints guarantee in web service selection"}, {"link": "/document/4181707", "title": "Adaptive service composition in flexible processes"}, {"link": "", "title": "Efficient guiding towards cost-optimality in UPPAAL"}, {"link": "", "title": "Declarative composition and peer-to-peer provisioning of dynamic web services"}, {"link": "", "title": "UPPAAL - a tool suite for automatic verification of real-time systems"}, {"link": "", "title": "Requirements-driven mediation for collaborative security"}, {"link": "", "title": "Challenges and business models for mobile location-based services and advertising"}, {"link": "", "title": "What Does O2O Mean for the Future of E-Commerce?"}, {"link": "", "title": "CrowdDB: answering queries with crowdsourcing"}, {"link": "/document/5416674", "title": "Interacting with the soa-based internet of things: Discovery, query, selection, and on-demand provisioning of web services"}, {"link": "", "title": "The sharing economy: Why people participate in collaborative consumption"}, {"link": "", "title": "Monte carlo sampling methods using markov chains and their applications"}, {"link": "", "title": "Timed transition systems"}, {"link": "", "title": "Amazon's Next Delivery Drone: You"}, {"link": "", "title": "Location-based services"}, {"link": "", "title": "Q-peer: a decentralized QoS registry architecture for web services"}, {"link": "", "title": "The wisdom of minority: discovering and targeting the right group of workers for crowdsourcing"}, {"link": "", "title": "Medusa: a programming framework for crowd-sensing applications"}, {"link": "", "title": "Why Online2Offline Commerce Is A Trillion Dollar Opportunity"}, {"link": "", "title": "A survey of service composition in ambient intelligence environments"}, {"link": "", "title": "Dynamic synthesis of local time requirement for service composition"}, {"link": "", "title": "Automated runtime recovery for QoS-based service composition"}, {"link": "", "title": "Optimizing selection of competing features via feedback-directed evolutionary algorithms"}, {"link": "", "title": "Mobile query services in a participatory embedded sensing environment"}, {"link": "", "title": "From big data to big service"}, {"link": "", "title": "Quality driven web services composition"}, {"link": "", "title": "QoS-aware middleware for web services composition"}, {"link": "", "title": "How long to wait?: predicting bus arrival time with mobile phone based participatory sensing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115657"}
{"ref": [{"link": "", "title": "Classification and comparison of architecture evolution reuse knowledge - a systematic review"}, {"link": "", "title": "Performance evolution blueprint: Understanding the impact of software evolution on performance"}, {"link": "", "title": "Deliverable 5.2: DICE delivery tools-Intermediate version"}, {"link": "", "title": "Pattern recognition and machine learning"}, {"link": "", "title": "Integrating algorithmic parameters into benchmarking and design space exploration in 3D scene understanding"}, {"link": "", "title": "Performance-oriented devops: A research agenda"}, {"link": "/document/5530314", "title": "Experience transfer for the configuration tuning in large-scale computing systems"}, {"link": "", "title": "Elements of information theory"}, {"link": "", "title": "The operational analysis of queueing network models"}, {"link": "", "title": "Fusion: A framework for engineering self-tuning self-adaptive software systems"}, {"link": "/document/6574860", "title": "A learning-based framework for engineering feature-oriented self-adaptive software systems"}, {"link": "", "title": "Automated multi-objective control for self-adaptive software design"}, {"link": "", "title": "Borrowing treasures from the wealthy: Deep transfer learning through selective joint fine-tuning"}, {"link": "", "title": "Performance prediction of multigrid-solver configurations"}, {"link": "", "title": "Variability-aware performance prediction: A statistical learning approach"}, {"link": "", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "Distilling the knowledge in a neural network"}, {"link": "", "title": "A biometrics invited paper. the analysis and selection of variables in linear regression"}, {"link": "", "title": "Dynamic knobs for responsive power-aware computing"}, {"link": "", "title": "Automated algorithm configuration and parameter tuning"}, {"link": "", "title": "Communications of the ACM"}, {"link": "", "title": "Performance prediction based on inherent program similarity"}, {"link": "", "title": "An uncertainty-aware approach to optimal configuration of stream processing systems"}, {"link": "", "title": "A framework for classifying and comparing architecture-centric software evolution research"}, {"link": "", "title": "Transfer learning for improving model predictions in highly configurable software"}, {"link": "", "title": "Sensitivity analysis for building evolving and & adaptive robotic software"}, {"link": "", "title": "Transfer learning in effort estimation"}, {"link": "", "title": "Too much automation? The bellwether effect and its implications for transfer learning"}, {"link": "", "title": "Introduction to combinatorial testing"}, {"link": "", "title": "Patterns in the chaos - a study of performance variation and predictability in public IaaS clouds"}, {"link": "", "title": "Learning transferable features with deep adaptation networks"}, {"link": "", "title": "Visualization and exploration of optimal variants in product line engineering"}, {"link": "", "title": "Faster discovery of faster system configurations with spectral learning"}, {"link": "", "title": "Heterogeneous defect prediction"}, {"link": "/document/6606584", "title": "Transfer defect learning"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Optimizing system configurations quickly by guessing at the performance"}, {"link": "", "title": "Architectural principles for cloud software"}, {"link": "/document/5288526", "title": "A survey on transfer learning"}, {"link": "", "title": "Learning to select data for transfer learning with Bayesian Optimization"}, {"link": "", "title": "SaC compiler"}, {"link": "", "title": "Global sensitivity analysis: the primer"}, {"link": "/document/7372023", "title": "Cost-efficient sampling for performance prediction of configurable systems"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "", "title": "Entomomodel: Understanding and avoiding performance anomaly manifestations"}, {"link": "", "title": "Automatically configuring algorithms for scaling performance"}, {"link": "", "title": "Practical performance models for complex, popular applications"}, {"link": "", "title": "Staccato: A bug finder for dynamic configuration updates (artifact)"}, {"link": "", "title": "Transfer learning"}, {"link": "", "title": "Transferring performance prediction models across different hardware platforms"}, {"link": "", "title": "Active transfer learning under model shift"}, {"link": "/document/4221619", "title": "The future of software performance engineering"}, {"link": "", "title": "Deep parameter optimisation"}, {"link": "", "title": "A smart hill-climbing algorithm for application server configuration"}, {"link": "", "title": "Hey, you have given me too many knobs!: Understanding and dealing with over-designed configuration in system software"}, {"link": "", "title": "Early detection of configuration errors to reduce failure damage"}, {"link": "", "title": "How do system administrators resolve access-denied issues in the real world?"}, {"link": "", "title": "Do not blame users for misconfigurations"}, {"link": "", "title": "A recursive random search algorithm for large-scale network parameter configuration"}, {"link": "", "title": "Towards machine learning-based auto-tuning of mapreduce"}, {"link": "", "title": "How transferable are features in deep neural networks?"}, {"link": "/document/7372025", "title": "Performance prediction of configurable software systems by Fourier learning"}, {"link": "", "title": "Automatic configuration of internet services"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115661"}
{"ref": [{"link": "", "title": "Certification Commission for Health Information Technology"}, {"link": "", "title": "Vista Electronic Health Record and Health Information System"}, {"link": "", "title": "Fast algorithms for mining association rules"}, {"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Design-code traceability for object-oriented systems"}, {"link": "", "title": "Application of just in time tracing to regulatory codes"}, {"link": "/document/4249808", "title": "Best practices for automated traceability"}, {"link": "", "title": "A machine learning approach for tracing regulatory codes to product specific requirements"}, {"link": "/document/5636537", "title": "Automated requirements traceability: The study of human analysts"}, {"link": "", "title": "Towards mining replacement queries for hard-to-retrieve traces"}, {"link": "/document/512550", "title": "Contribution structures (requirements artifacts)"}, {"link": "/document/1583599", "title": "Advancing candidate link generation for requirements tracing: The study of methods"}, {"link": "/document/1335682", "title": "Helping analysts trace requirements: An objective look"}, {"link": "/document/1704104", "title": "Poirot: A distributed tool supporting enterprise-wide automated traceability"}, {"link": "/document/4021353", "title": "Incremental approach and user feedbacks: A silver bullet for traceability recovery"}, {"link": "", "title": "Effective personalization based on association rule discovery from web usage data"}, {"link": "/document/1021342", "title": "Traceability recovery in rad software systems"}, {"link": "", "title": "Towards method-driven trace capture"}, {"link": "/document/895989", "title": "Toward reference models for requirements traceability"}, {"link": "", "title": "Robustness of collaborative recommendation based on association rule mining"}, {"link": "", "title": "A comparative evaluation of two user feedback techniques for requirements trace retrieval"}, {"link": "", "title": "Assessing traceability of software engineering artifacts"}, {"link": "/document/5477073", "title": "We're finding most of the bugs, but what are we missing?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693117"}
{"ref": [{"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "/document/6004309", "title": "Evolutionary generation of whole test suites"}, {"link": "", "title": "Generating parameterized unit tests"}, {"link": "/document/6019060", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated test data generation for aspect-oriented programs"}, {"link": "/document/6100092", "title": "Combining search-based and constraint-based testing"}, {"link": "", "title": "Using search-based algorithms for Ajax event sequence generation during testing"}, {"link": "/document/4539539", "title": "State-based testing of Ajax web applications"}, {"link": "", "title": "Crawling Ajax-based web applications through dynamic analysis of user interface state changes"}, {"link": "/document/5728834", "title": "Invariant-based automatic testing of modern web applications"}, {"link": "", "title": "JSART: JavaScript assertion-based regression testing"}, {"link": "/document/6569719", "title": "Efficient JavaScript mutation testing"}, {"link": "", "title": "A strategy for evaluating feasible and unfeasible test cases for the evolutionary testing of Object-Oriented software"}, {"link": "/document/5504700", "title": "A symbolic execution framework for JavaScript"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Automated oracle creation support, or: How i learned to stop worrying about fault propagation and love mutation testing"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "PathCrawler: Automatic generation of path tests by combining static and dynamic analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693121"}
{"ref": [{"link": "", "title": "Flux: Multi-surface computing in Android"}, {"link": "", "title": "Statistics portal"}, {"link": "", "title": "Google research: No mobile site = lost customers"}, {"link": "", "title": "Responsive Web Design"}, {"link": "", "title": "Adaptive Web Design"}, {"link": "", "title": "Investigating attractiveness in Web user interfaces"}, {"link": "", "title": "Design aesthetics leading to m-loyalty in mobile commerce"}, {"link": "", "title": "An analysis of HTML and CSS syntax errors in a Web development course"}, {"link": "", "title": "Prevalence of Bootstrap, Foundation, and Responsive as tags"}, {"link": "", "title": "Wraith"}, {"link": "", "title": "ResponsivePX: Find that tricky breakpointsd"}, {"link": "", "title": "Bootstrap: Mobile-first and responsive front-end framework"}, {"link": "", "title": "Foundation: Responsive front-end framework"}, {"link": "", "title": "5 of this year's vertical scrolling trends"}, {"link": "", "title": "X-PERT: Accurate identification of cross-browser issues in Web applications"}, {"link": "", "title": "X-PERT: A web application testing tool for cross-browser inconsistency detection"}, {"link": "", "title": "Selenium: Web browser automation"}, {"link": "/document/6825696", "title": "WebMate: Web application test generation in the real world"}, {"link": "", "title": "Finding HTML presentation failures using image comparison techniques"}, {"link": "", "title": "Responsive design testing"}, {"link": "", "title": "Google adds \u2018mobile friendliness\u2019 to its search criteria"}, {"link": "", "title": "An analysis of the mobile readiness and dialogic principles on Fortune 500 mobile websites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372059"}
{"ref": [{"link": "", "title": "Ar-miner: Mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": ""}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Some methods for classification and analysis of multivariate observations"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "", "title": "Facebook messenger battery drain! - facebook's developer confirmed"}, {"link": "", "title": "Faroo spell corrector"}, {"link": "", "title": "Peter norvic spell corrector"}, {"link": "", "title": "Snowball stemmer"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Feature-rich part-of-speech tagging with a cyclic dependency network"}, {"link": "", "title": "Irregular english verbs"}, {"link": "", "title": "English wikipedia dump"}, {"link": "", "title": "Wordnet: An electronic lexical database"}, {"link": "", "title": "Clash of clans daily revenue at 5.15 millions usd hacker"}, {"link": "", "title": "An opensource googleplay crawler"}, {"link": "", "title": "A preliminary analysis of mobile app user reviews"}, {"link": "", "title": "An analysis of the mobile app review landscape: Trends and implications"}, {"link": "/document/6636712", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "What do mobile app users complain about? a study on free ios apps"}, {"link": "", "title": "What are you complaining about?: a study of online reviews of mobile applications"}, {"link": "/document/6945855", "title": "The impact of api change- and fault-proneness on the user ratings of android apps"}, {"link": "/document/7180073", "title": "The app sampling problem for app store mining"}, {"link": "", "title": "Identifying spam in the ios app store"}, {"link": "/document/6606604", "title": "Analysis of user comments: An approach for software requirements evolution"}, {"link": "/document/6912257", "title": "How do users like this feature? a fine grained sentiment analysis of app reviews"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Sentiment strength detection in short informal text"}, {"link": "", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "Text classification from labeled and unlabeled documents using em"}, {"link": "", "title": "A recommender system of buggy app checkers for app store moderators"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372063"}
{"ref": [{"link": "", "title": "A low-cost approximate minimal hitting set algorithm and its application to model-based diagnosis"}, {"link": "/document/5431781", "title": "Spectrum-based multiple fault localization"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "/document/366927", "title": "Incremental regression testing"}, {"link": "/document/5431780", "title": "Evaluating the accuracy of fault localization techniques"}, {"link": "/document/6100114", "title": "Faultlocalization using dynamic slicing and change impact analysis"}, {"link": "", "title": "An orchestrated survey on automated software test case generation"}, {"link": "", "title": "Directed test generation for effective fault localization"}, {"link": "", "title": "Nonlinear programming: Analysis and methods"}, {"link": "", "title": "Improving test suites for efficient fault localization"}, {"link": "", "title": "Minimizing reproduction of software failures"}, {"link": "", "title": "Software Hell"}, {"link": "", "title": "Diagnosing multiple faults"}, {"link": "", "title": "Diagnosing multiple persistent and intermittent faults"}, {"link": "", "title": "Computing minimal diagnoses by greedy stochastic search"}, {"link": "", "title": "A two-step hierarchical algorithm for model-based diagnosis"}, {"link": "", "title": "EvoSuite: Automatic test suite generation for object-oriented software"}, {"link": "", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "Computers and intractability"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "/document/6100153", "title": "Prioritizing tests for fault localization through ambiguity group reduction"}, {"link": "", "title": "Spectrum-based sequential diagnosis"}, {"link": "/document/5954476", "title": "Modeling the diagnostic efficiency of regression test suites"}, {"link": "/document/5562943", "title": "Prioritizing Tests for software fault localization"}, {"link": "/document/5007263", "title": "An information theory approach to diagnosis"}, {"link": "/document/1007991", "title": "Visualization of test information to assist fault localization"}, {"link": "/document/4639316", "title": "Evaluating models for model-based debugging"}, {"link": "", "title": "Search-based software test data generation: A survey"}, {"link": "", "title": "Software Testing and Validation Techniques"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "/document/6569746", "title": "CrowdOracles: Can the crowd solve the oracle problem?"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "Isolating failure causes through test case generation"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "/document/5070508", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "/document/6258291", "title": "Software fault localization using DStar (D*)"}, {"link": "", "title": "Bridging the gap between slicing and model-based diagnosis"}, {"link": "", "title": "Model-based debugging or how to diagnose programs automatically"}, {"link": "", "title": "Fault localization prioritization: Comparing information-theoretic and coverage-based approaches"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693085"}
{"ref": [{"link": "", "title": "Automated concolic testing of Smartphone apps"}, {"link": "", "title": "Lightweight static analysis for GUI testing"}, {"link": "", "title": "Reducing GUI test suites via program slicing"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "", "title": "On the relative strengths of model-based and dynamic event extraction-based GUI testing techniques: An empirical study"}, {"link": "", "title": "Barad. A GUI testing framework based on symbolic execution"}, {"link": "/document/989456", "title": "Finite state testing and analysis of graphical user interfaces"}, {"link": "", "title": "Buddi"}, {"link": "", "title": "Calc"}, {"link": "", "title": "Ce"}, {"link": "", "title": "GUICat: GUI testing as a service"}, {"link": "", "title": "Cobertura"}, {"link": "", "title": "Crosswords"}, {"link": "", "title": "Efficient and flexible GUI test execution via test merging"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "/document/6100134", "title": "BEST: A symbolic testing tool for predicting multithreaded program failures"}, {"link": "", "title": "Gazoo"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems - An Approach to the State-Explosion Problem"}, {"link": "", "title": "A partial approach to model checking"}, {"link": "", "title": "Reran: Timing-and touch-sensitive record and replay for Android"}, {"link": "", "title": "GUITAR"}, {"link": "", "title": "Assertion guided symbolic execution of multithreaded programs"}, {"link": "", "title": "Improving test case generation for Web applications using automated interface discovery"}, {"link": "", "title": "Hashvcalc"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "Race detection for event-driven mobile applications"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "jNotepad"}, {"link": "", "title": "JPG"}, {"link": "", "title": "Monotonic partial order reduction: An optimal symbolic partial order reduction technique"}, {"link": "", "title": "CONTESSA: Concurrency testing augmented with symbolic analysis"}, {"link": "", "title": "Assertion guided abstraction: a cooperative optimization for dynamic partial order reduction"}, {"link": "", "title": "Partial order reduction for event-driven multi-threaded programs"}, {"link": "", "title": "Efficient computation of happens-before relation for event-driven programs"}, {"link": "/document/6100131", "title": "JPF-AWT: Model checking GUI applications"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "/document/1287256", "title": "GUI Ripping: Reverse engineering of Graphical User Interfaces for testing"}, {"link": "", "title": "Reducing combinatorics in GUI testing of Android applications"}, {"link": "", "title": "Testing Android apps through symbolic execution"}, {"link": "", "title": "GUI-TAR: an innovative tool for automated testing of GUI-driven software"}, {"link": "", "title": "All from one, one for all: on model checking using representatives"}, {"link": "", "title": "Regextester"}, {"link": "", "title": "A method to automate user interface testing using variable finite state machines"}, {"link": "", "title": "Soot"}, {"link": "", "title": "Squish"}, {"link": "", "title": "Static DOM event dependency analysis for testing web applications"}, {"link": "", "title": "Terpspreadsheet"}, {"link": "", "title": "Soot-a Java bytecode optimization framework"}, {"link": "", "title": "A stubborn attack on state explosion"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "", "title": "Peephole partial order reduction"}, {"link": "/document/885865", "title": "Generating test cases for GUI responsibilities using complete interaction sequences"}, {"link": "", "title": "Automated modularization of GUI test cases"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis"}, {"link": "", "title": "Iterative execution-feedback model-directed GUI testing"}, {"link": "/document/5306073", "title": "Generating event sequence-based test cases using GUI runtime state feedback"}, {"link": "", "title": "RClassify: classifying race conditions in web applications via deterministic replay"}, {"link": "", "title": "Dynamic partial order reduction for relaxed memory models"}, {"link": "", "title": "Finding errors in multithreaded GUI applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115696"}
{"ref": [{"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Effective identifier names for comprehension and memory"}, {"link": "/document/6112738", "title": "How we refactor, and how we know it"}, {"link": "", "title": "Jetbrains"}, {"link": "", "title": "Eclipse's refactoring API's documentation"}, {"link": "", "title": "A comparative study of manual and automated refactorings"}, {"link": "/document/1657944", "title": "How are Java software developers using the Eclipse IDE?"}, {"link": "/document/6227190", "title": "Use, disuse, and misuse of automated refactorings"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? on the relation between source code and comment changes"}, {"link": "/document/6613836", "title": "Quality analysis of source code comments"}, {"link": "", "title": "Listening to programmers Taxonomies and characteristics of comments in operating system code"}, {"link": "", "title": "Source code that talks: an exploration of Eclipse task comments and their implication to repository mining"}, {"link": "", "title": "Eclipse documentation - current release Eclipse Neon"}, {"link": "", "title": "Hotcomments: how to make program comments more useful?"}, {"link": "", "title": "*icomment: Bugs or bad comments?*"}, {"link": "", "title": "Automatically detecting the Up-To-Date status of ToDo comments in Java programs"}, {"link": "", "title": "Checkstyle home page"}, {"link": "", "title": "The Java\u00ae Language Specification"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Comment and indentation preserving refactoring and unparsing for Modelica"}, {"link": "", "title": "Retaining comments when refactoring code"}, {"link": "", "title": "Eclipse home page"}, {"link": "", "title": "@tcomment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Analyzing APIs documentation and code to detect directive defects"}, {"link": "", "title": "Automatic generation of natural language summaries for Java classes"}, {"link": "/document/6613855", "title": "JSummarizer: An automatic generator of natural language summaries for Java classes"}, {"link": "", "title": "Towards automatically generating summary comments for Java methods"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Improving software maintenance for pattern-based software development: A comment refactoring approach"}, {"link": "", "title": "Automatically documenting unit test cases"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115624"}
{"ref": [{"link": "/document/5439803", "title": "Scanning advances in aerospace & automobile software technology"}, {"link": "", "title": "Release 4.2 Overview and Revision History"}, {"link": "/document/6311410", "title": "Software architecture optimization methods: A systematic literature review"}, {"link": "", "title": "Modeling and efficient solving of extra-functional properties for adaptation in networked embedded real-time systems"}, {"link": "", "title": "Modeling, analysis, and optimization of automotive networks"}, {"link": "", "title": ""}, {"link": "", "title": "Designing automotive embedded systems with adaptive genetic algorithms"}, {"link": "", "title": "Viewpoints and views in hardware platform modeling for safe deployment"}, {"link": "", "title": ""}, {"link": "", "title": "Modeling and verifying dynamic communication structures based on graph transformations"}, {"link": "", "title": "ICSE Companion 2014: Companion Proceedings of the 36th International Conference on Software Engineering"}, {"link": "", "title": "Object Constraint Language (OCL), version = 2.4"}, {"link": "", "title": "Reliability-driven deployment optimization for embedded systems"}, {"link": "", "title": "An extended model for multi-criteria software component allocation on a heterogeneous embedded platform"}, {"link": "/document/5680912", "title": "An extensible framework for improving a distributed software system's deployment architecture"}, {"link": "", "title": "Secure automotive on-board electronics network architecture"}, {"link": "", "title": "Proceedings of the 2002 IEEEIACM International Conference on Computer-aided Design"}, {"link": "", "title": "Theory of linear and integer programming"}, {"link": "", "title": ""}, {"link": "/document/391832", "title": "Case studies for method and tool evaluation"}, {"link": "", "title": "A tool suite for the model-driven software engineering of cyber-physical systems"}, {"link": "/document/5069138", "title": "Archeopterix: An extendable tool for architecture optimization of aadl models"}, {"link": "/document/6063490", "title": "Towards self-adaptation in real-time, networked systems: Efficient solving of system constraints for automotive embedded systems"}, {"link": "", "title": "Towards a generic quality optimisation framework for component-based system models"}, {"link": "", "title": ""}, {"link": "", "title": "Opt4J - A Modular Framework for Meta-heuristic Optimization"}, {"link": "", "title": "Railcab convoys: An exemplar for using self-adaptation in cyber-physical systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372026"}
{"ref": [{"link": "", "title": "Formal Approaches to Software Testing, 4th International Workshop"}, {"link": "", "title": "Automata, languages and programming"}, {"link": "", "title": "Larsen. A tutorial on UPPAAL"}, {"link": "", "title": "Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering"}, {"link": "", "title": "Journal of Systems and Software"}, {"link": "", "title": "Proceedings of the IEEE, 84(8):1090\u2013"}, {"link": "", "title": "Modeling and verification of parallel processes"}, {"link": "", "title": "A taxonomy of model-based testing approaches"}, {"link": "", "title": "Science of Computer programming"}, {"link": "", "title": "Proceedings of the 2014 Design, Automation & Test in Europe Conference & Exhibition"}, {"link": "", "title": "Proceedings of the 2013 ACM SIGAda Annual Conference on High Integrity Language Technology"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/7081779", "title": "The risks of coverage-directed test case generation"}, {"link": "", "title": "NASA Formal Methods"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "TAIC PART'08"}, {"link": "", "title": "IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems"}, {"link": "", "title": "Proceedings of the 35th International Conference on Software Engineering"}, {"link": "", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": "Proceedings of the 2015 Design, Automation & Test in Europe Conference & Exhibition"}, {"link": "", "title": "Proceedings of the Third International Workshop on Object-Oriented Real-Time Dependable Systems"}, {"link": "", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": "Proceedings of the 5th ACM International Conference on Embedded Software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372030"}
{"ref": [{"link": "", "title": "Center of Excellence for Software and Systems Traceability"}, {"link": "", "title": "Report on the loss of the Mars Polar Lander and Deep Space 2 missions (Casani Report)"}, {"link": "", "title": "ECSS-E-40C: principles and requirements applicable to space software engineering"}, {"link": "", "title": "RTCA/EUROCAE. DO-178C/ED-12C: Software considerations in airborne systems and equipment certification"}, {"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Practitioners' Perspectives on Change Impact Analysis for Safety-Critical Software - A Preliminary Analysis"}, {"link": "", "title": "Boston Scientific. Pacemaker system specification"}, {"link": "", "title": "Traceability and SysML design slices to support safety inspections: A controlled experiment"}, {"link": "", "title": "A case study in successful product line management"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Supporting requirements update during software evolution"}, {"link": "", "title": "Problem-oriented feature interaction detection in software product lines"}, {"link": "", "title": "Trace queries for safety requirements in high assurance systems"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "/document/7450627", "title": "IEEE Trans. Software Eng."}, {"link": "", "title": "Supporting the automated generation of modular product line safety cases"}, {"link": "", "title": "PLFaultCAT: A product-line software fault tree analysis tool"}, {"link": "", "title": "Assessment and cross-product prediction of software product line quality: accounting for reuse across products, over multiple releases"}, {"link": "", "title": "DOT/FAA/AR-08/32"}, {"link": "", "title": "Mission-critical and safety-critical systems handbook: Design and development for embedded applications"}, {"link": "", "title": "An open graph visualization system and its applications to software engineering"}, {"link": "", "title": "What requirements knowledge do developers need to manage change in safety-critical systems?"}, {"link": "/document/292398", "title": "An analysis of the requirements traceability problem"}, {"link": "", "title": "Towards a clearer understanding of context and its role in assurance argument confidence"}, {"link": "", "title": "Failure analysis and the safety-case lifecycle"}, {"link": "", "title": "Cold-start software analytics"}, {"link": "", "title": "A safety case approach to assuring configurable architectures of safety-critical product lines"}, {"link": "", "title": "Certifiably safe software-dependent systems: challenges and directions"}, {"link": "/document/1583599", "title": "Advancing candidate link generation for requirements tracing: The study of methods"}, {"link": "/document/5636545", "title": "Creating safety requirements traceability for assuring and recertifying legacy safety-critical systems"}, {"link": "", "title": "Mars code"}, {"link": "", "title": "Requirements engineering"}, {"link": "", "title": "IEEE. IEEE Recommended Practice for Software Requirements Specifications"}, {"link": "", "title": "ISO/IEC/IEEE. International standard - systems and software engineering - life cycle processes -requirements engineering"}, {"link": "", "title": "Software for Dependable Systems: Sufficient Evidence?, National Research Council"}, {"link": "", "title": "Fundamentals of Dependable Computing for Software Engineers"}, {"link": "/document/1007998", "title": "Safety critical systems: challenges and directions"}, {"link": "", "title": "A model management approach for assurance case reuse due to system evolution"}, {"link": "", "title": "Safeware, System Safety and Computers"}, {"link": "", "title": "Engineering a Safer World: Systems Thinking Applied to Safety"}, {"link": "", "title": "Making embedded software reuse practical and safe"}, {"link": "", "title": "Assumptions management in software development. Technical Report CMU/SEI-2004-TN-021"}, {"link": "", "title": "Ariane 5 flight 501 failure"}, {"link": "", "title": "Mining Requirements Knowledge from Operational Experience"}, {"link": "", "title": "Using obstacle analysis to identify contingency requirements on an unpiloted aerial vehicle"}, {"link": "", "title": "Requirements analysis using forward and backward search"}, {"link": "/document/6504885", "title": "Strategic traceability for safety-critical projects"}, {"link": "", "title": "T. members of the Task Force on Safety Critical Software"}, {"link": "", "title": "An extended systematic literature review on provision of evidence for safety certification"}, {"link": "", "title": "Software Safety Standard"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques."}, {"link": "", "title": "Trace link evolution across multiple software versions in safety-critical systems"}, {"link": "", "title": "Mind the gap: assessing the conformance of software traceability to relevant guidelines"}, {"link": "", "title": "Known and Unknown: A Memoir"}, {"link": "", "title": "Critical system properties: Survey and taxonomy"}, {"link": "/document/5487512", "title": "Introducing safety requirements traceability support in model-driven development of robotic applications"}, {"link": "", "title": "The role of environmental assumptions in failures of DNA nanosystems"}, {"link": "", "title": "Requirements Engineering: From System Goals to UML Models to Software Specifications"}, {"link": "", "title": "Integration between requirements engineering and safety analysis: A systematic literature review"}, {"link": "", "title": "Software product-line engineering: a family-based software development process"}, {"link": "", "title": "Design Science Methodology for Information Systems and Software Engineering"}, {"link": "", "title": "Four dark corners of requirements engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115659"}
{"ref": [{"link": "", "title": "Developer Survey Results 2016."}, {"link": "", "title": "New Node.js Foundation Survey Reports New \u2018Full Stack\u2019 In Demand Among Enterprise Developers."}, {"link": "", "title": "Chrome V8."}, {"link": "", "title": "npm repository."}, {"link": "", "title": "State of the Union: npm."}, {"link": "", "title": "Learning from Mistakes - A Comprehensive Study on Real World Concurrency Bug Characteristics"}, {"link": "", "title": "TaxDC:A Taxonomy of Non-Deterministic Concurrency Bugs in Datacenter Distributed Systems"}, {"link": "", "title": "Race Detection for Web Applications"}, {"link": "", "title": "DCatch: Automatically Detecting Distributed Concurrency Bugs in Cloud Systems"}, {"link": "", "title": "Scalable Race Detection for Android Applications"}, {"link": "", "title": "Race Detection for Event-driven Mobile Applications"}, {"link": "", "title": "Effective Race Detection for Event-Driven Programs"}, {"link": "", "title": "Automatically Verifying and Reproducing Event-Based Races in Android Apps"}, {"link": "", "title": "ARROW: Automated Repair of Races on Client-Side Web Pages"}, {"link": "", "title": "libuv."}, {"link": "", "title": "The Node.js Event Loop."}, {"link": "", "title": "Cluster."}, {"link": "", "title": "socket.io."}, {"link": "", "title": "A Study on the Most Popular Questions about Concurrent Programming"}, {"link": "", "title": "Characterizing Non-deadlock Concurrency Bug Fixes in Open-source Java Programs"}, {"link": "", "title": "gp-js-client/issue#4: document that calls are async."}, {"link": "", "title": "porybox/issue#157: when two boxes are added simultaneously, one of the IDs get lost."}, {"link": "", "title": "cordova-lib/pull#7: extract plugin. tgz files in unique directories."}, {"link": "", "title": "hapi/issue#3347: major performance issue with hapi.js 15.x."}, {"link": "", "title": "ECMAScript 6."}, {"link": "", "title": "xlsx-extract/issue#7: Exception 'write after end."}, {"link": "", "title": "sequelize/issue#1599: findOrCreate is not atomic."}, {"link": "", "title": "kue/issues#154: Race between Job.prototype.save() and done()."}, {"link": "", "title": "fiware-pep-steelskin/issue#269: Race condition causes requests that will never be responsed-new race introduced in a fixed version."}, {"link": "", "title": "browser-laptop/pull#3273: guard against race condition."}, {"link": "", "title": "five-bells-shared/issue#64: retry failed DB operations caused by concurrent updates."}, {"link": "", "title": "asset-smasher/issue#8:stop starving the event loop."}, {"link": "", "title": "change-propagation/pull#84:Fix race condition in commit logic."}, {"link": "", "title": "async."}, {"link": "", "title": "syncify."}, {"link": "", "title": "lock."}, {"link": "", "title": "mutex."}, {"link": "", "title": "js-ipfs/issue#318: Uncaught Error: no writecb in Transform class"}, {"link": "", "title": "strider/issue#745: Strider crashes on new jobs started from a Pull Request that has been rebased."}, {"link": "", "title": "session/issue#340:race condition between session.touch and session.save."}, {"link": "", "title": "fiware-pep-steelskin/issue#279: when the PEP receive two or more simultaneous requests."}, {"link": "", "title": "done-ssr/issue#62: race condition between can-serve and live-reload."}, {"link": "", "title": "Node.fz: Fuzzing the Server-Side Event-Driven Architecture"}, {"link": "", "title": "Automated Concurrency-Bug Fixing"}, {"link": "", "title": "Grail: Context-aware Fixing of Concurrency Bugs"}, {"link": "", "title": "Repairing Event Race Errors by Controlling Nondeterminism"}, {"link": "", "title": "Language Support for Lightweight Transactions"}, {"link": "", "title": "An Empirical Study of Client-side JavaScript Bugs"}, {"link": "/document/7501855", "title": "A Study of Causes and Consequences of Client-Side JavaScript Bugs"}, {"link": "", "title": "JavaScript Errors in the Wild: An Empirical Study"}, {"link": "", "title": "ProRace: Practical Data Race Detection for Production Use"}, {"link": "", "title": "AI: A Lightweight System for Tolerating Concurrency Bugs"}, {"link": "/document/6035702", "title": "Detecting Concurrency Bugs from the Perspectives of Synchronization Intentions"}, {"link": "", "title": "Eraser: A Dynamic Data Race Detector for Multithreaded Programs"}, {"link": "", "title": "Debugging Concurrent Software: Advances and Challenges"}, {"link": "", "title": "On-the-fly Detection of Access Anomalies"}, {"link": "", "title": "Automated Concolic Testing of Smartphone Apps"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "Automated Testing with Targeted Event Sequence Generation"}, {"link": "", "title": "LEAN: Simplifying Concurrency Bug Reproduction via Replay-supported Execution Reduction"}, {"link": "", "title": "Detecting Event Anomalies in Event-based Systems"}, {"link": "", "title": "Statically Locating Web Application Bugs Caused by Asynchronous Calls"}, {"link": "", "title": "Static Analysis of Event-Driven Node.js JavaScript Applications"}, {"link": "", "title": "Understanding and Automatically Preventing Injection Attacks on Node.js"}, {"link": "", "title": "Understanding Asynchronous Interactions in Full-Stack JavaScript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115663"}
{"ref": [{"link": "", "title": "Reverse-engineering user interfaces to facilitate porting ot and across mobile devices and platforms"}, {"link": "/document/6606554", "title": "Inferring likely mappings between APIs"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "", "title": "Google"}, {"link": "", "title": "Google"}, {"link": "", "title": "Map Kit Framework Reference"}, {"link": "", "title": "Bing Maps APIs"}, {"link": "/document/5961696", "title": "Reducing the delay and power consumption of web browsing on smartphones in 3G networks"}, {"link": "", "title": "Windows Phone Interoperability: Windows Phone API Mapping"}, {"link": "", "title": "UIML: An appliance-independent XML user interface language"}, {"link": "", "title": "Visual Studio 2012"}, {"link": "", "title": "AspectJ: Crosscutting Object for Better Modularity"}, {"link": "", "title": "Eclipse Downloads"}, {"link": "", "title": "Google"}, {"link": "", "title": "Windows Phone API Reference"}, {"link": "", "title": ""}, {"link": "", "title": "Windows Phone Toolkit 4.2012.10.30"}, {"link": "", "title": "Beginning PhoneGap: Mobile Web Framework for JavaScript and HTML5"}, {"link": "", "title": "Response time in man-computer conversational transactions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693119"}
{"ref": [{"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "Pex-white box test generation for .NET"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "/document/83906", "title": "Analyzing partition testing strategies"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "/document/5197434", "title": "Combinatorial software testing"}, {"link": "/document/731623", "title": "In-parameter-order: A test generation strategy for pairwise testing"}, {"link": "/document/1583600", "title": "Covering arrays for efficient fault characterization in complex configuration spaces"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Classification trees for partition testing"}, {"link": "/document/1371931", "title": "Adaptive random testing"}, {"link": "", "title": "Data clustering: A review"}, {"link": "", "title": "Symbolic execution and program testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693123"}
{"ref": [{"link": "", "title": "User involvement: a review of the benefits and challenges"}, {"link": "", "title": "A survey of user-centered design practice"}, {"link": "", "title": "Iterative Process Models for Mobile Application Systems: A Framework"}, {"link": "", "title": "User Feedback in the Appstore: an Empirical Study"}, {"link": "", "title": "AR-Miner: Mining Informative Reviews for Developers from Mobile App Marketplace"}, {"link": "", "title": "Analysis of user comments: an approach for software requirements evolution"}, {"link": "", "title": "Ensemble Methods in Machine Learning"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "How do users like this Feature? A fine grained sentiment analysis of app reviews"}, {"link": "", "title": "The content analysis guidebook"}, {"link": "/document/6473801", "title": "Patterns of Knowledge in API Reference Documentation"}, {"link": "", "title": "Machine learning in automated text categorization"}, {"link": "", "title": "Multi-label classification: An overview"}, {"link": "", "title": "An evaluation of classification algorithms using Mc Nemars test"}, {"link": "", "title": "Approximate Statistical Tests for Comparing Supervised Classification Learning Algorithms"}, {"link": "/document/6224306", "title": "App store mining and analysis: MSR for app stores"}, {"link": "", "title": "Identifying spam in the iOS app store"}, {"link": "", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "Why people hate your app. Making sense of user feedback in a mobile app store"}, {"link": "", "title": "A user satisfaction analysis approach for software evolution"}, {"link": "/document/7332474", "title": "How Can I Improve My App? Classifying User Reviews for Software Maintenance and Evolution"}, {"link": "/document/6227177", "title": "Content classification of development emails"}, {"link": "", "title": "Is it a bug or an enhancement?: a text-based approach to classify change requests"}, {"link": "", "title": "Classifying bug reports to bugs and other requests using topic modeling"}, {"link": "", "title": "Combining Text Mining and Data Mining for Bug Report Classification"}, {"link": "", "title": "Automatic classification of software related microblogs"}, {"link": "", "title": "Recommending reference API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372065"}
{"ref": [{"link": "/document/4408585", "title": "Classifying software changes: Clean or buggy?"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "Defect prediction from static code features: Current results, limitations, new approaches"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "/document/4273265", "title": "Predicting defects for eclipse"}, {"link": "/document/6224300", "title": "Think locally, act globally: Improving defect and effort prediction models"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "/document/4362653", "title": "On the prediction of the evolution of libre software projects"}, {"link": "/document/1201207", "title": "Understanding and predicting effort in software projects"}, {"link": "", "title": "Programmer-based fault prediction"}, {"link": "", "title": "Personalized Search for Everyone"}, {"link": "", "title": "The alternating decision tree learning algorithm"}, {"link": "", "title": "Multivariate adaptive regression splines"}, {"link": "", "title": "Recalling the \"imprecision\" of cross-project defect prediction"}, {"link": "/document/6606589", "title": "How, and Why, process metrics are better"}, {"link": "", "title": "Data Mining Techniques for Building Fault-proneness Models in Telecom Java Software"}, {"link": "", "title": "Correlations between bugginess and time-based commit characteristics"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "/document/6606585", "title": "It's not a bug, it's a feature: How misclassification impacts bug prediction"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Second order features for maximising text classification performance"}, {"link": "", "title": "The WEKA data mining software: An update"}, {"link": "", "title": "Snowball"}, {"link": "", "title": "Have things changed now? An empirical study of bug characteristics in modern open source software"}, {"link": "/document/5463291", "title": "A comparative exploration of FreeBSD bug lifetimes"}, {"link": "", "title": "Cross-project defect prediction: A large scale experiment on data vs. Domain vs. Process"}, {"link": "", "title": "Estimating continuous distributions in bayesian classifiers"}, {"link": "", "title": "Logistic model trees"}, {"link": "", "title": "Microarray data mining with visual programming"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "How long did it take to fix bugs?"}, {"link": "/document/1510122", "title": "The Top Ten List: Dynamic fault prediction"}, {"link": "", "title": "Cross-validation"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "/document/6606583", "title": "Does bug prediction support human developers? Findings from a google case study"}, {"link": "", "title": "Fair and balanced?: Bias in bug-fix datasets"}, {"link": "", "title": "Relink: Recovering links between bugs and changes"}, {"link": "/document/4019564", "title": "Automatic identification of bug-introducing changes"}, {"link": "", "title": "Committing with Git - PostgreSQL Wiki"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "/document/5069491", "title": "Assigning bug reports using a vocabulary-based expertise model of developers"}, {"link": "", "title": "CosTriage: A costaware triage algorithm for bug reporting systems"}, {"link": "", "title": "Improving bug triage with bug tossing graphs"}, {"link": "", "title": "Learning better inspection optimization policies"}, {"link": "/document/6226427", "title": "Reducing features to improve code change-based bug prediction"}, {"link": "", "title": "Social networks, personalized advertising, and privacy controls"}, {"link": "", "title": "An analysis of developer metrics for fault prediction"}, {"link": "", "title": "Ownership, experience and defects: A finegrained study of authorship"}, {"link": "/document/6606591", "title": "Dual ecological measures of focus in software development"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "/document/6227082", "title": "Improving ide recommendations by considering global implications of existing recommendations"}, {"link": "", "title": "Supporting reuse by delivering task-relevant and personalized information"}, {"link": "/document/5711013", "title": "Which crashes should i fix first?: Predicting top crashes at an early stage to prioritize debugging efforts"}, {"link": "", "title": "Predicting quality attributes of software product lines using software and network measures and sampling"}, {"link": "/document/6227176", "title": "Identifying Linux bug fixing patches"}, {"link": "", "title": "Can traditional fault prediction models be used for vulnerability prediction?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693087"}
{"ref": [{"link": "", "title": "Postfix Home Page"}, {"link": "", "title": "Sendmail Home Page"}, {"link": "", "title": "Vsftpd Home Page"}, {"link": "", "title": "CVE-2000-1214: Buffer Overflows in the (1) Outpack or (2) Buf Variables of Ping in Iputils before 20001010"}, {"link": "", "title": "CVE-2003-0682: Memory bugs"}, {"link": "", "title": "Multiple \"buffer management errors\""}, {"link": "", "title": "An example of software system debugging"}, {"link": "", "title": "Lpsolve: Open Source (Mixed-integer) Linear Programming System"}, {"link": "", "title": "Privtrans: Automatically partitioning programs for privilege separation"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "An improved approximation algorithm for multiway cut"}, {"link": "", "title": "Secure web application via automatic partitioning"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "The complexity of multiterminal cuts"}, {"link": "", "title": "Ptrace(2) Manual"}, {"link": "", "title": "Rounding algorithms for a geometric embedding of minimum multiway cut"}, {"link": "", "title": "Privman: A library for partitioning applications"}, {"link": "/document/57624", "title": "Automated software test data generation"}, {"link": "", "title": "Recursive sandboxes: Extending systrace to empower applications"}, {"link": "", "title": "Capability-based Computer Systems"}, {"link": "/document/1702967", "title": "Number of faults per line of code"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "/document/792498", "title": "Bunch: A clustering tool for the recovery and maintenance of software system structures"}, {"link": "", "title": "Evaluating sfi for a cisc architecture"}, {"link": "", "title": "Rocksalt: Better, faster, stronger sfi for the x86"}, {"link": "", "title": "Privilege separation made easy: Trusting small libraries not big processes"}, {"link": "", "title": "Smashing the stack for fun and profit"}, {"link": "", "title": "Preventing privilege escalation"}, {"link": "/document/1451869", "title": "The protection of information in computer systems"}, {"link": "", "title": "Efficient software-based fault isolation"}, {"link": "", "title": "A note on distributed computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693091"}
{"ref": [{"link": "", "title": "Statistical usage testing for software reliability control"}, {"link": "/document/199724", "title": "Operational profiles in software-reliability engineering"}, {"link": "", "title": "Markov analysis of software specifications"}, {"link": "/document/781111", "title": "Application of statistical science to testing and evaluating software intensive systems"}, {"link": "/document/965342", "title": "Measuring and modeling usage and reliability for statistical web testing"}, {"link": "", "title": "Statistical testing of web applications"}, {"link": "", "title": "Reliability estimation for statistical usage testing using markov chains"}, {"link": "", "title": "Combining usage-based and model-based testing for service-oriented architectures in the industrial practice"}, {"link": "", "title": "General Data Protection Regulation (Regulation (EU) 2016/679)"}, {"link": "", "title": "Fragments and loose associations: Respecting privacy in data publishing"}, {"link": "", "title": "A literature survey and classifications on data deanonymisation"}, {"link": "", "title": "Model-based simulation of legal policies: Framework, tool support, and validation"}, {"link": "", "title": "Microsimulation and policy analysis"}, {"link": "/document/7765536", "title": "Model-based simulation of legal requirements: Experience from tax policy simulation"}, {"link": "", "title": "Object Management Group"}, {"link": "", "title": "Improving the performance of OCL constraint solving with novel heuristics for logical operations: a search-based approach"}, {"link": "", "title": "Object Management Group"}, {"link": "", "title": "On challenges of model transformation from UML to Alloy"}, {"link": "", "title": "Translating between Alloy specifications and UML class diagrams annotated with OCL"}, {"link": "", "title": "On the verification of UML/OCL class diagrams using constraint programming"}, {"link": "/document/6491405", "title": "Generating test data from OCL constraints with search techniques"}, {"link": "", "title": "Executing underspecified OCL operation contracts with a SAT solver"}, {"link": "", "title": "A concise introduction to logic. Nelson Education"}, {"link": "", "title": "On converting CNF to DNF"}, {"link": "", "title": "Discretization methods for continuous probability distributions"}, {"link": "", "title": "Comprehensive survey on distance/similarity measures between probability density functions"}, {"link": "/document/8115698", "title": "Synthetic data generation for statistical testing: Supplementary material"}, {"link": "", "title": "EMF: Eclipse Modeling Framework"}, {"link": "", "title": "Apache commons mathematics library"}, {"link": "/document/5210118", "title": "A systematic review of the application and empirical investigation of search-based test case generation"}, {"link": "", "title": "Software Abstractions: logic, language, and analysis"}, {"link": "/document/7007684", "title": "Generating realistic smart grid communication topologies based on real-data"}, {"link": "", "title": "Uniform random generation of huge metamodel instances"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "A detailed investigation of the effectiveness of whole test suite generation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115698"}
{"ref": [{"link": "", "title": "PYPL popularity of programming language."}, {"link": "", "title": "Stackoverflow developer survey results 2016"}, {"link": "", "title": "TIOBE index for may 2017"}, {"link": "", "title": "Moses Specification"}, {"link": "/document/7961529", "title": "Replicating parser behavior using neural machine translation"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "", "title": "Findings of the 2011 workshop on statistical machine translation"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on android markets"}, {"link": "", "title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "/document/6606588", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? on the relation between source code and comment changes"}, {"link": "", "title": "Deep learning."}, {"link": "", "title": "Deep api learning"}, {"link": "", "title": "Semantically enhanced software traceability using deep learning techniques"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Kenlm: Faster and smaller language model queries"}, {"link": "", "title": "Scalable modified Kneser-Ney language model estimation"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Long short-term memory"}, {"link": "", "title": "Summarizing source code using a neural attention model"}, {"link": "/document/7961530", "title": "Towards automatic generation of short summaries of commits"}, {"link": "", "title": "Choosing your weapons: On sentiment analysis tools for software engineering research"}, {"link": "", "title": "A survey of documentation practice within corrective maintenance"}, {"link": "/document/1019480", "title": "Ccfinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "OpenNMT: Open-Source Toolkit for Neural Machine Translation"}, {"link": "", "title": "Factored translation models"}, {"link": "", "title": "Moses: Open source toolkit for statistical machine translation"}, {"link": "/document/957835", "title": "Identifying similar code with program dependence graphs"}, {"link": "", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}, {"link": "", "title": "Rclinker: Automated linking of issue reports and commits leveraging rich contextual information"}, {"link": "", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "", "title": "Latent predictor networks for code generation"}, {"link": "", "title": "Achieving open vocabulary neural machine translation with hybrid word-character models"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "/document/5463344", "title": "Can development work describe itself?"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "/document/7513412", "title": "ARENA: An approach for the automated generation of release notes"}, {"link": "", "title": "Summarizing software artifacts: A literature review"}, {"link": "", "title": "The challenges of sentiment detection in the social programmer ecosystem"}, {"link": "", "title": "A systematic comparison of various statistical alignment models"}, {"link": "", "title": "Bleu: A method for automatic evaluation of machine translation"}, {"link": "", "title": "A syntactic neural model for general-purpose code generation"}, {"link": "", "title": "Why did this code change?"}, {"link": "/document/6227188", "title": "How do professional developers comprehend software?"}, {"link": "", "title": "The cross-entropy method: a unified approach to combinatorial optimization, Monte-Carlo simulation and machine learning."}, {"link": "", "title": "Nematus: a toolkit for neural machine translation"}, {"link": "", "title": "Nematus: a Toolkit for Neural Machine Translation"}, {"link": "", "title": "Linguistic input features improve neural machine translation"}, {"link": "", "title": "Edinburgh neural machine translation systems for WMT 16"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Theano Development Team"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Adadelta: an adaptive learning rate method"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115626"}
{"ref": [{"link": "", "title": "cloc - counts blank lines, comment lines, and physical lines of source code in many programming languages"}, {"link": "", "title": "coq-dpdgraph"}, {"link": "", "title": "GitHub"}, {"link": "", "title": "WAD home page"}, {"link": "", "title": "Proof General: A generic tool for proof development"}, {"link": "", "title": "Pervasive parallelism in highly-trustable interactive theorem proving systems"}, {"link": "", "title": "Asynchronous processing of Coq documents: From the kernel up to the user interface"}, {"link": "", "title": "Bazel - Blog"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "", "title": "Regression test selection techniques: A survey"}, {"link": "/document/6606576", "title": "Partition-based regression verification"}, {"link": "/document/6545898", "title": "A formally-verified C compiler supporting floating-point arithmetic"}, {"link": "", "title": "Flocq: A unified library for proving floating-point algorithms in Coq"}, {"link": "", "title": "Syntax tree fingerprinting for source code similarity detection"}, {"link": "", "title": "Formalizing and verifying a modern build language"}, {"link": "", "title": "Coq manual: Utilities"}, {"link": "", "title": "CTLTCTL Git repository"}, {"link": "", "title": "A systematic review on regression test selection techniques"}, {"link": "", "title": "A sound and optimal incremental build system with dynamic dependencies"}, {"link": "", "title": "CloudBuild: Microsoft's distributed and caching build service"}, {"link": "", "title": "Coqoon: An IDE for interactive proof development in Coq"}, {"link": "", "title": "Flocq Git repository"}, {"link": "", "title": "Proof assistants: History, ideas and future"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Automated migration of build scripts using dynamic analysis and search-based refactoring"}, {"link": "", "title": "Regression verification: proving the equivalence of similar programs"}, {"link": "", "title": "Formal proof-the four-color theorem"}, {"link": "", "title": "A machine-checked proof of the odd order theorem"}, {"link": "", "title": "A formal proof of the Kepler conjecture"}, {"link": "", "title": "Extreme model checking"}, {"link": "", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "", "title": "InfSeqExt Git repository"}, {"link": "", "title": "It's Travis CI's 5th birthday, let's celebrate with numbers!"}, {"link": "", "title": "Proof engineering considered essential"}, {"link": "", "title": "seL4: Formal verification of an OS kernel"}, {"link": "", "title": "Efficient regression verification"}, {"link": "", "title": "An extensive study of static regression test selection in modern software evolution"}, {"link": "", "title": "Formal verification of a realistic compiler"}, {"link": "", "title": "Toward a verified relational database management system"}, {"link": "", "title": "The formalization of the odd order theorem has been completed"}, {"link": "", "title": "In search of an understandable consensus algorithm"}, {"link": "", "title": "Software testing: A research travelogue (2000\u20132014)"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "Inductively defined types in the Calculus of Constructions"}, {"link": "", "title": "A parallelized theorem prover for a logic with parallel execution"}, {"link": "", "title": "Chianti: A tool for change impact analysis of Java programs"}, {"link": "/document/536955", "title": "Analyzing regression test selection techniques"}, {"link": "", "title": "Universe polymorphism in Coq"}, {"link": "", "title": "Speeding up the build"}, {"link": "", "title": "StructTact Git repository"}, {"link": "", "title": "Coq manual: Asynchronous and parallel proof processing"}, {"link": "", "title": "Testing at the speed and scale of Google"}, {"link": "", "title": "Travis CI"}, {"link": "", "title": "UniMath Git repository"}, {"link": "", "title": "Verdi Git repository"}, {"link": "", "title": "An experimental library of formalized mathematics based on the univalent foundations"}, {"link": "", "title": "WeakUpTo Git repository"}, {"link": "", "title": "PIDE as front-end technology for Coq"}, {"link": "", "title": "Shared-memory multiprocessing for interactive theorem proving"}, {"link": "", "title": "Asynchronous user interaction and tool integration in Isabelle/PIDE"}, {"link": "", "title": "Interactive theorem proving from the perspective of Isabelle/Isar"}, {"link": "", "title": "Verdi: A framework for implementing and formally verifying distributed systems"}, {"link": "", "title": "Planning for change in a formal verification of the Raft consensus protocol"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115630"}
{"ref": [{"link": "", "title": "DSL Engineering - Designing, Implementing and Using Domain-Specific Languages"}, {"link": "/document/1597083", "title": "Model-driven engineering"}, {"link": "", "title": "An overview of feature-oriented software development"}, {"link": "", "title": "A Framework for Software Product Line Practice, Version 5.0"}, {"link": "/document/6613490", "title": "Variability mining: Consistent semi-automatic detection of product-line features"}, {"link": "", "title": "An exploratory study of cloning in industrial software product lines"}, {"link": "", "title": "18th International Software Product Line Conference, SPLC \u201814, Florence, Italy, September 15\u201319, 2014"}, {"link": "", "title": "Cloned product variants: From ad-hoc to well-managed software reuse"}, {"link": "", "title": "Feature-oriented domain analysis (foda) feasibility study"}, {"link": "", "title": "CVL: common variability language"}, {"link": "", "title": "Identifying and visualising commonality and variability in model variants"}, {"link": "", "title": "Meta-Object Facility (MOF) Core Specification"}, {"link": "", "title": "Detecting model inconsistency through operation-based model construction"}, {"link": "/document/6178889", "title": "Feature identification from the source code of product variants"}, {"link": "", "title": "Software product line engineering with the UML: deriving products"}, {"link": "", "title": "Component-based Product Line Engineering with UML"}, {"link": "", "title": "Cool features and tough decisions: A comparison of variability modeling approaches"}, {"link": "", "title": "Readings in Information Visualization: Using Vision to Think"}, {"link": "", "title": "Bottom-up adoption of software product lines: a generic and extensible approach"}, {"link": "", "title": "Developing model-driven software product lines"}, {"link": "/document/4626867", "title": "Reconciling automation and flexibility in product derivation"}, {"link": "", "title": "N-way model merging"}, {"link": "", "title": "CVL Tool"}, {"link": "", "title": "Extracting software product lines: A case study using conditional compilation"}, {"link": "", "title": "Capella"}, {"link": "", "title": "Verifying feature-based model templates against well-formedness OCL constraints"}, {"link": "/document/6980213", "title": "Feature relations graphs: A visualisation paradigm for feature constraints in software product lines"}, {"link": "", "title": "Object Constraint Language"}, {"link": "", "title": "The Object Constraint Language: Getting Your Models Ready for MDA"}, {"link": "", "title": "Model comparison to synthesize a model-driven software product line"}, {"link": "", "title": "Combining related products into product lines"}, {"link": "", "title": "Extending the reflexion method for consolidating software variants into product lines"}, {"link": "", "title": "Feature location for software product line migration: A mapping study"}, {"link": "", "title": "Automatic variation-point identification in function-block-based models"}, {"link": "", "title": "Featuremapper: mapping features to models"}, {"link": "", "title": "Generating Counterexamples of Model-based Software Product Lines"}, {"link": "", "title": "A survey of model comparison approaches and applications"}, {"link": "/document/5071714", "title": "Different models for model matching: An analysis of approaches to support model differencing"}, {"link": "", "title": "Splitting models using information retrieval and model crawling techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372028"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "www.apportable.com"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Mono - Cross-platform, open source. NET framework"}, {"link": "", "title": "MyAppConverter - develop once, run anywhere"}, {"link": "", "title": "Sencha: HTML5 app development"}, {"link": "", "title": "Xamarin - Mobile App Development and App Creation Software"}, {"link": "", "title": "Xamarin Bug 25895. Wrong exception is thrown when calling System.Globalization.CharUnicodelnfo.GetNumericValue with invalid index"}, {"link": "", "title": "Xamarin Bug 27901. XmlConvert.ToString returns wrong value"}, {"link": "", "title": "Xamarin Bug 27910. XmlParserContext constructor not throwing XmlException when it should"}, {"link": "", "title": "Xamarin Bug 27922. XmlConvert. ToUnit throwing wrong/inconsistent exception"}, {"link": "", "title": "Xamarin Bug 27982. Inconsistent behavior in DynamicAttribute. Equals"}, {"link": "", "title": "Xamarin Bug 28017. NameTable. Add throwing wrong/inconsistent exception"}, {"link": "", "title": "Xamarin Bug 28123. Inconsistent behavior in System.Xml.XmlReaderSettings.MaxCharacterslnDocument"}, {"link": "", "title": "Xamarin Bug 28134. System.Text.EncoderFallbackException inconsistent initial state compared to. NET (two inconsistencies assigned to this bug identifier)"}, {"link": "", "title": "Xamarin Bug 28562. Incorrect System.Numerics.Complex.Pow result"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of Android apps"}, {"link": "", "title": "IEEE/ACM International Conference on Automated Software Engineering (ASE)"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": ""}, {"link": "", "title": "Software-Practice and Experience"}, {"link": "", "title": ""}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Digital Technical Journal"}, {"link": "", "title": "Communications of the ACM (CACM)"}, {"link": "", "title": "Journal of Automated Software Engineering"}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": ""}, {"link": "", "title": "IEEE Transactions on Software Engineering (TSE)"}, {"link": "", "title": "ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), 2011"}, {"link": "", "title": ""}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "International Conference on Fundamental Approaches to Software Engineering (FASE)"}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372032"}
{"ref": [{"link": "", "title": "The CQL continuous query language: semantic foundations and query execution"}, {"link": "", "title": "Reviser: Efficiently Updating IDE-/ IFDS-Based Data-Flow Analyses in Response to Incremental Program Changes"}, {"link": "", "title": "EXDAMS: extendable debugging and monitoring"}, {"link": "", "title": "A system for algorithm animation"}, {"link": "", "title": "Example centric programming"}, {"link": "", "title": "Programming by rehearsal"}, {"link": "", "title": "Reverse debugging with the TotalView debugger"}, {"link": "", "title": "Design and implementation of sandbox technique for isolated applications"}, {"link": "", "title": "Continuous execution: the VisiProg environment"}, {"link": "", "title": "Practical and effective sandboxing for non-root users"}, {"link": "", "title": "Debugging reinvented: asking and answering why and why not questions about program behavior"}, {"link": "", "title": "A Session with Tinker: interleaving Program testing with program Writing, Proceedings 1980 LISP Conference"}, {"link": "", "title": "ZStep 95: a reversible, animated source code stepper"}, {"link": "", "title": "Making offline analyses continuous"}, {"link": "", "title": "Safe and timely dynamic updates for multi-threaded programs"}, {"link": "", "title": "The Java HotSpot server compiler"}, {"link": "", "title": "Elm, s time-traveling debugger"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Towards understanding interactive debugging"}, {"link": "/document/5287015", "title": "Back to the future: omniscient debugging"}, {"link": "", "title": "Slowpoke Productions"}, {"link": "", "title": "A categorized bibliography on incremental computation"}, {"link": "/document/1702004", "title": "PECAN: program development systems that support multiple views"}, {"link": "", "title": "Plugging in and into Code Bubbles: the Code Bubbles architecture"}, {"link": "", "title": "Code bubbles tutorial"}, {"link": "/document/1695300", "title": "ThinkPad: a graphical system for programming-by- demonstration"}, {"link": "", "title": "An experimental evaluation of continuous testing during development"}, {"link": "", "title": "Smalltalk by Example: The Developer, s Guide"}, {"link": "", "title": "An object server for an object-oriented database system"}, {"link": "", "title": "Dynamic software updates: a VM-centric approach"}, {"link": "", "title": "Program construction from examples"}, {"link": "", "title": "Low-disruptive dynamic updating of Java applications"}, {"link": "", "title": "Inventing on Principle"}, {"link": "", "title": "Does continuous visual feedback aid debugging in direct-manipulation programming systems?"}, {"link": "", "title": "Native client: a sandbox for portable, untrusted x86 native code"}, {"link": "", "title": "Incremental Data Flow Analysis in a Structure Program Editor"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115701"}
{"ref": [{"link": "/document/1000449", "title": "A State-of-the-Art Survey on Software Merging"}, {"link": "", "title": "Structure-Oriented Merging of Revisions of Software Documents"}, {"link": "", "title": "Syntactic Software Merging"}, {"link": "", "title": "JDiff: A Differencing Technique and Tool for Object-Oriented Programs"}, {"link": "", "title": "Balancing Precision and Performance in Structured Merge"}, {"link": "", "title": "Fine-grained and Accurate Source Code Differencing"}, {"link": "", "title": "Move-optimized Source Code Tree Differencing"}, {"link": "", "title": "Algo-rithmic Aspects of Tree Amalgamation"}, {"link": "", "title": "Some MAX SNP-hard Results Concerning Unordered Labeled Trees"}, {"link": "", "title": "Identifying Syntactic Differences Between Two Programs"}, {"link": "", "title": "The Hungarian Method for the Assignment Problem"}, {"link": "", "title": "Precise Version Control of Trees with Line-Based Version Control Systems"}, {"link": "", "title": "Semistructured Merge: Rethinking Merge in Revision Control Systems"}, {"link": "", "title": "Renaming Detection"}, {"link": "", "title": "A Generic Approach to Supporting Diagram Differencing and Merging for Collaborative Design"}, {"link": "", "title": "Merging Models with the Epsilon Merging Language (EML)"}, {"link": "", "title": "Difference Computation of Large Models"}, {"link": "", "title": "Operation-Based Merging"}, {"link": "", "title": "Refactoring-Aware Configuration Management for Object-Oriented Programs"}, {"link": "/document/5071721", "title": "Operation-Based Conflict Detection and Resolution"}, {"link": "", "title": "Conflict Detection for Model Versioning Based on Graph Modifications"}, {"link": "/document/4721180", "title": "Change Analysis with Evolizer and ChangeDistiller"}, {"link": "", "title": "Automated Detection of Refactorings in Evolving Components"}, {"link": "/document/4509441", "title": "Effective Software Merging in the Presence of Object-Oriented Refactorings"}, {"link": "", "title": "Software Merge: Semantics of Combining Changes to Programs"}, {"link": "/document/336770", "title": "Semantic Diff: A Tool for Summarizing the Effects of Modifications"}, {"link": "", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "", "title": "Identifying Refactorings from Source-Code Changes"}, {"link": "/document/5609577", "title": "Template-based Reconstruction of Complex Refactorings"}, {"link": "", "title": "CDDiff: Semantic Differencing for Class Diagrams"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115665"}
{"ref": [{"link": "/document/6100117", "title": "PRECIS: Inferring invariants using program path guided clustering"}, {"link": "", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Dysy: Dynamic symbolic execution for invariant inference"}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "", "title": "On the limit of control flow analysis for regression test selection"}, {"link": "/document/624306", "title": "Semantics guided regression test cost reduction"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "/document/65194", "title": "Insights into regression testing [software testing]"}, {"link": "/document/5070506", "title": "HOLMES: Effective statistical debugging via efficient path profiling"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Statistical debugging using compound boolean predicates"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "A Scalable Mixed-level Approach to Dynamic Analysis of C and C++ Programs"}, {"link": "", "title": "Valgrind: A framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "/document/296778", "title": "Experiments of the effectiveness of dataflow- and controlflow-based test adequacy criteria"}, {"link": "/document/738488", "title": "Empirical evaluation of the textual differencing regression testing technique"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693125"}
{"ref": [{"link": "", "title": "Framework documentation - a minimalist approach"}, {"link": "/document/5298759", "title": "Patterns and tools for improving framework understanding: a collaborative approach"}, {"link": "", "title": "Applications, reliability, and validity of the index of learning styles"}, {"link": "", "title": "Patterns for framework understanding"}, {"link": "", "title": "Supporting software development as knowledge community evolution"}, {"link": "", "title": "Maintaining mental models: A study of developer working habits"}, {"link": "", "title": "Collective knowledge systems: Where the social web meets the semantic web"}, {"link": "", "title": "Understanding frameworks collaboratively: Tool requirements"}, {"link": "", "title": "Patterns for effectively documenting frameworks"}, {"link": "", "title": "Design Patterns - Elements of reusable object-oriented software"}, {"link": "", "title": "Documenting frameworks using patterns"}, {"link": "", "title": "A cookbook for using the model-view-controller user interface paradigm in smalltalk-80"}, {"link": "/document/610353", "title": "Hooking into object-oriented application frameworks"}, {"link": "", "title": "Understanding frameworks by exploration of exemplars"}, {"link": "", "title": "Investigating reading techniques for object-oriented framework learning"}, {"link": "/document/1033227", "title": "Quality, productivity, and learning in framework-based development: An exploratory case study"}, {"link": "/document/1421017", "title": "Identifying and addressing problems in framework reuse"}, {"link": "", "title": "What can programmer questions tell us about frameworks?"}, {"link": "", "title": "Investigating the effects of framework design knowledge in example-based framework learning"}, {"link": "", "title": "Obstacles in using frameworks and apis: An exploratory study of programmers' news groups discussions"}, {"link": "", "title": "Eclipse mylyn open source project"}, {"link": "", "title": "Eclipse project"}, {"link": "", "title": "Mylar: a degree-of-interest model for ide's"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372067"}
{"ref": [{"link": "", "title": "Symbolic Model Checking without BDDs"}, {"link": "", "title": "Verifying multi-threaded software using SMT-based context-bounded model checking"}, {"link": "", "title": "Bounded Model Checking of Concurrent Programs"}, {"link": "", "title": "Efficient Modeling of Concurrent Systems in BMC"}, {"link": "", "title": "On Interference Abstractions"}, {"link": "", "title": "Staged Concurrent Program Analysis"}, {"link": "", "title": "Partial Orders for Efficient Bounded Model Checking of Concurrent Software"}, {"link": "", "title": "Reducing Concurrent Analysis Under a Context Bound to Sequential Analysis"}, {"link": "", "title": "Reducing Context-Bounded Concurrent Reachability to Sequential Reachability"}, {"link": "", "title": "Analyzing recursive programs using a fixed-point calculus"}, {"link": "", "title": "Context-Bounded Model Checking of Concurrent Software"}, {"link": "", "title": "Iterative Context Bounding for Systematic Testing of Multithreaded Programs"}, {"link": "", "title": "KISS: Keep It Simple and Sequential"}, {"link": "", "title": "CSeq framework"}, {"link": "", "title": "CSeq: A Sequentialization Tool for C (Competition contribution)"}, {"link": "/document/6693139", "title": "CSeq: A Concurrency Pre-processor for Sequential C Verification Tools"}, {"link": "", "title": "Bounded model checking of multi-threaded C programs via lazy sequentialization"}, {"link": "", "title": "Lazy-CSeq: A Lazy Sequentialization Tool for C - (Competition contribution)"}, {"link": "", "title": "Status report on software verification - (Competition summary SV-COMP 2014)"}, {"link": "", "title": "Software verification and verifiable witnesses - (Report on SV-COMP 2015)"}, {"link": "", "title": "Verifying concurrent programs by memory unwinding"}, {"link": "", "title": "MU-CSeq: Sequentialization of C Programs by Shared Memory Unwindings - (Competition contribution)"}, {"link": "", "title": "MU-CSeq 0.3: Sequentialization by Read-Implicit and Coarse-Grained Memory Unwindings - (Competition contribution)"}, {"link": "", "title": "Unbounded Lazy-CSeq: A lazy sequentialization tool for C programs with unbounded context switches - (Competition contribution)"}, {"link": "", "title": "\n            Dms\n            "}, {"link": "", "title": "The specification of source-to-source transformations for the compile-time optimization of parallel object-oriented scientific applications"}, {"link": "", "title": "BLITZ: Compositional Bounded Model Checking for Real-world Programs"}, {"link": "", "title": "A Tool for Checking ANSI-C Programs"}, {"link": "", "title": "The Bounded Model Checker LLBMC"}, {"link": "", "title": "Cpachecker: A tool for configurable software verification"}, {"link": "", "title": "SATABS: sat-based predicate abstraction for ANSI-C"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Delay-bounded Scheduling"}, {"link": "", "title": "Model-Checking Parameterized Concurrent Programs using Linear Interfaces"}, {"link": "", "title": "On Sequentializing Concurrent Programs"}, {"link": "", "title": "Sequentializing Parameterized Programs"}, {"link": "", "title": "Context-bounded analysis for concurrent programs with dynamic creation of threads"}, {"link": "", "title": "Poirot - A Concurrency Sleuth"}, {"link": "", "title": "Time-bounded Analysis of Realtime Systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372071"}
{"ref": [{"link": "/document/6311410", "title": "Software architecture optimization methods: A systematic literature review"}, {"link": "", "title": "An overview of feature-oriented software development"}, {"link": "", "title": "Automated analyses of feature models: Challenges ahead"}, {"link": "", "title": "Statistical Learning from A Regression Perspective"}, {"link": "", "title": "Classication and Regression Trees"}, {"link": "", "title": "Performance prediction of component-based applications"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Generative Programming: Methods, Tools, and Applications."}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "/document/5719590", "title": "Facilitating performance predictions using software components"}, {"link": "", "title": "The Elements of Statistical Learning: Data Mining, Inference, and Prediction"}, {"link": "/document/6606585", "title": "It's not a bug, it's a feature: How misclassification impacts bug prediction"}, {"link": "", "title": "Feature- oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "Visualization and exploration of optimal variants in product line engineering"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles, and Techniques"}, {"link": "", "title": "Automatic derivation of utility functions for monitoring software requirements"}, {"link": "/document/6606595", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature- interaction detection"}, {"link": "", "title": "Scalable prediction of non-functional properties in software product lines: Footprint and memory consumption"}, {"link": "", "title": "SPL conqueror: Toward optimization of non-functional properties in software product lines"}, {"link": "/document/5693190", "title": "Approaching non-functional properties of software product lines: Learning from products"}, {"link": "/document/6030049", "title": "Automatic derivation of a product performance model from a software product line model"}, {"link": "", "title": "Practical performance models for complex, popular applications"}, {"link": "", "title": "Automated inference of goal-oriented performance prediction functions"}, {"link": "", "title": "Data Mining with Rattle and R: The Art of Excavating Data for Knowledge Discovery"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693089"}
{"ref": [{"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "", "title": "Information retrieval applications in software maintenance and evolution"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "The anatomy of a large-scale hypertextual web search engine"}, {"link": "/document/1663532", "title": "No silver bullet essence and accidents of software engineering"}, {"link": "/document/6385108", "title": "Using bug report similarity to enhance bug localisation"}, {"link": "", "title": "Regularizing query-based retrieval scores"}, {"link": "/document/5970159", "title": "Can better identifier splitting techniques help feature location?"}, {"link": "", "title": "Feature location in source code: A taxonomy and survey"}, {"link": "/document/5069482", "title": "Mining source code to automatically split identifiers for software analysis"}, {"link": "", "title": "A formal study of information retrieval heuristics"}, {"link": "/document/5306315", "title": "On the use of relevance feedback in ir-based concept location"}, {"link": "/document/6392117", "title": "On the use of stemming for concern location and bug localization in java"}, {"link": "", "title": "Probabilistic latent semantic indexing"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "Finding similar questions in large question and answer archives"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "Regression rank: Learning to meet the opportunity of descriptive queries"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Letor: Benchmark dataset for research on learning to rank for information retrieval"}, {"link": "", "title": "Bug localization using latent dirichlet allocation"}, {"link": "", "title": "Ausum: Approach for unsupervised bug report summarization"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "/document/1374321", "title": "An information retrieval approach to concept location in source code"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "", "title": "A language modeling approach to information retrieval"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "/document/4268239", "title": "Combining formal concept analysis with information retrieval for concept location in source code"}, {"link": "", "title": "Retrieval from software libraries for bug localization: A comparative study of generic and composite text models"}, {"link": "", "title": "MoreBugs: A new dataset for benchmarking algorithms for information retrieval from software repositories (trece-13-07)"}, {"link": "", "title": "Simple BM25 extension to multiple weighted fields"}, {"link": "", "title": "Experimentation as a way of life: Okapi at TREC"}, {"link": "", "title": "Relevance feedback in information retrieval"}, {"link": "", "title": "Term-weighting approaches in automatic text retrieval"}, {"link": "/document/131319", "title": "Semi-automatic bug localization in software maintenance"}, {"link": "", "title": "Algorithmic Program DeBugging"}, {"link": "", "title": "Modern information retrieval: A brief overview"}, {"link": "", "title": "Pivoted document length normalization"}, {"link": "/document/6224299", "title": "Incorporating version histories in information retrieval based bug localization"}, {"link": "", "title": "Indri: A language model-based search engine for complex queries"}, {"link": "", "title": "Validity concerns in software engineering research"}, {"link": "", "title": "A comparative study of utilizing topic models for information retrieval"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Notes on the lemur tfidf model (unpublished work)"}, {"link": "", "title": "Experimental evaluation of using dynamic slices for fault location"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? - More accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693093"}
{"ref": [{"link": "/document/1698785", "title": "Mica: A web-search tool for finding api components and examples"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}, {"link": "", "title": "In-ferring method specifications from natural language API descriptions"}, {"link": "", "title": "Why don't people read the manual?"}, {"link": "", "title": "A survey of documentation practice within corrective maintenance"}, {"link": "", "title": "Cdrep: Automatic repair of cryptographic misuses in android applications"}, {"link": "", "title": "Among the machines: Human-bot interaction on social Q&A websites"}, {"link": "", "title": "Disrupting developer productivity one bot at a time"}, {"link": "", "title": "Sirius: An open end-to-end voice and vision personal assistant and its implications for future warehouse scale computers"}, {"link": "", "title": "Pocketsphinx: A free, real-time continuous speech recognition system for hand-held devices"}, {"link": "", "title": "The Kaldi speech recognition toolkit"}, {"link": "", "title": "RASR-The RWTH Aachen university open source speech recognition toolkit"}, {"link": "", "title": "Semantic extensions of the Ephyra QA system for TREC 2007"}, {"link": "", "title": "Surf: Speeded up robust features"}, {"link": "/document/6473801", "title": "Patterns of knowledge in api reference documentation"}, {"link": "", "title": "Blographer: Biography questions as a restricted domain question answering task"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "/document/7000568", "title": "Extracting development tasks to navigate software documentation"}, {"link": "", "title": "Automatic coupling of answer extraction and information retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115628"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Tools and Experimental Results"}, {"link": "/document/1703390", "title": "Using mutation analysis for assessing and comparing testing coverage criteria"}, {"link": "", "title": "Coverage in interpolation-based model checking"}, {"link": "", "title": "A practical approach to coverage in model checking"}, {"link": "", "title": "Coverage metrics for formal verification"}, {"link": "/document/4401992", "title": "A coverage analysis for safety property lists"}, {"link": "", "title": "A liveness checking algorithm that counts"}, {"link": "", "title": "Compositional verification of architectural models"}, {"link": "", "title": "Formal methods for analyzing the completeness of an assertion suite against a high-level fault model"}, {"link": "", "title": "Efficient implementation of property directed reachability"}, {"link": "", "title": "Spear v2.0: Formalized past LTL specification and analysis of requirements"}, {"link": "", "title": "Efficient generation of inductive validity cores for safety properties"}, {"link": "", "title": "Efficient generation of all minimal inductive validity cores"}, {"link": "", "title": "Estimating functional coverage in bounded model checking"}, {"link": "", "title": "Scaling up the formal verification of Lustre programs with smt-based techniques"}, {"link": "", "title": "The Synchronous Dataflow Programming Language Lustre"}, {"link": "", "title": "Formal verification coverage metrics for circuit design properties"}, {"link": "", "title": "Development of security software: A high-assurance methodology"}, {"link": "", "title": "Deviation analysis via model checking"}, {"link": "", "title": "Coverage estimation for symbolic model checking"}, {"link": "", "title": "Instantiation-based invariant discovery"}, {"link": "", "title": "Have i written enough properties?-a method of comparison between specification and implementation"}, {"link": "", "title": "Sanity checks in formal verification"}, {"link": "", "title": "A theory of mutations with applications to vacuity, coverage, and fault tolerance"}, {"link": "", "title": "Interpolation and sat-based model checking"}, {"link": "", "title": "Software model checking takes off"}, {"link": "", "title": "Compositional verification of a medical device system"}, {"link": "/document/7765544", "title": "Complete traceability for requirements in satisfaction arguments"}, {"link": "", "title": "RTCA/DO-178C"}, {"link": "", "title": "Software verification and system assurance"}, {"link": "", "title": "Checking safety properties using induction and a SAT-solver"}, {"link": "", "title": "Automating DO-178C objectives with SpeAR: A case study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115632"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": ""}, {"link": "", "title": "International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)"}, {"link": "", "title": "ACM Conference on Program Language Design and Implementation (PLDI)"}, {"link": "", "title": ""}, {"link": "", "title": "Bull. Soc. vaud. Sci. nat"}, {"link": "", "title": "IEEE/ACM International Conference on. Automated Software Engineering (ASE)"}, {"link": "", "title": "International Conference on Software Engineering (ICSE)"}, {"link": "", "title": "Formal Aspects of Computing (FAC)"}, {"link": "", "title": "Industrial application of concolic testing approach: A case study on libexif by using CREST-BV and KLEE. In International Conference on Software Engineering (ICSE) Software Engineering In Practice Track, 2012"}, {"link": "", "title": "IEEE/ACM Automated Software Engineering (ASE) Experience track"}, {"link": "", "title": "IEEE International Conference on Software Testing, Verification and Validation (ICST)"}, {"link": "", "title": ""}, {"link": "", "title": "Software: Practice and Experience"}, {"link": "", "title": "ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications (OOPSLA)"}, {"link": "", "title": "ACM Conference on Program Language Design and Implementation (PLDI)"}, {"link": "", "title": "ACM Conference on Computer and Communications Security (CCS), 2009"}, {"link": "", "title": "ACM SIGPLAN Conference on Object-Oriented Programming Systems Languages and Applications (OOPSLA), 2011"}, {"link": "", "title": "European Conference on Object-Oriented Programming (ECOOP), 2014"}, {"link": "", "title": "The Java Native Interface: Programmer's Guide and Specification"}, {"link": "", "title": ""}, {"link": "", "title": "Mutation Testing for the New Century. 2001"}, {"link": "", "title": "ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications (OOPSLA)"}, {"link": "", "title": "IEEE International Conference on Software Testing, Verification and Validation (ICST)"}, {"link": "", "title": "ACM Transactions on Software Engineering and Methodology (TOSEM)"}, {"link": "", "title": "Bull. Jpn. Soc. Sci. Fish., 22(9):526\u2013530"}, {"link": "", "title": "unknown"}, {"link": "", "title": "Software Testing, Verification and Reliability (STVR)"}, {"link": "", "title": "International Conference on Software Engineering (ICSE) Software Engineering In Practice Track"}, {"link": "", "title": ""}, {"link": "", "title": "ACM Conference on Programming Language Design and Implementation (PLDI)"}, {"link": "", "title": ""}, {"link": "", "title": "Robusta: taming the native beast of the JVM. In ACM Conference on Computer and Communications Security (CCS), 2010"}, {"link": "", "title": ""}, {"link": "", "title": "ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA)"}, {"link": "", "title": ""}, {"link": "", "title": "ACM Transactions on Software Engineering and Methodology (TOSEM)"}, {"link": "", "title": "ACM Conference on Program Language Design and Implementation (PLDI)"}, {"link": "", "title": "Precise memory leak detection for Java software using container profiling"}, {"link": "", "title": ""}, {"link": "", "title": "ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372034"}
{"ref": [{"link": "", "title": "RTCA and EUROCAE"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge (SWEBOK(R)): Version 3.0"}, {"link": "", "title": "Traceability maintenance: Factors and guidelines"}, {"link": "", "title": "Semantics of trace relations in requirements models for consistency checking and inferencing"}, {"link": "", "title": "Hermit: A highly-efficient owl reasoner"}, {"link": "", "title": "Software Abstractions: Logic, Language, and Analysis."}, {"link": "", "title": "A constraint solver for software engineering: Finding models and cores of large relational specifications"}, {"link": "", "title": "Mapping natural language to description logic"}, {"link": "", "title": "KAON - towards a large scale Semantic Web"}, {"link": "", "title": "OWL web ontology language overview"}, {"link": "", "title": "Semantic construction in feature-based TAG"}, {"link": "", "title": "Tarski: A platform for automated analysis of dynamically configurable traceability semantics"}, {"link": "", "title": "A tool for automated reasoning about traces based on configurable formal semantics"}, {"link": "", "title": "Kodkod: A relational model finder"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "An extensible sat-solver"}, {"link": "", "title": "Relational reasoning via smt solving"}, {"link": "", "title": "The smt-lib standard: Version 2.0"}, {"link": "", "title": "Verbalizing OWL in Attempto Controlled English"}, {"link": "", "title": "User-friendly ontology authoring using a controlled language"}, {"link": "", "title": "Querying ontologies: A controlled english interface for end-users"}, {"link": "", "title": "Ontology learning from text: methods, evaluation and applications."}, {"link": "", "title": "Automatic Extraction of Semantic Relationships for Wordnet by Means of Pattern Learning from Wikipedia"}, {"link": "", "title": "Acquisition of OWL DL axioms from lexical resources"}, {"link": "", "title": "Operational semantics for traceability"}, {"link": "", "title": "Supporting software understanding with automated requirements traceability"}, {"link": "/document/1178051", "title": "A scenario-driven approach to trace dependency analysis"}, {"link": "/document/1232285", "title": "Event-based traceability for managing evolutionary change"}, {"link": "", "title": "Formalizing traceability relations for product lines"}, {"link": "", "title": "Generation and validation of traces between requirements and architecture based on formal trace semantics"}, {"link": "", "title": "Engineering a dsl for software traceability"}, {"link": "", "title": "ModelWriter: Text & model synchronized document engineering platform"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115703"}
{"ref": [{"link": "", "title": "StackOverflow"}, {"link": "", "title": "JavaScript errors in the wild: an empirical study"}, {"link": "/document/7501855", "title": "A study of causes and consequences of client-side JavaScript bugs"}, {"link": "", "title": "The eval that men do: A large-scale study of the use of eval in JavaScript applications"}, {"link": "/document/4539539", "title": "State-based testing of Ajax web applications"}, {"link": "", "title": "Invariant-based automatic testing of Ajax user interfaces"}, {"link": "", "title": "DoDOM: leveraging DOM invariants for web 2.0 application robustness testing"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "/document/6960094", "title": "Guided mutation testing for JavaScript web applications"}, {"link": "", "title": "JSLint"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "Modeling the HTML DOM and browser API in static analysis of JavaScript web applications"}, {"link": "", "title": "Detecting inconsistencies in JavaScript MVC applications"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "/document/6648192", "title": "JSNose: Detecting JavaScript code smells"}, {"link": "", "title": "Top JavaScript MVC frameworks"}, {"link": "", "title": "Beaker"}, {"link": "", "title": "MarionetteJS"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "", "title": "Fast algorithms for mining association rules in large databases"}, {"link": "", "title": "Brackets"}, {"link": "", "title": "Esprima"}, {"link": "", "title": "jindw"}, {"link": "", "title": "apriori.js"}, {"link": "", "title": "AngularJS vs. BackboneJS vs. EmberJS"}, {"link": "", "title": "Google"}, {"link": "", "title": "BackboneJS: Tutorials, blog posts and example sites"}, {"link": "", "title": "EmberSherpa"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Evaluating static analysis defect warnings on production software"}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "", "title": "PR-Miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "/document/1610609", "title": "CP-Miner: Finding copy-paste and related bugs in large-scale software code"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "", "title": "Using web corpus statistics for program analysis"}, {"link": "", "title": "Alattin: Mining alternative patterns for detecting neglected conditions"}, {"link": "", "title": "Learning from 6,000 projects: lightweight cross-project anomaly detection"}, {"link": "", "title": "Detection of embedded code smells in dynamic web applications"}, {"link": "/document/4493342", "title": "Jdeodorant: Identification and removal of type-checking bad smells"}, {"link": "/document/1173068", "title": "Java quality assurance by detecting code smells"}, {"link": "", "title": "Synopsys"}, {"link": "/document/4362616", "title": "Finding unusual code"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "DLint: Dynamically checking bad coding practices in JavaScript"}, {"link": "", "title": "Facebook"}, {"link": "", "title": "TypeDevil: Dynamic type inconsistency analysis for JavaScript"}, {"link": "/document/6693098", "title": "Dangling references in multi-configuration and dynamic PHP-based web applications"}, {"link": "/document/6498486", "title": "Detecting cross-language dependencies generically"}, {"link": "", "title": "Taming the confusion of languages"}, {"link": "", "title": "Cross-language code analysis and refactoring"}, {"link": "/document/4026870", "title": "Cross-language program analysis and refactoring"}, {"link": "", "title": "Cross-language program slicing for dynamic web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115667"}
{"ref": [{"link": "", "title": "A survey of symbolic execution techniques"}, {"link": "", "title": "Precise pointer reasoning for dynamic test generation"}, {"link": "", "title": "Unleashing Mayhem on binary code"}, {"link": "", "title": "Enhancing symbolic execution with veritesting"}, {"link": "/document/7546500", "title": "SOK: (state of) the art of war: Offensive techniques in binary analysis"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "EXE: Automatically generating inputs of death"}, {"link": "", "title": "Analyzing Memory Accesses in x86 Executables"}, {"link": "", "title": "Symbolic Memory with Pointers"}, {"link": "", "title": "Specification of concretization and symbolization policies in symbolic execution"}, {"link": "", "title": "Symbolic execution with mixed concrete-symbolic solving"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115671"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Google Code Search"}, {"link": "", "title": "Mining api patterns as partial orders from source code: From usage scenarios to specifications"}, {"link": "", "title": "Sourcerer: A search engine for open source code supporting structure-based search"}, {"link": "", "title": "Relational topic models for document networks"}, {"link": "/document/6227187", "title": "Asking and answering questions about unfamiliar apis: An exploratory study"}, {"link": "/document/4527257", "title": "Do crosscutting concerns cause defects?"}, {"link": "/document/5635297", "title": "Using association metrics to help users navigate api documentation"}, {"link": "/document/5609687", "title": "Using relational topic models to capture coupling among classes in object-oriented software systems"}, {"link": "", "title": "Pragmatic Software Reuse"}, {"link": "", "title": "Strathcona example recommendation tool"}, {"link": "", "title": "Six learning barriers in end-user programming systems"}, {"link": "", "title": "Portfolio: A search engine for finding functions and their usages"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usage"}, {"link": "/document/210605", "title": "Status report: Software reusability"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "/document/5287006", "title": "What makes apis hard to learn? Answers from developers"}, {"link": "/document/1240310", "title": "Automatically inferring concern code from program investigation activities"}, {"link": "/document/792636", "title": "Browsing and searching software architectures"}, {"link": "/document/1510128", "title": "Navtracks: Supporting navigation in software maintenance"}, {"link": "/document/1698785", "title": "A web-search tool for finding api components and examples"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}, {"link": "/document/6227138", "title": "Temporal analysis of api usage concepts"}, {"link": "", "title": "Mapo: Mining api usages from open source repositories"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}, {"link": "", "title": "What makes apis difficult to use?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693127"}
{"ref": [{"link": "/document/6191", "title": "Understanding and controlling software costs"}, {"link": "/document/948567", "title": "Goal-oriented requirements engineering: A guided tour"}, {"link": "", "title": "Using Z: Specification, Refinement, and Proof"}, {"link": "", "title": "Four dark corners of requirements engineering"}, {"link": "/document/4460894", "title": "A lightweight technique for assessing risks in requirements analysis"}, {"link": "/document/4685655", "title": "A core ontology for requirements"}, {"link": "", "title": "The uses of argument"}, {"link": "", "title": "An Introduction to Bayesian Networks"}, {"link": "", "title": "Requirements and Specification Exemplars"}, {"link": "", "title": "Requirements Engineering: From System Goals to UML Models to Software Specifications"}, {"link": "", "title": "Introduction to Reasoning"}, {"link": "", "title": "The em algorithm for graphical association models with missing data"}, {"link": "", "title": "Value-based argumentation for justifying compliance"}, {"link": "/document/4359475", "title": "Security requirements engineering: A framework for representation and analysis"}, {"link": "", "title": "Arguing Safety - A Systematic Approach to Managing Safety Cases"}, {"link": "", "title": "Extending argumentation to goal-oriented requirements engineering"}, {"link": "", "title": "A method for assessing confidence in requirements analysis"}, {"link": "", "title": "Natural language processing"}, {"link": "", "title": "Natural language processing"}, {"link": "", "title": "The PASCAL recognising textual entailment challenge"}, {"link": "", "title": "Meaning and Grammar: An Introduction to Semantics"}, {"link": "", "title": "Part-of-speech tagging"}, {"link": "", "title": "Development of A Stemming Algorithm"}, {"link": "", "title": "Readings in Information Retrieval"}, {"link": "/document/4739720", "title": "Recognizing textual entailment based on WordNet"}, {"link": "", "title": "WordNet: A lexical database for english"}, {"link": "", "title": "An information-theoretic definition of similarity"}, {"link": "", "title": "NLTK: The natural language toolkit"}, {"link": "/document/6345831", "title": "The RE-tools: A multi-notational requirements modeling toolkit"}, {"link": "/document/4797436", "title": "Generating requirements analysis models from textual requirements"}, {"link": "", "title": "EA-Miner"}, {"link": "", "title": "Tracing software requirements artifacts"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693131"}
{"ref": [{"link": "", "title": "Revisiting prior empirical findings for mobile apps: An empirical case study on the 15 most popular open-source android apps"}, {"link": "", "title": "Api change and fault proneness: A threat to the success of android apps"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Towards an intelligent code search engine"}, {"link": "", "title": "Android studio"}, {"link": "/document/1165342", "title": "An introduction to hidden markov models"}, {"link": "", "title": "Learning api usages from bytecode: A statistical approach"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "/document/6227136", "title": "Automatic parameter recommendation for practical api usage"}, {"link": "/document/6227133", "title": "Active code completion"}, {"link": "", "title": "How program history can improve code completion"}, {"link": "", "title": "An evaluation of the strategies of sorting, filtering, and grouping api methods for code completion"}, {"link": "", "title": "Automatic method completion"}, {"link": "", "title": "Recommending source code examples via api call usages and documentation"}, {"link": "", "title": "Live api documentation"}, {"link": "/document/1553554", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}, {"link": "", "title": "codota"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372069"}
{"ref": [{"link": "", "title": "C++ to Java Converter"}, {"link": "", "title": "Crystal A Static Analysis Framework for Education and Research"}, {"link": "/document/1541846", "title": "Cloning by accident: An empirical study of source code cloning across software systems"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "/document/4339230", "title": "Change distilling- tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Scalable and systematic detection of buggy inconsistencies in source code"}, {"link": "", "title": "Cren: A tool for tracking copy-and-paste code clones and renaming identifiers consistently in the ide"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "/document/5070547", "title": "Do code clones matter?"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/1334896", "title": "An ethnographic study of copy and paste programming practices in OOPL"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "Semantics-preserving procedure extraction"}, {"link": "", "title": "Cp-miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "/document/6606596", "title": "Lase: Locating and applying systematic edits by learning from examples"}, {"link": "", "title": "A case study of cross-system porting in forked projects"}, {"link": "", "title": "Repertoire: A cross-system porting analysis tool for forked software projects"}, {"link": "/document/1672564", "title": "A contextual postprocessing system for error correction using binary n-grams"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "Program slicing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693095"}
{"ref": [{"link": "/document/6951474", "title": "Using declarative specification to improve the understanding, extensibility, and comparison of model-inference algorithms"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariant-constrained models"}, {"link": "/document/5009015", "title": "On the synthesis of finite-state machines from samples of their behavior"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": ""}, {"link": "", "title": "Mining quantified temporal rules: Formalism, algorithms, and evaluation"}, {"link": "", "title": "Mining quantified temporal rules: Formalism, algorithms, and evaluation"}, {"link": "", "title": "Smartie: towards building an accurate, robust and scalable specification miner"}, {"link": "/document/5639021", "title": "Automated abstractions for contract validation"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "/document/6693102", "title": "Mining branching-time scenarios"}, {"link": "/document/588521", "title": "The Model Checker SPIN"}, {"link": "", "title": "Why are formal methods not used more widely?"}, {"link": "", "title": "Automatic mining of specifications from invocation traces and method invariants"}, {"link": "", "title": "Beyond support and confidence: Exploring interestingness measures for rule-based specification mining"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "/document/7371998", "title": "General LTL Specification Mining"}, {"link": "", "title": "Classification of software behaviors for failure detection: a discriminative pattern mining approach"}, {"link": "/document/4023976", "title": "QUARK: empirical assessment of automaton-based specification miners"}, {"link": "", "title": "Mining temporal rules for software maintenance"}, {"link": "", "title": "Scenario-based and Value-based Specification Mining: Better Together"}, {"link": "", "title": "Automatic steering of behavioral model inference"}, {"link": "", "title": "Learning extended FSA from software: An empirical assessment"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "/document/4700316", "title": "Automated identification of failure causes in system logs"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "", "title": "A formal specification-based integration testing approach"}, {"link": "", "title": "dk.brics.automaton - Finite-state automata and regular expressions for Java"}, {"link": "", "title": "Behavioral resource-aware model inference"}, {"link": "", "title": "The temporal logic of programs"}, {"link": "/document/5609576", "title": "A framework for the evaluation of specification miners based on finite state machines"}, {"link": "", "title": ""}, {"link": "", "title": "Inferring finite-state models with temporal constraints"}, {"link": "/document/6671305", "title": "Inferring extended finite state machine models from software executions"}, {"link": "", "title": "Perracotta: mining temporal API rules from imperfect traces"}, {"link": "", "title": "Detecting API documentation errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372001"}
{"ref": [{"link": "/document/1253196", "title": "LLVA: A Low-level Virtual Instruction Set Architecture"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "", "title": "On software verification for sensor nodes"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "The ASTRE\u00c9 analyzer"}, {"link": "", "title": "Verification of parameterized concurrent programs by modular reasoning about data and control"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Conc-iSE: Incremental symbolic execution of concurrent software"}, {"link": "", "title": "Assertion guided symbolic execution of multithreaded programs"}, {"link": "", "title": "Symbolic execution of programmable logic controller code"}, {"link": "", "title": "An effective method to control interrupt handler for data race detection"}, {"link": "", "title": "muZ - an efficient engine for fixed points with constraints"}, {"link": "", "title": "The intAbs tool and benchmark programs for evaluating intAbs"}, {"link": "", "title": "Model checking C program using F-Soft"}, {"link": "", "title": "Apron: A library of numerical abstract domains for static analysis"}, {"link": "", "title": "Timing analysis of interrupt-driven programs under context bounds"}, {"link": "", "title": "Effective verification of low-level software with nested interrupts"}, {"link": "", "title": "Flow-sensitive composition of thread-modular abstract interpretation"}, {"link": "", "title": "Thread-modular static analysis for relaxed memory models"}, {"link": "", "title": "Dzintars Avots, Michael Carbin, and Christopher Unkel. Context-sensitive program analysis as database queries"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": "Finding security vulnerabilities in Java applications with static analysis"}, {"link": "", "title": "Static analysis of run-time errors in embedded critical parallel C programs"}, {"link": "", "title": "Static analysis by abstract interpretation of sequential and multi-thread programs"}, {"link": "", "title": "Static analysis of run-time errors in embedded real-time parallel C programs"}, {"link": "", "title": "Relational thread-modular static value analysis by abstract interpretation"}, {"link": "", "title": "Static analysis of embedded real-time concurrent software with dynamic priorities"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "Random testing of interrupt-driven software"}, {"link": "", "title": "Interrupt verification via thread verification"}, {"link": "", "title": "Eliminating stack overflow by abstract interpretation"}, {"link": "", "title": "Reduction of interrupt handler executions for model checking embedded software"}, {"link": "", "title": "Static analysis of interrupt-driven programs synchronized via the priority ceiling protocol"}, {"link": "", "title": "Static DOM event dependency analysis for testing web applications"}, {"link": "", "title": "Formal verification of software for the Contiki operating system considering interrupts"}, {"link": "", "title": "Precisely deciding control state reachability in concurrent traces with limited observability"}, {"link": "", "title": "Disjunctive image computation for emebedded software verification"}, {"link": "", "title": "Detecting data races in interrupt-driven programs based on static analysis and dynamic simulation"}, {"link": "", "title": "Automatic detection and validation of race conditions in interrupt-driven embedded software"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "", "title": "Static analysis of runtime errors in interrupt-driven programs via sequentialization"}, {"link": "", "title": "Data race detection for interrupt-driven programs via bounded model checking"}, {"link": "", "title": "Mixed symbolic representations for model checking software programs"}, {"link": "", "title": "Dynamic partial order reduction for relaxed memory models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115634"}
{"ref": [{"link": "", "title": "Introducing jsfunfuzz"}, {"link": "", "title": "Fuzzing with code fragments"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "The formulae-as-types notion of construction"}, {"link": "", "title": "Constraint logic programming"}, {"link": "", "title": "Constraint logic programming: A survey"}, {"link": "", "title": "SWI-Prolog"}, {"link": "", "title": "The gnu prolog system and its implementation"}, {"link": "", "title": "The Craft of Prolog"}, {"link": "", "title": "The rust language website"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Announcing cross_fuzz: a potential 0-day in circulation, and more"}, {"link": "", "title": "Jesse's fuzzer for arithmetic correctness in tracemonkey"}, {"link": "", "title": "Experience report: applying random testing to a base type environment"}, {"link": "", "title": "Test generation through programming in udita"}, {"link": "", "title": "Eclat: Automatic generation and classification of test inputs"}, {"link": "", "title": "Jcrasher: An automatic robustness tester for java"}, {"link": "", "title": "Making random judgements: Automatically generating well-typed terms from the definition of a type-system"}, {"link": "", "title": "Run your research: On the effectiveness of lightweight mechanization"}, {"link": "", "title": "Programming by sketching for bit-streaming programs"}, {"link": "", "title": "Synthesis modulo recursive functions"}, {"link": "", "title": "Simplification by cooperating decision procedures"}, {"link": "", "title": "Decision Procedures: An Algorithmic Point of View"}, {"link": "", "title": "Types and Programming Languages"}, {"link": "", "title": "Automating induction with an smt solver"}, {"link": "", "title": "Language fuzzing using constraint logic programming"}, {"link": "", "title": "Swarm testing"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Towards a theory of type structure"}, {"link": "", "title": "Prolog Manual de Reference et d\u2019 Utilisation"}, {"link": "", "title": "Prolog - the language and its implementation compared with lisp"}, {"link": "", "title": "A typed foundation for directional logic programming"}, {"link": "", "title": "The Art of Prolog (2Nd Ed.): Advanced Programming Techniques"}, {"link": "", "title": "Readings in nonmonotonic reasoning"}, {"link": "", "title": "Foundations of Logic Programming"}, {"link": "", "title": "Logic programming with strong negation"}, {"link": "", "title": "How to make ad-hoc polymorphism less ad hoc"}, {"link": "", "title": "A comparative study of language support for generic programming"}, {"link": "", "title": "Associated types with class"}, {"link": "", "title": "Rust rfc for associated types and items"}, {"link": "", "title": "Linear logic"}, {"link": "", "title": "Linear types can change the world!"}, {"link": "", "title": "Memory management with explicit regions"}, {"link": "", "title": "Typed memory management in a calculus of capabilities"}, {"link": "", "title": "Practical affine types"}, {"link": "", "title": "Rust language constraint solver"}, {"link": "", "title": "Specifying and implementing theorem provers in a higherorder logic programming language"}, {"link": "", "title": "Programming in Scala: A Comprehensive Step-by-Step Guide, 2Nd Edition"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Rfc: No unused impl parameters"}, {"link": "", "title": "Implied bounds: Rust does not always infer everything possible"}, {"link": "", "title": "New projections, lifetimes, and well-formedness rfc indicates check was previously not performed"}, {"link": "", "title": "Type bounds are conditionally enforced on impls"}, {"link": "", "title": "Bug in checker for duplicate constraints"}, {"link": "", "title": "Same trait with different input concrete parameters are considered duplicate bounds"}, {"link": "", "title": "Box and in for stdlib: Ambiguity involving box and expressions surrounded by parentheses"}, {"link": "", "title": "Coherence failed to report ambiguity ice involving lifetimes"}, {"link": "", "title": "Ice using associated type in trait bound"}, {"link": "", "title": "Rfc: Variance: The need for phantomdata"}, {"link": "", "title": "Type bounds are ignored in trait and impl function definitions"}, {"link": "", "title": "Rfc: Where clauses"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372036"}
{"ref": [{"link": "", "title": "Execution replay of multiprocessor virtual machines"}, {"link": "", "title": "LEAP: Lightweight deterministic multi-processor replay of concurrent Java programs"}, {"link": "", "title": "Chimera: Hybrid program analysis for determinism"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Sound predictive race detection in polynomial time"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "Ctrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "RecPlay: A fully integrated practical record/replay system"}, {"link": "", "title": "Octet: Capturing and controlling cross-thread dependences efficiently"}, {"link": "/document/6227130", "title": "Stride: Search-based deterministic replay in polynomial time via bounded linkage"}, {"link": "", "title": "CARE: Cache guided deterministic replay for concurrent Java programs"}, {"link": "", "title": "On the nature of progress"}, {"link": "", "title": "x86-TSO: A rigorous and usable programmer's model for x86 multiprocessors"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "A trace simplification technique for effective debugging of concurrent programs"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": "ORDER: Object centric deterministic replay for java"}, {"link": "", "title": "Ditto - deterministic execution Replayability-as-a-Service for Java VM on multiprocessors"}, {"link": "", "title": "Optimal tracing and replay for debugging shared-memory parallel programs"}, {"link": "", "title": "Fasttrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "A regulated transitive reduction (RTR) for longer memory race recording"}, {"link": "", "title": "Dynamic-sized nonblocking hash tables"}, {"link": "", "title": ""}, {"link": "", "title": "Benchmarking modern multiprocessors"}, {"link": "/document/524546", "title": "The SPLASH-2 programs: Characterization and methodological considerations"}, {"link": "", "title": ""}, {"link": "", "title": "Concurrent control with\u201creaders\u201d and \u201cwriters"}, {"link": "", "title": "Intel 64 and IA-32 Architectures Optimization Reference Manual"}, {"link": "", "title": "Drinking from both glasses: Adaptively combining pessimistic and optimistic synchronization for efficient parallel runtime support"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "Testing shared memories"}, {"link": "", "title": "PRES: probabilistic replay with execution sketching on multiprocessors"}, {"link": "", "title": "CLAP: Recording local executions to reproduce concurrency failures"}, {"link": "", "title": "Scalable deterministic replay in a parallel full-system emulator"}, {"link": "", "title": "Eliminating synchronization-related atomic operations with biased locking and bulk rebiasing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372040"}
{"ref": [{"link": "", "title": "Computer-controlled Systems (3rd Ed.), ser. Prentice Hall information and system sciences series. Upper Saddle River"}, {"link": "", "title": "PESSOA: A tool for embedded controller synthesis"}, {"link": "", "title": "Robust controller synthesis of switched systems using counterexample guided framework"}, {"link": "", "title": "Automated synthesis of an FPGA-based controller for vehicle lateral control"}, {"link": "", "title": "Linear Systems: Non-Fragile Control and Filtering."}, {"link": "", "title": "Digital Controller Implementation and Fragility: A Modern Perspective."}, {"link": "", "title": "Sound and automated synthesis of digital stabilizing controllers for continuous plants"}, {"link": "", "title": "Automated formal synthesis of digital controllers for state-space physical plants"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "SyGuS-Comp 2016: Results and analysis"}, {"link": "", "title": "Using program synthesis for program analysis"}, {"link": "", "title": "MathWorks"}, {"link": "", "title": "Verifying Digital Systems with MATLAB"}, {"link": "/document/7547378", "title": "Formal non-fragile stability verification of digital control systems with uncertainty"}, {"link": "", "title": "Verification of fixed-point digital controllers using direct and delta forms realizations"}, {"link": "", "title": "MathWorks"}, {"link": "", "title": "Interval analysis."}, {"link": "", "title": "Unbounded-time analysis of guarded LTI systems with inputs by abstract acceleration"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Design and control of an indoor micro quadrotor"}, {"link": "/document/341864", "title": "The swing up control problem for the Acrobot"}, {"link": "/document/826795", "title": "Control of neutralization processes by robust loop shaping"}, {"link": "", "title": "Singular perturbation and iterative separation of time scales"}, {"link": "", "title": "Optimal control: weakly coupled systems and applications."}, {"link": "", "title": "Feedback Control of Dynamic Systems"}, {"link": "/document/804538", "title": "Digital implementation of a magnetic suspension control system for laboratory experiments"}, {"link": "", "title": "DC-DC converter modeling and simulation using state space approach"}, {"link": "", "title": "Control tutorials for MATLAB and SIMULINK"}, {"link": "", "title": "Structured Controllers for Uncertain Systems: A Stochastic Optimization Approach, ser. Advances in Industrial Control"}, {"link": "", "title": "DSValidator: An automated counterexample reproducibility tool for digital systems (tool demonstration)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115705"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Self-stabilizing population protocols"}, {"link": "", "title": "Formalization of properties of parallel programs"}, {"link": "", "title": "Symmetric spin"}, {"link": "", "title": "A heuristic for symmetry reductions with scalarsets"}, {"link": "", "title": "Stabilizing token schemes for population protocols"}, {"link": "", "title": "Symmetry reductions in model checking"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Symmetry definitions for constraint satisfaction problems"}, {"link": "", "title": "A data symmetry reduction technique for temporal-epistemic logic"}, {"link": "", "title": "Efficiently computing static single assignment form and the control dependence graph"}, {"link": "", "title": "Faster symmetry discovery using sparsity of symmetries"}, {"link": "", "title": "Automatic symmetry detection for model checking using computational group theory"}, {"link": "", "title": "Automatic symmetry detection for promela"}, {"link": "", "title": "On the constructive orbit problem"}, {"link": "", "title": "Scheduling social golfers locally"}, {"link": "", "title": "Symmetry and model checking"}, {"link": "", "title": "Self-stabilizing leader election in networks of finite-state anonymous agents"}, {"link": "", "title": "GAP - Groups, Algorithms, and Programming"}, {"link": "", "title": "Linearization in parallel pCRL"}, {"link": "", "title": "Adding symmetry reduction to UPPAAL"}, {"link": "", "title": "Better verification through symmetry"}, {"link": "", "title": "Symmetry and partial order reduction techniques in model checking Rebeca"}, {"link": "", "title": "Efficient symmetry reduction for an actor-based model"}, {"link": "", "title": "Verification of Sequential and Concurrent Programs"}, {"link": "", "title": "Symmetry in complex networks"}, {"link": "", "title": "Communication and Concurrency"}, {"link": "", "title": "Myths about the mutual exclusion problem"}, {"link": "", "title": "Automatic detection of variable and value symmetries"}, {"link": "", "title": "SMC: A symmetry-based model checker for verification of safety and liveness properties"}, {"link": "/document/4549881", "title": "ProB gets nauty: Effective symmetry reduction for B and Z models"}, {"link": "", "title": "PAT: Towards flexible verification under fairness"}, {"link": "", "title": "Adaptive symmetry reduction"}, {"link": "", "title": "Replication and abstraction: Symmetry in automated formal verification"}, {"link": "", "title": "A lazy approach to symmetry reduction"}, {"link": "", "title": "Emergence of symmetry in complex networks"}, {"link": "", "title": "Symmetry Detection for Model Checking"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693062"}
{"ref": [{"link": "/document/1701972", "title": "The N-version approach to fault-tolerant software"}, {"link": "", "title": "Targeted program transformations for symbolic execution"}, {"link": "", "title": "Analysing the program analyser"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Execution generated test cases: How to make systems code crash itself"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "Symbolic Execution for Software Testing in Practice-Preliminary Assessment"}, {"link": "", "title": "Cross-checking oracles from intrinsic software redundancy"}, {"link": "", "title": "Unleashing Mayhem on binary code"}, {"link": "", "title": "Metamorphic testing: a new approach for generating next test cases"}, {"link": "", "title": "Selective symbolic execution"}, {"link": "", "title": "Highly reliable upgrading of components"}, {"link": "", "title": "N-variant systems: A secretless framework for security through diversity"}, {"link": "", "title": "CREST: Automatic Test Generation Tool for C"}, {"link": "", "title": "Testing static analyzers with randomly generated programs"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "The ASTOOT approach to testing object-oriented programs"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "/document/1251058", "title": "Exploiting symmetries to test programs"}, {"link": "", "title": "Varan the Unbelievable: An efficient N-version execution framework"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Path-exploration lifting: Hi-fi tests for lo-fi emulators"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Test-case reduction for C compiler bugs"}, {"link": "/document/4976382", "title": "A mutation/injection-based automatic framework for evaluating code clone detection tools"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "GNU parallel: The command-line power tool"}, {"link": "", "title": "Pex: white box test generation for. NET"}, {"link": "", "title": "Pseudo-oracles for non-testable programs"}, {"link": "", "title": "Effective dynamic detection of alias analysis errors"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115669"}
{"ref": [{"link": "", "title": "Syntax-guided synthesis"}, {"link": "", "title": "Towards a high-level machine configuration system"}, {"link": "", "title": "A novel co-evolutionary approach to automatic software bug fixing"}, {"link": "", "title": "Automating configuration troubleshooting with dynamic information flow analysis"}, {"link": "", "title": "Automatic repair of concurrency bugs"}, {"link": "", "title": "Detecting and escaping infinite loops with Jolt"}, {"link": "", "title": "Automatic recovery from runtime failures"}, {"link": "", "title": "Chef. Chef, inc."}, {"link": "", "title": "Programmatic and direct manipulation, together at last"}, {"link": "", "title": "Program transformations to fix C integers"}, {"link": "", "title": "Generating fixes from object behavior anomalies"}, {"link": "", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with SMT"}, {"link": "", "title": "Inference and enforcement of data structure consistency specifications"}, {"link": "", "title": "Juzi: A tool for repairing complex data structures"}, {"link": "", "title": "Facebook Engineering Team. More details on today's outage"}, {"link": "", "title": "\u03bcPuppet: A declarative subset of the Puppet configuration language"}, {"link": "", "title": "Google Inc. Google App Engine incident 16008"}, {"link": "", "title": "Specification-based program repair using SAT"}, {"link": "", "title": "StriSynth: synthesis for live programming"}, {"link": "", "title": "Asserting reliable convergence for configuration management scripts"}, {"link": "", "title": "Thomas S. Hatch. Salt."}, {"link": "", "title": "ConfValley: A systematic configuation validation framework for cloud services"}, {"link": "", "title": "Testing idempotence and convergence for infrastructure as code"}, {"link": "", "title": "BugFix: A learning-based tool to assist developers in fixing bugs"}, {"link": "", "title": "A metamorphic testing approach for supporting program repair without the need for a test oracle"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Repairing programs with semantic code search"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "/document/6227184", "title": "Axis: Automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Abash: Finding bugs in Bash scripts"}, {"link": "", "title": "DirectFix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "SemFix: Program repair via semantic analysis"}, {"link": "/document/5685268", "title": "Flight of the FINCH through the Java wilderness"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Puppet"}, {"link": "", "title": "Efficient automated program repair through fault-recorded testing prioritization"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Inc. Ansible."}, {"link": "", "title": "Probabilistic automated language learning for configuration files"}, {"link": "", "title": "Rehearsal: A configuration verification tool for Puppet"}, {"link": "/document/1556535", "title": "Countering network worms through automatic patch generation"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "Autobash: Improving configuration management with operating system causality analysis"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "The Wall Street Journal. NYSE says Wednesday outage caused by software update"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "New DevOps trends: 2017 state of the cloud survey"}, {"link": "", "title": "Chef appoints companys first chief marketing officer to drive continued growth"}, {"link": "", "title": "Multiobjective coevolutionary automated software correction"}, {"link": "", "title": "Early detection of configuration errors to reduce failure damage"}, {"link": "", "title": "Which configuration option should I change?"}, {"link": "", "title": "Z3-str: A Z3-based string solver for web application analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115673"}
{"ref": [{"link": "", "title": "Windows Driver Development"}, {"link": "", "title": "Quantified event automata: Towards expressive and efficient runtime monitors"}, {"link": "", "title": "Tracecontract: A Scala DSL for trace analysis"}, {"link": "/document/870435", "title": "Quickly detecting relevant program invariants"}, {"link": "", "title": "A tutorial on runtime verification"}, {"link": "", "title": "Javert: Fully automatic mining of general temporal properties from dynamic traces"}, {"link": "", "title": "Symbolic mining of temporal specifications"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "", "title": "Mining software specifications: Methodologies and applications"}, {"link": "", "title": "Scenario-based and value-based specification mining: Better together"}, {"link": "", "title": "Learning extended fsa from software: An empirical assessment"}, {"link": "", "title": "Mining quantified temporal rules: Formalism, algorithms, and evaluation"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "/document/4700316", "title": "Automated identification of failure causes in system logs"}, {"link": "", "title": "Mining finitestate automata with annotations"}, {"link": "/document/6693129", "title": "A Pattern-based Approach to Parametric Specification Mining"}, {"link": "/document/6311409", "title": "Automated API property inference techniques"}, {"link": "", "title": "Perracotta: Mining temporal API rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693129"}
{"ref": [{"link": "", "title": "Acceleo Model-to-Text Transformation"}, {"link": "", "title": "Novel techniques for model-code synchronization"}, {"link": "", "title": ""}, {"link": "", "title": "Evolution control in MDE projects: Controlling model and code co-evolution"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "HAMPI: A solver for word equations over strings, regular expressions, and context-free grammars"}, {"link": "", "title": ""}, {"link": "/document/6112738", "title": "How we refactor, and how we know it"}, {"link": "", "title": "Meta Object Facility (MOF) 2.0 Query/View/Transformation Specification Version 1.1"}, {"link": "", "title": "From public to private to absent: Refactoring Java programs under constrained accessibility"}, {"link": "", "title": "A refactoring constraint language and its application to Eiffel"}, {"link": "", "title": "Contraint-based model refactoring"}, {"link": "", "title": "Constraint-based refactoring with foresight"}, {"link": "", "title": "Refactorings without names"}, {"link": "", "title": "Refactoring UML models"}, {"link": "", "title": "Refactoring for generalization using type constraints"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "", "title": "Computerunterst\u00fctzte Modelltransformationen"}, {"link": "", "title": "A survey of traceability in requirements engineering and model-driven development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693133"}
{"ref": [{"link": "", "title": "MPI: A Message-Passing Interface standard, version 3.0"}, {"link": "", "title": "Institute of Electrical and Electronics Engineers, Inc., IEEE Standard for Information Technology-Portable Operating System Interface (POSIX) Base Specifications"}, {"link": "", "title": "OpenMP API Specification for Parallel Programming"}, {"link": "", "title": "CUDA Programming Guide Version 5.0"}, {"link": "", "title": "Hybrid Parallel Programming with MPI and Unified Parallel C"}, {"link": "", "title": "Hybrid CUDA, OpenMP, and MPI parallel programming on multi core GPU clusters"}, {"link": "", "title": "ABC: ANTLR-Based C front-end"}, {"link": "", "title": "CIVL: the concurrency intermediate verification language"}, {"link": "", "title": "SARL: the Symbolic Algebra and Reasoning Library"}, {"link": "", "title": "CVC3"}, {"link": "", "title": "CVC4"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Lawrence Livermore National Laboratory OpenMP tutorial"}, {"link": "", "title": "SV-COMP 2015: Competition on software verification"}, {"link": "", "title": "FEVS: A Functional Equivalence Verification Suite for high performance scientific computing"}, {"link": "", "title": "AMG 2013"}, {"link": "", "title": "The CIVL Manual"}, {"link": "", "title": "hyPACK 2013: MPI-OpenMP Programs"}, {"link": "", "title": "A Functional Equivalence Verification Suite"}, {"link": "", "title": "TASS: the Toolkit for Accurate Scientific Software"}, {"link": "", "title": "Formal analysis of MPI -based parallel programs"}, {"link": "", "title": "CSeq: A sequentialization tool for C"}, {"link": "", "title": "DiVinE 3.0 - An Explicit-State Model Checker for Multithreaded C & C++ Programs"}, {"link": "", "title": "GKLEE: Concolic verification and test generation for GPUs"}, {"link": "", "title": "Practical symbolic race checking of GPU programs"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of Java bytecode"}, {"link": "", "title": "jpf-concurrent: An extension of Java PathFinder for java.util.concurrent"}, {"link": "", "title": "A Framework for State-Space Exploration of Java-Based Actor Programs"}, {"link": "", "title": "The SpinModel Checker"}, {"link": "", "title": "FDR3 - A modern refinement checker for CSP"}, {"link": "", "title": "ThreadSanitizer: Data Race Detection in Practice"}, {"link": "", "title": "AddressSanitizer: A Fast Address Sanity Checker"}, {"link": "", "title": "Conditional equivalence"}, {"link": "", "title": "SymDiff: A language-agnostic semantic diff tool for imperative programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372075"}
{"ref": [{"link": "", "title": "Activity Lifetime"}, {"link": "", "title": "Agenda Widget"}, {"link": "", "title": "Androguard"}, {"link": "", "title": "Baidu IME"}, {"link": "", "title": "Baidu Map"}, {"link": "", "title": "Baidu Voice Assistant"}, {"link": "", "title": "Camera API"}, {"link": "", "title": "Camera Resource Hasn't Been Released Properly, Other Applications Fail to Connect to Camera"}, {"link": "", "title": "Camera Resource Is Unavailable When Another Application Hasn't Released It"}, {"link": "", "title": "ContentProviderClient API"}, {"link": "", "title": "Dalvik Opcodes"}, {"link": "", "title": "Dare"}, {"link": "", "title": "Ej-technologies GmbH. JProfiler"}, {"link": "", "title": "FindBugs"}, {"link": "", "title": "FindBugs Plugin for Android Specific Coding"}, {"link": "", "title": "Gmail Application Keeps Trying to Reload or Screen Flickering"}, {"link": "", "title": "Gmail App Hangs and Continuously Flickers between App and Homescreen"}, {"link": "", "title": "Google Email"}, {"link": "", "title": "JD-GUI"}, {"link": "", "title": "K9mail: Simplifying Wakelock"}, {"link": "", "title": "Klocwork's Capabilities for Android Device Development"}, {"link": "", "title": "Klocwork's Inspection for Android Specific Coding"}, {"link": "", "title": "MAT"}, {"link": "", "title": "MediaPlayer API"}, {"link": "", "title": "Osmdroid"}, {"link": "", "title": "Osmdroid Issue 53"}, {"link": "", "title": "ProGuard"}, {"link": "", "title": "Quest Software. JProbe"}, {"link": "", "title": "Registered Sensor Hasn't Been Released in Baidu Map"}, {"link": "", "title": "Registered Sensor Hasn't Been Released in Baidu Map"}, {"link": "", "title": "Registered Sensor Hasn't Been Released in Baidu Map"}, {"link": "", "title": "SensorManager API"}, {"link": "", "title": "Soot"}, {"link": "", "title": "WALA"}, {"link": "", "title": "Youku"}, {"link": "", "title": "Source Code Materials of \"android Mobile Application Development from Beginner to the Master\" (In Chinese)"}, {"link": "", "title": "What is keeping my phone awake? Characterizing and detecting no- sleep energy bugs in smartphone apps"}, {"link": "", "title": "Where is the energy spent inside my app? Fine grained energy accounting on smartphones with eprof"}, {"link": "", "title": "Retargeting Android applications to Java bytecode"}, {"link": "", "title": "Effective interprocedural resource leak detection"}, {"link": "", "title": "Systematic detection of capability leaks in stock android smartphones"}, {"link": "", "title": "QVM: An efficient runtime for detecting defects in deployed systems"}, {"link": "", "title": "Bell: Bit-encoding online memory leak detection"}, {"link": "", "title": "Low-overhead memory leak detection using adaptive statistical profiling"}, {"link": "", "title": "Cork. Dynamic memory leak detection for garbage-collected languages"}, {"link": "", "title": "Leakbot: An automated and lightweight tool for diagnosing memory leaks in large Java applications"}, {"link": "/document/6526708", "title": "Where has my battery gone? Finding sensor related energy black holes in smartphone applications"}, {"link": "", "title": "Memory leak and avoiding method of android application program (in Chinese)"}, {"link": "/document/6130667", "title": "Memory leak detection based on memory state transition graph"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693097"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "A metaheuristic approach to test sequence generation for applications with a GUI. In: Search Based Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Cobertura Development Team: Cobertura web site"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "GUITAR: an innovative tool for automated testing of GUI-driven software. Automated Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372003"}
{"ref": [{"link": "", "title": "Cost analysis of java bytecode"}, {"link": "", "title": "Flowdroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "/document/5207642", "title": "Automatic discovery and quantification of information leaks"}, {"link": "", "title": "Saner: Composing static and dynamic analysis to validate sanitization in web applications"}, {"link": "", "title": "String analysis for side channels with segmented oracles"}, {"link": "", "title": "System-level non-interference for constant-time cryptography"}, {"link": "", "title": "Relational verification using product programs"}, {"link": "", "title": "Secure information flow by self-composition"}, {"link": "", "title": "Multi-run security"}, {"link": "", "title": "Exposing private information by timing web applications"}, {"link": "", "title": "Remote timing attacks are practical"}, {"link": "", "title": "Compositional certified resource bounds"}, {"link": "", "title": "Relational cost analysis"}, {"link": "", "title": "Automated black-box detection of side-channel vulnerabilities in web applications"}, {"link": "", "title": "Side-channel leaks in web applications: A reality today, a challenge tomorrow"}, {"link": "", "title": "A static analysis for quantifying information flow in a simple imperative language"}, {"link": "", "title": "Static detection of second-order vulnerabilities in web applications"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "Cacheau-dit: A tool for the static analysis of cache side channels"}, {"link": "", "title": "Timing attacks on web privacy"}, {"link": "", "title": "Cross-site search attacks"}, {"link": "", "title": "Get your hands off my laptop: Physical side-channel key-extraction attacks on pcs"}, {"link": "/document/6234468", "title": "Security policies and security models"}, {"link": "", "title": "Speed: Symbolic complexity bound analysis"}, {"link": "", "title": "Speed: precise and efficient static estimation of program computational complexity"}, {"link": "", "title": "Multivariate amortized resource analysis"}, {"link": "", "title": "Towards automatic resource bound analysis for ocaml"}, {"link": "", "title": "Pixy: A static analysis tool for detecting web application vulnerabilities"}, {"link": "", "title": "Timing attacks on implementations of diffie-hellman, rsa, dss, and other systems"}, {"link": "", "title": "An information-theoretic model for adaptive side-channel attacks"}, {"link": "", "title": "Finding security vulnerabilities in java applications with static analysis"}, {"link": "", "title": "Assessing security threats of looping constructs"}, {"link": "", "title": "Finding application errors and security flaws using PQL: a program query language"}, {"link": "", "title": "Web timing attacks made practical"}, {"link": "", "title": "Jif: Java information flow"}, {"link": "", "title": "User-definable resource usage bounds analysis for java bytecode"}, {"link": "/document/7536389", "title": "Multi-run side-channel analysis using symbolic execution and max-smt"}, {"link": "", "title": "Sparse representation of implicit flows with applications to side-channel detection"}, {"link": "/document/1159651", "title": "Language-based information-flow security"}, {"link": "", "title": "Cartesian hoare logic for verifying k-safety properties"}, {"link": "", "title": "Secure information flow as a safety problem"}, {"link": "", "title": "The clock is still ticking: Timing attacks in the modern web"}, {"link": "", "title": "Request and conquer: Exposing cross-origin resource size"}, {"link": "", "title": "Static detection of cross-site scripting vulnerabilities"}, {"link": "", "title": "Sound and precise analysis of web applications for injection vulnerabilities"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "", "title": "Language-based control and mitigation of timing channels"}, {"link": "", "title": "Sidebuster: Automated detection and quantification of side-channel leaks in web application development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115636"}
{"ref": [{"link": "", "title": "AEG: Automatic Exploit Generation"}, {"link": "", "title": "Unleashing Mayhem on Binary Code"}, {"link": "", "title": "CRAX: Software Crash Analysis for Automatic Exploit Generation by Modeling Attacks as Symbolic Continuations"}, {"link": "", "title": "Automatic Generation of Data-Oriented Exploits"}, {"link": "", "title": "!exploitable Crash Analyzer"}, {"link": "", "title": "American Fuzzy Lop"}, {"link": "", "title": "SAGE: Whitebox Fuzzing for Security Testing"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs"}, {"link": "", "title": "S2E: A Platform for Invivo Multi-path Analysis of Software Systems"}, {"link": "", "title": "PaX Address Space Layout Randomization (ASLR)"}, {"link": "", "title": "Defeating Microsoft Windows XP SP2 Heap Protection and DEP bypass"}, {"link": "", "title": "Understanding Data Lifetime via Whole System Simulation"}, {"link": "", "title": "Towards Practical Taint Tracking"}, {"link": "", "title": "All You Ever Wanted to Know About Dynamic Taint Analysis and Forward Symbolic Execution (but Might Have Been Afraid to Ask)"}, {"link": "", "title": "Towards efficient heap overflow discovery"}, {"link": "", "title": "QEMU, a Fast and Portable Dynamic Translator"}, {"link": "", "title": "BitBlaze: A New Approach to Computer Security via Binary Analysis"}, {"link": "", "title": "Udis86 Disassembler Library for x86 and x86\u201364"}, {"link": "", "title": "Offensive Security Exploit Database Archive"}, {"link": "", "title": "Automatic Patch-Based Exploit Generation is Possible: Techniques and Implications"}, {"link": "", "title": "Automatic Polymorphic Exploit Generation for Software Vulnerabilities"}, {"link": "", "title": "Run-time Detection of Heap-based Overflows"}, {"link": "", "title": "A Dynamic Mechanism for Recovering from Buffer Overflow Attacks"}, {"link": "", "title": "Heap Bounds Protection with Low Fat Pointers"}, {"link": "", "title": "Body Armor for Binaries: preventing buffer overflows without recompilation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115640"}
{"ref": [{"link": "", "title": "The secret life of bugs: Going past the errors and omissions in software repositories"}, {"link": "", "title": "Is it a bug or an enhancement?: a text-based approach to classify change requests"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "A validation of object oriented design metrics as quality indicators"}, {"link": "/document/4638666", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Indexing by Latent Semantic Analysis"}, {"link": "", "title": ""}, {"link": "", "title": "Stanford dependencies manual. Technical Report"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Information Retrieval: Data Structures and Algorithms"}, {"link": "", "title": "RelEx - Relation extraction using dependency parse trees. In Bioinforrnatics"}, {"link": "", "title": "The discovery of grounded theory: Strategies of qualitative research"}, {"link": "", "title": "Communication in open source software development mailing lists"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Enriching Documents with Examples: A Corpus Mining Approach"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Evolutionary optimization of software quality modeling with multiple repositories"}, {"link": "", "title": ""}, {"link": "", "title": "Patterns of Knowledge in API Reference Documentation"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Automatic Summarization of Bug Reports"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371991"}
{"ref": [{"link": "", "title": "The grand challenge of scalability for model driven engineering"}, {"link": "", "title": "Eclipse Modeling Framework"}, {"link": "", "title": "The CDO Model Repository"}, {"link": "", "title": "Morsa: A scalable approach for persisting and accessing large models"}, {"link": "", "title": "Neo Technology: Neo4j"}, {"link": "", "title": "OpenLink Software: Open Virtuoso"}, {"link": "", "title": "Sesame: RDF API and Query Engine"}, {"link": "", "title": "Eclispe OCL Website"}, {"link": "", "title": "EMF Model Query"}, {"link": "", "title": "Automated and transparent model fragmentation for persisting large models"}, {"link": "", "title": "Incremental evaluation of model queries over EMF models"}, {"link": "", "title": "The Berlin SPARQL benchmark"}, {"link": "", "title": "SP2Bench: A SPARQL performance benchmark"}, {"link": "", "title": "Transformation Tool Contest"}, {"link": "", "title": "Resource Description Framework (RDF)"}, {"link": "", "title": "SPARQL Query Language for RDF"}, {"link": "", "title": "SPLODGE: Systematic generation of SPARQL benchmark queries for Linked Open Data"}, {"link": "", "title": "A benchmark evaluation of incremental pattern matching in graph transformation"}, {"link": "/document/1509491", "title": "Benchmarking for graph transformation"}, {"link": "/document/1509491", "title": "Benchmarking for graph transformation"}, {"link": "", "title": "On improvements of the Varro benchmark for graph transformation tools"}, {"link": "", "title": "Official Website"}, {"link": "", "title": "Official Website"}, {"link": "", "title": "AntWorld Benchmark Specification, GraBaTs 2008"}, {"link": "", "title": "Incremental consistency checking for complex design rules and larger model changes"}, {"link": "", "title": "Incremental inconsistencies detection with low memory overhead"}, {"link": "", "title": "Analyses of RDF triples in sample datasets"}, {"link": "", "title": "Adaptive graph pattern matching for model transformations using model-sensitive search plans"}, {"link": "", "title": "Cost based query ordering over OWL ontologies"}, {"link": "", "title": "Efficient subgraph matching on billion node graphs"}, {"link": "", "title": "Network biology: Understanding the cell's functional organization"}, {"link": "", "title": "Self-healing in binomial graph networks"}, {"link": "", "title": "On the evolution of random graphs"}, {"link": "", "title": "Efficient generation of large random networks"}, {"link": "", "title": "A Graph Query Language for EMF models"}, {"link": "/document/1453511", "title": "Feature selection based on mutual information: Criteria of Max-Dependency, Max-Relevance, and Min-Redundancy"}, {"link": "", "title": "Induction of decision trees"}, {"link": "", "title": "Multivariate adaptive regression splines"}, {"link": "", "title": "The goal question metric approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693100"}
{"ref": [{"link": "", "title": "CodeHint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Tidier: An identifier splitting approach using speech recognition techniques"}, {"link": "", "title": "Part-of-speech tagging of program identifiers for improved text-based software engineering tools"}, {"link": "", "title": "Complete completion using types and weights"}, {"link": "", "title": "Automatic generation of object-oriented code from DEVS graphical specifications"}, {"link": "", "title": "Code completion from abbreviated input"}, {"link": "", "title": "An empirical study of identifier splitting techniques"}, {"link": "", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usage"}, {"link": "/document/1251033", "title": "Requirements by contracts allow automated system testing"}, {"link": "", "title": "Generating tests from uml specifications"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/6100059", "title": "Scaling up automated test generation: Automatically generating maintainable regression unit tests for programs"}, {"link": "", "title": "A practical approach to validating and testing software systems using scenarios"}, {"link": "", "title": "How well do search engines support code retrieval on the web?"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Making sense of online code snippets"}, {"link": "", "title": "Requirement-based automated black-box test generation"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372038"}
{"ref": [{"link": "", "title": "100 JavaScript online games"}, {"link": "", "title": "List of languages that compile to JS"}, {"link": "", "title": "Node OS"}, {"link": "", "title": "Runtime.JS"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "A cost-effective estimation of uncaught exceptions in Standard ML programs"}, {"link": "", "title": "Type-based analysis of uncaught exceptions"}, {"link": "", "title": "Design and implementation of sparse global analyses for C-like languages"}, {"link": "", "title": "A sparse evaluation technique for detailed semantic analyses"}, {"link": "", "title": "Global sparse analysis framework"}, {"link": "", "title": "SAFE: JavaScript analysis framework"}, {"link": "", "title": ""}, {"link": "", "title": "TAJS: Type analyzer for JavaScript"}, {"link": "", "title": "Sparse dataflow analysis with pointers and reachability"}, {"link": "", "title": "IBM Research, \u201cT.J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "Correlation tracking for points-to analysis of JavaScript"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "Efficient construction of approximate call graphs for JavaScript IDE services"}, {"link": "", "title": "IBM Security AppScan"}, {"link": "", "title": "In defense of soundiness: A manifesto"}, {"link": "", "title": "Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Systematic design of program analysis frameworks"}, {"link": "", "title": "Implementation of practically tunable static analysis framework for large-scale JavaScript applications"}, {"link": "", "title": "Mixin-based inheritance"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}, {"link": "", "title": "Scalable and precise static analysis of JavaScript applications via loop-sensitivity"}, {"link": "", "title": "Practical blended taint analysis for JavaScript"}, {"link": "", "title": "Incremental computation of static single assignment form"}, {"link": "", "title": "Making context-sensitive points-to analysis with heap cloning practical for the real world"}, {"link": "", "title": "Development nature matters: An empirical study of code clones in javascript applications"}, {"link": "", "title": "Checking correctness of TypeScript interfaces for JavaScript libraries"}, {"link": "", "title": "Remedying the eval that men do"}, {"link": "", "title": "Modeling the HTML DOM and browser API in static analysis of JavaScript web applications"}, {"link": "", "title": "JSAI: A static analysis platform for JavaScript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372042"}
{"ref": [{"link": "", "title": "On the security of RC4 in TLS"}, {"link": "", "title": "Towards secure integration of cryptographic software"}, {"link": "", "title": "Clafer: unifying class and feature modeling"}, {"link": "", "title": "TS4J: a fluent interface for defining and computing typestate analyses"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "", "title": "Evaluation of cryptography usage in android applications"}, {"link": "", "title": "ABY - a framework for efficient mixed-protocol secure two-party computation"}, {"link": "", "title": "The Transport Layer Security (TLS) Protocol Version 1.2. RFC 5246 (Proposed Standard)"}, {"link": "", "title": "An empirical study of cryptographic misuse in android applications"}, {"link": "", "title": "Why Eve and Mallory love Android: an Analysis of Android SSL (In)security"}, {"link": "", "title": "Vetting SSL usage in applications with SSLINT"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Towards an intelligent code search engine"}, {"link": "", "title": "Why does cryptographic software fail?: a case study and open problems"}, {"link": "", "title": "Choco solver - A Backend for Clafer using the Choco4 solver"}, {"link": "", "title": "Better key sizes (and attacks) for lwe-based encryption"}, {"link": "", "title": "How can I use this method?"}, {"link": "", "title": "Variability modeling of cryptographic components: Clafer experience report"}, {"link": "", "title": "Jumping through hoops: why do Java developers struggle with cryptography APIs?"}, {"link": "", "title": "Danger is my middle name: experimenting with SSL vulnerabilities in android apps"}, {"link": "", "title": "Oracle. Java Cryptography Architecture (JCA)"}, {"link": "", "title": "Oracle. Java Secure Socket Extension (JSSE) Reference Guide"}, {"link": "", "title": "Oracle. Cipher Implementations in SunJCE Provider"}, {"link": "", "title": "Saxonica. The SAXON XSLT and XQuery Processor"}, {"link": "", "title": "Modelling analysis and auto-detection of cryptographic misuse in android applications"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Optimizing java bytecode using the soot framework: Is it feasible?"}, {"link": "", "title": "MoPS: A Modular Protection Scheme for Long-Term Storage"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115707"}
{"ref": [{"link": "/document/1542069", "title": "Studying the fault-detection effectiveness of GUI test cases for rapidly evolving software"}, {"link": "", "title": "On the Relative Strengths of Model-Based and Dynamic Event Extraction-Based GUI Testing Techniques: An Empirical Study"}, {"link": "", "title": "Search-based system testing: High coverage no false alarms"}, {"link": "", "title": "Pattern Based GUI Testing Modeling Environment"}, {"link": "/document/5444885", "title": "GUI interaction testing: Incorporating event context"}, {"link": "/document/7372003", "title": "Dynamically Testing GUIs Using Ant Colony Optimization"}, {"link": "/document/6200099", "title": "AutoBlackTest: Automatic Black-Box Testing of Interactive Applications"}, {"link": "", "title": "GUITest: A Java Library for Fully Automated GUI Robustness Testing"}, {"link": "", "title": "GUITAR: an innovative tool for automated testing of GUI-driven software"}, {"link": "", "title": "Human performance regression testing"}, {"link": "", "title": "PBGT Tool: An integrated modeling and testing environment for pattern-based GUI testing"}, {"link": "/document/908959", "title": "Hierarchical GUI test case generation using automated planning"}, {"link": "", "title": "Automatically Repairing Broken Workflows for Evolving GUI Applications"}, {"link": "", "title": "Automatically generating realistic test input from web services"}, {"link": "/document/6200106", "title": "Search-Based Test Input Generation for String Data Types Using the Results of Web Queries"}, {"link": "", "title": "Link: Exploiting the Web of Data to Generate Test Inputs"}, {"link": "", "title": "EventFlowSlicer: Goal based test generation for graphical user interfaces"}, {"link": "", "title": "EventFlowSlicer, a goal-based test case generation strategy for graphical user interfaces"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "", "title": "Highlight comments background in Jedit"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115711"}
{"ref": [{"link": "", "title": "JPredictor: A predictive runtime analysis tool for Java"}, {"link": "", "title": "Meta-analysis for atomicity violations under nested locking"}, {"link": "", "title": "Symbolic predictive analysis for concurrent programs"}, {"link": "", "title": "Universal causality graph: A precise happens- before model for detecting bugs in concurrent programs"}, {"link": "", "title": "PENELOPE: Weaving threads to expose atomicity violations"}, {"link": "", "title": "CONTESSA: CONcurrency TESting augmented with symbolic analysis"}, {"link": "/document/6100045", "title": "Scalable and precise symbolic analysis for atomicity violations"}, {"link": "", "title": "Sound predictive race detection in polynomial time"}, {"link": "", "title": "Predicting null-pointer dereferences in concurrent programs"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "Hybrid dynamic data race detection"}, {"link": "", "title": "A theory of data race detection"}, {"link": "", "title": "MultiRace: Efficient on-the-fly data race detection in multithreaded C++ programs"}, {"link": "", "title": "FastTrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "ThreadSanitizer - Data race detector in practice"}, {"link": "", "title": "Parallelizing data race detection"}, {"link": "", "title": "Basic notions of trace theory"}, {"link": "/document/6100134", "title": "BEST: A symbolic testing tool for predicting multi-threaded program failures"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "CTrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "Verifying commit-atomicity using model-checking"}, {"link": "", "title": "Verifying atomicity specifications for concurrent object-oriented software using model-checking"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "", "title": "Reasoning about threads communicating via locks"}, {"link": "", "title": "Causal atomicity"}, {"link": "", "title": "Fast and accurate static data-race detection for concurrent programs"}, {"link": "", "title": "Semantic reduction of thread interleavings in concurrent programs"}, {"link": "", "title": "Virtual time and global states of distributed systems"}, {"link": "", "title": "Timestamps in message-passing systems that preserve the partial ordering"}, {"link": "/document/5230595", "title": "Boundedness vs. Unboundedness of lock chains: Characterizing decidability of pairwise cfl-reachability for threads communicating via locks"}, {"link": "", "title": "Reasoning about threads with bounded lock chains"}, {"link": "", "title": "Persuasive prediction of concurrency access anomalies"}, {"link": "", "title": "PIN: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "A type and effect system for atomicity"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Object race detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693064"}
{"ref": [{"link": "", "title": "Cambridge university study states software bugs cost economy $312 billion per year"}, {"link": "", "title": "Tiobe index"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "/document/6606623", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "DirectFix: Looking for simple program repairs"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "", "title": "History driven program repair"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "/document/5298423", "title": "Are there language specific bug patterns? results obtained from a case study using mozilla"}, {"link": "", "title": "Object-Oriented Analysis and Design with Applications"}, {"link": "", "title": "Mining software repair models for reasoning on the search space of automated program fixing"}, {"link": "/document/6976073", "title": "Cscc: Simple, efficient, context sensitive code completion"}, {"link": "", "title": "Api code recommendation using statistical learning from fine-grained changes"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed?-more accurate information retrieval-based bug localization based on bug reports"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "", "title": "R2fix: Automatically generating bug fixes from bug reports"}, {"link": "", "title": "Bugs.jar: A large-scale, diverse dataset of bugs for java program repair"}, {"link": "/document/7153570", "title": "The manybugs and introclass benchmarks for automated repair of c programs"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "", "title": "The java language specification"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Correlation-based feature subset selection for machine learning"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Information retrieval and spectrum based bug localization: better together"}, {"link": "", "title": "Ridge estimators in logistic regression"}, {"link": "", "title": "ASM"}, {"link": "", "title": "Spoon: A library for implementing analyses and transformations of java source code"}, {"link": "", "title": "Javax Tools"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Essentials of behavioral research: Methods and data analysis (Volume 2)"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Automatic repair of real bugs: An experience report on the defects4j dataset"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the defects4j dataset"}, {"link": "", "title": "Relifix: Automated repair of software regressions"}, {"link": "", "title": "Minthint: Automated synthesis of repair hints"}, {"link": "", "title": "Repairing programs with semantic code search (t)"}, {"link": "", "title": "DeepFix: Fixing common c language errors by deep learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115675"}
{"ref": [{"link": "", "title": "MOF 2.0 Query/View/Transformation Specification (QVT), Version 1.1"}, {"link": "", "title": "Computing repair trees for resolving inconsistencies in design models"}, {"link": "", "title": "Resolving model inconsistencies using automated regression planning"}, {"link": "", "title": "Supporting automatic model inconsistency fixing"}, {"link": "", "title": "Model search: Formalizing and automating constraint solving in MDE platforms"}, {"link": "", "title": "Assessing the Kodkod model finder for resolving model inconsistencies"}, {"link": "", "title": "Designing Constraint Maintainers for User Interaction"}, {"link": "", "title": "ModelMorf"}, {"link": "", "title": "Medini QVT"}, {"link": "", "title": "JTL: A bidirectional and change propagating transformation language"}, {"link": "", "title": "Software Abstractions: Logic, Language, and Analysis"}, {"link": "", "title": "Implementing QVT-R bidirectional model transformations using Alloy"}, {"link": "", "title": "Translating between Alloy specifications and UML class diagrams annotated with OCL"}, {"link": "/document/1201223", "title": "Consistency management with repair actions"}, {"link": "/document/6070373", "title": "Quick fix generation for DSMLs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693135"}
{"ref": [{"link": "", "title": "An orchestrated survey of methodologies for automated software test case generation"}, {"link": "", "title": "Testful: Automatic unit-test generation for java classes"}, {"link": "", "title": "Test oracles. Technical Report CIS-TR-Ol-02, University of Oregon"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "", "title": "ASM: A code manipulation tool to implement adaptable systems"}, {"link": "", "title": "Jcrasher: an automatic robustness tester for java"}, {"link": "", "title": "Evosuite: Automatic test suite generation for object-oriented software"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "/document/6227195", "title": "Sound empirical evidence in software testing"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "A large-scale evaluation of automated unit test generation using evosuite"}, {"link": "", "title": "Extending a search-based test generator with adaptive dynamic symbolic execution"}, {"link": "", "title": "Dart: directed automated random testing"}, {"link": "", "title": "Random testing"}, {"link": "", "title": "Reim & Relmlnfer: Checking and inference of reference immutability and method purity"}, {"link": "", "title": "Dsc+mock: A test case + mock class generator in support of coding against interfaces"}, {"link": "", "title": "JaCoCo v0.6.4"}, {"link": "", "title": "Ocat: Object capture-based automated testing"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Symbolic pathfinder v7. SIGSOFT Softw"}, {"link": "", "title": "GRT: Program-analysis-guided random testing"}, {"link": "", "title": "GRT at the SBST 2015 tool competition"}, {"link": "/document/989787", "title": "Testera: A novel framework for automated testing of java programs"}, {"link": "", "title": "Search-based software test data generation: A survey: Research articles"}, {"link": "", "title": "Eclat: Automatic generation and classification of test inputs"}, {"link": "", "title": "Finding errors in. net with feedback-directed random testing"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "A survey of new trends in symbolic execution for software testing and analysis"}, {"link": "", "title": "Automated test oracles: A survey"}, {"link": "/document/7173585", "title": "Unit testing tool competitions - round three"}, {"link": "", "title": "Cute and jcute: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Mseqgen: Object-oriented unit-test generation via mining source code"}, {"link": "", "title": "Pex: White box test generation for. net"}, {"link": "", "title": "Evolutionary testing of classes"}, {"link": "", "title": "On testing non-testable programs"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "Combined static and dynamic automated test generation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372077"}
{"ref": [{"link": "", "title": "Activityspace: An interapplication remembrance agent for integrated knowledge work"}, {"link": "/document/4375254", "title": "Jazz and the eclipse way of collaboration"}, {"link": "", "title": "Seahawk: Stack overflow in the IDE"}, {"link": "", "title": "Mylar: a degree-of-interest model for IDEs"}, {"link": "", "title": "Contextual web history: Using visual and contextual cues to improve web browser history"}, {"link": "", "title": "Swish: Semantic analysis of window titles and switching history"}, {"link": "", "title": "Caad: An automatic task support system"}, {"link": "", "title": "Connections: Using context to enhance file search"}, {"link": "", "title": "Carrot and language properties in web search results clustering"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "A hybrid learning system for recognizing user tasks from desktop activities and email messages"}, {"link": "", "title": "UMEA: Translating Interaction Histories into Project Contexts"}, {"link": "", "title": "Reverb: Recommending code-related web pages"}, {"link": "", "title": "Perspectives on activity theory"}, {"link": "", "title": "Activity Explorer: Activity-centric collaboration from research to product"}, {"link": "", "title": "Support for activity-based computing in a personal computing operating system"}, {"link": "", "title": "Laevo: A Temporal Desktop Interface for Integrated KnowledgeWork"}, {"link": "", "title": "ActivitySpace: Managing Device Ecologies in an Activity-Centric Configuration Space"}, {"link": "", "title": "Activity-centric support for ad hoc knowledge work: A case study of co-activity manager"}, {"link": "", "title": "Noo-Sphere: An Activity-Centric Infrastructure for Distributed Interaction"}, {"link": "", "title": "Working knowledge: How organizations manage what they know"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372081"}
{"ref": [{"link": "", "title": "Autonomic software product lines (aspl)"}, {"link": "", "title": "Profile-guided composition"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "/document/1386650", "title": "The design and implementation of FFTW3"}, {"link": "", "title": "Design Patterns - Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Optimized composition of performanceaware parallel components"}, {"link": "", "title": "A dynamically tuned sorting library"}, {"link": "/document/779066", "title": "Robust dynamic exchange of implementation aspects"}, {"link": "", "title": "SPIRAL: Automatic implementation of signal processing algorithms"}, {"link": "", "title": "Automatic data structure selection in setl"}, {"link": "", "title": "Towards automatic specialization of Java programs"}, {"link": "", "title": "A taxonomy of variability realization techniques"}, {"link": "", "title": "Contextoriented programming: Beyond layers"}, {"link": "", "title": "Automated empirical optimizations of software and the ATLAS project"}, {"link": "", "title": "Coco: Sound and adaptive replacement of java collections"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693099"}
{"ref": [{"link": "", "title": "Memory models: a case for rethinking parallel languages and hardware"}, {"link": "", "title": "RacerX: Effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "Types for safe locking: Static race detection for Java"}, {"link": "", "title": "Virtual time and global states of distributed systems"}, {"link": "", "title": "Concurrency and Computation: Practice and Experience"}, {"link": "", "title": "FastTrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "TRaDe: Data Race Detection for Java"}, {"link": "", "title": "Goldilocks: A race and transaction-aware Java runtime"}, {"link": "", "title": "Object race detection"}, {"link": "", "title": "RaceTrack: Efficient detection of data race conditions via adaptive tracking"}, {"link": "", "title": "Efficient data race detection for C/C++ programs using dynamic granularity"}, {"link": "", "title": "Atomizer: A dynamic atomicity checker for multithreaded programs"}, {"link": "/document/1599419", "title": "Runtime analysis of atomicity for multithreaded programs"}, {"link": "", "title": "Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "DoubleChecker: efficient sound and precise atomicity checking"}, {"link": "", "title": "Detecting data races in Cilk programs that use locks"}, {"link": "", "title": "SingleTrack: A dynamic determinism checker for multithreaded programs"}, {"link": "", "title": "Cooperative reasoning for preemptive execution"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "", "title": "The RoadRunner dynamic analysis framework for concurrent programs"}, {"link": "", "title": "Java Grande Forum benchmark suite"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis,\u201d in"}, {"link": "", "title": "SPEC benchmarks"}, {"link": "", "title": "Colt 1.2.0"}, {"link": "", "title": "Raja, version 0.4.0-pre4"}, {"link": "", "title": "Adversarial memory for detecting destructive races"}, {"link": "", "title": "SlimState: Array shadow state compression for precise dynamic race detection (extended report)"}, {"link": "", "title": "Hybrid dynamic data race detection"}, {"link": "", "title": "OCTET: capturing and controlling cross-thread dependences efficiently"}, {"link": "", "title": "RecPlay: A fully integrated practical record/replay system"}, {"link": "", "title": "DRD: a thread error detector"}, {"link": "", "title": "ThreadSanitizer: Data race detection in practice"}, {"link": "", "title": "Software transactional memory"}, {"link": "", "title": "Eraser: A dynamic data race detector for multi-threaded programs"}, {"link": "", "title": "Dynamic race detection with LLVM compiler - compile-time instrumentation for ThreadSanitizer"}, {"link": "", "title": "Acculock: Accurate and efficient detection of data races"}, {"link": "", "title": "PACER: proportional detection of data races"}, {"link": "", "title": "Effective data-race detection for the kernel"}, {"link": "", "title": "IFRit: interference-free regions for dynamic data-race detection"}, {"link": "/document/6237018", "title": "Radish: Always-on sound and complete race detection in software and hardware"}, {"link": "", "title": "Efficient data race detection for async-finish parallelism"}, {"link": "", "title": "Scalable data race detection for partitioned global address space programs"}, {"link": "", "title": "GRace: a low-overhead mechanism for detecting data races in GPU programs"}, {"link": "", "title": "A type and effect system for deterministic parallel Java"}, {"link": "", "title": "RedCard: Redundant check elimination for dynamic race detectors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372005"}
{"ref": [{"link": "", "title": "U.S. smartphone use in 2015"}, {"link": "", "title": "Android Activity"}, {"link": "", "title": "Task and Back Stack"}, {"link": "", "title": "Towards discovering and understanding task hijacking in Android"}, {"link": "", "title": "Android Developers Reference"}, {"link": "", "title": "Introduction to Android"}, {"link": "", "title": "Overview screen"}, {"link": "", "title": "Android Intent"}, {"link": "", "title": "Operational semantics for the android activity activation mechanism"}, {"link": "", "title": "Peeking into your app without actually seeing it: UI state inference and novel android attacks"}, {"link": "", "title": "Tapprints: Your finger taps have fingerprints"}, {"link": "", "title": "Taplogger: Inferring user inputs on smart-phone touchscreens using on-board motion sensors"}, {"link": "", "title": "Identity, location, disease and more: Inferring your secrets from Android public resources"}, {"link": "", "title": "T.J. Watson libraries for analysis"}, {"link": "", "title": "Apktool"}, {"link": "", "title": "Optimization of object-oriented programs using static class hierarchy analysis"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "activity element"}, {"link": "", "title": "Androzoo: Collecting millions of android apps for the research community"}, {"link": "", "title": "Startapp"}, {"link": "", "title": "Appodeal"}, {"link": "", "title": "Applift"}, {"link": "", "title": "igexin"}, {"link": "", "title": "Apache cordova"}, {"link": "", "title": "Homebase sdk"}, {"link": "", "title": "3c toolbox"}, {"link": "", "title": "Csipsimple"}, {"link": "", "title": "Analyzing interapplication communication in Android"}, {"link": "", "title": "Detecting passive content leaks and pollution in Android applications"}, {"link": "", "title": "Permission re-delegation: Attacks and defenses"}, {"link": "", "title": "Mayhem in the push clouds: Understanding and mitigating security hazards in mobile push-messaging services"}, {"link": "", "title": "Oauth demystified for mobile application developers"}, {"link": "", "title": "Breaking and fixing origin-based access control in hybrid web/mobile application frameworks"}, {"link": "", "title": "Execute this! Analyzing unsafe and malicious dynamic code loading in Android applications"}, {"link": "", "title": "The impact of vendor customizations on Android security"}, {"link": "", "title": "The peril of frag-mentation: Security hazards in Android device driver customizations"}, {"link": "", "title": "Systematic detection of capability leaks in stock Android smartphones"}, {"link": "", "title": "Attacks on WebView in the Android system"}, {"link": "", "title": "Addroid: Privilege separation for applications and advertisers in Android"}, {"link": "", "title": "Screenmilker: How to milk your Android screen for secrets"}, {"link": "", "title": "Bittersweet adb: Attacks and defenses"}, {"link": "", "title": "Securing embedded user interfaces: Android and beyond"}, {"link": "", "title": "UI redressing attacks on Android devices"}, {"link": "", "title": "On malware leveraging the Android accessibility framework"}, {"link": "", "title": "Touchjacking attacks on web in Android, iOS, and windows phone"}, {"link": "", "title": "Phishing on mobile devices"}, {"link": "", "title": "SCanDroid: Automated security certification of Android applications"}, {"link": "", "title": "Analyzing interapplication communication in android"}, {"link": "", "title": "Smart-droid: an automatic system for revealing ui-based trigger conditions in android applications"}, {"link": "", "title": "Effective inter-component communication mapping in android with epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of android apps"}, {"link": "", "title": "Information flow analysis of android applications in droidsafe"}, {"link": "", "title": "On the need of precise inter-app icc classification for detecting android malware collusions"}, {"link": "", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115638"}
{"ref": [{"link": "", "title": "Mobile now exceeds PC: The biggest shift since the Internet began"}, {"link": "", "title": "Statistics of Android ad networks"}, {"link": "", "title": "Malicious Android applications: Risks and exploitation"}, {"link": "", "title": "PiOS: Detecting privacy leaks in iOS applications"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Are these ads safe: Detecting hidden attacks through the mobile app-web interfaces"}, {"link": "", "title": "Truth in advertising: The hidden cost of mobile ads for software developers"}, {"link": "", "title": "Earth Networks"}, {"link": "", "title": "Privacy concerns in Android advertising libraries"}, {"link": "", "title": "Soot: A framework for analyzing and transforming Java and Android applications"}, {"link": "", "title": "Why people block ads (and what it means for marketers and advertisers)"}, {"link": "", "title": "On the unsoundness of static analysis for Android GUIs"}, {"link": "", "title": "Droidra: Taming reflection to support whole-program analysis of Android apps"}, {"link": "", "title": "Static analysis of Android apps"}, {"link": "", "title": "Unsafe exposure analysis of mobile in-app advertisements"}, {"link": "", "title": "Longitudinal analysis of Android ad library permissions"}, {"link": "", "title": "Addetect: Automated detection of Android ad libraries using semantic analysis"}, {"link": "", "title": "Efficient privilege deescalation for ad libraries in mobile apps"}, {"link": "", "title": "Libradar: Fast and accurate detection of third-party libraries in Android apps"}, {"link": "", "title": "Reliable third-party library detection in Android and its security applications"}, {"link": "", "title": "Automatic workarounds for web applications"}, {"link": "", "title": "Automatic recovery from runtime failures"}, {"link": "", "title": "Cross-checking oracles from intrinsic software redundancy"}, {"link": "", "title": "Search-based synthesis of equivalent method sequences"}, {"link": "", "title": "Removing energy code smells with reengineering services"}, {"link": "/document/6178879", "title": "To-wards applying reengineering services to energy-efficient applications"}, {"link": "", "title": "How does code obfuscation impact energy usage?"}, {"link": "", "title": "Lightweight measurement and estimation of mobile ad energy consumption"}, {"link": "", "title": "Automated re-factoring of Android apps to enhance energy-efficiency"}, {"link": "", "title": "Static detection of energy defect patterns in Android applications"}, {"link": "", "title": "Selectively taming background Android apps to improve battery lifetime"}, {"link": "", "title": "Optimizing energy consumption of guis in Android apps: A multi-objective approach"}, {"link": "", "title": "Optimizing display energy consumption for hybrid Android apps (invited talk)"}, {"link": "", "title": "Asdroid: Detecting stealthy behaviors in Android applications by user interface and program behavior contradiction"}, {"link": "", "title": "Supor: Precise and scalable sensitive user input detection for Android apps"}, {"link": "", "title": "Uipicker: User-input privacy identification in mobile applications"}, {"link": "", "title": "Detecting sensitive data disclosure via bi-directional text correlation analysis"}, {"link": "", "title": "Collaborative verification of information flow for a high-assurance app store"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115642"}
{"ref": [{"link": "", "title": "Sample size vs. bias in defect prediction"}, {"link": "/document/6187357", "title": "Considerations for big data: Architecture and approach"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "", "title": "An empirical analysis of the co-evolution of schema and code in database applications"}, {"link": "", "title": "A field study of the software design process for large systems"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? on the relation between source code and comment changes"}, {"link": "", "title": "Analyzing the co-evolution of comments and source code"}, {"link": "", "title": "A survey of documentation practice within corrective maintenance"}, {"link": "", "title": "Co-evolving code-related and database-related changes in a data-intensive software system"}, {"link": "", "title": "Quantifying schema evolution"}, {"link": "", "title": "Impact analysis of database schema changes"}, {"link": "/document/492110", "title": "Towards the reverse engineering of renormalized relational databases"}, {"link": "", "title": "Using queries to improve database reverse engineering"}, {"link": "", "title": "Extracting the extended entity-relationship model from a legacy relational database"}, {"link": "", "title": "Mining fuzzy association rules in databases"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/6613855", "title": "Jsummarizer: An automatic generator of natural langunge summaries for java classes"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "", "title": "Changescribe: A tool for automatically generating commit messages"}, {"link": "", "title": "idiff: Interaction-based program differencing tool"}, {"link": "", "title": "Improving change descriptions with change contexts"}, {"link": "/document/336770", "title": "Semantic diff: A tool for summarizing the effects of modifications"}, {"link": "", "title": "Ldiff: An enhanced line differencing tool"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "", "title": "Automatic generation of release notes"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Sanitizing and minimizing databases for software application test outsourcing"}, {"link": "", "title": "GitHub API"}, {"link": "", "title": "Qualtrics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371993"}
{"ref": [{"link": "", "title": "Mining API patterns as partial orders from source code: From usage scenarios to specifications"}, {"link": "", "title": "CSSL: A logic for specifying conditional scenarios"}, {"link": "", "title": "Java Email Client"}, {"link": "", "title": "CrossFTP Server"}, {"link": "", "title": "LSCs: Breathing life into message sequence charts"}, {"link": "/document/4400151", "title": "Detecting implied scenarios from execution traces"}, {"link": "", "title": "From run-time behavior to usage scenarios: An interaction-pattern mining approach"}, {"link": "", "title": "'Sometimes' and 'not never' revisited: On branching versus linear time temporal logic"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Oclets - Scenario-based modeling with Petri nets"}, {"link": "", "title": "From Scenarios to Components"}, {"link": "", "title": "Synthesizing decentralized components from a variant of live sequence charts"}, {"link": "", "title": "Mining branching LSCs: CrossFTP, Columba traces and results"}, {"link": "", "title": "Symbolic mining of temporal specifications"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Learning from 6, 000 projects: Lightweight cross-project anomaly detection"}, {"link": "", "title": "Assert and negate revisited: Modal semantics for UML sequence diagrams"}, {"link": "", "title": "Mining message sequence graphs"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "", "title": "PR-miner: Automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "SMArTIC: Towards building an accurate, robust and scalable specification miner"}, {"link": "/document/4639314", "title": "Mining scenario-based triggers and effects"}, {"link": "", "title": "Specification mining of symbolic scenario-based models"}, {"link": "/document/5431759", "title": "Mining hierarchical scenario-based specifications"}, {"link": "", "title": "Scenario-based and value-based specification mining: Better together"}, {"link": "/document/5773397", "title": "Towards succinctness in mining scenario-based specifications"}, {"link": "", "title": "Mining modal scenario-based specifications from execution traces of reactive systems"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "/document/4222571", "title": "Compatibility and regression testing of COTS-component-based software"}, {"link": "/document/1467910", "title": "Behavior capture and test: Automated analysis of component integration"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Linear and branching structures in the semantics and logics of reactive systems"}, {"link": "/document/5431756", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "/document/4400168", "title": "Dynamic protocol recovery"}, {"link": "", "title": "Static specification mining using automata-based abstractions"}, {"link": "", "title": "Existential live sequence charts revisited"}, {"link": "", "title": "Process Mining - Discovery, Conformance and Enhancement of Business Processes"}, {"link": "", "title": "Branching vs. Linear Time: Final Showdown"}, {"link": "/document/4639328", "title": "Inferring finite-state models with temporal constraints"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "", "title": "Perracotta: Mining temporal API rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693102"}
{"ref": [{"link": "", "title": "An Empirical Study of PHP Feature Usage: A Static Analysis Perspective"}, {"link": "/document/5279910", "title": "RASCAL: A Domain Specific Language for Source Code Analysis and Manipulation"}, {"link": "", "title": "EASY Meta-programming with Rascal"}, {"link": "", "title": "Count Lines of Code Tool"}, {"link": "", "title": "PHP AiR: Analyzing PHP Systems with Rascal"}, {"link": "/document/7081816", "title": "Are PHP Applications Ready for Hack?"}, {"link": "", "title": "Reducing Dynamic Feature Usage in PHP Code"}, {"link": "/document/7081870", "title": "Evolution of Dynamic Feature Usage in PHP"}, {"link": "", "title": "Static, Lightweight Includes Resolution for PHP"}, {"link": "", "title": "How is Aliasing Used in Systems Software?"}, {"link": "/document/1158288", "title": "An Empirical Analysis of C Preprocessor Use"}, {"link": "", "title": "Program Refactoring in the Presence of Preprocessor Directives"}, {"link": "", "title": "An Analysis of the Variability in Forty Preprocessor-Based Software Product Lines"}, {"link": "", "title": "An empirical study of Java bytecode programs"}, {"link": "", "title": "Understanding the Shape of Java Software"}, {"link": "", "title": "An Empirical Study of FORTRAN Programs"}, {"link": "", "title": "An Analysis of the Dynamic Behavior of JavaScript Programs"}, {"link": "", "title": "The Eval That Men Do - A Large-Scale Study of the Use of Eval in JavaScript Applications"}, {"link": "", "title": "Eval Begone!: Semi-Automated Removal of Eval from JavaScript Programs"}, {"link": "", "title": "Evaluating the Design of the R Language - Objects and Functions for Data Analysis"}, {"link": "", "title": "Profile-Guided Static Typing for Dynamic Scripting Languages"}, {"link": "", "title": "Static Type Inference for Ruby"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372044"}
{"ref": [{"link": "", "title": "Hidden factors and hidden topics: understanding rating dimensions with review text"}, {"link": "", "title": "In-datacenter performance analysis of a tensor processing unit"}, {"link": "", "title": "Structure and interpretation of computer programs."}, {"link": "", "title": "The art of Unix programming."}, {"link": "", "title": "The Tensor Algebra Compiler"}, {"link": "", "title": "M\u00e9thodes de calcul diff\u00e9rentiel absolu et leurs applications"}, {"link": "", "title": "The foundation of the General Theory of Relativity"}, {"link": "", "title": "ITPACKV 2D User's Guide"}, {"link": "/document/1447941", "title": "Direct solutions of sparse network equations by optimally ordered triangular factorization"}, {"link": "", "title": "Tensor-matrix products with a compressed sparse tensor"}, {"link": "", "title": "Efficient and scalable computations with sparse tensors"}, {"link": "", "title": "FROSTT: The formidable repository of open sparse tensors and tools"}, {"link": "", "title": "The matrix market exchange formats: Initial design"}, {"link": "", "title": "Users' guide for the harwell-boeing sparse matrix collection (release i)"}, {"link": "", "title": "On the evolution of user interaction in facebook"}, {"link": "", "title": "Cilk: An efficient multithreaded runtime system"}, {"link": "/document/660313", "title": "Openmp: an industry standard api for shared-memory programming"}, {"link": "", "title": "Efficient matlab computations with sparse and factored tensors"}, {"link": "", "title": "Eigen v3"}, {"link": "", "title": "Splatt: Efficient and parallel sparse tensor-matrix multiplication"}, {"link": "", "title": "Julia: A fast dynamic language for technical computing"}, {"link": "", "title": "Tensorfiow: A system for large-scale machine learning"}, {"link": "", "title": "Basic linear algebra subprograms for Fortran usage"}, {"link": "", "title": "OSKI: A library of automatically tuned sparse matrix kernels"}, {"link": "", "title": "Automatic code generation for many-body electronic structure methods: the Tensor Contraction Engine"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115709"}
{"ref": [{"link": "", "title": "Recommending Framework Extension Examples"}, {"link": "", "title": "Mining subclassing directives to improve framework reuse"}, {"link": "", "title": "FrUiT: IDE Support for Framework Understanding"}, {"link": "", "title": "Enabling static analysis for partial java programs"}, {"link": "", "title": "Automatically Locating Framework Extension Examples"}, {"link": "", "title": "Graph-based Mining of Multiple Object Usage Patterns"}, {"link": "", "title": "SpotWeb: Detecting Framework Hotspots and Coldspots via Mining Open Source Code on the Web"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115713"}
{"ref": [{"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "ASM: A code manipulation tool to implement adaptable systems"}, {"link": "/document/6200130", "title": "Weighted system dependence graph"}, {"link": "", "title": "Precise and compact modular procedure summaries for heap manipulating programs"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Dynamic trace-based analysis of vectorization potential of applications"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "Interprocedural dynamic slicing"}, {"link": "", "title": "Dynamic slicing of computer programs"}, {"link": "", "title": "Advanced Slicing of Sequential and Concurrent Programs"}, {"link": "", "title": "Mass-produced software components"}, {"link": "", "title": "Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software"}, {"link": "", "title": "Using component metadata to regression test component-based software"}, {"link": "", "title": "Component metadata for software engineering tasks"}, {"link": "", "title": "Pruning interference and ready dependence for slicing concurrent java programs"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Interprocedural dataflow analysis in the presence of large libraries"}, {"link": "", "title": "IDE dataflow analysis in the presence of large object-oriented libraries"}, {"link": "", "title": "Precise interprocedural dataflow analysis with applications to constant propagation"}, {"link": "", "title": "Purity and side effect analysis for Java programs"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "/document/1317473", "title": "Using compressed bytecode traces for slicing Java programs"}, {"link": "", "title": "Hierarchical dynamic slicing"}, {"link": "", "title": "Finding low-utility data structures"}, {"link": "", "title": "Scaling CFL-reachability-based points-to analysis using context-sensitive must-not-alias analysis"}, {"link": "", "title": "Taint-enhanced policy enforcement: A practical approach to defeat a wide range of attacks"}, {"link": "", "title": "Generating precise and concise procedure summaries"}, {"link": "", "title": "Fault Localization Via Precise Dynamic Slicing"}, {"link": "", "title": "Pruning dynamic slices with confidence"}, {"link": "", "title": "Cost effective dynamic program slicing"}, {"link": "/document/1550986", "title": "Whole execution traces"}, {"link": "/document/1201211", "title": "Precise dynamic slicing algorithms"}, {"link": "", "title": "Dynamic slicing long running programs through execution fast forwarding"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693066"}
{"ref": [{"link": "/document/1702444", "title": "Testing programs with the aid of a compiler"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "", "title": "An experimental determination of sufficient mutant operators"}, {"link": "", "title": "Toward the determination of sufficient mutant operators for C"}, {"link": "", "title": "Sufficient mutation operators for measuring test effectiveness"}, {"link": "", "title": "Efficient mutation testing by checking invariant violations"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Selective mutation testing for concurrent code"}, {"link": "", "title": "Regression mutation testing"}, {"link": "/document/1553583", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "/document/1703390", "title": "Using mutation analysis for assessing and comparing testing coverage criteria"}, {"link": "", "title": "Higher order mutation testing"}, {"link": "", "title": "Strong higher order mutationbased test data generation"}, {"link": "", "title": "The dynamic domain reduction procedure for test data generation"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}, {"link": "", "title": "Towards automating the generation of mutation tests"}, {"link": "/document/6595801", "title": "Automatic test generation for mutation testing on database applications"}, {"link": "", "title": "Proteum/im 2.0: An integrated mutation testing environment"}, {"link": "/document/346062", "title": "An experimental evaluation of selective mutation"}, {"link": "", "title": "Introduction to Software Testing"}, {"link": "", "title": "Reducing the cost of mutation testing: An empirical study"}, {"link": "", "title": "Time and Money Home"}, {"link": "", "title": "JDepend Home"}, {"link": "", "title": "JTopas Home"}, {"link": "", "title": "Barbecue Home"}, {"link": "", "title": "Apache Mime4J Home"}, {"link": "", "title": "Jaxen Home"}, {"link": "", "title": "XStream Home"}, {"link": "", "title": "Santuario Home"}, {"link": "", "title": "Apache Commons Home"}, {"link": "", "title": "Joda Time Home"}, {"link": "", "title": "Apache JMeter Home"}, {"link": "", "title": "Javalanche: Efficient mutation testing for Java"}, {"link": "/document/6100145", "title": "Automated documentation inference to explain failed tests"}, {"link": "/document/6606565", "title": "Bridging the gap between the total and additional test-case prioritization strategies"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}, {"link": "", "title": "JavaSourceMetric Home"}, {"link": "", "title": "Our Project"}, {"link": "/document/6227132", "title": "Automated oracle creation support, or: How i learned to stop worrying about fault propagation and love mutation testing"}, {"link": "/document/1317431", "title": "Using simulation to empirically investigate test coverage criteria based on statechart"}, {"link": "", "title": "Testing container classes: Random or systematic?"}, {"link": "/document/5381650", "title": "Multi objective higher order mutation testing with genetic programming"}, {"link": "/document/170248", "title": "Performance, effectiveness, and reliability issues in software testing"}, {"link": "", "title": "The Mothra software testing environment users manual"}, {"link": "", "title": "Mutation analysis"}, {"link": "", "title": "Mutation Analysis of Program Test Data[ph. D. Thesis]"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "/document/1702959", "title": "Weak mutation testing and completeness of test sets"}, {"link": "/document/5370", "title": "From weak to strong, dead or alive? An analysis of some mutation testing issues"}, {"link": "/document/286422", "title": "An empirical evaluation of weak mutation"}, {"link": "/document/170202", "title": "Compiler-integrated program mutation"}, {"link": "", "title": "Mutation analysis using mutant schemata"}, {"link": "/document/90444", "title": "High performance software testing on SIMD machines"}, {"link": "", "title": "Mutation testing of software using a MIMD computer"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "/document/6227144", "title": "On-demand test suite reduction"}, {"link": "/document/92910", "title": "Constraint-based automatic test data generation"}, {"link": "/document/6019060", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "/document/1707670", "title": "On the use of mutation faults in empirical assessments of test case prioritization techniques"}, {"link": "", "title": "Injecting mechanical faults to localize developer faults for evolving software"}, {"link": "", "title": "On the danger of coverage directed test case generation"}, {"link": "/document/6363461", "title": "A static approach to prioritizing JUnit test cases"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693070"}
{"ref": [{"link": "/document/1421024", "title": "The CodeSurfer software understanding platform"}, {"link": "/document/1342719", "title": "A differencing algorithm for object-oriented programs"}, {"link": "/document/6227177", "title": "Content classification of development emails"}, {"link": "", "title": "Sourcerer: A search engine for open source code supporting structure-based search"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "", "title": "How long does a bug survive? an empirical study"}, {"link": "", "title": "Modular static program analysis"}, {"link": "", "title": "Enabling static analysis for partial Java programs"}, {"link": "", "title": "Sound control flow graph extraction from incomplete Java bytecode programs"}, {"link": "", "title": "A modular and symbolic approach to static program analysis"}, {"link": "", "title": "Correlations between bugginess and time-based commit characteristics"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Program element matching for multi-version program analyses"}, {"link": "", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "The hungarian method for the assignment problem"}, {"link": "", "title": "Differential static analysis: opportunities, applications, and challenges"}, {"link": "", "title": "Verification modulo versions: Towards usable verification"}, {"link": "/document/1357805", "title": "Supporting source code difference analysis"}, {"link": "/document/5989838", "title": "Exemplar: A source code search engine for finding highly relevant applications"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "/document/6693078", "title": "A study of repetitiveness of code changes in software evolution"}, {"link": "", "title": "Automated dependency resolution for open source software"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Discovering information explaining API types using text classification"}, {"link": "", "title": "Chianti: a tool for change impact analysis of Java programs"}, {"link": "", "title": "An empirical study on evolution of API documentation"}, {"link": "", "title": "Making sense of online code snippets"}, {"link": "", "title": "CSNIPPEX: automated synthesis of compilable code snippets from Q&A sites"}, {"link": "", "title": "Are faults localizable?"}, {"link": "", "title": "There and back again: Can you compile that snapshot?"}, {"link": "", "title": "Panorama: Capturing system-wide information flow for malware detection and analysis"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "Poster: An empirical study on using hints from past fixes"}, {"link": "", "title": "Detecting API documentation errors"}, {"link": "", "title": "An empirical study on real bug fixes"}, {"link": "", "title": "Detecing bugs with past fixes"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115677"}
{"ref": [{"link": "", "title": "Summarizing Answers in Non-Factoid Community Question-Answering"}, {"link": "", "title": "Template-based question answering over RDF data"}, {"link": "", "title": "A Neural Network for Factoid Question Answering over Paragraphs"}, {"link": "/document/6624015", "title": "Answering questions about unanswered questions of stack overflow"}, {"link": "", "title": "Combining Word Embedding with Information Retrieval to Recommend Similar Bug Reports"}, {"link": "", "title": "The use of MMR, diversity-based reranking for reordering documents and producing summaries"}, {"link": "", "title": "Speedreading"}, {"link": "", "title": "How far will you go?: characterizing and predicting online search stopping behavior using information scent and need for cognition"}, {"link": "", "title": "What do developers search for on the web?"}, {"link": "", "title": "Predicting semantically linkable knowledge in developer online forums via convolutional neural network"}, {"link": "", "title": "Unsupervised Software-Specific Morphological Forms Inference from Informal Discussions"}, {"link": "/document/7476633", "title": "Software-specific named entity recognition in software engineering social content"}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "", "title": "Nltk: the natural language toolkit"}, {"link": "", "title": "Learning a dual-language vector space for domain-specific cross-lingual question retrieval"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}, {"link": "", "title": "Models of the Information Seeking Process"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "/document/6606630", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "Distributed representations of sentences and documents"}, {"link": "", "title": "A generalized framework of exploring category information for question retrieval in community question answer archives"}, {"link": "", "title": "Sando: an extensible local code search framework"}, {"link": "", "title": "Automatic summarization of search engine hit lists"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "", "title": "Ausum: approach for unsupervised bug report summarization"}, {"link": "", "title": "Domain-specific cross-language relevant question retrieval"}, {"link": "", "title": "Xsearch: a domain-specific cross-language relevant question retrieval tool"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "/document/6100069", "title": "Finding relevant answers in software forums"}, {"link": "", "title": "Detecting high-quality posts in community question answering sites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115681"}
{"ref": [{"link": "", "title": "Conjoining specifications"}, {"link": "", "title": "TICC: A tool for interface compatibility and composition"}, {"link": "", "title": "Moving from specifications to contracts in component-based design"}, {"link": "", "title": "MIO workbench: A tool for compositional design with modal input/output interfaces"}, {"link": "", "title": "Multiple viewpoint contract-based specification and design"}, {"link": "", "title": "Contracts for system design"}, {"link": "", "title": "AutoFocus - Ein werkzeugprototyp zur entwicklung eingebetteter systeme"}, {"link": "", "title": "CHESS: A model-driven engineering tool environment for aiding the development of complex industrial systems"}, {"link": "", "title": "NuSMV 2: An OpenSource tool for symbolic model checking"}, {"link": "", "title": "The MathSAT5 SMT solver"}, {"link": "", "title": "Validation of requirements for hybrid systems: A formal approach"}, {"link": "", "title": "Requirements validation for hybrid systems"}, {"link": "/document/6328123", "title": "A property-based proof system for contract-based design"}, {"link": "", "title": "Compositional verification of architectural models"}, {"link": "/document/5763167", "title": "Using contract-based component specifications for virtual integration testing and architecture design"}, {"link": "", "title": "Interface automata"}, {"link": "", "title": ""}, {"link": "", "title": "Learning-based assume-guarantee verification"}, {"link": "", "title": "Contract-based reasoning for component systems with complex interactions"}, {"link": "", "title": "Circular compositional reasoning about liveness"}, {"link": "/document/161279", "title": "Applying \"design by contract\""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Assume-guarantee model checking of software: A comparative case study"}, {"link": "/document/4685825", "title": "Contract-based verification of hierarchical systems of components"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693137"}
{"ref": [{"link": "", "title": "Feature Models, Grammars, and Propositional Formulas"}, {"link": "", "title": "Interactive Configuration of Embedded Systems Product Lines"}, {"link": "", "title": "Abstract Delta Modeling"}, {"link": "", "title": "Version Models for Software Configuration Management"}, {"link": "", "title": "Mapping Features to Models: A Template Approach Based on Superimposed Variants"}, {"link": "", "title": "A Systematic Analysis of Textual Variability Modeling Languages"}, {"link": "", "title": "First-class Variability Modeling in Mat-lab/Simulink"}, {"link": "", "title": "Delta Modeling for Software Architectures"}, {"link": "", "title": "Evolving Delta-oriented Software Product Line Architectures"}, {"link": "", "title": "Abstract Delta Modeling - Software Product Lines and Beyond"}, {"link": "", "title": "EMF: Eclipse Modeling Framework"}, {"link": "", "title": "Model Composition in Product Lines and Feature Interaction Detection using Critical Pair Analysis"}, {"link": "", "title": "Feature-oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "On the Impact of the Optional Feature Problem: Analysis and Case Studies"}, {"link": "", "title": "Understanding model evolution through semantically lifting model differences with SiLift"}, {"link": "/document/6100050", "title": "A Rule-Based Approach to the Semantic Lifting of Model Differences in the Context of Model Versioning"}, {"link": "", "title": "Consistency-Preserving Edit Scripts in Model Versioning"}, {"link": "", "title": "Workspace Updates of Visual Models"}, {"link": "/document/1000449", "title": "A State-of-the-Art Survey on Software Merging"}, {"link": "", "title": "Visualizing Differences of UML Diagrams with Fujaba"}, {"link": "", "title": "Differences between Versions of UML Diagrams"}, {"link": "", "title": "Software Product Line Engineering: Foundations"}, {"link": "", "title": "Automatic Variation-Point Identification in Function-Block-Based Models"}, {"link": "", "title": ""}, {"link": "", "title": "Delta-oriented programming of software product lines"}, {"link": "", "title": "DeltaEcore - A model-based delta language generation framework"}, {"link": "", "title": "SiLift project website"}, {"link": "", "title": "SiPL project website"}, {"link": "", "title": "Researching Evolution in Industrial Plant Automation: Scenarios and Documentation of the Pick and Place Unit"}, {"link": "/document/4339272", "title": "Product Line Implementation using Aspect-Oriented and Model-Driven Software Development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372079"}
{"ref": [{"link": "", "title": "Apple announces 1 million apps in the App Store, more than 1 billion songs played on iTunes radio"}, {"link": "", "title": "Using GUI ripping for automated testing of Android applications"}, {"link": "/document/6228987", "title": "Software testing of mobile applications: Challenges and future research directions"}, {"link": "", "title": "World Quality Report 2014\u201315"}, {"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Model-Based Testing Through a GUI"}, {"link": "", "title": "A comprehensive framework for testing graphical user interfaces"}, {"link": "", "title": "A Model-to-implementation Mapping Tool for Automated Model-based GUI Testing"}, {"link": "", "title": "Developing cost-effective model-based techniques for GUI testing"}, {"link": "", "title": "Automation of GUI testing using a model-driven approach"}, {"link": "", "title": "Behind the Scenes: An Approach to Incorporate Context in GUI Test Case Generation"}, {"link": "/document/6571623", "title": "Pattern Based GUI Testing Modeling Environment"}, {"link": "/document/6698881", "title": "A pattern-based approach for GUI modeling and testing"}, {"link": "", "title": "A GUI Modeling DSL for Pattern-Based GUI Testing PARADIGM"}, {"link": "/document/43044", "title": "Reverse Engineering and Design Recovery: a Taxonomy"}, {"link": "", "title": "Reverse Engineering of Mobile Application Lifecycles"}, {"link": "", "title": "Reverse Engineering iOS Mobile Applications"}, {"link": "/document/6984098", "title": "Web Application Model Generation through Reverse Engineering and UI Pattern Inferring"}, {"link": "", "title": "Design patterns for user interface for mobile applications"}, {"link": "", "title": "Insights into layout patterns of mobile user interfaces by an automatic analysis of android apps"}, {"link": "", "title": "Mobile Design Pattern Gallery: UI Patterns for Smartphone Apps"}, {"link": "", "title": "A Pattern Language: Towns, Buildings, Construction"}, {"link": "/document/6984137", "title": "Automated Pattern-Based Testing of Mobile Applications"}, {"link": "", "title": "Up and running with material design"}, {"link": "", "title": "Android - What To Test"}, {"link": "", "title": "Android Navigation Drawer"}, {"link": "/document/6405345", "title": "A toolset for GUI testing of Android applications"}, {"link": "", "title": "Dynodroid: an input generation system for Android apps"}, {"link": "", "title": "Uncovering Self Code Modification in Android"}, {"link": "", "title": "Automating gui testing for android applications"}, {"link": "/document/6112328", "title": "Using static analysis for automatic assessment and mitigation of unwanted and malicious activities within Android applications"}, {"link": "", "title": "Improving Code Coverage in Android Apps Testing by Exploiting Patterns and Automatic Test Case Generation"}, {"link": "/document/6984094", "title": "Pattern Based GUI Testing for Mobile Applications"}, {"link": "", "title": "PBGT tool: an integrated modeling and testing environment for pattern-based GUI testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372083"}
{"ref": [{"link": "", "title": "ASM homepage"}, {"link": "", "title": "FindBugs website"}, {"link": "", "title": "Mockito homepage"}, {"link": "", "title": "Dynamic deadlock analysis of multithreaded programs"}, {"link": "", "title": "Variable and thread bounding for systematic testing of multithreaded programs"}, {"link": "", "title": "Fair and balanced?: Bias in bug-fix datasets"}, {"link": "", "title": "DoubleChecker: Efficient sound and precise atomicity checking"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "PACER: Proportional detection of data races"}, {"link": "", "title": "Using combinatorial benchmark construction to improve the assessment of concurrency bug detection tools"}, {"link": "", "title": "A benchmark suite for high performance Java"}, {"link": "", "title": "NDSeq: Runtime checking for nondeterministic sequential specifications of parallel correctness"}, {"link": "/document/6718069", "title": "Magiclock: Scalable detection of potential deadlocks in large-scale multithreaded programs"}, {"link": "", "title": "ConLock: A constraint-based approach to dynamic checking on deadlocks in multithreaded programs"}, {"link": "", "title": "Efficient and precise datarace detection for multithreaded object-oriented programs"}, {"link": "", "title": "Optimized execution of deterministic blocks in Java Path Finder"}, {"link": "", "title": "Commutativity race detection"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Controlling factors in evaluating path-sensitive error detection techniques"}, {"link": "", "title": "CONCURRIT: A domain specific language for reproducing concurrency bugs"}, {"link": "", "title": "Sherlock: Scalable deadlock detection for concurrent programs"}, {"link": "", "title": "Towards a framework and a benchmark for testing tools for multi-threaded programs"}, {"link": "/document/4567039", "title": "Experience with a concurrency bugs benchmark"}, {"link": "", "title": "Compiling a benchmark of documented multithreaded bugs"}, {"link": "", "title": "Concurrent bug patterns and how to test them"}, {"link": "", "title": "Predicting null-pointer dereferences in concurrent programs"}, {"link": "", "title": "FastTrack: Efficient and precise dynamic race detection"}, {"link": "", "title": "Adversarial memory for detecting destructive races"}, {"link": "", "title": "Velodrome: A sound and complete dynamic atomicity checker for multithreaded programs"}, {"link": "/document/6100045", "title": "Scalable and precise symbolic analysis for atomicity violations"}, {"link": "/document/6693064", "title": "Efficient data race prediction with incremental reasoning on time-stamped lock history"}, {"link": "", "title": "Selective mutation testing for concurrent code"}, {"link": "", "title": "Concurrent libraries with foresight"}, {"link": "", "title": "Dynamic detection of atomic-set-serializability violations"}, {"link": "", "title": "Testing concurrent programs to achieve high synchronization coverage"}, {"link": "", "title": "A survey of race bug detection techniques for multithreaded programmes"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "LEAP: Lightweight deterministic multiprocessor replay of concurrent Java programs"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Persuasive prediction of concurrency access anomalies"}, {"link": "", "title": "CLAP: Recording local executions to reproduce concurrency failures"}, {"link": "", "title": "Improved multithreaded unit testing"}, {"link": "", "title": "Change-aware preemption prioritization"}, {"link": "", "title": "CalFuzzer: An extensible active testing framework for concurrent programs"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing"}, {"link": "", "title": "Detecting atomic-set serializability violations in multithreaded programs through active randomized testing"}, {"link": "", "title": "AtomRace: Data race and atomicity violation detector and healer"}, {"link": "", "title": "JATO: Native code atomicity for Java"}, {"link": "", "title": "Java virtual machine specification"}, {"link": "", "title": "Finding incorrect compositions of atomicity"}, {"link": "", "title": "BugBench: Benchmarks for evaluating bug detection tools"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "Isolating and understanding concurrency errors using reconstructed execution fragments"}, {"link": "", "title": "The Java memory model"}, {"link": "/document/6606578", "title": "Detecting deadlock in programs with data-centric synchronization"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "Effective static deadlock detection"}, {"link": "/document/6227145", "title": "Ballerina: Automatic generation and clustering of efficient random unit tests for multithreaded code"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "Debugging non-deadlock concurrency bugs"}, {"link": "", "title": "Falcon: Fault localization in concurrent programs"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Finding feasible abstract counter-examples"}, {"link": "", "title": "JSR-133: Java memory model and thread specification"}, {"link": "", "title": "Practical static race detection for Java parallel loops"}, {"link": "", "title": "Scalable and precise dynamic datarace detection for structured parallelism"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "", "title": "Omen+: A precise dynamic deadlock detector for multithreaded Java libraries"}, {"link": "", "title": "Trace driven dynamic deadlock detection and reproduction"}, {"link": "", "title": "Effective random testing of concurrent programs"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "Verifying atomicity via data independence"}, {"link": "", "title": "Automatic handling of native methods in Java PathFinder"}, {"link": "", "title": "Using benchnnarking to advance research: A challenge to software engineering"}, {"link": "", "title": "A parallel Java grande benchmark suite"}, {"link": "", "title": "PENELOPE: Weaving threads to expose atomicity violations"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "RELAY: Static race detection on millions of lines of code"}, {"link": "", "title": "Cooperative types for controlling thread interference in Java"}, {"link": "", "title": "SimRT: An automated framework to support regression testing for data races"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "CARISMA: A context-sensitive approach to race-condition sample-instance selection for multithreaded applications"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372007"}
{"ref": [{"link": "", "title": "Activitys, Threads and Memory Leaks"}, {"link": "", "title": "Android Intents and Intent Filters"}, {"link": "", "title": "Android Processes and Threads"}, {"link": "", "title": "Android's AsyncTask"}, {"link": "", "title": "Antennapod repository"}, {"link": "", "title": "The dark side of AsyncTask"}, {"link": "", "title": "Eclips Refactoring Engine"}, {"link": "", "title": "Eclipse Java development tools (JDT)"}, {"link": "", "title": "Gartner"}, {"link": "", "title": "GiTective"}, {"link": "", "title": "GitHub"}, {"link": "", "title": "Java Serializability"}, {"link": "", "title": "JDK Swing Framework"}, {"link": "", "title": "SLOCCount"}, {"link": "", "title": "Stack Overflow"}, {"link": "", "title": "Tablet Sales"}, {"link": "", "title": "The SWT Toolkit"}, {"link": "", "title": "Whatandroid repository"}, {"link": "", "title": "Modular performance modelling for mobile applications"}, {"link": "/document/467577", "title": "The paradigm compiler for distributed-memory message passing multicomputers"}, {"link": "", "title": "Towards automatic translation of openmp to mpi"}, {"link": "", "title": "Optimizing irregular shared-memory applications for distributed-memory systems"}, {"link": "", "title": "When does a refactoring induce bugs? An empirical study"}, {"link": "", "title": "Performance modeling and analysis of context-aware mobile software systems"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "", "title": "How developers use the dynamic features of programming languages: The case of Smalltalk"}, {"link": "", "title": "Refactoring sequential Java code for concurrency via concurrent libraries"}, {"link": "", "title": "Mining billions of AST nodes to study actual and potential usage of Java language features"}, {"link": "", "title": "An empirical investigation into a large-scale java open source code repository"}, {"link": "", "title": "Program restructuring as an aid to software maintenance"}, {"link": "", "title": "A study of language usage evolution in open source software"}, {"link": "", "title": "Transformation for class immutability"}, {"link": "", "title": "Have things changed now?: An empirical study of bug characteristics in modern open source software"}, {"link": "", "title": "Tracking load-time configuration options"}, {"link": "", "title": "Check-then-act misuse of Java concurrent collections"}, {"link": "", "title": "Retrofitting concurrency for android applications through refactoring"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Optimizing irregular shared-memory applications for clusters"}, {"link": "/document/6228987", "title": "Software testing of mobile applications: Challenges and future research directions"}, {"link": "", "title": "The Busy Coder's Guide to Android Development"}, {"link": "", "title": "A study and toolkit for asynchronous programming in C#"}, {"link": "", "title": "Refactoring object-oriented frameworks"}, {"link": "", "title": "Adoption and use of Java generics"}, {"link": "", "title": "How do code refactorings affect energy usage?"}, {"link": "", "title": "Correct refactoring of concurrent Java code"}, {"link": "", "title": "Refactoring Java programs for flexible locking"}, {"link": "", "title": "Inferring method effect summaries for nested heap regions"}, {"link": "", "title": "Refactoring for reentrancy"}, {"link": "", "title": "Systematic testing for resource leaks in Android applications"}, {"link": "", "title": "Proceedings of the International Workshop on the Engineering of Mobile-Enabled Systems"}, {"link": "", "title": "Compiling for a hybrid programming model using the lmad representation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372011"}
{"ref": [{"link": "", "title": "Salesforce will only support Nexus and Samsung Galaxy phones to avoid Android fragmentation"}, {"link": "", "title": "Real Challenges in Mobile app Development"}, {"link": "", "title": "Daily Dozen"}, {"link": "", "title": "UI Overview"}, {"link": "", "title": "Monkey"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "A Grey-box Approach for Automated GUI-model Generation of Mobile Applications"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "PUMA: Programmable UI-automation for Large-scale Dynamic Analysis of Mobile Apps"}, {"link": "", "title": "EvoDroid: Segmented Evolutionary Testing of Android Apps"}, {"link": "", "title": "Automated Concolic Testing of Smartphone Apps"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-Inducing Input"}, {"link": "/document/5109651", "title": "Complex wavelet structural similarity: A new image similarity index"}, {"link": "/document/7927971", "title": "Barista: A Technique for Recording, Encoding, and Running Platform Independent Android Tests"}, {"link": "", "title": "C4. 5: programs for machine learning"}, {"link": "", "title": "The earth mover's distance as a metric for image retrieval"}, {"link": "", "title": "Optical character recognition by open source OCR tool tesseract: A case study"}, {"link": "", "title": "UiAutomation"}, {"link": "", "title": "JavaPoet"}, {"link": "", "title": "Espresso"}, {"link": "", "title": "pyssim"}, {"link": "", "title": "Device Farm"}, {"link": "", "title": "Weka"}, {"link": "", "title": "OpenCV"}, {"link": "", "title": "Tesseract OCR"}, {"link": "", "title": "GittIub"}, {"link": "/document/7372031", "title": "Automated Test Input Generation for Android: Are We There Yet? (E)"}, {"link": "", "title": "Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs"}, {"link": "", "title": "Making apps useable on multiple different mobile platforms: On interoperability for business application development on smartphones"}, {"link": "", "title": "Characterizing smartphone usage patterns from millions of Android users"}, {"link": "", "title": "Bootstrapping energy debugging on smartphones: a first look at energy bugs in mobile devices"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "The impact of vendor customizations on android security"}, {"link": "/document/6956578", "title": "The peril offrag-mentation: Security hazards in android device driver customizations"}, {"link": "", "title": "PRADA: Prioritizing android devices for apps by mining large-scale usage data"}, {"link": "/document/6825641", "title": "Using combinatorial approaches for testing mobile applications"}, {"link": "", "title": "Prioritizing the devices to test your app on: A case study of android game apps"}, {"link": "", "title": "Taming Android fragmentation: Characterizing and detecting compatibility issues for Android apps"}, {"link": "/document/5609723", "title": "Webdiff: Automated Identification of Cross-Browser Issues in Web Applications"}, {"link": "", "title": "Automated Cross-Browser Compatibility Testing"}, {"link": "/document/6200112", "title": "Crosscheck: Combining Crawling and Differencing to Better Detect Cross-Browser Incompatibilities in Web Applications"}, {"link": "", "title": "Webmate: a Tool for Testing Web 2.0 Applications"}, {"link": "", "title": "X-PERT: Accurate Identification of Cross-Browser Issues in Web Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115644"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "On the linear ranking problem for integer linear-constraint loops"}, {"link": "", "title": "Ranking templates for linear loops"}, {"link": "", "title": "Termination of polynomial programs"}, {"link": "", "title": "Termination analysis of imperative programs using bitvector arithmetic"}, {"link": "", "title": "Status report on software verification - (competition summary SV-COMP 2014)"}, {"link": "", "title": "Synthesising interprocedural bit-precise termination proofs (extended version)"}, {"link": "", "title": "Proving conditional termination"}, {"link": "", "title": "Scalable analysis of linear systems using mathematical programming"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Precise relational invariants through strategy iteration"}, {"link": "", "title": "Program analysis as constraint solving"}, {"link": "", "title": "Symbolic optimization with SMT solvers"}, {"link": "", "title": "Linear ranking with reachability"}, {"link": "", "title": "Ramsey vs. lexicographic termination proving"}, {"link": "", "title": "Termination analysis with compositional transition invariants"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Controlling a solver execution with the runsolver tool"}, {"link": "", "title": ""}, {"link": "", "title": "Ultimate automizer with array interpolation - (competition contribution)"}, {"link": "", "title": "AProVE: Termination and Memory Safety of C programs - (competition contribution)"}, {"link": "", "title": ""}, {"link": "", "title": "version SV-COMP-2015"}, {"link": "", "title": "A resource-based logic for termination and non-termination proofs"}, {"link": "", "title": "ARMC: the logical choice for software model checking with abstraction refinement"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Termination analysis by learning terminating programs"}, {"link": "", "title": ""}, {"link": "", "title": "Synthesizing software verifiers from proof rules"}, {"link": "", "title": "Termination proofs for systems code"}, {"link": "", "title": "Termination analysis with algorithmic learning"}, {"link": "", "title": "Transition invariants"}, {"link": "", "title": "Linear ranking for linear lasso programs"}, {"link": "", "title": "Ranking function synthesis for bit-vector relations"}, {"link": "", "title": "Unrestricted termination and non-termination arguments for bit-vector programs"}, {"link": "", "title": "Automatic numeric abstractions for heap-manipulating programs"}, {"link": "", "title": "Automatic termination proofs for programs with shape-shifting heaps"}, {"link": "", "title": "Quantified invariant generation using an interpolating saturation prover"}, {"link": "", "title": "Summaries for while programs with recursion"}, {"link": "", "title": "Counterexample-guided abstraction refinement"}, {"link": "", "title": "A forward-backward abstraction refinement algorithm"}, {"link": "", "title": "Deciding conditional termination"}, {"link": "", "title": "Proving termination starting from the end"}, {"link": "", "title": "Policy iteration-based conditional termination and ranking functions"}, {"link": "", "title": "A decision tree abstract domain for proving conditional termination"}, {"link": "", "title": "Uaderapproximation of procedure summaries for integer programs"}, {"link": "", "title": "Proving non-termination"}, {"link": "", "title": "Proving nontermination via safety"}, {"link": "", "title": "Termination and non-termination specification inference"}, {"link": "", "title": "Alternation for termination"}, {"link": "", "title": "The Worst-case Execution Time Problem-Overview of Methods and Survey of Tools"}, {"link": "", "title": "Multi-dimensional rankings, program termination, and complexity bounds of flowchart programs"}, {"link": "", "title": "Alternating runtime and size complexity analysis of integer programs"}, {"link": "", "title": "A simple and scalable static analysis for bound analysis and amortized complexity analysis"}, {"link": "", "title": "Control-flow refinement and progress invariants for bound analysis"}, {"link": "", "title": "Control flow refinement and symbolic computation of average case bound"}, {"link": "", "title": "Tentative steps toward a development method for interfering programs"}, {"link": "", "title": "Proving thread termination"}, {"link": "", "title": "Predicate abstraction and refinement for verifying multi-threaded programs"}, {"link": "", "title": "Compositional termination proofs for multi-threaded programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371995"}
{"ref": [{"link": "", "title": "Automated reasoning on feature models"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "Feature-to-code mapping in two large product lines"}, {"link": "", "title": "Variability modeling in the real: A perspective from the operating systems domain"}, {"link": "", "title": "Variability modeling in the systems software domain"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "", "title": "JMetal: A java framework for multi- objective optimization"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "/document/6036090", "title": "Software engineering meets evolutionary computation"}, {"link": "", "title": "Search based software engineering: A comprehensive analysis and review of trends techniques and applications"}, {"link": "", "title": "Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-wise Test Suites for Large Software Product Lines"}, {"link": "", "title": "Properties of realistic feature models make combinatorial testing of product lines feasible"}, {"link": "", "title": "Domain Analysis of E-Commerce Systems Using Feature-Based Model Templates"}, {"link": "", "title": "Searching the variability space to fix model inconsistencies: A preliminary assessment"}, {"link": "", "title": "S.P.L.O.T. - Software product lines online tools"}, {"link": "", "title": "SAT-based analysis of feature models is easy"}, {"link": "", "title": "Efficient compilation techniques for large scale feature models"}, {"link": "/document/6100068", "title": "A performance comparison of contemporary algorithmic approaches for automated analysis operations on feature models"}, {"link": "/document/6615200", "title": "Pareto-optimal search-based software engineering: A literature survey"}, {"link": "/document/6604432", "title": "Optimum feature selection in software product lines: Let your model and values guide your search"}, {"link": "/document/6606595", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "", "title": "Reverse engineering feature models"}, {"link": "/document/5687874", "title": "A preliminary experimental study on optimal feature selection for product derivation using knapsack approximation"}, {"link": "/document/6100118", "title": "Automated planning for feature model configuration based on stakeholder's business concerns"}, {"link": "", "title": "Pareto-, aggregation-, and indicator-based methods in many-objective optimization"}, {"link": "", "title": "Selecting highly optimal architectural feature sets with filtered cartesian flattening"}, {"link": "", "title": "Automated reasoning for multi-step feature model configuration problems"}, {"link": "/document/4626856", "title": "Automated diagnosis of product-line configuration errors in feature models"}, {"link": "/document/4339262", "title": "Optimizing and automating product-line variant selection for mobile devices"}, {"link": "", "title": "Using knowledge-based systems to manage quality attributes in software product lines"}, {"link": "", "title": "Indicator-based selection in multiobjective search"}, {"link": "/document/797969", "title": "Multiobjective evolutionary algorithms a comparative case study and the strength pareto approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693104"}
{"ref": [{"link": "", "title": "Proceedings of the 2008 23rd IEEE/ACM International Conference on Automated Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "Software Maintenance (ICSM), 2010 IEEE International Conference on"}, {"link": "", "title": "Comput. Linguist."}, {"link": "", "title": "Proceedings of the NAACL HLT 2010 Demonstration Session"}, {"link": "", "title": "Proceedings of the 1996 International Conference on Software Maintenance"}, {"link": "", "title": "Proceedings of the 30th International Conference on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 2009 IEEEIACM International Conference on Automated Software Engineering"}, {"link": "", "title": "Inf. Softw. Technol."}, {"link": "", "title": "Proceedings of the 27th International Conference on Software Engineering"}, {"link": "", "title": "Proceedings of the 34th International Conference on Software Engineering"}, {"link": "", "title": "Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages & Applications"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 48th Annual Southeast Regional Conference"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Statistical Machine Translation"}, {"link": "", "title": "Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology -"}, {"link": "", "title": ""}, {"link": "", "title": "Foundations of Statistical Natural Language Processing"}, {"link": "", "title": "Proceedings of the 34th International Conference on Software Engineering"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the Seventh European Conference on Software Maintenance and Reengineering"}, {"link": "", "title": ""}, {"link": "", "title": "Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering"}, {"link": "", "title": "Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering"}, {"link": "", "title": "Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering"}, {"link": "", "title": "Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering -"}, {"link": "", "title": ""}, {"link": "", "title": "Electron. Notes Theor. Comput. Sci."}, {"link": "", "title": "Proceedings of the 40th Annual Meeting on Association for Computational Linguistics"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Divide and translate: Improving long distance reordering in statistical machine translation"}, {"link": "", "title": "Proceedings of the 23rd ACM SIGPLAN Conference on Object-oriented Programming Systems Languages and Applications"}, {"link": "", "title": "Proceedings of the 21st International Conference on Software Engineering"}, {"link": "/document/7629", "title": "IEEE Trans. Softw. Eng."}, {"link": "", "title": "Proceedings of the 32nd ACMIIEEE International Conference on Software Engineering -"}, {"link": "", "title": ""}, {"link": "/document/4359473", "title": "IEEE Trans. Softw. Eng."}, {"link": "", "title": "IEEE Trans. Softw. Eng., 21(11):902\u2013912"}, {"link": "", "title": "Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering -"}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372046"}
{"ref": [{"link": "/document/738528", "title": "Andrew Yahin, Leonardo Moura, Marcelo Sant'Anna, and Lorraine Bier. Clone detection using abstract syntax trees. In"}, {"link": "/document/5726968", "title": "Assessing the benefits of incorporating function clone detection in a development process"}, {"link": "", "title": "Extracting code clones for refactoring using combinations of clone metrics"}, {"link": "/document/5306336", "title": "Managing code clones using dynamic change tracking and resolution"}, {"link": "", "title": ""}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "SuperC: Parsing all of C by taming the Preprocessor"}, {"link": "", "title": "The Pragmatic Programmer: From Journeyman to Master"}, {"link": "", "title": "Software Engineering, 2009. ICSE 2009. IEEE 31st International Conference on"}, {"link": "", "title": "Empirical Software Engineering"}, {"link": "/document/4023995", "title": "Clone detection using abstract syntax suffix trees"}, {"link": "", "title": "The love/hate relationship with the C Preprocessor: An Interview Study. ECOOP"}, {"link": "", "title": "RTED: A Robust Algorithm for the Tree Edit Distance"}, {"link": "", "title": "Program Metamorphosis"}, {"link": "", "title": ""}, {"link": "", "title": "Stepping stones over the refactoring rubicon"}, {"link": "", "title": "\n            Inf. Softw. Techno\n            "}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372050"}
{"ref": [{"link": "", "title": "Jackson"}, {"link": "", "title": "Gson"}, {"link": "", "title": "Mining aspects in API reviews"}, {"link": "", "title": "Resolving API mentions in informal documents"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "/document/8115629", "title": "Automatic summarization of API reviews"}, {"link": "", "title": "Feature-rich part-of-speech tagging with a cyclic dependency network"}, {"link": "", "title": "Sen-timent in short strength detection informal text"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Comprehensive review of opinion summarization"}, {"link": "", "title": "Sentiment Analysis and Subjectivity"}, {"link": "", "title": "Generating comparative summaries of contradictory opinions in text"}, {"link": "", "title": "What are developers talking about? an analysis of topics and trends in stack overflow"}, {"link": "", "title": "How social Q&A sites are changing knowledge sharing in open source software communities"}, {"link": "/document/6676932", "title": "On the personality traits of stackoverflow users"}, {"link": "", "title": "User profiling for answer quality assessment in Q&A communities"}, {"link": "", "title": "Steering user behavior with badges"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Collaborative problem solving: A study of math overflow"}, {"link": "", "title": "Predicting tags for stackoverflow posts"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Shared waypoints and social tagging to support collaboration in software development"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Towards automatically generating summary comments for Java methods"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Selection and presentation practices for code example summarization"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115715"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Fyrie Redis"}, {"link": "", "title": "Gatling Stress Tool"}, {"link": "", "title": "Geotrellis"}, {"link": "", "title": "Signal/collect"}, {"link": "", "title": "ACTORS: A Model of Concurrent Computation in Distributed Systems"}, {"link": "", "title": "Making Reliable Distributed Systems in the Presence of Software Errors"}, {"link": "", "title": "Akka Library"}, {"link": "", "title": "Applications of synchronization coverage"}, {"link": "", "title": "A randomized scheduler with probabilistic guarantees of finding bugs"}, {"link": "", "title": "Orleans: Cloud computing for everyone"}, {"link": "", "title": "JPredictor: A predictive runtime analysis tool for java"}, {"link": "", "title": "Detection of asynchronous message passing errors using static analysis"}, {"link": "", "title": "Detection of asynchronous message passing errors using static analysis"}, {"link": "", "title": "Finding race conditions in Erlang with QuickCheck and PULSE"}, {"link": "", "title": "GAMBIT: Effective unit testing for concurrency libraries"}, {"link": "", "title": "Verification and coverage of message passing multicore applications"}, {"link": "/document/5386903", "title": "Multithreaded java program test generation"}, {"link": "", "title": "Adversarial memory for detecting destructive races"}, {"link": "", "title": "McErlang: A model checker for a distributed functional programming language"}, {"link": "", "title": "2ndstrike: Toward manifesting hidden concurrency typestate bugs"}, {"link": "", "title": "Concurrency at Microsoft - An exploratory survey"}, {"link": "", "title": "Actors in Scala"}, {"link": "", "title": "A universal modular actor formalism for artificial intelligence"}, {"link": "", "title": "Testing concurrent programs to achieve high synchronization coverage"}, {"link": "", "title": "Persuasive prediction of concurrency access anomalies"}, {"link": "", "title": "Improved multithreaded unit testing"}, {"link": "", "title": "CalFuzzer: An extensible active testing framework for concurrent programs"}, {"link": "", "title": "Actor frameworks for the JVM platform: A comparative analysis"}, {"link": "", "title": "Coverage metrics for saturationbased and search-based testing of concurrent software"}, {"link": "", "title": "Detecting atomic-set serializability violations in multithreaded programs through active randomized testing"}, {"link": "/document/5431748", "title": "A framework for state-space exploration of Java-based actor programs"}, {"link": "/document/1581284", "title": "A novel framework for non-deterministic testing of message-passing programs"}, {"link": "/document/1205182", "title": "Tool support for testing concurrent Java components"}, {"link": "", "title": "A study of interleaving coverage criteria"}, {"link": "", "title": "Finding and reproducing Heisenbugs in concurrent programs"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "CTrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "GPars"}, {"link": "", "title": "Unit testing concurrent software"}, {"link": "", "title": "Effective random testing of concurrent programs"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "Automated systematic testing of open distributed programs"}, {"link": "", "title": "PENELOPE: Weaving threads to expose atomicity violations"}, {"link": "", "title": "Structural testing criteria for message-passing parallel programs"}, {"link": "", "title": "Efficient testing of actor programs with non-deterministic behavior"}, {"link": "", "title": "Setac: A framework for phased deterministic testing of scala actor programs"}, {"link": "", "title": "TransDPOR: A novel dynamic partial-order reduction technique for testing actor programs"}, {"link": "/document/126769", "title": "Structural testing of concurrent programs"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "All-du-path coverage for parallel programs"}, {"link": "", "title": "Maple: A coveragedriven testing tool for multithreaded programs"}, {"link": "", "title": "ConSeq: Detecting concurrency bugs through sequential errors"}, {"link": "", "title": "ConMem: Detecting severe concurrency bugs through an effect-oriented approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693072"}
{"ref": [{"link": "", "title": "IEEE Comp. Soc., Guide to the Software Engineering Body of Knowledge"}, {"link": "", "title": "A survey of software learnability: Metrics, methodologies and guidelines"}, {"link": "", "title": "GUI design for IDE command recommendations"}, {"link": "", "title": "A graphical user interface for presenting integrated development environment command recommendations: Design, evaluation, and implementation"}, {"link": "", "title": "Improving software developers' fluency by recommending development environment commands"}, {"link": "", "title": "Should context-aware IDE command recommendations always be presented in-context or not?"}, {"link": "", "title": "A context model for IDE-based recommendation systems"}, {"link": "/document/7424457", "title": "What to learn next: Recommending commands in a feature-rich environment"}, {"link": "", "title": "Design and evaluation of a command recommendation system for software applications"}, {"link": "", "title": "Collaborative filtering for implicit feedback datasets"}, {"link": "", "title": "An Introduction to Statistical Learning: With Applications in R"}, {"link": "", "title": "Handbook of Open Source Tools"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "Learning from imbalanced data"}, {"link": "", "title": "Pattern Recognition and Machine Learning"}, {"link": "", "title": "Evaluating recommender systems"}, {"link": "", "title": "Data mining methods for recommender systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115679"}
{"ref": [{"link": "", "title": "Pew Research Center"}, {"link": "", "title": "Social media for software engineering"}, {"link": "", "title": "The impact of social media on software engineering practices and tools"}, {"link": "", "title": "Extracting domain models from natural-language requirements: approach and industrial evaluation"}, {"link": "", "title": "Generating typed dependency parses from phrase structure parses"}, {"link": "", "title": "EMF: Eclipse Modeling Framework 2.0"}, {"link": "", "title": "Wordnet: A lexical database for english"}, {"link": "", "title": "Plant UML"}, {"link": "", "title": "SUS: A retrospective"}, {"link": "", "title": "Forms of participatory modelling and its potential for widespread adoption in the water sector"}, {"link": "", "title": "Collaborative systems engineering and social-networking approach to design and modelling of smarter products"}, {"link": "", "title": "A model-driven development method for collaborative modeling tools"}, {"link": "", "title": "Collaboro: a collaborative (meta) modeling tool"}, {"link": "", "title": "Knowledge sharing and collaboration through social media - the case of IBM"}, {"link": "", "title": "Adopting a social network perspective in global software development"}, {"link": "/document/7367992", "title": "Crowdsourcing in software engineering: Models, motivations, and challenges"}, {"link": "", "title": "From requirements to UML models and back: How automatic processing of text can support requirements engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115683"}
{"ref": [{"link": "", "title": "Partial orders for efficient bounded model checking of concurrent software"}, {"link": "", "title": "Context-bounded analysis for concurrent programs with dynamic creation of threads"}, {"link": "", "title": ""}, {"link": "", "title": "TACAS 2013 Competition on Software Verification"}, {"link": "", "title": "On sequentializing concurrent programs"}, {"link": "/document/6148914", "title": "Time-bounded analysis of real-time systems"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Verifying multi-threaded software using SMTbased context-bounded model checking"}, {"link": "", "title": "Delay-bounded scheduling"}, {"link": "", "title": "CSeq: A sequentialization tool for C (competition contribution)"}, {"link": "", "title": "Threader: A verifier for multi-threaded programs (competition contribution)"}, {"link": "", "title": "Information Technology-Portable Operating System Interface (POSIX) Base Specifications"}, {"link": "", "title": "Reducing context-bounded concurrent reachability to sequential reachability"}, {"link": "", "title": "Sequentializing parameterized programs"}, {"link": "", "title": "Reducing concurrent analysis under a context bound to sequential analysis"}, {"link": "", "title": "LLBMC: Bounded model checking of C and C++ programs using a compiler IR"}, {"link": "", "title": "Poirot - A concurrency sleuth"}, {"link": "", "title": "KISS: Keep it simple and sequential"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693139"}
{"ref": [{"link": "", "title": "Towards a taxonomy of software change"}, {"link": "", "title": "Software maintenance and evolution: a roadmap"}, {"link": "", "title": "Evaluating software architectures: development, stability, and evolution"}, {"link": "", "title": "On architectural stability and evolution"}, {"link": "/document/1642679", "title": "A study of design characteristics in evolving software using stability as a criterion"}, {"link": "", "title": "Concern-based assessment of architectural stability: A comparative study"}, {"link": "", "title": "Architecture stability: Survey of the state of art, challenges and future directions"}, {"link": "/document/1357832", "title": "Evaluating architectural stability with real options theory"}, {"link": "", "title": "The threat of uncertainty in service-oriented architecture"}, {"link": "", "title": "Deriving architectural tactics: A step toward methodical architectural design"}, {"link": "", "title": "Architecting self-aware software systems"}, {"link": "", "title": "The handbook of engineering self-aware and self-expressive systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372085"}
{"ref": [{"link": "", "title": "Agitar One"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Analytix CodePro"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Parasoft JTest"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Crap4J"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372009"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "View programming guide for iOS"}, {"link": "", "title": "Smart phone use by nonmobile business users"}, {"link": "", "title": "Bootstrapping mobile app development"}, {"link": "/document/1342728", "title": "Modeling web-based dialog flows for automatic dialog control"}, {"link": "", "title": "Learning OpenCV: Computer Vision with the OpenCV Library, 1st"}, {"link": "/document/1317470", "title": "Finding latent code errors via machine learning over program executions"}, {"link": "", "title": "JavaSketchIt: Issues in sketching the look of user interfaces"}, {"link": "/document/4052556", "title": "Practitioner tools and workstyles for user-interface design"}, {"link": "/document/4767851", "title": "A computational approach to edge detection"}, {"link": "", "title": "Associating the visual representation of user interfaces with their internal structures and metadata"}, {"link": "", "title": "Revisiting visual interface programming: creating GUI tools for designers and programmers"}, {"link": "/document/43044", "title": "Reverse engineering and design recovery: A taxonomy"}, {"link": "", "title": "Multi-fidelity prototyping of user interfaces"}, {"link": "", "title": "Dynamically discovering likely interface invariants"}, {"link": "", "title": "DySy: Dynamic symbolic execution for invariant inference"}, {"link": "/document/6005488", "title": "User-centered design and agile methods: A systematic review"}, {"link": "", "title": "A mixed-fidelity prototyping tool for mobile devices"}, {"link": "", "title": "Prefab: Implementing advanced behaviors using pixel-based reverse engineering of interface structure"}, {"link": "", "title": "Content and hierarchy in pixel-based methods for reverse engineering interface structure"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "/document/4019582", "title": "Using communicative acts in interaction design specifications for automated synthesis of user interfaces"}, {"link": "", "title": "The advanced use of mobile phones in five European countries"}, {"link": "", "title": "Learning Android: Develop Mobile Apps Using Java and Eclipse"}, {"link": "", "title": "User interface design for a mobile multimedia application: An iterative approach"}, {"link": "", "title": "Cycript"}, {"link": "", "title": ""}, {"link": "", "title": "Working overtime: Patterns of smartphone and PC usage in the day of an information worker"}, {"link": "", "title": "Model-driven development of mobile personal health care applications"}, {"link": "", "title": "Designing user experience for mobile apps: Long-term product owner perspective"}, {"link": "", "title": "Interactive sketching for the early stages of user interface design"}, {"link": "/document/910894", "title": "Sketching interfaces: Toward more human interface design"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions and reversals"}, {"link": "", "title": "From early requirements to user interface prototyping: A methodological approach"}, {"link": "", "title": "WADE: simplified GUI add-on development for third-party software"}, {"link": "", "title": "Challenges of HCI design and implementation"}, {"link": "", "title": "Graphical user interface programming"}, {"link": "", "title": "Past, present, and future of user interface software tools"}, {"link": "", "title": ""}, {"link": "", "title": "Sitemaps, storyboards, and specifications: A sketch of Web site design practice as manifested through artifacts"}, {"link": "/document/6606675", "title": "GROPG: A graphical on-phone debugger"}, {"link": "", "title": "Android Design Patterns: Interaction Design Solutions for Developers"}, {"link": "/document/824821", "title": "Online and off-line handwriting recognition: A comprehensive survey"}, {"link": "", "title": "Seeking the user interface"}, {"link": "", "title": "An exploratory study on the relation between user interface complexity and the perceived quality of Android applications"}, {"link": "", "title": "Mobidev: A tool for creating apps on mobile phones"}, {"link": "", "title": "Insights into layout patterns of mobile user interfaces by an automatic analysis of Android apps"}, {"link": "", "title": "An overview of the Tesseract OCR engine"}, {"link": "/document/5277715", "title": "Hybrid page layout analysis via tab-stop detection"}, {"link": "", "title": "Computer Vision: Algorithms and Applications"}, {"link": "", "title": "The mobile consumer: A global snapshot"}, {"link": "", "title": "Feature extraction methods for character recognition-a survey"}, {"link": "", "title": "Rough and ready prototypes: Lessons from graphic design"}, {"link": "", "title": "The Auckland layout editor: An improved GUI layout specification process"}, {"link": "", "title": "Evaluating direct manipulation operations for constraint-based layout"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372013"}
{"ref": [{"link": "", "title": "A tool to detect bugs in Java and C/C++/Objective-C code before it ships"}, {"link": "", "title": "GNU core utilities v8.24: tsort"}, {"link": "", "title": "Hex-Rays: The IDA Pro disassembler and debugger"}, {"link": "", "title": "The Computer Language Benchmarks Game: Binary Tree"}, {"link": "", "title": "libusb 1.0.20"}, {"link": "", "title": "Linux kernel 4.1 Cyclic DLL (include/linux/list.h)"}, {"link": "", "title": "Olden benchmark v1.01"}, {"link": "", "title": "Predator/Forester GIT repository"}, {"link": "", "title": "Supplemental material for DSI"}, {"link": "", "title": "theZoo aka Malware DB"}, {"link": "", "title": "Heapviz: Interactive Heap visualization for program understanding and debugging"}, {"link": "", "title": "DIVINE: DIscovering Variables IN Executables"}, {"link": "", "title": "Smallfoot: Modular automatic assertion checking with separation logic"}, {"link": "", "title": "On the analysis of the Zeus botnet crimeware toolkit"}, {"link": "", "title": "ARTISTE: Automatic Generation of Hybrid Data Structure Signatures from Binary Code Executions"}, {"link": "", "title": "Type Inference on executables"}, {"link": "/document/6671277", "title": "Who allocated my memory? Detecting custom memory allocators in C binaries"}, {"link": "/document/43044", "title": "Reverse engineering and design recovery: A taxonomy"}, {"link": "", "title": "Surreptitious software: Obfuscation, watermarking, and tamperproofing for software protection"}, {"link": "", "title": "Digging for data structures"}, {"link": "", "title": "Scalable data structure detection and classification for C/C++ binaries"}, {"link": "", "title": "DDT: Design and evaluation of a dynamic program analysis for optimizing data structure usage"}, {"link": "", "title": "The Art of Computer Programming 1: Fundamental Algorithms 2: Seminumerical Algorithms 3: Sorting and Searching"}, {"link": "", "title": "TIE: Principled Reverse Engineering of Types in Binary Programs"}, {"link": "", "title": "Polymorphing Software by randomizing data structure layout"}, {"link": "", "title": "Automatic reverse engineering of data structures from binary execution"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "System V Application Binary Interface AMD64 Architecture Processor Supplement (Draft version 0.3)"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "Hot-patching a web server: A case study of asap code repair"}, {"link": "", "title": "Recursive data structure profiling"}, {"link": "", "title": "Katana: A hot patching framework for ELF executables"}, {"link": "", "title": "POSTER: Identifying dynamic data structures in malware"}, {"link": "", "title": "Howard: A dynamic excavator for reverse engineering data structures"}, {"link": "", "title": "SigPath: A memory graph based approach for program data introspection and modification"}, {"link": "", "title": "Data structures and algorithm analysis in C"}, {"link": "", "title": "dsOli: Data structure operation location and identification"}, {"link": "", "title": "DSI: An evidence-based approach to identify dynamic data structures in C programs"}, {"link": "", "title": "C von A bis Z"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115646"}
{"ref": [{"link": "", "title": "Diehard: Probabilistic memory safety for unsafe languages"}, {"link": "", "title": "The Rust programming language"}, {"link": "", "title": "Patina: A formalization of the Rust programming language"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "LLBMC: bounded model checking of C and C++ programs using a compiler IR"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "Combining unit-level symbolic execution and system-level concrete execution for testing NASA software"}, {"link": "", "title": "Evacon: A framework for integrating evolutionary and concolic testing for object-oriented programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371997"}
{"ref": [{"link": "/document/1335465", "title": "Basic concepts and taxonomy of dependable and secure computing"}, {"link": "", "title": "Soft-LLFI: A Comprehensive Framework for Software Fault Injection"}, {"link": "/document/4015509", "title": "Emulation of Software Faults: A Field Data Study and a Practical Approach"}, {"link": "/document/6122035", "title": "On Fault Representativeness of Software Fault Injection"}, {"link": "/document/5487526", "title": "An Analysis and Survey of the Development of Mutation Testing"}, {"link": "", "title": "Assessing Dependability with Software Fault Injection: A Survey"}, {"link": "", "title": "An Empirical Study of Injected Versus Actual Interface Errors"}, {"link": "", "title": "LLFI: An intermediate code level fault injector for soft computing applications"}, {"link": "", "title": "Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation"}, {"link": "", "title": "Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation"}, {"link": "", "title": "SystemTap"}, {"link": "", "title": "The LTTng tracer: A low impact performance and behavior monitor for GNU/Linux"}, {"link": "", "title": "GOOFI: generic object-oriented fault injection tool"}, {"link": "/document/666826", "title": "Xception: a technique for the experimental evaluation of dependability in modern computers"}, {"link": "", "title": "Instrumenting AUTOSAR for dependability assessment: A guidance framework"}, {"link": "", "title": "On the Effective Use of Fault Injection for the Assessment of AUTOSAR Safety Mechanisms"}, {"link": "", "title": "Deterministic high-speed simulation of complex systems including fault-injection"}, {"link": "", "title": "FAIL*: An Open and Versatile Fault-Injection Framework for the Assessment of Software-Implemented Hardware Fault Tolerance"}, {"link": "", "title": "Wukong: Effective diagnosis of bugs at large system scales"}, {"link": "", "title": "Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation"}, {"link": "", "title": "PinOS: A Programmable Framework for Whole-system Dynamic Instrumentation"}, {"link": "", "title": "Comprehensive Kernel Instrumentation via Dynamic Binary Translation"}, {"link": "", "title": "Make It Work, Make It Right, Make It Fast: Building a Platform-neutral Whole-system Dynamic Binary Analysis Platform"}, {"link": "", "title": "Fast Dynamic Binary Translation for the Kernel"}, {"link": "", "title": "DECAF: A Platform-Neutral Whole-System Dynamic Binary Analysis Platform"}, {"link": "", "title": "Comparing operating systems using robustness benchmarks"}, {"link": "", "title": "An automated approach to increasing the robustness of C libraries"}, {"link": "/document/7027425", "title": "Adaptive Failure Prediction for Computer Systems: A Framework and a Case Study"}, {"link": "", "title": "Operating System Robustness Forecast and Selection"}, {"link": "", "title": "Automated robustness testing of off-the-shelf software components"}, {"link": "", "title": "Random Testing of Interrupt-driven Software"}, {"link": "", "title": "MoIO: Run-time monitoring for I/O protocol violations in storage device drivers"}, {"link": "", "title": "Classification of Software Behaviors for Failure Detection: A Discriminative Pattern Mining Approach"}, {"link": "", "title": "A Study of Linux File System Evolution"}, {"link": "", "title": "Automated Diagnosis of Software Configuration Errors"}, {"link": "/document/256857", "title": "FINE: A fault injection and monitoring environment for tracing the UNIX system behavior under faults"}, {"link": "", "title": "SABRINE: State-based robustness testing of operating systems"}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "/document/1281665", "title": "LLVM: A Compilation Framework for Lifelong Program Analysis & Transformation"}, {"link": "", "title": "No PAIN, No Gain? The Utility of PArallel Fault INjections"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115650"}
{"ref": [{"link": "", "title": "MinimumSpanningForest (jung2 2.0.1 API)"}, {"link": "", "title": "Mozilla Home of the Mozilla Project Mozilla.org"}, {"link": "", "title": "Mkdep"}, {"link": "", "title": ""}, {"link": "", "title": "Programmer's Friend - Class Dependency Analyzer"}, {"link": "/document/1401930", "title": "Information-theoretic software clustering"}, {"link": "", "title": "File clustering using naming conventions for legacy systems"}, {"link": "", "title": "Recovering software architecture from the names of source files"}, {"link": "/document/1214742", "title": "Comparative study of clustering algorithms and abstract representations for software remodularisation"}, {"link": "", "title": "On the congruence of modularity and code coupling"}, {"link": "", "title": "System partitioning and its measure"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Understanding the Linux Kernel"}, {"link": "", "title": "The architecture of open source applications"}, {"link": "/document/5714423", "title": "A probabilistic based approach towards software system clustering"}, {"link": "/document/5741257", "title": "Investigating the use of lexical information for software system clustering"}, {"link": "/document/4222684", "title": "Archstudio 4: An architecture-based meta-modeling environment"}, {"link": "/document/948429", "title": "Focus: A light-weight, incremental approach to software architecture recovery and evolution"}, {"link": "/document/4815276", "title": "Software architecture reconstruction: A process-oriented taxonomy"}, {"link": "/document/6606639", "title": "Obtaining ground-truth software architectures"}, {"link": "/document/6337738", "title": "A framework for obtaining the ground-truth in architectural recovery"}, {"link": "/document/6100123", "title": "Enhancing architectural recovery using concerns"}, {"link": "/document/1702084", "title": "System structure analysis: Clustering with data bindings"}, {"link": "/document/6405308", "title": "Feature-gathering dependency-based software clustering using dedication and modularity"}, {"link": "", "title": "Architecture reconstruction"}, {"link": "/document/792498", "title": "Bunch: A clustering tool for the recovery and maintenance of software system structures"}, {"link": "/document/1281402", "title": "The weighted combined algorithm: A linkage algorithm for software clustering"}, {"link": "/document/4339232", "title": "Hierarchical clustering for software architecture recovery"}, {"link": "", "title": "A software architecture-based framework for highly distributed and data-intensive scientific applications"}, {"link": "/document/5290821", "title": "The anatomy and physiology of the grid revisited"}, {"link": "", "title": "Mallet: A Machine Learning for Language Toolkit"}, {"link": "", "title": "The em Algorithm and Extensions"}, {"link": "", "title": "Using software evolution to focus architectural recovery"}, {"link": "/document/6385107", "title": "Software clustering: Unifying syntactic and semantic features"}, {"link": "/document/1610610", "title": "On the automatic modularization of software systems using the bunch tool"}, {"link": "/document/5741245", "title": "Improved similarity measures for software clustering"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "/document/5406532", "title": "Software module clustering as a multi-objective search problem"}, {"link": "/document/6773228", "title": "Shortest connection networks and some generalizations"}, {"link": "", "title": "Software framework for topic modelling with large corpora"}, {"link": "/document/921721", "title": "Alborz: A query-based tool for software architecture recovery"}, {"link": "/document/1235434", "title": "Software architecture recovery based on pattern matching"}, {"link": "/document/130626", "title": "An intelligent tool for re-engineering software modularity"}, {"link": "", "title": "Using neural networks to modularize software"}, {"link": "/document/1374328", "title": "A framework for the comparison of nested software decompositions"}, {"link": "/document/824377", "title": "Identifying modules via concept analysis"}, {"link": "", "title": "Software Architecture: Foundations, Theory, and Practice"}, {"link": "", "title": "ACDC: An algorithm for comprehension-driven clustering"}, {"link": "/document/1311061", "title": "An effectiveness measure for software clustering algorithms"}, {"link": "/document/624574", "title": "Using clustering algorithms in legacy systems remodularization"}, {"link": "/document/1510147", "title": "Comparison of clustering algorithms in the context of software evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693106"}
{"ref": [{"link": "", "title": "Introduction to Embedded Systems: A Cyber- Physical Systems Approach"}, {"link": "", "title": "The embedded systems design challenge"}, {"link": "/document/4221612", "title": "Software engineering for automotive systems: A roadmap"}, {"link": "", "title": "Scheduling of offset free systems"}, {"link": "/document/6140563", "title": "Multisource software on multicore automotive ECUs - Combining runnable sequencing with task scheduling"}, {"link": "", "title": "Real-time Systems"}, {"link": "/document/639042", "title": "The end of the line for static cyclic scheduling?"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of searchbased testing: Local, global, and hybrid search"}, {"link": "", "title": "Essentials of Metaheuristics"}, {"link": "", "title": "Using genetic algorithms for early schedulability analysis and stress testing in real-time systems"}, {"link": "", "title": "Schedulability analysis using UPPAAL: Herscehl-Planck case study"}, {"link": "", "title": "Modeling and analysis of CPU usage in safety-critical embedded systems to support stress testing"}, {"link": "", "title": "Autosar Metamodel Release 4.1"}, {"link": "", "title": "IBM ILOG CPLEX CP Optimizer"}, {"link": "", "title": "Constraint-Based Local Search"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Elementary Number Theory: Primes, Congruences, and Secrets: A Computational Approach"}, {"link": "", "title": ""}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Elementary Statistics for the Social Sciences: Study Guide"}, {"link": "", "title": "The worst-case execution-time problemoverview of methods and survey of tools"}, {"link": "", "title": "Software Model-based Performance Analysis"}, {"link": "/document/5753603", "title": "Enabling scheduling analysis for autosar systems"}, {"link": "", "title": "A survey of hard real-time scheduling for multiprocessor systems"}, {"link": "", "title": "Model-Based Framework for Schedulability Analysis Using UPPAAL 4.1"}, {"link": "", "title": "A tutorial on uppaal"}, {"link": "/document/6200183", "title": "Testing deadline misses for real-time systems using constraint optimization techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693110"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "The Parma Polyhedra Library: Toward a complete set of numerical abstractions for the analysis and verification of hardware and software systems"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "", "title": "Proceedings of the 25th International Conference on Software Engineering"}, {"link": "", "title": "Interval polyhedra: An abstract domain to infer interval linear relationships"}, {"link": "", "title": "Predicate abstraction of ANSI-C programs using SAT"}, {"link": "", "title": "An empirical study of Java bytecode programs"}, {"link": "", "title": "Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Systematic design of program analysis frameworks"}, {"link": "", "title": "Frama-C: A software analysis perspective"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "A flexible architecture for building data flow analyzers"}, {"link": "", "title": "BOA: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Predicate abstraction for software verification"}, {"link": "", "title": "Construction of abstract state graphs with PVS"}, {"link": "", "title": "Efficient predicate abstraction of program summaries"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": "A unified approach to global program optimization"}, {"link": "", "title": "SMT techniques for fast predicate abstraction"}, {"link": "", "title": "TSL: A system for generating abstract interpreters and its application to machine-code analysis"}, {"link": "", "title": "Modular abstractions of reactive nodes using disjunctive invariants"}, {"link": "", "title": "A modular, reusable library for dataflow analysis and transformation"}, {"link": "", "title": "Verification, Model Checking, and Abstract Interpretation"}, {"link": "", "title": "Abstract and model check while you prove"}, {"link": "", "title": "Bilateral algorithms for symbolic abstraction"}, {"link": "", "title": "Sharlit - a tool for building optimizers"}, {"link": "", "title": "Soot - a Java bytecode optimization framework"}, {"link": "", "title": "Green: Reducing, reusing and recycling constraints in program analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372048"}
{"ref": [{"link": "", "title": "Heuristic Evaluation of User Interfaces"}, {"link": "", "title": "Cognitive Walkthrough for the Web"}, {"link": "", "title": "FeedLack Detects Missing Feedback in Web Applications"}, {"link": "", "title": ""}, {"link": "", "title": "ASM Java Bytecode Manipulation and Analysis Framework"}, {"link": "", "title": "Google APIs Console Help"}, {"link": "", "title": "Android's UI/Application Exerciser Monkey"}, {"link": "", "title": "Android Getevent Tool"}, {"link": "", "title": "These Aren't the Droids You're Looking for: Retrofitting Android to Protect Data from Imperious Applications"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6234407", "title": "Dissecting Android Malware: Characterization and Evolution"}, {"link": "", "title": "Optimization of Object-Oriented Programs Using Static Class Hierarchy Analysis"}, {"link": "", "title": "Optimizing Java Bytecode Using the Soot Framework: Is It Feasible?"}, {"link": "", "title": "Information Flow Analysis of Android Applications in DroidSafe"}, {"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": ""}, {"link": "", "title": "AsDroid: Detecting Stealthy Behaviors in Android Applications by User Interface and Program Behavior Contradiction"}, {"link": "", "title": "Checking App Behavior against App Descriptions"}, {"link": "", "title": "User-Centric Dependence Analysis for Identifying Malicious Mobile Apps"}, {"link": "", "title": "TaintDroid: An Information-flow Tracking System for Realtime Privacy Monitoring on Smartphones"}, {"link": "", "title": "FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps"}, {"link": "", "title": "Android Taint Flow Analysis for App Sets"}, {"link": "", "title": "I Know What Leaked in Your Pocket: Uncovering Privacy Leaks on Android Apps with Static Taint Analysis"}, {"link": "", "title": "Mining Apps for Abnormal Usage of Sensitive Data"}, {"link": "", "title": "AppContext: Differentiating Malicious and Benign Mobile App Behavior Under Contexts"}, {"link": "", "title": "Information Flows as a Permission Mechanism"}, {"link": "", "title": "Visualization of Exception Propagation for Java Using Static Analysis"}, {"link": "", "title": "Interprocedural Exception Analysis for Java"}, {"link": "", "title": "Robustness Testing of Java Server Applications"}, {"link": "", "title": "Exception-Chain Analysis: Revealing Exception Handling Architecture in Java Server Applications"}, {"link": "", "title": "An Uncaught Exception Analysis for Java"}, {"link": "", "title": "Static Analysis for Java Exception Propagation Structure"}, {"link": "", "title": "Efficient and Effective Handling of Exceptions in Java Points-to Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372052"}
{"ref": [{"link": "", "title": "Prioritizing Web Usability"}, {"link": "", "title": "Usability evaluation methods for the web: A systematic mapping study"}, {"link": "", "title": "Handbook of Usability Testing: Howto Plan, Design, and Conduct Effective Tests"}, {"link": "", "title": "Business processes refactoring to improve usability in E-commerce applications"}, {"link": "", "title": "Automatic detection of usability smells in web applications"}, {"link": "", "title": "A crowdsourced approach for concern-sensitive integration of information across the web"}, {"link": "", "title": "SUS - A quick and dirty usability scale"}, {"link": "", "title": "Timelines for Mobile Web Usability Evaluation"}, {"link": "", "title": "WELFIT: A remote evaluation tool for identifying Web usage patterns through client-side logging"}, {"link": "", "title": "S.O.S.: Does Your Search Engine Results Page (SERP) Need Help?"}, {"link": "", "title": "Web Form Design: Filling in the Blanks"}, {"link": "", "title": "State of the Art of Web Usability Guidelines"}, {"link": "", "title": "\n            W3touch: Metrics-based\n            "}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115717"}
{"ref": [{"link": "", "title": "Demanddriven compositional symbolic execution"}, {"link": "", "title": "Calysto: Scalable and precise extended static checking"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "", "title": "SAT-based model checking without unrolling"}, {"link": "", "title": "Behavioral consistency of c and verilog programs using bounded model checking"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "", "title": "Compositional may-must program analysis: Unleashing the power of alternation"}, {"link": "", "title": "An axiomatic basis for computer programming"}, {"link": "", "title": "Interpolation-based software verification with wolverine"}, {"link": "", "title": "A solver for reachability modulo theories"}, {"link": "", "title": "Bugbench: Benchmarks for evaluating bug detection tools"}, {"link": "", "title": "On computing minimum unsatisfiable cores"}, {"link": "", "title": "Relevance heuristics for program analysis"}, {"link": "", "title": "Interpolation and SAT-based model checking"}, {"link": "", "title": "Lazy abstraction with interpolants"}, {"link": "", "title": "Lazy annotation for program testing and verification"}, {"link": "", "title": "A dataflow analysis to improve sat-based bounded program verification"}, {"link": "/document/5635077", "title": "Optimizing incremental scope-bounded checking with dataflow analysis"}, {"link": "", "title": "An incremental approach to scope-bounded checking using a lightweight formal method"}, {"link": "", "title": "Alternate and learn: Finding witnesses without looking all over"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6693074"}
{"ref": [{"link": "", "title": "SCT Benchmarks"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java PathFinder"}, {"link": "", "title": "Mutation Operators for Concurrent Java (J2SE 5.0)"}, {"link": "", "title": "Applications of Synchronization Coverage"}, {"link": "", "title": "A Randomized Scheduler with Probabilistic Guarantees of Finding Bugs"}, {"link": "", "title": "Radius Aware Probabilistic Testing of Deadlocks with Guarantees"}, {"link": "", "title": "Framework for testing multi-threaded Java programs"}, {"link": "", "title": "Multithreaded Java program test generation"}, {"link": "", "title": "Delay-bounded Scheduling"}, {"link": "", "title": "RacerX: Effective, Static Detection of Race Conditions and Deadlocks"}, {"link": "", "title": "Advances in noise-based testing of concurrent software"}, {"link": "/document/6693139", "title": "CSeq: A Concurrency Preprocessor for Sequential C Verification Tools"}, {"link": "", "title": "Efficient mutation testing of multithreaded code"}, {"link": "", "title": "MuTMuT: Efficient Exploration for Mutation Testing of Multithreaded Code"}, {"link": "", "title": "Selective Mutation Testing for Concurrent Code"}, {"link": "", "title": "Model Checking for Programming Languages using VeriSoft"}, {"link": "", "title": "Conc-iSE: Incremental Symbolic Execution of Concurrent Software"}, {"link": "", "title": "Model checking Java programs using Java PathFinder"}, {"link": "", "title": "Cloud-Based Verification of Concurrent Software"}, {"link": "", "title": "Testing of Concurrent Programs Using Genetic Algorithms"}, {"link": "", "title": "CalFuzzer: An Extensible Active Testing Framework for Concurrent Programs"}, {"link": "", "title": "A Randomized Dynamic Program Analysis Technique for Detecting Real Deadlocks"}, {"link": "", "title": "Coverage Metrics for Saturation-Based and Search-Based Testing of Concurrent Software"}, {"link": "", "title": "Noise Injection Heuristics for Concurrency Testing"}, {"link": "", "title": "A Platform for Search-based Testing of Concurrent Software"}, {"link": "", "title": "CBMC - C Bounded Model Checker"}, {"link": "/document/6693142", "title": "CCmutator: A Mutation Generator for Concurrency Constructs in Multithreaded C/C++ Applications"}, {"link": "", "title": "Detecting Atomic-set Serializability Violations in Multithreaded Programs Through Active Randomized Testing"}, {"link": "", "title": "A Study of Interleaving Coverage Criteria"}, {"link": "", "title": "Concurrent Software Testing in Practice: A Catalog of Tools"}, {"link": "", "title": "CHESS: A Systematic Testing Tool for Concurrent Software"}, {"link": "", "title": "Finding and Reproducing Heisenbugs in Concurrent Programs"}, {"link": "", "title": "Multicore Acceleration of Priority-based Schedulers for Concurrency Bug Detection"}, {"link": "", "title": "Effective Static Race Detection for Java"}, {"link": "", "title": "Effective Static Deadlock Detection"}, {"link": "", "title": "Randomized Active Atomicity Violation Detection in Concurrent Programs"}, {"link": "", "title": "KISS: Keep It Simple and Sequential"}, {"link": "", "title": "On the sum of the square roots of the first n natural numbers"}, {"link": "", "title": "Synthesizing Tests for Detecting Atomicity Violations"}, {"link": "", "title": "Synthesizing Racy Tests"}, {"link": "", "title": "Testing Concurrent Java Programs using Randomized Scheduling"}, {"link": "", "title": "Effective Random Testing of Concurrent Programs"}, {"link": "", "title": "Race Directed Random Testing of Concurrent Programs"}, {"link": "", "title": "CUTE and jCUTE: Concolic Unit Testing and Explicit Path Model-Checking Tools"}, {"link": "", "title": "Saturation-based Testing of Concurrent Programs"}, {"link": "", "title": "Applied Probability for Engineers and Scientists"}, {"link": "/document/126769", "title": "Structural Testing of Concurrent Programs"}, {"link": "", "title": "Concurrency Testing Using Schedule Bounding: An Empirical Study"}, {"link": "", "title": "Model Checking Programs"}, {"link": "", "title": "Coverage Guided Systematic Concurrency Testing"}, {"link": "", "title": "Race-driven Active Random Testing of Null-pointer Dereferences"}, {"link": "", "title": "Maple: A Coverage-driven Testing Tool for Multithreaded Programs"}, {"link": "", "title": "TACO: Test Suite Augmentation for Concurrent Programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115685"}
{"ref": [{"link": "", "title": "Caiipa: Automated Large-scale Mobile App Testing through Contextual Fuzzing"}, {"link": "", "title": "DECAF: Detecting and Characterizing Ad Fraud in Mobile Apps"}, {"link": "", "title": "Automatic and Scalable Fault Detection for Mobile Applications"}, {"link": "", "title": "Characterizing privacy risks of mobile apps with sensitivity analysis"}, {"link": "", "title": "Smartphone Energy Drain in the Wild: Analysis and Implications"}, {"link": "", "title": "Smartphone Background Activities in the Wild: Origin, Energy Drain, and Optimization"}, {"link": "", "title": "Revisiting Network Energy Efficiency of Mobile Apps: Performance in the Wild"}, {"link": "", "title": "AppProfiler: A Flexible Method of Exposing Privacy-Related Behavior in Android Applications to End Users"}, {"link": "", "title": "Android Restrict Background Data Usage"}, {"link": "", "title": "iOS Background App Refresh"}, {"link": "", "title": "Selectively Taming Background Android Apps to Improve Battery Lifetime"}, {"link": "", "title": "IC3: Inter-Component Communication Analysis for Android"}, {"link": "", "title": "An empirical study of the robustness of inter-component communication in android"}, {"link": "", "title": "Intent fuzzer"}, {"link": "", "title": "Intent Fuzzer: Crafting Intents of Death"}, {"link": "", "title": "IntentFuzzer: Detecting Capability Leaks of Android Applications"}, {"link": "", "title": "DroidFuzzer: Fuzzing the Android Apps with Intent-Filter Tag"}, {"link": "", "title": "Distributed Representations of Words and Phrases and their Compositionality"}, {"link": "/document/92910", "title": "Constraint-based Automatic Test Data Generation"}, {"link": "", "title": "Context-aware Application Scheduling in Mobile Systems: What Will Users Do and Not Do Next?"}, {"link": "", "title": "Android Services"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "Xposed"}, {"link": "/document/1017616", "title": "An Efficient k-Means Clustering Algorithm: Analysis and Implementation"}, {"link": "", "title": "Word2Vec Toolkit"}, {"link": "", "title": "Entrack: A System Facility for Analyzing Energy Consumption of Android System Services"}, {"link": "", "title": "Androguard"}, {"link": "", "title": "Genymotion"}, {"link": "/document/7299958", "title": "Towards black box testing of android apps"}, {"link": "", "title": "Jacoco java code coverage library"}, {"link": "", "title": "IC3"}, {"link": "", "title": "A Survey on Automatic Test Data Generation"}, {"link": "", "title": "Wireshark"}, {"link": "", "title": "Appium"}, {"link": "", "title": "UI Automator Viewer"}, {"link": "", "title": "PUMA: Programmable UI-Automation for Large-Scale Dynamic Analysis of Mobile Apps"}, {"link": "", "title": "RERAN: Timing-and Toch-Sensitive Record and Replay for Android"}, {"link": "", "title": "Testflight"}, {"link": "", "title": "AMC: Verifying User Interface Properties for Vechicular Applications"}, {"link": "", "title": "SmartDroid: an Automatic System for Revealing UI-based Trigger Conditions in Android Applications"}, {"link": "", "title": "Towards a contextual and scalable automated-testing service for mobile apps"}, {"link": "", "title": "Analyzing Inter-Application Communication in Android"}, {"link": "", "title": "IccTA: Detecting Inter-Component Privacy Leaks in Android Apps"}, {"link": "", "title": "Vision: Automated Security Validation of Mobile Apps at App Markets"}, {"link": "", "title": "Effective Inter-Component Communication Mapping in Android with Epicc: An Essential Step Towards Holistic Security Analysis"}, {"link": "", "title": "What is keeping my phone awake? Characterizing and Detecting No-Sleep Energy Bugs in Smartphone Apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115613"}
{"ref": [{"link": "", "title": "The KeY Platform for Verification and Analysis of Java Programs"}, {"link": "", "title": "SELECT\u2500"}, {"link": "", "title": "Program proving as hand simulation with a little induction"}, {"link": "", "title": "Integrating Symbolic Execution, Debugging and Verification"}, {"link": "", "title": "Symbolic Execution Debugger (SED)"}, {"link": "", "title": "An Empirical Evaluation of Two User Interfaces of an Interactive Program Verifier"}, {"link": "", "title": "An Interactive Verification Tool Meets an IDE"}, {"link": "", "title": "The VeriFast program verifier"}, {"link": "", "title": "A Quick Tour of the VeriFast Program Verifier"}, {"link": "", "title": "Towards automatic debugging of programs"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "The Boogie Verification Debugger"}, {"link": "", "title": "JML Reference Manual"}, {"link": "", "title": "Usable Auto-Active verification"}, {"link": "", "title": "Structured specifications and interactive proofs with KIV"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582826"}
{"ref": [{"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Little brothers watching you: Raising awareness of data leaks on smartphones"}, {"link": "", "title": "TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Graph-aided directed testing of android applications for checking runtime privacy behaviours"}, {"link": "", "title": "Leveraging automated privacy checking for design of mobile privacy protection mechanisms"}, {"link": "", "title": "The case for mobile forensics of private data leaks: Towards large-scale user-oriented privacy protection"}, {"link": "", "title": "Amc: Verifying user interface properties for vehicular applications"}, {"link": "", "title": "Decaf: detecting and characterizing ad fraud in mobile apps"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Appsplayground: automatic security analysis of smartphone applications"}, {"link": "", "title": "Automatic and scalable fault detection for mobile applications"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in android applications"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582832"}
{"ref": [{"link": "", "title": "Natural language parsing of program element names for concept extraction"}, {"link": "", "title": "Hierarchical clustering of metamodels for comparative analysis and visualization"}, {"link": "", "title": "Towards statistical comparison and analysis of models"}, {"link": "", "title": "Automated clustering of metamodel repositories"}, {"link": "", "title": "Textual and content-based search in repositories of web application models"}, {"link": "", "title": "A manifesto for model merging"}, {"link": "", "title": "Similarity of business process models: Metrics and evaluation"}, {"link": "", "title": "Family model mining for function block diagrams in automation software"}, {"link": "/document/6676883", "title": "Exploring the limits of domain model recovery"}, {"link": "", "title": "A research roadmap towards achieving scalability in model driven engineering"}, {"link": "", "title": "Semantic clustering: Identifying topics in source code"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "/document/4493315", "title": "Extracting domain ontologies from domain specific apis"}, {"link": "", "title": "N-way model merging"}, {"link": "", "title": "A survey of model comparison approaches and applications"}, {"link": "", "title": "Tool support for clustering large meta-models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582834"}
{"ref": [{"link": "/document/7332473", "title": "Exploring API method parameter recommendations"}, {"link": "", "title": "A structured approach to assess third-party library usage"}, {"link": "", "title": "Advanced web API search patterns adding collective knowledge to public repository facets"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Improving IR-based traceability recovery via noun-based indexing of software artifacts"}, {"link": "", "title": "Searching connected API subgraph via text phrases"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Optimizing search engines using clickthrough data"}, {"link": "", "title": "Large-scale, AST-based API-usage analysis of open-source Java projects"}, {"link": "", "title": "API hyperlinking via structural overlap"}, {"link": "", "title": "Jungloid mining: helping to navigate the API jungle"}, {"link": "/document/6227134", "title": "Recommending source code for use in rapid software prototypes"}, {"link": "/document/7194634", "title": "How can i use this method?"}, {"link": "", "title": "Improving code completion with program history"}, {"link": "", "title": "Automatic generation of suggestions for program investigation"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "", "title": "Recommending random walks"}, {"link": "", "title": "Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation"}, {"link": "", "title": "Mining library migration graphs"}, {"link": "", "title": "Parseweb: a programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Automatic recommendation of API methods from feature requests"}, {"link": "/document/6671293", "title": "Automated library recommendation"}, {"link": "/document/6227136", "title": "Automatic parameter recommendation for practical API usage"}, {"link": "", "title": "Flow-augmented call graph: A new foundation for taming API complexity"}, {"link": "", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582836"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582738"}
{"ref": [{"link": "", "title": "Processing natural language requirements"}, {"link": "", "title": "UML model smells and model refactorings in early software development phases"}, {"link": "", "title": "Object Oriented Analysis & Design with Application"}, {"link": "", "title": "Object-oriented software engineering; conquering complex and changing systems"}, {"link": "", "title": "Semi-automatic generation of UML models from natural language requirements"}, {"link": "", "title": "Software modeling and design: UML, use cases, patterns, and software architectures"}, {"link": "", "title": "Cm-builder: A natural language-based case tool for object-oriented analysis"}, {"link": "", "title": "MDA explained: the model driven architecture: practice and promise"}, {"link": "/document/268955", "title": "Understanding quality in conceptual modeling"}, {"link": "", "title": "Natural language requirements analysis and class model generation using UCDA"}, {"link": "", "title": "Definitions and approaches to model quality in model-based software development-a review of literature"}, {"link": "", "title": "Object-Oriented Analysis and Design Understanding System Development with UML 2.0"}, {"link": "/document/919113", "title": "Conceptual modeling through linguistic analysis using LIDA"}, {"link": "", "title": "Reducing ambiguities in requirements specifications via automatically created object-oriented models"}, {"link": "", "title": "Patterns of English"}, {"link": "", "title": "Use case driven object modeling with UML"}, {"link": "", "title": "Use Case Driven Object Modeling with UML: Theory and Practice"}, {"link": "", "title": "Generating a domain model from a use case model"}, {"link": "", "title": "Automatic generation of sequence diagram from use case specification"}, {"link": "", "title": "Automatic generation of analysis class diagrams from textual specifications"}, {"link": "", "title": "Identifying domain elements from textual specifications"}, {"link": "", "title": "Automatically deriving a UML analysis model from a use case model"}, {"link": "", "title": "atoucan: An automated framework to derive UML analysis models from use case models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582823"}
{"ref": [{"link": "", "title": "An architecture based on interactive optimization and machine learning applied to the next release problem"}, {"link": "", "title": "The next release problem"}, {"link": "", "title": "Requirements prioritization"}, {"link": "", "title": "A lagrangian heuristic for sprint planning in agile software development"}, {"link": "", "title": "A multiobjective optimization approach to the software release planning with undefined number of releases and interdependent requirements"}, {"link": "", "title": "Release planning in market-driven software product development: Provoking an understanding"}, {"link": "", "title": "An industrial survey of requirements interdependencies in software product release planning"}, {"link": "/document/6165315", "title": "Ant colony optimization for software project scheduling and staffing with an event-based scheduler"}, {"link": "", "title": "Requirements interdependencies - moulding the state of research into a research agenda"}, {"link": "", "title": "Requirements interdependencies: state of the art and future challenges"}, {"link": "/document/5635181", "title": "Ant colony optimization for the next release problem: A comparative study"}, {"link": "", "title": "A search based approach to fairness analysis in requirement assignments to aid negotiation, mediation and decision making"}, {"link": "", "title": "Software next release planning approach through exact optimization"}, {"link": "", "title": "Software release planning: an evolutionary and iterative approach"}, {"link": "", "title": "Exact scalable sensitivity analysis for the next release problem"}, {"link": "", "title": "A hybrid aco algorithm for the next release problem"}, {"link": "/document/687950", "title": "Optimizing value and cost in requirements analysis"}, {"link": "/document/605933", "title": "A costvalue approach for prioritizing requirements"}, {"link": "", "title": "Software requirements selection using quantum-inspired elitist multi-objective evolutionary algorithm"}, {"link": "", "title": "An integrated approach for requirement selection and scheduling in software release planning"}, {"link": "", "title": "Partial selection of agile software requirements"}, {"link": "/document/4641940", "title": "Optimized resource allocation for software release planning"}, {"link": "", "title": "Risk-aware multi-stakeholder next release planning using multi-objective optimization"}, {"link": "/document/895989", "title": "Toward reference models for requirements traceability"}, {"link": "", "title": "Requirements interaction management"}, {"link": "", "title": "Product Release Planning: Methods, Tools and Applications"}, {"link": "", "title": "Trade-off analysis for requirements selection"}, {"link": "", "title": "Quantitative studies in software release planning under risk and resource constraints"}, {"link": "", "title": "Approximation methods in multiobjective programming"}, {"link": "", "title": "Multiobjective ant colony optimization for requirements selection"}, {"link": "", "title": "Interactive requirements prioritization using a genetic algorithm"}, {"link": "", "title": "Flexible release planning using integer linear programming"}, {"link": "", "title": "Quantitative release planning in extreme programming"}, {"link": "", "title": "An integer linear programming approach to the single and bi-objective next release problem"}, {"link": "", "title": "A simulation approach for impact analysis of requirement volatility considering dependency change"}, {"link": "/document/6261327", "title": "Solving the large scale next release problem with a backbone-based multilevel algorithm"}, {"link": "", "title": "Search based optimization of requirements interaction management"}, {"link": "", "title": "Comparing the performance of metaheuristics for the analysis of multi-stakeholder tradeoffs in requirements optimisation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582833"}
{"ref": [{"link": "", "title": "All the services large and micro: Revisiting industrial practice in services computing"}, {"link": "", "title": "The making of cloud applications: An empirical study on software development for the cloud"}, {"link": "", "title": "Belief & evidence in empirical software engineering"}, {"link": "", "title": "How Software Developers Re-ally Spend Their Time"}, {"link": "", "title": "Runtime Metric meets Developer - Building better Cloud Applications using Feedback"}, {"link": "", "title": "Coping with uncertainty: A naturalistic decision-making analysis"}, {"link": "", "title": "Patterns in the Chaos - a Study of Performance Variation and Predictability in Public IaaS Clouds"}, {"link": "", "title": "Analytics for software development"}, {"link": "/document/6547143", "title": "A retrospective study of software analyticsc projects: In-depth interviews with practitioners"}, {"link": "", "title": "Data mining for software engineering and humans in the loop"}, {"link": "", "title": "Does bug prediction support human developers? findings from a google case study"}, {"link": "/document/6559957", "title": "Software analyticsin practice"}, {"link": "/document/6650523", "title": "Performance evolution blueprint: Understanding the impact of software evolution on performance"}, {"link": "/document/7465264", "title": "Visual monitoring of process runs: An application study for stored procedures"}, {"link": "/document/5306302", "title": "Augmenting static source views in ides with dynamic metrics"}, {"link": "/document/7081872", "title": "Understanding software performance regressions using differential flame graphs"}, {"link": "/document/5441291", "title": "A controlled experiment for program comprehension through trace visualization"}, {"link": "", "title": "Explorviz: Visual runtime behavior analysis of enterprise application landscapes"}, {"link": "/document/6613834", "title": "In situ understanding of performance bottlenecks through visually augmented code"}, {"link": "", "title": "A review of software change impact analysis"}, {"link": "", "title": "The palladio component model for model-driven performance prediction"}, {"link": "", "title": "Deriving work plans for solving performance and scalability problems"}, {"link": "", "title": "Mining performance regression inducing code changes in evolving software"}, {"link": "", "title": "Identi-fying Root-Causes of Web Performance Degradation using Changepoint Analysis"}, {"link": "", "title": "Decision making and planning under low levels of predictability: Enhancing the scenario method"}, {"link": "/document/6227159", "title": "Partial models: Towards modeling and reasoning with uncertainty"}, {"link": "", "title": "Uncertainty, risk, and information value in software requirements and architecture"}, {"link": "", "title": "Dealing with uncertainties in the performance modelling of software systems"}, {"link": "", "title": "The value of variance"}, {"link": "", "title": "Interval parameters for capturing uncertainties in an EJB performance model"}, {"link": "", "title": "A practical approach to uncertainty handling and estimate acquisition in model-based prediction of system quality"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582835"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582737"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582739"}
{"ref": [{"link": "", "title": "Fast algorithms for mining association rules"}, {"link": "", "title": "Searching connected api subgraph via text phrases"}, {"link": "/document/7476655", "title": "Mining analogical libraries in q&a discussions -incorporating relational and categorical knowledge into word embedding"}, {"link": "", "title": "Towards correlating search on google and asking on stack overflow"}, {"link": "", "title": "Mining technology landscape from stack overflow"}, {"link": "", "title": "Techland: Assisting technology landscape inquiries with insights from stack overflow"}, {"link": "", "title": "Google analytics policy"}, {"link": "", "title": "Exploiting wikipediaas external knowledge for named entity recognition"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Linguistic regularities in continuous space word representations"}, {"link": "", "title": "Statistical learning approach for mining api usage mappings for code migration"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Mining library migration graphs"}, {"link": "/document/6671294", "title": "Automatic discovery of function mappings between similar libraries"}, {"link": "", "title": "Automated library recommendation"}, {"link": "/document/6693088", "title": "Automatic recommendation of api methods from feature requests"}, {"link": "", "title": "Jungloid mining: Helping to navigate the api jungle"}, {"link": "", "title": "Mining api mapping for language migration"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582824"}
{"ref": [{"link": "", "title": "Regression verification using impact summaries"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "A framework to synergize partial order reduction with state interpolation"}, {"link": "", "title": "Cloud9: a software testing service"}, {"link": "", "title": "A Discipline of Programming"}, {"link": "", "title": "Con2colic testing"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "/document/6100134", "title": "BEST: A symbolic testing tool for predicting multi-threaded program failures"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems - An Approach to the State-Explosion Problem"}, {"link": "", "title": "Assertion guided symbolic execution of multithreaded programs"}, {"link": "", "title": "The art of testing less without sacrificing quality"}, {"link": "", "title": "muZ - an efficient engine for fixed points with constraints"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "Boosting concolic testing via interpolation"}, {"link": "", "title": "Change-aware preemption prioritization"}, {"link": "", "title": "Universal Causality Graphs: A precise happens-before model for detecting bugs in concurrent programs"}, {"link": "", "title": "CONTESSA: Concurrency testing augmented with symbolic analysis"}, {"link": "", "title": "Assertion guided abstraction: a cooperative optimization for dynamic partial order reduction"}, {"link": "", "title": "Differential assertion checking"}, {"link": "", "title": "Context-sensitive program analysis as database queries"}, {"link": "", "title": "The LLVM Compiler Framework and Infrastructure Tutorial"}, {"link": "", "title": "A taxonomy for software change impact analysis"}, {"link": "", "title": "Dynamic analysis and debugging of binary code for security applications"}, {"link": "", "title": "Lazy annotation for program testing and verification"}, {"link": "", "title": "Conditional must not aliasing for static race detection"}, {"link": "", "title": "Effective static race detection for java"}, {"link": "", "title": "Non-blocking data structures."}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "/document/1357803", "title": "Dex: A semantic-graph differencing tool for studying changes in large code bases"}, {"link": "/document/6405261", "title": "A change impact analysis to characterize evolving program behaviors"}, {"link": "", "title": "Scalable Automated Methods for Dynamic Program Analysis"}, {"link": "", "title": "Staged concurrent program analysis"}, {"link": "", "title": "On interference abstractions"}, {"link": "", "title": "Marathon: Detecting atomic-set serializability violations with conflict graphs"}, {"link": "", "title": "SV-COMP. 2015 software verification competition."}, {"link": "", "title": "RECONTEST: Effective regression testing of concurrent programs"}, {"link": "", "title": "Associating synchronization constraints with data in an object-oriented language"}, {"link": "", "title": "Symbolic pruning of concurrent program executions"}, {"link": "", "title": "Symbolic predictive analysis for concurrent programs"}, {"link": "", "title": "Peephole partial order reduction"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "/document/6405338", "title": "A software change impact analysis taxonomy"}, {"link": "", "title": "Property differencing for incremental checking"}, {"link": "", "title": "Identifying syntactic differences between two programs"}, {"link": "", "title": "Postconditioned symbolic execution"}, {"link": "", "title": "SimRT: an automated framework to support regression testing for data races"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582788"}
{"ref": [{"link": "", "title": "UML model smells and model refactorings in early software development phases"}, {"link": "/document/1650213", "title": "The impact of UML documentation on software maintenance: An experimental evaluation"}, {"link": "/document/1316869", "title": "Evaluating the effect of a delegated versus centralized control style on the maintainability of object-oriented software"}, {"link": "", "title": "Object Oriented Analysis & Design with Application"}, {"link": "", "title": "Object-oriented software engineering; conquering complex and changing systems"}, {"link": "", "title": "Parsing to stanford dependencies: Trade-offs between speed and accuracy"}, {"link": "", "title": "Heuristics for use case descriptions"}, {"link": "", "title": "The stanford typed dependencies representation"}, {"link": "", "title": "Semi-automatic generation of UML models from natural language requirements"}, {"link": "", "title": "Oxford guide to English grammar"}, {"link": "", "title": "The linguistic approach to the natural language requirements quality benefit of the use of an automatic tool"}, {"link": "", "title": "Software modeling and design: UML, use cases, patterns, and software architectures"}, {"link": "", "title": "Cm-builder: A natural language-based case tool for object-oriented analysis"}, {"link": "", "title": "Mental representations of programs for student and professional programmers"}, {"link": "", "title": "Oxford advanced learner's dictionary of current English"}, {"link": "", "title": "Using students as subjects - a comparative study of students and professionals in lead-time impact assessment"}, {"link": "/document/1691356", "title": "Models derived from automatically analyzed textual user requirements"}, {"link": "", "title": "Object-oriented software engineering: a use case driven approach"}, {"link": "", "title": "Taming ambiguity in natural language requirements"}, {"link": "", "title": "Stanford's multi-pass sieve coreference resolution system at the conll-2011 shared task"}, {"link": "", "title": "Naturallanguage requirements analysis and class model generation using ucda"}, {"link": "", "title": "Part-of-speech tagging from 97% to 100%: is it time for some linguistics?"}, {"link": "", "title": "Effective self-training for parsing"}, {"link": "", "title": "Entity disambiguation in natural language text requirements"}, {"link": "", "title": "Definitions and approaches to model quality in model-based software development-a review of literature"}, {"link": "", "title": "Making inconsistency respectable in software development"}, {"link": "", "title": "Object-Oriented Analysis and Design Understanding System Development with UML 2.0"}, {"link": "/document/919113", "title": "Conceptual modeling through linguistic analysis using LIDA"}, {"link": "", "title": "Reducing ambiguities in requirements specifications via automatically created object-oriented models"}, {"link": "", "title": "Comparing detection methods for software requirements inspections: A replication using professional subjects"}, {"link": "", "title": "Patterns of English"}, {"link": "", "title": "Use case driven object modeling with UML"}, {"link": "", "title": "Use Case Driven Object Modeling with UML: Theory and Practice"}, {"link": "", "title": "Generating a domain model from a use case model"}, {"link": "/document/1514443", "title": "A survey of controlled experiments in software engineering"}, {"link": "", "title": "Anmodeler - a tool for generating domain models from textual specifications"}, {"link": "", "title": "Automatic generation of analysis class diagrams from textual specifications"}, {"link": "", "title": "Oxford advanced learner's dictionary of current English"}, {"link": "", "title": "Software requirements"}, {"link": "", "title": "Empirical research methods in software engineering"}, {"link": "", "title": "Experimentation in software engineering"}, {"link": "/document/5636921", "title": "Extending nocuous ambiguity analysis for anaphora in natural language requirements"}, {"link": "", "title": "Automatically deriving a UML analysis model from a use case model"}, {"link": "", "title": "Facilitating the transition from use case models to analysis models: Approach and experiments"}, {"link": "", "title": "atoucan: An automated framework to derive UML analysis models from use case models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582792"}
{"ref": [{"link": "", "title": "Data clustering; algorithms and applications"}, {"link": "/document/7102581", "title": "Behind an application firewall, are we safe from sql injection attacks"}, {"link": "", "title": "Automated testing for sql injection vulnerabilities: An input mutation approach"}, {"link": "", "title": "Security oracle based on tree kernel methods"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "Candid: Dynamic candidate evaluations for automatic prevention of sql injection attacks"}, {"link": "", "title": "Using parse tree validation to prevent sql injection attacks"}, {"link": "", "title": "Vulnerability type distributions in cve"}, {"link": "", "title": "Locating software features in a soa composite application"}, {"link": "", "title": "A classification of sql-injection attacks and countermeasures"}, {"link": "", "title": "Amnesia: analysis and monitoring for neutralizing sql-injection attacks"}, {"link": "", "title": "The sql injection threat study"}, {"link": "", "title": "Data clustering: 50 years beyond k-means"}, {"link": "", "title": "Sql-ids: a specification-based approach for sql-injection detection"}, {"link": "/document/5070521", "title": "Automatic creation of sql injection and cross-site scripting attacks"}, {"link": "", "title": "A survey on sql injection: Vulnerabilities, attacks, and prevention techniques"}, {"link": "", "title": "Sqlprob: A proxy-based architecture towards preventing sql injection attacks"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Enisa threat landscape"}, {"link": "", "title": "Combining model-based and combinatorial testing for effective test case generation"}, {"link": "", "title": "idmas-sql: intrusion detection based on mas to detect and block sql injection through data mining"}, {"link": "", "title": "Clustering rules: A comparison of partitioning and hierarchical clustering algorithms"}, {"link": "", "title": "Fast algorithms for the unit cost editing distance between trees"}, {"link": "", "title": "The essence of command injection attacks in web applications"}, {"link": "", "title": "Interpolated n-grams for model based testing"}, {"link": "", "title": "A learning-based approach to the detection of sql attacks"}, {"link": "", "title": "Management of an AcademicHPC Cluster: The UL Experience"}, {"link": "", "title": "Owasp, top 10, the ten most critical web application security risks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582755"}
{"ref": [{"link": "", "title": "Defacto: Language-parametric fact extraction from source code"}, {"link": "", "title": "Relational programming with crocopat"}, {"link": "", "title": "Inter-procedural data-flow analysis with ifds/ide and soot"}, {"link": "", "title": "Eco: A Language Composition Editor"}, {"link": "", "title": "Giga-scale Exhaustive Points-to Analysis for Java in Under a Minute"}, {"link": "", "title": "Context-sensitive Interprocedural Points-to Analysis in the Presence of Function Pointers"}, {"link": "", "title": "Language Composition Untangled"}, {"link": "", "title": "Evaluating and comparing language workbenches"}, {"link": "", "title": "Streamlining Control Flow Graph Construction with DCFlow"}, {"link": "", "title": "Binary relational algebra applied to software architecture"}, {"link": "", "title": "A Unified Approach to Global Program Optimization"}, {"link": "", "title": "Evaluating the use of domain-specific modeling in practice"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "", "title": "A Categorized Bibliography on Incremental Computation"}, {"link": "", "title": "Refinement-based Context-sensitive Points-to Analysis for Java"}, {"link": "", "title": "Soot - a Java Bytecode Optimization Framework"}, {"link": "", "title": "Webdsl: A case study in domain-specific language engineering"}, {"link": "", "title": "Language and IDE Modularization and Composition with MPS"}, {"link": "", "title": "mbeddr: Instantiating a language workbench in the embedded software domain"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582830"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "IBM Rational Software Architect"}, {"link": "/document/1707667", "title": "Incremental Maintenance of Software Artifacts"}, {"link": "/document/469759", "title": "The 4+1 View Model of Architecture"}, {"link": "", "title": "Viewpoints: A Framework for Integrating Multiple Perspectives in System Development"}, {"link": "", "title": "Consistency Checking for Multiple View Software Architectures"}, {"link": "/document/4221611", "title": "Model-driven Development of Complex Software: A Research Roadmap"}, {"link": "", "title": "Inconsistency Handling in Multi-Perspective Specifications"}, {"link": "", "title": "Global consistency checking of distributed models with TReMer+"}, {"link": "/document/5432227", "title": "Automatically detecting and tracking inconsistencies in software design models"}, {"link": "", "title": "Flexible and scalable consistency checking on product line variability models"}, {"link": "", "title": "xlinkit: a Consistency Checking and Smart Link Generation Service"}, {"link": "", "title": "Towards Model-and-Code Consistency Checking"}, {"link": "/document/6205768", "title": "Generating Domain-Specific Visual Language Tools from Abstract Visual Specifications"}, {"link": "", "title": "DesignSpace - An Infrastructure for Multi-User/Multi-Tool Engineering"}, {"link": "", "title": "Incremental Consistency Checking for Complex Design Rules and Larger Model Changes"}, {"link": "", "title": "Incremental Detection of Model Inconsistencies Based on Model Operations"}, {"link": "", "title": ""}, {"link": "", "title": "Instant consistency checking for the UML"}, {"link": "", "title": "OMG"}, {"link": "/document/5432227", "title": "Automatically detecting and tracking inconsistencies in software design models"}, {"link": "", "title": "Incremental consistency checking for pervasive context"}, {"link": "", "title": "Flexible consistency checking"}, {"link": "", "title": "Relational programming with CrocoPat"}, {"link": "", "title": "RDF /XML Syntax Specification (Revised)"}, {"link": "", "title": "EMFStore: a model repository for EMF models"}, {"link": "", "title": "Evolution control in MDE projects: Controlling model and code co-evolution"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Version control with subversion - next generation open source version control. O'Reilly"}, {"link": "", "title": "EMF: Eclipse Modeling Framework 2.0"}, {"link": "", "title": "Model/analyzer: a tool for detecting, visualizing and fixing design errors in UML"}, {"link": "/document/310667", "title": "Inconsistency handling in multperspective specifications"}, {"link": "/document/4384185", "title": "Consistency checking of conceptual models via model merging"}, {"link": "", "title": "A systematic review of UML model consistency management"}, {"link": "", "title": "Detecting model inconsistency through operation-based model construction"}, {"link": "", "title": "A survey on model versioning approaches"}, {"link": "", "title": "Conflict Detection for Model Versioning Based on Graph Modifications"}, {"link": "", "title": "Managing Model Conflicts in Distributed Development"}, {"link": "", "title": "Version Control with Git - Powerful techniques for centralized and distributed project management. O'Reilly"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582794"}
{"ref": [{"link": "", "title": "Test report prioritization to assist crowdsourced testing"}, {"link": "/document/4658083", "title": "Automated severity assessment of software defect reports"}, {"link": "", "title": "Drone: Predicting priority of reported bugs by multi-factor analysis"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "", "title": "Combining text mining and data mining for bug report classification"}, {"link": "", "title": "Active learning literature survey"}, {"link": "", "title": "A sequential algorithm for training text classifiers"}, {"link": "", "title": "Dataset shift in machine learning"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}, {"link": "", "title": "Analyzing and handling local bias for calibrating parametric cost estimation models"}, {"link": "", "title": "Cross-project defect prediction: A large scale experiment on data vs. domain vs. process"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "/document/6363444", "title": "Local versus global lessons for defect prediction and effort estimation"}, {"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "Comparison of distance measures in cluster analysis with dichotomous data"}, {"link": "/document/6747346", "title": "Active learning by querying informative and representative examples"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "How to make best use of cross-company data in software effort estimation?"}, {"link": "", "title": "Unsupervised change analysis using supervised learning"}, {"link": "", "title": "Supervised machine learning: A review of classification techniques"}, {"link": "", "title": "An overview of data mining techniques"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Two's company, three's a crowd: A case study of crowdsourcing software development"}, {"link": "", "title": "Puzzle-based automatic testing: Bringing humans into the loop by solving puzzles"}, {"link": "/document/6509371", "title": "Leveraging the crowd: How 48,000 users helped improve lync performance"}, {"link": "", "title": "Affective crowdsourcing applied to usability testing"}, {"link": "", "title": "Reproducing context-sensitive crashes of mobile apps using crowdsourced monitoring"}, {"link": "", "title": "Towards effectively test report classification to assist crowdsourced testing"}, {"link": "", "title": "Categorizing bugs with social networks: A case study on four open source software communities"}, {"link": "", "title": "FixerCache: Unsupervised caching active developers for diverse bug triage"}, {"link": "", "title": "Developer recommendation for crowdsourced software development tasks"}, {"link": "/document/7320414", "title": "Bug report, feature request, or simply praise? On automatically classifying app reviews"}, {"link": "/document/7372065", "title": "Ensemble methods for app review classification: An approach for software evolution"}, {"link": "/document/7332474", "title": "How can i improve my app? Classifying user reviews for software maintenance and evolution"}, {"link": "", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "", "title": "AppContext: Differentiating malicious and benign mobile app behaviors using context"}, {"link": "", "title": "Batchrank: A novel batch mode active learning framework for hierarchical classification"}, {"link": "", "title": "Active learning for automatic classification of software behavior"}, {"link": "", "title": "Active refinement of clone anomaly reports"}, {"link": "", "title": "Active Code search: Incorporating user feedback to improve code search relevance"}, {"link": "/document/7181433", "title": "Active semi-supervised defect categorization"}, {"link": "", "title": "Active semi-supervised approach for checking app behavior against its description"}, {"link": "/document/6392173", "title": "Active learning and effort estimation: Finding the essential content of software effort estimation data"}, {"link": "", "title": "CLAMI: Defect prediction on unlabeled datasets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582757"}
{"ref": [{"link": "", "title": "1Sheeld: The Arduino Shield"}, {"link": "", "title": ""}, {"link": "", "title": "Android - Proximity Sensor Accuracy - Stack Overflow"}, {"link": "", "title": "Android Fragmentation Visualized"}, {"link": "", "title": "Android Interfaces and Architecture"}, {"link": "", "title": "Android Open Source Project - Issue Tracker"}, {"link": "", "title": "Android's Fragmentation Problem"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "FicFinder Project Website"}, {"link": "", "title": ""}, {"link": "", "title": "Google Code"}, {"link": "", "title": "iNaturalistAndroid"}, {"link": "", "title": "IrssiN otifier"}, {"link": "", "title": "K9-Mail"}, {"link": "", "title": ""}, {"link": "", "title": "On Android Compatibility"}, {"link": "", "title": "Open GPS Tracker"}, {"link": "", "title": "Open VPN for Android"}, {"link": "", "title": "own Cloud"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Position Sensors | Android Developers"}, {"link": "", "title": ""}, {"link": "", "title": "Smartphone OS Market Share"}, {"link": "", "title": "Stack OverFlow"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "VLC Bug Tracker"}, {"link": "", "title": "WordPress for Android"}, {"link": "/document/7372031", "title": "Automated Test Input Generation for Android: Are We There Yet?(E)"}, {"link": "", "title": "Qualitative Inquiry and Research Design: Choosing Among Five Approaches"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Call Graph Construction in Object-Oriented Languages"}, {"link": "", "title": "Mosaic: Cross-Platform User-Interaction Record and Replay for the Fragmented Android Ecosystem"}, {"link": "", "title": "Designing Knowledge Base Mobile Application Compatibility Test System for Android Fragmentation"}, {"link": "", "title": "Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs"}, {"link": "", "title": "Making Apps Useable on Multiple Different Mobile Platforms: On Interoperability for Business Application Development on Smartphones"}, {"link": "", "title": "Real Challenges in Mobile App Development"}, {"link": "", "title": "Testdroid: Automated Remote UI Testing on Android"}, {"link": "", "title": "Prioritizing the Devices to Test Your App on: A Case Study of Android Game Apps"}, {"link": "", "title": "Automated Unit Testing of Large Industrial Embedded Software Using Concolic Testing"}, {"link": "", "title": "The Soot Framework for Java Program Analysis: A Retrospective"}, {"link": "", "title": "Characterizing Smartphone Usage Patterns from Millions of Android Users"}, {"link": "", "title": "API Change and Fault Proneness: A Threat to the Success of Android Apps"}, {"link": "", "title": "How Do API Changes Trigger Stack Overflow Discussions? A Study on the Android SDK"}, {"link": "", "title": "Characterizing and Detecting Performance Bugs for Smartphone Applications"}, {"link": "", "title": "PRADA: Prioritizing Android Devices for Apps by Mining Large-Scale Usage Data"}, {"link": "", "title": "An Empirical Study of API Stability and Adoption in the Android Ecosystem"}, {"link": "", "title": "The State of the Art of Mobile Application Usability Evaluation"}, {"link": "", "title": "Bootstrapping Energy Debugging on Smartphones: A First Look at Energy Bugs in Mobile Devices"}, {"link": "/document/7332476", "title": "What are the Characteristics of High-Rated Apps? A Case Study on Free Android Applications"}, {"link": "/document/6825641", "title": "Using Combinatorial Approaches for Testing Mobile Applications"}, {"link": "", "title": "The Impact of Vendor Customizations on Android Security"}, {"link": "", "title": "Challenges, Methodologies, and Issues in the Usability Testing of Mobile Applications"}, {"link": "/document/6956578", "title": "The Peril of Fragmentation: Security Hazards in Android Device Driver Customizations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582761"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Amazon. Amazon elastic compute cloud"}, {"link": "", "title": "Lightweight static analysis for GUI testing"}, {"link": "", "title": "Reducing GUI test suites via program slicing"}, {"link": "", "title": "Event listener analysis and symbolic execution for testing GUI applications"}, {"link": "", "title": "Partial order reduction for event-driven multi-threaded programs"}, {"link": "/document/6100131", "title": "JPF-AWT: Model checking GUI applications"}, {"link": "", "title": "DART: A framework for regression testing \u201cnightly/-daily builds\u201d of GUI applications"}, {"link": "", "title": "GUITAR: an innovative tool for automated testing of GUI-driven software"}, {"link": "", "title": "A method to automate user interface testing using variable finite state machines"}, {"link": "", "title": "TesMa and CATG: automated test generation tools for models of enterprise applications"}, {"link": "", "title": "Generating test cases for GUI responsibilities using complete interaction sequences"}, {"link": "", "title": "Using a pilot study to derive a GUI model for automated testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582828"}
{"ref": [{"link": "", "title": "Improving test generation under rich contracts by tight bounds and incremental sat solving"}, {"link": "", "title": "Lingeling, Plingeling and Treengeling entering the SAT competition 2013"}, {"link": "", "title": "Yet another local search solver and Lingeling and friends entering the SAT Competition 2014"}, {"link": "", "title": "Symbolic model checking without BDDs"}, {"link": "", "title": "Handbook of Satisfiability"}, {"link": "", "title": "Combinatorial testing of ACTS: A case study"}, {"link": "", "title": "The density algorithm for pairwise interactiontesting"}, {"link": "/document/1553557", "title": "A framework of greedy methods for constructing interaction test suites"}, {"link": "/document/605761", "title": "The AETG system: An approach to testing based on combinatorial design"}, {"link": "/document/4564473", "title": "Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy approach"}, {"link": "", "title": "Pairwise testing in real world"}, {"link": "", "title": "A machine program for theorem-proving"}, {"link": "", "title": "Temporal induction by incremental SAT solving"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "", "title": "Using projections to debug large combinatorial models"}, {"link": "/document/5033175", "title": "An improved meta-heuristic search for constrained interaction testing"}, {"link": "", "title": "Evaluating improvements to a meta-heuristic search for constrained interaction testing"}, {"link": "", "title": "A new encoding of alld-ifferent into SAT"}, {"link": "", "title": "Constraint models for the covering test problem"}, {"link": "", "title": "Learning combinatorial interaction test generation strategies using hyperheuristic search"}, {"link": "", "title": "An algorithm for generating t-wise covering arrays from large feature models"}, {"link": "/document/7272925", "title": "Combinatorial testing for tree-structured test models with constraints"}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "", "title": "Introduction to Combinatorial Testing"}, {"link": "", "title": "Chapter one - combinatorial testing: Theory and practice"}, {"link": "", "title": "IPOG: A general strategy for t-way software testing"}, {"link": "", "title": "TCA: An efficient two-mode meta-heuristic algorithm for combinatorial test generation"}, {"link": "", "title": "Conflict-driven clause learning sat solvers"}, {"link": "", "title": "Using satisfiability solving for pairwise testing in the presence of constraints"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Using binary decision diagrams for combinatorial test design"}, {"link": "", "title": "A systematic review of state-based test tools"}, {"link": "", "title": "Pruning techniques for the SAT-based bounded model checking problem"}, {"link": "", "title": "Test case design support system"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "/document/7102599", "title": "Optimization of combinatorial testing by incremental SAT solving"}, {"link": "", "title": "An efficient algorithm for constraint handling in combinatorial test generation"}, {"link": "", "title": "Constraint handling in combinatorial test generation using forbidden tuples"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582796"}
{"ref": [{"link": "", "title": "Amazon Mechanical Turk"}, {"link": "", "title": "Apache Felix"}, {"link": "", "title": ""}, {"link": "", "title": "OSGi Alliance"}, {"link": "", "title": "Combining global optimization with local selection for efficient QoS-aware service composition"}, {"link": "/document/7404192", "title": "Protecting privacy in the cloud: Current practices, future directions"}, {"link": "", "title": "Reactive crowdsourcing"}, {"link": "/document/6216342", "title": "Crowdsourcing with smartphones"}, {"link": "", "title": "A survey of computational location privacy"}, {"link": "", "title": "Towards service composition based on mashup"}, {"link": "/document/4620092", "title": "An online platform for web APIs and service mashups"}, {"link": "", "title": "Collaborative software development platforms for crowdsourcing"}, {"link": "/document/4620091", "title": "Composing RESTful services and collaborative workflows: a lightweight approach"}, {"link": "/document/6606600", "title": "Dynamic synthesis of local time requirement for service composition"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582759"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Supersonic: Mobile advertising"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Ben Gruver. Smali"}, {"link": "", "title": "Droidel: A general approach to Android framework modeling"}, {"link": "", "title": "On the static analysis of hybrid mobile apps"}, {"link": "", "title": "Mobile marketing statistics compilation"}, {"link": "", "title": "Precise analysis of string expressions"}, {"link": "", "title": "Researchers: Mobile users at risk from lack of HTTPS use by mobile ad libraries"}, {"link": "", "title": "Optimization of object-oriented programs using static class hierarchy analysis"}, {"link": "", "title": "ECMA-262: ECMAScript 2015 Language Specification"}, {"link": "", "title": "A study of Android application security"}, {"link": "", "title": "Apposcopy: Semantics-based detection of Android malware through static analysis"}, {"link": "", "title": "Apache cordova"}, {"link": "", "title": "SCanDroid: Automated security certification of Android applications"}, {"link": "", "title": "Breaking and fixing origin-based access control in hybrid web/mobile application frameworks"}, {"link": "", "title": "Google. Chromium"}, {"link": "", "title": "Google. Remote debugging on Android with Chrome"}, {"link": "", "title": "Google. WebView"}, {"link": "", "title": "Google. WebView for Android"}, {"link": "", "title": "Google. Shirink your code and resources"}, {"link": "", "title": "Information flow analysis of Android applications in DroidSafe"}, {"link": "", "title": "Safe cross-language inheritance"}, {"link": "", "title": "GuardSquare. Proguard"}, {"link": "", "title": "IBM. T.J. Watson libraries for analysis"}, {"link": "", "title": "Code injection attacks on HTML5-based mobile apps: Characterization, detection and mitigation"}, {"link": "", "title": "JSAI: A static analysis platform for JavaScript"}, {"link": "", "title": "SAFE: Formal specification and implementation of a scalable analysis framework for ECMAScript"}, {"link": "", "title": "String analysis for Java and Android applications"}, {"link": "", "title": "Mobile app backlog is directly damaging revenue in the enterprise"}, {"link": "", "title": "Operational semantics for multi-language programs"}, {"link": "", "title": "Mobile advertising and app monetization platform"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for Java"}, {"link": "", "title": "Effective inter-component communication mapping in Android with Epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "Design and implementation of sparse global analyses for C-like languages"}, {"link": "", "title": "Oracle. The Java\u2122 tutorials"}, {"link": "", "title": "OutSystems"}, {"link": "", "title": "Scalable and precise static analysis of JavaScript applications via loop-sensitivity"}, {"link": "", "title": "Majority of digital media consumption now takes place in mobile apps"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Facebook is officially a mobile-first company"}, {"link": "", "title": "Static reference analysis for GUI objects in Android software"}, {"link": "", "title": "Reducing attack surface on Cordova-based hybrid mobile apps"}, {"link": "", "title": "Ensuring application security in mobile device environments"}, {"link": "", "title": "Securing Android: A survey, taxonomy, and challenges"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "", "title": "APKTOOL"}, {"link": "", "title": "A measurement study of Google Play"}, {"link": "", "title": "Detecting repackaged smartphone applications in third-party Android marketplaces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582763"}
{"ref": [{"link": "", "title": "Myriad: Scalable and expressive data generation"}, {"link": "", "title": "Introduction to Software Testing. Cambridge University Press, Cambridge, UK"}, {"link": "", "title": "Data generation using declarative constraints. In Proceedings of the 2011 ACM SIGMOD International Conference on Management of Data, SIGMOD '11"}, {"link": "", "title": "Flexible database generators"}, {"link": "/document/1553557", "title": "A framework of greedy methods for constructing interaction test suites"}, {"link": "", "title": "Checkstyle"}, {"link": "", "title": "A framework for testing database applications"}, {"link": "/document/605761", "title": "The AETG system: An approach to testing based on combinatorial design"}, {"link": "", "title": "Pentaho. Online, 2004"}, {"link": "", "title": "CLOC. Online, 2006"}, {"link": "", "title": "Apache Sqoop. Online, 2011"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Quickly generating billion-record synthe Tic databases"}, {"link": "", "title": "Jacoco code coverage tool. Online, 2009"}, {"link": "", "title": "Toward scalable systems for big data analytics A technology tutorial"}, {"link": "", "title": "Jenkins. Online, 2011"}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "", "title": "Automated combinatorial testing for software (ACTS). Online, 2009"}, {"link": "", "title": "Ipog/ipog-d: efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "Sanitizing and minimizing databases for software application test outsourcing"}, {"link": "", "title": "Sedge: Symbolic example data generation for dataflow programs"}, {"link": "", "title": "A scalable big data test framework"}, {"link": "", "title": "Bdgs: A scalable big data generator suite in big data benchmarking"}, {"link": "", "title": "Generating example data for dataflow programs"}, {"link": "", "title": "SonarSource. Sonarqube. Online, 2001"}, {"link": "", "title": "Scalable test data generation from multidimensional models"}, {"link": "/document/6100093", "title": "Automatic generation of load tests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582798"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Tree edit distance problems: Algorithms and applications to bioinformatics"}, {"link": "", "title": "diffX: An Algorithm to Detect Changes in Multi-version XML Documents"}, {"link": "/document/1342719", "title": "A Differencing Algorithm for Object-Oriented Programs"}, {"link": "", "title": "LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines"}, {"link": "/document/878178", "title": "A Survey of Longest Common Subsequence Algorithms"}, {"link": "", "title": "A survey on tree edit distance and related problems"}, {"link": "", "title": "Correctors for XML Data"}, {"link": "/document/4721183", "title": "Tracking Your Changes: A Language-Independent Approach"}, {"link": "", "title": "Change Detection in Hierarchically Structured Information"}, {"link": "/document/994696", "title": "Detecting changes in XML documents"}, {"link": "", "title": "Statistical Power Analysis for the Behavioral Sciences"}, {"link": "", "title": "Mathematical Methods of Statistics"}, {"link": "", "title": "An Optimal Decomposition Algorithm for Tree Edit Distance"}, {"link": "", "title": "A Program Differencing Algorithm for Verilog HDL"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "/document/4656419", "title": "Diff/TS: A Tool for Fine-Grained Structural Change Analysis"}, {"link": "/document/7081845", "title": "A comprehensive and scalable method for analyzing fine-grained source code change patterns"}, {"link": "", "title": "Particle swarm optimization"}, {"link": "", "title": "Computing the Edit-Distance between Unrooted Ordered Trees"}, {"link": "", "title": "N-Gram Similarity and Distance"}, {"link": "", "title": "The Hungarian method for the assignment problem"}, {"link": "/document/7372056", "title": "Semantic Slicing of Software Version Histories"}, {"link": "", "title": "Computing similarity between RNA structures"}, {"link": "", "title": "Does Automated Refactoring Obviate Systematic Editing?"}, {"link": "", "title": "LASE: Locating and Applying Systematic Edits by Learning from Examples"}, {"link": "", "title": "A file comparison program"}, {"link": "", "title": "AnO(ND) difference algorithm and its variations"}, {"link": "/document/6007141", "title": "Clone Management for Evolving Software"}, {"link": "", "title": "RTED: A Robust Algorithm for the Tree Edit Distance"}, {"link": "", "title": "On the criterion that a given system of deviations from the probable in the case of a correlated system of variables is such that it can be reasonably supposed to have arisen from random sampling"}, {"link": "/document/1357803", "title": "Dex: a semantic-graph differencing tool for studying changes in large code bases"}, {"link": "", "title": "Tracking Source Locations"}, {"link": "", "title": "XCC: change control of XML documents"}, {"link": "", "title": "Edit Distance with Move Operations"}, {"link": "", "title": "The Tree-to- Tree Correction Problem"}, {"link": "", "title": "Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies"}, {"link": "", "title": "UMLDiff: An Algorithm for Object-oriented Design Differencing"}, {"link": "", "title": "Simple Fast Algorithms for the Editing Distance between Trees and Related Problems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582801"}
{"ref": [{"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Modern release engineering in a nutshell \u2014 why researchers should care"}, {"link": "", "title": "Fault-localization techniques for software systems: A literature review"}, {"link": "", "title": "When, how, and why developers (do not) test in their IDEs"}, {"link": "", "title": "Testing Object-oriented Systems: Models, Patterns, and Tools"}, {"link": "", "title": "Gzoltar: An eclipse plug-in for testing and debugging"}, {"link": "", "title": "Prevalence and maintenance of automated functional tests for web applications"}, {"link": "", "title": "Lightweight defect localization for java"}, {"link": "", "title": "Extraction of bug localization benchmarks from history"}, {"link": "", "title": "Reassert: Suggesting repairs for broken unit tests"}, {"link": "", "title": "On the influence of multiple faults on coverage-based fault localization"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Continuous integration (original version)"}, {"link": "", "title": "The art of testing less without sacrificing quality"}, {"link": "/document/296778", "title": "Experiments of the effectiveness of dataflow- and controlflow-based test adequacy criteria"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Understanding the impact of rapid releases on software quality The case of firefox"}, {"link": "", "title": "Localising faults in test execution traces"}, {"link": "", "title": "Should i follow this fault localization tool's output?"}, {"link": "", "title": "Information retrieval and spectrum based bug localization: Better together"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Efficient mining of iterative patterns for software specification discovery"}, {"link": "", "title": "Comprehensive evaluation of association measures for fault localization"}, {"link": "", "title": "Fusion fault localizers"}, {"link": "", "title": "Slice-based statistical fault localization"}, {"link": "/document/4599493", "title": "A hundred days of continuous integration"}, {"link": "", "title": "A model for spectra-based software diagnosis"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "", "title": "Comparing incremental latent semantic analysis algorithms for efficient retrieval from software libraries for bug localization"}, {"link": "/document/1657935", "title": "A survey of unit testing practices"}, {"link": "", "title": "Guidelines for conducting and reporting case study researchin software engineering"}, {"link": "/document/6693093", "title": "Improving bug localization using structured information retrieval"}, {"link": "/document/6693093", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Modeling continuous integration practice differences in industry software development"}, {"link": "/document/6405360", "title": "Improving coverage-based localization of multiple faults using algorithms from integer linear programming"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage- based fault locators"}, {"link": "", "title": "Relifix: Automated repair of software regressions"}, {"link": "/document/1657937", "title": "Unit tests reloaded: parameterized unit testing with symbolic execution"}, {"link": "", "title": "Leveraging method call anomalies to improve the effectiveness of spectrum-based fault localization techniques for object-oriented programs"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "", "title": "Learning to combine multiple ranking metrics for fault localization"}, {"link": "", "title": "How significant is the effect of fault interactions on coverage-based fault localizations?"}, {"link": "", "title": "Case Study Research Design and Methods"}, {"link": "", "title": "Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining"}, {"link": "/document/1401887", "title": "CHARM: an efficient algorithm for closed itemset mining"}, {"link": "", "title": "Statistical debugging: Simultaneous identification of multiple bugs"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? - more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582765"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Mobile Apps: What Consumers Really Need and Want"}, {"link": "", "title": "Towards self- healing smartphone software via automated patching"}, {"link": "", "title": "Recent advances in checkpoint/recovery systems"}, {"link": "", "title": "Exception handling: A field study in Java and. NET"}, {"link": "", "title": "A transactional model for automatic exception handling"}, {"link": "", "title": "Detecting and escaping infinite loops with jolt"}, {"link": "", "title": "Automatic recovery from runtime failures"}, {"link": "", "title": "Exception Handlers for Healing Component-based Systems"}, {"link": "", "title": "Npefix: Automatic runtime repair of null pointer exceptions in java"}, {"link": "/document/1676035", "title": "Exception handling and software fault tolerance"}, {"link": "", "title": "Automatic detection and repair of errors in data structures"}, {"link": "/document/4700309", "title": "Changing Java's semantics for handling null pointer exceptions"}, {"link": "", "title": "A survey of rollback-recovery protocols in message-passing systems"}, {"link": "", "title": "Exception handling: Issues and a proposed notation"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Automatic runtime error repair and containment via recovery shepherding"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "Self-recovery in server programs"}, {"link": "", "title": "X-force: Force-executing binary programs for security applications"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "An Analysis of Patch Plausibility and Correctness for Generate-and-validate Patch Generation Systems"}, {"link": "", "title": "Rx: Treating bugs as allergies-a safe method to survive software failures"}, {"link": "", "title": "Enhancing server availability and security through failure-oblivious computing"}, {"link": "", "title": "Unchecked Exceptions: Can the Programmer be Trusted to Document Exceptions?"}, {"link": "/document/6227186", "title": "Automated repair of html generation errors in php applications using string constraint solving"}, {"link": "", "title": "Assure: Automatic software self-healing using rescue points"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582803"}
{"ref": [{"link": "/document/4160967", "title": "A Replicated Quantitative Analysis of Fault Distributions in Complex Software Systems"}, {"link": "", "title": "A systematic and comprehensive investigation of methods to build and evaluate fault prediction models"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "", "title": "Controlling the False Discovery Rate: A Practical and Powerful Approach to Multiple Testing"}, {"link": "", "title": "Empirical investigation of SEA-based dependence cluster properties"}, {"link": "", "title": "Empirical Investigation of SEA-based Dependence Cluster Properties"}, {"link": "/document/7332460", "title": "Uncovering dependence clusters and linchpin functions"}, {"link": "/document/1510114", "title": "Locating dependence clusters and dependence pollution"}, {"link": "/document/5279963", "title": "Identifying 'Linchpin Vertices' That Cause Large Dependence Clusters"}, {"link": "", "title": "Assessing the impact of global variables on program dependence and dependence clusters"}, {"link": "", "title": "Exploring the relationships between design measures and software qualityin object-oriented systems"}, {"link": "", "title": "Multimodel Inference Understanding AIC and BIC in Model Selection"}, {"link": "/document/5166450", "title": "Software Dependencies, Work Dependencies, and Their Impact on Failures"}, {"link": "/document/935855", "title": "The confounding effect of class size on the validity of object-oriented metrics"}, {"link": "/document/879815", "title": "Quantitative analysis of faults and failures in a complex software system"}, {"link": "/document/738508", "title": "Detection of Logical Coupling Based on Product Release History"}, {"link": "", "title": "The Geography of Coordination: Dealing with Distance in R&D Work"}, {"link": "", "title": "Dependence Clusters in Source Code"}, {"link": "/document/1205177", "title": "An empirical study of speed and communication in globally distributed software development"}, {"link": "", "title": "Coherent clusters in source code"}, {"link": "", "title": "Coherent Dependence Clusters"}, {"link": "", "title": "Quality control handbook"}, {"link": "", "title": "Empirical analysis of network measures for effort-aware fault-proneness prediction"}, {"link": "", "title": "Effort-Aware Defect Prediction Models"}, {"link": "/document/4027145", "title": "Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "", "title": "Defect prediction from static code features: current results, limitations, new approaches"}, {"link": "", "title": "Predicting risk of software changes"}, {"link": "/document/1553571", "title": "Use of Relative Code Churn Measures to Predict System Defect Density"}, {"link": "", "title": "The Influence of Organizational Structure on Software Quality: An Empirical Case Study"}, {"link": "", "title": "An Introduction to Statistical Methods and Data Analysis"}, {"link": "", "title": "A study of cyclic dependencies on defect profile of software components"}, {"link": "", "title": "Can Developer-module Networks Predict Failures"}, {"link": "", "title": "How, and Why, Process Metrics Are Better"}, {"link": "", "title": "Recalling the \u201cImprecision\u201d of Cross-project Defect Prediction"}, {"link": "", "title": "Appropriate statistics for ordinal level data: Should we really be using t-test and cohen's d for evaluating group differences on the nsse and other surveys"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "Social Network Analysis: Methods and Applications"}, {"link": "/document/6954519", "title": "Are Slice-Based Cohesion Metrics Actually Useful in Effort- Aware Post-Release Fault-Proneness Prediction"}, {"link": "/document/4967613", "title": "Examining the Potentially Confounding Effect of Class Size on the Associations between Object-Oriented Metrics and Change-Proneness"}, {"link": "", "title": "An In-depth Study of the Potentially Confounding Effect of Class Size in Fault Prediction"}, {"link": "", "title": "Predicting Defects Using Network Analysis on Dependency Graphs"}, {"link": "", "title": "Predicting Defects for Eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582767"}
{"ref": [{"link": "", "title": "Shedding light on distributed system executions"}, {"link": "", "title": "Apache. Voldemort"}, {"link": "", "title": "Apache. ZooKeeper"}, {"link": "/document/1553586", "title": "Efficient and precise dynamic impact analysis using execute-after sequences"}, {"link": "/document/6693077", "title": "Software model checking for distributed systems with selector-based, non-blocking communication"}, {"link": "", "title": "Bamberg University. Open Chord."}, {"link": "", "title": "Dynamic slicing of distributed object-oriented programs"}, {"link": "", "title": "Inferring models of concurrent systems from logs of their behavior with CSight"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "/document/1402123", "title": "A comparison of online and dynamic impact analysis algorithms"}, {"link": "", "title": "Diver: Precise dynamic impact analysis using dependence-based trace pruning"}, {"link": "", "title": "A comprehensive study of the predictive accuracy of dynamic change-impact analysis"}, {"link": "", "title": "A framework for cost-effective dependence-based dynamic impact analysis"}, {"link": "", "title": "Diapro: Unifying dynamic impact analyses for improved and variable cost-effectiveness"}, {"link": "", "title": "Distea: Efficient dynamic impact analysis for distributed systems"}, {"link": "/document/574057", "title": "Dependence analysis of parallel and distributed programs and its applications"}, {"link": "", "title": "Distributed Systems: Concepts and Design"}, {"link": "", "title": "Distributed slicing and partial re-execution for distributed programs"}, {"link": "", "title": "EventJava: An extension of Java for event correlation"}, {"link": "", "title": "Applying dynamic change impact analysis in component-based architecture design"}, {"link": "", "title": "Timestamps in message-passing systems that preserve the partial ordering"}, {"link": "", "title": "The roadrunner dynamic analysis framework for concurrent programs"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "", "title": "Identifying message flow in distributed event-based systems"}, {"link": "", "title": "Precise slicing of concurrent programs"}, {"link": "", "title": "GoogleCode. MultiChat"}, {"link": "", "title": "Dynamic slicing of concurrent programs"}, {"link": "", "title": "Zookeeper: Wait-free coordination for internet-scale systems"}, {"link": "", "title": "Software analysis: A roadmap"}, {"link": "", "title": "Program analysis for event-based distributed systems"}, {"link": "", "title": "Dynamic slicing of distributed programs"}, {"link": "/document/824310", "title": "Dependence management in component-based distributed systems"}, {"link": "", "title": "Deterministic replay of distributed java applications"}, {"link": "", "title": "Dynamic slicing of distributed programs"}, {"link": "", "title": "Context-sensitive slicing of concurrent programs"}, {"link": "", "title": "Poet: Target-system independent visualizations of complex distributed-application executions"}, {"link": "", "title": "Soot - a Java bytecode optimization framework"}, {"link": "", "title": "Time, clocks, and the ordering of events in a distributed system"}, {"link": "/document/1201210", "title": "Whole program path-based dynamic impact analysis"}, {"link": "", "title": "A survey of code-based change impact analysis techniques"}, {"link": "", "title": "Mining dependency in distributed systems through unstructured logs analysis"}, {"link": "", "title": "The hybrid technique for object-oriented software change impact analysis"}, {"link": "", "title": "Virtual time and global states of distributed systems"}, {"link": "", "title": "Distributed dynamic slicing of Java programs"}, {"link": "", "title": "Distributed event-based systems"}, {"link": "", "title": "Lightweight lexical source model extraction"}, {"link": "", "title": "Interprocedural slicing of multithreaded programs with applications to Java"}, {"link": "", "title": "Optimal tracing and replay for debugging message-passing parallel programs"}, {"link": "", "title": "Oracle. Java NIO"}, {"link": "", "title": "Oracle. Java Socket I/O"}, {"link": "", "title": "Leveraging field data for impact analysis and regression testing"}, {"link": "", "title": "Slicing of programs dynamically under distributed environment"}, {"link": "", "title": "Impact analysis for distributed event-based systems"}, {"link": "/document/1264806", "title": "An experimental evaluation of data dependence analysis techniques"}, {"link": "", "title": "Changing the paradigm of software engineering"}, {"link": "", "title": "Software evolution and maintenance"}, {"link": "/document/4527253", "title": "An empirical study on views of importance of change impact analysis issues"}, {"link": "", "title": "Threadsanitizer: data race detection in practice"}, {"link": "/document/1707666", "title": "Static analysis of object references in RMI-based Java software"}, {"link": "/document/972728", "title": "Impact analysis of maintenance tasks for a distributed object-oriented system"}, {"link": "", "title": "SourceForge. NioEcho"}, {"link": "", "title": "How do software engineers understand code changes?: an exploratory study in industry"}, {"link": "", "title": "The Freenet team. The Free Network"}, {"link": "", "title": "Impact analysis for event-based systems using change patterns"}, {"link": "", "title": "Improved program dependence graph and algorithm for static slicing concurrent programs"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "Distributed dynamic partial order reduction based verification of threaded software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582771"}
{"ref": [{"link": "", "title": "Measuring Device Power, 2016"}, {"link": "", "title": "Android Fuel Gauge Analysis Tool, 2016"}, {"link": "", "title": "Apple, Inc. iOS 9 low power mode"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "/document/7476509", "title": "The model is not enough: Understanding energy consumption in mobile devices"}, {"link": "", "title": "How much energy can we save from prefetching ads?: energy drain analysis of top 100 apps"}, {"link": "", "title": "Lightweight measurement and estimation of mobile ad energy consumption"}, {"link": "", "title": "Truth in advertising: The hidden cost of mobile ads for software developers"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "Automated energy optimization of http requests for mobile applications"}, {"link": "", "title": "Where is the energy spent inside my app?: fine grained energy accounting on smartphones with eprof"}, {"link": "", "title": "Energy cost of advertisements in mobile games on the android platform"}, {"link": "", "title": "Qualcomm. SnapdragonBatteryGuru"}, {"link": "", "title": "Covert communication in mobile applications (t)"}, {"link": "", "title": "Into the wild: Studying real user activity patterns to guide power optimizations for mobile architectures"}, {"link": "", "title": "Crayon: saving power through shape and color approximation on next-generation displays"}, {"link": "", "title": "Optimizing energy consumption of GUIs in Android apps: a multi-objective approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582805"}
{"ref": [{"link": "", "title": "Program Analysis and Specialization of the C Programming Language"}, {"link": "", "title": "Design and Implementation of the LogicBlox System"}, {"link": "", "title": "Reviser: Efficiently Updating IDE-/IFDS-based Data-flow Analyses in Response to Incremental Program Changes"}, {"link": "", "title": "Defacto: Language-parametric fact extraction from source code"}, {"link": "", "title": "Modular class analysis with datalog"}, {"link": "", "title": "Incremental Integrity Checking of UML/OCL Conceptual Schemas"}, {"link": "", "title": "Efficient computation of flow insensitive interprocedural summary information"}, {"link": "", "title": "Eco: A Language Composition Editor"}, {"link": "", "title": "Giga-scale Exhaustive Points-to Analysis for Java in Under a Minute"}, {"link": "", "title": "First-order incremental evaluation of datalog queries"}, {"link": "", "title": "Nonrecursive incremental evaluation of datalog queries"}, {"link": "", "title": "Instant Consistency Checking for the UML"}, {"link": "", "title": "The JastAdd System-Modular Extensible Compiler Construction"}, {"link": "", "title": "A Co-contextual Formulation of Type Rules and Its Application to Incremental Type Checking"}, {"link": "", "title": "Datalog and recursive query processing"}, {"link": "", "title": "Incremental Consistency Checking of Dynamic Constraints"}, {"link": "", "title": "Adapton: Composable, Demand-driven Incremental Computation"}, {"link": "", "title": "Incremental analysis of constraint logic programs"}, {"link": "", "title": "Streamlining Control Flow Graph Construction with DCFlow"}, {"link": "", "title": "Finding Bugs is Easy"}, {"link": "", "title": "Descriptive complexity"}, {"link": "", "title": "An Incremental Points-to Analysis with CFL-Reachability"}, {"link": "", "title": "13ql: Language-Integrated Live Data Views"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "/document/58766", "title": "An incremental version of iterative data flow analysis"}, {"link": "", "title": "Optimized algorithms for incremental analysis of logic programs"}, {"link": "", "title": "A categorized bibliography on incremental computation"}, {"link": "", "title": "Representing First-Order Logic Using Graphs"}, {"link": "", "title": "Demand interprocedural program analysis using logic databases"}, {"link": "", "title": "Handbook of Graph Grammars and Computing by Graph Transformation:"}, {"link": "", "title": "Precise Interprocedural Dataflow Analysis with Applications to Constant Propagation"}, {"link": "", "title": "Incremental and Demand-driven Points-to Analysis Using Logic Programming"}, {"link": "", "title": "Using Datalog for Fast and Easy Program Analysis"}, {"link": "", "title": "Extensible intraprocedural flow analysis at the abstract syntax tree level"}, {"link": "", "title": "EMF-IncQuery: An integrated development environment for live model queries"}, {"link": "", "title": "Using C Language Extensions for Developing Embedded Software: A Case Study"}, {"link": "", "title": "mbeddr: Instantiating a language workbench in the embedded software domain"}, {"link": "", "title": "Towards User-Friendly Projectional Editors"}, {"link": "", "title": "A Language Independent Task Engine for Incremental Name and Type Analysis"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "", "title": "An Incremental Flow- and Context-sensitive Pointer Aliasing Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582769"}
{"ref": [{"link": "/document/1173285", "title": "Mutation of java objects"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "/document/6227156", "title": "Magicfuzzer: Scalable deadlock detection for large-scale applications"}, {"link": "", "title": "ConLock: A constraint-based approach to dynamic checking on deadlocks in multithreaded programs"}, {"link": "", "title": "HAVE: Integrated dynamic and static analysis for atomicity violations"}, {"link": "", "title": "Racerx: effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "The WEKA data mining software: an update"}, {"link": "", "title": "Using runtime analysis to guide model checking of java programs"}, {"link": "", "title": "Permissive interfaces"}, {"link": "", "title": "A survey of race bug detection techniques for multithreaded programmes"}, {"link": "/document/7372034", "title": "Mutation-based fault localization for real-world multilingual programs (T)"}, {"link": "", "title": "Finding concurrency bugs in Java"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "Deadlock immunity: Enabling systems to defend against deadlocks"}, {"link": "", "title": "Covert Java: Techniques for Decompiling, Patching, and Reverse Engineering"}, {"link": "", "title": "Finding bugs in java native interface programs"}, {"link": "", "title": "Debug all your code: portable mixed-environment debugging"}, {"link": "", "title": "JATO: native code atomicity for Java"}, {"link": "", "title": "JET: exception checking in the java native interface"}, {"link": "", "title": "Jacontebe: A benchmark suite of real-world java concurrency bugs (T)"}, {"link": "", "title": "Multicore SDK: A practical and efficient deadlock detector for real-world applications"}, {"link": "", "title": "GRT: an automated test generator using orchestrated program analysis"}, {"link": "", "title": "Effective static deadlock detection"}, {"link": "/document/6227137", "title": "Inferring method specifications from natural language API descriptions"}, {"link": "/document/97458", "title": "A survey of decision tree classifier methodology"}, {"link": "", "title": "Omen+: A precise dynamic deadlock detector for multithreaded Java libraries"}, {"link": "", "title": "Automatic handling of native methods in Java PathFinder"}, {"link": "", "title": "Picklock: A deadlock prediction approach under nested locking"}, {"link": "", "title": "PENELOPE: weaving threads to expose atomicity violations"}, {"link": "", "title": "JNI light: An operational model for the core JNI"}, {"link": "", "title": "Summary-based context-sensitive data-dependence analysis in presence of callbacks"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Static deadlock detection for Java libraries"}, {"link": "/document/4724551", "title": "Inferring specifications of object oriented APIs from API source code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582773"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "An empirical study of the impact of two antipatterns, Blob and Spaghetti Code, on program comprehension"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "", "title": "Understanding the longevity of code smells: preliminary results of an explanatory survey"}, {"link": "", "title": "Qualitygate sourceaudit: A tool for assessing the technical quality of software"}, {"link": "", "title": "Automating extract class refactoring: An improved method and its evaluation"}, {"link": "/document/6405253", "title": "An empirical analysis of the distribution of unit test smells and their impact on software maintenance"}, {"link": "", "title": "Are test smells really harmful? an empirical study"}, {"link": "", "title": "Beck. Test Driven Development: By Example"}, {"link": "", "title": "Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "", "title": "Investigating the evolution of bad smells in object-oriented code"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "ALutomated detection of test fixture strategies and smells"}, {"link": "/document/6624053", "title": "Strategies for avoiding text fixture smells during software evolution"}, {"link": "", "title": "Survey Methodology"}, {"link": "", "title": "Nonparametric estimation from incomplete observations"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change- and fault-proneness"}, {"link": "", "title": "A bayesian approach for the detection of code and design smells"}, {"link": "", "title": "Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object- Oriented Systems"}, {"link": "", "title": "Domain matters: Bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in java mobile apps"}, {"link": "", "title": "Assessing the impact of bad smells using historical information"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "", "title": "xUnit Test Patterns: Refactoring Test Code"}, {"link": "/document/5196681", "title": "DECOR: A method for the specification and detection of code and design smells"}, {"link": "/document/1509293", "title": "Product metrics for automatic identification of \u201cbad smell\u201d design problems in java source-code"}, {"link": "/document/4362611", "title": "Houston: We are in overload"}, {"link": "", "title": "Numerical signatures of antipatterns: An approach based on B-splines"}, {"link": "", "title": "Do they really smell bad? A study on developers' perception of bad code smells"}, {"link": "/document/6963448", "title": "Mining version histories for detecting code smells"}, {"link": "/document/6693086", "title": "Detecting bad smells in source code using change history information"}, {"link": "/document/7180123", "title": "Landfill: An open dataset of code smells with public evaluation"}, {"link": "/document/7503704", "title": "A textual-based technique for smell detection"}, {"link": "/document/6178888", "title": "Evaluating the lifespan of code smells using software repository mining"}, {"link": "", "title": "Using history information to improve design flaws detection"}, {"link": "", "title": "Survival Analysis"}, {"link": "", "title": "Junit best practices. Java World"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "/document/7335422", "title": "FaultBuster: An automatic code smell refactoring toolset"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "Refactoring test code"}, {"link": "/document/4359471", "title": "On the detection of test smells: A metrics- based approach for general fixture and eager test"}, {"link": "", "title": "Do developers care about code smells? an exploratory survey"}, {"link": "/document/6606614", "title": "Exploring the impact of inter-smell relations on software maintainability: An empirical study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582740"}
{"ref": [{"link": "", "title": "Phosphor: Illuminating dynamic data flow in commodity JVMs"}, {"link": "", "title": "ASM: a code manipulation tool to implement adaptable systems"}, {"link": "", "title": "Penumbra: automatically identifying failure-relevant inputs using dynamic tainting"}, {"link": "", "title": "Grammatical Inference: Learning Automata and Grammars"}, {"link": "", "title": "Efficient learning of context-free grammars from positive structural examples"}, {"link": "", "title": "Learning context-free grammars using tabular representations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582807"}
{"ref": [{"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Automatically exploiting potential component leaks in android applications"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Slicing droids: program slicing for smali code"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Boosting static analysis of android apps through code instrumentation"}, {"link": "", "title": "Droidra: Taming reflection to support whole-program analysis of android apps"}, {"link": "/document/7372054", "title": "Static analysis of implicit control flow: Resolving java reflection and android intents"}, {"link": "", "title": "Smote: synthetic minority over-sampling technique"}, {"link": "", "title": "Jimple: Simplifying java bytecode for analyses and transformations."}, {"link": "", "title": "Static analysis of android apps: A systematic literature review"}, {"link": "", "title": "Dexpler: Converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "IccTA: Detecting Inter-Component Privacy Leaks in Android Apps"}, {"link": "/document/7476677", "title": "Parameter Values of Android APIs: A Preliminary Study on 100,000 Apps"}, {"link": "", "title": "Composite constant propagation: Application to android inter-component communication analysis"}, {"link": "", "title": "Copperdroid: Automatic reconstruction of android malware behaviors"}, {"link": "", "title": "Combining static analysis with probabilistic models to enable market-scale android inter-component analysis"}, {"link": "", "title": "Scaling java points-to analysis using spark"}, {"link": "/document/6112328", "title": "Using static analysis for automatic assessment and mitigation of unwanted and malicious activities within android applications"}, {"link": "", "title": "Androidleaks: automatically detecting potential privacy leaks in android applications on a large scale"}, {"link": "", "title": "Appintent: Analyzing sensitive data transmission in android for privacy leakage detection"}, {"link": "", "title": "AppContext: Differentiating Malicious and Benign Mobile App Behavior Under Contexts"}, {"link": "", "title": "Collaborative verification of information flow for a high-assurance app store"}, {"link": "", "title": "Reflection analysis for java"}, {"link": "", "title": "Stadyna: Addressing the problem of dynamic code updates in the security analysis of android applications"}, {"link": "", "title": "Instrumenting android and java applications as easy as abc"}, {"link": "", "title": "Transformations for model checking distributed java programs"}, {"link": "/document/4019573", "title": "Accurate centralization for applying model checking on networked applications"}, {"link": "", "title": "Appsealer: Automatic generation of vulnerability-specific patches for preventing component hijacking attacks in android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582811"}
{"ref": [{"link": "", "title": "Domain Types: Abstract-Domain Selection Based on Variable Usage"}, {"link": "", "title": "Frameworks for analyzing multi-threaded C"}, {"link": "", "title": "Side-Effecting Constraint Systems: A Swiss Army Knife for Program Analysis"}, {"link": "", "title": "Sequential verification of serializability"}, {"link": "", "title": "Recency-abstraction for heap-allocated storage"}, {"link": "", "title": "The SLAM Project: Debugging System Software via Static Analysis"}, {"link": "", "title": "The software model checker Blast"}, {"link": "/document/4639306", "title": "Program Analysis with Dynamic Precision Adjustment"}, {"link": "", "title": "Bi-abductive resource invariant synthesis"}, {"link": "", "title": "Relational inductive shape analysis"}, {"link": "", "title": "The ASTREE analyzer"}, {"link": "", "title": "ESP: path-sensitive program verification in polynomial time"}, {"link": "/document/7372006", "title": "Fast and Precise Symbolic Analysis of Concurrency Bugs in Device Drivers"}, {"link": "", "title": "RacerX: effective, static detection of race conditions and deadlocks"}, {"link": "/document/134503", "title": "Memory Consistency and Event Ordering in Scalable Shared-memory Multiprocessors"}, {"link": "", "title": "A framework for numeric analysis of array operations"}, {"link": "", "title": "Thread-modular shape analysis"}, {"link": "", "title": "A combination framework for tracking partition sizes"}, {"link": "", "title": "Region-based shape analysis with tracked locations"}, {"link": "", "title": "Race Checking by Context Inference"}, {"link": "/document/7372071", "title": "Lazy-CSeq: A Context-Bounded Model Checking Tool for Multi-threaded C-Programs"}, {"link": "", "title": "Bootstrapping: a technique for scalable flow and context-sensitive pointer alias analysis"}, {"link": "", "title": "Fast and accurate static data-race detection for concurrent programs"}, {"link": "", "title": "Static data race detection for concurrent programs with asynchronous calls"}, {"link": "", "title": "Shape analysis of low-level C with overlapping structures"}, {"link": "", "title": "A divide-and-conquer approach for analysing overlaid data structures"}, {"link": "", "title": "Verification modulo versions: Towards usable verification"}, {"link": "", "title": "Heap decomposition for concurrent shape analysis"}, {"link": "", "title": "Static analysis of run-time errors in embedded critical parallel C programs"}, {"link": "", "title": "Relational thread-modular static value analysis by abstract interpretation"}, {"link": "", "title": "Taking Static Analysis to the Next Level: Proving the Absence of Run-Time Errors and Data Races with Astr\u00e9e"}, {"link": "", "title": "Conditional must not aliasing for static race detection"}, {"link": "", "title": "Cil: An infrastructure for C program analysis and transformation"}, {"link": "", "title": "Locksmith: Context-sensitive correlation analysis for detecting races"}, {"link": "", "title": "Existential label flow inference via CFL reachability"}, {"link": "", "title": "Symbolic bounds analysis of pointers, array indices, and accessed memory regions"}, {"link": "", "title": "Precise analysis of value-dependent synchronization in priority scheduled programs"}, {"link": "", "title": "Region analysis for race detection"}, {"link": "", "title": "Global invariants for analyzing multithreaded applications"}, {"link": "", "title": "A smooth combination of linear and Herbrand equalities for polynomial time must-alias analysis"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "Experience of improving the blast static verification tool"}, {"link": "", "title": "Verifying Concurrent Programs by Memory Unwinding"}, {"link": "", "title": "RGSep action inference"}, {"link": "", "title": "Goblint: Path-sensitive data race analysis"}, {"link": "", "title": "RELAY: static race detection on millions of lines of code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582775"}
{"ref": [{"link": "", "title": "Dominators, super blocks, and program coverage"}, {"link": "", "title": "Efficient coverage testing using global dominator graphs"}, {"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": ""}, {"link": "", "title": "Optimally profiling and tracing programs"}, {"link": "", "title": "Whitening SOA testing"}, {"link": "", "title": "Unconstrained edges and their application to branch analysis and testing of programs"}, {"link": "", "title": "Monitoring deployed software using software tomography"}, {"link": "", "title": "BullseyeCoverage"}, {"link": "", "title": "Leveraging disposable instrumentation to reduce coverage collection overhead"}, {"link": "", "title": "Linear Programming and Extensions"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "More testable service compositions by test metadata"}, {"link": "", "title": "Gcov: a test coverage program"}, {"link": "", "title": "PureCoverage"}, {"link": "", "title": "Efficient tracing of cold code via bias-free sampling"}, {"link": "", "title": "The Art of Computer Programming"}, {"link": "", "title": "Optimal measurement points for program frequency counts"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "A fast algorithm for finding dominators in a flowgraph"}, {"link": "", "title": "An automatically-generated run-time instrumenter to reduce coverage testing overhead"}, {"link": "", "title": "The Cooperative Bug Isolation Project"}, {"link": "", "title": "Traversal marker placement problems are NP-complete. Technical Report CU-CS-092\u201376"}, {"link": "/document/1245299", "title": "Using spanning sets for coverage testing"}, {"link": "", "title": "Social coverage for customized test adequacy and selection criteria"}, {"link": "/document/1553558", "title": "Demand-driven structural testing with dynamic instrumentation"}, {"link": "", "title": "Jazz2: a flexible and extensible framework for structural testing in a Java VM"}, {"link": "", "title": "Call-mark slicing: an efficient and economical way of reducing slice"}, {"link": "/document/6693096", "title": "Lightweight control-flow instrumentation and postmortem analysis in support of debugging"}, {"link": "", "title": "Recovering execution data from incomplete observations"}, {"link": "", "title": "Encoding optimal customized coverage instrumentation"}, {"link": "", "title": "Gamma system: continuous evolution of software after deployment"}, {"link": "/document/7102594", "title": "Iterative instrumentation for code coverage in time-sensitive systems"}, {"link": "", "title": "Residual test coverage monitoring"}, {"link": "", "title": "Software\u2014artifact infrastructure repository"}, {"link": "", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "Efficient instrumentation for code coverage testing"}, {"link": "/document/717399", "title": "Static branch frequency and program profile analysis"}, {"link": "", "title": "Vnm: A novel method to reduce the overhead of program instrumentation"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582742"}
{"ref": [{"link": "", "title": "Impact Analysis by Mining Software and Change Request Repositories"}, {"link": "", "title": "Towards a more efficient static software change impact analysis method"}, {"link": "", "title": "Chianti: a tool for change impact analysis of java programs"}, {"link": "", "title": "Impact analysis of change requests on source code based on interaction and commit histories"}, {"link": "", "title": "Software Change Impact Analysis."}, {"link": "", "title": "Crossing the boundaries while analyzing heterogeneous component-based software systems"}, {"link": "/document/58784", "title": "A formal model of program dependences and its implications for software testing, debugging, and maintenance"}, {"link": "/document/895984", "title": "Does code decay? Assessing the evidence from change management data"}, {"link": "/document/4656392", "title": "Logical Coupling Based on Fine-Grained Change Information"}, {"link": "", "title": "Mining association rules between sets of items in large databases"}, {"link": "/document/1463228", "title": "Mining version histories to guide software changes"}, {"link": "/document/1324645", "title": "Predicting source code changes by mining change history"}, {"link": "", "title": "Mining sequences of changed-files from version histories"}, {"link": "", "title": "Generalizing the Analysis of Evolutionary Coupling for Software Change Impact Analysis"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "", "title": "Mining Association Rules with Item Constraints"}, {"link": "", "title": "If your version control system could talk"}, {"link": "/document/1421041", "title": "Clustering Software Artifacts Based on Frequent Common Changes"}, {"link": "/document/1357812", "title": "Predicting change propagation in software systems"}, {"link": "", "title": "Interestingness measures for data mining"}, {"link": "", "title": "Evaluating the Interestingness of Characteristic Rules"}, {"link": "", "title": "Selecting the right objective measure for associationanalysis"}, {"link": "", "title": "A survey of interestingness measures for knowledge discovery"}, {"link": "", "title": "Integrating conceptual and logical couplings for change impact analysis in software"}, {"link": "", "title": "Beyond support and confidence: Exploring interestingness measures for rule-based specification mining"}, {"link": "", "title": "Improving change recommendation using aggregated association rules"}, {"link": "", "title": "An Empirical Characterization of Commits in Software Repositories"}, {"link": "", "title": "Knowledge discovery and measures of interest."}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "", "title": "The impact of tangled code changes on defect prediction models"}, {"link": "", "title": "Data Mining and Knowledge Discovery Handbook"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques."}, {"link": "", "title": "Towards parameter-free data mining"}, {"link": "", "title": "Real world performance of association rule algorithms"}, {"link": "", "title": "No Title"}, {"link": "", "title": "Research issues in data stream association rule mining"}, {"link": "", "title": "Constrained pattern mining in the new era"}, {"link": "", "title": "Detecting asynchrony and dephase change patterns by mining software repositories"}, {"link": "", "title": "An empirical study of fine-grained software modifications"}, {"link": "", "title": "What'S a Typical Commit? A Characterization of Open Source Software Repositories"}, {"link": "", "title": "The empirical commit frequency distribution of open source projects"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582809"}
{"ref": [{"link": "/document/7122917", "title": "Visual Mobile Computing for Mobile End-Users"}, {"link": "", "title": "Extractocol: Automatic Extraction of Application-level Protocol Behaviors for Android Applications"}, {"link": "/document/7372069", "title": "Recommending API Usages for Mobile Apps with Hidden Markov Model"}, {"link": "", "title": "API Change and Fault Proneness: A Threat to the Success of Android Apps"}, {"link": "", "title": "Toward a Framework for Detecting Privacy Policy Violations in Android Application Code"}, {"link": "/document/7416245", "title": "Exploring Mobile End User Development: Existing Use and Design Factors"}, {"link": "", "title": "Puzzle: a visual-based environment for end user development in touch-based mobile phones"}, {"link": "", "title": "App Inventor, MIT Center for Mobile Learning."}, {"link": "", "title": "MIT App Inventor: Enabling personal mobile computing"}, {"link": "", "title": "MobiDev: A Tool for Creating Apps on Mobile Phones"}, {"link": "", "title": "MobiMash: End User Development for Mobile Mashups"}, {"link": "", "title": "Control-Flow Patterns for Decentralized RESTful Service Composition"}, {"link": "", "title": "Assisting Developers to Build High-quality Code-first Web Service APIs"}, {"link": "", "title": "OSGi framework."}, {"link": "", "title": "Dojo toolkit: A JavaScript Toolkit for Web Component"}, {"link": "", "title": "PhoneGap: An open Source framework for Building Mobile Apps."}, {"link": "", "title": "Node.js platform"}, {"link": "", "title": "Cabana: A Cross-platform Mobile Development System"}, {"link": "", "title": "AppCan: An IDE for Mobile Application"}, {"link": "", "title": "TouchDevelop: Programming Cloud-Connected Mobile Devices via Touchscreen"}, {"link": "", "title": "Baidu LightApp."}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582813"}
{"ref": [{"link": "/document/6958395", "title": "Integration of requirements engineering and test-case generation via OSLC"}, {"link": "", "title": "A model-driven traceability framework for software product lines"}, {"link": "", "title": "Towards a principle of least surprise for bidirectional transformations"}, {"link": "/document/1232285", "title": "Event-based traceability for managing evolutionary change"}, {"link": "", "title": "Software and Systems Traceability"}, {"link": "", "title": "CMMI Product Team"}, {"link": "", "title": "Information retrieval methods for automated traceability recovery"}, {"link": "", "title": "Towards a rational taxonomy for increasingly symmetric model synchronization"}, {"link": "", "title": "From state-to delta-based bidirectional model transformations: the symmetric case"}, {"link": "", "title": "A state-based approach to traceability maintenance"}, {"link": "/document/6225489", "title": "Semi-automatic establishment and maintenance of valid traceability in automotive development processes"}, {"link": "/document/4384003", "title": "Survey of traceability approaches in model-driven engineering"}, {"link": "", "title": "The quest for ubiquity: A roadmap for software and systems traceability research"}, {"link": "", "title": "Traceability fundamentals"}, {"link": "", "title": "An analysis of the requirements traceability problem"}, {"link": "", "title": "Acquiring tool support for traceability"}, {"link": "", "title": "International Organization for Standardization Road vehicles-functional safety"}, {"link": "", "title": "Effective requirements traceability: Models, tools, and practices"}, {"link": "", "title": "Formalizing traceability relations for product lines"}, {"link": "", "title": "Towards automated traceability maintenance"}, {"link": "", "title": "Enabling automated traceability maintenance through the upkeep of traceability relations"}, {"link": "/document/7081889", "title": "Handling the differential evolution of software artefacts: A framework for consistency management"}, {"link": "", "title": "Model-driven engineering as a new landscape for traceability management: A systematic literature review"}, {"link": "", "title": "Graph-based traceability: a comprehensive approach"}, {"link": "", "title": "Traceability in model-driven engineering: Efficient and scalable traceability maintenance"}, {"link": "", "title": "Software traceability: a roadmap"}, {"link": "", "title": "Rule-based generation of requirements traceability relations"}, {"link": "", "title": "Bidirectionally tolerating inconsistency: Partial transformations"}, {"link": "", "title": "Towards a generic solution for traceability in MDD"}, {"link": "", "title": "A survey of traceability in requirements engineering and model-driven development"}, {"link": "", "title": "Collaborative traceability management: Challenges and opportunities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582777"}
{"ref": [{"link": "", "title": "Ufo: Verification with interpolants and abstract interpretation"}, {"link": "", "title": "A decade of software model checking with SLAM"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "/document/5444886", "title": "Proofs from tests"}, {"link": "", "title": "Precision reuse for efficient regression verification"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Predicate abstraction for relaxed memory models"}, {"link": "", "title": "Incremental verification of compiler optimizations"}, {"link": "", "title": "Houdini, an annotation assistant for esc/java"}, {"link": "", "title": "ICE: A robust framework for learning invariants"}, {"link": "", "title": "Statically validating must summaries for incremental compositional dynamic test generation"}, {"link": "", "title": "Regression verification: proving the equivalence of similar programs"}, {"link": "", "title": "Abstractions from proofs"}, {"link": "", "title": "Differential assertion checking"}, {"link": "", "title": "Powering the static driver verifier using corral"}, {"link": "", "title": "A program transformation for faster goal-directed search"}, {"link": "", "title": "DAG inlining: a decision procedure for reachability-modulo-theories in hierarchical programs"}, {"link": "", "title": "A solver for reachability modulo theories"}, {"link": "", "title": "This is boogie 2"}, {"link": "", "title": "Computing relational fixed points using interpolation"}, {"link": "", "title": "Microsoft"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "", "title": "Learning a strategy for adapting a program analysis via bayesian optimisation"}, {"link": "", "title": "Predicting program properties from big code"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Incremental upgrade checking by means of interpolation-based function summaries"}, {"link": "", "title": "From invariant checking to invariant inference using randomized search"}, {"link": "", "title": "Inferring annotations for device drivers from verification histories"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582781"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Reuse distance as a metric for cache behavior"}, {"link": "", "title": "Refactoring for data locality"}, {"link": "", "title": "Compiler optimizations for improving data locality"}, {"link": "", "title": "Improving instruction locality with just-in-time code layout"}, {"link": "/document/381947", "title": "Effective hardware- based data prefetching for high-performance processors"}, {"link": "", "title": "The locality principle"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "/document/1342735", "title": "Test-suite reduction for model based tests: Effects on test quality and implications for testing"}, {"link": "", "title": "Achieving high instruction cache performance with an optimizing compiler"}, {"link": "", "title": "Run-time spatial locality detection and optimization"}, {"link": "", "title": "Exploiting spatial locality in data caches using spatial footprints"}, {"link": "/document/1281665", "title": "Llvm: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Pin: building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Reference distance as a metric for data locality"}, {"link": "/document/4019600", "title": "Coverage metrics to measure adequacy of black-box test suites"}, {"link": "", "title": "Code layout optimizations for transaction processing workloads"}, {"link": "", "title": "Data transformations for eliminating conflict misses"}, {"link": "", "title": "Black-box test reduction using input-output analysis"}, {"link": "", "title": "Instruction level power analysis and optimization of software"}, {"link": "/document/854381", "title": "Energy-driven integrated hardware-software optimizations using simplepower"}, {"link": "", "title": "A data locality optimizing algorithm"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582744"}
{"ref": [{"link": "", "title": "Demand-driven compositional symbolic execution"}, {"link": "", "title": "JPF-SE: A symbolic execution extension to java pathfinder"}, {"link": "", "title": "RWset: Attacking path explosion in constraint-based test generation"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Execution generated test cases: How to make systems code crash itself"}, {"link": "", "title": "EXE: automatically generating inputs of death"}, {"link": "", "title": "S2E: a platform for in-vivo multi-path analysis of software systems"}, {"link": "", "title": "Blitz: Compositional bounded model checking for real-world programs"}, {"link": "", "title": "IC-Cut: A compositional search strategy for dynamic test generation"}, {"link": "", "title": "Proving memory safety of the ANI Windows image parser using compositional exhaustive testing"}, {"link": "", "title": "Behavioral consistency of c and verilog programs using bounded model checking"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "/document/5954425", "title": "Optimizing constraint solving to better support symbolic execution"}, {"link": "", "title": "A decision procedure for bit-vectors and arrays"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Micro execution"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Dowsing for overflows: A guided fuzzer to find buffer boundary violations"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Efficient state merging in symbolic execution"}, {"link": "", "title": "Compositional symbolic execution using fine-grained summaries"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "/document/4222603", "title": "Hybrid concolic testing"}, {"link": "", "title": "Reducing test inputs using information partitions"}, {"link": "", "title": "Multi-solver support in symbolic execution"}, {"link": "", "title": "Classical search strategies for test case generation with constraint logic programming"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "MultiSE: Multi-path symbolic execution using value summaries"}, {"link": "", "title": "Alternate and learn: Finding witnesses without looking all over"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582815"}
{"ref": [{"link": "", "title": "A method for the unified definition and treatment of conceptual schema qualityissues"}, {"link": "", "title": ""}, {"link": "", "title": "Mind maps: The poor man's design tool"}, {"link": "", "title": "The Mind Maps Book"}, {"link": "", "title": "Syntax map: A modeling language for capturing requirements of graphical DSML"}, {"link": "", "title": "Feature-oriented domain analysis feasibility study"}, {"link": "", "title": "Domain-Specific Modeling"}, {"link": "", "title": "Taming EMF and GMF using model transformation"}, {"link": "", "title": "Agile and Iterative Development: A Manager's Guide"}, {"link": "", "title": "When and how to develop domain-specific languages"}, {"link": "", "title": "Wordnet: A lexical database for english"}, {"link": "/document/7338247", "title": "Pattern-based development of domain-specific modelling languages"}, {"link": "", "title": "DSL Engineering - Designing, Implementing and Using Domain-Specific Languages"}, {"link": "", "title": "Transforming creative requirements into conceptual models"}, {"link": "", "title": "Experimental evaluation of conceptual modelling through mind maps and model driven engineering"}, {"link": "", "title": "The state of practice in model-driven engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582779"}
{"ref": [{"link": "", "title": "Checker developer manual."}, {"link": "", "title": "CVE-2014-0092"}, {"link": "", "title": "CVE-2015-0208"}, {"link": "", "title": "CVE-2015-0285"}, {"link": "", "title": "CVE-2015-0288"}, {"link": "", "title": "CVE-2015-0292"}, {"link": "", "title": "Mining API Error-Handling Specifications from Source Code"}, {"link": "", "title": "Mining API Patterns as Partial Orders from Source Code: From Usage Scenarios to Specifications"}, {"link": "/document/4602670", "title": "Using static analysis to find bugs"}, {"link": "", "title": "A few billion lines of code later: using static analysis to find bugs in the real world"}, {"link": "", "title": "FIG: a prototype tool for online verification of recovery mechanisms"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "MOPS: an infrastructure for examining security properties of software"}, {"link": "", "title": "Secure programming with static analysis"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "Under-constrained execution: making automatic code destruction easy and scalable"}, {"link": "", "title": "EIO: Error handling is occasionally correct"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "Automatically Detecting Error Handling Bugs using Error Specifications"}, {"link": "", "title": "Finding error handling bugs in OpenSSL using Coccinelle"}, {"link": "/document/1702672", "title": "Exception handling in CLU"}, {"link": "", "title": "An extensible technique for high-precision testing of recovery code"}, {"link": "", "title": "Efficient testing of recovery code using fault injection"}, {"link": "", "title": "LFI: A practical and general library-level fault injector"}, {"link": "", "title": "An empirical study of goto in C code from GitHub repositories"}, {"link": "", "title": "NPATH: a measure of execution path complexity and its applications"}, {"link": "", "title": "Mining preconditions of APIs in large-scale code corpus"}, {"link": "", "title": "OWASP top 10"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Under-constrained symbolic execution: correctness checking for real code"}, {"link": "", "title": "Analyzing exception flow in Java programs"}, {"link": "", "title": "Designing robust Java programs with exceptions"}, {"link": "", "title": "Error propagation analysis for file systems"}, {"link": "", "title": "Expect the unexpected: error code mismatches between documentation and the real world"}, {"link": "", "title": "Automatically finding and patching bad error handling"}, {"link": "", "title": "/* icomment: Bugs or bad comments?*/"}, {"link": "", "title": "Finding and preventing run-time error handling mistakes"}, {"link": "", "title": "Mining Temporal Specifications for Error Detection"}, {"link": "", "title": "Exceptional situations and program reliability"}, {"link": "", "title": "Sloccount. Available at"}, {"link": "", "title": "Detecting API documentation errors"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582783"}
{"ref": [{"link": "", "title": "PreScan simulation of ADAS and active safety"}, {"link": "", "title": ""}, {"link": "", "title": "Simulink"}, {"link": "", "title": "Virtual k-fold cross validation: An effective method for accuracy assessment"}, {"link": "", "title": "Introduction to Machine Learning"}, {"link": "", "title": "On parameter tuning in search based software engineering"}, {"link": "", "title": "Structural and functional sequence test of dynamic and state-based software with evolutionary algorithms"}, {"link": "", "title": "Metamodeling: a state of the art review"}, {"link": "", "title": "Artificial neural network: A soft computing application in biological sequence analysis"}, {"link": "/document/930314", "title": "On self-adaptive features in real-parameter evolutionary algorithms"}, {"link": "", "title": "A rigorous framework for optimization of expensive functions by surrogates"}, {"link": "/document/5530324", "title": "Solving the class responsibility assignment problem in object-oriented analysis with multi-objective genetic algorithms"}, {"link": "", "title": "Using genetic algorithms for early schedulability analysis and stress testing in real-time systems"}, {"link": "", "title": "Testing the untestable: model testing of complex software-intensive systems"}, {"link": "", "title": "An algorithm for the use of surrogate models in modular flowsheet optimization"}, {"link": "", "title": "Elementary Statistics for the Social Sciences: Study Guide"}, {"link": "", "title": "Evolutionary Algorithms for Solving Multi-Objective Problems"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences (rev)"}, {"link": "", "title": "Multi-objective optimization using evolutionary algorithms"}, {"link": "", "title": "Simulated binary crossover for continuous search space"}, {"link": "", "title": "Self-adaptive genetic algorithms with simulated binary crossover"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "", "title": "e-LEA3D: a computational-aided drug design web server"}, {"link": "", "title": "Estimating the error rate of a prediction rule: Improvement on cross-validation"}, {"link": "", "title": "Efficient multi-objective optimisation of service compositions in mobile ad hoc networks using lightweight surrogate models"}, {"link": "", "title": "Comparison of artificial neural network and multiple regression analysis techniques in predicting the mechanical properties of {A3} 56 alloy"}, {"link": "", "title": "Not going to take this anymore: multi-objective overtime planning for software engineering projects"}, {"link": "", "title": "Article: Study on single and double hidden layers of cascade artificial neural intelligence neurocomputing models for predicting sensory quality of roasted coffee flavoured sterilized drink"}, {"link": "", "title": "Search-based system testing: High coverage, no false alarms"}, {"link": "/document/329697", "title": "Training feedforward networks with the marquardt algorithm"}, {"link": "", "title": "Data mining: Practical machine learning tools and techniques"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Neural Networks: A Comprehensive Foundation"}, {"link": "", "title": "Surrogate-assisted evolutionary computation: Recent advances and future challenges"}, {"link": "", "title": "Approximating number of hidden layer neurons in multiple hidden layer BPNN architecture"}, {"link": "", "title": "A Tutorial on the Performance Assessment of Stochastic Multiobjective Optimizers"}, {"link": "", "title": "State of the art analysis: An overview of advanced driver assistance systems (adas) and possible human factors issues"}, {"link": "", "title": "Essentials of Metaheuristics"}, {"link": "", "title": "Bayesian interpolation"}, {"link": "", "title": "Multiobjective optimization of building design using TRNSYS simulations, genetic algorithm, and artificial neural network"}, {"link": "", "title": "Automatic testing of gui-based applications"}, {"link": "", "title": "MiL testing of highly configurable continuous controllers: scalable search using surrogate models"}, {"link": "", "title": "A scaled conjugate gradient algorithm for fast supervised learning"}, {"link": "", "title": "Predicting housing value: A comparison of multiple regression analysis and artificial neural networks"}, {"link": "", "title": "Evolutionary optimization of computationally expensive problems via surrogate modeling"}, {"link": "", "title": "Alleviate the hypervolume degeneration problem of NSGA-II"}, {"link": "", "title": "Pareto-optimal search-based software engineering (POSBSE): A literature survey"}, {"link": "", "title": "A model-based approach for testing the performance of web applications"}, {"link": "", "title": "Review on methods to fix number of hidden neurons in neural networks"}, {"link": "", "title": "A parallel surrogate-assisted multi-objective evolutionary algorithm for computationally expensive optimization problems"}, {"link": "", "title": "Time-to-collision and collision avoidance systems"}, {"link": "", "title": "Multiobjective evolutionary algorithm research: A history and analysis"}, {"link": "", "title": "A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering"}, {"link": "", "title": "Considering signal constraints in search-based testing of continuous systems"}, {"link": "", "title": "Search-based test data generation from statefiow statecharts"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "The state problem for test generation in simulink"}, {"link": "", "title": "Comparison of multiobjective evolutionary algorithms: Empirical results"}, {"link": "/document/797969", "title": "Multiobjective evolutionary algorithms: a comparative case study and the strength pareto approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582746"}
{"ref": [{"link": "/document/7503741", "title": "FeedBaG: An Interaction Tracker for Visual Studio"}, {"link": "", "title": "Learning from Examples to Improve Code Completion Systems"}, {"link": "", "title": "Easing Program Comprehension by Sharing Navigation Data"}, {"link": "", "title": "Evaluating the Evaluations of Code Recommender Systems"}, {"link": "", "title": "Complete Completion Using Types and Weights"}, {"link": "", "title": "Replaying Development History to Assess the Effectiveness of Change Propagation Tools"}, {"link": "/document/6178874", "title": "Identifier-based Context-dependent API Method Recommendation"}, {"link": "/document/6227135", "title": "On the Naturalness of Software"}, {"link": "/document/1553554", "title": "Using Structural Context to Recommend Source Code Examples"}, {"link": "", "title": "Mylar: A Degree-of-interest Model for IDEs"}, {"link": "", "title": "Using Task Context to Improve Programmer Productivity"}, {"link": "", "title": "The Empirical Commit Frequency Distribution of Open Source Projects"}, {"link": "", "title": "Jungloid Mining: Helping to Navigate the API Jungle"}, {"link": "/document/7181446", "title": "The Plague Doctor: A Promising Cure for the Window Plague"}, {"link": "", "title": "How Can I Use This Method?"}, {"link": "", "title": "Mining Fine-grained Code Changes to Detect Unknown Change Patterns"}, {"link": "", "title": ""}, {"link": "", "title": "Grapacc: A Graph-based Pattern-oriented, Context-sensitive Code Completion Tool"}, {"link": "", "title": "Graph-based Statistical Language Model for Code"}, {"link": "", "title": "Mining StackOverflow to Turn the IDE into a Self-confident Programming Prompter"}, {"link": "", "title": "A Dataset of Simplified Syntax Trees for C#"}, {"link": "", "title": "Intelligent Code Completion with Bayesian Networks"}, {"link": "", "title": "Code Completion with Statistical Language Models"}, {"link": "", "title": "How Program History can Improve Code Completion"}, {"link": "", "title": "Improving Code Completion with Program History"}, {"link": "/document/6311409", "title": "Automated API Property Inference Techniques"}, {"link": "", "title": "Recommendation Systems in Software Engineering"}, {"link": "/document/6227136", "title": "Automatic Parameter Recommendation for Practical API Usage"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582750"}
{"ref": [{"link": "", "title": "Expectations, Outcomes, and Challenges of Modern Code Review"}, {"link": "", "title": "Reducing Human Effort and Improving Qualityin Peer Code Reviews using Automatic Static Analysis and Reviewer Recommendation"}, {"link": "", "title": "Modern Code Reviews in Open-Source Projects: Which Problems do they Fix?"}, {"link": "", "title": "Identifying the Characteristics of Vulnerable Code Changes: An Empirical Study"}, {"link": "/document/5460504", "title": "An Expert Recommender System to Distributed Software Development: Requirements, Project and Preliminary Results"}, {"link": "", "title": "An Exploratory Study of the Pull-based Software Development Model"}, {"link": "", "title": "Modeling Problem Difficulty and Expertise in Stackoverflow"}, {"link": "", "title": "Collaborative Bug Triaging using Textual Similarities and Change Set Analysis"}, {"link": "", "title": "Recommending Software Experts using Code Similarity and Social Heuristics"}, {"link": "", "title": "Triaging Incoming Change Requests: Bug or Commit History, or Code Authorship?"}, {"link": "", "title": "CORRECT: Code Reviewer Recommendation Based on Cross-Project and Technology Experience"}, {"link": "/document/6148202", "title": "Contemporary Peer Review in Action: Lessons from Open Source Development"}, {"link": "", "title": "Improving Code Review Effectiveness Through Reviewer Recommendations"}, {"link": "", "title": "Who Should Review my Code?"}, {"link": "", "title": "Discovery of Technical Expertise from Open Source Code Repositories"}, {"link": "/document/7332472", "title": "Who Should Review this Change? Putting Text and File Location Analyses Together for More Accurate Recommendations"}, {"link": "", "title": "Social Network Analysis in Open Source Software Peer Review"}, {"link": "/document/6976151", "title": "Reviewer Recommender of Pull-Requests in GitHub"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582817"}
{"ref": [{"link": "/document/7372000", "title": "Extracting visual contracts from java programs"}, {"link": "", "title": "Towards dynamic reverse engineering visual contracts from java"}, {"link": "", "title": "Learning minimal and maximal rules from observations of graph transformations"}, {"link": "", "title": "Henshin: Advanced concepts and tools for in-place EMF model transformations"}, {"link": "", "title": "A tool environment for quality assurance based on the eclipse modeling framework"}, {"link": "", "title": "Finding the needles in the haystack: Generating legal test inputs for object-oriented programs"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "/document/1707665", "title": "Toward the reverse engineering of UML sequence diagrams for distributed java software"}, {"link": "", "title": "Reasoning about product-line evolution using complex feature model differences"}, {"link": "", "title": "Verifying object-based graph grammars"}, {"link": "", "title": "Fundamentals of Algebraic Graph Transformation"}, {"link": "", "title": "Model-driven monitoring: An application of graph transformation for design by contract"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "OCL-based runtime monitoring of applications with protocol state machines"}, {"link": "", "title": "Graph transformation in a nutshell"}, {"link": "", "title": "Towards contract-based testing of web services"}, {"link": "", "title": "Model transformation by-example: a survey of the first wave"}, {"link": "/document/6100050", "title": "A rule-based approach to the semantic lifting of model differences in the context of model versioning"}, {"link": "", "title": "Generating edit operations for profiled UML models"}, {"link": "", "title": "Automatically deriving the specification of model editing operations from meta-models"}, {"link": "", "title": "Testing against visual contracts: Model-based coverage"}, {"link": "", "title": "An overview of aspectj"}, {"link": "/document/1509489", "title": "Executable visual contracts"}, {"link": "", "title": "Reverse engineering models from databases to bootstrap application development"}, {"link": "", "title": "A technique for verifying component-based software"}, {"link": "", "title": "Recovering activity diagrams from object oriented code: an mda-based approach"}, {"link": "", "title": "design by contract"}, {"link": "", "title": "Extensible debugger framework for extensible languages"}, {"link": "/document/5383371", "title": "Program behavior discovery and verification: A graph grammar approach"}, {"link": "", "title": "A fully dynamic approach to the reverse engineering of UML sequence diagrams"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582821"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Apache Commons Collections"}, {"link": "", "title": "Apache Commons IO"}, {"link": "", "title": "Apache Maven Project"}, {"link": "", "title": "Apache Subversion (SVN) version control system"}, {"link": "", "title": "Commons Math: The Apache Commons Mathematics Library"}, {"link": "", "title": "Find by binary search the change that introduced a bug"}, {"link": "", "title": "Git version control system"}, {"link": "", "title": "Pure Java Library Implementing the Git Version Control System"}, {"link": "", "title": "Mercurial source control management system"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "", "title": "Finding Latent Code Errors via Machine Learning over Program Executions"}, {"link": "/document/6520859", "title": "Early Detection of Collaboration Conflicts and Risks"}, {"link": "", "title": "Selecting, Refining, and Evaluating Predicates for Program Analysis"}, {"link": "", "title": "Dynamically Discovering Likely Program Invariants to Support Program Evolution"}, {"link": "", "title": "The Daikon System for Dynamic Detection of Likely Invariants"}, {"link": "", "title": "Classifying Change Types for Qualifying Change Couplings"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "", "title": "Tracking Down Software Bugs Using Automatic Anomaly Detection"}, {"link": "", "title": "Refactoring Edit History of Source Code"}, {"link": "", "title": "The Impact of Tangled Code Changes"}, {"link": "", "title": "Featherweight Java: A Minimal Core Calculus for Java and GJ"}, {"link": "", "title": "Automated Behavioral Regression Testing"}, {"link": "", "title": "Type-Checking Software Product Lines - A Formal Approach"}, {"link": "", "title": "Change Impact Identification in Object Oriented Software Maintenance"}, {"link": "/document/1201210", "title": "Whole Program Path-Based Dynamic Impact Analysis"}, {"link": "/document/7372056", "title": "Semantic Slicing of Software Version Histories"}, {"link": "", "title": "HDD: Hierarchical Delta Debugging"}, {"link": "", "title": "Development History Granularity Transformations"}, {"link": "/document/6112738", "title": "How We Refactor, and How We Know It"}, {"link": "", "title": "Leveraging Field Data for Impact Analysis and Regression Testing"}, {"link": "", "title": "BERT: BEhavioral Regression Testing"}, {"link": "", "title": "Verification-aided Regression Testing"}, {"link": "", "title": "Efficient Incremental Algorithms for Dynamic Detection of Likely Invariants"}, {"link": "", "title": "Chianti: A Tool for Change Impact Analysis of Java Programs"}, {"link": "", "title": "Managing Forked Product Variants"}, {"link": "/document/6100097", "title": "History slicing"}, {"link": "", "title": "History Slicing: Assisting Code-evolution Tasks"}, {"link": "", "title": "Soot - a Java Bytecode Optimization Framework"}, {"link": "/document/1542068", "title": "Checking Inside the Black Box: Regression Testing by Comparing Value Spectra"}, {"link": "", "title": "Does Not. Why?"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-inducing Input"}, {"link": "", "title": "Localizing Failure-inducing Program Edits Based on Spectrum Information"}, {"link": "/document/4658057", "title": "Change Impact Analysis for AspectJ Programs"}, {"link": "", "title": "Mining Version Histories to Guide Software Changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582785"}
{"ref": [{"link": "", "title": "An ethnographic study of copy and paste programming practices in oopl"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/1011328", "title": "Software quality analysis by code clones in industrial legacy software"}, {"link": "/document/1610609", "title": "Cp-miner: Finding copy-paste and related bugs in large-scale software code"}, {"link": "", "title": "Cloning considered harmful\u201d considered harmful: Patterns of cloning in software"}, {"link": "", "title": "Clones: What is that smell?"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "An empirical study of long-lived code clones"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "The development of a software clone detector"}, {"link": "", "title": "Evaluating clone detection tools for use during preventative maintenance"}, {"link": "", "title": "Effective clone Detection Without Language Barriers"}, {"link": "", "title": "The software similarity problem in malware analysis"}, {"link": "/document/514697", "title": "On finding duplication and near-duplication in large software systems"}, {"link": "", "title": "Language-independent clone detection applied to plagiarism detection"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "", "title": "Active refinement of clone anomaly reports"}, {"link": "", "title": "Can i clone this piece of code here?"}, {"link": "", "title": "Xiao: Tuning code clones at hands of engineers in practice"}, {"link": "", "title": "Scalable detection of missed cross-function refactorings"}, {"link": "", "title": "Vector abstraction and concretization for scalable detection of refactorings"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "", "title": "Nomen est omen: Analyzing the language of function identifiers"}, {"link": "/document/989796", "title": "Identification of high-level concept clones in source code"}, {"link": "", "title": "Concise and consistent naming [software system identifier naming]"}, {"link": "", "title": "What's in a name? a study of identifiers"}, {"link": "", "title": "Unsupervised feature learning and deep learning: A review and new perspectives"}, {"link": "", "title": "Deep learning"}, {"link": "/document/7332459", "title": "Evaluating clone detection tools with bigclonebench"}, {"link": "", "title": "How accurate is coarse-grained clone detection?: Comparison with fine-grained detectors"}, {"link": "", "title": "Identifying redundancy in source code using fingerprints"}, {"link": "", "title": "Visualizing textual redundancy in legacy source"}, {"link": "", "title": "Substring matching for clone detection and change tracking"}, {"link": "", "title": "A language independent approach for detecting duplicated code"}, {"link": "", "title": "A program for identifying duplicated code"}, {"link": "", "title": "Parameterized pattern matching: Algorithms and applications"}, {"link": "/document/1019480", "title": "Ccfinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Identifying syntactic differences between two programs"}, {"link": "/document/4023995", "title": "Clone detection using abstract syntax suffix trees"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Similarity search in high dimensions via hashing"}, {"link": "", "title": "Scalable detection of semantic clones"}, {"link": "", "title": "Using slicing to identify duplication in source code"}, {"link": "/document/957835", "title": "Identifying similar code with program dependence graphs"}, {"link": "", "title": "Gplag: Detection of software plagiarism by program dependence graph analysis"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on android markets"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "/document/5605630", "title": "Research frontier: Deep machine learning-a new frontier in artificial intelligence research"}, {"link": "", "title": "Accurate and efficient structural characteristic feature extraction for clone detection"}, {"link": "", "title": "Complete and accurate clone detection in graph-based models"}, {"link": "/document/6007141", "title": "Clone management for evolving software"}, {"link": "", "title": "Instant code clone search"}, {"link": "", "title": "Mecc: Memory comparison-based clone detector"}, {"link": "", "title": "Data clone detection and visualization in spreadsheets"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "", "title": "Speech and Language Processing"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Cacheca: A cache language model based code suggestion tool"}, {"link": "", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Natural language models for predicting programming comments"}, {"link": "", "title": "Syntax errors just aren't natural: Improving error reporting with language models"}, {"link": "", "title": "Interpolated n-grams for model based testing"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Lexical statistical machine translation for language migration"}, {"link": "", "title": "Migrating code with statistical machine translation"}, {"link": "", "title": "Statistical learning approach for mining api usag e mappings for code migration"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/7180076", "title": "Will they like this? evaluating code contributions with language models"}, {"link": "", "title": "On the \u201cnaturalness\u201d of buggy code"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Two decades of statistical language modeling"}, {"link": "", "title": "A fast and simple algorithm for training neural probabilistic language models"}, {"link": "", "title": "A neural probabilistic language model"}, {"link": "", "title": "Hierarchical probabilistic neural network language model"}, {"link": "", "title": "Training neural network language models on very large corpora"}, {"link": "", "title": "Learning deep architectures for AI"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "", "title": "Rnnlm - recurrent neural network language modeling toolkit"}, {"link": "", "title": "Extensions of recurrent neural network language model"}, {"link": "", "title": "Strategies for training large scale neural network language models"}, {"link": "", "title": "Statistical Language Models Based on Neural Networks"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Learning task-dependent distributed representations by backpropagation through structure"}, {"link": "", "title": "Semi-supervised recursive autoencoders for predicting sentiment distributions"}, {"link": "", "title": "Recursive deep models for semantic compositionality over a sentiment treebank"}, {"link": "", "title": "Classes for fast maximum entropy training"}, {"link": "", "title": "Three new graphical models for statistical language modelling"}, {"link": "", "title": "Rnn language model with word clustering and class-based output layer"}, {"link": "", "title": "Practical recommendations for gradient-based training of deep architectures"}, {"link": "", "title": "Generating text with recurrent neural networks"}, {"link": "", "title": "On the importance of initialization and momentum in deep learning"}, {"link": "", "title": "Training and analysing deep recurrent neural networks"}, {"link": "", "title": "How to construct deep recurrent neural networks"}, {"link": "", "title": "Pattern Recognition Machine Learning"}, {"link": "", "title": "Backpropagation through time: what it does and how to do it"}, {"link": "", "title": "Compilers: Priniciples, Techniques, and Tools"}, {"link": "", "title": "Introduction to Algorithms"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "Emperimentation in Software Engineering: An Introduction"}, {"link": "/document/1287259", "title": "Problems creating task-relevant clone detection reference data"}, {"link": "", "title": "Survey of research on software clones"}, {"link": "/document/4659255", "title": "Frontiers of software clone management"}, {"link": "", "title": "On the need for human-based empirical validation of techniques and tools for code clone analysis"}, {"link": "/document/6227860", "title": "Claims and beliefs about code clones: Do we agree as a community?: A survey"}, {"link": "", "title": "Searching for better configurations: A rigorous approach to clone evaluation"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Finding file clones in freebsd ports collection"}, {"link": "", "title": "File cloning in open source java projects: The good, the bad, and the ugly"}, {"link": "", "title": ""}, {"link": "", "title": "Semantic hashing"}, {"link": "", "title": "The Elements of Statistical Learning"}, {"link": "", "title": "Using very deep auto encoders for content-based image retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582748"}
{"ref": [{"link": "", "title": "Java Microbenchmarks Harness (the lesser of two evils)."}, {"link": "", "title": "Java Benchmarking as easy as two timestamps"}, {"link": "", "title": "Nanotrusting the nanotime"}, {"link": "", "title": "The Black Magic of (Java) Method Dispatch"}, {"link": "", "title": "Performance Analysis of Idle Programs"}, {"link": "", "title": "Automatic Software Diversity in the Light of Test Suites"}, {"link": "", "title": "Java theory and practice: Anatomy of a flawed microbenchmark"}, {"link": "", "title": "WISE: Automated Test Generation for Worst-case Complexity"}, {"link": "", "title": "The Art of Java Benchmarking"}, {"link": "", "title": "STABILIZER: Statistically Sound Performance Evaluation"}, {"link": "", "title": "Test-Driven Development: A Practical Guide: A Practical Guide"}, {"link": "", "title": "Using JMH in a real world project"}, {"link": "", "title": "Statistically Rigorous Java Performance Evaluation"}, {"link": "", "title": "Java Performance Evaluation Through Rigorous Replay Compilation"}, {"link": "/document/6227197", "title": "Automatically Finding Performance Problems with Feedback-directed Learning Software Testing"}, {"link": "/document/6227198", "title": "Performance Debugging in the Large via Mining Millions of Stack Traces"}, {"link": "", "title": "Utilizing Performance Unit Tests To Increase Performance Awareness"}, {"link": "", "title": "DOs and DON'Ts of Conducting Performance Measurements in Java"}, {"link": "", "title": "DFS: A File System for Virtualized Flash Storage"}, {"link": "", "title": "Avoiding Benchmarking Pitfalls on the JVM"}, {"link": "", "title": "Revisiting a (JSON) Benchmark"}, {"link": "", "title": "Automated Benchmarking of Java APIs"}, {"link": "", "title": "Exploiting the Power of Relational Databases for Efficient Stream Processing"}, {"link": "", "title": "Producing Wrong Data Without Doing Anything Obviously Wrong"}, {"link": "", "title": "Microbenchmark Based Performance Evaluation of GPU Rendering"}, {"link": "", "title": "Caramel: Detecting and Fixing Performance Problems That Have N on- intrusive Fixes"}, {"link": "", "title": "Static Detection of Asymptotic Performance Bugs in Collection Traversals"}, {"link": "", "title": "Performance Regression Testing of Concurrent Classes"}, {"link": "", "title": ""}, {"link": "", "title": "PTask: Operating System Abstractions to Manage GPUs As Compute Devices"}, {"link": "", "title": "Automating Performance Bottleneck Detection Using Search-based Application Profiling"}, {"link": "", "title": "Optimizing Hash-array Mapped Tries for Fast and Lean Immutable JVM Collections"}, {"link": "", "title": "A Survey of Program Slicing Techniques"}, {"link": "", "title": "Engineering A Compiler"}, {"link": "", "title": "Value Dependence Graphs: Representation Without Taxation"}, {"link": "/document/6100093", "title": "Automatic Generation of Load Tests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582752"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6336698", "title": "Assessing technical candidates on the social web"}, {"link": "", "title": "Peopleware: Productive Projects and Teams"}, {"link": "", "title": "Github is your new resume"}, {"link": "", "title": "Formal concept analysis - mathematical foundations"}, {"link": "", "title": "Colibri/java"}, {"link": "/document/7332415", "title": "Interactive tag cloud visualization of software version control repositories"}, {"link": "", "title": "Conceptcloud: A tagcloud browser for software archives"}, {"link": "/document/7180095", "title": "Matching github developer profiles to job advertisements"}, {"link": "", "title": "Software engineers are in demand, and github is how you find them"}, {"link": "", "title": "Comparison of tag cloud layouts: Task-related performance and visual exploration"}, {"link": "", "title": "Activity traces and signals in software developer recruitment and hiring"}, {"link": "", "title": "How to Recruit and Hire Great Software Engineers: Building a Crack Development Team"}, {"link": "", "title": "The folksonomy tag cloud: when is it useful?"}, {"link": "", "title": "Mutual assessment in the social programmer ecosystem: An empirical investigation of developer profile aggregators"}, {"link": "", "title": "Software Engineering"}, {"link": "", "title": "Github is your resume now"}, {"link": "", "title": "Exploratory search: Beyond the query-response paradigm"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582819"}
{"ref": [{"link": "", "title": "CVC3"}, {"link": "", "title": "Reverse query processing"}, {"link": "", "title": "A Static Analyzer for Finding Dynamic Programming Errors"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Execution Generated Test Cases: How to make systems code crash itself"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "/document/1702368", "title": "A System to Generate Test Data and Symbolically Execute Programs"}, {"link": "", "title": "Test Data Generation and Symbolic Execution of Programs as an aid to Program Validation"}, {"link": "", "title": "Constraint- Assertion-based test database generation for SQL queries"}, {"link": "", "title": "Z3: An Efficient SMT Solver"}, {"link": "", "title": "Testing database transactions with AGEND A"}, {"link": "", "title": "Assertion- based Repair of Complex Data Structures"}, {"link": "", "title": "Dynamic test input generation for database applications"}, {"link": "", "title": "Compositional Dynamic Test Generation"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Alloy: a lightweight object modelling notation"}, {"link": "", "title": "Systematic testing of database engines using a relational constraint solver"}, {"link": "", "title": "Generalized Symbolic Execution for Model Checking and Testing"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "Dynamic symbolic database application testing"}, {"link": "/document/6648200", "title": "A relational symbolic execution algorithm for constraint- based testing of database programs"}, {"link": "", "title": "Towards testing of full-scale SQL applications using relational symbolic execution"}, {"link": "", "title": "Database state generation via dynamic symbolic execution for coverage criteria"}, {"link": "", "title": "Directed Incremental Symbolic Execution"}, {"link": "", "title": "Practical, Low-Effort Equivalence Verification of Real Code"}, {"link": "", "title": "CUTE: A Concolic Unit Testing Engine for C"}, {"link": "", "title": "Component-Level Energy Consumption Estimation for Distributed J ava- Based Software Systems"}, {"link": "", "title": "ParSym: Parallel Symbolic Execution"}, {"link": "", "title": "Scaling Symbolic Execution using Ranged Analysis"}, {"link": "", "title": "Staged Symbolic Execution"}, {"link": "", "title": "An Extensible SAT-solver"}, {"link": "", "title": "Parallel Symbolic Execution for Structural Test Generation"}, {"link": "", "title": "Full predicate coverage for testing SQL database queries"}, {"link": "", "title": "Symbolic query exploration"}, {"link": "", "title": "Preventing sql injection attacks in stored procedures"}, {"link": "", "title": "Memoized Symbolic Execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582787"}
{"ref": [{"link": "", "title": "Driving to Safety: How Many Miles of Driving Would It Take to Demonstrate Autonomous Vehicle Reliability?"}, {"link": "", "title": "Runtime conflict resolution mechanism for functional integrity of autonomous system"}, {"link": "", "title": "Runtime certification"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Symbolic model checking without BDDs"}, {"link": "", "title": "MiniSat: A SAT solver with conflict-clause minimization"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "MathSAT: Tight integration of SAT and mathematical decision procedures"}, {"link": "/document/5928354", "title": "SMT-based bounded model checking for embedded ANSI-C software"}, {"link": "", "title": "Propositional satisfiability and constraint programming: A comparative survey"}, {"link": "", "title": "\u03b4-complete decision procedures for satisfiability over the reals"}, {"link": "", "title": "dReal: An SMT solver for nonlinear theories over the reals"}, {"link": "", "title": "Efficient solving of large non-linear arithmetic constraint systems with complex boolean structure"}, {"link": "/document/6200102", "title": "Symbolic execution with interval solving and meta-heuristic search"}, {"link": "", "title": "Simplex with Sum of Infeasibilities for SMT"}, {"link": "", "title": "CORAL: solving complex constraints for symbolic pathfinder"}, {"link": "", "title": "On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming"}, {"link": "", "title": "ANTIGONE: algorithms for continuous/integer global optimization of nonlinear equations"}, {"link": "", "title": "Convex optimization"}, {"link": "", "title": "CalCS: SMT solving for non-linear convex constraints"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582791"}
{"ref": [{"link": "", "title": "ekremkaraca/ awesome- rails: A collection / list of awesome projects"}, {"link": "", "title": "Static enforcement of role-based access control"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "Inductive verification of data model invariants for web applications"}, {"link": "", "title": "Coexecutability for efficient verification of data model updates"}, {"link": "/document/7371994", "title": "Efficient data model verification with many-sorted logic"}, {"link": "", "title": "ryanlr/cancan\u2022 GitHub"}, {"link": "", "title": "CanCanCommunity/cancancan. GitHub"}, {"link": "", "title": "Symbolic security analysis of ruby-on-rails web applications"}, {"link": "", "title": "CoRM - Enfin une solution CRM simple et puissante."}, {"link": "", "title": "devise | RubyGems.org | your community gem host"}, {"link": "", "title": "Specifying and reasoning about dynamic access-control policies"}, {"link": "", "title": "Oops, i did it again: Mitigating repeated access control errors on facebook"}, {"link": "", "title": "Role-based access controls"}, {"link": "", "title": "A model of triangulating environments for policy authoring"}, {"link": "", "title": "Extended static checking for java"}, {"link": "/document/1553587", "title": "Dynalloy: upgrading alloy with actions"}, {"link": "", "title": "Efficient analysis of dynalloy specifications"}, {"link": "", "title": "Dynalloy as a formal method for the analysis of java programs"}, {"link": "", "title": "Static typing for ruby on rails"}, {"link": "", "title": "Safeweb: A middleware for securing ruby-based web applications"}, {"link": "", "title": "Guide to attribute based access control (abac) definition and considerations"}, {"link": "", "title": "Automated verification of access control policies using a SAT solver"}, {"link": "", "title": "Alloy: A lightweight object modelling notation"}, {"link": "", "title": "Software Abstractions: Logic, Language, and Analysis"}, {"link": "", "title": "kandanapp /kandan"}, {"link": "", "title": "Protection"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": "Model-assisted access control implementation for code-centric ruby-on-rails web application development"}, {"link": "", "title": "Rubicon: bounded verification of web applications"}, {"link": "", "title": "Derailer: interactive security analysis for web applications"}, {"link": "", "title": "Open Source Rails"}, {"link": "", "title": "GitHub - elabs /pundit: Minimal authorization throught OO design and pure Ruby classes"}, {"link": "", "title": "jdjkelly /quant - GitHub"}, {"link": "", "title": "Rails Routing from the Outside In-Ruby on Rails Guides"}, {"link": "", "title": "macfanatic/Sprint App"}, {"link": "", "title": "Static detection of access control vulnerabilities in web applications"}, {"link": "", "title": "Jellyfishboy /trado-Ruby-GitHub"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582754"}
{"ref": [{"link": "", "title": "The UML 2.0 testing profile and its relation to TTCN-3"}, {"link": "", "title": "TML: A description language for Markov chain usage models"}, {"link": "/document/5076636", "title": "Scalable emulation of enterprise systems"}, {"link": "", "title": "Generating service models by trace subsequence substitution"}, {"link": "", "title": "Quickstart apache axis2"}, {"link": "", "title": "Contract-based testing for web services"}, {"link": "", "title": "Domain-Specific Modeling: Enabling Full code Generation"}, {"link": "", "title": "A Domain-Specific Visual Modeling Language for Testing Environment Emulation"}, {"link": "", "title": "Web services Description Language (WSDL) 1.1. World Wide Web Consortium"}, {"link": "", "title": "XML schema part 1: structures second edition"}, {"link": "", "title": "Dataflow Programming Concept, Languages and Applications"}, {"link": "", "title": "Perceived usefulness, perceived ease of use, and user acceptance of information technology"}, {"link": "", "title": "SUS-A quick and dirty usability scale"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582825"}
{"ref": [{"link": "", "title": "Specification of the DEFLATE Compression Algorithm"}, {"link": "", "title": "Tool: IDA multi-processor disassembler and debugger"}, {"link": "", "title": "Tool: Peach Fuzzer Platform"}, {"link": "", "title": "Tool: Peach Fuzzer Platform (Input Model)"}, {"link": "", "title": "Tool: SPIKE Fuzzer Platform"}, {"link": "", "title": "Tool: Suley Fuzzer"}, {"link": "", "title": "Snooze: Toward a stateful network protocol fuzzer"}, {"link": "", "title": "vz - maximal satisfaction with z3"}, {"link": "", "title": "On the efficiency of automated testing"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "S2e: A platform for in-vivo multi-path analysis of software systems"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Dowsing for overflows: A guided fuzzer to find buffer boundary violations"}, {"link": "", "title": "Generating valid grammar-based test inputs by means of genetic programming and annotated grammars"}, {"link": "", "title": "Automatic and lightweight grammar generation for fuzz testing"}, {"link": "", "title": "Deriving input syntactic structure from execution"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "An empirical study of the reliability of unix utilities"}, {"link": "", "title": "Hercules: Reproducing crashes in real-world application binaries"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "Tool. LibPNG Library"}, {"link": "", "title": "Tool. Video Lan Client (VLC)"}, {"link": "", "title": "Taintscope: A checksum-aware directed fuzzing tool for automatic software vulnerability detection"}, {"link": "", "title": "Experience report: How is dynamic symbolic execution different from manual testing? a study on klee"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582789"}
{"ref": [{"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Software Aging"}, {"link": "", "title": "An Empirical Study of the Impact of two Antipatterns, Blob and Spaghetti Code, on Program Comprehension"}, {"link": "/document/6392174", "title": "Quantifying the Effect of Code Smells on Maintenance Effort"}, {"link": "/document/5609564", "title": "Are All Code Smells Harmful? A Study of God Classes and Brain Classes in the Evolution of Three Open Source Systems"}, {"link": "", "title": "Refactoring Object-Oriented Frameworks"}, {"link": "", "title": "Practical Analysis for Refactoring"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/5196681", "title": "DECOR: A Method for the Specification and Detection of Code and Design Smells"}, {"link": "/document/1509293", "title": "Product Metrics for Automatic Identification of Bad Smell Design Problems in Java Source-Code"}, {"link": "/document/1357820", "title": "Detection Strategies: Metrics-based Rules for Detecting Design Flaws"}, {"link": "", "title": "When and Why Your Code Starts to Smell Bad"}, {"link": "", "title": "Bad Smells in Software - A Taxonomy and an Empirical Study"}, {"link": "/document/1173068", "title": "Java Quality Assurance by Detecting Code Smells"}, {"link": "", "title": "A Bayesian Approach for the Detection of Code and Design Smells"}, {"link": "/document/6676916", "title": "Code Smell Detection: Towards a Machine Learning-Based Approach"}, {"link": "", "title": "AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "", "title": "BDTEX: A GQM-based Bayesian Approach for the Detection of Antipatterns"}, {"link": "", "title": "A Hierarchical Program Representation for Refactoring"}, {"link": "", "title": "Formalizing Refactorings with Graph Transformations"}, {"link": "", "title": "A Unified Framework for Cohesion Measurement in Object-Oriented Systems"}, {"link": "/document/748920", "title": "A Unified Framework for Coupling Measurement in Object-Oriented Systems"}, {"link": "", "title": "Object-oriented Metrics: Measures of Complezity"}, {"link": "", "title": "Object-Oriented Design Heuristics"}, {"link": "", "title": "Software Architecture: The Next Step"}, {"link": "", "title": "With Friends like These\u2026"}, {"link": "", "title": "Specification of Graph Translators with Triple Graph Grammars"}, {"link": "", "title": "Anti-pattern Detection with Model Queries: A Comparison of Approaches"}, {"link": "", "title": "The Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies"}, {"link": "", "title": "The Relationship Between Precision-Recall and ROC Curves"}, {"link": "/document/914965", "title": "Metrics Based Refactoring"}, {"link": "", "title": "Design Defects Detection and Correction by Example"}, {"link": "", "title": "Deviance from Perfection is a Better Criterion Than Closeness to Evil when Identifying Risky Code"}, {"link": "", "title": "Search-based Refactoring: an Empirical Study"}, {"link": "", "title": "SMURF: A SVM-based Incremental Anti-pattern Detection Approach"}, {"link": "/document/1019480", "title": "CCFinder: a Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code"}, {"link": "/document/738528", "title": "Clone Detection using Abstract Syntax Trees"}, {"link": "/document/957835", "title": "Identifying Similar Code with Program Dependence Graphs"}, {"link": "", "title": "Using Slicing to Identify Duplication in Source Code"}, {"link": "/document/6975640", "title": "Source Meter Sonar Qube Plug-in"}, {"link": "", "title": "Checking Java"}, {"link": "", "title": "Finding Bugs is Easy"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582793"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Deriving state-based test oracles for conformance testing"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "Fast static analysis of C++ virtual function calls"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "/document/1359770", "title": "Assessing and improving state-based class testing: A series of experiments"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Cross-checking oracles from intrinsic software redundancy"}, {"link": "", "title": "Reference models and automatic oracles for the testing of mesh simplification software for graphics rendering"}, {"link": "", "title": "Pat: A pattern classification approach to automatic reference oracles for the testing of mesh simplification programs"}, {"link": "/document/7515478", "title": "Test case prioritization for compilers: A text-vector based approach"}, {"link": "", "title": "An empirical comparison of compiler testing techniques"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "DySy: Dynamic symbolic execution for invariant inference"}, {"link": "", "title": ""}, {"link": "", "title": "Optimization of object-oriented programs using static class hierarchy analysis"}, {"link": "", "title": ""}, {"link": "", "title": "Generating oracles from your favorite temporal logic specifications"}, {"link": "", "title": "Oracles for checking temporal properties of concurrent systems"}, {"link": "", "title": "Introduction to Algorithms, Data Structures and Formal Languages"}, {"link": "", "title": "Dynamically discovering likely program invariants"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Does automated white-box test generation really help software testers?"}, {"link": "/document/6019060", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "Modern elementary statistics"}, {"link": "", "title": "Automating image segmentation verification and validation by learning test oracles"}, {"link": "/document/7112189", "title": "Automated oracle data selection support"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "", "title": "Call graph construction in object-oriented languages"}, {"link": "", "title": "Test-data generation guided by static defect detection"}, {"link": "", "title": "A unified test-case prioritization approach"}, {"link": "", "title": "Efficient computation of interprocedural definition-use chains"}, {"link": "", "title": "Test generation across multiple layers"}, {"link": "", "title": "A language for conveying the aliasing properties of dynamic, pointer-based data structures"}, {"link": "", "title": "Joda Convert homepage"}, {"link": "", "title": "James jDKIM homepage"}, {"link": "", "title": "JGraphT homepage"}, {"link": "", "title": "James mime4j homepage"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "/document/6100138", "title": "Major: An efficient and extensible tool for mutation analysis in a java compiler"}, {"link": "", "title": "State coverage: a structural test adequacy criterion for behavior checking"}, {"link": "", "title": "Automated generation of test oracles using a model-driven approach"}, {"link": "", "title": "Introduction to algorithms"}, {"link": "/document/6613484", "title": "How effectively does metamorphic testing alleviate the oracle problem"}, {"link": "", "title": "Dodona: Automated oracle data set selection"}, {"link": "", "title": "Search-based failure discovery using testability transformations to generate pseudo-oracles"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "", "title": "Automated oracles: An empirical study on cost and effectiveness"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "", "title": "Automatic generation and classification of test inputs"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/286418", "title": "Interprocedural def-use associations for C systems with single level pointers"}, {"link": "", "title": "Generating a test oracle from program documentation"}, {"link": "", "title": "TAOS: Testing with analysis and oracle support"}, {"link": "/document/6100059", "title": "Scaling up automated test generation: Automatically generating maintainable regression unit tests for programs"}, {"link": "", "title": "Crystal: A program analysis system for C. URL"}, {"link": "/document/1115005", "title": "Generating expected results for automated black-box testing"}, {"link": "", "title": "Assessing oracle quality with checked coverage"}, {"link": "", "title": "Checked coverage: an indicator for oracle quality STVR"}, {"link": "", "title": "An automated framework for software test oracle"}, {"link": "/document/6227132", "title": "Automated oracle creation support, or: How I learned to stop worring about fault propagation and love mutation testing"}, {"link": "", "title": "Programs, tests, and oracles: The foundations of testing revisited"}, {"link": "", "title": "Time and Money homepage"}, {"link": "", "title": "An approach for service composition and testing for cloud computing"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Putting assertions in their place"}, {"link": "", "title": "Watson Libraries for Analysis"}, {"link": "", "title": "Kolmogorov\u2014smirnov test"}, {"link": "", "title": "Designing and comparing automated test oracles for GUI-based software applications"}, {"link": "", "title": "Cooperative software testing and analysis: Advances and challenges"}, {"link": "", "title": "Inner oracles: Input-specific assertions on internal states"}, {"link": "", "title": "Search-based inference of polynomial metamorphic relations"}, {"link": "", "title": "Predictive mutation testing"}, {"link": "", "title": "An empirical study on the scalability of selective mutation testing"}, {"link": "", "title": "Regression mutation testing"}, {"link": "", "title": "Feedback-driven dynamic invariant discovery"}, {"link": "", "title": "Combined static and dynamic automated test generation"}, {"link": "/document/6100085", "title": "Mining test oracles of web search engines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582756"}
{"ref": [{"link": "", "title": "A Survey of Automatic Query Expansion in Information Retrieval"}, {"link": "", "title": "Feature Location in Source Code: a Taxonomy and Survey"}, {"link": "/document/846201", "title": "Leveraging Legacy System Dollars for E-Business"}, {"link": "/document/4616677", "title": "Modernizing Software & System Engineering Processes"}, {"link": "", "title": "The Vocabulary Problem in Human-system Communication"}, {"link": "/document/5306315", "title": "On the Use of Relevance Feedback in IR-based Concept Location"}, {"link": "", "title": "On the Effect of the Query in IR-based Concept Location"}, {"link": "", "title": "Automatic Query Performance Assessment during the Retrieval of Software Artifacts"}, {"link": "/document/6227101", "title": "Evaluating the Specificity of Text Retrieval Queries to Support Software Engineering Tasks"}, {"link": "", "title": "Automatic Query Reformulations for Text Retrieval in Software Engineering"}, {"link": "/document/6606704", "title": "Query Quality Prediction and Reformulation for Source Code Search: The Refoqus Tool"}, {"link": "", "title": "Automatically Mining Software-based, Semantically-Similar Words from Comment-Code Mappings"}, {"link": "", "title": "Automatic Search Term Identification for Change Tasks"}, {"link": "", "title": "Design Lessons from the Fastest Q & A Site in the West"}, {"link": "", "title": "TextRank: Bringing Order into Texts"}, {"link": "", "title": "A New Classification Rule based on Nearest Neighbour Search"}, {"link": "", "title": "What Makes a Good Code Example?: A Study of Programming Q & A in Stack Overflow"}, {"link": "", "title": "Seahawk: Stack Overflow in the IDE"}, {"link": "", "title": "Towards a Context-Aware IDE-Based Meta Search Engine for Recommendation about Programming Errors and Exceptions"}, {"link": "/document/7476656", "title": "RACK: Automatic API Recommendation using Crowdsourced Knowledge"}, {"link": "/document/6606629", "title": "Discovering Essential Code Elements in Informal Documentation"}, {"link": "", "title": "Identifying Word Relations in Software: A Comparative Study of Semantic Similarity Tools"}, {"link": "", "title": "Inferring Semantically Related Words from Software Context"}, {"link": "", "title": "Automated Construction of a Software-specific Word Similarity Database"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582760"}
{"ref": [{"link": "", "title": "Timed automata"}, {"link": "", "title": "Reachability analysis of pushdown automata: Application to model-checking"}, {"link": "", "title": "From simulink to scade/Iustre to tta: a layered approach for distributed embedded applications"}, {"link": "", "title": "Formal modeling and validation of stateflow diagrams"}, {"link": "", "title": "Automotgen: Automatic model oriented test generator for embedded control systems"}, {"link": "", "title": "From stateflow simulation to verified implementation: A verification approach and a real-time train controller design"}, {"link": "/document/6786041", "title": "Design and optimization of multi-clocked embedded systems using formal techniques"}, {"link": "", "title": "The smv system"}, {"link": "", "title": "Safety-critical medical device development using the upp 2sf model translation tool"}, {"link": "", "title": "SimulinkDesignVerifier"}, {"link": "", "title": "Applied dynamics international"}, {"link": "", "title": "I. The MathWorks"}, {"link": "", "title": "Formal modeling and synthesis of programmable logic controllers"}, {"link": "", "title": "Sal-a novel quality measure for the verification of quantitative precipitation forecasts"}, {"link": "", "title": "Design of mixed synchronous/asynchronous systems with multiple clocks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582827"}
{"ref": [{"link": "", "title": "Syntax-guided synthesis"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "A hip and sleek verification system"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with smt"}, {"link": "", "title": "Lazy synthesis"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Modeling bug report quality"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Towards complete specifications with an error calculus"}, {"link": "", "title": "Enhancing automated program repair with deductive verification"}, {"link": "", "title": "Should fixing these failures be delegated to automated program repair?"}, {"link": "", "title": "Empirical study on synthesis engines for semantics-based program repair"}, {"link": "", "title": "History driven program repair"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "Staged program repair in spr."}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Predicting vulnerable software components"}, {"link": "/document/6606623", "title": "Semfix: program repair via semantic analysis"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Separation logic: A logic for shared mutable data structures"}, {"link": "", "title": "Predicting recurring crash stacks"}, {"link": "", "title": "Studying re-opened bugs in open source software"}, {"link": "", "title": "Predicting a correct program in programming by example"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "/document/4228638", "title": "How long will it take to fix this bug?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582831"}
{"ref": [{"link": "", "title": "Adding trace matching with free variables to AspectJ"}, {"link": "", "title": "QVM: An efficient runtime for detecting defects in deployed systems"}, {"link": "", "title": "Probabilistic, modular and scalable inference of typestate specifications"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "MOPBox: A library approach to runtime verification"}, {"link": "", "title": "Collaborative runtime verification with tracematches"}, {"link": "", "title": "A staged static program analysis to improve the performance of runtime monitoring"}, {"link": "", "title": "Finding programming errors earlier by evaluating runtime monitors ahead-of-time"}, {"link": "", "title": "Mining universal specification based on probabilistic model"}, {"link": "", "title": "Towards monitoring-oriented programming: A paradigm combining specification and implementation"}, {"link": "", "title": "Sampling techniques"}, {"link": "", "title": "Collections_SynchronizedCollection"}, {"link": "", "title": "Generating test cases for specification mining"}, {"link": "", "title": "CompleteSearch DBLP"}, {"link": "", "title": "Runtime verification in context: Can optimizing error detection improve fault diagnosis?"}, {"link": "", "title": "Incremental runtime verification of probabilistic systems"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Testing mined specifications"}, {"link": "", "title": "Security-policy monitoring and enforcement with JavaMOP"}, {"link": "", "title": "JavaMOPAgent Documentation"}, {"link": "", "title": "runtimeverification/javamop/blob/master/docs/JavaMOPAgentUsage.md. JavaMOP"}, {"link": "", "title": "java.util.collections"}, {"link": "", "title": "Garbage collection for monitoring parametric properties"}, {"link": "/document/6227231", "title": "JavaMOP: Efficient parametric runtime monitoring framework"}, {"link": "", "title": "Scalable parametric runtime monitoring"}, {"link": "", "title": "Joda-Time"}, {"link": "", "title": "jMonitor: Java runtime event specification and monitoring library"}, {"link": "", "title": "Automatic mining of specifications from invocation traces and method invariants"}, {"link": "", "title": "Specification mining with few false positives"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "", "title": "Towards categorizing and formalizing the JDK API"}, {"link": "", "title": "Evolution-aware monitoring-oriented programming"}, {"link": "", "title": "Mining temporal properties of data invariants"}, {"link": "/document/7371998", "title": "General LTL specification mining"}, {"link": "", "title": "RV-Monitor: Efficient parametric runtime verification with simultaneous properties"}, {"link": "/document/4639318", "title": "Efficient monitoring of parametric context-free patterns"}, {"link": "/document/6693067", "title": "Efficient parametric runtime verification with deterministic string rewriting"}, {"link": "", "title": "Efficient techniques for near-optimal instrumentation in time-triggered runtime verification"}, {"link": "", "title": "Extracting significant specifications from mining through mutation testing"}, {"link": "", "title": "Mining preconditions of APIs in large-scale code corpus"}, {"link": "", "title": "java.lang.instrument"}, {"link": "", "title": "Randoop:Feedback-directed random testing for Java"}, {"link": "", "title": "Finding errors in. NET with feedback-directed random testing"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Dynamically inferring, refining, and checking API usage protocols"}, {"link": "/document/5609576", "title": "A framework for the evaluation of specification miners based on finite state machines"}, {"link": "", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "/document/6227185", "title": "Leveraging test generation and specification mining for automated bug detection without false positives"}, {"link": "/document/6227127", "title": "Statically checking API protocol conformance with mined multi-object specifications"}, {"link": "", "title": "Statically checking API protocol conformance with mined multi-object specifications (supplementary material)"}, {"link": "", "title": "FSL Specification Database"}, {"link": "", "title": "ISSTA"}, {"link": "", "title": "Randoop"}, {"link": "/document/6693129", "title": "A pattern-based approach to parametric specification mining"}, {"link": "/document/6311409", "title": "Automated API property inference techniques"}, {"link": "", "title": "Do automatically generated unit tests find real faults"}, {"link": "", "title": "Supplementary material for this paper"}, {"link": "", "title": "TLV: Abstraction through testing, learning, and validation"}, {"link": "", "title": "@tComment: Testing Javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "", "title": "Reducing monitoring overhead by integrating event- and time-triggered techniques"}, {"link": "", "title": "Iterative mining of resource-releasing specifications"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582795"}
{"ref": [{"link": "", "title": "Learning OpenCV: Computer vision with the OpenCV library"}, {"link": "", "title": "Vips: a visionbased page segmentation algorithm"}, {"link": "/document/1201193", "title": "Design recovery of interactive graphical applications"}, {"link": "", "title": "Ltp: A chinese language technology platform"}, {"link": "", "title": "Adaptive random testing: The art of test case diversity"}, {"link": "/document/6227111", "title": "Rebucket: a method for clustering duplicate crash reports based on call stack similarity"}, {"link": "", "title": "Crowdsourcing gui tests"}, {"link": "/document/6227093", "title": "Multi-label software behavior learning"}, {"link": "", "title": "Test report prioritization to assist crowdsourced testing"}, {"link": "", "title": "Automatic transition of natural language software requirements specification into formal presentation"}, {"link": "", "title": "Automated duplicate detection for bug tracking systems"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Natural language processing and text mining"}, {"link": "/document/18020", "title": "Editable graphical histories"}, {"link": "", "title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data"}, {"link": "", "title": "Predicting the severity of a reported bug"}, {"link": "", "title": "Beyond bags of features: Spatial pyramid matching for recognizing natural scene categories"}, {"link": "", "title": "Using string distances for test case prioritisation"}, {"link": "", "title": "Crowdsourcing for usability testing"}, {"link": "", "title": "A survey of the use of crowdsourcing in software engineering"}, {"link": "", "title": "Browsing and searching source code of applications written using a gui framework"}, {"link": "/document/1553553", "title": "Helping users avoid bugs in gui applications"}, {"link": "", "title": "Crowdsourced web site evaluation with crowdstudy"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "Crowdoracles: Can the crowd solve the oracle problem?"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Extracting product features and opinions from reviews"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "The earth mover's distance as a metric for image retrieval"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "Measuring the diversity of a test set with distance entropy."}, {"link": "", "title": "Metaphor identification using verb and noun clustering"}, {"link": "", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "/document/6676891", "title": "Drone: Predicting priority of reported bugs by multi-factor analysis"}, {"link": "/document/6178884", "title": "Improved duplicate bug report identification"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "", "title": "Towards more accurate multi-label software behavior learning"}, {"link": "", "title": "Predicting defect priority based on neural networks"}, {"link": "/document/5487527", "title": "What makes a good bug report?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582758"}
{"ref": [{"link": "", "title": "A gui crawling-based technique for android mobile application testing"}, {"link": "/document/6405345", "title": "A toolset for gui testing of android applications"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "", "title": "Automated concolic testing of smart phone apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Comparing model-based and dynamic event-extraction based {GUI} testing techniques: An empirical study"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet? (e)"}, {"link": "", "title": ""}, {"link": "/document/6227232", "title": "Exsyst: Search- based gui testing"}, {"link": "", "title": "Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Automating gui testing for android applications"}, {"link": "/document/5070969", "title": "Automatic gui test generation for smart phone applications - an evaluation"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "/document/6228986", "title": "A whitebox approach for automated security testing of android applications on the cloud"}, {"link": "", "title": "An event-flow model of gui-based applications for testing: Research articles"}, {"link": "/document/1287256", "title": "GUI ripping: Reverse engineering of graphical user interfaces for testing"}, {"link": "", "title": "Coverage criteria for gui testing"}, {"link": "", "title": "Testing android apps through symbolic execution"}, {"link": "", "title": "Supermonkey"}, {"link": "", "title": "Appsplayground: Automatic security analysis of smart phone applications"}, {"link": "", "title": "Model-based testing of community-driven open-source gui applications"}, {"link": "", "title": "Using a pilot study to derive a gui model for automated testing"}, {"link": "/document/6614215", "title": "Testing for poor responsiveness in android applications"}, {"link": "", "title": "Fundamental Approaches to Software Engineering: 16th international conference, FASE 2013, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2013, Rome, Italy, March 16\u201324, 2013"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582762"}
{"ref": [{"link": "", "title": "Requirements Engineering for Software and Systems"}, {"link": "", "title": "Effective Requirements Practice"}, {"link": "", "title": "TestMEReq: Generating Abstract Tests for Requirements Validation"}, {"link": "", "title": "From Essential Use Cases to Objects"}, {"link": "", "title": "Structure and Style in Use Cases for User Interface Design"}, {"link": "", "title": "Automatic Acceptance Test Case Generation From Essential Use Cases"}, {"link": "", "title": "TestMEReq: Automated Acceptance Testing Tool For Requirements Validation"}, {"link": "", "title": "Etherpad."}, {"link": "/document/5740931", "title": "StakeRare: Using Social Networks and Collaborative Filtering for Large-Scale Requirements Elicitation"}, {"link": "/document/7320421", "title": "Sketching and Notation Creation with FlexiSketch Team: Evaluating a New Means for Collaborative Requirements Elicitation"}, {"link": "", "title": "FLEXISKETCH TEAM: Collaborative Sketching and Notation Creation on the Fly"}, {"link": "/document/5898877", "title": "A Methodology of Collaborative Requirements Validation in a Cooperative Environment"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582829"}
{"ref": [{"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Controlling the false discovery rate: A practical and powerful approach to multiple testing"}, {"link": "", "title": "Improving the tokenisation of identifier names"}, {"link": "", "title": "LINSEN: An approach to split identifiers and expand abbreviations with linear complexity"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "/document/5069482", "title": "Mining source code to automatically split identifiers for software analysis"}, {"link": "", "title": "TIDIER: An identifier splitting approach using speech recognition techniques"}, {"link": "/document/6613828", "title": "Part-of-speech tagging of program identifiers for improved text-based software engineering tools"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "AMAP: Automatically mining abbreviation expansions in programs to enhance software maintenance tools"}, {"link": "", "title": "An empirical study of identifier splitting techniques"}, {"link": "", "title": "Canonical method names for Java"}, {"link": "", "title": "The programmer's lexicon"}, {"link": "", "title": "Debugging method names"}, {"link": "", "title": "The Java programmer's phrase book"}, {"link": "", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "/document/6613851", "title": "Towards generating human-oriented summaries of unit test cases"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Automatically documenting unit test cases"}, {"link": "", "title": "Recognizing words from source code identifiers using speech recognition techniques"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Automatic generation of natural language summaries for Java classes"}, {"link": "", "title": "Learning to generate pseudocode from source code using statistical machine translation"}, {"link": "", "title": "Bleu: A method for automatic evaluation of machine translation"}, {"link": "", "title": "Identifying word relations in software: A comparative study of semantic similarity tools"}, {"link": "", "title": "Towards automatically generating summary comments for Java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "", "title": "An approach for evaluating and suggesting method names using n-gram models"}, {"link": "", "title": "Testing on the toilet: Writing descriptive test names."}, {"link": "/document/6224276", "title": "Inferring semantically related words from software context"}, {"link": "", "title": "Code fragment summarization"}, {"link": "/document/7372038", "title": "Automatically generating test templates from test names"}, {"link": "", "title": "Detecting API documentation errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582797"}
{"ref": [{"link": "", "title": "An Orchestrated Survey of Methodologies for Automated Software Test Case Generation"}, {"link": "", "title": "Why facial recognition failed."}, {"link": "", "title": "Application of the Fractal Perlin Noise Algorithm for the Generation of Simulated Breast Tissue"}, {"link": "", "title": "Introduction to Evolutionary Computing"}, {"link": "", "title": "Oriental Chestnut Gall Wasp"}, {"link": "", "title": "Caltech-256 Object Category Data Set. Technical Report 7694, California Inst. of Technology"}, {"link": "", "title": "Towards Automatic Testing of Imaging Software by Means of Random and Metamorphic Testing"}, {"link": "/document/4976388", "title": "Evaluating Testing Strategies for Imaging Software by Means of Mutation Analysis"}, {"link": "", "title": "Deformation Image Generation for Testing a Strain Measurement Algorithm"}, {"link": "", "title": "Automatic Image Generation by Genetic Algorithms for Testing Half toning Methods"}, {"link": "", "title": "A Database of Human Segmented Natural Images and its Application to Evaluating Segmentation Algorithms and Measuring Ecological Statistics"}, {"link": "", "title": "Notes on Continuous Stochastic Phenomena"}, {"link": "", "title": "An Image Synthesizer"}, {"link": "", "title": "Image Processing: The Fundamentals"}, {"link": "/document/7422146", "title": "A Survey on Metamorphic Testing"}, {"link": "", "title": "Applied GIS and Spatial Analysis"}, {"link": "", "title": "Poisson Point Processes: Imaging, Tracking, and Sensing"}, {"link": "", "title": "Computer Vision: Algorithms and Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582800"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "What'S a typical commit? a characterization of open source software repositories"}, {"link": "", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports"}, {"link": "", "title": "Software change impact analysis"}, {"link": "", "title": "Extraction of bug localization benchmarks from history"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "", "title": "Improving bug triage with bug tossing graphs"}, {"link": "/document/6341763", "title": "A large-scale empirical study of just- in- time quality assurance"}, {"link": "", "title": "Non-essential changes in version histories"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "/document/4408585", "title": "Classifying software changes: Clean or buggy?"}, {"link": "", "title": "Automatic identification of bug-introducing changes"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "Information retrieval and spectrum based bug localization: better together"}, {"link": "", "title": "Bug localization using latent dirichlet allocation"}, {"link": "", "title": "edoctor: Automatically diagnosing abnormal battery drain issues on smartphones"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "/document/6227179", "title": "A history-based matching approach to identification of framework evolution"}, {"link": "/document/6676930", "title": "On the relationship between the vocabulary of bug reports and source code"}, {"link": "/document/6976081", "title": "On the use of stack traces to improve text retrieval-based bug localization"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Bugcache for inspections: hit or miss?"}, {"link": "", "title": "Retrieval from software libraries for bug localization: a comparative study of generic and composite text models"}, {"link": "", "title": "Chianti: a tool for change impact analysis of java programs"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "The trec-8 question answering track report"}, {"link": "", "title": "Evaluating the usefulness of ir- based fault localization techniques"}, {"link": "", "title": "Version history, similar report, and structure: Putting them together for improved bug localization"}, {"link": "", "title": "Understanding widespread changes: A taxonomic study"}, {"link": "", "title": "Boosting bug-report-oriented fault localization with segmentation and stack-trace analysis"}, {"link": "", "title": "Crashlocator: locating crashing faults based on crash stacks"}, {"link": "", "title": "Relink: recovering links between bugs and changes"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Localizing failure-inducing program edits based on spectrum information"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582764"}
{"ref": [{"link": "", "title": "Effective race detection for event-driven programs"}, {"link": "", "title": "Race detection for web applications"}, {"link": "", "title": "RacerX: Effective, Static Detection of Race Conditions and Deadlocks"}, {"link": "", "title": "RELAY: Static Race Detection on Millions of Lines of Code"}, {"link": "", "title": "FastTrack: Efficient and Precise Dynamic Race Detection"}, {"link": "", "title": "Optimal Tracing and Replay for Debugging Shared-Memory Parallel Programs"}, {"link": "", "title": "Race detection for event-driven mobile applications"}, {"link": "", "title": "Race detection for android applications"}, {"link": "", "title": "Scalable race detection for android applications"}, {"link": "", "title": "Detecting event anomalies in event-based systems"}, {"link": "", "title": "Retrofitting concurrency for Android applications through refactoring"}, {"link": "", "title": "Leveraging existing tests in automated test generation for web applications"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in Android applications"}, {"link": "", "title": "Static Window Transition Graphs for Android"}, {"link": "", "title": "Robtotium"}, {"link": "", "title": ""}, {"link": "", "title": "Smali"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "Multithreaded Java program test generation"}, {"link": "", "title": "Testing concurrent Java programs using randomized scheduling"}, {"link": "", "title": "Effective random testing of concurrent programs"}, {"link": "", "title": "RERAN: timing- and touch-sensitive record and replay for Android"}, {"link": "", "title": "Versatile yet lightweight record-and-replay for Android"}, {"link": "", "title": ""}, {"link": "", "title": "Spatiotemporal Sensitivity and Visual Attention for Efficient Rendering of Dynamic Environments"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582799"}
{"ref": [{"link": "", "title": "Dataset and tool for reproduction and replication"}, {"link": "", "title": "CSS Cascading and Inheritance Level 3"}, {"link": "/document/957829", "title": "Reverse engineering to achieve maintainable WWW sites"}, {"link": "", "title": "Automated refactoring for size reduction of css style sheets"}, {"link": "", "title": "Function clone detection in web applications: a semiautomated approach"}, {"link": "", "title": "SASS: Syntactically Awesome Style Sheets"}, {"link": "/document/5609723", "title": "WEBDIFF: Automated identification of cross-browser issues in web applications"}, {"link": "", "title": "Practical language-independent detection of near-miss clones"}, {"link": "", "title": "Popularity of CSS Preprocessors"}, {"link": "/document/1421049", "title": "Understanding cloned patterns in web applications"}, {"link": "", "title": "Penta. Clone analysis in the web era: an approach to identify cloned web pages"}, {"link": "", "title": "An approach to identify duplicated web pages"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/6606699", "title": "LAMBDAFICATOR: From Imperative to Functional Programming through Automated Refactoring"}, {"link": "", "title": "On the analysis of cascading style sheets"}, {"link": "", "title": "Code smells in Cascading Style Sheets: an empirical study and a predictive model"}, {"link": "", "title": "Detecting Redundant CSS Rules in HTML5 Applications: A Tree Rewriting Approach"}, {"link": "", "title": "Mining frequent patterns without candidate generation"}, {"link": "", "title": "CSS code quality: a metric for abstractness; or why humans beat machines in CSS coding"}, {"link": "", "title": "Automated Refactoring of Legacy Java Software to Enumerated Types"}, {"link": "", "title": "Refactoring for parameterizing java classes"}, {"link": "", "title": "Finding function clones in web applications"}, {"link": "/document/4145042", "title": "Migration of Common Lisp Programs to the Java Platform - The Linj Approach"}, {"link": "", "title": "SeeSS: Seeing What I Broke \u2014 Visualizing Change Impact of Cascading Style Sheets (CSS)"}, {"link": "/document/7102638", "title": "WebSee: A Tool for Debugging HTML Presentation Failures"}, {"link": "", "title": "Automated conversion of table-based websites to structured stylesheets using table recognition and clone detection"}, {"link": "/document/1357820", "title": "Detection strategies: metrics-based rules for detecting design flaws"}, {"link": "", "title": "Strategies for migration from C to Java"}, {"link": "/document/7476640", "title": "An empirical study on the use of CSS preprocessors"}, {"link": "", "title": "Discovering Refactoring Opportunities in Cascading Style Sheets"}, {"link": "/document/6227174", "title": "Automated analysis of CSS rules to support style maintenance"}, {"link": "", "title": "Mozilla Developer Network"}, {"link": "", "title": "Near-miss clone patterns in web applications: An empirical study with industrial systems"}, {"link": "", "title": "Refactoring object-oriented frameworks"}, {"link": "", "title": "An investigation of cloning in web applications"}, {"link": "", "title": "X-PERT: Accurate Identification of Cross-browser Issues in Web Applications"}, {"link": "", "title": "LESS - The dynamic stylesheet language"}, {"link": "", "title": "Resolution of static clones in dynamic Web pages"}, {"link": "", "title": "Introduction to data mining"}, {"link": "", "title": "C to O-O Translation: Beyond the Easy Stuff"}, {"link": "", "title": "Services Administration. CSS coding styleguide"}, {"link": "", "title": "W3Techs. World Wide Web Technology Surveys"}, {"link": "", "title": "World Wide Web Consortium. CSS specifications"}, {"link": "", "title": "A framework for migrating procedural code to object-oriented platforms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582802"}
{"ref": [{"link": "", "title": "Parameter tuning or default values? an empirical investigation in search-based software engineering"}, {"link": "", "title": "Debugadvisor: a recommender system for debugging"}, {"link": "", "title": "What makes a good bug report?"}, {"link": "/document/4658082", "title": "Duplicate bug reports considered harmful\u00e2\u0102\u0119 really?"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Object-Oriented Software Engineering Using UML, Patterns and Java-(Required)"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: Nsga-ii"}, {"link": "", "title": "Search-based bug report prioritization for kate editor bugs repository"}, {"link": "", "title": "Latent semantic analysis"}, {"link": "/document/5069482", "title": "Mining source code to automatically split identifiers for software analysis"}, {"link": "/document/1287240", "title": "Analyzing and relating bug report data for feature tracking"}, {"link": "", "title": "A comparative analysis of selection schemes used in genetic algorithms"}, {"link": "", "title": "Search-based software engineering"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Mutation-based generation of software product line test configurations"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "", "title": "Using genetic algorithms to generate test sequences for complex timed systems"}, {"link": "", "title": "Retrieval from software libraries for bug localization: a comparative study of generic and composite text models"}, {"link": "", "title": "On the effectiveness of information retrieval based bug localization for c programs"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "A vector space model for automatic indexing"}, {"link": "", "title": "Regression testing for model transformations: A multi-objective approach"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "", "title": "Introduction to data mining"}, {"link": "", "title": "Boosting bug-report-oriented fault localization with segmentation and stack-trace analysis"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "/document/7270328", "title": "Mapping bug reports to relevant files: A ranking model, a fine-grained benchmark, and feature evaluation"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582766"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Using static analysis to find bugs"}, {"link": "", "title": "A report on a survey and study of static analysis users"}, {"link": "", "title": "A few billion lines of code later: Using static analysis to find bugs in the real world"}, {"link": "", "title": "A static analyzer for finding dynamic programming errors"}, {"link": "", "title": "Infer: An automatic program verifier for memory safety of C programs"}, {"link": "", "title": "Moving fast with software verification"}, {"link": "", "title": "Secure Programming with Static Analysis"}, {"link": "", "title": "An experimental evaluation of deliberate unsoundness in a static program analyzer"}, {"link": "", "title": "Monoidics"}, {"link": "", "title": "Statistics for research"}, {"link": "", "title": "CloudBuild: Microsoft'S distributed and caching build service"}, {"link": "", "title": "Static contract checking with abstract interpretation"}, {"link": "", "title": "Measuring nominal scale agreement among many raters"}, {"link": "", "title": "Survey researchmethods"}, {"link": "", "title": "Understanding reliability and validity in qualitative research"}, {"link": "", "title": "Handbook of inter-rater reliability: The definitive guide to measuring the extent of agreement among raters"}, {"link": "", "title": "On establishing a benchmark for evaluating static analysis alert prioritization and classification techniques"}, {"link": "", "title": "Understanding the value of program analysis tools"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Path projection for user-centered static analysis tools"}, {"link": "", "title": "Personal opinion surveys"}, {"link": "", "title": "Does bug prediction support human developers? Findings from a Google case study"}, {"link": "", "title": "How to measure survey reliability and validity"}, {"link": "", "title": "In defense of soundiness: A manifesto"}, {"link": "", "title": "Verification modulo versions: Towards usable verification"}, {"link": "", "title": "Empirical analysis of programming language adoption"}, {"link": "", "title": "Making defect-finding tools work for you"}, {"link": "/document/1237967", "title": "Conducting on-line surveys in software engineering"}, {"link": "", "title": "Tricorder: Building a program analysis ecosystem"}, {"link": "", "title": "Views on internal and external validity in empirical software engineering"}, {"link": "/document/6614738", "title": "Improving Developer Participation Rates in Surveys"}, {"link": "", "title": "The effects of appeals, anonymity, and feedback on mail survey response patterns from salespeople"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582770"}
{"ref": [{"link": "", "title": "Antlr."}, {"link": "", "title": "Lucene."}, {"link": "", "title": "Detecting clones across microsoft.net programming languages"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "", "title": "Removing clones from the code"}, {"link": "", "title": "Using concept analysis to detect co-change patterns"}, {"link": "", "title": "Distributional structure"}, {"link": "", "title": "DECKARD: scalable and accurate tree-based detection of code clones. In ICSE"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "", "title": "Clonedetective - A workbench for clone detection research"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "cloning considered harmful"}, {"link": "", "title": "Comprehension and maintenance of large-scale multi-language software applications"}, {"link": "", "title": "Cross-language clone detection"}, {"link": "/document/6976090", "title": "Mining co-change information to understand when build changes are necessary"}, {"link": "/document/6227179", "title": "A history- based matching approach to identification of framework evolution"}, {"link": "", "title": "Building program vector representations for deep learning"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "Understanding widespread changes: A taxonomic study"}, {"link": "", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582804"}
{"ref": [{"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Optimally profiling and tracing programs"}, {"link": "", "title": "Minemu: The world'S fastest taint tracker"}, {"link": "", "title": "Billions and billions of constraints: Whitebox fuzz testing in production"}, {"link": "", "title": "An infrastructure for adaptive dynamic optimization"}, {"link": "", "title": "BAP: A binary analysis platform"}, {"link": "", "title": "Input generation via decomposition and re-stitching: Finding bugs in malware"}, {"link": "", "title": "Polyglot: Automatic extraction of protocol message format using dynamic binary analysis"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "EXE: Automatically generating inputs of death"}, {"link": "/document/4556741", "title": "Flexible hardware acceleration for instruction-grain program monitoring"}, {"link": "/document/1691114", "title": "TaintTrace: Efficient flow tracing with dynamic binary rewriting"}, {"link": "", "title": "Decoupling dynamic program analysis from execution in virtual environments"}, {"link": "", "title": "Dytan: A generic dynamic taint analysis framework"}, {"link": "", "title": "A practical off-line taint analysis framework and its application in reverse engineering of file format"}, {"link": "", "title": "Micro execution"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Make it work, make it right, make it fast: Building a platform-neutral whole-system dynamic binary analysis platform"}, {"link": "", "title": "ShadowReplica: Efficient parallelization of dynamic data flow tracking"}, {"link": "", "title": "libdft: Practical dynamic data flow tracking for commodity systems"}, {"link": "", "title": "A unified approach to global program optimization"}, {"link": "", "title": "Backtracking intrusions"}, {"link": "", "title": "Trail of Bytes: Efficient support for forensic analysis"}, {"link": "", "title": "High accuracy attack provenance via binary-based execution partition"}, {"link": "", "title": "Pin: building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "iBinHunt: Binary hunting with inter-procedural control flow"}, {"link": "", "title": "TaintPipe: Pipelined symbolic taint analysis"}, {"link": "", "title": "LOOP: Logic-oriented opaque predicate detection in obfuscated binary code"}, {"link": "", "title": "Z3: an efficient smt solver"}, {"link": "", "title": "Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software"}, {"link": "", "title": "Parallelizing security checks on commodity hardware"}, {"link": "", "title": "CloudFence: Data flow tracking as a cloud service"}, {"link": "", "title": "PinPlay: A framework for deterministic replay and reproducible analysis of parallel programs"}, {"link": "", "title": "Hercules: Reproducing crashes in real-world application binaries"}, {"link": "", "title": "LIFT: A low-overhead practical information flow tracking system for detecting security attacks"}, {"link": "", "title": "Static taint-analysis on binary executables"}, {"link": "", "title": "Arithmetic program paths"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Decoupled lifeguards: Enabling path optimizations for dynamic correctness checking tools"}, {"link": "", "title": "Parallelizing dynamic information flow tracking lifeguards"}, {"link": "", "title": "All you ever wanted to know about dynamic taint analysis and forward symbolic execution"}, {"link": "", "title": "SWIFT: Decoupled system-wide information flow tracking and its optimizations"}, {"link": "", "title": "Reassembleable disassembling"}, {"link": "", "title": "STILL: Exploit code detection via static taint and initialization analyses"}, {"link": "", "title": "Architecture-independent dynamic information flow tracking"}, {"link": "", "title": "Program-object level data flow analysis with applications to data leakage and contamination forensics"}, {"link": "", "title": "ReTrace: Collecting execution trace with virtual machine deterministic replay"}, {"link": "/document/6975659", "title": "Bit-level taint analysis"}, {"link": "", "title": "A generic approach to automatic deobfuscation of executable code"}, {"link": "", "title": "Memoized symbolic execution"}, {"link": "", "title": "Panorama: Capturing system-wide information flow for malware detection and analysis"}, {"link": "", "title": "TEMU: Binary code analysis via whole-system layered annotative execution. Technical Report UCB/EECS-2010-3"}, {"link": "", "title": "DEP: Detailed execution profile"}, {"link": "", "title": "TaintEraser: protecting sensitive data leaks using application-level taint tracking"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582768"}
{"ref": [{"link": "", "title": "HawkNL"}, {"link": "", "title": "ASM 3.2"}, {"link": "", "title": "JDBC Connector 5.0"}, {"link": "", "title": "MySQL"}, {"link": "", "title": "MySQL Bugzilla"}, {"link": "", "title": "SLOCCount 2.26"}, {"link": "", "title": "SQLite"}, {"link": "/document/5571951", "title": "Detection of deadlock potentials in multithreaded programs"}, {"link": "", "title": "Producing scheduling that causes concurrent programs to fail"}, {"link": "", "title": "Scalable dynamic deadlock analysis of multi-threaded programs"}, {"link": "", "title": "Confirmation of deadlock potential detected by runtime analysis"}, {"link": "", "title": "A randomized scheduler with probabilistic guarantees of finding bugs"}, {"link": "/document/6747310", "title": "ASN: A Dynamic barrier-based approach to confirmation of deadlocks from warnings for large-scale multithreaded programs"}, {"link": "", "title": "Fixing Deadlocks via Lock Pre-Acquisitions"}, {"link": "/document/6718069", "title": "Magiclock: scalable detection of potential deadlocks in large-scale multithreaded programs"}, {"link": "/document/6227156", "title": "MagicFuzzer: scalable deadlock detection for large-scale applications"}, {"link": "", "title": "ConLock: A constraint-based approach to dynamic checking on deadlocks in multithreaded programs"}, {"link": "/document/5431749", "title": "Symbolic deadlock analysis in concurrent libraries and their clients"}, {"link": "", "title": "Sherlock: scalable deadlock detection for concurrent programs"}, {"link": "", "title": "A cross-run lock discipline checker for Java"}, {"link": "", "title": "FastTrack: efficient and precise dynamic race detection"}, {"link": "", "title": "Dynamic deadlock avoidance In systems code using statically inferred effects"}, {"link": "", "title": "Current challenges In automatic software repair"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automated software repair"}, {"link": "", "title": "Preventing database deadlocks In applications"}, {"link": "", "title": "Testing database-centric applications for causes of database deadlocks"}, {"link": "", "title": "Using runtime analysis to guide model checking of java programs"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Deadlock immunity: enabling systems to defend against deadlocks"}, {"link": "", "title": "Reasoning about threads communicating via locks"}, {"link": "", "title": "ConcBugAssist: Constraint solving for diagnosis and repair of concurrency bugs"}, {"link": "", "title": "Automatic repair for multithreaded programs with Deadlock/Livelock using maximum satisfiability"}, {"link": "/document/6227184", "title": "Axis: automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "Grail: context-aware fixing of concurrency bugs"}, {"link": "", "title": "Learning from mistakes: a comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "MulticoreSDK: a practical and efficient deadlock detector for real-world applications"}, {"link": "", "title": "Pin: building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Iterative Context Bounding for Systematic Testing of Multithreaded Programs"}, {"link": "", "title": "Finding and reproducing Heisenbugs In concurrent programs"}, {"link": "", "title": "Multicore acceleration of priority-based schedulers for concurrency bug detection"}, {"link": "", "title": "Effective static deadlock detection"}, {"link": "", "title": "Deadlocks: from exhibiting to healing"}, {"link": "", "title": "Debugging non-deadlock concurrency bugs"}, {"link": "", "title": "CTrigger: exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "Automatic program repair by fixing contracts"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "Avoiding deadlock avoidance"}, {"link": "", "title": "Scalable and precise dynamic datarace detection for structured parallelism"}, {"link": "", "title": "Trace driven dynamic deadlock detection and reproduction"}, {"link": "", "title": "Multithreaded test synthesis for deadlock detection"}, {"link": "", "title": "CUTE and jCUTE: concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "Deadlock-detection In java-library using static-analysis"}, {"link": "", "title": "PENELOPE: weaving threads to expose atomicity violations"}, {"link": "", "title": "Test-driven repair of data races In structured parallel programs"}, {"link": "", "title": "Gadara: dynamic deadlock avoidance for multithreaded programs"}, {"link": "", "title": "Automatic program repair with evolutionary computation. Communications of the ACM (CACM)"}, {"link": "", "title": "Static deadlock detection for java libraries"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "Maple: a coverage-driven testing tool for multithreaded programs"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "ConAir: featherweight concurrency bug recovery via single-threaded idempotent execution"}, {"link": "/document/6227210", "title": "where should the bugs be fixed? - more accurate information-retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582772"}
{"ref": [{"link": "", "title": "Mining API Patterns as Partial Orders from Source Code: From Usage Scenarios to Specifications"}, {"link": "", "title": "Learning Natural Coding Conventions"}, {"link": "/document/32278", "title": "A Tree-Based Statistical Language Model for Natural Language Speech Recognition"}, {"link": "", "title": "DynaMine: Finding Common Error Patterns by Mining Software Revision Histories"}, {"link": "", "title": "Syntax Errors Just Aren't Natural: Improving Error Reporting with Language Models"}, {"link": "", "title": "Finding What's Not There: A New Approach to Revealing Neglected Conditions in Software"}, {"link": "", "title": "Statistical Language Learning"}, {"link": "", "title": "Bugs as Deviant Behavior"}, {"link": "", "title": "The Daikon System for Dynamic Detection of Likely Invariants"}, {"link": "", "title": "Learning from 6,000 Projects: Lightweight Cross-Project Anomaly Detection"}, {"link": "", "title": "The WEKA Data Mining Software: An Update"}, {"link": "", "title": "Code Completion from Abbreviated Input"}, {"link": "", "title": "Tracking Down Software Bugs Using Automatic Anomaly Detection"}, {"link": "/document/7180076", "title": "Will They Like This?: Evaluating Code Contributions with Language Models"}, {"link": "/document/6227135", "title": "On the Naturalness of Software"}, {"link": "", "title": "Finding Bugs is Easy"}, {"link": "", "title": "Using Web Corpus Statistics for Program Analysis"}, {"link": "", "title": "Maximal Sound Predictive Race Detection with Control Flow Abstraction"}, {"link": "", "title": "An Approach to Mining Call-Usage Patterns with Syntactic Context"}, {"link": "", "title": "Rendezvous: A Search Engine for Binary Code"}, {"link": "", "title": "An Automated Approach for Finding Variable-constant Pairing Bugs"}, {"link": "", "title": "CP-Miner: A Tool for Finding Copy-paste and Related Bugs in Operating System Code"}, {"link": "", "title": "PR-Miner: Automatically Extracting Implicit Programming Rules and Detecting Violations in Large Software Code"}, {"link": "", "title": "AntMiner: Mining More Bugs by Reducing Noise Interference"}, {"link": "", "title": "PF-Miner: A New Paired Functions Mining Method for Android Kernel in Error Paths"}, {"link": "", "title": "Foundations of Statistical Natural Language Processing"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Detecting Missing Method Calls As Violations of the Majority Rule"}, {"link": "", "title": "Natural Language Models for Predicting Programming Comments"}, {"link": "", "title": "Software Fault Localization Using N-gram Analysis"}, {"link": "", "title": "A Statistical Semantic Language Model for Source code"}, {"link": "", "title": "Graph-based Mining of Multiple Object Usage Patterns"}, {"link": "", "title": "Learning to Generate Pseudo-code from Source Code Using Statistical Machine Translation"}, {"link": "", "title": "Automatic Generation of Object Usage Specifications from Large Method Traces"}, {"link": "/document/4222586", "title": "Path-Sensitive Inference of Function Precedence Protocols"}, {"link": "", "title": "On the \u201cNaturalness\u201d of Buggy Code"}, {"link": "", "title": "Code Completion with Statistical Language Models"}, {"link": "", "title": "Two Decades of Statistical Language Modeling"}, {"link": "/document/6575307", "title": "Hector: Detecting Resource-release Omission Faults in Error-handling Code for Systems Software"}, {"link": "", "title": "An Alternative to the Hand Searching Gold Standard: Validating Methodological Search Filters Using Relative Recall"}, {"link": "", "title": "Static Specification Mining Using Automata-Based Abstractions"}, {"link": "/document/6227114", "title": "Extending Static Analysis by Mining Project-specific Rules"}, {"link": "", "title": "iComment: Bugs or Bad Comments?"}, {"link": "", "title": "tComment: Testing Javadoc Comments to Detect Comment-code Inconsistenciesz"}, {"link": "", "title": "Mining Exception-Handling Rules as Sequence AssociationRules"}, {"link": "", "title": "Alattin: Mining Alternative Patterns for Defect Detection"}, {"link": "", "title": "On the Localness of Software"}, {"link": "/document/6624045", "title": "Mining Succinct and High-coverage API Usage Patterns from Source Code"}, {"link": "", "title": "Mining Temporal Specifications from Object Usage"}, {"link": "", "title": "Detecting Object Usage Anomalies"}, {"link": "", "title": "Toward Deep Learning Software Repositoriesz"}, {"link": "/document/1463230", "title": "Automatic Mining of Source Code Repositories to Improve Bug Finding Techniques"}, {"link": "", "title": "Recovering System Specific Rules from Software Repositories"}, {"link": "", "title": "MAPO: Mining API Usages from Open Source Repositories"}, {"link": "", "title": "Detection and Classification of Malicious Javascript via Attack Behavior Modelling"}, {"link": "", "title": "Perracotta: Mining Temporal API Rules from Imperfect Traces"}, {"link": "", "title": "GUI Software Fault Localization Using N-gram Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582806"}
{"ref": [{"link": "", "title": "Neural probabilistic language models"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Detecting semantically equivalent questions in online user forums"}, {"link": "", "title": "Improving ir-based traceability recovery via noun-based indexing of software artifacts"}, {"link": "/document/7476655", "title": "Mining analogical libraries in q&a discussions -incorporating relational and categorical knowledge into word embedding"}, {"link": "", "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning"}, {"link": "", "title": "Natural language processing (almost) from scratch"}, {"link": "", "title": "Exploiting user feedback to learn to rank answers in q&a forums: a case study with stack overflow"}, {"link": "", "title": "Integrating information retrieval, execution and link analysis algorithms to improve feature location in software"}, {"link": "", "title": "Deep convolutional neural networks for sentiment analysis of short texts"}, {"link": "", "title": "Multiun: A multilingual corpus from united nation documents"}, {"link": "", "title": "Software verification and validation research laboratory (svvrl) of the university of kentucky: traceability challenge 2011: language translation"}, {"link": "", "title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups"}, {"link": "", "title": "Convolutional neural networks for sentence classification"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "", "title": "Codegenie: using test-cases to search and reuse source code"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Building program vector representations for deep learning"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "/document/295894", "title": "A framework for source code search using program patterns"}, {"link": "", "title": "A language modeling approach to information retrieval"}, {"link": "", "title": "Neural programmer-interpreters"}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Okapi at trec-3"}, {"link": "", "title": "Recommending reference api documentation"}, {"link": "", "title": "Learning representations by back-propagating errors"}, {"link": "/document/6693093", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "A vector space model for automatic indexing"}, {"link": "", "title": "Recursive deep models for semantic compositionality over a sentiment treebank"}, {"link": "", "title": "A statistical interpretation of term specificity and its application in retrieval"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Large scale parallel document mining for machine translation"}, {"link": "", "title": "Visualizing data using t-sne"}, {"link": "/document/6606622", "title": "Improving feature location practice with multi-faceted interactive exploration"}, {"link": "", "title": "Active code search: incorporating user feedback to improve code search relevance"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Cross-language bug localization"}, {"link": "", "title": "Domain-specific cross-language relevant question retrieval"}, {"link": "", "title": "Hierarchical attention networks for document classification"}, {"link": "", "title": "A sensitivity analysis of (and practitioners' guideto) convolutional neural networks for sentence classification"}, {"link": "", "title": "Deep learning for chinese word segmentation and pos tagging"}, {"link": "", "title": "Learning continuous word embedding with metadata for question retrieval in community question answering"}, {"link": "", "title": "Learning to rank for question-oriented software text retrieval (t)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582810"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/5571951", "title": "Detection of deadlock potentials in multithreaded programs"}, {"link": "", "title": "Run-time detection of potential deadlocks for programs with locks, semaphores, and condition variables"}, {"link": "", "title": "Analysis of may- happen- in- parallel in concurrent objects"}, {"link": "/document/948499", "title": "Applying static analysis to large-scale, multi-threaded Java programs"}, {"link": "", "title": "D-Finder: A tool for compositional deadlock detection and verification"}, {"link": "/document/5970518", "title": "Efficient deadlock detection for concurrent systems"}, {"link": "", "title": "Flow-insensitive interprocedural alias analysis in the presence of pointers"}, {"link": "/document/6718069", "title": "Magiclock: Scalable detection of potential deadlocks in large-scale multithreaded programs"}, {"link": "", "title": "SyncChecker: detecting synchronization errors between MPI applications and libraries"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Verifying multi-threaded software using SMT-based context-bounded model checking"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "RacerX: effective, static detection of race conditions and deadlocks"}, {"link": "", "title": "Sherlock: scalable deadlock detection for concurrent programs"}, {"link": "", "title": "Validity threats in empirical software engineering research-an initial survey"}, {"link": "", "title": "May-happen-in-parallel based deadlock analysis for concurrent objects"}, {"link": "", "title": "Precise predictive analysis for discovering communication deadlocks in MPI programs"}, {"link": "", "title": "Using runtime analysis to guide model checking of Java programs"}, {"link": "", "title": "Lazy abstraction"}, {"link": "", "title": ""}, {"link": "/document/7372071", "title": "Lazy-CSeq: A context-bounded model checking tool for multi-threaded C-programs"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Fast and accurate static data-race detection for concurrent programs"}, {"link": "", "title": "Static slicing of threaded programs"}, {"link": "", "title": "Context-sensitive slicing of concurrent programs"}, {"link": "", "title": "Sound static deadlock analysis for C/Pthreads (extended version)"}, {"link": "", "title": "Automating software analysis at large scale"}, {"link": "", "title": "Efficient may happen in parallel analysis for async-finish parallelism"}, {"link": "", "title": "Multicore SDK: A practical and efficient deadlock detector for real-world applications"}, {"link": "", "title": "Non-concurrency analysis"}, {"link": "", "title": "Effective static deadlock detection"}, {"link": "", "title": "Slicing concurrent programs"}, {"link": "", "title": "A conservative data flow algorithm for detecting all pairs of statement that may happen in parallel"}, {"link": "", "title": "Analysis of multithreaded programs"}, {"link": "", "title": "CIVL: The concurrency intermediate verification language"}, {"link": "", "title": "PickLock: A deadlock prediction approach under nested locking"}, {"link": "", "title": ""}, {"link": "", "title": "Verifying concurrent programs by memory unwinding"}, {"link": "", "title": "Detecting Synchronization Defects in Multi-Threaded Object-Oriented Programs"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Static deadlock detection for Java libraries"}, {"link": "/document/7372075", "title": "CIVL: formal verification of parallel programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582774"}
{"ref": [{"link": "", "title": "Establishing theoretical minimal sets of mutants"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "Random test run length and effectiveness"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Quickcheck: A lightweight tool for random testing of haskell programs"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "", "title": "Code coverage for suite evaluation by developers"}, {"link": "/document/6823886", "title": "Cause reduction for quick testing"}, {"link": "", "title": "Cause reduction: Delta debugging, even without bugs"}, {"link": "/document/4222623", "title": "Randomized differential testing as $a$ prelude to formal verification"}, {"link": "/document/6227144", "title": "On-demand test suite reduction"}, {"link": "", "title": "A methodology for controlling the size of a test suite"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": ""}, {"link": "", "title": "Threats to the validity of mutation-based test assessment"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of $a$ simple, fast and effective equivalent mutant detection technique"}, {"link": "", "title": "Test-case reduction for C compiler bugs"}, {"link": "", "title": "Empirical studies of test-suite reduction"}, {"link": "", "title": "Introducing jsfunfuzz"}, {"link": "", "title": "Balancing trade-offs in test-suite reduction"}, {"link": "", "title": "Massive stochastic testing of SQL"}, {"link": "", "title": "Automatic isolation of compiler errors"}, {"link": "", "title": "Pareto efficient multi-objective test case selection"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582741"}
{"ref": [{"link": "", "title": "User comment analysis for android apps and cspi detection with comment expansion"}, {"link": "", "title": "Ar-miner: Mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": "Is this app safe for children?: A comparison study of maturity ratings on android and ios applications"}, {"link": "", "title": "Generating typed dependency parses from phrase structure parses"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "/document/6606604", "title": "Analysis of user comments: An approach for software requirements evolution"}, {"link": "", "title": "How do users like this feature? a fine grained sentiment analysis of appreviews"}, {"link": "", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "Online reviews as first class artifacts in mobile app development"}, {"link": "", "title": "Opinion spam and analysis"}, {"link": "/document/6606749", "title": "On identifying user complaints of ios apps"}, {"link": "", "title": "Prioritizing the devices to test your app on: A case study of android game apps"}, {"link": "", "title": "What do mobile app users complain about? a study on free ios apps"}, {"link": "", "title": "Phrase clustering for discriminative learning"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "/document/7332475", "title": "User reviews matter! tracking crowdsourced reviews to support evolution of successful apps"}, {"link": "", "title": "Mining user opinions in mobile app reviews: A keyword-based approach (t)"}, {"link": "", "title": "Tool support for analyzing mobile app reviews"}, {"link": "", "title": "Relationship between reviews at app store and the categories for software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582808"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Flowdroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Dexpler: converting Android Dalvik bytecode to Jimple for static analysis with Soot"}, {"link": "", "title": "EdgeMiner: Automatically detecting implicit control flow transitions through the android framework"}, {"link": "", "title": "NuSMV 2: An opensource tool for symbolic model checking"}, {"link": "", "title": "Characterizing and detecting resource leaks in Android applications"}, {"link": "", "title": "Scalable and precise taint analysis for Android"}, {"link": "", "title": "Wakescope: Runtime wakelock anomaly management scheme for Android platform"}, {"link": "", "title": "Where has my battery gone? finding sensor related energy black holes in smartphone applications"}, {"link": "", "title": "Dynodroid: an input generation system for Android apps"}, {"link": "", "title": "Light-weight, inter-procedural and callback-aware resource leak detection for android apps"}, {"link": "", "title": "Systematic testing for resource leaks in Android applications"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in Android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582812"}
{"ref": [{"link": "", "title": "The KeY Platform for Verification and Analysis of Java Programs"}, {"link": "", "title": "Verifying object-oriented programs with KeY: a tutorial"}, {"link": "", "title": "Interactive theorem proving: An empirical study of user activity"}, {"link": "", "title": "A Usability Evaluation of Interactive Theorem Provers Using Focus Groups"}, {"link": "", "title": "Project Report: Theorem Prover Usability. Technical report, Report of project COMM 641"}, {"link": "", "title": "Some Implementations of the Boxplot"}, {"link": "", "title": "Integrating Symbolic Execution, Debugging and Verification"}, {"link": "", "title": "Symbolic Execution Debugger (SED)"}, {"link": "", "title": "The Interactive Verification Debugger: Effective Understanding of Interactive Proof Attempts"}, {"link": "", "title": "Interactive proof critics"}, {"link": "", "title": "Desirable features of educational theorem provers - a Cognitive Dimensions viewpoint"}, {"link": "", "title": "JML Reference Manual"}, {"link": "", "title": "Is-abelle/H'Ol.: A Proof Assistant for Higher-Order Logic"}, {"link": "", "title": "Experimentation in Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582776"}
{"ref": [{"link": "/document/6883014", "title": "Envision: A fast and flexible visual code editor with fluid interactions (overview)"}, {"link": "", "title": "The IDE as a Scriptable Information System (extended version)"}, {"link": "", "title": "Answering conceptual queries with Ferret"}, {"link": "", "title": "The SOUL tool suite for querying programs in symbiosis with Eclipse"}, {"link": "", "title": "Using information fragments to answer the questions developers ask"}, {"link": "", "title": "Scripting a refactoring with Rascal and Eclipse"}, {"link": "", "title": "Navigating and querying code without getting lost"}, {"link": "", "title": "Stacksplorer: Call graph navigation helps increasing code maintenance efficiency"}, {"link": "", "title": "Reasoning over the evolution of source code using quantified regular path expressions"}, {"link": "/document/6100076", "title": "Querying source code with natural language"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Blaze: Supporting two-phased call graph navigation in source code"}, {"link": "", "title": "Visualizing call graphs"}, {"link": "", "title": "Developers ask reachability questions"}, {"link": "", "title": "ql: Object-oriented queries made easy"}, {"link": "/document/1707671", "title": "The SEXTANT software exploration tool"}, {"link": "/document/4497212", "title": "Asking and answering questions during a programming change task"}, {"link": "", "title": "JunGL: A scripting language for refactoring"}, {"link": "", "title": "Supporting developers with natural language queries"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582780"}
{"ref": [{"link": "", "title": "SIR web page"}, {"link": "", "title": "Symbolic execution for software testing in practice: Preliminary assessment"}, {"link": "", "title": "Symbolic execution for software testing: Three decades later"}, {"link": "/document/7372058", "title": "Quantification of software changes through probabilistic symbolic execution"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "/document/4976386", "title": "The impact of equivalent mutants"}, {"link": "", "title": "Inria. Barvinok"}, {"link": "/document/4637557", "title": "Constructing subtle faults using higher order mutation testing"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Assessing and Improving the Mutation Testing Practice of PIT"}, {"link": "", "title": "Symbolic pathfinder: integrating symbolic execution with model checking for java bytecode analysis"}, {"link": "", "title": "UC Davis, Mathematics. Latte."}, {"link": "", "title": "Green: Reducing, reusing and recycling constraints in program analysis"}, {"link": "", "title": "Software Fault Injection: Inoculating Programs Against Errors"}, {"link": "", "title": "A study of equivalent and stubborn mutation operators using human analysis of equivalence"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582743"}
{"ref": [{"link": "", "title": "Hardware-software co-design of embedded systems: the POLIS approach"}, {"link": "", "title": "Scade-synchoronous design and validation of embedded control software"}, {"link": "", "title": "Ptolemy: A framework for simulating and prototyping heterogeneous systems."}, {"link": "", "title": "Train Communication Network"}, {"link": "", "title": "Duagon. Mvb controller: D113"}, {"link": "", "title": "An operational semantics for stateflow"}, {"link": "", "title": "Modeling reactive systems with statecharts: the STATEMATE approach"}, {"link": "", "title": ""}, {"link": "", "title": "User manual of syncblock"}, {"link": "/document/6296480", "title": "Uncertain model and algorithm for hardware/software partitioning"}, {"link": "", "title": "Design of mixed synchronous/asynchronous systems with multiple clocks"}, {"link": "", "title": "Simulink. Inc."}, {"link": "", "title": "Fpga implementation of multifunction vehicle bus controller with class 2 interface and verification using beaglebone black"}, {"link": "", "title": "System modeling and transformational design refinement in For Syde [formal system design]"}, {"link": "", "title": "Formal modeling and synthesis of programmable logic controllers"}, {"link": "", "title": "Imperfect information dynamic stackelberg game based resource allocation using hidden markov for cloud computing."}, {"link": "", "title": "Tsmart-galsblock: A toolkit for modeling, validation, and synthesis of multi-clocked embedded systems"}, {"link": "", "title": "From stateflow simulation to verified implementation: A verification approach and a real-time train controller design"}, {"link": "/document/6786041", "title": "Design and optimization of multi-clocked embedded systems using formal techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582814"}
{"ref": [{"link": "", "title": "7 reasons why you should be using continuous integration"}, {"link": "", "title": ""}, {"link": "", "title": "The benefits of continuous integration"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Team Foundation Server"}, {"link": "", "title": "Tools for software engineers"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Why don't we use continuous integration?"}, {"link": "", "title": "Yaml: Yaml ain't markup language"}, {"link": "/document/6405266", "title": "Detecting semantic changes in Makefile build code"}, {"link": "", "title": "10+ deploys per day: Dev and ops cooperation at Flickr"}, {"link": "/document/796139", "title": "Embracing change with Extreme Programming"}, {"link": "", "title": "How (much) do developers test?"}, {"link": "", "title": "Oops, my tests broke the build: An analysis of travis ci builds with github"}, {"link": "", "title": "Object Oriented Design with Applications"}, {"link": "", "title": "Supporting continuous integration by mashing-up software quality information"}, {"link": "/document/7081840", "title": "SQA-Profiles: Rule-based activity profiles for continuous integration environments"}, {"link": "", "title": "Build system with lazy retrieval for Java projects"}, {"link": "", "title": "Continuous test generation: Enhancing continuous integration with automated test generation"}, {"link": "", "title": "Communicating continuous integration servers for increasing effectiveness of automated testing"}, {"link": "", "title": "Ambient awareness of build status in collocated software teams"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Virtual to the (near) end: Using virtual platforms for continuous integration"}, {"link": "", "title": "A sound and optimal incremental build system with dynamic dependencies"}, {"link": "", "title": "Scaling agile methods to regulated environments: An industry case study"}, {"link": "", "title": "Continuous Integration"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "The GHTorrent dataset and tool suite"}, {"link": "", "title": "Evidence and case studies"}, {"link": "/document/7167168", "title": "Supporting continuous integration by code-churn based test selection"}, {"link": "", "title": "An empirical study on the adequacy of testing in open source projects"}, {"link": "", "title": "Gender differences in early free and open source software joining process"}, {"link": "", "title": "Stakeholder perceptions of the adoption of continuous integration: A case study"}, {"link": "", "title": "The highways and country roads to continuous deployment"}, {"link": "/document/4599493", "title": "A hundred days of continuous integration"}, {"link": "", "title": "Data debugging with continuous testing"}, {"link": "", "title": "10th annual state of Agile development survey"}, {"link": "", "title": "Puppet and DevOps Research and Assessments (DORA). 2016 state of DevOps Report"}, {"link": "/document/1553645", "title": "Continuous testing in Eclipse"}, {"link": "", "title": "Testing at the speed and scale of Google"}, {"link": "", "title": "Tools for continuous integration at Google scale"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in GitHub"}, {"link": "", "title": "Continuous test suite augmentation in software product lines"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Extracting configuration knowledge from build files with symbolic analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582778"}
{"ref": [{"link": "", "title": "Runtime pointer disambiguation"}, {"link": "", "title": "Swig: An easy to use tool for integrating scripting languages with c and c++"}, {"link": "", "title": "Memory safety without runtime checks or garbage collection"}, {"link": "", "title": "Checking type safety of foreign function calls"}, {"link": "", "title": "The GNOME Project. GNOME"}, {"link": "", "title": "The GNOME Project. Gck library reference manual"}, {"link": "", "title": "The GNOME Project. GIO reference manual"}, {"link": "", "title": "The GNOME Project. GLib reference manual"}, {"link": "", "title": "The GNOME Project. GObject-Introspection Annotations"}, {"link": "", "title": "libssh"}, {"link": "", "title": "Modular checking for buffer overflows in the large"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Refining buffer overflow detection via demand-driven path-sensitive analysis"}, {"link": "", "title": "The libgit2 contributors"}, {"link": "", "title": "Muvi: Automatically inferring multi-variable access correlations and detecting related semantic and concurrency bugs"}, {"link": "", "title": "SoftBound: Highly compatible and complete spatial memory safety for C."}, {"link": "", "title": "Validation of memory accesses through symbolic analyses"}, {"link": "", "title": "CCured: Type-safe retrofitting of legacy software"}, {"link": "", "title": "Analyzing memory ownership patterns in C libraries"}, {"link": "", "title": "Automatic generation of library bindings using static analysis"}, {"link": "", "title": "Symbolic bounds analysis of pointers, array indices, and accessed memory regions"}, {"link": "", "title": "The Telepathy Project. telepathy"}, {"link": "", "title": "SLOCCount"}, {"link": "", "title": "Verifying complex properties using symbolic shape analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582782"}
{"ref": [{"link": "", "title": "How are related questions selected"}, {"link": "", "title": "How to ask a good question"}, {"link": "", "title": "A survey of link prediction in social networks"}, {"link": "", "title": "Emergence of scaling in random networks"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Detecting semantically equivalent questions in online user forums"}, {"link": "", "title": "Hierarchical structure and the prediction of missing links in networks"}, {"link": "", "title": "Temporal link prediction using matrix and tensor factorizations"}, {"link": "", "title": "Predicting tie strength with social media"}, {"link": "", "title": "Deep sparse rectifier neural networks"}, {"link": "", "title": "Distributional structure"}, {"link": "", "title": "A practical guide to support vector classification"}, {"link": "", "title": "Receptive fields of single neurones in the cat's striate cortex"}, {"link": "", "title": "Why we twitter: understanding microblogging usage and communities"}, {"link": "", "title": "Short text similarity with word embeddings"}, {"link": "", "title": "Convolutional neural networks for sentence classification"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "The link-prediction problem for social networks"}, {"link": "", "title": "Link prediction in complex networks: A survey"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "Recalling the imprecision of cross-project defect prediction"}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "", "title": "The probabilistic relevance framework: BM25 and beyond"}, {"link": "", "title": "An empirical study on recommendations of similar bugs"}, {"link": "/document/7081855", "title": "Nirmal: Automatic identification of software relevant tweets leveraging language model"}, {"link": "", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "/document/6178884", "title": "Improved duplicate bug report identification"}, {"link": "", "title": "Word representations: a simple and general method for semi-supervised learning"}, {"link": "", "title": "Visualizing data using t-sne"}, {"link": "", "title": "A primer on kernel methods"}, {"link": "", "title": "Tagcombine: Recommending tags to contents in software information sites"}, {"link": "", "title": "It takes two to tango: Deleted stack overflow question prediction with text and meta features"}, {"link": "/document/7435328", "title": "Hydra: Massively compositional model for cross-project defect prediction"}, {"link": "", "title": "Automated bug report field reassignment and refinement prediction"}, {"link": "", "title": "Elblocker: Predicting blocking bugs with ensemble imbalance learning"}, {"link": "", "title": "Automatic, high accuracy prediction of reopened bugs"}, {"link": "", "title": "Tag recommendation in software information sites"}, {"link": "", "title": "Predicting crashing releases of mobile applications"}, {"link": "", "title": "Efspredictor: Predicting configuration bugs with ensemble feature selection"}, {"link": "", "title": "Domain-specific cross-language relevant question retrieval"}, {"link": "/document/7476633", "title": "Software-specific named entity recognition in software engineering social content"}, {"link": "", "title": "The structure and dynamics of knowledge network in domain-specific q&a sites: a case study of stack overflow"}, {"link": "", "title": "Software-specific part-of-speech tagging: An experimental study on stack overflow"}, {"link": "/document/6606654", "title": "Predicting bug-fixing time: an empirical study of commercial software projects"}, {"link": "", "title": "Expertise networks in online communities: structure and algorithms"}, {"link": "", "title": "Multi-factor duplicate question detection in stack overflow"}, {"link": "", "title": "Towards more accurate content categorization of api discussions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582745"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Hp fortify static code analyzer."}, {"link": "", "title": "Iso/iec 9899"}, {"link": "", "title": "Klee llvm execution engine."}, {"link": "", "title": "The llvm compiler infrastructure."}, {"link": "/document/976940", "title": "Improving security using extensible lightweight static analysis"}, {"link": "", "title": "Testing c programs for buffer overflow vulnerabilities"}, {"link": "", "title": "Marple: a demand-driven path-sensitive buffer overflow detector"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Mutation-based testing of buffer overflow vulnerabilities"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Automatic discovery and patching of buffer and integer overflow errors"}, {"link": "", "title": "Dira: Automatic detection, identification and repair of control-hijacking attacks"}, {"link": "", "title": "A first step towards automated detection of buffer overrun vulnerabilities"}, {"link": "", "title": "Testing for buffer overflows with length abstraction"}, {"link": "", "title": "An empirical study on detecting and fixing buffer overflow bugs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582816"}
{"ref": [{"link": "", "title": "Mining Source Code Repositories with Boa"}, {"link": "", "title": "SOFAS, Software Analysis as a Service"}, {"link": "/document/5069478", "title": "A Platform for Software Engineering Research"}, {"link": "", "title": "Evaluating software engineering methods and tool part 1: The evaluation context and evaluation methods"}, {"link": "", "title": "Ontology-based data access: Ontop of databases"}, {"link": "/document/7372015", "title": "Spyrest: Automated restful API documentation using an HTTP proxy server (N)"}, {"link": "/document/6624033", "title": "A Network of Rails: A Graph Dataset of Ruby on Rails and Associated Projects"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582820"}
{"ref": [{"link": "", "title": "42 Variability Bugs in the Linux Kernel: A Qualitative Analysis"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java Pathfinder"}, {"link": "", "title": "Configuration-Aware Change Impact Analysis"}, {"link": "", "title": "Domain Types: Abstract-Domain Selection Based on Variable Usage"}, {"link": "", "title": "Strategies for Product-Line Verification: Case Studies and Experiments"}, {"link": "", "title": "Multiple Facets for Dynamic Information Flow"}, {"link": "", "title": "Faceted Execution of Policy-Agnostic Programs"}, {"link": "", "title": "A Decade of Software Model Checking with SLAM"}, {"link": "", "title": "The Software Model Checker Blast: Applications to Software Engineering"}, {"link": "", "title": "Variable-Specific Resolutions for Feature Interactions"}, {"link": "", "title": "SPLLIFT: Statically Analyzing Software Product Lines in Minutes Instead of Years"}, {"link": "", "title": "Regression Tests to Expose Change Interaction Errors"}, {"link": "", "title": "Intraprocedural Dataflow Analysis for Software Product Lines"}, {"link": "/document/1663532", "title": "No Silver Bullet: Essence and Accidents of Software Engineering"}, {"link": "", "title": "Foundations for Features"}, {"link": "", "title": "\n            Symbolic Model Checking: 10\n            "}, {"link": "", "title": "Improving the Testing and Testability of Software Product Lines"}, {"link": "", "title": "Feature Interaction A Critical Review and Considered Forecast"}, {"link": "", "title": "On Strategies for Testing Software Product Lines: A Systematic Literature Review"}, {"link": "", "title": "Symbolic Model Checking of Software Product Lines"}, {"link": "", "title": "Interaction Testing of Highly-Configurable Systems in the Presence of Constraints"}, {"link": "/document/4528965", "title": "Delta Execution for Efficient State-Space Exploration of Object-Oriented Programs"}, {"link": "", "title": "FlowFox: A Web Browser with Flexible and Precise Information Flow Control"}, {"link": "", "title": "Noninterference Through Secure Multi-Execution"}, {"link": "", "title": "The Choice Calculus: A Representation for Software Variation"}, {"link": "", "title": "Feature Interaction Faults Revisited: An Exploratory Study"}, {"link": "", "title": "The Most Dangerous Code in the World: Validating SSL Certificates in Non-Browser Software"}, {"link": "/document/6227189", "title": "Test Confessions: A Study of Testing Practices for Plug-in Systems"}, {"link": "", "title": "Fundamental Nonmodularity in Electronic Mail"}, {"link": "", "title": "Model Checking Java Programs Using Java PathFinder"}, {"link": "", "title": "Semantics-aware trace analysis"}, {"link": "", "title": "VARAN the Unbelievable: An Efficient N-version Execution Framework"}, {"link": "/document/729683", "title": "Distributed Feature Composition: A Virtual Architecture for Telecommunications Services"}, {"link": "", "title": "Type Checking Annotation-Based Product Lines"}, {"link": "", "title": "A Variability-Aware Module System"}, {"link": "", "title": "Toward Variability-Aware Testing"}, {"link": "", "title": "Reducing Combinatorics in Testing Product Lines"}, {"link": "", "title": "Shared Execution for Efficiently Testing Product Lines"}, {"link": "", "title": "SPLat: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems"}, {"link": "", "title": "Feature Interactions in Telecommunication Systems VI"}, {"link": "", "title": "CONIC: An Integrated Approach to Distributed Computer Control Systems"}, {"link": "/document/1321063", "title": "Software Fault Interactions and Implications for Software Testing"}, {"link": "", "title": "Scalable Analysis of Variable Software"}, {"link": "", "title": "Tracking-Time Configuration Options"}, {"link": "", "title": "A Standard Problem for Evaluating Product-Line Methodologies"}, {"link": "", "title": "Tachyon: Tandem Execution for Efficient Live Patch Testing"}, {"link": "", "title": "A Comparison of 10 Sampling Algorithms for Configurable Systems"}, {"link": "", "title": "The Love/Hate Relationship with the C Preprocessor: An Interview Study"}, {"link": "", "title": "VarexJ: A Variability-Aware Interpreter for Java Applications"}, {"link": "", "title": "SAT-Based Analysis of Feature Models is Easy"}, {"link": "", "title": "Exploring Variability-Aware Execution for Testing Plugin-Based Web Applications"}, {"link": "", "title": "Feature Interaction The Security Threat from within Software Systems"}, {"link": "", "title": "A Survey of Combinatorial Testing"}, {"link": "", "title": "Feature Integration Using a Feature Construct"}, {"link": "", "title": "Using Symbolic Evaluation to Understand Behavior in Configurable Software Systems"}, {"link": "", "title": "QuEval: Beyond High-Dimensional Indexing \u00e0 la Carte"}, {"link": "", "title": "MultiSE: Multi-Path Symbolic Execution Using Value Summaries"}, {"link": "/document/6671585", "title": "iTree: Efficiently Discovering High-Coverage Configurations Using Interaction Trees"}, {"link": "", "title": "Coalescing Executions for Fast Uncertainty Analysis"}, {"link": "", "title": "Static Analysis of Variability in System Software: The 90,000# Ifdefs Issue"}, {"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "", "title": "Efficient Online Validation with Delta Execution"}, {"link": "", "title": "Introducing Binary Decision Diagrams in the Explicit-State Verification of Java Code"}, {"link": "", "title": "Variational Data Structures: Exploring Tradeoffs in Computing with Variability"}, {"link": "", "title": "Efficient Program Execution Indexing"}, {"link": "", "title": "Do Not Blame Users for Misconfigurations"}, {"link": "", "title": "An Empirical Study on Configuration Errors in Commercial and Open Source Systems"}, {"link": "", "title": "Software Requirements and Design: The Work of Michael Jackson"}, {"link": "", "title": "Automated Diagnosis of Software Configuration Errors"}, {"link": "", "title": "Whole Execution Traces and Their Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582784"}
{"ref": [{"link": "/document/1617393", "title": "Mondrian multidimensional k-anonymity"}, {"link": "/document/1410291", "title": "Bottom-up generalization: A data mining solution to privacy protection"}, {"link": "", "title": "Achieving k-anonymity privacy protection using generalization and suppression"}, {"link": "", "title": "K-anonymity: A model for protecting privacy"}, {"link": "/document/1410123", "title": "Top-down specialization for information and privacy preservation"}, {"link": "", "title": "Privacy-preserving trajectory data publishing by local suppression"}, {"link": "", "title": "l-diversity: Privacy beyond k-anonymity"}, {"link": "", "title": "T-closeness: Privacy beyond k-anonymity and 1-diversity"}, {"link": "", "title": "A fuzzy variant of k-member clustering for collaborative filtering with data anonymization"}, {"link": "", "title": "Efficient k-anonymization using clustering techniques"}, {"link": "/document/6622513", "title": "A study on applicability of fuzzy k-member clustering to privacy-preserving pattern recognition"}, {"link": "", "title": "Anonymizing graphs: measuring quality for clustering"}, {"link": "", "title": "Privacy-preserving k-means clustering over vertically partitioned data"}, {"link": "", "title": "Achieving anonymity via clustering"}, {"link": "", "title": "Anatomy: Simple and effective privacy preservation"}, {"link": "", "title": "(a, k)-anonymity: an enhanced k-anonymity model for privacy-preserving data publishing"}, {"link": "", "title": "State-of-the-art in privacy-preserving data mining"}, {"link": "", "title": "Is data privacy always good for software testing?"}, {"link": "/document/5645625", "title": "Slicing: A new approach for privacy-preserving data publishing"}, {"link": "", "title": "Privacy-preserving data publishing: A survey of recent developments"}, {"link": "/document/6227194", "title": "Privacy and utility for defect Prediction: Experiments with morph"}, {"link": "/document/6419712", "title": "Balancing privacy and utility in cross-company defect Prediction"}, {"link": "", "title": "LACE2: better privacy-preserving data sharing for cross project defect Prediction"}, {"link": "", "title": "Camouflage: automated anonymization of field data"}, {"link": "", "title": "Testing software in age of data privacy: a balancing act"}, {"link": "", "title": "Kbe-anonymity: test data anonymization for evolving programs"}, {"link": "", "title": "Kb-anonymity: a model for anonymized behavior-preserving test and debugging data"}, {"link": "", "title": "The cost of privacy: destruction of data-mining utility in anonymized data publishing"}, {"link": "/document/5288526", "title": "A survey on transfer learning"}, {"link": "", "title": "Learning the K inK-means"}, {"link": "", "title": "Principal component analysis"}, {"link": "", "title": "An empirical study of maintenance and development estimation accuracy"}, {"link": "", "title": "Maximum likelihood from incomplete data via the EM algorithm"}, {"link": "/document/6081882", "title": "On the value of ensemble effort estimation"}, {"link": "", "title": "PROMISE Repository of empirical software engineering data"}, {"link": "", "title": "An empirical validation of software cost estimation models"}, {"link": "/document/277575", "title": "Software development cost estimation using function points"}, {"link": "", "title": "Differential privacy: A survey of results"}, {"link": "", "title": "Decision support analysis for software effort estimation by analogy"}, {"link": "/document/5288525", "title": "From t-closeness-like privacy to postrandomization via information theory"}, {"link": "", "title": "Preservation of proximity privacy in publishing numerical sensitive data"}, {"link": "", "title": "Cancer statistics, 1996"}, {"link": "", "title": "A global geometric framework for nonlinear dimensionality reduction"}, {"link": "", "title": "Laplacian eigenmaps and spectral techniques for embedding and clustering"}, {"link": "/document/7118198", "title": "Silhouette Analysis for Human Action Recognition Based on Supervised Temporal t-SNE and Incremental Learning"}, {"link": "", "title": "A study of using locality preserving projections for feature extraction in speech recognition"}, {"link": "", "title": "Discriminant sparse neighborhood preserving embedding for face recognition"}, {"link": "", "title": "Locality preserving projections"}, {"link": "", "title": "Visualizing tags over time"}, {"link": "/document/5128907", "title": "Learning from imbalanced data"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "/document/5928350", "title": "Data mining techniques for software effort estimation: a comparative study"}, {"link": "/document/6858011", "title": "Co-Extracting Opinion Targets and Opinion Words from Online Reviews Based on the Word Alignment Model"}, {"link": "/document/1553605", "title": "Validation Methods for Calibrating Software Effort Models"}, {"link": "", "title": "Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation"}, {"link": "", "title": "Finding conclusion stability for selecting the best effort predictor in software effort estimation"}, {"link": "", "title": "Euclidean distance mapping"}, {"link": "", "title": "Improved heterogeneous distance functions"}, {"link": "", "title": "Cross-project defect prediction using a connectivity-based unsupervised classifier"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect Prediction"}, {"link": "", "title": "Software cost estimation with Cocomo II with Cdrom"}, {"link": "", "title": "Ensemble missing data techniques for software effort Prediction"}, {"link": "/document/6363444", "title": "Local versus global lessons for defect prediction and effort estimation"}, {"link": "/document/1703110", "title": "Software function, source lines of code, and development effort Prediction: a software science validation"}, {"link": "", "title": "Comparison of artificial neural network and regression models for estimating software development effort"}, {"link": "", "title": "Multi-objective software effort estimation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582747"}
{"ref": [{"link": "", "title": "LACE2: Better privacy-preserving data sharing for cross project defect prediction"}, {"link": "/document/6606584", "title": "Transfer defect learning"}, {"link": "", "title": "Heterogeneous defect prediction"}, {"link": "", "title": "Heterogeneous cross-company defect prediction by unified metric representation and cca-based transfer learning"}, {"link": "/document/6092574", "title": "How to find relevant data for effort estimation?"}, {"link": "", "title": "Transfer learning in effort estimation"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Recalling the \u201cimprecision\u201d of cross-project defect prediction"}, {"link": "/document/6035727", "title": "A Systematic Review of Fault Prediction Performance in Software Engineering"}, {"link": "", "title": "Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings"}, {"link": "", "title": "Towards a theory for integration of mathematical verification and empirical testing"}, {"link": "/document/1553604", "title": "Static analysis tools as early indicators of pre-release defect density"}, {"link": "", "title": "Model-based tests of truisms"}, {"link": "", "title": "Whitehead Jr. Does bug prediction support human developers? findings from a google case study"}, {"link": "", "title": "Software Verification and Validation for Practitioners and Managers"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "AI-based software defect predictors: Applications and benefits in a case study"}, {"link": "", "title": "Practical considerations of deploying ai in defect prediction: A case study within the Turkish telecommunication industry"}, {"link": "", "title": "What we have learned about fighting defects"}, {"link": "", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "Comparing static bug finders and statistical prediction"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}, {"link": "", "title": "Towards building a universal defect prediction model with rank transformed predictors"}, {"link": "", "title": "Heterogeneous Cross-Company Defect Prediction by Unified Metric Representation and CCA- Based Transfer Learning Categories and Subject Descriptors"}, {"link": "/document/6068375", "title": "Empirical evaluation of mixed-project defect prediction models"}, {"link": "", "title": "Simultaneous and selective inference: Current successes and future challenges"}, {"link": "", "title": "Simultaneous statistical inference"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "", "title": "ReLink"}, {"link": "", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "/document/553637", "title": "Predicting fault-prone software modules in telephone switches"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Towards identifying software project clusters with regard to defect prediction"}, {"link": "", "title": "Which \u201cBad Smells\u201d Can Be Ignored?"}, {"link": "/document/6464273", "title": "Data Quality: Some Comments on the NASA Software Defect Datasets"}, {"link": "", "title": "Random forests"}, {"link": "/document/4271036", "title": "Applying Novel Resampling Strategies To Software Defect Prediction"}, {"link": "", "title": "SMOTE: Synthetic minority over-sampling technique"}, {"link": "", "title": "Adequate and precise evaluation of quality models in software engineering studies"}, {"link": "/document/6235961", "title": "Ranking and clustering software cost estimation models through a multiple comparisons algorithm"}, {"link": "", "title": "An introduction to the bootstrap"}, {"link": "", "title": "Evaluating prediction systems in software project estimation"}, {"link": "", "title": "A systematic review of effect size in software engineering experiments"}, {"link": "", "title": "Distributed development considered harmful?"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "/document/4288197", "title": "Problems with Precision: A Response to \u201cComments on Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "", "title": "Tuning for software analytics is it really necessary?"}, {"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "Empirical methods for artificial intelligence"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582751"}
{"ref": [{"link": "", "title": "The Team Software Process (TSP) in Practice: A Summary of Recent Results. CMU/SEI-2003-TR-014"}, {"link": "", "title": "\n            PSP\n            "}, {"link": "", "title": "Mining PSP Data"}, {"link": "", "title": "he Software Process Dashboard Initiative home page."}, {"link": "", "title": "Beyond the Personal Software Process: Metrics Collection and Analysis for the Differently Disciplined"}, {"link": "", "title": "Jasmine: A PSP Supporting Tool"}, {"link": "", "title": "A Model for Analyzing Performance Problems and Root Causes in the Personal Software Process"}, {"link": "", "title": "Sensitivity Analysis"}, {"link": "", "title": "A General Coefficient of Similarity and Some of Its Properties"}, {"link": "", "title": "Integrating CMMI and TSP/PSP: Using TSP Data to Create Process Performance Models"}, {"link": "/document/5609747", "title": "Deriving Metric Thresholds from Benchmark Data"}, {"link": "", "title": "Defect Analysis: Basic Techniques for Management and Learning"}, {"link": "", "title": "CMMI: Guidelines for Process Integration and Product Improvement"}, {"link": "", "title": "Benchmark-based Software Product Quality Evaluation."}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582818"}
{"ref": [{"link": "", "title": "Valkyrie: A uml-based model-driven environment for model-driven software engineering"}, {"link": "", "title": "Pro Git."}, {"link": "", "title": "Version Control with Subversion"}, {"link": "", "title": "The Adele configuration manager"}, {"link": "", "title": "Designing Software Product Lines with UML: From Use Cases to Pattern-Based Software Architectures"}, {"link": "", "title": "FeatureMapper: Mapping Features to Models"}, {"link": "", "title": "Feature-oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "Visualizing software product line variabilities in source code"}, {"link": "", "title": "Variation management for software production lines"}, {"link": "", "title": "A standard problem for evaluating product-line methodologies"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques"}, {"link": "", "title": "Creation and maintenance of multiple versions"}, {"link": "", "title": "Towards the integration of model-driven engineering, software product line engineering, and software configuration management"}, {"link": "", "title": "SuperMod - A model-driven tool that combines version control and software product line engineering"}, {"link": "", "title": "Filtered model-driven product line engineering with SuperMod: The home automation case"}, {"link": "", "title": "Collaborative and distributed management of versioned model-driven software product lines"}, {"link": "", "title": "Integrated management of variability in space and time in software families"}, {"link": "", "title": "EMF Eclipse Modeling Framework"}, {"link": "", "title": "Managing evolution of software product line"}, {"link": "", "title": "Projectional editing of variational software"}, {"link": "/document/988710", "title": "A layered architecture for uniform version management"}, {"link": "", "title": "VML* - a family of languages for variability management in software product lines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582822"}
{"ref": [{"link": "", "title": ""}, {"link": "/document/5070527", "title": "Learning operational requirements from goal models"}, {"link": "/document/6227147", "title": "Generating obstacle conditions for requirements completeness"}, {"link": "", "title": "Goal Identification and Refinement in the Specification of Software-based Information Systems"}, {"link": "", "title": "Symbolic causality checking using bounded model checking"}, {"link": "/document/1676819", "title": "Graph-based algorithms for boolean function manipulation"}, {"link": "", "title": "Diagnostic information for realizability"}, {"link": "", "title": "Automated goal operationalisation based on interpolation and sat solving"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "", "title": "Detecting consistencies and inconsistencies of pattern- based functional requirements"}, {"link": "", "title": "Agile requirements evolution via paraconsistent reasoning"}, {"link": "", "title": "Plausible repairs for inconsistent requirements"}, {"link": "", "title": "Feature specification and automated conflict detection"}, {"link": "/document/501141", "title": "A comedy of errors: The london ambulance service case study"}, {"link": "", "title": "Goal-oriented requirements analysis and reasoning in the tropos methodology"}, {"link": "", "title": "Tableau tool for testing satisfiability in ltl: Implementation and experimental analysis"}, {"link": "", "title": "Robust vacuity for branching temporal logic"}, {"link": "", "title": "Synthe Sis revisited: Generating statechart models from scenario-based requirements"}, {"link": "", "title": "Detection of conflicting functional requirements in a use case-driven approach"}, {"link": "", "title": "A conceptual basis for inconsistency management in model-based systems engineering"}, {"link": "", "title": "Managing inconsistent specifications: Reasoning, analysis, and action"}, {"link": "/document/5636885", "title": "Techne: Towards a new generation of requirements modeling languages with goals, preferences, and inconsistency handling"}, {"link": "", "title": "Automated software tool support for checking the inconsistency of requirements"}, {"link": "", "title": "Improving requirements quality using essential use case interaction patterns"}, {"link": "", "title": "CONIC: An integrated approach to distributed computer control systems"}, {"link": "", "title": "Vacuity detection in temporal model checking"}, {"link": "", "title": "Aalta: an LTL satisfiability checker over infinite/finite traces"}, {"link": "", "title": "Ontology-based conflict analysis method in non-functional requirements"}, {"link": "", "title": "Constructing a catalogue of conflicts among non-functional requirements"}, {"link": "", "title": "The Temporal Logic of Reactive and Concurrent Systems"}, {"link": "", "title": "Synthe Sis of communicating processes from temporal logic specifications"}, {"link": "", "title": "Resolving goal conflicts via argumentation- based analysis of competing hypothe Ses"}, {"link": "/document/142871", "title": "Representing and using nonfunctional requirements: A process-oriented approach"}, {"link": "", "title": "KBRE: a framework for knowledge-based requirements engineering"}, {"link": "/document/839317", "title": "Leveraging inconsistency in software development"}, {"link": "", "title": "Using abduction to evolve inconsistent requirements specification"}, {"link": "", "title": "The temporal logic of programs"}, {"link": "/document/1560186", "title": "Sat based solutions for consistency problems in formal property specifications for open systems"}, {"link": "", "title": "Debugging overconstrained declarative models using unsatisfiable cores"}, {"link": "", "title": "Consistency by construction: The case of merode"}, {"link": "", "title": "Reconciling requirements: a method for managing interference, inconsistency and conflict"}, {"link": "/document/1178048", "title": "Synthe Sis of behavioral models from scenarios"}, {"link": "", "title": "Requirements Engineering - From System Goals to UML Models to Software Specifications"}, {"link": "/document/730542", "title": "Managing conflicts in goal-driven requirements engineering"}, {"link": "/document/879820", "title": "Handling obstacles in goal-oriented requirements engineering"}, {"link": "", "title": "The tableau method for temporal logic: An overview"}, {"link": "/document/566873", "title": "Towards modeling and reasoning support for early-phase requirements engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582786"}
{"ref": [{"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "Evolution strategies - A comprehensive introduction"}, {"link": "", "title": "SELECT-a formal system for testing and debugging programs by symbolic execution"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Symbolic execution for software testing in practice: preliminary assessment"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "Solving complex path conditions through heuristic search on induced polytopes"}, {"link": "", "title": "Efficient solving of large non-linear arithmetic constraint systems with complex boolean structure"}, {"link": "/document/6698889", "title": "Improving search-based test suite generation with dynamic symbolic execution"}, {"link": "", "title": "Particle swarm optimization (PSO) for reflector antenna shaping"}, {"link": "", "title": "Tabu search: A tutorial"}, {"link": "", "title": "Genetic Algorithms in Search, Optimization and Machine Learning"}, {"link": "", "title": "Model checking Java programs using Java PathFinder"}, {"link": "", "title": "Swarm Intelligence"}, {"link": "", "title": "Optimization by simulated annealing"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of Java bytecode"}, {"link": "", "title": "Symbolic execution with mixed concrete-symbolic solving"}, {"link": "", "title": "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Numerical recipes"}, {"link": "", "title": "On sampling-and-classification optimization in discrete domains"}, {"link": "", "title": "Concolic testing"}, {"link": "", "title": "Cute and jCUTE: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "Automatic handling of native methods in Java PathFinder"}, {"link": "", "title": "Coral: solving complex constraints for Symbolic PathFinder"}, {"link": "", "title": "Pex-white box test generation for. net"}, {"link": "", "title": "Derivative-free optimization via classification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582790"}
{"ref": [{"link": "", "title": "Expertise identification and visualization from cvs"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "/document/4228639", "title": "Determining implementation expertise from bug reports"}, {"link": "", "title": "Reducing the effort of bug report triage: Recommenders for development-oriented decisions"}, {"link": "", "title": "Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation"}, {"link": "/document/6385140", "title": "The secret life of patches: A firefox case study"}, {"link": "", "title": "Partial justification of the borda count"}, {"link": "", "title": "Supporting change request assignment in open source development"}, {"link": "", "title": "The entity-relationship model-toward a unified view of data"}, {"link": "", "title": "Is seeing believing?: How recommender system interfaces affect users' opinions"}, {"link": "", "title": "Bug fixing practices within free/libre open source software development teams"}, {"link": "", "title": "Social coding in github: Transparency and collaboration in an open software repository"}, {"link": "", "title": "Note on the \u201ccorrection for continuity\u201d in testing the significance of the difference between correlated proportions"}, {"link": "", "title": "Continuous integration"}, {"link": "", "title": "Degree-of-knowledge: Modeling a developer's knowledge of code"}, {"link": "", "title": "A degree-of-knowledge model to capture source code familiarity"}, {"link": "", "title": "On code review and commit policies. Blog"}, {"link": "", "title": "Finding the core developers"}, {"link": "", "title": "Github website, 2016"}, {"link": "/document/1572315", "title": "How developers drive software evolution"}, {"link": "/document/6624003", "title": "Who does what during a code review? datasets of oss peer review repositories"}, {"link": "", "title": "Implementation of a wiki development environment"}, {"link": "", "title": "Lab package for the evaluation in this study"}, {"link": "", "title": "An algorithm for differential file comparison"}, {"link": "", "title": "Improving code review by predicting reviewers and acceptance of patches"}, {"link": "", "title": "Coredevrec: Automatic core member recommendation for contribution evaluation"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Life cycle of defects in open source software projects"}, {"link": "", "title": "Maintaining mental models: A study of developer work habits"}, {"link": "/document/5069491", "title": "Assigning bug reports using a vocabulary-based expertise model of developers"}, {"link": "", "title": "Expertise recommender: A flexible recommendation system and architecture"}, {"link": "", "title": "Note on the sampling error of the difference between correlated proportions or percentages"}, {"link": "/document/4228642", "title": "Recommending emergent teams"}, {"link": "/document/1007994", "title": "Expertise browser: a quantitative approach to identifying expertise"}, {"link": "", "title": "Mozilla Developer Network."}, {"link": "", "title": "Mozilla Foundation."}, {"link": "", "title": "Mozilla Foundation."}, {"link": "", "title": "Mozilla Wiki Contributors."}, {"link": "/document/6227095", "title": "Inferring developer expertise through defect analysis"}, {"link": "", "title": "The role of patch review in software evolution: an analysis of the mozilla firefox"}, {"link": "/document/5069497", "title": "Evolution of the core team of developers in libre software projects"}, {"link": "", "title": "Mining usage expertise from version archives"}, {"link": "", "title": "On the need for oss patch contribution tools"}, {"link": "", "title": "Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation"}, {"link": "", "title": "Historical analysis of message contents to recommend issues to open source software contributors"}, {"link": "", "title": "Expertise Explorer"}, {"link": "", "title": "Fuzzy set and cache-based approach for bug triaging"}, {"link": "", "title": "How Do Software Engineers Understand Code Changes? An Exploratory Study in Industry"}, {"link": "", "title": "The Apache Software Foundation."}, {"link": "", "title": "Improving code review effectiveness through reviewer recommendations"}, {"link": "/document/7081824", "title": "Who should review my code? a file location-based code-reviewer recommendation approach for modern code review"}, {"link": "", "title": "Interview: Linus Torvalds - I don't read code any more"}, {"link": "/document/4228638", "title": "How long will it take to fix this bug?"}, {"link": "", "title": "Peer Reviews in Software -A Practical Guide"}, {"link": "", "title": "Reviewer recommendation for pull-requests in github: What can we learn from code review and bug assignment?"}, {"link": "", "title": "Automatically recommending peer reviewers in modern code review"}, {"link": "/document/6227164", "title": "What make long term contributors: Willingness and opportunity in oss community"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582749"}
{"ref": [{"link": "/document/1676819", "title": "Graph-Based Algorithms for Boolean Function Manipulation"}, {"link": "", "title": "Improved quality of protocol testing through techniques of experimental design"}, {"link": "/document/605761", "title": "The AETG System: An Approach to Testing Based on Combinatorial Design"}, {"link": "", "title": "Testing across configurations: implications for combinatorial testing"}, {"link": "", "title": "Pairwise Testing in Real World"}, {"link": "", "title": "Model-Based Testing in Practice"}, {"link": "", "title": "An evaluation of combination strategies for test case selection"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Introduction to Combinatorial Testing"}, {"link": "/document/1321063", "title": "Software Fault Interactions and Implications for Software Testing"}, {"link": "", "title": "Combinatorial coverage measurement tool, user guide"}, {"link": "/document/4525537", "title": "Practical Combinatorial Testing: Beyond Pairwise"}, {"link": "/document/6650543", "title": "Towards interactive visualization support for pairwise testing software product lines"}, {"link": "", "title": ""}, {"link": "", "title": "Using Binary Decision Diagrams for Combinatorial Test Design"}, {"link": "", "title": "Tree visualization with tree-maps: 2-d space-filling approach"}, {"link": "", "title": "The eyes have it: a task by data type taxonomy for information visualizations"}, {"link": "", "title": "A Test Generation Strategy for Pairwise Testing"}, {"link": "/document/1648236", "title": "Fisheye tree views and lenses for graph visualization"}, {"link": "", "title": ""}, {"link": "", "title": "Determination of test configurations for pair-wise interaction coverage"}, {"link": "/document/6823872", "title": "System Level Combinatorial Testing in Practice \u2014 The Concurrent Maintenance Case Study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7582753"}
