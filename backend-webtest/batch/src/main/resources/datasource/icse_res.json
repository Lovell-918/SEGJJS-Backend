{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453201"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203136"}
{"ref": [{"link": "", "title": "Exam-ining the significance of high-level programming features in source code author classification"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "/document/1019480", "title": "CCFinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "SourcererCC: Scaling code clone detection to big-code"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Supervised deep features for software functional clone detection by exploiting lexical and syntactical information in source code"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "/document/7497471", "title": "An empirical comparison of model validation techniques for defect prediction models"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "An information retrieval process to aid in the analysis of code clones"}, {"link": "/document/5306318", "title": "Modeling class cohesion as mixtures of latent topics"}, {"link": "/document/6240488", "title": "Using IR methods for labeling source code artifacts: Is it worthwhile?"}, {"link": "/document/6606598", "title": "How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms"}, {"link": "", "title": "Studying the language and structure in non-programmers' solutions to programming problems"}, {"link": "/document/279181", "title": "Learning long-term dependencies with gradient descent is difficult"}, {"link": "", "title": "The vanishing gradient problem during learning recurrent neural nets and problem solutions"}, {"link": "", "title": "Quantifying the vanishing gradient and long distance dependency problem in recursive neural networks and recursive LSTMs"}, {"link": "/document/1215396", "title": "An improved algorithm for learning long-term dependency problems in adaptive processing of data structures"}, {"link": "", "title": "Long short-term memory over recursive structures"}, {"link": "", "title": "Asymmetric transitivity preserving graph embedding"}, {"link": "", "title": "Learning to represent programs with graphs"}, {"link": "", "title": "Deep learning similarities from different representations of source code"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "A precise inter-procedural data flow algorithm"}, {"link": "", "title": "Llvms analysis and transform passes"}, {"link": "", "title": "The Java Language Specification, Java SE 8 Edition"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "On the \u201cnaturalness\u201d of buggy code"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Document modeling with gated recurrent neural network for sentiment classification"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/295894", "title": "A framework for source code search using program patterns"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "Parsing natural scenes and natural language with recursive neural networks"}, {"link": "", "title": "Improved semantic representations from tree-structured long short-term memory networks"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "Mudablue: An automatic categorization system for open source repositories"}, {"link": "", "title": "On using machine learning to automatically classify software applications into domain categories"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "", "title": "An empirical assessment of bellon's clone benchmark"}, {"link": "", "title": "Understanding semi-structured merge conflict characteristics in open-source java projects"}, {"link": "", "title": "Convolutional neural networks for sentence classification"}, {"link": "", "title": "Learning to execute"}, {"link": "", "title": "Enhancing the unified features to locate buggy files by exploiting the sequential nature of source code"}, {"link": "", "title": "Gated graph sequence neural networks"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "/document/4222572", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Supporting program comprehension using semantic and structural information"}, {"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "DeepBugs: A learning approach to name-based bug detection"}, {"link": "", "title": "DeepSim: Deep learning code functional similarity"}, {"link": "/document/7372035", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}, {"link": "", "title": "Predicting semantically linkable knowledge in developer online forums via convolutional neural network"}, {"link": "/document/7985645", "title": "Semantically enhanced software traceability using deep learning techniques"}, {"link": "", "title": "Deep code search"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812062"}
{"ref": [{"link": "", "title": "Configuration error brings down the Azure cloud platform"}, {"link": "", "title": "DejaGnu"}, {"link": "", "title": "DNS misconfiguration"}, {"link": "", "title": "Firefox web browser"}, {"link": "", "title": "GCC compiler infrastructure"}, {"link": "", "title": "GCC Options"}, {"link": "", "title": "GCC releases"}, {"link": "", "title": "Groupon"}, {"link": "", "title": "Linux kernel"}, {"link": "", "title": "Soundiness webpage"}, {"link": "", "title": "42 variability bugs in the Linux kernel: A qualitative analysis"}, {"link": "", "title": "Feature-Oriented Software Product Lines: Concepts and Implementation"}, {"link": "", "title": "Feature cohesion in software product lines: An exploratory study"}, {"link": "", "title": "Strategies for product-line verification: case studies and experiments"}, {"link": "", "title": "Achieving extensibility through product-lines and domain-specific languages: A case study"}, {"link": "", "title": "Multiple Objective Decision Making \u2014 Methods and Applications: a state-of-the-art survey"}, {"link": "/document/1201186", "title": "Constructing test suites for interaction testing"}, {"link": "/document/4528965", "title": "Delta execution for efficient state-space exploration of object-oriented programs"}, {"link": "", "title": "Feature interaction faults revisited: An exploratory study"}, {"link": "", "title": "Preparing Testcases"}, {"link": "", "title": "GrammaTech. Hybrid concolic execution"}, {"link": "/document/6227189", "title": "Test confessions: A study of testing practices for plug-in systems"}, {"link": "", "title": "More details on today's outage"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "Reducing combinatorics in testing product lines"}, {"link": "", "title": "Reducing configurations to monitor in a software product line"}, {"link": "", "title": "Shared execution for efficiently testing product lines"}, {"link": "", "title": "SPLat: Lightweight dynamic analysis for reducing combinatorics in testing configurable systems"}, {"link": "", "title": "Practical combinatorial testing"}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "", "title": "Where has all my memory gone?: Determining memory characteristics of product variants using virtual-machine-level monitoring"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "In defense of soundiness: A manifesto"}, {"link": "", "title": "On strategies for testing software product lines: A systematic literature review"}, {"link": "/document/4222603", "title": "Hybrid concolic testing"}, {"link": "", "title": "Practical pairwise testing for software product lines"}, {"link": "", "title": "A comparison of 10 sampling algorithms for configurable systems"}, {"link": "", "title": "Investigating preprocessor-based syntax errors"}, {"link": "", "title": "On essential configuration complexity: Measuring interactions in highly-configurable systems"}, {"link": "", "title": "Exploring variability-aware execution for testing plugin-based web applications"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "The category-partition method for specifying and generating functional tests"}, {"link": "", "title": "Automated and scalable t-wise test case generation strategies for software product lines"}, {"link": "", "title": "MultiSE: Multi-path symbolic execution using value summaries"}, {"link": "/document/6227129", "title": "iTree: Efficiently discovering high-coverage configurations using interaction trees"}, {"link": "", "title": "Time-Space Efficient Regression Testing for Configurable Systems"}, {"link": "", "title": "S-SP Lat: Balancing soundness and efficiency for practical testing of configurable systems (Artifact)"}, {"link": "", "title": "Faster bug detection for software product lines with incomplete feature models"}, {"link": "", "title": "Configuration coverage in the analysis of large-scale system software"}, {"link": "", "title": "Lincoln University of Nebraska. Combinatorial interaction testing (CIT) portal"}, {"link": "", "title": "A practical strategy for testing pair-wise coverage of network interfaces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985700"}
{"ref": [{"link": "", "title": "Manufacturing cheap, resilient, and stealthy opaque constructs"}, {"link": "", "title": "Impeding malware analysis using conditional code obfuscation"}, {"link": "", "title": "A formal framework for property-driven obfuscation strategies"}, {"link": "", "title": "Optimizing obfuscation: Avoiding barrington's theorem"}, {"link": "", "title": "Obfuscation by partial evaluation of distorted interpreters"}, {"link": "", "title": "Obfuscation of executable code to improve resistance to static disassembly"}, {"link": "", "title": "Predicting program properties from \u201cbig code\u201d"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "The Google Closure Compiler"}, {"link": "", "title": "An introduction to mcmc for machine learning"}, {"link": "", "title": "Obfuscating c++ programs via control flow flattening"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "", "title": "Stochastic superoptimization"}, {"link": "", "title": "KenLM"}, {"link": "", "title": "UnuglifyJS"}, {"link": "", "title": "Nice2Predict"}, {"link": "", "title": "angular.js"}, {"link": "", "title": "meteor"}, {"link": "", "title": "react"}, {"link": "", "title": "Nonparametric statistics for the behavioral sciences"}, {"link": "", "title": "Concepts and applications of inferential statistics"}, {"link": "", "title": "A taxonomy of obfuscating transformations"}, {"link": "", "title": "On the (im)possibility of obfuscating programs"}, {"link": "", "title": "On the impossibility of obfuscation with auxiliary input"}, {"link": "", "title": "On the (im) possibility of obfuscating programs"}, {"link": "", "title": "Candidate indistinguishability obfuscation and functional encryption for all circuits"}, {"link": "", "title": "Virtual black-box obfuscation for all circuits via generic graded encoding"}, {"link": "", "title": "Protecting obfuscation against algebraic attacks"}, {"link": "", "title": "How to use indistinguishability obfuscation: deniable encryption, and more"}, {"link": "", "title": "On best-possible obfuscation"}, {"link": "", "title": "How to obfuscate programs directly"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Slicing aided design of obfuscating transforms"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Making abstract interpretation incomplete: Modeling the potency of obfuscation"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "", "title": "Learning natural coding conventions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985664"}
{"ref": [{"link": "/document/6682059", "title": "Energy consumption and efficiency in mobile applications: A user feedback study"}, {"link": "", "title": "An empirical study of practitioners' perspectives on green software engineering"}, {"link": "", "title": "\u03bcdroid: an energy-aware mutation testing framework for android"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet?(e)"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Puma: programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "", "title": "Reducing combinatorics in gui testing of android applications"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for android applications"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "/document/8115616", "title": "Sketch-guided gui test generation for mobile applications"}, {"link": "/document/8115615", "title": "Ehbdroid: beyond gui testing for android applications"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "/document/8115613", "title": "Systematically testing background services of mobile apps"}, {"link": "", "title": "MyTracker Android App"}, {"link": "", "title": "Location manager strategies"}, {"link": "/document/6815752", "title": "Greendroid: Automated diagnosis of energy inefficiency for smartphone applications"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "", "title": "Search based software engineering: Techniques, taxonomy, tutorial"}, {"link": "", "title": "Efficient parallel genetic algorithms: theory and practice"}, {"link": "/document/5635157", "title": "Concept location with genetic algorithms: A comparison of four distributed architectures"}, {"link": "", "title": "Robolectric"}, {"link": "", "title": "Android testing support library: Espresso"}, {"link": "", "title": "Soot-a java bytecode optimization framework"}, {"link": "/document/7194563", "title": "Composite constant propagation: Application to android inter-component communication analysis"}, {"link": "", "title": "Understanding and detecting wake lock misuses for android applications"}, {"link": "", "title": "Where is the energy spent inside my app?: fine grained energy accounting on smartphones with eprof"}, {"link": "", "title": "Android api reference"}, {"link": "", "title": "crawler4j"}, {"link": "", "title": "Cobweb website"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Execution and property specifications for jpf-android"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "/document/7381839", "title": "Sig-droid: Automated system input generation for android applications"}, {"link": "", "title": "Mining energy-greedy api usage patterns in android apps: an empirical study"}, {"link": "", "title": "UI/Application Excersizer Monkey"}, {"link": "", "title": "Using Trepn Profiler for Power-Efficient Apps"}, {"link": "", "title": "EMMA: a free Java code coverage tool"}, {"link": "", "title": "Remove rats from your code: automated optimization of resource inefficient database writes for mobile applications"}, {"link": "/document/7889026", "title": "En-ergypatch: Repairing resource leaks to improve energy-efficiency of android apps"}, {"link": "/document/7442579", "title": "Light-weight, inter-procedural and callback-aware resource leak detection for android apps"}, {"link": "", "title": "Optimizing energy consumption of guis in android apps: a multi-objective approach"}, {"link": "", "title": "Detecting energy bugs and hotspots in mobile apps"}, {"link": "", "title": "Making web applications more energy efficient for oled smartphones"}, {"link": "", "title": "DroidFuzzer: Fuzzing the Android Apps with Intent-Filter Tag"}, {"link": "", "title": "IntentFuzzer: Detecting Capability Leaks of Android Applications"}, {"link": "", "title": "Intent Fuzzer: Crafting Intents of Death"}, {"link": "/document/6263963", "title": "An empirical study of the robustness of Inter-component Communication in Android"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "/document/6786194", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "/document/8115614", "title": "Crowd intelligence enhances automated mobile testing"}, {"link": "", "title": "Dynamic detection of interapplication communication vulnerabilities in android"}, {"link": "", "title": "Patdroid: permission-aware gui testing of android"}, {"link": "/document/6693097", "title": "Characterizing and detecting resource leaks in android applications"}, {"link": "", "title": "Mining energy traces to aid in software development: An empirical case study"}, {"link": "", "title": "Ecodroid: An approach for energy-based ranking of android apps"}, {"link": "", "title": "Static detection of energy defect patterns in android applications"}, {"link": "", "title": "An exploratory study on assessing the energy impact of logging on android applications"}, {"link": "", "title": "Energy-aware test-suite minimization for android apps"}, {"link": "", "title": "S entinel: generating gui tests for android sensor leaks"}, {"link": "", "title": "Seeds: a software engineer's energy-optimization decision support framework"}, {"link": "", "title": "Automated re-factoring of android apps to enhance energy-efficiency"}, {"link": "", "title": "Automated energy optimization of http requests for mobile applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812097"}
{"ref": [{"link": "", "title": "Feature model differences"}, {"link": "", "title": "Suplementary Material"}, {"link": "/document/1676819", "title": "Graph-Based Algorithms for Boolean Function Manipulation"}, {"link": "", "title": "Improved quality of protocol testing through techniques of experimental design"}, {"link": "", "title": "Model Checking"}, {"link": "/document/605761", "title": "The AETG System: An Approach to Testing Based on Combinatorial Design"}, {"link": "", "title": "Interaction testing of highly-configurable systems in the presence of constraints"}, {"link": "", "title": "Testing across configurations: implications for combinatorial testing"}, {"link": "", "title": "Pairwise testing in the real world: Practical extensions to test-case scenarios"}, {"link": "", "title": "Model-Based Testing in Practice"}, {"link": "", "title": "Using projections to debug large combinatorial models"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "An evaluation of combination strategies for test case selection"}, {"link": "", "title": "IBM Functional coverage Unified Solution (IBM FOCUS)"}, {"link": "", "title": "JDD"}, {"link": "", "title": "Jenny"}, {"link": "", "title": "Introduction to Combinatorial Testing"}, {"link": "/document/1321063", "title": "Software Fault Interactions and Implications for Software Testing"}, {"link": "/document/4525537", "title": "Practical Combinatorial Testing: Beyond Pairwise"}, {"link": "", "title": "Modeling requirements for combinatorial software testing"}, {"link": "", "title": "Logic Verification Using Binary Decision Diagrams in a Logic Synthesis Environment"}, {"link": "/document/7338232", "title": "A framework for relating syntactic and semantic model differences"}, {"link": "", "title": "ADDiff: semantic differencing for activity diagrams"}, {"link": "", "title": "CDDiff: Semantic differencing for class diagrams"}, {"link": "", "title": "Graph-Based Representations of Discrete Functions"}, {"link": "", "title": "A Survey of Combinatorial Testing"}, {"link": "", "title": "Pairwise testing website"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Combinatorial interaction regression testing: A study of test case generation and prioritization"}, {"link": "", "title": "Using Binary Decision Diagrams for Combinatorial Test Design"}, {"link": "/document/979992", "title": "A Test Generation Strategy for Pairwise Testing"}, {"link": "/document/5070526", "title": "Reasoning about edits to feature models"}, {"link": "", "title": "Lattice-based semantics for combinatorial model evolution"}, {"link": "", "title": "Visualization of Combinatorial Models and Test Plans"}, {"link": "", "title": "Determination of test configurations for pair-wise interaction coverage"}, {"link": "/document/6823872", "title": "System Level Combinatorial Testing in Practice- The Concurrent Maintenance Case Study"}, {"link": "", "title": "Differencing logical UML models"}, {"link": "", "title": "Moving forward with combinatorial interaction testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985699"}
{"ref": [{"link": "", "title": "Systematic mistake analysis of digital computer programs"}, {"link": "/document/329068", "title": "Applicability of modified condition/decision coverage to software testing"}, {"link": "", "title": "Mutation analysis of program test data"}, {"link": "", "title": "Software unit test coverage and adequacy"}, {"link": "", "title": "An empirical investigation of program spectra"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "", "title": "Modeling the diagnostic efficiency of regression test suites"}, {"link": "", "title": "Improving test suites for efficient fault localization"}, {"link": "/document/7390282", "title": "A survey of software fault localization"}, {"link": "", "title": "Spectrum-based multiple fault localization"}, {"link": "", "title": "Extended comprehensive study of associationmeasures for fault localization"}, {"link": "/document/6651713", "title": "The dstar method for effective software fault localization"}, {"link": "", "title": "A low-cost approximate minimal hitting set algorithm and its application to model-based diagnosis"}, {"link": "", "title": "Computing minimal diagnoses by greedy stochastic search"}, {"link": "", "title": "MHS2: A map-reduce heuristic-driven minimal hitting set search algorithm"}, {"link": "", "title": "Entropy-Based Test Generation for Improved Fault Localization"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "/document/6650539", "title": "Using HTML5 visualizations in software fault localization"}, {"link": "/document/6100153", "title": "Prioritizing tests for fault localization through ambiguity group reduction"}, {"link": "", "title": "A mathematical theory of communication"}, {"link": "", "title": "Entropy and diversity"}, {"link": "", "title": "A new bayesian approach to multiple intermittent fault diagnosis"}, {"link": "", "title": "Defects4J: A Database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "Testing Object-oriented Systems: Models, Patterns, and Tools"}, {"link": "/document/5441291", "title": "A controlled experiment for program comprehension through trace visualization"}, {"link": "", "title": "Framing program comprehension as fault localization"}, {"link": "", "title": "Randoop: feedback-directed random testing for java"}, {"link": "", "title": "An empirical study of the effects of test-suite reduction on fault localization"}, {"link": "", "title": "Diversity maximization speedup for fault localization"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "", "title": "Using hybrid algorithm for pareto efficient multi-objective test suite minimisation"}, {"link": "", "title": "Evaluating non-adequate test-case reduction"}, {"link": "", "title": "Directed test generation for effective fault localization"}, {"link": "", "title": "Assessing oracle quality with checked coverage"}, {"link": "", "title": "Checked coverage: an indicator for oracle quality"}, {"link": "", "title": "Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985702"}
{"ref": [{"link": "", "title": "IBM API Harmony"}, {"link": "/document/7442611", "title": "API Harmony: Graph-based search and selection of APIs in the cloud"}, {"link": "", "title": "PublicAPIs \u2014 Directory of public APIs for web and mobile"}, {"link": "", "title": "ProgrammableWeb \u2014 APIs, Mashups and the Web as Platform"}, {"link": "/document/7283022", "title": "Web API Fragility: How Robust is Your Mobile Application?"}, {"link": "", "title": "Open API Initiative"}, {"link": "", "title": "Efficient Construction of Approximate Call Graphs for JavaScript IDE Services"}, {"link": "", "title": "Usage Statistics and Market Share of JavaScript Libraries for Websites"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "Determinacy in static analysis for jquery"}, {"link": "", "title": "Practically tunable static analysis framework for large-scale JavaScript applications (T)"}, {"link": "", "title": "APIs.guru \u2014 Wikipedia for Web APIs"}, {"link": "/document/7372275", "title": "Inferring Web API Descriptions From Usage Data"}, {"link": "", "title": "JSON Schema and Hyper-Schema"}, {"link": "", "title": "Jalangi: A selective record-replay and dynamic analysis framework for JavaScript"}, {"link": "", "title": "The T.J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "The Compiler Design Handbook: Optimizations and Machine Code Generation"}, {"link": "", "title": "Z3-str: A z3-based string solver for web application analysis"}, {"link": "", "title": "A DPLL(T) Theory Solver for a Theory of Strings and Regular Expressions"}, {"link": "", "title": "Effective search-space pruning for solvers of string equations, regular expressions and length constraints"}, {"link": "", "title": "Progressive reasoning over recursively-defined strings"}, {"link": "", "title": "REST APIs: A Large-Scale Analysis of Compliance with Principles and Best Practices"}, {"link": "", "title": "Selenium \u2014 Web Browser Automation"}, {"link": "", "title": "TypeScript \u2014 JavaScript that scales"}, {"link": "", "title": "JSHint, a JavaScript Code Quality Tool"}, {"link": "", "title": "Automated identification of parameter mismatches in web applications"}, {"link": "", "title": "Precise interface identification to improve testing and analysis of web applications"}, {"link": "", "title": "Server Interface Descriptions for Automated Testing of JavaScript Web Applications"}, {"link": "", "title": "SAFEWAPI: Web API Misuse Detector for Web Applications"}, {"link": "/document/7372043", "title": "Static Analysis of JavaScript Web Applications in the Wild via Practical DOM Modeling (T)"}, {"link": "", "title": "Are RESTful APIs Well-Designed? Detection of their Linguistic (Anti) Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985666"}
{"ref": [{"link": "", "title": "W3C Document Object Model Level 2 Events Specification"}, {"link": "", "title": "Chrome Debugging Protocol"}, {"link": "", "title": "mitmproxy"}, {"link": "", "title": "RequireJS"}, {"link": "", "title": "Scalable race detection for Android applications"}, {"link": "", "title": "Kivati: fast detection and prevention of atomicity violations"}, {"link": "", "title": "FastTrack: efficient and precise dynamic race detection"}, {"link": "/document/6823866", "title": "Detecting concurrency errors in client-side Java Script web applications"}, {"link": "", "title": "Race detection for event-driven mobile applications"}, {"link": "", "title": "Concurrency concerns in rich internet applications"}, {"link": "", "title": "Stateless model checking of event-driven applications"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "ConcBugAssist: constraint solving for diagnosis and repair of concurrency bugs"}, {"link": "", "title": "Healing data races on-the-fly"}, {"link": "/document/6227184", "title": "Axis: Automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "Cooperative empirical failure avoidance for multithreaded programs"}, {"link": "/document/4796171", "title": "Atom-Aid: Detecting and surviving atomicity violations"}, {"link": "", "title": "Race detection for Android applications"}, {"link": "", "title": "I know it when I see it: Observable races in JavaScript applications"}, {"link": "", "title": "Detecting JavaScript races that matter"}, {"link": "", "title": "Race detection for web applications"}, {"link": "", "title": "ISOLATOR: dynamically ensuring isolation in concurrent programs"}, {"link": "/document/5719607", "title": "Efficient runtime detection and toleration of asymmetric races"}, {"link": "", "title": "Effective race detection for event-driven programs"}, {"link": "", "title": "EventHealer: Bypassing data races in event-driven programs"}, {"link": "", "title": "Detecting and surviving data races using complementary schedules"}, {"link": "", "title": "ARROW: Automated repair of races on client-side web pages"}, {"link": "", "title": "Accentuating the positive: atomicity inference and enforcement using correct executions"}, {"link": "", "title": "Bypassing races in live applications with execution filters"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "AI: a lightweight system for tolerating concurrency bugs"}, {"link": "", "title": "ConAir: featherweight concurrency bug recovery via single-threaded idempotent execution"}, {"link": "", "title": "Statically locating web application bugs caused by asynchronous calls"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985670"}
{"ref": [{"link": "", "title": "American fuzzy lop"}, {"link": "", "title": "Introduction to Software Testing"}, {"link": "", "title": "Themis: Automatically testing software for discrimination"}, {"link": "", "title": "European Computer Manufacturer's Association. ECMA standards"}, {"link": "", "title": "Using declarative specification to improve the understanding, extensibility, and comparison of model-inference algorithms"}, {"link": "", "title": "Inferring models of concurrent systems from logs of their behavior with CSight"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariant-constrained models"}, {"link": "", "title": "Translating code comments to procedure specifications"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "/document/6956560", "title": "Using frankencerts for automated adversarial testing of certificate validation in SSL/TLS implementations"}, {"link": "", "title": "Software fairness"}, {"link": "", "title": "Guided differential testing of certificate validation in SSL/TLS implementations"}, {"link": "", "title": "Exception handling"}, {"link": "", "title": "Generating test cases for specification mining"}, {"link": "", "title": "Feature location in source code: A taxonomy and survey"}, {"link": "", "title": "Concern tagger case study data mapping the Rhino source code to the ECMA-262 specification)"}, {"link": "/document/4556117", "title": "Cerberus: Tracing requirements to source code using information retrieval, dynamic analysis, and program analysis"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Differential testing: A new approach to change detection"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "A characterization of the complexity of resilience and responsibility for self-join-free conjunctive queries"}, {"link": "", "title": "Fairness testing: Testing software for discrimination"}, {"link": "", "title": "Mining behavior models from user-intensive web applications"}, {"link": "", "title": "Automatic generation of oracles for exceptional behaviors"}, {"link": "", "title": "Developing natural language-based program analyses and tools to expedite software maintenance"}, {"link": "/document/6392117", "title": "On the use of stemming for concern location and bug localization in Java"}, {"link": "", "title": "Speech and Language Processing"}, {"link": "/document/7372019", "title": "Repairing programs with semantic code search"}, {"link": "", "title": "Synthesizing partial component-level behavior models from system specifications"}, {"link": "/document/7372001", "title": "Synergizing specification miners through model fissions and fusions"}, {"link": "/document/7081843", "title": "Beyond support and confidence: Exploring interestingness measures for rule-based specification mining"}, {"link": "", "title": "How good are the specs? A study of the bug-finding effectiveness of existing Java API specifications"}, {"link": "/document/4023976", "title": "QUARK: Empirical assessment of automaton-based specification miners"}, {"link": "", "title": "SMArTIC: Towards building an accurate, robust and scalable specification miner"}, {"link": "", "title": "Scenario-based and value-based specification mining: Better together"}, {"link": "", "title": "Automatic steering of behavioral model inference"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/7194596", "title": "DirectFix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Causality in databases"}, {"link": "", "title": "The complexity of causality and responsibility for query answers and non-answers"}, {"link": "", "title": "Bringing provenance to its full potential using causal reasoning"}, {"link": "", "title": "Causality and explanations in databases"}, {"link": "", "title": "Data debugging with continuous testing"}, {"link": "", "title": "Preventing data errors with continuous testing"}, {"link": "", "title": "Automatic generation of program specifications"}, {"link": "", "title": "Behavioral resource-aware model inference"}, {"link": "", "title": "Randoop: Feedback-directed random testing for Java"}, {"link": "", "title": "Concept location using formal concept analysis and information retrieval"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "A case study on the impact of similarity measure on information retrieval based software engineering tasks"}, {"link": "/document/919096", "title": "Encoding program executions"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "", "title": "Simple BM25 extension to multiple weighted fields"}, {"link": "", "title": "Experimentation as a way of life: Okapi at TREC"}, {"link": "/document/6693093", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Differential testing for variational analyses: Experience from developing KConfigReader"}, {"link": "", "title": "Mining behavior models from enterprise web applications"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Is the cure worse than the disease? Overfitting in automated program repair"}, {"link": "", "title": "A security policy oracle: Detecting security holes using multiple API implementations"}, {"link": "", "title": "Indri: A language model-based search engine for complex queries"}, {"link": "", "title": "@tComment: Testing Javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "The impact of IR-based classifier configuration on the performance and the effort of method-level bug localization"}, {"link": "/document/7381842", "title": "Discovering specification violations in networked software systems"}, {"link": "/document/7927986", "title": "Behavioral execution comparison: Are tests representative of field behavior?"}, {"link": "", "title": "Data X-Ray: A diagnostic tool for data errors"}, {"link": "", "title": "QFix: Demonstrating error diagnosis in query histories"}, {"link": "", "title": "QFix: Diagnosing errors through query histories"}, {"link": "", "title": "Finding and preventing run-time error handling mistakes"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/8115673", "title": "Tortoise: Interactive system configuration repair"}, {"link": "", "title": "ECMA-262, ECMAScript 2017 language specification"}, {"link": "", "title": "A survey on software fault localization"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "A study of smoothing methods for language models applied to ad hoc information retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812070"}
{"ref": [{"link": "", "title": "How to overcome the equivalent mutant problem and achieve tailored selective mutation using co-evolution"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "/document/6976020", "title": "A gamified tool for motivating developers to remove warnings of bug pattern tools"}, {"link": "/document/7476755", "title": "Using the city metaphor for visualizing test-related metrics"}, {"link": "", "title": "Secret ninja testing with HALO software engineering"}, {"link": "", "title": "When, how, and why developers (do not) test in their IDEs"}, {"link": "", "title": "Code Hunt: Experience with coding contests at scale"}, {"link": "", "title": "Two notions of correctness and their relation to testing"}, {"link": "", "title": "Issues in using students in empirical studies in software engineering education"}, {"link": "", "title": "Puzzle-based automatic testing: bringing humans into the loop by solving puzzles"}, {"link": "", "title": "Modeling readability to improve unit tests"}, {"link": "", "title": "From game design elements to gamefulness: Defining \u201cgamification\u201d"}, {"link": "", "title": "Verification games: Making verification fun"}, {"link": "", "title": "Understanding gamification mechanisms for software development"}, {"link": "/document/4222630", "title": "Bug hunt: Making early software testing lessons engaging and affordable"}, {"link": "", "title": "EvoSuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "A large scale evaluation of automated unit test generation using evosuite"}, {"link": "/document/6698889", "title": "Improving search-based test suite generation with dynamic symbolic execution"}, {"link": "", "title": "Using students as subjects-A comparative study of students and professionals in lead-time impact assessment"}, {"link": "", "title": "The rise of crowdsourcing"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "The Major mutation framework: Efficient and scalable mutation analysis for Java"}, {"link": "", "title": "Efficient mutation analysis by propagating and partitioning infected execution states"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "TopCoder (A): Developing software through crowdsourcing"}, {"link": "", "title": "A survey of the use of crowdsourcing in software engineering"}, {"link": "", "title": "Gamified UK: 48 gamification elements, mechanics and ideas"}, {"link": "", "title": "Automatically detecting equivalent mutants and infeasible paths"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Threats to the validity of mutation-based test assessment"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of a simple, fast and effective equivalent mutant detection technique"}, {"link": "", "title": "Crowdoracles: Can the crowd solve the oracle problem?"}, {"link": "/document/6200188", "title": "Semi-automatic search-based test generation"}, {"link": "", "title": "Gamification in software engineering a systematic mapping"}, {"link": "/document/7528958", "title": "Code Defenders: A Mutation Testing Game"}, {"link": "", "title": "Teaching Mutation Testing using Gamification"}, {"link": "", "title": "Automated unit test generation during software development: A controlled experiment and think-aloud observations"}, {"link": "", "title": "Unit testing tool competition: round four"}, {"link": "", "title": "Incentives and rewarding in social computing"}, {"link": "", "title": "Covering and uncovering equivalent mutants"}, {"link": "/document/7372009", "title": "Do automatically generated unit tests find real faults? an empirical study of effectiveness and challenges (T)"}, {"link": "/document/6225927", "title": "It was a bit of a race: Gamification of version control"}, {"link": "", "title": "Exploring the use of crowdsourcing to support empirical studies in software engineering"}, {"link": "", "title": "Apache Commons Libraries"}, {"link": "", "title": "Pex-white box test generation for. NET"}, {"link": "/document/6245014", "title": "Pex4Fun: Teaching and learning computer science via social gaming"}, {"link": "", "title": "A novel approach to collaborative testing in a crowdsourcing environment"}, {"link": "", "title": "Duolingo: learn a language for free while helping to translate the web"}, {"link": "", "title": "recaptcha: Human-based character recognition via web security measures"}, {"link": "/document/4290706", "title": "Visualizing software systems as cities"}, {"link": "", "title": "Precise identification of problems for structural test generation"}, {"link": "", "title": "A study of equivalent and stubborn mutation operators using human analysis of equivalence"}, {"link": "", "title": "Managing crowdsourced software testing: a case study based insight on the challenges of a crowdsourcing intermediary"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985704"}
{"ref": [{"link": "", "title": "Graphviz-graph visualization software"}, {"link": "", "title": "Adelard. Claims, Arguments and Evidence (CAE)"}, {"link": "", "title": "ArduPilot. SITL Simulator"}, {"link": "", "title": "Ardupilot Flight Controller"}, {"link": "", "title": "Atlassian. Jira issue tracking system"}, {"link": "", "title": "Safety cases and their role in ISO 26262 functional safety assessment"}, {"link": "", "title": "A Methodology for Safety Case Development"}, {"link": "", "title": "The future of goal-based assurance cases"}, {"link": "", "title": "Safety and assurance cases: Past, present and possible future-an Adelard perspective"}, {"link": "", "title": "Traceability and SysML design slices to support safety inspections: A controlled experiment"}, {"link": "", "title": "How do practitioners perceive assurance cases in safety-critical software systems?"}, {"link": "", "title": "Trace queries for safety requirements in high assurance systems"}, {"link": "", "title": "Achieving lightweight trustworthy traceability"}, {"link": "/document/8491141", "title": "Discovering, analyzing, and managing safety stories in agile projects"}, {"link": "", "title": "Dronology: an incubator for cyber-physical systems research"}, {"link": "", "title": "Inferring structural patterns for concern traceability in evolving software"}, {"link": "/document/6405468", "title": "Industrial experiences of building a safety case in compliance with iso 26262"}, {"link": "/document/6866924", "title": "Automating the assembly of aviation safety cases"}, {"link": "", "title": "Requirements Engineering"}, {"link": "", "title": "Automated detection of refactorings in evolving components"}, {"link": "", "title": "Representing Confidence in Assurance Case Evidence"}, {"link": "", "title": "SafeSlice: a model slicing and design safety inspection tool for sysml"}, {"link": "", "title": "Modeling safety case evolution - examples from the air traffic management domain"}, {"link": "", "title": "Food and Drug Administration"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Exploiting traceability uncertainty among artifacts and code"}, {"link": "", "title": "Github"}, {"link": "", "title": "An investigation of proposed techniques for quantifying confidence in assurance arguments"}, {"link": "", "title": "Failure analysis and the safety-case lifecycle"}, {"link": "/document/7320423", "title": "Trace links explained: An automated approach for generating rationales"}, {"link": "", "title": "Automatically identifying changes that impact code-to-design traceability during evolution"}, {"link": "", "title": "Using a software safety argument pattern catalogue: Two case studies"}, {"link": "", "title": "Assurance cases and prescriptive software safety certification: A comparative study"}, {"link": "", "title": "A Systematic Approach for Developing Software Safety Arguments"}, {"link": "", "title": "A new approach to creating clear safety arguments"}, {"link": "/document/1583599", "title": "Advancing candidate link generation for requirements tracing: The study of methods"}, {"link": "/document/4781267", "title": "Safety case notations: Alternatives for the non-graphically inclined?"}, {"link": "", "title": "Using sensitivity analysis to facilitate the maintenance of safety cases"}, {"link": "", "title": "Facilitating the maintenance of safety cases"}, {"link": "", "title": "Traceability and model checking to support safety requirement verification"}, {"link": "", "title": "The Goal Structuring Notation-a safety argument notation"}, {"link": "", "title": "Arguing safety: a systematic approach to managing safety cases"}, {"link": "", "title": "A systematic approach to safety case maintenance"}, {"link": "", "title": "Fundamentals of Dependable Computing for Software Engineers"}, {"link": "/document/1007998", "title": "Safety critical systems: challenges and directions"}, {"link": "", "title": "A model management approach for assurance case reuse due to system evolution"}, {"link": "", "title": "The Use of Safety Cases in Certification and Regulation"}, {"link": "", "title": "Information retrieval methods for automated traceability recovery"}, {"link": "", "title": "Using obstacle analysis to identify contingency requirements on an unpiloted aerial vehicle"}, {"link": "/document/6504885", "title": "Strategic traceability for safety-critical projects"}, {"link": "", "title": "Qualitative data analysis: a methods sourcebook"}, {"link": "", "title": "Continuous and automated evolution of architecture-to-implementation traceability links"}, {"link": "", "title": "RTCA. DO-178C, software considerations in airborne systems and equipment certification"}, {"link": "", "title": "Evolving software trace links between requirements and source code"}, {"link": "/document/895989", "title": "Toward reference models of requirements traceability"}, {"link": "", "title": "Traceability in the wild: automatically augmenting incomplete trace links"}, {"link": "", "title": "Mind the gap: assessing the conformance of software traceability to relevant guidelines"}, {"link": "/document/6113898", "title": "Using SysML for modeling of safety-critical software-hardware interfaces: Guidelines and industry experience"}, {"link": "", "title": "Lessons from the North Sea: Should \u201csafety cases\u201d come to America?"}, {"link": "", "title": "Should healthcare providers do safety cases? Lessons from a cross-industry review of safety case practices"}, {"link": "", "title": "U.K. Ministry of Defence"}, {"link": "", "title": "Requirements Engineering Management Handbook, Appendix A - Isolette Thermostat Example. DOD/FAA/AR-08/32"}, {"link": "", "title": "Design Science Methodology for Information Systems and Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812137"}
{"ref": [{"link": "", "title": "Apache Ant."}, {"link": "", "title": "Microsoft Azure."}, {"link": "", "title": "Cobertura."}, {"link": "", "title": "Defects4J."}, {"link": "", "title": "Error Prone."}, {"link": "", "title": "Gradle Build Tool."}, {"link": "", "title": "JUnit Test Framework."}, {"link": "", "title": "Apache Maven Project."}, {"link": "", "title": "Test Framework nose."}, {"link": "", "title": "Test Framework pytest."}, {"link": "", "title": "SpotBugs Bug Descriptions."}, {"link": "", "title": "Test Framework testng."}, {"link": "", "title": "Travis CI."}, {"link": "", "title": "Job Lifecycle."}, {"link": "", "title": "Test Framework unittest."}, {"link": "", "title": "Test Framework unittest2"}, {"link": "/document/7962393", "title": "TravisTorrent: Synthesizing Travis CI and GitHub for Full-Stack Research on Continuous Integration"}, {"link": "", "title": "BegBunch: Benchmarking for C Bug Detection Tools"}, {"link": "", "title": "Extraction of Bug Localization Benchmarks from History"}, {"link": "", "title": "Bears: An Extensible Java Bug Benchmark for Automatic Program Repair Studies"}, {"link": "", "title": "Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact"}, {"link": "/document/7675420", "title": "Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective"}, {"link": "/document/296778", "title": "Experiments of the Effectiveness of Dataflow- and Controlflow-Based Test Adequacy Criteria"}, {"link": "", "title": "Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs"}, {"link": "", "title": "Bugbench: Benchmarks for Evaluating Bug Detection Tools"}, {"link": "", "title": "An Empirical Analysis of Flaky Tests"}, {"link": "", "title": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs"}, {"link": "", "title": "BugZoo: A Platform for Studying Software Bugs"}, {"link": "", "title": "Bugs in the Wild: Examining the Effectiveness of Static Analyzers at Finding Real-World Bugs"}, {"link": "", "title": "How to Design a Program Repair Bot?: Insights from the Repairnator Project"}, {"link": "", "title": "Quality and Productivity Outcomes Relating to Continuous Integration in GitHub"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812141"}
{"ref": [{"link": "", "title": "High-level data races"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "", "title": "On the efficiency of automated testing"}, {"link": "", "title": "Applications of synchronization coverage"}, {"link": "", "title": "Line-Up: a complete and automatic linearizability checker"}, {"link": "", "title": "Testing concurrent programs on relaxed memory models"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Testing concurrent programs using value schedules"}, {"link": "", "title": "ARTOO: adaptive random testing for object-oriented software"}, {"link": "", "title": "Finding race conditions in Erlang with QuickCheck and PULSE"}, {"link": "", "title": "GAMBIT: effective unit testing for concurrency libraries"}, {"link": "", "title": "JCrasher: an automatic robustness tester for Java"}, {"link": "", "title": "Efficient concurrency-bug detection across inputs"}, {"link": "", "title": "Multithreaded Java program test generation"}, {"link": "", "title": "Atomizer: a dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "FastTrack: efficient and precise dynamic race detection"}, {"link": "", "title": "Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "Concurrent data representation synthesis"}, {"link": "", "title": "Testing concurrent programs to achieve high synchronization coverage"}, {"link": "", "title": "Improved multithreaded unit testing"}, {"link": "", "title": "Change-aware preemption prioritization"}, {"link": "", "title": "OCAT: object S. automated testing"}, {"link": "", "title": "CalFuzzer: An extensible active testing framework for concurrent programs"}, {"link": "", "title": "An effective dynamic S. for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Precise data race detection in a relaxed memory model using heuristic-based model checking"}, {"link": "", "title": "Detecting atomic-set serializability violations in multithreaded programs through active randomized testing"}, {"link": "", "title": "MUVI: Automatically inferring multi-variable access correlations and detecting related semantic and concurrency bugs"}, {"link": "", "title": "Finding and reproducing Heisenbugs in concurrent programs"}, {"link": "", "title": "Effective static deadlock detection"}, {"link": "/document/6227145", "title": "Ballerina: Automatic generation and clustering of efficient random unit tests for multithreaded code"}, {"link": "", "title": "Hybrid dynamic data race detection"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/5609565", "title": "Guided test generation for coverage criteria"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}, {"link": "", "title": "CTrigger: exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "Unit testing concurrent software"}, {"link": "", "title": "Multithreaded test synthesis for deadlock detection"}, {"link": "", "title": "Synthesizing tests for detecting atomicity violations"}, {"link": "", "title": "Synthesizing racy tests"}, {"link": "", "title": "Eraser: A dynamic data race detector for multithreaded programs"}, {"link": "", "title": "Automatic generation of parallel unit tests"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Sketching concurrent data structures"}, {"link": "", "title": "PENELOPE: weaving threads to expose atomicity violations"}, {"link": "", "title": "Generating unit tests for concurrent classes"}, {"link": "/document/6693072", "title": "Bita: Coverage-guided, automatic testing of actor programs"}, {"link": "/document/126769", "title": "Structural testing of concurrent programs"}, {"link": "", "title": "RECONTEST: effective regression testing of concurrent programs"}, {"link": "", "title": "Coverage-driven test code generation for concurrent classes"}, {"link": "", "title": "Abstraction-guided synthesis of synchronization"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Test input generation with Java PathFinder"}, {"link": "", "title": "Static conflict analysis for multi-threaded object-oriented programs"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "", "title": "Static deadlock detection for java libraries"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "\n            "}, {"link": "", "title": "All-du-path coverage for parallel programs"}, {"link": "", "title": "Maple: a coverage-driven testing tool for multithreaded programs"}, {"link": "", "title": "ConSeq: detecting concurrency bugs through sequential errors"}, {"link": "", "title": "ConMem: detecting severe concurrency bugs through an effect-oriented approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985668"}
{"ref": [{"link": "", "title": "2012 Norton Cybercrime Report"}, {"link": "", "title": "Analyzing Inter-Application Communication in Android"}, {"link": "", "title": "XManDroid: A New Android Evolution to Mitigate Privilege Escalation Attacks"}, {"link": "", "title": "IccTA: Detecting Inter-Component Privacy Leaks in Android App"}, {"link": "", "title": "Android Taint Flow Analysis for App Sets"}, {"link": "", "title": "Amandroid: A Precise and General Inter-component Data Flow Analysis Framework for Security Vetting of Android Apps"}, {"link": "/document/7079508", "title": "COVERT: Compositional Analysis of Android Inter-App Permission Leakage"}, {"link": "", "title": "DroidForce: Enforcing Complex, Data-centric, System-wide Policies in Android"}, {"link": "", "title": "Semantically Rich Application-Centric Security in Android"}, {"link": "", "title": "Flexible and Fine-Grained Mandatory Access Control on Android for Diverse Security and Privacy Policies"}, {"link": "", "title": "Towards Taming Privilege-Escalation Attacks on Android"}, {"link": "", "title": "Chex: Statically Vetting Android Apps for Component Hijacking Vulnerabilities"}, {"link": "", "title": "QUIRE: Lightweight Provenance for Smart Phone Operating Systems"}, {"link": "", "title": "Effective Inter-component Communication Mapping in Android with Epicc: An Essential Step Towards Holistic Security Analysis"}, {"link": "/document/7579768", "title": "Practical, Formal Synthesis and Automatic Enforcement of Security Policies for Android"}, {"link": "", "title": "A Machine-Learning Approach for Classifying and Categorizing Android Sources and Sinks"}, {"link": "", "title": "Automated Dynamic Enforcement of Synthesized Security Policies in Android"}, {"link": "", "title": "Is Rooting Your Phone Safe? The Security Risks of Rooting Devices"}, {"link": "", "title": "DroidBench: A micro-benchmark suite to assess the stability of taint-analysis tools for Android"}, {"link": "", "title": "Google Play"}, {"link": "/document/6234407", "title": "Dissecting Android Malware: Characterization and Evolution"}, {"link": "", "title": "Identifying Message Flow in Distributed Event-Based Systems"}, {"link": "", "title": "Detecting Event Anomalies in Event-Based Systems"}, {"link": "", "title": "Role-Based Access Control for Publish/Subscribe Middleware Architectures"}, {"link": "", "title": "ch. Security Policy and Information Sharing in Distributed Event-Based Systems"}, {"link": "", "title": "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks"}, {"link": "", "title": "EventGuard: A System Architecture for Securing Publish-Subscribe Networks"}, {"link": "", "title": "Engineering Event-Based Systems with Scopes"}, {"link": "", "title": "Detecting Spoofed Packets"}, {"link": "", "title": "android.app \u2223 Android Developers"}, {"link": "", "title": "PScout: Analyzing the Android Permission Specification"}, {"link": "", "title": "Flowdroid: Precise Context, Flow, Field, Object-Sensitive and Lifecycle-Aware Taint Analysis for Android Apps"}, {"link": "", "title": "Intents and Intent Filters \u2223 Android Developers"}, {"link": "", "title": "Composite Constant Propagation: Application to Android Inter-Component Communication Analysis"}, {"link": "", "title": "Android Open Source Project"}, {"link": "", "title": "Dashboards \u2223 Android Developers"}, {"link": "", "title": "Run Apps on the Android Emulator \u2223 Android Studio"}, {"link": "", "title": "Android Debug Bridge"}, {"link": "", "title": "Running Builds-Booting into Fastboot Mode"}, {"link": "", "title": "IccTA"}, {"link": "", "title": "F-Droid \u2014 Free and Open Source Android App Repository"}, {"link": "", "title": "Bazaar"}, {"link": "", "title": "apps-for-android \u2014 Google Code Archive"}, {"link": "", "title": "Sourcecodester.com"}, {"link": "", "title": "logcat Command-line Tool \u2223 Android Studio"}, {"link": "", "title": "So Many Apps, So Much Time For Entertainment"}, {"link": "", "title": "monkeyrunner \u2223 Android Studio"}, {"link": "", "title": "Download APK Android Apps and Games"}, {"link": "", "title": "UI/Application Exerciser Monkey \u2223 Android Studio"}, {"link": "", "title": "Keeping Your App Responsive \u2223 Android Developers"}, {"link": "", "title": "SCanDroid: Automated Security Certification of Android Applications"}, {"link": "", "title": "AndroidLeaks: Automatically Detecting Potential Privacy Leaks in Android Applications on a Large Scale"}, {"link": "", "title": "Detecting Passive Content Leaks and Pollution in Android Applications"}, {"link": "", "title": "TaintDroid: An Information-flow Tracking System for Realtime Privacy Monitoring on Smartphones"}, {"link": "", "title": "Systematic Detection of Capability Leaks in Stock Android Smartphones"}, {"link": "", "title": "Information Flow Analysis of Android Applications in DroidSafe"}, {"link": "", "title": "AppIntent: Analyzing Sensitive Data Transmission in Android for Privacy Leakage Detection"}, {"link": "", "title": "DroidChecker: Analyzing Android Applications for Capability Leak"}, {"link": "", "title": "Android Permissions Demystified"}, {"link": "", "title": "ScanDal: Static Analyzer for Detecting Privacy Leaks in Android Applications"}, {"link": "", "title": "Static Control-Flow Analysis of User-driven Callbacks in Android Applications"}, {"link": "", "title": "A Framework for Static Detection of Privacy Leaks in Android Applications"}, {"link": "", "title": "AsDroid: Detecting Stealthy Behaviors in Android Applications by User Interface and Program Behavior Contradiction"}, {"link": "", "title": "Automatically Exploiting Potential Component Leaks in Android Applications"}, {"link": "", "title": "Multi-App Security Analysis with FUSE: Statically Detecting Android App Collusion"}, {"link": "", "title": "Information Flows As a Permission Mechanism"}, {"link": "", "title": "A Type and Effect System for Activation Flow of Components in Android Programs"}, {"link": "", "title": "The Transitivity-of-Trust Problem in Android Application Interaction"}, {"link": "", "title": "DroidAlarm: An All-Sided Static Analysis Tool for Android Privilege-Escalation Malware"}, {"link": "", "title": "Collaborative Verification of Information Flow for a High-Assurance App Store"}, {"link": "", "title": "PaddyFrog: Systematically Detecting Confused Deputy Vulnerability in Android Applications"}, {"link": "", "title": "Combining Static Analysis with Probabilistic Models to Enable Market-Scale Android Inter-Component Analysis"}, {"link": "", "title": "The Impact of Vendor Customizations on Android Security"}, {"link": "", "title": "On the Need of Precise Inter-App ICC Classification for Detecting Android Malware Collusions"}, {"link": "", "title": "AppGuard: Enforcing User Requirements on Android Apps"}, {"link": "", "title": "Aurasium: Practical Policy Enforcement for Android Applications"}, {"link": "", "title": "I-ARM-Droid: A Rewriting Framework for In-App Reference Monitors for Android Applications"}, {"link": "", "title": "RetroSkeleton: Retrofitting Android Apps"}, {"link": "", "title": "Dr. Android and Mr. Hide: Fine-grained Permissions in Android Applications"}, {"link": "", "title": "Contextual Policy Enforcement in Android Applications with Permission Event Graphs"}, {"link": "", "title": "Appsealer: Automatic Generation of Vulnerability-Specific Patches for Preventing Component Hijacking Attacks in Android Applications"}, {"link": "", "title": "\u201cTrustDroid\u2122\u201d: Preventing the Use of Smartphones for Information Leaking in Corporate Networks Through the Used of Static Analysis Taint Tracking"}, {"link": "", "title": "On Lightweight Mobile Phone Application Certification"}, {"link": "", "title": "Kynoid: Real-Time Enforcement of Fine-Grained, User-Defined, and Data-Centric Security Policies for Android"}, {"link": "", "title": "Permission re-delegation: Attacks and defenses"}, {"link": "", "title": "These Aren't the Droids You're Looking for: Retrofitting Android to Protect Data from Imperious Applications"}, {"link": "", "title": "DeepDroid: Dynamically Enforcing Enterprise Policy on Android Devices"}, {"link": "", "title": "On the Effectiveness of API-Level Access Control Using Bytecode Rewriting in Android"}, {"link": "", "title": "ASM: A Programmable Interface for Extending Android Security"}, {"link": "", "title": "DroidRA: Taming Reflection to Support Whole-Program Analysis of Android Apps"}, {"link": "", "title": "Hey, You, Get Off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets"}, {"link": "", "title": "ViVA: A Visualization and Analysis Tool for Distributed Event-based Systems"}, {"link": "/document/5342408", "title": "Securing Android-Powered Mobile Devices Using SELinux"}, {"link": "", "title": "An End-to-End Domain Specific Modeling and Analysis Platform"}, {"link": "", "title": "Automated Extraction of Rich Software Models from Limited System Information"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985672"}
{"ref": [{"link": "", "title": "Is it a Bug or an Enhancement? A Text-based Approach to Classify Change Requests"}, {"link": "/document/5070530", "title": "The Secret Life of Bugs: Going Past the Errors and Omissions in Software Repositories"}, {"link": "", "title": "A Systematic and Comprehensive Investigation of Methods to Build and Evaluate Fault Prediction Models"}, {"link": "", "title": "The Missing Links: Bugs and Bug-fix Commits Categories and Subject Descriptors"}, {"link": "/document/544352", "title": "A Validation of Object-oriented Design Metrics as Quality Indicators"}, {"link": "", "title": "Fair and Balanced? Bias in Bug-Fix Datasets"}, {"link": "/document/5070550", "title": "Does distributed development affect software quality? an empirical case study of windows vista"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "/document/5069475", "title": "The Promises and Perils of Mining Git"}, {"link": "", "title": "Mutation-Aware Fault Prediction"}, {"link": "", "title": "randomForest: Breiman and Cutler's Random Forests for Classification and Regression. R package version 4.6-12"}, {"link": "/document/7202953", "title": "Merits of organizational metrics in defect prediction: an industrial replication"}, {"link": "/document/6569737", "title": "Multi-objective Cross-project Defect Prediction"}, {"link": "/document/7588121", "title": "A framework for evaluating the results of the szz approach for identifying bug-introducing changes"}, {"link": "", "title": "Evaluating Defect Prediction Approaches: A Benchmark and an Extensive Comparison"}, {"link": "", "title": "An Introduction to the Bootstrap"}, {"link": "/document/1235403", "title": "Populating a Release History Database from Version Control and Bug Tracking Systems"}, {"link": "/document/7194626", "title": "Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models"}, {"link": "/document/6035727", "title": "A Systematic Literature Review on Fault Prediction Performance in Software Engineering"}, {"link": "", "title": "The meaning and use of the area under a receiver operating characteristic (ROC) curve"}, {"link": "/document/6606585", "title": "It's not a Bug, it's a Feature: How Misclassification Impacts Bug Prediction"}, {"link": "", "title": "A Systematic Literature Review and Meta-analysis on Cross Project Defect Prediction"}, {"link": "", "title": "The Impact of Correlated Metrics on Defect Models"}, {"link": "/document/8530020", "title": "AutoSpearman: Automatically Mitigating Correlated Metrics for Interpreting Defect Models"}, {"link": "/document/6341763", "title": "A Large-Scale Empirical Study of Just-In-Time Quality Assurance"}, {"link": "/document/5328703", "title": "An Exploratory Study of the Impact of Code Smells on Software Change-proneness"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change-and fault-proneness"}, {"link": "", "title": "Dealing with Noise in Defect Prediction"}, {"link": "", "title": "Mining file histories: Should we consider branches?"}, {"link": "", "title": "Exact Mean Absolute Error of Baseline Predictor, MARPO"}, {"link": "/document/4527256", "title": "Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings"}, {"link": "", "title": "Data sets and data quality in software engineering"}, {"link": "", "title": "The Impact of Code Review Coverage and Code Review Participation on Software Quality"}, {"link": "/document/4027145", "title": "Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "", "title": "Defect prediction from static code features: current results, limitations, new approaches"}, {"link": "/document/6547619", "title": "Software Analytics: So What?"}, {"link": "", "title": "Use of Relative Code Churn Measures to Predict System Defect Density"}, {"link": "", "title": "Mining Metrics to Predict Component Failures"}, {"link": "", "title": "The influence of organizational structure on software quality"}, {"link": "/document/5635057", "title": "Change Bursts as Defect Predictors"}, {"link": "/document/7959597", "title": "Heterogeneous Defect Prediction"}, {"link": "", "title": "Multi-layered approach for recovering links between bug reports and fixes"}, {"link": "/document/5645567", "title": "A Case Study of Bias in Bug-Fix Datasets"}, {"link": "", "title": "The jira repository dataset: Understanding social aspects of software development"}, {"link": "", "title": "The emotional side of software developers in jira"}, {"link": "/document/6963448", "title": "Mining version histories for detecting code smells"}, {"link": "", "title": "What the F-measure doesn't measure: Features, Flaws, Fallacies and Fixes"}, {"link": "", "title": "R Core Team"}, {"link": "", "title": "Ownership, experience and defects: a fine-grained study of authorship"}, {"link": "/document/7190081", "title": "How, and Why, Process Metrics are Better"}, {"link": "", "title": "Should we really be using t-test and cohen's d for evaluating group differences on the nsse and other surveys"}, {"link": "", "title": "The Impact of Human Factors on the Participation Decision of Reviewers in Modern Code Review"}, {"link": "", "title": "LP4EE: Linear Programming as a Baseline for Software Effort Estimation"}, {"link": "", "title": "Evaluating Prediction Systems in Software Project Estimation"}, {"link": "", "title": "Understanding the Impact of Code and Process Metrics on Post-release Defects: A Case Study on the Eclipse Project"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "Towards a Better Understanding of the Impact of Experimental Components on Defect Prediction Modelling"}, {"link": "", "title": "An Experience Report on Defect Modelling in Practice: Pitfalls and Challenges"}, {"link": "", "title": "The Impact of Class Rebalancing Techniques on the Performance and Interpretation of Defect Prediction Models"}, {"link": "", "title": "Rnalytica: An R package of JIRA defect datasets and tool suites for explainable software analytics"}, {"link": "/document/7194628", "title": "The Impact of Mislabelling on the Performance and Interpretation of Defect Prediction Models"}, {"link": "", "title": "Automated Parameter Optimization of Classification Techniques for Defect Prediction Models"}, {"link": "/document/7450669", "title": "Comments on \u201cResearcher Bias: The Use of Machine Learning in Software Defect Prediction\u201d"}, {"link": "/document/7497471", "title": "An Empirical Comparison of Model Validation Techniques for Defect Prediction Models"}, {"link": "", "title": "The Impact of Automated Parameter Optimization on Defect Prediction Models"}, {"link": "", "title": "Revisiting Code Ownership and its Relationship with Software Quality in the Scope of Modern Code Review"}, {"link": "", "title": "Review Participation in Modern Code Review"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in github"}, {"link": "", "title": "Continuous code quality: Are we (really) doing that?"}, {"link": "", "title": "Automatically Learning Semantic Features for Defect Prediction"}, {"link": "", "title": "ReLink: Recovering Links between Bugs and Changes"}, {"link": "/document/7435328", "title": "Hydra: Massively compositional model for cross-project defect prediction"}, {"link": "", "title": "Replication Package for ICSE2019 Mining Software Defects: Should We Consider Affected Releases?"}, {"link": "/document/4402214", "title": "Predicting subsystem failures using dependency graph complexities"}, {"link": "", "title": "Cross-project Defect Prediction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811982"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Pin - a dynamic binary instrumentation tool"}, {"link": "", "title": "radare2everse engineering framework"}, {"link": "", "title": "American fuzzy lop"}, {"link": "", "title": "Flawfinder"}, {"link": "", "title": "Leopard"}, {"link": "", "title": "National vulnerability database"}, {"link": "", "title": "Pscan"}, {"link": "", "title": "Rats"}, {"link": "", "title": "Cppcheck"}, {"link": "", "title": "Cvedetails"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "/document/7180086", "title": "Do bugs foreshadow vulnerabilities?: A study of the chromium project"}, {"link": "", "title": "A systematic review of software fault prediction studies"}, {"link": "/document/7163057", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "Bingo: Cross-architecture cross-os binary search"}, {"link": "", "title": "Fot: A versatile, configurable, extensible fuzzing framework"}, {"link": "", "title": "Hawkeye: Towards a desired directed grey-box fuzzer"}, {"link": "", "title": "Using complexity, coupling, and cohesion metrics as early indicators of vulnerabilities"}, {"link": "", "title": "How to find vulnerabilities?"}, {"link": "", "title": "Simulation of built-in php features for precise static code analysis"}, {"link": "/document/976940", "title": "Improving security using extensible lightweight static analysis"}, {"link": "", "title": "Revisiting unsupervised learning for defect prediction"}, {"link": "", "title": "Prioritizing software security fortification throughcode-level metrics"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "/document/1542070", "title": "Empirical validation of object-oriented metrics on open source software for fault prediction"}, {"link": "", "title": "Modular checking for buffer overflows in the large"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "Is newer always better?: The case of vulnerability prediction models"}, {"link": "/document/8094418", "title": "Supervised vs unsupervised models: A holistic look at effort-aware just-in-time defect prediction"}, {"link": "", "title": "Pixy: A static analysis tool for detecting web application vulnerabilities (short paper)"}, {"link": "/document/1293079", "title": "Righting software"}, {"link": "", "title": "25 million flows later: Large-scale detection of dom-based"}, {"link": "/document/8169980", "title": "Code churn: A neglected metric in effort-aware just-in-time defect prediction"}, {"link": "", "title": "Finding security vulnerabilities in java applications with static analysis"}, {"link": "", "title": "A systematic review or machine learing techniques for software fault prediction"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "/document/4021964", "title": "Software Security: Building Security"}, {"link": "", "title": "Dekant: A static analysis tool that learns to detect web application vulnerabilities"}, {"link": "", "title": "Collaborative security: A survey and taxonomy"}, {"link": "", "title": "Challenges with applying vulnerability prediction models"}, {"link": "", "title": "Evaluating and comparing complexity, coupling and a new proposed set of coupling metrics in cross-project vulnerability prediction"}, {"link": "", "title": "Using complexity metrics to improve software security"}, {"link": "/document/7372033", "title": "Clami: Defect prediction on unlabeled datasets (t)"}, {"link": "", "title": "Predicting vulnerable software components"}, {"link": "", "title": "Predicting vulnerable software components with dependency graphs"}, {"link": "", "title": "Software fault prediction metrics: A systematic literature review"}, {"link": "", "title": "Vuzzer: Application-aware evolutionary fuzzing"}, {"link": "", "title": "Flax: Systematic discovery of client-side validation vulnerabilities in rich web applications"}, {"link": "/document/6860243", "title": "Predicting vulnerable software components via text mining"}, {"link": "", "title": "Detecting format string vulnerabilities with type qualifiers"}, {"link": "/document/5560680", "title": "Evaluating complexity, code churn, and developer activity metrics as indicators of software vulnerabilities"}, {"link": "", "title": "An empirical model to predict security vulnerabilities using code complexity metrics"}, {"link": "", "title": "Is complexity really the enemy of software security?"}, {"link": "", "title": "An initial study on the use of execution complexity metrics as indicators of software vulnerabilities"}, {"link": "", "title": "Can traditional fault prediction models be used for vulnerability prediction?\u2019"}, {"link": "", "title": "Rolecast: Finding missing security checks when you do not know what checks are"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "/document/6547101", "title": "Sok: Eternal war in memory"}, {"link": "", "title": "Autoises: Automatically inferring security specifications and detecting violations"}, {"link": "/document/6547100", "title": "Towards practical reactive security audit using extended static checkers"}, {"link": "", "title": "Its 4: A static vulnerability scanner for c and c++ code"}, {"link": "/document/6982351", "title": "Predicting vulnerable components: Software metrics vs text mining"}, {"link": "/document/5504701", "title": "Taintscope: A checksum-aware directed fuzzing tool for automatic software vulnerability detection"}, {"link": "", "title": "Scheduling black-box mutational fuzzing"}, {"link": "", "title": "Proteus: Computing disjunctive loop summary via path dependency analysis"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "/document/7985685", "title": "Spain: Security patch analysis for binaries - towards understanding the pain and pills"}, {"link": "/document/6956589", "title": "Modeling and discovering vulnerabilities with code property graphs"}, {"link": "", "title": "Generalized vulnerability extrapolation using abstract syntax trees"}, {"link": "/document/7163061", "title": "Automatic inference of search patterns for taint-style vulnerabilities"}, {"link": "", "title": "Chucky Exposing missing checks in source code for vulnerability discovery"}, {"link": "/document/8170121", "title": "File-level defect prediction: Unsupervised vs. supervised models"}, {"link": "", "title": "Automated change-prone class prediction on unlabeled dataset using unsupervised method"}, {"link": "", "title": "Effort-aware just-in-time defect prediction: simple unsupervised models could be better than supervised models"}, {"link": "", "title": "Cross-project defect prediction using a connectivity-based unsupervised classifier"}, {"link": "/document/7384228", "title": "Combining software metrics and text features for vulnerable file prediction"}, {"link": "", "title": "How far we have progressed in the journey? an examination of cross-project defect prediction"}, {"link": "/document/5477059", "title": "Searching for a needle in a haystack: Predicting security vulnerabilities for windows vista"}, {"link": "", "title": "Testing static analysis tools using exploitable buffer overflows from open source code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812029"}
{"ref": [{"link": "", "title": "Android: Abstract Method"}, {"link": "", "title": "Android: Add Catch Block"}, {"link": "", "title": "Android: Add Final"}, {"link": "", "title": "Android: Added Null Check"}, {"link": "", "title": "Android: Broadening Visibility"}, {"link": "", "title": "Android: Change Operand"}, {"link": "", "title": "Android: Merging Catch Blocks"}, {"link": "", "title": "Android: Move Synchronization"}, {"link": "", "title": "Android: Narrow Catch Block"}, {"link": "", "title": "Android: Remove Synchronized From Signature"}, {"link": "", "title": "Android: Remove Synchronized"}, {"link": "", "title": "Android: Rename Parameter"}, {"link": "", "title": "Android: Return Value"}, {"link": "", "title": "Gerrit - Android"}, {"link": "", "title": "Gerrit - Google Source"}, {"link": "", "title": "Gerrit - Ovirt"}, {"link": "", "title": "Gerrit"}, {"link": "", "title": "Google: Broader Generic Type"}, {"link": "", "title": "Google: Narrowing Visibility"}, {"link": "", "title": "Google: Return Value"}, {"link": "", "title": "On learning meaningful code changes via neural machine translation Replication Package"}, {"link": "", "title": "Ovirt: Anonymous Class To Lambda"}, {"link": "", "title": "Ovirt: Flipped Parameters"}, {"link": "", "title": "Ovirt: Redundant Super"}, {"link": "", "title": "Ovirt: Rename Method"}, {"link": "", "title": "Guided code synthesis using deep neural networks"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Machine learning vs. deep learning"}, {"link": "", "title": "Massive exploration of neural machine translation architectures"}, {"link": "", "title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation"}, {"link": "", "title": "A deep learning model for estimating story points"}, {"link": "/document/7332513", "title": "Exploring the use of deep learning for feature location"}, {"link": "", "title": "Deepsoft: A vision for a deep model of software"}, {"link": "/document/8094414", "title": "Towards accurate duplicate bug retrieval using deep learning techniques"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/8115618", "title": "Learn&fuzz: Machine learning for input fuzzing"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Deep api learning"}, {"link": "/document/7985645", "title": "Semantically enhanced software traceability using deep learning techniques"}, {"link": "", "title": "Deepfix: Fixing common c language errors by deep learning"}, {"link": "/document/8094415", "title": "Learning to predict severity of software vulnerability using only vulnerability description"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Debugging method names"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "Recurrent continuous translation models"}, {"link": "/document/7372035", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}, {"link": "", "title": "Applying deep learning based automatic bug triager to industrial projects"}, {"link": "/document/8094426", "title": "Cclearner: A deep learning-based clone detection approach"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "", "title": "Vocabulary manipulation for neural machine translation"}, {"link": "", "title": "Machine learning-based prototyping of graphical user interfaces for mobile apps"}, {"link": "", "title": "How many words are there in the english language?"}, {"link": "", "title": "The Definitive ANTLR 4 Reference"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/8094428", "title": "Deep green: Modelling time-series of software energy consumption"}, {"link": "/document/7503707", "title": "Improving code readability models with textual features"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Deep learning similarities from different representations of source code"}, {"link": "", "title": "An empirical investigation into learning bug-fixing patches in the wild via neural machine translation"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Google's neural machine translation system: Bridging the gap between human and machine translation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811910"}
{"ref": [{"link": "/document/7965447", "title": "Taming google-scale continuous testing"}, {"link": "/document/5496972", "title": "The hadoop distributed file system"}, {"link": "", "title": "Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing"}, {"link": "/document/988497", "title": "Test case prioritization: a family of empirical studies"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "A large-scale empirical comparison of static and dynamic test case prioritization techniques"}, {"link": "", "title": "Empirical studies of test-suite reduction. software testing, verification and reliability"}, {"link": "", "title": "Fine-grained test minimization"}, {"link": "", "title": "What do alrge commits tell us? a taxonomical study of large commits"}, {"link": "", "title": "Hybrid regression test selection"}, {"link": "/document/1317433", "title": "Bi-criteria models for all-uses test suite reduction"}, {"link": "", "title": "A methodology for controlling the size of a test suite"}, {"link": "/document/1183927", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "A new heuristic for test suite reduction"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "/document/4052586", "title": "Improving fault detection capability by selectively retaining test cases during test suite reduction"}, {"link": "/document/4343764", "title": "Using software dependencies and churn metrics to predict field failures: An empirical case study"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "", "title": "Microsoft. Fasttree (gradient boosted trees)"}, {"link": "", "title": "Greedy function approximation: A gradient boosting machine"}, {"link": "", "title": "Fast algorithms for mining association rules in large databases"}, {"link": "", "title": "Microsoft. Ml.net machine learning framework"}, {"link": "", "title": "Pattern Recognition and Machine Learning (Information Science and Statistics)"}, {"link": "", "title": "Pegasos: primal estimated sub-gradient solver for svm"}, {"link": "", "title": "Local deep kernel learning for efficient non-linear svm prediction"}, {"link": "", "title": "Xgboost: A scalable tree boosting system"}, {"link": "", "title": "The impact of class rebalancing techniques on the performance and interpretation of defect prediction models"}, {"link": "/document/7190081", "title": "How, and why, process metrics are better"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "/document/7332456", "title": "An empirical study of bugs in test code"}, {"link": "/document/4273265", "title": "Predicting defects for Eclipse"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and statis code attributes for defect prediction"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "/document/6498451", "title": "On the relationship between program evolution and fault-proneness: An empirical study"}, {"link": "", "title": "An empirical study of execution-data classification based on machine learning"}, {"link": "", "title": "Predicting defects using change genealogies"}, {"link": "/document/732614", "title": "Testing using log file analysis: Tools, methods, and issues"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812033"}
{"ref": [{"link": "", "title": "Changes to JobHistory makes it backward incompatible"}, {"link": "", "title": "Log4j"}, {"link": "", "title": "imple logging facade for Java (SLF4J)"}, {"link": "/document/6065171", "title": "The effect of lexicon bad smells on concept location in source code"}, {"link": "/document/8170085", "title": "An empirical examination of the relationship between code smells and merge conflicts"}, {"link": "", "title": "Formal analysis of log files"}, {"link": "", "title": "Statistics in a Nutshell: A Desktop Quick Reference, ser. In a Nutshell (O\u2018Reilly)"}, {"link": "", "title": "Software Design"}, {"link": "", "title": "Behavioral log analysis with statistical guarantees"}, {"link": "/document/8115653", "title": "Exploring regular expression comprehension"}, {"link": "", "title": "Characterizing logging practices in java-based open source software projects - a replication study in apche software foundation"}, {"link": "/document/7985651", "title": "Characterizing and detecting anti-patterns in the logging code"}, {"link": "", "title": "An automated approach to estimating code coverage measures via execution logs"}, {"link": "", "title": "Cacheop-timizer: Helping developers configure caching frameworks for hibernate-based database-centric web applications"}, {"link": "/document/7965448", "title": "Analytics-driven load testing: An industrial experience report on load testing of large-scale systems"}, {"link": "", "title": "A survey on the use of topic models when mining software repositories"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code, ser."}, {"link": "", "title": "Where do developers log? an empirical study on logging practices in industry"}, {"link": "", "title": "An Industrial Case Study of Customizing Operational Profiles Using Log Compression"}, {"link": "", "title": "Studying and detecting log-related issues"}, {"link": "", "title": "Detecting and refactoring code smells in spreadsheet formulas"}, {"link": "/document/4658079", "title": "Automatic identification of load testing problems"}, {"link": "/document/6606613", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Logging library migrations: A case study for the apache software foundation projects"}, {"link": "/document/1019480", "title": "Ccfinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Cloning considered harmful"}, {"link": "/document/6336722", "title": "Technical debt: From metaphor to theory and practice"}, {"link": "", "title": "Studying software logging using topic models"}, {"link": "", "title": "Which log level should developers choose for a new logging statement?"}, {"link": "", "title": "Understanding code smells in android applications"}, {"link": "", "title": "Interrater reliability: the kappa statistic"}, {"link": "", "title": "Detection of embedded code smells in dynamic web applications"}, {"link": "/document/6693086", "title": "Detecting bad smells in source code using change history information"}, {"link": "", "title": "A catalogue of lightweight visualizations to support code smell inspection"}, {"link": "/document/7202961", "title": "Industry practices and event logging: Assessment of a critical software development process"}, {"link": "", "title": "Characterizing the natural language descriptions in software logging statements"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "/document/5463343", "title": "Clones: What is that smell?"}, {"link": "/document/8115624", "title": "Detecting fragile comments"}, {"link": "", "title": "Building empirical support for automated code smell detection"}, {"link": "/document/6976068", "title": "Understanding log lines using development knowledge"}, {"link": "", "title": "Why we refactor? confessions of github contributors"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "/document/7675424", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "Uncovering javascript performance code smells relevant to type mutations"}, {"link": "", "title": "SWordNet: Inferring semantically related words from software context"}, {"link": "", "title": "Log4perf: Suggesting logging locations for web-based systems performance monitoring"}, {"link": "", "title": "Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems"}, {"link": "", "title": "Sherlog: Error diagnosis by connecting clues from run-time logs"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Improving software diagnosability via log enhancement"}, {"link": "", "title": "Code bad smells: a review of current knowledge"}, {"link": "", "title": "Log20: Fully automated optimal placement of log printing statements under specified overhead threshold"}, {"link": "/document/7675425", "title": "Learning to log: Helping developers make informed logging decisions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811945"}
{"ref": [{"link": "", "title": "Development and validation of the sexist attitudes toward women scale (satws)"}, {"link": "", "title": "How do social interaction networks influence peer impressions formation? a case study"}, {"link": "", "title": "Gender differences in risk taking: a meta-analysis"}, {"link": "", "title": "The effects of diversity in global, distributed collectives: A study of open source project success"}, {"link": "", "title": "Language and gender"}, {"link": "", "title": "Women, minorities, and persons with disabilities in science and engineering"}, {"link": "", "title": "Free/libre and open source software: Survey and study, part iv: Survey of developers"}, {"link": "", "title": "Gender and Power in Online Communication"}, {"link": "", "title": "Contributions of the under-appreciated: Gender bias in an open-source ecology"}, {"link": "", "title": "Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects"}, {"link": "/document/8169979", "title": "Are one-time contributors different? a comparison to core and periphery developers in floss repositories"}, {"link": "/document/7985661", "title": "Understanding the impressions, motivations, and barriers of one time code contributors to floss projects: a survey"}, {"link": "", "title": "The intersection of gender, race and cultural boundaries, or why is computer science in malaysia dominated by women?"}, {"link": "", "title": "Open source barriers to entry, revisited: A sociotechnical perspective"}, {"link": "/document/6480226", "title": "Gendered patterns of politeness in free/libre open source software development"}, {"link": "", "title": "patches don\u2018t have gender\u2019: What is not open in open source software"}, {"link": "", "title": "Gender differences within the open source community: An exploratory study"}, {"link": "", "title": "Excluding women from the technologies of the future?: A case study of the culture of computer science"}, {"link": "", "title": "free as in sexist?\u201d free culture and the gender gap"}, {"link": "", "title": "How peripheral developers contribute to open-source software development"}, {"link": "", "title": "Motivation, governance, and the viability of hybrid forms in open source software development"}, {"link": "", "title": "Social barriers faced by newcomers placing their first contribution in open source software projects"}, {"link": "", "title": "legenderary: Algorithms for determining gender from name."}, {"link": "", "title": "Gender differences and bias in open source: pull request acceptance of women versus men"}, {"link": "/document/6542459", "title": "Gender, representation and online participation: A quantitative study of stackoverflow"}, {"link": "", "title": "Gender and tenure diversity in github teams"}, {"link": "", "title": "A study of factors promoting success in computer science including gender differences"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812068"}
{"ref": [{"link": "/document/6772130", "title": "Predicting risk of software changes"}, {"link": "", "title": "Studying just-in-time defect prediction using cross-project models"}, {"link": "", "title": "Impact of budget and schedule pressure on software development cycle time and effort"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "/document/6341763", "title": "A large-scale empirical study of just-in-time quality assurance"}, {"link": "", "title": "An industrial study on the risk of software changes"}, {"link": "/document/7202954", "title": "Online defect prediction for imbalanced data"}, {"link": "/document/7898457", "title": "Are fix-inducing changes a moving target? a longitudinal case study of just-in-time defect prediction"}, {"link": "/document/7296710", "title": "Learning in nonstationary environments: A survey"}, {"link": "/document/6871400", "title": "Resampling-based ensemble methods for online class imbalance learning"}, {"link": "/document/4408585", "title": "Classifying software changes: Clean or buggy?"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "Do time of day and developer experience affect commit bugginess?"}, {"link": "", "title": "Studying high impact fix-inducing changes"}, {"link": "/document/8246564", "title": "A systematic study of online class imbalance learning with concept drift"}, {"link": "/document/5069480", "title": "Tracking concept drift of software projects using defect prediction quality"}, {"link": "", "title": "What is the impact of imbalance on software defect prediction performance?"}, {"link": "/document/6509481", "title": "Using class imbalance learning for software defect prediction"}, {"link": "/document/4343747", "title": "The effects of over and under sampling on fault-prone module detection"}, {"link": "/document/7990590", "title": "Mahakil: Diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction"}, {"link": "/document/1571498", "title": "Online bagging and boosting"}, {"link": "", "title": "Mining high-speed data streams"}, {"link": "/document/5694104", "title": "Classifier and cluster ensembles for mining concept drifting data streams"}, {"link": "/document/6604410", "title": "Compose: A semi-supervised learning framework for initially labeled non-stationary streaming data"}, {"link": "", "title": "Credit card fraud detection: a realistic modeling and a novel learning strategy"}, {"link": "/document/6464273", "title": "Data quality: Some comments on the nasa software defect datasets"}, {"link": "", "title": "Commit guru: analytics and risk prediction of software commits"}, {"link": "", "title": "Learning from imbalanced data"}, {"link": "", "title": "On evaluating stream learning algorithms"}, {"link": "/document/6235961", "title": "Ranking and clustering software cost estimation models through a multiple comparisons algorithm"}, {"link": "", "title": "Negative results for software effort estimation"}, {"link": "", "title": "A critique and improvement of the cl common language effect size statistics of mcgraw and wong"}, {"link": "/document/7497471", "title": "An empirical comparison of model validation techniques for defect prediction models"}, {"link": "", "title": "The impact of automated parameter optimization on defect prediction models"}, {"link": "", "title": "Special issue on repeatable results in software engineering prediction"}, {"link": "", "title": "The impact of parameter tuning on software effort estimation using learning machines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812072"}
{"ref": [{"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "An empirical comparison of compiler testing techniques"}, {"link": "", "title": "Randomized stress-testing of link-time optimizers"}, {"link": "", "title": "Finding and analyzing compiler warning defects"}, {"link": "", "title": "Test case prioritization: an empirical study"}, {"link": "", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "Test-case prioritization: achievements and challenges"}, {"link": "/document/7927995", "title": "How do assertions impact coverage-based test-suite reduction?"}, {"link": "", "title": "Input-based adaptive randomized test case prioritization: A local beam search approach"}, {"link": "/document/7515478", "title": "Test case prioritization for compilers: A text-vector based approach"}, {"link": "", "title": "Attribute selection based on information gain ratio in fuzzy rough set theory with application to tumor classification"}, {"link": "", "title": "Min max normalization based data perturbation method for privacy protection"}, {"link": "", "title": "Fast training of support vector machines using sequential minimal optimization"}, {"link": "", "title": "Gaussian processes in machine learning"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}, {"link": "", "title": "The weka data mining software: an update"}, {"link": "/document/7314957", "title": "To be optimal or not in test-case prioritization"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritisation"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Supporting oracle construction via static analysis"}, {"link": "", "title": "Metamorphic testing for (graphics) compilers"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Automatic generation of test cases"}, {"link": "", "title": "A general test data generator for cobol"}, {"link": "", "title": "Practical testing of a c99 compiler using output comparison"}, {"link": "", "title": "Random testing of c calling conventions"}, {"link": "", "title": "Random testing of c compilers targeting arithmetic optimization"}, {"link": "", "title": "Scaling up size and number of expressions in random testing of arithmetic optimization of c compilers"}, {"link": "", "title": "Testing an optimising compiler by generating random lambda terms"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Test-case reduction for c compiler bugs"}, {"link": "/document/5069039", "title": "Automated test program generation for an industrial optimizing compiler"}, {"link": "", "title": "Automatic test case reduction for opencl"}, {"link": "", "title": "Coverage-directed differential testing of jvm implementations"}, {"link": "", "title": "An automatic testing approach for compiler based on metamorphic testing technique"}, {"link": "", "title": "Notice: A framework for non-functional testing of compilers"}, {"link": "", "title": "Toward understanding compiler bugs in gcc and llvm"}, {"link": "/document/4579792", "title": "Historical value-based approach for cost-cognizant test case prioritization to improve the effectiveness of regression testing"}, {"link": "", "title": "Change-aware preemption prioritization"}, {"link": "", "title": "Using the case-based ranking methodology for test case prioritization"}, {"link": "", "title": "Learning for test prioritization: an industrial case study"}, {"link": "", "title": "Towards the prioritization of system test cases"}, {"link": "", "title": "Code coverage-based regression test selection and prioritization in webkit"}, {"link": "", "title": "Combinatorial interaction regression testing: A study of test case generation and prioritization"}, {"link": "/document/1183927", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "A large-scale empirical comparison of static and dynamic test case prioritization techniques"}, {"link": "", "title": "High-confidence software evolution"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "/document/988497", "title": "Test case prioritization: a family of empirical studies"}, {"link": "", "title": "Test case prioritization for regression testing of service-oriented business applications"}, {"link": "/document/1510150", "title": "Test prioritization using system models"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Combinatorial interaction regression testing: a study of test case generation and prioritization"}, {"link": "/document/919106", "title": "Incorporating varying test costs and fault severities into test case prioritization"}, {"link": "", "title": "Cost-cognizant test case prioritization"}, {"link": "", "title": "Time aware test suite prioritization"}, {"link": "", "title": "Using sensitivity analysis to create simplified economic models for regression testing"}, {"link": "", "title": "An empirical study of regression testing techniques incorporating context and lifecycle factors and improved cost-benefit models"}, {"link": "", "title": "Quota-constrained test-case prioritization for regression testing of service-centric systems"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "Time-aware test-case prioritization using integer linear programming"}, {"link": "", "title": "An empirical study on the effectiveness of time-aware test case prioritization techniques"}, {"link": "", "title": "Adaptive random testing"}, {"link": "", "title": "Adaptive random testing: The art of test case diversity"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "", "title": "Dictionary learning based software defect prediction"}, {"link": "", "title": "Micro interaction metrics for defect prediction"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "Cross-project defect prediction using a connectivity-based unsupervised classifier"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "", "title": "Topic-based defect prediction"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Predicting defects for eclipse"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "Transfer learning for cross-company software defect prediction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985706"}
{"ref": [{"link": "", "title": "Fuzzy History Slicing Experimental Package"}, {"link": "", "title": "Apache Commons IO"}, {"link": "", "title": "JDiff: A Differencing Technique and Tool for Object-Oriented Programs"}, {"link": "/document/6224267", "title": "Bug introducing changes: A case study with android"}, {"link": "", "title": "LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines"}, {"link": "", "title": "Tracking the Evolution of Code Clones"}, {"link": "/document/6178861", "title": "Do developers introduce bugs when they do not communicate? the case of eclipse and mozilla"}, {"link": "", "title": "Learning to Rank using Gradient Descent"}, {"link": "/document/4721183", "title": "Tracking Your Changes: a Language-independent Approach"}, {"link": "/document/4228651", "title": "Identifying Changed Source Code Lines from Version Repositories"}, {"link": "/document/972749", "title": "CVSSearch: Searching through Source Code using CVS Comments"}, {"link": "", "title": "Software history under the lens: a study on why and how developers examine it"}, {"link": "", "title": "Software bertillonage: Finding the provenance of an entity"}, {"link": "", "title": "Software bertillonage"}, {"link": "", "title": "Refactoring-Aware Configuration Management for Object-Oriented Programs"}, {"link": "/document/4222578", "title": "Tracking code clones in evolving software"}, {"link": "", "title": "A Program Differencing Algorithm for Verilog HDL"}, {"link": "", "title": "AspectJ"}, {"link": "", "title": "Do time of day and developer experience affect commit bugginess?"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "", "title": "Does a programmer's activity indicate knowledge of code?"}, {"link": "", "title": "Modeling History to Analyze Software Evolution"}, {"link": "/document/1401931", "title": "Using origin analysis to detect merging and splitting of source code entities"}, {"link": "", "title": "C-REX: an Evolutionary Code Extractor for C"}, {"link": "", "title": "Using Development History Sticky Notes to Understand Software Architecture"}, {"link": "", "title": "Historage: Fine-grained Version Control System for Java"}, {"link": "", "title": "Mining cause-effect-chains from version histories"}, {"link": "", "title": "Extensible Language-Aware Merging"}, {"link": "", "title": "IR Evaluation Methods for Retrieving Highly Relevant Documents"}, {"link": "", "title": "Revisiting common bug prediction findings using effort-aware models"}, {"link": "/document/6341763", "title": "A large-scale empirical study of just-in-time quality assurance"}, {"link": "", "title": "Program element matching for multi-version program analyses"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "/document/4408585", "title": "Classifying software changes: Clean or buggy?"}, {"link": "/document/4222596", "title": "Information Needs in Collocated Software Development Teams"}, {"link": "", "title": "The Hungarian Method for the Assignment Problem"}, {"link": "", "title": "Hard-to-Answer Questions about Code"}, {"link": "", "title": "Binary Codes Capable of Correcting Deletions, Insertions and Reversals"}, {"link": "", "title": "Supporting Source Code Difference Analysis"}, {"link": "", "title": "Mozilla Foundation. Rhino"}, {"link": "/document/1553571", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Test-driven fault navigation for debugging reproducible failures"}, {"link": "", "title": "Why software repositories are not used for defect-insertion circumstance analysis more often: A case study"}, {"link": "", "title": "Tracking Source Locations"}, {"link": "", "title": "Improving code completion with program history"}, {"link": "/document/6100097", "title": "History Slicing"}, {"link": "", "title": "History Slicing: Assisting Code-Evolution Tasks"}, {"link": "/document/6227208", "title": "WhoseFault: Automatic Developer-to-Fault Assignment through Fault Localization"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "/document/5279964", "title": "Lightweight Techniques for Tracking Unique Program Statements"}, {"link": "", "title": "Branching and Merging in the Repository"}, {"link": "", "title": "Aura: A hybrid approach to identify framework evolution"}, {"link": "", "title": "Bug inducing analysis to prevent fault prone bug fixes"}, {"link": "", "title": "Fine-Grained Processing of CVS Archives with APFEL"}, {"link": "", "title": "Mining Version Archives for Co-changed Lines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985710"}
{"ref": [{"link": "", "title": "Design and Implementation of Sparse Global Analyses for C-like Languages"}, {"link": "", "title": "Learning a Variable-Clustering Strategy for Octagon from Labeled Data Generated by a Static Analysis"}, {"link": "", "title": "Chord: A Program Analysis Platform for Java"}, {"link": "", "title": "Strictly Declarative Specification of Sophisticated Points-to Analyses"}, {"link": "", "title": "Bounded abstract interpretation"}, {"link": "", "title": "A progress bar for static analyzers"}, {"link": "", "title": "Learning a Strategy for Adapting a Program Analysis via Bayesian Optimisation"}, {"link": "", "title": "Tree-Based Batch Mode Reinforcement Learning"}, {"link": "", "title": "Least-Squares Policy Iteration"}, {"link": "", "title": "Kernel-Based Reinforcement Learning"}, {"link": "/document/712192", "title": "Reinforcement Learning: An Introduction"}, {"link": "", "title": "Self-Improving Reactive Agents Based on Reinforcement Learning, Planning and Teaching"}, {"link": "", "title": "Sparrow"}, {"link": "", "title": "Global Sparse Analysis Framework"}, {"link": "", "title": "Ocaml garbage collector"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "", "title": "The SLAM Project: Debugging System Software via Static Analysis"}, {"link": "", "title": "Counterexample-guided Abstraction Refinement for Symbolic Model Checking"}, {"link": "", "title": "Selective Context-sensitivity Guided by Impact Pre-analysis"}, {"link": "", "title": "Introspective Analysis: Context-sensitivity, Across the Board"}, {"link": "", "title": "Abstractions from Tests"}, {"link": "", "title": "From Tests to Proofs"}, {"link": "/document/7985690", "title": "Machine-Learning-Guided Selectively Unsound Static Analysis"}, {"link": "", "title": "Data-driven Context-sensitivity for Points-to Analysis"}, {"link": "", "title": "Automatically generating features for learning program analysis heuristics for C-like languages"}, {"link": "", "title": "Fast Numerical Program Analysis with Reinforcement Learning"}, {"link": "", "title": "Abstraction Refinement Guided by a Learnt Probabilistic Model"}, {"link": "", "title": "Predicting program properties from \u201cbig code\u201d"}, {"link": "", "title": "Estimating types in binaries using predictive modeling"}, {"link": "", "title": "Learning a static analyzer from data"}, {"link": "", "title": "Neuro-Dynamic Programming"}, {"link": "", "title": "Topic-bridged PLSA for cross-domain text classification"}, {"link": "", "title": "Constructing Informative Priors Using Transfer Learning"}, {"link": "", "title": "Transferring Naive Bayes Classifiers for Text Classification"}, {"link": "", "title": "Instance Weighting for Domain Adaptation in NLP"}, {"link": "", "title": "Cross-domain Sentiment Classification via Spectral Feature Alignment"}, {"link": "/document/6606584", "title": "Transfer Defect Learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812143"}
{"ref": [{"link": "", "title": "Number of apps available in leading app stores as of July 2015"}, {"link": "", "title": "Modeling users mobile app privacy preferences: Restoring usability in a sea of permission settings"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on Android markets"}, {"link": "", "title": "Efficient privilege deescalation for ad libraries in mobile apps"}, {"link": "", "title": "Scalable semantics-based detection of similar Android applications"}, {"link": "", "title": "WuKong: A scalable and accurate two-phase approach to Android app clone detection"}, {"link": "", "title": "LibRadar: fast and accurate detection of third-party libraries in Android apps"}, {"link": "/document/7476661", "title": "An investigation into the use of common libraries in Android apps"}, {"link": "", "title": "Following devils footprints: Cross-platform analysis of potentially harmful libraries on Android and iOS"}, {"link": "", "title": "Openstack"}, {"link": "", "title": "The Java tutorial: What is a package?"}, {"link": "", "title": "Fast, scalable detection of \u201cpiggybacked\u201cmobile applications"}, {"link": "", "title": "Attack of the clones: Detecting cloned applications on Android markets"}, {"link": "", "title": "ViewDroid: Towards obfuscation-resilient mobile application repackaging detection"}, {"link": "", "title": "Smart-droid: an automatic system for revealing ui-based trigger conditions in Android applications"}, {"link": "", "title": "Apktool"}, {"link": "", "title": "Androguard"}, {"link": "", "title": "Setting the record straight on Moplus SDK and the Wormhole vulnerability"}, {"link": "", "title": "Android security white paper"}, {"link": "", "title": "How we keep harmful apps out of Google Play and keep your Android device safe"}, {"link": "", "title": "Proguard"}, {"link": "", "title": "Dexguard"}, {"link": "", "title": "Dash-O"}, {"link": "", "title": "Dexprotector"}, {"link": "", "title": "Deobfuscation: reverse engineering obfuscated code"}, {"link": "", "title": "Java control flow obfuscation"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "CP-Miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Using slicing to identify duplication in source code"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "", "title": "Cross-architecture bug search in binary executables"}, {"link": "", "title": "Longitudinal analysis of Android ad library permissions"}, {"link": "", "title": "Unsafe exposure analysis of mobile in-app advertisements"}, {"link": "", "title": "Addetect: Automated detection of Android ad libraries using semantic analysis"}, {"link": "", "title": "Adrob: examining the landscape and impact of Android application plagiarism"}, {"link": "", "title": "Revisiting Android reuse studies in the context of code obfuscation and library usages"}, {"link": "/document/7503721", "title": "On automatically detecting similar Android apps"}, {"link": "", "title": "Andarwin: Scalable detection of semantically similar Android applications"}, {"link": "", "title": "Attack of the clones: Detecting cloned applications on Android markets"}, {"link": "", "title": "Juxtapp: A scalable system for detecting code reuse among Android applications"}, {"link": "", "title": "Introducing privacy threats from ad libraries to Android users through privacy granules"}, {"link": "", "title": "Investigating user privacy in Android ad libraries"}, {"link": "", "title": "Code injection attacks on HTML5-based mobile apps: Characterization, detection and mitigation"}, {"link": "", "title": "SMV-HUNTER: Large scale, automated detection of SSL/TLS man-in-the-middle vulnerabilities in Android apps"}, {"link": "", "title": "Mayhem in the push clouds: Understanding and mitigating security hazards in mobile push-messaging services"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985674"}
{"ref": [{"link": "", "title": "Zero-overhead Profiling via EM Emanations"}, {"link": "/document/566449", "title": "Efficient path profiling"}, {"link": "", "title": "Under-Constrained Symbolic Execution: Correctness Checking for Real Code"}, {"link": "", "title": "Zop-2"}, {"link": "", "title": "Artifact: Zero-Overhead Path Prediction with Progressive Symbolic Execution"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Symbolic Execution for Software Testing: Three Decades Later"}, {"link": "", "title": "Under-constrained Execution: Making Automatic Code Destruction Easy and Scalable"}, {"link": "", "title": "Generalized Symbolic Execution for Model Checking and Testing"}, {"link": "/document/8067449", "title": "Capacity of the em covert/side-channel created by the execution of instructions in a processor"}, {"link": "", "title": "CIL: Intermediate Language and Tools for Analysis and Transformation of C Programs"}, {"link": "", "title": "Clang C Language Family Frontend for LLVM"}, {"link": "", "title": "NetworkX - NetworkX"}, {"link": "", "title": "KLEE"}, {"link": "/document/1281665", "title": "LLVM: A Compilation Framework for Lifelong Program Analysis & Transformation"}, {"link": "", "title": "A Decision Procedure for Bit-Vectors and Arrays"}, {"link": "", "title": "Matlab"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact"}, {"link": "", "title": "Avahi - service discovery for linux using mdns/dns-sd"}, {"link": "", "title": "Introduction to Algorithms"}, {"link": "/document/7011392", "title": "A practical methodology for measuring the side-channel signal available to the attacker for instruction-level events"}, {"link": "", "title": "Intel processor trace on linux"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "Execution Generated Test Cases: How to Make Systems Code Crash Itself"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "SAGE: Whitebox Fuzzing for Security Testing"}, {"link": "", "title": "CUTE: A Concolic Unit Testing Engine for C"}, {"link": "", "title": "Pex-White Box Test Generation for. NET"}, {"link": "", "title": "FSX: Fine-grained Incremental Unit Test Generation for C/C++ Programs"}, {"link": "", "title": "KLOVER: A Symbolic Execution and Automatic Test Generation Tool for C++ Programs"}, {"link": "", "title": "Practical, Low-Effort Equivalence Verification of Real Code"}, {"link": "", "title": "Chopped Symbolic Execution"}, {"link": "/document/4639362", "title": "Heuristics for Scalable Dynamic Test Generation"}, {"link": "", "title": "RWset: Attacking Path Explosion in Constraint-Based Test Generation"}, {"link": "", "title": "Redundant State Detection for Dynamic Symbolic Execution"}, {"link": "", "title": "Efficient State Merging in Symbolic Execution"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java PathFinder"}, {"link": "", "title": "Test Input Generation with Java PathFinder"}, {"link": "", "title": "Micro Execution"}, {"link": "/document/7004061", "title": "BLISS: Improved Symbolic Execution by Bounded Lazy Initialization with SAT Support"}, {"link": "", "title": "Enhancing Symbolic Execution with Built-in Term Rewriting and Constrained Lazy Initialization"}, {"link": "", "title": "Efficient and formal generalized symbolic execution"}, {"link": "/document/7256167", "title": "Electromagnetic circuit fingerprints for hardware trojan detection"}, {"link": "/document/6855574", "title": "Em-based detection of hardware trojans on fpgas"}, {"link": "", "title": "Eddie: Em-based detection of deviations in program execution"}, {"link": "", "title": "Watch me, but don't touch me! contactless control flow monitoring via electromagnetic emanations"}, {"link": "/document/7783762", "title": "Spectral profiling: Observer-effect-free profiling by monitoring em emanations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812035"}
{"ref": [{"link": "", "title": "Organizations: Rational, natural, and open systems"}, {"link": "", "title": "The management of innovation"}, {"link": "", "title": "Industrial organization: theory and practice"}, {"link": "", "title": "Are there any companies focused on doing devops consulting?"}, {"link": "/document/7675420", "title": "Work practices and challenges in pull-based development: the integrator's perspective"}, {"link": "/document/6802994", "title": "Continuous integration and its tools"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in GitHub"}, {"link": "", "title": "Trade-offs in continuous integration: assurance, security, and flexibility"}, {"link": "", "title": "Systems approaches to tackling configuration errors: A survey"}, {"link": "", "title": "Hey, you have given me too many knobs!: Understanding and dealing with over-designed configuration in system software"}, {"link": "/document/7985667", "title": "On cross-stack configuration errors"}, {"link": "", "title": "Which configuration option should I change?"}, {"link": "", "title": "Investigating and improving a COTS-based software development process"}, {"link": "", "title": "COCOTS: A COTS software integration lifecycle cost model-model overview and preliminary data collection findings"}, {"link": "", "title": "Cost models for future software life cycle processes: CO-COMO 2.0"}, {"link": "", "title": "COTS-based software development: Processes and open issues"}, {"link": "", "title": "Software architecture classification for estimating the cost of COTS integration"}, {"link": "", "title": "A comparison of javascript linting tools"}, {"link": "", "title": "Thoughts about JavaScript linters and \u201clint driven development\u201d"}, {"link": "/document/8115668", "title": "Why and how JavaScript developers use linters"}, {"link": "/document/8115621", "title": "Can automated pull requests encourage software developers to upgrade out-of-date dependencies?"}, {"link": "/document/8130777", "title": "A survey of coverage-based testing tools"}, {"link": "/document/7476667", "title": "Analyzing the state of static analysis: A large-scale evaluation in open source software"}, {"link": "/document/7962383", "title": "How open source projects use static code analysis tools in continuous integration pipelines"}, {"link": "", "title": "Fixed accidentally global \u2018browserlist var"}, {"link": "", "title": "add a more strict linter"}, {"link": "", "title": "Feature: choose between eslint + airbnb and jshint?"}, {"link": "", "title": "Add mocha to mocha environment"}, {"link": "", "title": "added all globals for full jshint compatibility"}, {"link": "", "title": "Easy require"}, {"link": "", "title": "Configure hound to lint with jscs"}, {"link": "", "title": "Consider switching to coveralls"}, {"link": "", "title": "Lint source code"}, {"link": "", "title": "Stop using jscs"}, {"link": "", "title": "Csslint + stylelint"}, {"link": "", "title": "Update link to. jscrc file"}, {"link": "", "title": "Switch to ESlint (what kind of tooling should we use for linters)"}, {"link": "", "title": "Add eslint config for standard to project"}, {"link": "", "title": "Use standard.js for code formatting"}, {"link": "", "title": "feat(travis): add codeclimate integration"}, {"link": "", "title": "Use standard.js for code formatting"}, {"link": "", "title": "Add code coverage statistics"}, {"link": "", "title": "Refactorized websocket api"}, {"link": "", "title": "Breaking change rfc: Remove codecov.io support"}, {"link": "", "title": "code coverage in ci"}, {"link": "", "title": "Integrate codecov.io"}, {"link": "", "title": "How the apache community upgrades dependencies: an evolutionary study"}, {"link": "/document/7202955", "title": "Measuring dependency freshness in software systems"}, {"link": "", "title": "In dependencies we trust: How vulnerable are dependencies in software modules?"}, {"link": "", "title": "Do developers update their library dependencies?"}, {"link": "", "title": "Adding sparkle to social coding: An empirical study of repository badges in the npm ecosystem"}, {"link": "", "title": "Disrupting developer productivity one bot at a time"}, {"link": "", "title": "Full refactoring"}, {"link": "", "title": "Update minimatch version"}, {"link": "/document/8090137", "title": "Does the choice of configuration framework matter for developers? empirical study on 11 Java configuration frameworks"}, {"link": "", "title": "Nhpp software reliability and cost models with testing coverage"}, {"link": "", "title": "The art of software testing"}, {"link": "", "title": "GHTorrent: GitHub's data from a fire-hose"}, {"link": "/document/7962393", "title": "TravisTorrent: Synthesizing Travis CI and GitHub for full-stack research on continuous integration"}, {"link": "", "title": "Mixed-effects modeling with crossed random effects for subjects and items"}, {"link": "", "title": "Applied multiple regression/correlation analysis for the behavioral sciences"}, {"link": "", "title": "Regression shrinkage and selection via the lasso"}, {"link": "", "title": "Statistics for high-dimensional data: methods, theory and applications"}, {"link": "", "title": "Quasi-experimentation: Design and analysis issues for field settings (book)"}, {"link": "/document/8115619", "title": "The impact of continuous integration on other software development practices: a large-scale empirical study"}, {"link": "", "title": "Applied longitudinal data analysis: modeling change and event occurrence"}, {"link": "", "title": "Small sample inference for clustered data"}, {"link": "", "title": "Small sample estimation properties of longitudinal count models"}, {"link": "", "title": "Data analysis using regression and multi-level/hierarchical models"}, {"link": "", "title": "Linear mixed-effects models: basic concepts and examples"}, {"link": "", "title": "lmertest package: Tests in linear mixed effects models"}, {"link": "", "title": "A general and simple method for obtaining r2 from generalized linear mixed-effects models"}, {"link": "", "title": "Controlling the false discovery rate: a practical and powerful approach to multiple testing"}, {"link": "", "title": "Multilevel analysis: an introduction to basic and advanced multilevel modeling"}, {"link": "", "title": "Measuring explained variation in linear mixed effects models"}, {"link": "", "title": "Goodness-of-fit measures of r 2 for repeated measures mixed effect models"}, {"link": "", "title": "Fixed-effect variable selection in linear mixed models using r2 statistics"}, {"link": "", "title": "[suggestion]greenkeeper"}, {"link": "", "title": "Linting javascript in 2015"}, {"link": "", "title": "Jshint vs. eslint"}, {"link": "", "title": "Use codecov instead of coveralls"}, {"link": "", "title": "Coveralls/coverage badge not working"}, {"link": "", "title": "Move code coverage from coveralls.io to codecov.io"}, {"link": "", "title": "The mandatory notification of data breaches: Issues arising for australian and eu legal developments"}, {"link": "", "title": "Monitor alarm fatigue: an integrative review"}, {"link": "", "title": "An evidence-based approach to reduce nuisance alarms and alarm fatigue"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812106"}
{"ref": [{"link": "", "title": "List of swear words, bad words, & curse words"}, {"link": "", "title": "Mastering issues"}, {"link": "", "title": "Open source guides - your code of conduct"}, {"link": "", "title": "The floss2013 free/libre/open source survey"}, {"link": "", "title": "if you become his second wife, you are a fool\u201d: Shifting paradigms of the roles, perceptions, and working conditions of legal secretaries in large law firms"}, {"link": "", "title": "Gender-and race-based standards of competence: lower minimum standards but higher ability standards for devalued groups"}, {"link": "", "title": "Social incentives for gender differences in the propensity to initiate negotiations: Sometimes it does hurt to ask"}, {"link": "", "title": "Who women are, who women should be: Descriptive and prescriptive gender stereotyping in sex discrimination"}, {"link": "", "title": "Sentiment polarity detection for software development"}, {"link": "", "title": "Getting a job: Is there a motherhood penalty?"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "", "title": "A computational approach to politeness with application to social factors"}, {"link": "", "title": "Sex discrimination in simulated employment contexts: A meta-analytic investigation"}, {"link": "", "title": "Complete list of GitHub markdown emoji markup"}, {"link": "", "title": "Motivated to penalize: women's strategic rejection of successful women"}, {"link": "", "title": "Free/libre and open source software: Survey and study"}, {"link": "/document/6624034", "title": "The ghtorent dataset and tool suite"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "Sex differences in intensity of emotional experience: a social role interpretation"}, {"link": "", "title": "Gender stereotypes and workplace bias"}, {"link": "", "title": "Exploiting emoticons in sentiment analysis"}, {"link": "", "title": "The impact of gender diversity on the performance of business teams: Evidence from a field experiment"}, {"link": "", "title": "Sentiment and politeness analysis tools on developer discussions are unreliable, but so are people"}, {"link": "", "title": "The promises and perils of mining GitHub"}, {"link": "", "title": "The matilda effect in science communication: an experiment on gender bias in publication quality perceptions and collaboration interest"}, {"link": "", "title": "Detecting cyberbullying: query terms and techniques"}, {"link": "", "title": "Motivated stereotyping of women: she's fine if she praised me but incompetent if she criticized me"}, {"link": "", "title": "Impression formation in online peer production: activity traces and personal profiles in GitHub"}, {"link": "", "title": "Science facultys subtle gender biases favor male students"}, {"link": "", "title": "patches don't have gender': What is not open in open source software"}, {"link": "/document/7180089", "title": "Are bullies more productive? empirical study of affectiveness vs. issue fixing time"}, {"link": "", "title": "Would you mind fixing this issue?"}, {"link": "", "title": "Opinion mining and sentiment analysis"}, {"link": "", "title": "Impression formation as a function of the sex role appropriateness of linguistic behavior"}, {"link": "", "title": "Senior management women in australia: Diverse perspectives"}, {"link": "", "title": "A meta-analysis of gender group differences for measures of job performance in field studies"}, {"link": "", "title": "Backlash effects for disconfirming gender stereotypes in organizations"}, {"link": "", "title": "Using crowd-sourcing to improve profanity detection"}, {"link": "", "title": "StackOverflow"}, {"link": "", "title": "Gender differences and bias in open source: Pull request acceptance of women versus men"}, {"link": "", "title": "Sentiment strength detection in short informal text"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in GitHub"}, {"link": "/document/8154879", "title": "Gender, representation and online participation: A quantitative study"}, {"link": "", "title": "Gender and tenure diversity in GitHub teams"}, {"link": "", "title": "Sentiment expression via emoticons on social media"}, {"link": "", "title": "Evolution of fred: Family responsibilities discrimination and developments in the law of stereotyping and implicit bias"}, {"link": "", "title": "What works for women at work"}, {"link": "", "title": "Do facebook profile pictures reflect user's personality?"}, {"link": "/document/7180096", "title": "Wait for it: Determinants of pull request evaluation latency on GitHub"}, {"link": "", "title": "2017 taulbee survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812110"}
{"ref": [{"link": "", "title": "Fibonacci heap implementation from the graphmaker library."}, {"link": "", "title": "Home page of the korat test generation tool."}, {"link": "", "title": "Replication package of the object (in) validity learning approach"}, {"link": "", "title": "Improving test generation under rich contracts by tight bounds and incremental SAT solving"}, {"link": "", "title": "Code contracts for. net: Runtime verification and so much more"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "Random search for hyper-parameter optimization"}, {"link": "", "title": "Korat: automated testing based on java predicates"}, {"link": "", "title": "Beyond assertions: Advanced specification and verification with JML and esc/java2"}, {"link": "", "title": "Dysy: dynamic symbolic execution for invariant inference"}, {"link": "", "title": "Modular verification of code with SAT"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Analysis of invariants for efficient bounded verification"}, {"link": "", "title": "Test generation through programming in UDIT A"}, {"link": "", "title": "An introduction to variable and feature selection"}, {"link": "", "title": "Software Abstractions - Logic, Language, and Analysis."}, {"link": "", "title": "Isomorph-free model enumeration: A new method for checking relational specifications"}, {"link": "", "title": "Testera: A tool for testing java programs using alloy specifications"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Program Development in Java - Abstraction, Specification, and Object-Oriented Design."}, {"link": "", "title": "Algorithms and Data Structures: The Basic Toolbox."}, {"link": "", "title": "LLBMC: bounded model checking of C and C++ programs using a compiler IR"}, {"link": "", "title": "Object-Oriented Software Construction"}, {"link": "/document/711043", "title": "Design by contract: The eiffel method"}, {"link": "", "title": "Automatic testing of object-oriented software"}, {"link": "", "title": "The yogiproject: Software property checking via static analysis and testing"}, {"link": "", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Symbolic pathfinder: integrating symbolic execution with model checking for java bytecode analysis"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Field-exhaustive testing"}, {"link": "", "title": "Artificial Intelligence - A Modern Approach (3. internat. ed.)."}, {"link": "", "title": "Artificial neural networks as multi-networks automated test oracle"}, {"link": "", "title": "An automated framework for software test oracle"}, {"link": "", "title": "From invariant checking to invariant inference using randomized search"}, {"link": "", "title": "Jwalk: a tool for lazy, systematic testing of java classes by design introspection and user interaction"}, {"link": "", "title": "Kodkod: A relational model finder"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "A survey on software fault localization"}, {"link": "", "title": "History-aware data structure repair using SAT"}, {"link": "", "title": "Locating faults through automated predicate switching"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811951"}
{"ref": [{"link": "", "title": "ekremkaraca/awesome-rails: A collection / list of awesome projects, sites made with Rails"}, {"link": "", "title": "activeadmin/activeadmin: The administration framework for Ruby on Rails applications."}, {"link": "", "title": "Inductive verification of data model invariants for web applications"}, {"link": "", "title": "Coexecutability for efficient verification of data model updates"}, {"link": "/document/7371994", "title": "Efficient data model verification with many-sorted logic"}, {"link": "", "title": "Finding access control bugs in web applications with CanCheck"}, {"link": "", "title": "ryanb/cancan \u2022 GitHub"}, {"link": "", "title": "Symbolic security analysis of ruby-on-rails web applications"}, {"link": "", "title": "NUSMV: A new symbolic model checker"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "Eliminating navigation errors in web applications via model checking and runtime enforcement of navigation state machines"}, {"link": "/document/588521", "title": "The model checker SPIN"}, {"link": "", "title": "Static typing for Ruby on Rails"}, {"link": "", "title": "Alloy: A lightweight object modelling notation"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Model-assisted access control implementation for code-centric Ruby-on-Rails web application development"}, {"link": "", "title": "Rubicon: bounded verification of web applications"}, {"link": "", "title": "Derailer: interactive security analysis for web applications"}, {"link": "", "title": "Symbolic execution for (almost) free: Hijacking an existing implementation to perform symbolic execution"}, {"link": "", "title": "Finding security bugs in web applications using a catalog of access control patterns"}, {"link": "", "title": "Analysis and Verification of Web Application Data Models"}, {"link": "/document/6612274", "title": "An integrated data model verifier with property templates"}, {"link": "", "title": "Bounded verification of Ruby on Rails data models"}, {"link": "", "title": "Unbounded data model verification using SMT solvers"}, {"link": "", "title": "Open Source Rails"}, {"link": "", "title": "ActsAsParanoid/acts_as_paranoid: ActiveRecord plugin allowing you to hide and restore records without actually deleting them"}, {"link": "", "title": "Design verification of web applications using symbolic model checking"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Hyperdocuments as automata: Verification of trace-based browsing properties by model checking"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "SPASS version 3.5"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985708"}
{"ref": [{"link": "", "title": "Building Data Science Teams"}, {"link": "", "title": "Customer Feedback and Data Collection Techniques in Software R&D: A Literature Review"}, {"link": "", "title": "The Digital Advantage: How Digital Leaders Outperform their Peers in Every Industry"}, {"link": "", "title": "Online Controlled Experiments and A/B Tests"}, {"link": "", "title": "The HYPEX model: From opinions to data-driven software development"}, {"link": "", "title": "Towards continuous customer validation: A conceptual model for combining qualitative customer feedback with quantitative customer observation"}, {"link": "", "title": "Building Blocks for Continuous Experimentation"}, {"link": "", "title": "The RIGHT model for Continuous Experimentation"}, {"link": "", "title": "The emerging role of data scientists on software development teams"}, {"link": "", "title": "Continuous Deployment of Software Intensive Products and Services: A Systematic Mapping Study"}, {"link": "", "title": "The Lack of Sharing of Customer Data in Large Software Organizations: Challenges and Implications"}, {"link": "", "title": "Agile Software Development, Principles, Patterns, and Practices"}, {"link": "/document/6328180", "title": "Climbing the \u2018Stairway to heaven\u2019 \u2014 A mulitiple-case study exploring barriers in the transition from agile development towards continuous deployment of software"}, {"link": "", "title": "Waste and lead time reduction in a software product customization process with value stream maps"}, {"link": "", "title": "The Goal: A Process of Ongoing Improvement"}, {"link": "", "title": "Continuous integration flows"}, {"link": "", "title": "The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses"}, {"link": "", "title": "Do It Wrong Quickly: How the Web Changes the Old Marketing Rules by Mike Moran"}, {"link": "", "title": "The standish group report"}, {"link": "", "title": "Uncontrolled: the surprising payoff of trial-and-error for business, politics, and society"}, {"link": "", "title": "User Involvement throughout the Innovation Process in High-Tech Industries"}, {"link": "/document/6928783", "title": "From opinions to data-driven software R&D: A multi-case study on how to close the \u2018open loop\u2019 problem"}, {"link": "", "title": "AlB Testing \u2014 The most powerful way to turn clicks into customers"}, {"link": "", "title": "Design of Experiments Using the Taguchi Approach: 16 Steps to Product and Process Improvement"}, {"link": "", "title": "Focusing on the Long-term"}, {"link": "", "title": "Seven Rules of Thumb for Web Site Experimenters"}, {"link": "", "title": "Controlled experiments on the web: Survey and practical guide"}, {"link": "", "title": "Online controlled experiments at large scale"}, {"link": "", "title": "Overlapping experiment infrastructure"}, {"link": "", "title": "The Bones of the System: A Case Study of Logging and Telemetry at Microsoft"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Qualitative content analysis \u2014 research instrument or mode of interpretation"}, {"link": "", "title": "Building Theories from Case Study Research"}, {"link": "", "title": "Eternal embedded software: Towards innovation experiment systems"}, {"link": "", "title": "Time to Say \u2018Good Bye\u2019: Feature Lifecycle"}, {"link": "", "title": "Hypothesis Kit for A/B testing"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Where do developers log? an empirical study on logging practices in industry"}, {"link": "", "title": "Measuring the User Experience on a Large Scale: User-Centered Metrics for Web Applications"}, {"link": "", "title": "Optimizely"}, {"link": "", "title": "Mixpanel"}, {"link": "", "title": "Oracle Maxymiser"}, {"link": "", "title": "Changing circumstances, disrupting habits"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985712"}
{"ref": [{"link": "", "title": "Statistics and facts about Android"}, {"link": "", "title": "97% of mobile malware is on Android. this is the easy way you stay safe"}, {"link": "", "title": "Cisco 2014 annual security report"}, {"link": "/document/6234407", "title": "Dissecting Android malware: Characterization and evolution"}, {"link": "", "title": "Finding unknown malice in 10 seconds: Mass vetting for new threats at the Google-Play scale"}, {"link": "", "title": "Towards a scalable resource-driven approach for detecting repackaged android applications"}, {"link": "", "title": "Frequent subgraph based familial classification of android malware"}, {"link": "", "title": "OWASP mobile top 10 risks"}, {"link": "", "title": "Debunking six myths of app wrapping"}, {"link": "", "title": "DexHunter: toward extracting hidden code from packed Android applications"}, {"link": "", "title": "AppSpear: Bytecode decrypting and DEX reassembling for packed Android malware"}, {"link": "", "title": "Obfuscation in Android malware, and how to fight back"}, {"link": "", "title": "Five ways Android malware is becoming more resilient"}, {"link": "", "title": "Evading Android runtime analysis via sandbox detection"}, {"link": "", "title": "DroidScope: Seamlessly reconstructing OS and Dalvik semantic views for dynamic Android malware analysis"}, {"link": "", "title": "CopperDroid: Automatic reconstruction of Android malware behaviors"}, {"link": "", "title": "DroidTrace: a ptrace based Android dynamic analysis system with forward execution capability"}, {"link": "", "title": "Using provenance patterns to vet sensitive behaviors in Android apps"}, {"link": "", "title": "TaintDroid: an information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Valgrind: a framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "Android-unpacker"}, {"link": "", "title": "Dalvik executable format"}, {"link": "", "title": "Surreptitious Software: Obfuscation, Watermarking, and Tamperproojing for Software Protection"}, {"link": "", "title": "Baidu Inc."}, {"link": "", "title": "IntelliDroid: A targeted input generator for the dynamic analysis of Android malware"}, {"link": "", "title": "F-Droid"}, {"link": "", "title": "Qihoo360 Inc."}, {"link": "", "title": "Alibaba Inc."}, {"link": "", "title": "Bangcle Inc."}, {"link": "", "title": "Tencent Inc."}, {"link": "", "title": "Ijiami Inc."}, {"link": "", "title": "Palo Alto Networks"}, {"link": "", "title": "Apk protect"}, {"link": "", "title": "NAGA IN Inc."}, {"link": "", "title": "Android hacker protection level 0"}, {"link": "", "title": "Netqin Inc."}, {"link": "", "title": "PayEgis Inc."}, {"link": "", "title": "LG Nexus 5"}, {"link": "", "title": "ZjDroid"}, {"link": "", "title": "Baksmali"}, {"link": "", "title": "Dexdump"}, {"link": "", "title": "Dex2jar"}, {"link": "", "title": "Jadx"}, {"link": "", "title": "IDA Pro"}, {"link": "", "title": "PScout: Analyzing the Android permission specification"}, {"link": "", "title": "Semantics-aware android malware classification using weighted contextual api dependency graphs"}, {"link": "", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "/document/7579770", "title": "Can we trust the privacy policies of android apps?"}, {"link": "", "title": "Toward engineering a secure android ecosystem: A survey of existing techniques"}, {"link": "", "title": "The evolution of android malware and android analysis techniques"}, {"link": "", "title": "CF-Bench"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet?"}, {"link": "", "title": "Reducing combinatorics in gui testing of Android applications"}, {"link": "", "title": "A study of the packer problem and its solutions"}, {"link": "", "title": "CoDisasm: Medium scale concatic disassembly of self-modifying binaries with overlapping instructions"}, {"link": "", "title": "SoK: Deep packer inspection: A longitudinal study of the complexity of runtime packers"}, {"link": "", "title": "Protecting software through obfuscation: Can it keep pace with progress in code analysis?"}, {"link": "", "title": "DWroidDump: Executable code extraction from Android applications for malware analysis"}, {"link": "", "title": "Profiledroid: multilayer profiling of android applications"}, {"link": "/document/6903578", "title": "On tracking information flows through jni in android applications"}, {"link": "", "title": "Morpheus: automatically generating heuristics to detect Android emulators"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985676"}
{"ref": [{"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Foraging among an overabundance of similar variants"}, {"link": "/document/6223012", "title": "An exploratory study of backtracking strategies used by developers"}, {"link": "", "title": "Productivity factors and programming environments"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Software developers' perceptions of productivity"}, {"link": "", "title": "Constant, constant, multi-tasking craziness: managing multiple working spheres"}, {"link": "", "title": "A context model for ide-based recommendation systems"}, {"link": "/document/1201219", "title": "Hipikat: Recommending pertinent software development artifacts"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Mylar: a degree-of-interest model for IDEs"}, {"link": "", "title": "Task modelling in multiple contexts of use"}, {"link": "/document/7467280", "title": "High productivity programmers use effective task processes in unit-testing"}, {"link": "", "title": "Fieldwork traditions: Ethnography and participant observation"}, {"link": "", "title": "Selecting empirical methods for software engineering research"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Revisiting methodological issues in transcript analysis: Negotiated coding and reliability"}, {"link": "", "title": "Generalizing generalizability in information systems research"}, {"link": "", "title": "Dialog-based protocol: an empirical research method for cognitive activities in software engineering"}, {"link": "", "title": "Qualitative quality: Eight \u201cbig-tent\u201d criteria for excellent qualitative research"}, {"link": "/document/300082", "title": "People, organizations, and process improvement"}, {"link": "", "title": "The time famine: Toward a sociology of work time"}, {"link": "/document/7829407", "title": "The work life of developers: Activities, switches and perceived productivity"}, {"link": "", "title": "Timespace in the workplace: Dealing with interruptions"}, {"link": "", "title": "I'd be overwhelmed, but it's just one more thing to do: Availability and interruption in research management"}, {"link": "", "title": "Hard-to-answer questions about code"}, {"link": "", "title": "Using information fragments to answer the questions developers ask"}, {"link": "", "title": "Questions programmers ask during software evolution tasks"}, {"link": "/document/4497212", "title": "Asking and answering questions during a programming change task"}, {"link": "", "title": "A degree-of-knowledge model to capture source code familiarity"}, {"link": "", "title": "Improving program navigation with an active help system"}, {"link": "/document/7424457", "title": "What to learn next: Recommending commands in a feature-rich environment"}, {"link": "/document/8154509", "title": "Gendermag: A method for evaluating software's gender inclusiveness"}, {"link": "", "title": "Reducing interruptions at work: A large-scale field study of flowlight"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811986"}
{"ref": [{"link": "", "title": "LASE: Locating and applying systematic edits by learning from examples"}, {"link": "", "title": "Scalable, example-based refactorings with refaster"}, {"link": "", "title": "Visual Studio"}, {"link": "", "title": "Eclipse"}, {"link": "", "title": "ReSharper"}, {"link": "", "title": "Coverity"}, {"link": "", "title": "Error-prone"}, {"link": "", "title": "Clang-tidy"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Inductive programming meets the real world"}, {"link": "", "title": "Automating string processing in spreadsheets using input-output examples"}, {"link": "", "title": "FlashExtract: A framework for data extraction by examples"}, {"link": "", "title": "Mixed-initiative approaches to global editing in slideware"}, {"link": "", "title": "FlashMeta: A framework for inductive program synthesis"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Static composition of refactorings"}, {"link": "", "title": "Project Roslyn"}, {"link": "", "title": "Entity Framework 6"}, {"link": "", "title": "NuGet 2"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "", "title": "Syntax-guided synthesis"}, {"link": "", "title": "XPath"}, {"link": "", "title": "RTED: A robust algorithm for the tree edit distance"}, {"link": "", "title": "Simple fast algorithms for the editing distance between trees and related problems"}, {"link": "", "title": "A density-based algorithm for discovering clusters in large spatial databases with noise"}, {"link": "", "title": "Does automated refactoring obviate systematic editing?"}, {"link": "", "title": "Example-based program transformation"}, {"link": "", "title": "Aligning development tools with the way programmers think about code changes"}, {"link": "", "title": "Synthesizing data structure transformations from input-output examples"}, {"link": "", "title": "A graph-based approach to API usage adaptation"}, {"link": "", "title": "Annotation refactoring: Inferring upgrade transformations for legacy applications"}, {"link": "", "title": "What would other programmers do: Suggesting solutions to error messages"}, {"link": "", "title": "Exploring API method parameter recommendations"}, {"link": "", "title": "Refactoring with synthesis"}, {"link": "/document/6227191", "title": "WitchDoctor: IDE support for real-time auto-completion of refactorings"}, {"link": "/document/6227192", "title": "Reconciling manual and automatic refactoring"}, {"link": "", "title": "API code recommendation using statistical learning from fine-grained changes"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Your wish is my command: Programming by example"}, {"link": "", "title": "Interactive parser synthesis by example"}, {"link": "", "title": "Synthesizing data structure transformations from input-output examples"}, {"link": "", "title": "NetEgg: Programming network policies by examples"}, {"link": "", "title": "User interaction models for disambiguation in programming by example"}, {"link": "", "title": "Data-driven hint generation in vast solution spaces: a self-improving Python programming tutor"}, {"link": "", "title": "Semi-supervised verified feedback generation"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Qlose: Program repair with quantitative objectives"}, {"link": "", "title": "Writing Reusable Code Feedback at Scale with Mixed-Initiative Program Synthesis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985680"}
{"ref": [{"link": "/document/6148202", "title": "Con-temporary peer review in action: Lessons from open source development"}, {"link": "", "title": "Open source software peer review practices: a case study of the apache server"}, {"link": "", "title": "Modern code reviews in open-source projects: Which problems do they fix?"}, {"link": "", "title": "State-of-the-art: software inspections after 25 years"}, {"link": "", "title": "Software defect reduction top 10 list"}, {"link": "", "title": "Les passions de l'ame: on obsessive and harmonious passion"}, {"link": "", "title": "Caring: A relational approach to ethics and moral education"}, {"link": "", "title": "Intrinsic and extrinsic motivations: Classic definitions and new directions"}, {"link": "", "title": "Real world research"}, {"link": "", "title": "Qualitative data analysis: A method sourcebook"}, {"link": "", "title": "The hacker ethic"}, {"link": "", "title": "Free/libre and open source software: Survey and study"}, {"link": "", "title": "Understanding free software developers: Findings from the FLOSS study"}, {"link": "", "title": "Why hackers do what they do: Understanding motivation and effort in free/open source software projects"}, {"link": "", "title": "On the role of passion in performance"}, {"link": "", "title": "When passion leads to excellence: The case of musicians"}, {"link": "", "title": "The proper care and feeding of hackerspaces: Care ethics and cultures of making"}, {"link": "", "title": "How open source software works: \u201cfree\u201d user-to-user assistance"}, {"link": "", "title": "The Chase for OSS Quality: The Meaning of Member Roles, Motivations, and Business Models"}, {"link": "", "title": "Effect of intrinsic rewards on task performance of employees: Mediating role of motivation"}, {"link": "", "title": "An assessment of intrinsic and extrinsic motivation on task performance in crowdsourcing markets"}, {"link": "", "title": "The Cathedral and the Bazaar"}, {"link": "", "title": "Gift economies in the development of open source software: anthropological reflections"}, {"link": "", "title": "Emergence of new project teams from open source software developer networks: Impact of prior collaboration ties"}, {"link": "", "title": "Motivation of software developers in Open Source projects: an Internet-based survey of contributors to the Linux kernel"}, {"link": "", "title": "Some simple economics of open source"}, {"link": "", "title": "Strategies for ensuring trustworthiness in qualitative research projects"}, {"link": "", "title": "Trustworthiness of grounded theory methodology research in information systems"}, {"link": "", "title": "Exploring complex phenomena: Grounded theory in student affairs research"}, {"link": "", "title": "Validity, trustworthiness and rigour: quality and the idea of qualitative research"}, {"link": "", "title": "Validation guidelines for IS positivist research"}, {"link": "", "title": "The Research Audit Trial: Enhancing Trustworthiness in Qualitative Inquiry"}, {"link": "", "title": "Rigour and grounded theory"}, {"link": "", "title": "Work motivations, satisfactions, and health among managers: Passion versus addiction"}, {"link": "", "title": "Self-determination theory and the facilitation of intrinsic motivation, social development, and well-being"}, {"link": "", "title": "The importance of job autonomy, cognitive ability, and job-related skill for predicting role breadth and job performance"}, {"link": "", "title": "Experiencing organizational work design: Beyond hackman and oldham"}, {"link": "", "title": "The influence of positive affective states on task perceptions and satisfaction"}, {"link": "", "title": "The influence of positive affect on the components of expectancy motivation"}, {"link": "", "title": "Affect and managerial performance: A test of the sadder-but-wiser vs. happier-and-smarter hypotheses"}, {"link": "", "title": "Students' motivational profiles and achievement outcomes in physical education: A self-determination perspective"}, {"link": "", "title": "Measurement issues in self-determination theory and sport."}, {"link": "/document/7190109", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "/document/1259222", "title": "New tricks: How open source changed the way my team works"}, {"link": "", "title": "Does the Modern Code Inspection Have Value"}, {"link": "", "title": "Was my contribution fairly reviewed?: a framework to study the perception of fairness in modern code reviews"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812037"}
{"ref": [{"link": "", "title": "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation"}, {"link": "", "title": "Does your configuration code smell?"}, {"link": "", "title": "What questions do programmers ask about configuration as code?"}, {"link": "", "title": "Puppet Documentation"}, {"link": "", "title": "Nyse and ice: Compliance, devops and efficient growth with puppet enterprise"}, {"link": "", "title": "CWE-Common Weakness Enumeration"}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "/document/7180066", "title": "Co-evolution of infrastructure and source code: An empirical study"}, {"link": "", "title": "Rehearsal: A configuration verification tool for puppet"}, {"link": "", "title": "Borsa istanbul: Improving efficiency and reducing costs to manage a growing infrastructure"}, {"link": "", "title": "Ambit energy's competitive advantage? it's really a devops software company"}, {"link": "", "title": "Code Smell Detection in Infrastructure as Code"}, {"link": "/document/8330206", "title": "How good is your puppet? an empirically defined and validated quality model for puppet"}, {"link": "/document/8367034", "title": "Characterizing defective configuration scripts used for continuous deployment"}, {"link": "/document/7958397", "title": "Which factors influence practitioners' usage of build automation tools?"}, {"link": "", "title": "A systematic mapping study of infrastructure as code research"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Csrc-glossary-vulnerability"}, {"link": "", "title": "Pro Puppet"}, {"link": "", "title": "The coding manual for qualitative researchers"}, {"link": "", "title": "Security and privacy controls for federal information systems and organizations"}, {"link": "", "title": "The secure shell (ssh) protocol architecture"}, {"link": "", "title": "Defending against a denial-of-service attack on tcp"}, {"link": "", "title": "Todo or to bug: Exploring how task annotations play a role in the work practices of software developers"}, {"link": "", "title": "Http over tls"}, {"link": "", "title": "skywiper (a.k.a. flame a.k.a. flamer): A complex malware for targeted attacks"}, {"link": "", "title": "Collisions for the compression function of md5"}, {"link": "", "title": "How to break md5 and other hash functions"}, {"link": "/document/8090145", "title": "Security smells in android"}, {"link": "", "title": "An empirical study of cryptographic misuse in android applications"}, {"link": "", "title": "Crysl: Validating correct usage of cryptographic apis"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "/document/8115624", "title": "Detecting fragile comments"}, {"link": "", "title": "/*icomment: Bugs or bad comments?*/"}, {"link": "", "title": "Identifying the characteristics of vulnerable code changes: An empirical study"}, {"link": "", "title": "Amazon IA: When elasticity snaps back"}, {"link": "/document/7985651", "title": "Characterizing and detecting anti-patterns in the logging code"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "/document/8812041", "title": "The Seven Sins: Security Smells in Infrastructure as Code Scripts"}, {"link": "", "title": "What is the connection between issues, bugs, and enhancements?: Lessons learned from 800+ software projects"}, {"link": "", "title": "We don't need another hero?: The impact of \u201cheroes\u201d on software development"}, {"link": "", "title": "Curating github for engineered software projects"}, {"link": "", "title": "Characterizing the influence of continuous integration: Empirical results from 250+ open source and proprietary projects"}, {"link": "", "title": "Static analysis tools as early indicators of pre-release defect density"}, {"link": "", "title": "An analysis of defect densities found during software inspections"}, {"link": "/document/1408432", "title": "Quantitative vulnerability assessment of systems software"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "Some code smells have a significant but small effect on faults"}, {"link": "", "title": "Subjective evaluation of software evolvability using code smells: An empirical study"}, {"link": "/document/6976076", "title": "Do they really smell bad? a study on developers' perception of bad code smells"}, {"link": "/document/7958576", "title": "Comparing the usability of cryptographic apis"}, {"link": "/document/1451869", "title": "The protection of information in computer systems"}, {"link": "", "title": "Guideline for using cryptographic standards in the federal government: Cryptographic mechanisms"}, {"link": "/document/8077802", "title": "Developers need support, too: A survey of security advice for software developers"}, {"link": "/document/5477059", "title": "Searching for a needle in a haystack: Predicting security vulnerabilities for windows vista"}, {"link": "/document/7972729", "title": "Predicting android application security and privacy risk with static code metrics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812041"}
{"ref": [{"link": "/document/6320585", "title": "Byod: Security and privacy considerations"}, {"link": "", "title": "Research: 74 percent using or adopting byod"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Medusa: A programming framework for crowd-sensing applications"}, {"link": "", "title": "Appprofiler: A flexible method of exposing privacy-related behavior in android applications to end users"}, {"link": "", "title": "TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "CHEX: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "SUPOR: precise and scalable sensitive user input detection for android apps"}, {"link": "", "title": "GUILeak: Tracing privacy policy claims on user input data for android applications"}, {"link": "", "title": "UIPicker: User-input privacy identification in mobile applications"}, {"link": "", "title": "UIRef: Analysis of sensitive user inputs in android applications"}, {"link": "", "title": "Ghost buttons in UX design"}, {"link": "", "title": "Optical character recognition"}, {"link": "", "title": "Distinctive image features from scale-invariant keypoints"}, {"link": "", "title": "Android view system"}, {"link": "", "title": "Sensitive text icon classification for android apps"}, {"link": "", "title": "Color-to-grayscale: does the method matter in image recognition?"}, {"link": "", "title": "Digital image processing and computer vision"}, {"link": "", "title": "RGB color model"}, {"link": "", "title": "Filters for common resampling tasks"}, {"link": "", "title": "WHYPER: Towards automating risk assessment of mobile applications"}, {"link": "", "title": "Android permissions: User attention, comprehension, and behavior"}, {"link": "/document/790410", "title": "Object recognition from local scale-invariant features"}, {"link": "/document/4674368", "title": "Faster and better: A machine learning approach to corner detection"}, {"link": "/document/682181", "title": "Learning string-edit distance"}, {"link": "", "title": "N-gram similarity and distance"}, {"link": "", "title": "Static reference analysis for gui objects in android software"}, {"link": "/document/7194564", "title": "Static control-flow analysis of user-driven callbacks in Android applications"}, {"link": "/document/7372053", "title": "Static window transition graphs for android (t)"}, {"link": "", "title": "OpenCV"}, {"link": "", "title": "Asprise ocr and barcode recognition"}, {"link": "", "title": "dex2jar: Tools to work with android. dex and java. class files"}, {"link": "/document/7372013", "title": "Reverse engineering mobile application user interfaces with REMAUI"}, {"link": "", "title": "Sikuli: using GUI screenshots for search and automation"}, {"link": "", "title": "GUI testing using computer vision"}, {"link": "/document/5609723", "title": "WEBDIFF: automated identification of cross-browser issues in web applications"}, {"link": "", "title": "X-PERT: a web application testing tool for cross-browser inconsistency detection"}, {"link": "", "title": "AsDroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction"}, {"link": "", "title": "AppIntent: analyzing sensitive data transmission in android for privacy leakage detection"}, {"link": "", "title": "PERUIM: Understanding mobile application privacy with permission-ui mapping"}, {"link": "", "title": "Learning design semantics for mobile apps"}, {"link": "", "title": "Autocog: Measuring the description-to-permission fidelity in android applications"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "", "title": "Detecting sensitive data disclosure via bi-directional text correlation analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812108"}
{"ref": [{"link": "", "title": "Node.js Foundation"}, {"link": "", "title": "Tracking the Explosive Growth of Open-Source Software"}, {"link": "", "title": "The npm Repository"}, {"link": "", "title": "Node.js in PayPal"}, {"link": "", "title": "Node.js in LinkedIn"}, {"link": "", "title": "Node.js in Yahoo"}, {"link": "", "title": "Node.js in Mozila"}, {"link": "/document/8115663", "title": "A Comprehensive Study on Real World Concurrency Bugs in Node.js"}, {"link": "", "title": "Node. fz: Fuzzing the Server-Side Event-Driven Architecture"}, {"link": "", "title": "AVIO: Detecting Atomicity Violations via Access-Interleaving Invariants"}, {"link": "", "title": "CTrigger: Exposing Atomicity Violation Bugs from Their Hiding Places"}, {"link": "/document/4556733", "title": "Atom-Aid: Detecting and Surviving Atomicity Violations"}, {"link": "", "title": "Automatic Atomic Region Identification in Shared Memory SPMD Programs"}, {"link": "", "title": "Race Detection for Event-Driven Mobile Applications"}, {"link": "", "title": "Race Detection For Android Applications"}, {"link": "", "title": "Detecting Concurrency Errors in Client-Side Java Script Web Applications"}, {"link": "", "title": "Race Detection for Web Applications"}, {"link": "", "title": "Detecting Event Anomalies in Event-Based Systems"}, {"link": "", "title": "A Framework for Automated Testing of JavaScript Web Applications"}, {"link": "", "title": "Scalable Race Detection for Android Applications"}, {"link": "", "title": "Automatically Verifying and Reproducing Event-Based Races in Android Apps"}, {"link": "", "title": "Seven Event Queues in Node.js"}, {"link": "", "title": "A Node.js Application: Change Propagation"}, {"link": "", "title": "No.84 Issue in Change Propagation"}, {"link": "", "title": "Promises"}, {"link": "", "title": "Libuv"}, {"link": "", "title": "Standard Built-in Objects"}, {"link": "", "title": "Semantics of Asynchronous JavaScript"}, {"link": "", "title": "Async Hooks"}, {"link": "", "title": "Jalangi: A Selective Record-Replay and Dynamic Analysis Framework for JavaScript"}, {"link": "", "title": "Cloc: count lines of code"}, {"link": "", "title": "Net - Node.js v11.7.0 Documentation"}, {"link": "", "title": "A race condition_log() while closing the endpoint"}, {"link": "", "title": "A race condtion logging a file while rolling a file"}, {"link": "", "title": "A race condition invalidateToken while authenticating a request"}, {"link": "", "title": "2ndStrike: Toward Manifesting Hidden Concurrency Typestate Bugs"}, {"link": "", "title": "FastTrack: Efficient and Precise Dynamic Race Detection"}, {"link": "", "title": "Eraser: A Dynamic Data Race Detector for Multithreaded Programs"}, {"link": "", "title": "Atomizer: A Dynamic Atomicity Checker for Multithreaded Programs"}, {"link": "", "title": "Efficient Computation of Happens-Before Relation for Event-Driven Programs"}, {"link": "", "title": "Static Detection of Event-based Races in Android Apps"}, {"link": "", "title": "Effective Race Detection for Event-Driven Programs"}, {"link": "", "title": "ARROW: Automated Repair of Races on Client-Side Web Pages"}, {"link": "", "title": "GEMs: Shared-Memory Parallel Programming for Node.js"}, {"link": "", "title": "Static Analysis of Event-Driven Node.js JavaScript Applications"}, {"link": "", "title": "The Case of the Poisoned Event Handler: Weaknesses in the Node.js Event-Driven Architecture"}, {"link": "", "title": "Assessing the Security of Node. js Platform"}, {"link": "", "title": "Understanding and Automatically Preventing Injection Attacks on Node.js"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811949"}
{"ref": [{"link": "", "title": "Google announces over 2 billion monthly active devices on android"}, {"link": "/document/7381843", "title": "Experience report: How do bug characteristics differ across severity classes: A multi-platform study"}, {"link": "", "title": "A cross-platform analysis of bugs and bug-fixing in open source projects: Desktop vs. android vs. ios"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Program slicing techniques and its applications"}, {"link": "/document/6100110", "title": "Client-side web application slicing"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "App Components"}, {"link": "/document/7190045", "title": "Reran: Timing- and touch-sensitive record and replay for android"}, {"link": "", "title": "Versatile yet lightweight record-and-replay for android"}, {"link": "", "title": "Soot - a java bytecode optimization framework"}, {"link": "/document/366927", "title": "Incremental regression testing"}, {"link": "/document/242531", "title": "An approach to regression testing using slicing"}, {"link": "", "title": "UI/Application Exerciser Monkey"}, {"link": "", "title": "Web application slicing in presence of dynamic code generation"}, {"link": "/document/1134112", "title": "Construction of the system dependence graph for web application slicing"}, {"link": "", "title": "Using compressed bytecode traces for slicing java programs"}, {"link": "", "title": "Dynamic slicing on java bytecode traces"}, {"link": "", "title": "jslice"}, {"link": "", "title": "Dynamic slicing of java bytecode programs"}, {"link": "", "title": "Harvesting developer credentials in android apps"}, {"link": "", "title": "Obfuscation resilient binary code reuse through trace-oriented programming"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Dynamic slicing long running programs through execution fast forwarding"}, {"link": "", "title": "Enabling tracing of long-running multithreaded programs via dynamic execution reduction"}, {"link": "/document/4658058", "title": "Dynamic slicing of multithreaded programs for race detection"}, {"link": "", "title": "Analyzing concurrency bugs using dual slicing"}, {"link": "", "title": "Drdebug: Deterministic replay based cyclic debugging with dynamic slicing"}, {"link": "", "title": "Slicing droids: Program slicing for smali code"}, {"link": "", "title": "Theoretical foundations of dynamic program slicing"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "Orbs: Language-independent program slicing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811953"}
{"ref": [{"link": "", "title": "Systems Thinking, Systems Practice"}, {"link": "", "title": "The Construction of Preference"}, {"link": "/document/5636900", "title": "Requirements engineering as creative problem solving: a research agenda for idea finding"}, {"link": "", "title": "Instructional design models for well-structured and III-structured problem-solving learning outcomes"}, {"link": "", "title": "Constructing Grounded Theory"}, {"link": "", "title": "Sustainable software development through overlapping pair rotation"}, {"link": "", "title": "Practice and perception of team code ownership"}, {"link": "/document/7985656", "title": "Software development waste"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change (2nd Edition)"}, {"link": "", "title": "Sustainable software development: Evolving extreme programming"}, {"link": "", "title": "Theoretical Sensitivity: Advances in the Methodology of Grounded Theory"}, {"link": "", "title": "Doing Grounded Theory: Issues and Discussions"}, {"link": "/document/7968162", "title": "Lessons learned from an extended participant observation grounded theory study"}, {"link": "", "title": "Trust and balanced teams"}, {"link": "", "title": "Continuous software engineering: A roadmap and agenda"}, {"link": "", "title": "Exploring Persona-Scenarios - Using Storytelling to Create Design Ideas"}, {"link": "", "title": "Personas vs proto-personas"}, {"link": "", "title": "The right number of user interviews"}, {"link": "", "title": "Hassouhou-Souzousei kaihatsu no tame ni - A way of thinking that developes creativity"}, {"link": "", "title": "Role-feature-reason"}, {"link": "", "title": "The Cucumber Book: Behaviour-Driven Development for Testers and Developers"}, {"link": "", "title": "Design cognition: results from protocol and other empirical studies of design activity"}, {"link": "", "title": "Research in Design Thinking"}, {"link": "", "title": "A Proposal for a Formal Definition of the Design Concept"}, {"link": "", "title": "The reflective practitioner: how professionals think in action"}, {"link": "/document/7184708", "title": "Is requirements engineering inherently counterproductive?"}, {"link": "", "title": "Assessing creativity with divergent thinking tasks: Exploring the reliability and validity of new subjective scoring methods"}, {"link": "", "title": "Institutional Ecology, \u2018Translations\u2019 and Boundary Objects: Amateurs and Professionals in Berkeley's Museum of Vertebrate Zoology, 1907\u201339"}, {"link": "", "title": "Sharing meaning across occupational communities: The transformation of understanding on a production floor"}, {"link": "", "title": "This is Not a Boundary Object: Reflections on the Origin of a Concept"}, {"link": "", "title": "Organizing and the Process of Sensemaking"}, {"link": "", "title": "The Sensemaking-coevolution-implementation theory of software design"}, {"link": "", "title": "Boundary spanning roles and organization structure"}, {"link": "", "title": "Boundary spanning individuals: Their role in information transfer and their antecedents"}, {"link": "", "title": "Determining validity in qualitative inquiry"}, {"link": "/document/6792168", "title": "Abductive thinking and sensemaking: The drivers of design synthesis"}, {"link": "", "title": "Software engineering process theory: A multi-method comparison of Sensemaking-Coevolution-Implementation Theory and Function-Behavior-Structure Theory"}, {"link": "", "title": "Collaborating on Multiparty Information Systems Development Projects: A Collective Reflection-in-Action View"}, {"link": "", "title": "SCRUM Development Process"}, {"link": "", "title": "Scrum guide"}, {"link": "", "title": "Agile best practice: Prioritized requirements"}, {"link": "", "title": "Ordering the product backlog in agile software development projects: A systematic literature review"}, {"link": "/document/5507388", "title": "A conceptual model and process for client-driven agile requirements prioritization"}, {"link": "", "title": "Toward Methodological Guidelines for Process Theories and Taxonomies in Software Engineering"}, {"link": "", "title": "Improving scrum user stories and product backlog using work system snapshots"}, {"link": "", "title": "Agile Software Development with Scrum"}, {"link": "", "title": "Agile Project Management with Scrum"}, {"link": "", "title": "The cost structure of sensemaking"}, {"link": "", "title": "Universal Methods of Design: 100 Ways to Research Complex Problems, Develop Innovative Ideas, and Design Effective Solutions"}, {"link": "", "title": "The obstacles and myths of usability and software engineering"}, {"link": "", "title": "Exploring principles of user-centered agile software development: A literature review, systematic review paper"}, {"link": "", "title": "A systematic literature review for agile development processes and user centred design integration"}, {"link": "", "title": "A systematic review of usability techniques in agile methodologies"}, {"link": "", "title": "Artifacts for agile user-centered design: A systematic mapping"}, {"link": "/document/1609826", "title": "Case study of customer input for a successful product"}, {"link": "", "title": "Adapting usability investigations for agile user-centered design"}, {"link": "", "title": "Dual track agile: Focusing on customer value"}, {"link": "", "title": "Dual-track agile: Why messy leads to innovation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812076"}
{"ref": [{"link": "", "title": "An in-depth study of the promises and perils of mining GitHub"}, {"link": "", "title": "The secret life of bugs: Going past the errors and omissions in software repositories"}, {"link": "", "title": "Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows"}, {"link": "", "title": "Not my bug! and other reasons for software bug report reassignments"}, {"link": "", "title": "Information needs in bug reports: improving cooperation between developers and users"}, {"link": "/document/7180080", "title": "Ecosystems in GitHub and a method for ecosystem identification using reference coupling"}, {"link": "/document/6227112", "title": "Characterizing and predicting which bugs get reopened"}, {"link": "", "title": "Social interactions around cross-system bug fixings: the case of FreeBSD and OpenBSD"}, {"link": "", "title": "Softwares product lines, global development and ecosystems: collaboration in software engineering"}, {"link": "/document/5070978", "title": "A sense of community: a research agenda for software ecosystems"}, {"link": "", "title": "Software Ecosystem: Understanding an Indispensable Technology and Industry"}, {"link": "", "title": "The small project observatory: visualizing software ecosystems"}, {"link": "", "title": "How do developers react to API evolution? The Pharo ecosystem case"}, {"link": "", "title": "How do developers react to API deprecation? The case of a Smalltalk ecosystem"}, {"link": "", "title": "How the Apache community upgrades dependencies: an evolutionary study"}, {"link": "", "title": "On the development and distribution of R packages: an empirical analysis of the R ecosystem"}, {"link": "/document/7476669", "title": "When GitHub meets CRAN: an analysis of inter-repository package dependency problems"}, {"link": "", "title": "Understanding \u201cwatchers\u201d on GitHub"}, {"link": "/document/7180090", "title": "What is the gist? Understanding the use of public gists on GitHub"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "", "title": "Open source-style collaborative development practices in commercial projects using GitHub"}, {"link": "", "title": "Coding together at scale: GitHub as a collaborative social network"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in GitHub"}, {"link": "", "title": "Let's talk about it: evaluating contributions through discussion in GitHub"}, {"link": "", "title": "Work practices and challenges in pull-based development: the integrator's perspective"}, {"link": "", "title": "Work practices and challenges in pull-based development: the contributor's perspective"}, {"link": "", "title": "GitHub Octoverse 2016"}, {"link": "/document/5582063", "title": "Python: an ecosystem for scientific computing"}, {"link": "", "title": "Topical software \u2014 SciPy.org"}, {"link": "", "title": "Conducting on-line surveys in software engineering"}, {"link": "", "title": "What makes a good bug report?"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "/document/6227095", "title": "Inferring developer expertise through defect analysis"}, {"link": "/document/6405281", "title": "The impact of bug management patterns on bug fixing: a case study of Eclipse projects"}, {"link": "", "title": "The design of bug fixes"}, {"link": "", "title": "When it breaks, it breaks: how ecosystem developers reason about the stability of dependencies"}, {"link": "", "title": "Add explicit \u2018+1\u2019 feature for issues that isn't a comment"}, {"link": "", "title": "Idea: A voting system for comments"}, {"link": "", "title": "Customized awareness: recommending relevant external change events"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985678"}
{"ref": [{"link": "", "title": "DECART project"}, {"link": "", "title": "SPLConqueror project page"}, {"link": "", "title": "Tensorflow: A system for large-scale machine learning"}, {"link": "", "title": "Boolean functions and artificial neural networks"}, {"link": "/document/256500", "title": "Universal approximation bounds for superpositions of a sigmoidal function"}, {"link": "", "title": "Automated analysis of feature models: Challenges ahead"}, {"link": "", "title": "Random search for hyperparameter optimization"}, {"link": "", "title": "Feature interaction: A critical review and considered forecast"}, {"link": "", "title": "LIBSVM: A library for support vector machines"}, {"link": "", "title": "Support-vector networks"}, {"link": "", "title": "Approximation by superpositions of a sigmoidal function"}, {"link": "/document/4339252", "title": "Feature diagrams and logics: There and back again"}, {"link": "", "title": "The power of depth for feedforward neural networks"}, {"link": "/document/1245300", "title": "A simulation study of the model evaluation criterion mmre"}, {"link": "", "title": "On the approximate realization of continuous mappings by neural networks"}, {"link": "", "title": "Understanding the difficulty of training deep feedforward neural networks"}, {"link": "", "title": "Deep sparse rectifier neural networks"}, {"link": "", "title": "Deep Learning"}, {"link": "/document/6693089", "title": "Variability-aware performance prediction: A statistical learning approach"}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "", "title": "Data-efficient performance learning for configurable systems"}, {"link": "", "title": "Approximation capabilities of multilayer feedforward networks"}, {"link": "", "title": "Multilayer feedforward networks are universal approximators"}, {"link": "/document/8115661", "title": "Transfer learning for performance modeling of configurable systems: An exploratory analysis"}, {"link": "/document/4027147", "title": "A systematic review of software development cost estimation studies"}, {"link": "", "title": "Adam: A method for stochastic optimization"}, {"link": "", "title": "Introduction to combinatorial testing"}, {"link": "", "title": "Multilayer feedforward networks with a nonpolynomial activation function can approximate any function"}, {"link": "", "title": "Why deep neural network for function approximation?"}, {"link": "", "title": "Rectified linear units improve restricted boltzmann machines"}, {"link": "", "title": "Using bad learners to find good configurations"}, {"link": "", "title": "Faster discovery of faster system configurations with spectral learning"}, {"link": "", "title": "Feature selection, 11 vs. 12 regularization, and rotational invariance"}, {"link": "", "title": "Feature interaction: The security threat from within software systems"}, {"link": "", "title": "Scikit-learn: Machine learning in python"}, {"link": "", "title": "Wh and when can deep-but not shallow-networks avoid the curse of dimensionality: A review"}, {"link": "/document/7372023", "title": "Cost-efficient sampling for performance prediction of configurable systems"}, {"link": "/document/6693104", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "/document/7190087", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "/document/6030057", "title": "Scalable prediction of non-functional properties in software product lines"}, {"link": "", "title": "Practical bayesian optimization of machine learning algorithms"}, {"link": "", "title": "Dropout: A simple way to prevent neural networks from overfitting"}, {"link": "", "title": "Neural Networks: A Model of Boolean Functions"}, {"link": "", "title": "Formal semantics and verification for feature modeling"}, {"link": "", "title": "Practical performance models for complex, popular applications"}, {"link": "", "title": "Regression shrinkage and selection via the lasso"}, {"link": "", "title": "Solutions of Ill-Posed Problems"}, {"link": "", "title": "Phone recognition with deep sparse rectifier neural networks"}, {"link": "", "title": "Verifying feature models using OWL"}, {"link": "", "title": "Error bounds for approximations with deep relu networks"}, {"link": "", "title": "Quality prediction and assessment for product lines"}, {"link": "", "title": "Performance prediction of configurable software systems by fourier learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811988"}
{"ref": [{"link": "", "title": "Reusing constraint proofs in program analysis"}, {"link": "", "title": "Finding bugs in dynamic web applications"}, {"link": "", "title": "Billions and billions of constraints: Whitebox fuzz testing in production"}, {"link": "", "title": "Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Symbolic execution for software testing in practice: Preliminary assessment"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "/document/5954425", "title": "Optimizing constraint solving to better support symbolic execution"}, {"link": "", "title": "Sage: Whitebox fuzzing for security testing"}, {"link": "", "title": "Enhancing reuse of constraint solutions to improve symbolic execution"}, {"link": "", "title": "Symbolic execution of complex program driven by machine learning based constraint solving"}, {"link": "", "title": "A comparative study of incremental constraint solving approaches in symbolic execution"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "", "title": "Model checking Itl properties over ansi-c programs with bounded traces"}, {"link": "", "title": "Multi-solver support in symbolic execution"}, {"link": "", "title": "Combining unit-level symbolic execution and system-level concrete execution for testing nasa software"}, {"link": "", "title": "Scalable symbolic execution of distributed systems"}, {"link": "", "title": "Green: Reducing, reusing and recycling constraints in program analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985682"}
{"ref": [{"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Maintaining mental models: A study of developer work habits"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? on the relation between source code and comment changes"}, {"link": "/document/48797", "title": "How do we read algorithms? a case study"}, {"link": "", "title": "A study of the documentation essential to software maintenance"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/7332514", "title": "Using stereotypes in the automatic generation of natural language summaries for c++ methods"}, {"link": "", "title": "Automat-ically detecting and describing high level actions within methods"}, {"link": "/document/5970165", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "/document/7888409", "title": "Crowdsummarizer: Automated generation of code summaries for java programs through crowdsourcing"}, {"link": "", "title": "Improving automatic source code summarization via deep reinforcement learning"}, {"link": "/document/7965408", "title": "Automatic software summarization: the state of the art"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "itrace: Enabling eye tracking on software artifacts within the ide to support software engineering tasks"}, {"link": "", "title": "itrace: Eye tracking infrastructure for development environments"}, {"link": "", "title": "A systematic literature review on the usage of eye-tracking in software engineering"}, {"link": "", "title": "Eye movements in software traceability link recovery"}, {"link": "/document/7467288", "title": "Eye-tracking metrics in software engineering"}, {"link": "", "title": "A survey on the usage of eye-tracking in computer programming"}, {"link": "/document/7985695", "title": "Do developers read compiler error messages?"}, {"link": "", "title": "An eye-tracking methodology for characterizing program comprehension processes"}, {"link": "", "title": "Temporal eye-tracking data: Evolution of debugging strategies with multiple representations"}, {"link": "/document/7181454", "title": "Eye movements in code reading: Relaxing the linear order"}, {"link": "/document/7321188", "title": "An empirical study on the patterns of eye movement during summarization tasks"}, {"link": "", "title": "How programmers read regular code: a controlled experiment using eye tracking"}, {"link": "", "title": "Mining biometric data to predict programmer expertise and task difficulty"}, {"link": "", "title": "Analyzing individual performance of source code review using reviewers' eye movement"}, {"link": "", "title": "An eye-tracking study on the role of scan time in finding source code defects"}, {"link": "", "title": "Eye movements in code review"}, {"link": "/document/7118751", "title": "An eye-tracking study of java programmers and application to source code summarization"}, {"link": "", "title": "Tracing software developers' eyes and interactions for change tasks"}, {"link": "", "title": "Eye gaze and interaction contexts for change tasks - observations and potential"}, {"link": "/document/7332451", "title": "Developing a model of loop actions by mining loop characteristics from a large code corpus"}, {"link": "/document/7884622", "title": "Automatically generating natural language descriptions for object-related statement sequences"}, {"link": "/document/4021317", "title": "Reverse engineering method stereotypes"}, {"link": "/document/5609703", "title": "Automatic identification of class stereotypes"}, {"link": "/document/8094431", "title": "The evaluation of an approach for automatic generated documentation"}, {"link": "", "title": "An empirical study of the textual similarity between source code and source code summaries"}, {"link": "", "title": "Eye movements in reading and information processing: 20 years of research"}, {"link": "", "title": "Real-time and offline filters for eye tracking"}, {"link": "/document/6065176", "title": "Lightweight transformation and fact extraction with the srcml toolkit"}, {"link": "", "title": "Cognitive perspectives on the role of naming in computer programs"}, {"link": "", "title": "Nonparametric statistics for the behavioral sciences, ser"}, {"link": "", "title": "The kendall rank correlation coefficient"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812039"}
{"ref": [{"link": "", "title": "Going beyond the sandbox: An overview of the new security architecture in the java development kit 1.2"}, {"link": "", "title": "Java virtual machine"}, {"link": "", "title": "Garbage collection: algorithms for automatic dynamic memory management"}, {"link": "", "title": "The Java Native Interface: Programmer's Guide and Specification"}, {"link": "", "title": "Use at your own risk: The java unsafe api in the wild"}, {"link": "", "title": "Java bytecode verification: algorithms and formalizations"}, {"link": "", "title": "Asm bytecode analysis framework"}, {"link": "", "title": "A crash in netty 4.0.18"}, {"link": "", "title": "The Java memory model. ACM"}, {"link": "", "title": "Personal communication"}, {"link": "", "title": "Safety not guaranteed: sun. misc. unsafe and the quest for safe alternatives"}, {"link": "", "title": "Softbound: Highly compatible and complete spatial memory safety for c"}, {"link": "", "title": "Efficient detection of all pointer and array access errors"}, {"link": "", "title": "Ccured: Type-safe retrofitting of legacy software"}, {"link": "", "title": "Bounds-checking entire programs without recompiling"}, {"link": "", "title": "Valgrind: A framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "Address-sanitizer: A fast address sanity checker"}, {"link": "", "title": "Safe java native interface"}, {"link": "", "title": "An empirical security study of the native code in the jdk"}, {"link": "", "title": "Cheri jni: Sinking the java security model into the c"}, {"link": "", "title": "Garbage collection for monitoring parametric properties"}, {"link": "/document/4639318", "title": "Efficient monitoring of parametric context-free patterns"}, {"link": "", "title": "jPredictor: a predictive runtime analysis tool for Java"}, {"link": "", "title": "Maximal causal models for sequentially consistent systems"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Stateless model checking concurrent programs with maximal causality reduction"}, {"link": "", "title": "Maximal causality reduction for tso and pso"}, {"link": "", "title": "Speeding Up Maximal Causality Reduction with Static Dependency Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811920"}
{"ref": [{"link": "", "title": "How to analyze APK and understand it"}, {"link": "", "title": "Crawl and download apps from Google Play"}, {"link": "", "title": "Mean Absolute Error and Mean Squared Error"}, {"link": "", "title": "4 steps to develop your app idea"}, {"link": "", "title": "Android Adapter"}, {"link": "", "title": "Android documentation: Activity"}, {"link": "", "title": "Android Fragment"}, {"link": "", "title": "Android naming conventions"}, {"link": "", "title": "Android Packer Tehchniques"}, {"link": "", "title": "Bankdroid"}, {"link": "", "title": "Competitor analysis before launching a mobile app startup"}, {"link": "", "title": "Csipsimple"}, {"link": "", "title": "D3.js"}, {"link": "", "title": "Dex to Java decompiler"}, {"link": "", "title": "F-droid Market"}, {"link": "", "title": "Getting better at design is easy, just copy people!"}, {"link": "", "title": "Google Monkey for Testing"}, {"link": "", "title": "How Much Does an App Cost"}, {"link": "", "title": "Java Inner Class"}, {"link": "", "title": "Kiwix"}, {"link": "", "title": "Mann-Whitney U test"}, {"link": "", "title": "Mobile app development process"}, {"link": "", "title": "Mobile Internet use passes desktop for the first time"}, {"link": "", "title": "Number of apps available in leading app stores as of 1st quarter"}, {"link": "", "title": "Overview of StoryDroid"}, {"link": "", "title": "Printlisten"}, {"link": "", "title": "Reverse engineering of Android applications"}, {"link": "", "title": "Soot: A Java optimization framework"}, {"link": "", "title": "A tool for reverse engineering Android apk files"}, {"link": "", "title": "Tools to work with Android. dex and Java. class files"}, {"link": "", "title": "Twitter"}, {"link": "", "title": "Uninvited Redesigns"}, {"link": "", "title": "Vespucci"}, {"link": "", "title": "App quality: Secrets for agile app teams"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of Android apps"}, {"link": "", "title": "Guifetch: Supporting app design and development through GUI search"}, {"link": "", "title": "pix2code: Generating code from a graphical user interface screenshot"}, {"link": "", "title": "Falling asleep with Angry Birds, Facebook and Kindle: a large scale study on mobile application usage"}, {"link": "", "title": "From UI design image to GUI skeleton: A neural machine translator to bootstrap mobile GUI implementation"}, {"link": "/document/8672718", "title": "Automated cross-platform GUI code generation for mobile apps"}, {"link": "", "title": "AUSERA: Large-scale automated security risk assessment of global mobile banking apps"}, {"link": "", "title": "Are mobile banking apps secure? What can be improved?"}, {"link": "", "title": "Automated poisoning attacks and defenses in malware detection systems: An adversarial machine learning approach"}, {"link": "/document/8672691", "title": "How can we craft large-scale Android malware? An automated poisoning attack"}, {"link": "", "title": "Stormdroid: A streaminglized machine learning-based system for detecting Android malware"}, {"link": "", "title": "Towards adversarial detection of mobile malware: poster"}, {"link": "/document/5970159", "title": "Can better identifier splitting techniques help feature location?"}, {"link": "", "title": "Understanding Android obfuscation techniques: A large-scale investigation in the wild"}, {"link": "", "title": "Efficiently manifesting asynchronous programming errors in Android apps"}, {"link": "", "title": "Large-scale analysis of framework-specific exceptions in Android apps"}, {"link": "", "title": "Poster: Accuracy vs. time cost: Detecting Android malware through pareto ensemble pruning"}, {"link": "", "title": "The art of Walt Disney: From Mickey mouse to the magic kingdoms"}, {"link": "", "title": "Mobile app development: The effect of smartphones, mobile applications and geolocation services on the tourist experience"}, {"link": "", "title": "Automated competitor analysis using big data analytics: Evidence from the fitness mobile app business"}, {"link": "/document/7194581", "title": "Iccta: Detectingz inter-component privacy leaks in Android apps"}, {"link": "", "title": "I know what leaked in your pocket: Uncovering privacy leaks on Android apps with static taint analysis"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for Android applications"}, {"link": "", "title": "Machine learning-based prototyping of graphical user interfaces for mobile apps"}, {"link": "", "title": "Automated reporting of GUI design violations for mobile apps"}, {"link": "", "title": "Reverse engineering mobile application user interfaces with remaui (t)"}, {"link": "/document/7194563", "title": "Composite constant propagation: Application to Android inter-component communication analysis"}, {"link": "", "title": "Effective inter-component communication mapping in Android with epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "Seeking the user interface"}, {"link": "/document/962562", "title": "Prior-itizing test cases for regression testing"}, {"link": "", "title": "Fsmdroid: guided GUI testing of Android apps"}, {"link": "", "title": "Guided, stochastic model-based GUI testing of Android apps"}, {"link": "/document/8804455", "title": "A large-scale empirical study on industrial fake apps"}, {"link": "", "title": "Statistical principles in experimental design"}, {"link": "", "title": "Simple fast algorithms for the editing distance between trees and related problems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812043"}
{"ref": [{"link": "", "title": "Do the dependency conflicts in my project matter?"}, {"link": "", "title": "Maven repository"}, {"link": "/document/5070532", "title": "Improving api documentation usability with knowledge pushing"}, {"link": "", "title": "Are code examples on an online q&a forum reliable?: a study of api misuse on stack overflow"}, {"link": "", "title": "Automatic detection and update suggestion for outdated api names in documentation"}, {"link": "", "title": "A systematic evaluation of static api-misuse detectors"}, {"link": "", "title": "Detecting missing method calls as violations of the majority rule"}, {"link": "/document/7181435", "title": "Searching the state space: a qualitative study of api protocol usability"}, {"link": "", "title": "Why eve and mallory love android: An analysis of android ssl (in) security"}, {"link": "", "title": "An empirical study of cryptographic misuse in android applications"}, {"link": "", "title": "The most dangerous code in the world: validating ssl certificates in non-browser software"}, {"link": "", "title": "Pr-miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "Mining patterns and violations using concept analysis"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "Static specification inference using predicate mining"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Mining api error-handling specifications from source code"}, {"link": "/document/5070548", "title": "Mining exception-handling rules as sequence association rules"}, {"link": "/document/5431765", "title": "Alattin: Mining alternative patterns for detecting neglected conditions"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Introduction to software testing"}, {"link": "/document/7372034", "title": "Mutation-based fault localization for real-world multilingual programs (t)"}, {"link": "/document/7899041", "title": "Towards security-aware mutation testing"}, {"link": "/document/4344128", "title": "Mutation analysis for security tests qualification"}, {"link": "", "title": "Improving test suites for efficient fault localization"}, {"link": "", "title": "Pit"}, {"link": "", "title": "Crashlocator: locating crashing faults based on crash stacks"}, {"link": "", "title": "Could I Have a Stack Trace to Examine the Dependency Conflict Issue?"}, {"link": "/document/7899043", "title": "Applying mutation analysis on kernel test suites: an experience report"}, {"link": "", "title": "An investigation into the use of mutation analysis for automated program repair"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "/document/7546508", "title": "You get where you're looking for: The impact of information sources on code security"}, {"link": "", "title": "Apache lang"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Enabling mutation testing for android apps"}, {"link": "", "title": "Mdroid+: a mutation testing framework for android"}, {"link": "", "title": "\u03bcdroid: an energy-aware mutation testing framework for android"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Apache category"}, {"link": "", "title": "Github topics"}, {"link": "", "title": "Apache fop"}, {"link": "", "title": "Swingx"}, {"link": "", "title": "Jfreechart"}, {"link": "", "title": "itextpdf"}, {"link": "", "title": "Apache math"}, {"link": "", "title": "Apache text"}, {"link": "", "title": "Apache bcel"}, {"link": "", "title": "Fortress core"}, {"link": "", "title": "Santuario-java"}, {"link": "", "title": "Pdfbox"}, {"link": "", "title": "Wildfly"}, {"link": "", "title": "Apache jackrabbit"}, {"link": "", "title": "H2database"}, {"link": "", "title": "Curator"}, {"link": "", "title": "Messagedigest"}, {"link": "", "title": "Matcher group api"}, {"link": "", "title": "Predictive mutation testing"}, {"link": "", "title": "Faster mutation analysis via equivalence modulo states"}, {"link": "", "title": "Inferring crypto api rules from code changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812114"}
{"ref": [{"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Automatic checking of conformance to requirement boilerplates via text chunking: An industrial case study"}, {"link": "/document/7320403", "title": "Change impact analysis for natural language requirements: An NLP approach"}, {"link": "", "title": "Ontology-based multiperspective requirements traceability framework"}, {"link": "", "title": "Software traceability with topic modeling"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Practical recommendations for gradient-based training of deep architectures"}, {"link": "/document/279181", "title": "Learning long-term dependencies with gradient descent is difficult"}, {"link": "", "title": "Program understanding and the concept assignment problem"}, {"link": "", "title": "The relationship between recall and precision"}, {"link": "", "title": "On the properties of neural machine translation: Encoder-decoder approaches"}, {"link": "", "title": "Empirical evaluation of gated recurrent neural networks on sequence modeling"}, {"link": "", "title": "Software traceability: trends and future directions"}, {"link": "", "title": "Towards more intelligent trace retrieval algorithms"}, {"link": "", "title": "Achieving lightweight trustworthy traceability"}, {"link": "/document/1357816", "title": "Enhancing an artefact management system with traceability recovery features"}, {"link": "/document/4384177", "title": "Technique integration for requirements assessment"}, {"link": "/document/6693117", "title": "Learning effective query transformations for enhanced requirements trace retrieval"}, {"link": "", "title": "Integrating information retrieval, execution and link analysis analysis algorithms to improve feature location in software"}, {"link": "", "title": "Why does unsupervised pre-training help deep learning?"}, {"link": "", "title": "DO-178B: Software Considerations in Airborne Systems and Equipment Certification"}, {"link": "", "title": "Guidance for the Content of Premarket Submissions for Software Contained in Medical Devices, 2005"}, {"link": "", "title": "Towards mining replacement queries for hard-to-retrieve traces"}, {"link": "", "title": "Traceability fundamentals. In Software and Systems Traceability"}, {"link": "", "title": "An analysis of the requirements traceability problem"}, {"link": "", "title": "Ontology"}, {"link": "", "title": "Foundations for an expert system in domain-specific traceability"}, {"link": "", "title": "Towards an intelligent domain-specific traceability solution"}, {"link": "", "title": "Cold-start software analytics"}, {"link": "", "title": "Sentence-to-code traceability recovery with domain ontologies"}, {"link": "", "title": "Neural Networks: A Comprehensive Foundation"}, {"link": "", "title": "Long short-term memory"}, {"link": "/document/1583599", "title": "Advancing candidate link generation for requirements tracing: The study of methods"}, {"link": "", "title": "A neural network for factoid question answering over paragraphs"}, {"link": "", "title": "Introduction To Expert Systems (3 ed.)"}, {"link": "", "title": "Visualizing and understanding recurrent networks"}, {"link": "/document/1007998", "title": "Safety critical systems: challenges and directions"}, {"link": "", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports (n)"}, {"link": "", "title": "Backpropagation applied to handwritten zip code recognition"}, {"link": "", "title": "Improving distributional similarity with lessons learned from word embeddings"}, {"link": "", "title": "Ontology-based trace retrieval"}, {"link": "", "title": "Improving trace accuracy through data-driven configuration and composition of tracing features"}, {"link": "", "title": "Recovering traceability links in software artifact management systems using information retrieval methods"}, {"link": "/document/6504885", "title": "Strategic traceability for safety-critical projects"}, {"link": "", "title": "A semantic relatedness approach for traceability link recovery"}, {"link": "", "title": "Detecting, classifying, and tracing nonfunctional software requirements"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "/document/6345842", "title": "Enhancing candidate link generation for requirements tracing: The cluster hypothesis revisited"}, {"link": "", "title": "How to construct deep recurrent neural networks"}, {"link": "", "title": "Glove: Global vectors for word representation"}, {"link": "", "title": "A high-throughput screening approach to discovering good forms of biologically inspired visual representation"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Traceability gap analysis for assessing the conformance of software traceability to relevant guidelines"}, {"link": "", "title": "Reasoning about entailment with neural attention"}, {"link": "", "title": "Learning representations by back-propagating errors"}, {"link": "", "title": "Learning complex, extended sequences using the principle of history compression"}, {"link": "/document/650093", "title": "Bidirectional recurrent neural networks"}, {"link": "", "title": "A comparative evaluation of two user feedback techniques for requirements trace retrieval"}, {"link": "/document/6104044", "title": "Ontology matching: State of the art and future challenges"}, {"link": "", "title": "Parsing natural scenes and natural language with recursive neural networks"}, {"link": "", "title": "Rule-based generation of requirements traceability relations"}, {"link": "", "title": "Application of swarm techniques to requirements tracing"}, {"link": "", "title": "Improved semantic representations from tree-structured long short-term memory networks"}, {"link": "", "title": "Lecture 6.5-rmsprop: Divide the gradient by a running average of its recent magnitude"}, {"link": "", "title": "Federal Railroad Administration. PTC System Information"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "Improving automated requirements trace retrieval: a study of term-based enhancement methods"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985645"}
{"ref": [{"link": "", "title": "Cyber-physical systems: A new frontier"}, {"link": "", "title": "Design considerations for modeling modes in cyber-physical systems"}, {"link": "", "title": "Towards ensuring security by designing in cyber-physical systems engineering processes"}, {"link": "", "title": "Ariane 5 flight 501 failure: report by the inquiry board, Paris"}, {"link": "", "title": "Longer video of \u2018ariane 5\u2019 rocket first launch failure/explosion"}, {"link": "", "title": "16,000 fiat 500e electric cars recalled for software issue"}, {"link": "", "title": "Toyota settles acceleration lawsuit after $3-million verdict"}, {"link": "", "title": "Software bug contributed to blackout"}, {"link": "", "title": "Tracking the blackout bug"}, {"link": "", "title": "Therac-25"}, {"link": "", "title": "Feedback control of dynamic systems"}, {"link": "", "title": "Modern control theory"}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: a survey"}, {"link": "/document/7112189", "title": "Automated oracle data selection support"}, {"link": "/document/6019060", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "Augmenting automatically generated unit-test suits with regression oracle checking"}, {"link": "/document/6100085", "title": "Mining test oracles of web search engines"}, {"link": "/document/5406529", "title": "Semi-proving: an integrated method for program proving, testing, and debugging"}, {"link": "", "title": "On testing non-testable programs"}, {"link": "", "title": "Introduction to the theory of testing"}, {"link": "/document/8101259", "title": "Model-driven development of safety architectures"}, {"link": "", "title": "The astree analyzer"}, {"link": "", "title": "Using dynamic analysis to generate disjunctive invariants"}, {"link": "/document/6227149", "title": "Using dynamic analysis to discover polynomial and array invariants"}, {"link": "", "title": "DySy: dynamic symbolic execution for invariant inference"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Monitor based oracles for cyber-physical system testing"}, {"link": "", "title": "Dodona: automated oracle data set selection"}, {"link": "/document/6569746", "title": "CrowdOracle: can the crowd solve the oracle problem?"}, {"link": "/document/7190143", "title": "Automatic detection of performance deviations in the load testing of large scale systems"}, {"link": "/document/6569747", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Reducing qualitative human oracle costs associated with automatically generated test data"}, {"link": "", "title": "Model predictive control"}, {"link": "", "title": "Model predictive control in aerospace systems: Current state and opportunities"}, {"link": "", "title": "Model predictive control for cooperative control of space robots"}, {"link": "/document/7866631", "title": "A tracking error control approach for model predictive position control of a quadrotor with time varying reference"}, {"link": "", "title": "Model predictive control algorithm for large-area regional hyperthermia"}, {"link": "", "title": "Love thy neighbor: V-formation as a problem of model predictive control"}, {"link": "/document/7172007", "title": "A model predictive control design for selective modal damping in power systems"}, {"link": "/document/7012053", "title": "Model predictive control for spacecraft rendezvous and docking: strategies for handling constraints and case studies"}, {"link": "", "title": "Principles of System Identification: Theory and Practice"}, {"link": "", "title": "System Identification: Theory for the User"}, {"link": "", "title": "e-handbook of statistical methods (chapter 7.1.6)"}, {"link": "", "title": "Outlier"}, {"link": "", "title": "ARDUPILOT"}, {"link": "", "title": "3dr site scan"}, {"link": "", "title": "Aeromao"}, {"link": "/document/7372070", "title": "FLYAQ: enabling non-expert users to specify and generate missions of autonomous multicopters"}, {"link": "", "title": "Applied nonlinear control. Pearson"}, {"link": "", "title": "Unity - game engine"}, {"link": "", "title": "Ardupilot github repository"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "/document/4539531", "title": "A crosstab-based statistical method for effective fault localization"}, {"link": "", "title": "Bp neural network-based effective fault localization"}, {"link": "", "title": "Box plot"}, {"link": "", "title": "Quartile"}, {"link": "/document/6122035", "title": "On fault representativeness of software fault injection"}, {"link": "", "title": "p-value"}, {"link": "", "title": "Statistical Power Analysis for the Behavioral Sciences"}, {"link": "", "title": "Effect size"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}, {"link": "", "title": "Ardupilot discuss forum"}, {"link": "", "title": "Ardupilot discuss forum"}, {"link": "/document/6698900", "title": "An empirical comparison of the fault-detection capabilities of internal oracles"}, {"link": "", "title": "Oracles for checking temporal properties of concurrent systems"}, {"link": "", "title": "On the correctness of electronic documents: Studying, finding, and localizing inconsistency bugs in pdf readers and files"}, {"link": "/document/8048536", "title": "Clarifications on the construction and use of the manybugs benchmark"}, {"link": "", "title": "Software traceability: trends and future directions"}, {"link": "/document/8115686", "title": "Parallel bug-finding in concurrent programs via reduced interleaving instances"}, {"link": "", "title": "Code coverage and test suit effectiveness: Empirical study with real bugs in large systems"}, {"link": "/document/6227185", "title": "leveraging test generation and specification mining for automated bug detection without false positives"}, {"link": "", "title": "Un-derminer: a framework for automatically identifying non-converging behaviors in black box system models"}, {"link": "/document/7318273", "title": "A framework for mining hybrid automata from input/output traces"}, {"link": "", "title": "Detecting attacks against robotic vehicles: A control invariant approach"}, {"link": "", "title": "Software model synthesis using satisfiability solvers"}, {"link": "", "title": "Auto-mated inference of models for black box systems based on interface descriptions"}, {"link": "/document/667877", "title": "Using test oracles generated from program documentation"}, {"link": "", "title": "Mining object behavior with adabu"}, {"link": "", "title": "Evosuite: Automatic test suite generation for object-oriented software"}, {"link": "", "title": "Supporting oracle construction via static analysis"}, {"link": "/document/7790828", "title": "Model-free fault detection and isolation in large-scale cyber-physical systems"}, {"link": "", "title": "Metamorphic slice: an application in spectrum-based fault localization"}, {"link": "", "title": "Testing a software-based pid controller using metamorphic testing"}, {"link": "", "title": "Metamorphic testing: a new approach for generating next test cases"}, {"link": "", "title": "Hybrid dynamical systems: modeling, stability, and robustness"}, {"link": "", "title": "Temporal precedence checking for switched models and its application to a parallel landing protocol"}, {"link": "", "title": "Verification and Control of Hybrid Systems: A Symbolic Approach"}, {"link": "", "title": "Hybrid modeling and experimental cooperative control of multiple unmanned aerial vehicles"}, {"link": "", "title": "Qualitative modeling of hybrid systems"}, {"link": "", "title": "The ASTOOT approach to testing object-oriented programs"}, {"link": "", "title": "Z notation - a reference manual"}, {"link": "/document/58215", "title": "A specifier's introduction to formal methods"}, {"link": "", "title": "Eiffel: a language and environment for software engineering"}, {"link": "", "title": "Software fault tolerance"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}, {"link": "", "title": "Crashing simulated planes is cheap: Can simulation detect robotics bug early?"}, {"link": "", "title": "Automated test suite generation for time-continuous simulink models"}, {"link": "/document/6083936", "title": "Automated test case generation for an autopilot requirement prototype"}, {"link": "", "title": "Simulink fault localization: an iterative statistical debugging approach"}, {"link": "/document/8443736", "title": "Parameter optimization in control software using statistical fault localization techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811955"}
{"ref": [{"link": "", "title": "Make a program for maintaining computer programs"}, {"link": "", "title": "Ninja, a small build system with a focus on speed"}, {"link": "", "title": "Mastering CMake: a cross-platform build system"}, {"link": "", "title": "Autotools: A Practitioner's Guide to GNU Autoconf, Automake, and Libtool"}, {"link": "", "title": "Scons design and implementation"}, {"link": "", "title": "The Art of Unix programming"}, {"link": "", "title": "The vesta approach to precise configuration of large software systems"}, {"link": "", "title": "Build systems \u00e0 la carte"}, {"link": "/document/5463341", "title": "The evolution of ant build systems"}, {"link": "", "title": "A qualitative analysis of software build system changes and build ownership styles"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "", "title": "Software in the doe: The hidden overhead of \u201cthe build\u201d"}, {"link": "", "title": "Bsd make meta mode"}, {"link": "", "title": "Recursive make considered harmful"}, {"link": "", "title": "Bazel - a fast, scalable, multi-language and extensible build system"}, {"link": "", "title": "Buck: A fast build tool"}, {"link": "", "title": "Automated migration of build scripts using dynamic analysis and search-based refactoring"}, {"link": "", "title": "Formalizing and verifying a modern build language"}, {"link": "", "title": "Depslint"}, {"link": "/document/4362624", "title": "Design recovery and maintenance of build systems"}, {"link": "", "title": "The evolution of the linux build system"}, {"link": "", "title": "Fault localization for build code errors in makefiles"}, {"link": "", "title": "Apache maven"}, {"link": "", "title": "Gradle in action. Manning"}, {"link": "", "title": "Why googl stores billions of lines of code in a single repository"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812082"}
{"ref": [{"link": "", "title": "Abbreviations in wikipedia"}, {"link": "", "title": "Gnu aspell"}, {"link": "", "title": "Hunspell"}, {"link": "", "title": "Stack overflow data dump"}, {"link": "", "title": "Tag synonyms in stack overflow"}, {"link": "", "title": "Wikipedia data dump"}, {"link": "", "title": "Wordnet lemmatization"}, {"link": "/document/7181436", "title": "Synonym suggestion for tags on stack overflow"}, {"link": "", "title": "Grouping android tag synonyms on stack overflow"}, {"link": "", "title": "Compositional morphology for word representations and language modelling"}, {"link": "/document/7476655", "title": "Mining analogical libraries in q&a discussions-incorporating relational and categorical knowledge into word embedding"}, {"link": "", "title": "Mining technology landscape from stack overflow"}, {"link": "", "title": "Similartech: automatically recommend analogical libraries across different programming languages"}, {"link": "", "title": "Towards correlating search on google and asking on stack overflow"}, {"link": "", "title": "Techland: Assisting technology landscape inquiries with insights from stack overflow"}, {"link": "/document/6405277", "title": "Linsen: An efficient approach to split identifiers and expand abbreviations"}, {"link": "", "title": "Unsupervised morpheme segmentation and morphology induction from text corpora using morfessor 1.1"}, {"link": "", "title": "A technique for computer detection and correction of spelling errors"}, {"link": "", "title": "Can better identifier splitting techniques help feature location?"}, {"link": "/document/5069482", "title": "Mining source code to automatically split identifiers for software analysis"}, {"link": "/document/310667", "title": "Inconsistency handling in multiperspective specifications"}, {"link": "/document/5463340", "title": "Identifying security bug reports via text mining: An industrial case study"}, {"link": "", "title": "Tris: A fast and accurate identifiers splitting and expansion algorithm"}, {"link": "", "title": "Learning a dual-language vector space for domain-specific cross-lingual question retrieval"}, {"link": "", "title": "Combined one sense disambiguation of abbreviations"}, {"link": "", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "", "title": "Principal component analysis"}, {"link": "", "title": "Expanding identifiers to normalize source code vocabulary"}, {"link": "/document/5645479", "title": "Normalizing source code vocabulary"}, {"link": "/document/4362915", "title": "Extracting meaning from abbreviated identifiers"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "", "title": "Mining concepts from code with probabilistic topic models"}, {"link": "", "title": "Biothesaurus: a web-based thesaurus of protein and gene names"}, {"link": "", "title": "Better word representations with recursive neural networks for morphology"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Wordnet: a lexical database for english"}, {"link": "", "title": "Gathering refactoring data: a comparison of four methods"}, {"link": "", "title": "An empirical analysis of word error rate and keyword error rate"}, {"link": "", "title": "Discovering information explaining api types using text classification"}, {"link": "", "title": "Natural language-based software analyses and tools for software maintenance"}, {"link": "", "title": "Seahawk: Stack overflow in the ide"}, {"link": "", "title": "Deriving a large scale taxonomy from wikipedia"}, {"link": "", "title": "Knowledge derived from wikipedia for computing semantic relatedness"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "", "title": "Using natural language program analysis to locate and understand action-oriented concerns"}, {"link": "", "title": "Towards supporting on-demand virtual remodularization using program graphs"}, {"link": "", "title": "Unsupervised morphology induction using word embeddings"}, {"link": "/document/4556124", "title": "Identifying word relations in software: A comparative study of semantic similarity tools"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Automated construction of a software-specific word similarity database"}, {"link": "", "title": "Sewordsim: Software-specific word similarity database"}, {"link": "", "title": "Augmenting api documentation with insights from stack overflow"}, {"link": "/document/6405332", "title": "Inferring semantically related software terms and their taxonomy by leveraging collaborative tagging"}, {"link": "", "title": "Predicting semantically linkable knowledge in developer online forums via convolutional neural network"}, {"link": "", "title": "Swordnet: Inferring semantically related words from software context"}, {"link": "/document/7476633", "title": "Software-specific named entity recognition in software engineering social content"}, {"link": "/document/7476633", "title": "Learning to extract api mentions from informal natural language discussions"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Learning to rank for question-oriented software text retrieval (t)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985684"}
{"ref": [{"link": "/document/6080788", "title": "An exploratory study of feature location process: Distinct phases, recurring patterns, and elementary actions"}, {"link": "/document/6671289", "title": "What help do developers seek, when and how?"}, {"link": "", "title": "Measuring program comprehension: A large-scale field study with professionals"}, {"link": "", "title": "Inference of development activities from interaction with uninstrumented applications"}, {"link": "/document/7372081", "title": "Activityspace: a remembrance framework to support interapplication information needs"}, {"link": "/document/1553555", "title": "Eliciting design requirements for maintenance-oriented ides: a detailed study of corrective and perfective maintenance tasks"}, {"link": "", "title": "Automatic identification and classification of software development video tutorial fragments"}, {"link": "", "title": "Vt-revolution: Interactive programming video tutorial authoring and watching system"}, {"link": "", "title": "A study of the organizational dynamics of software teams"}, {"link": "", "title": "What do developers search for on the web?"}, {"link": "", "title": "Extracting and analyzing time-series hci data from screen-captured task videos"}, {"link": "/document/5674060", "title": "How programmers debug, revisited: An information foraging theory perspective"}, {"link": "/document/1541811", "title": "Managing software change tasks: An exploratory study"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "/document/6070387", "title": "Modeling programmer navigation: A head-to-head empirical evaluation of predictive models"}, {"link": "", "title": "Developers' code context models for change tasks"}, {"link": "", "title": "Design requirements for more flexible structured editors from a study of programmers' text editing"}, {"link": "/document/5071410", "title": "Distributed side-by-side programming"}, {"link": "", "title": "Automatically identifying targets users interact with during real world tasks"}, {"link": "", "title": "Associating the visual representation of user interfaces with their internal structures and metadata"}, {"link": "", "title": "Codetube: extracting relevant fragments from software development video tutorials"}, {"link": "", "title": "Optical character recognition"}, {"link": "", "title": "Two-stream convolutional networks for action recognition in videos"}, {"link": "/document/7298878", "title": "Long-term recurrent convolutional networks for visual recognition and description"}, {"link": "/document/6165309", "title": "3d convolutional neural networks for human action recognition"}, {"link": "", "title": "Waken: reverse engineering usage information and interface structure from software videos"}, {"link": "", "title": "Making software tutorial video responsive"}, {"link": "/document/7299155", "title": "Understanding deep image representations by inverting them"}, {"link": "", "title": "Note-video: facilitating navigation of blackboard-style lecture videos"}, {"link": "", "title": "Codemotion: expanding the design space of learner interactions with computer programming tutorial videos"}, {"link": "", "title": "Pause-and-play: automatically linking screencast video tutorials with applications"}, {"link": "", "title": ""}, {"link": "", "title": "Inception-v4, inception-resnet and the impact of residual connections on learning"}, {"link": "/document/7780459", "title": "Deep residual learning for image recognition"}, {"link": "/document/7780677", "title": "Rethinking the inception architecture for computer vision"}, {"link": "", "title": "Siamese neural networks for one-shot image recognition"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "itrace: Enabling eye tracking on software artifacts within the ide to support software engineering tasks"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "Extracting usability information from user interface events"}, {"link": "", "title": "Tracking real-time user experience (true): a comprehensive instrumentation solution for complex systems"}, {"link": "", "title": "Data-driven interaction techniques for improving navigation of educational videos"}, {"link": "", "title": "Too long; didn't watch!: extracting relevant fragments from software development video tutorials"}, {"link": "/document/7965352", "title": "Text retrieval-based tagging of software engineering video tutorials"}, {"link": "", "title": "Extracting code from programming tutorial videos"}, {"link": "", "title": "A deep learning approach to identifying source code in images and video"}, {"link": "", "title": "Feature location using crowd-based screencasts"}, {"link": "/document/223161", "title": "Recognizing human action in time-sequential images using hidden markov model"}, {"link": "", "title": "Modeling temporal structure of decomposable motion segments for activity classification"}, {"link": "/document/7410867", "title": "Learning spatiotemporal features with 3d convolutional networks"}, {"link": "/document/6977505", "title": "Unsupervised surveillance video retrieval based on human action and appearance"}, {"link": "/document/6575133", "title": "Efficient search and localization of human actions in video databases"}, {"link": "", "title": "Automatic video surveillance system and method"}, {"link": "", "title": "Using 3d convolutional neural network in surveillance videos for recognizing human actions"}, {"link": "", "title": "Comparison of classifiers for prediction of human actions in a smart home"}, {"link": "", "title": "Design and simulation of a smart home managed by an intelligent self-adaptive system"}, {"link": "", "title": "Predicting semantically linkable knowledge in developer online forums via convolutional neural network"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Mining performance regression inducing code changes in evolving software"}, {"link": "", "title": "Learning to answer programming questions with software documentation through social context embedding"}, {"link": "", "title": "Predicting components for issue reports using deep learning with information retrieval"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "From ui design image to gui skeleton: a neural machine translator to bootstrap mobile gui implementation"}, {"link": "", "title": "Automated reporting of gui design violations for mobile apps"}, {"link": "", "title": "Detecting and summarizing gui changes in evolving mobile apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811922"}
{"ref": [{"link": "", "title": "Systematic mistake analysis of digital computer programs"}, {"link": "", "title": "Guidelines for coverage-based comparisons of non-adequate test suites"}, {"link": "", "title": "Does automated white-box test generation really help software testers?"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "A large-scale evaluation of automated unit test generation using evosuite"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "/document/7314957", "title": "To be optimal or not in test-case prioritization"}, {"link": "", "title": "A unified test case prioritization approach"}, {"link": "", "title": "Efficient predicated bug signature mining via hierarchical instrumentation"}, {"link": "", "title": "Low-overhead and fully automated statistical debugging with abstraction refinement"}, {"link": "", "title": "Mining dataflow sensitive specifications"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "", "title": "llvm-cov"}, {"link": "", "title": "Clang"}, {"link": "", "title": "Test-case reduction for c compiler bugs"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Finding and analyzing compiler warning defects"}, {"link": "", "title": "Gcc"}, {"link": "", "title": "Gcov"}, {"link": "", "title": "Testwell ctc++"}, {"link": "", "title": "Covtool"}, {"link": "", "title": "Jcov"}, {"link": "", "title": "Jacoco"}, {"link": "", "title": "Emma: a free java code coverage tool"}, {"link": "", "title": "Atlassian clover"}, {"link": "", "title": "Codecover"}, {"link": "", "title": "Openclover"}, {"link": "", "title": "Introduction to software testing."}, {"link": "", "title": "The art of software testing."}, {"link": "/document/1183927", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "Regression mutation testing"}, {"link": "", "title": "Directed test generation for effective fault localization"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "/document/630875", "title": "A study of effective regression testing in practice"}, {"link": "", "title": "Augmented dynamic symbolic execution"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Skeletal program enumeration for rigorous compiler testing"}, {"link": "", "title": "Fairfuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "", "title": "Automated path generation for software fault localization"}, {"link": "", "title": "Fault localization prioritization: Comparing information-theoretic and coverage-based approaches"}, {"link": "/document/5070508", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "", "title": "To-wards optimization-safe systems: Analyzing the impact of undefined behavior"}, {"link": "", "title": "Volatiles are miscompiled, and what to do about it"}, {"link": "", "title": "Ccg: A random c code generator"}, {"link": "", "title": "Association analysis: basic concepts and algorithms"}, {"link": "", "title": "Randomized stress-testing of link-time optimizers"}, {"link": "", "title": "Differential testing for software"}, {"link": "/document/4222623", "title": "Randomized differential testing as a prelude to formal verification"}, {"link": "", "title": "Coverage-directed differential testing of jvm implementations"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Metamorphic testing: A review of challenges and opportunities"}, {"link": "/document/7422146", "title": "A survey on metamorphic testing"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812045"}
{"ref": [{"link": "", "title": "On the \u201cnaturalness\u201d of buggy code"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Python probabilistic type inference with natural language support"}, {"link": "/document/7194632", "title": "Graph-based statistical language model for code"}, {"link": "/document/4639335", "title": "How program history can improve code completion"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Intelligent code completion with bayesian networks"}, {"link": "/document/7203048", "title": "Cacheca: A cache language model based code suggestion tool"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Evaluating the evaluations of code recommender systems: A reality check"}, {"link": "", "title": "Towards standardized evaluation of developer-assistance tools"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "", "title": "When Code Completion Fails: a Case Study on Real-World Completions - Data and Material"}, {"link": "", "title": "Experiences Gamifying Developer Adoption of Practices and Tools"}, {"link": "/document/7503714", "title": "Taming the IDE with Fine-grained Interaction Data"}, {"link": "/document/7884626", "title": "Enriching In-IDE Process Information with Fine-grained Source Code History"}, {"link": "", "title": "Enriched event streams: A general dataset for empirical studies on in-ide activities of software developers"}, {"link": "", "title": "A dataset of simplified syntax trees for C#"}, {"link": "", "title": "Phog: probabilistic model for code"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Generalization of back-propagation to recurrent neural networks"}, {"link": "", "title": "Measuring neural efficiency of program comprehension"}, {"link": "", "title": "Neural machine translation of rare words with subword units"}, {"link": "", "title": "Addressing the rare word problem in neural machine translation"}, {"link": "", "title": "Achieving open vocabulary neural machine translation with hybrid word-character models"}, {"link": "", "title": "The hidden cost of code completion: Understanding the impact of the recommendation-list length on its efficiency"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812116"}
{"ref": [{"link": "/document/6681333", "title": "An empirical study of api usability"}, {"link": "", "title": "User preferences of software documentation genres"}, {"link": "", "title": "What help do developers seek, when and how?"}, {"link": "", "title": "How do api changes trigger stack overflow discussions? a study on the android sdk"}, {"link": "", "title": "How api documentation fails"}, {"link": "", "title": "An observational study on api usage constraints and their documentation"}, {"link": "", "title": "How to design a good api and why it matters"}, {"link": "", "title": "How do api documentation and static typing affect api usability?"}, {"link": "", "title": "What should developers be aware of? an empirical study on the directives of api documentation"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "/document/7371991", "title": "Development emails content analyzer: Intention mining in developer discussions"}, {"link": "", "title": "DECA: development emails content analyzer"}, {"link": "", "title": "Satisfiability modulo theories"}, {"link": "", "title": "Validity threats in empirical software engineering research-an initial survey"}, {"link": "", "title": "The relevance of software documentation, tools and technologies: a survey"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "An empirical study on evolution of api documentation"}, {"link": "", "title": "Creating and evolving developer documentation: understanding the decisions of open source contributors"}, {"link": "", "title": "Linguistic antipatterns: what they are and how developers perceive them"}, {"link": "", "title": "Detecting api documentation errors"}, {"link": "", "title": "/* icomment: Bugs or bad comments? */"}, {"link": "", "title": "acomment: mining annotations from comments and code to detect interrupt related concurrency bugs"}, {"link": "", "title": "@tcomment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "/document/6613836", "title": "Quality analysis of source code comments"}, {"link": "", "title": "Automatic early defects detection in use case documents"}, {"link": "/document/6311409", "title": "Automated api property inference techniques"}, {"link": "", "title": "Inferring resource specifications from natural language api documentation"}, {"link": "/document/6227137", "title": "Inferring method specifications from natural language api descriptions"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/6878435", "title": "Using traceability links to recommend adaptive changes for documentation evolution"}, {"link": "", "title": "Recommending reference api documentation"}, {"link": "", "title": "Discovering information explaining api types using text classification"}, {"link": "/document/6240510", "title": "Mining source code descriptions from developer communications"}, {"link": "", "title": "Codes: Mining source code descriptions from developers discussions"}, {"link": "/document/6613842", "title": "Extracting problematic api features from forum discussions"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "/document/7965256", "title": "Surf: Summarizer of user reviews feedback"}, {"link": "/document/7884612", "title": "Analyzing reviews and code of mobile apps for better release planning"}, {"link": "", "title": "How can i improve my app? classifying user reviews for software maintenance and evolution"}, {"link": "", "title": "Ardoc: App reviews development oriented classifier"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985647"}
{"ref": [{"link": "", "title": "Virtual machines - versatile platforms for systems and processes"}, {"link": "", "title": "The Java virtual machine specification - Java SE 9 edition"}, {"link": "", "title": "Design of the Java HotSpot client compiler for Java 6"}, {"link": "", "title": "JDK 9.0.4 general-availability release"}, {"link": "", "title": "Ibm developer kits"}, {"link": "", "title": "Zing: a better JVM"}, {"link": "", "title": "Zulu: 100% OpenJDK"}, {"link": "/document/5387060", "title": "The jalape\u00f1o virtual machine"}, {"link": "/document/5386722", "title": "The Jikes research virtual machine project: building an open-source research community"}, {"link": "", "title": "Coverage-directed differential testing of JVM implementations"}, {"link": "", "title": "Low level security in Java"}, {"link": "", "title": "A type system for the Java bytecode language and verifier"}, {"link": "", "title": "American fuzzy lop"}, {"link": "", "title": "Soot - a Java bytecode optimization framework"}, {"link": "", "title": "Inter-procedural data-flow analysis with IFDS/IDE and Soot"}, {"link": "", "title": "Soot: A framework for analyzing and transforming java and android applications"}, {"link": "", "title": "An efficient meta-lock for implementing ubiquitous synchronization"}, {"link": "", "title": "Dependence-based program analysis"}, {"link": "", "title": "A survey on data-flow testing"}, {"link": "", "title": "Compiling Markov chain Monte Carlo algorithms for probabilistic modeling"}, {"link": "", "title": "An introduction to MCMC for machine learning"}, {"link": "", "title": "Stochastic superoptimization"}, {"link": "", "title": "Guided differential testing of certificate validation in SSL/TLS implementations"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Enabling mutation testing for android apps"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}, {"link": "", "title": "Tck project planning and development guide"}, {"link": "", "title": "SPECjvm2008 performance characterization"}, {"link": "", "title": "SPECjbb2013 design document"}, {"link": "", "title": "SciMark 2.0 benchmark"}, {"link": "", "title": "A family of real-time java benchmarks"}, {"link": "", "title": "Stanford SecuriBench"}, {"link": "", "title": "Using production grammars in software testing"}, {"link": "/document/1319081", "title": "Random program generator for Java JIT compiler test system"}, {"link": "/document/6570641", "title": "Combinatorial validation testing of Java Card byte code verifiers"}, {"link": "", "title": "Automated conformance testing of Java virtual machines"}, {"link": "/document/6825642", "title": "Combinatorial interaction testing of a Java Card static verifier"}, {"link": "", "title": "Java* fuzzer for android*"}, {"link": "", "title": "Application of domain-aware binary fuzzing to aid Android virtual machine testing"}, {"link": "", "title": "Fuzzing with code fragments"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "/document/7958599", "title": "Skyfire: data-driven seed generation for fuzzing"}, {"link": "", "title": "Afl-based fuzzing for Java with Kelinci"}, {"link": "", "title": "ASM: A code manipulation tool to implement adaptable systems"}, {"link": "", "title": "Guided, stochastic model-based GUI testing of Android apps"}, {"link": "", "title": "FSMdroid: Guided GUI Testing of Android Apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811957"}
{"ref": [{"link": "", "title": "An exploratory study of the evolution of communicated information about the execution of large software systems"}, {"link": "", "title": "Be Conservative: Enhancing Failure Diagnosis with Proactive Logging"}, {"link": "", "title": "Advances and Challenges in Log Analysis"}, {"link": "/document/5306331", "title": "Automated Performance Analysis of Load Tests"}, {"link": "", "title": "Summary of Sarbanes-Oxley Act of 2002"}, {"link": "", "title": "The Bones of the System: A Case Study of Logging and Telemetry at Microsoft"}, {"link": "", "title": "HBASE-750: NPE caused by StoreFileScanner.updateReaders"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation"}, {"link": "", "title": "Where Do Developers Log? An Empirical Study on Logging Practices in Industry"}, {"link": "", "title": "Industry Practices and Event Logging: Assessment of a Critical Software Development Process"}, {"link": "", "title": "Log2: A Cost-aware Logging Mechanism for Performance Diagnosis"}, {"link": "", "title": "Logging Library Migrations: A Case Study for the Apache Software Foundation Projects"}, {"link": "", "title": "Understanding Log Lines Using Development Knowledge"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "The AspectJ Project"}, {"link": "", "title": "Characterizing logging practices in Java-based open source software projects \u2014 a replication study in ApacheSoftware Foundation"}, {"link": "/document/6227202", "title": "Characterizing Logging Practices in Open-source Software"}, {"link": "", "title": "Learning to Log: Helping Developers Make Informed Logging Decisions"}, {"link": "", "title": "Improving Software Diagnosability via Log Enhancement"}, {"link": "", "title": "AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "", "title": "Software performance antipatterns"}, {"link": "", "title": "The dataset for our study on characterizing and detecting anti-patterns in the logging code"}, {"link": "", "title": "Constructing grounded theory: a practical guide through qualitative analysis"}, {"link": "", "title": "Open Source Software Peer Review Practices: A Case Study of the Apache Server"}, {"link": "", "title": "Dumps of the ASF Subversion repository"}, {"link": "", "title": "MapReduce as a general framework to support research in Mining Software Repositories (MSR)"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "", "title": "Studying the relationship between logging characteristics and the code quality of platform software"}, {"link": "", "title": "JDT Java Development Tools"}, {"link": "", "title": "Data Mining: Concepts and Techniques"}, {"link": "/document/7476654", "title": "Examining the Stability of Logging Statements"}, {"link": "", "title": "Nagios Log Server \u2014 Monitor and Manage Your Log Data"}, {"link": "", "title": "LOG4J a logging library for Java"}, {"link": "", "title": "Apache JCL Best Practices"}, {"link": "", "title": "Refactoring Test Code"}, {"link": "", "title": "YARN-5506: Inconsistent logging content and logging level for distributed shell"}, {"link": "", "title": "SourcererCC: Scaling Code Clone Detection to Big-code"}, {"link": "/document/6963448", "title": "Mining Version Histories for Detecting Code Smells"}, {"link": "/document/5196681", "title": "DECOR: A Method for the Specification and Detection of Code and Design Smells"}, {"link": "/document/5328703", "title": "An Exploratory Study of the Impact of Code Smells on Software Change-proneness"}, {"link": "", "title": "When and Why Your Code Starts to Smell Bad"}, {"link": "/document/4752842", "title": "Identification of Move Method Refactoring Opportunities"}, {"link": "", "title": "Detecting bad smells in source code using change history information"}, {"link": "/document/6684534", "title": "Methodbook: Recommending Move Method Refactorings via Relational Topic Models"}, {"link": "", "title": "Are test smells really harmful? An empirical study"}, {"link": "/document/4359471", "title": "On The Detection of Test Smells: A Metrics-Based Approach for General Fixture and Eager Test"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985651"}
{"ref": [{"link": "", "title": "RESTful Web Services Cookbook."}, {"link": "", "title": "Amazon. AWS."}, {"link": "", "title": "APIFuzzer."}, {"link": "", "title": "AppSpider."}, {"link": "", "title": "Embedded Contract Languages"}, {"link": "", "title": "Synthesizing Program Input Grammars"}, {"link": "", "title": "BooFuzz."}, {"link": "", "title": "Burp Suite."}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "/document/536462", "title": "The Combinatorial Design Approach to Automatic Test Generation"}, {"link": "", "title": "Architectural Styles and the Design of Network-based Software Architectures."}, {"link": "", "title": "Flask. Web development, one drop at a time."}, {"link": "", "title": "GitLab. GitLab."}, {"link": "", "title": "GitLab. GitLab API."}, {"link": "", "title": "GitLab. Hardware requirements."}, {"link": "", "title": "GitLab. Sample Bugl."}, {"link": "", "title": "GitLab. Sample Bug2"}, {"link": "", "title": "GitLab. Sample Bug3"}, {"link": "", "title": "GitLab. Sample Bug4"}, {"link": "", "title": "GitLab. Statistics."}, {"link": "", "title": "Grammar-based Whitebox Fuzzing"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Automated Whitebox Fuzz Testing"}, {"link": "/document/8115618", "title": "Learn&Fuzz: Machine Learning for Input Fuzzing"}, {"link": "", "title": "Mining Input Grammars from Dynamic Taints"}, {"link": "", "title": "Controllable Combinatorial Coverage in Grammar-Based Testing"}, {"link": "", "title": "Directed Test Generation using Symbolic Grammars"}, {"link": "", "title": "Eiffel."}, {"link": "", "title": "Microsoft. Azure."}, {"link": "", "title": "Microsoft. Office."}, {"link": "", "title": "Building Microservices."}, {"link": "/document/4222570", "title": "Feedback-Directed Random Test Generation"}, {"link": "", "title": "Peach Fuzzer."}, {"link": "", "title": "Qualys Web Application Scanning (WAS)."}, {"link": "", "title": "Ruby on Rails. Rails."}, {"link": "", "title": "Neuzz: Efficient fuzzing with neural program learning"}, {"link": "", "title": "SPIKE Fuzzer."}, {"link": "", "title": "Sulley."}, {"link": "", "title": "Fuzzing: Brute Force Vulnerability Discovery."}, {"link": "", "title": "Swagger."}, {"link": "", "title": "TnT-Fuzzer."}, {"link": "", "title": "A Taxonomy of Model-Based Testing Approaches"}, {"link": "", "title": "Testing Finite-State Machines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811961"}
{"ref": [{"link": "", "title": "Weighted Finite-State Transducers in Speech Recognition"}, {"link": "", "title": "Weighted finite-state transducer algorithms. an overview"}, {"link": "", "title": "Advanced Support Vector Machines and Kernel Methods"}, {"link": "", "title": "Text categorization with support vector machines: Learning with many relevant features"}, {"link": "", "title": "Abstfinder, a prototype natural language text abstraction finder for use in requirements elicitation"}, {"link": "/document/1556555", "title": "Shallow Knowledge as an Aid to Deep Understanding in Early Phase Requirements Engineering"}, {"link": "", "title": "The computation of collocations and their relevance in lexical studies"}, {"link": "/document/5636629", "title": "On the effectiveness of abstraction identification in requirements engineering"}, {"link": "", "title": "Comparing corpora using frequency profiling"}, {"link": "", "title": "Semi-automatic software feature-relevant information extraction from natural language user manuals"}, {"link": "/document/7765521", "title": "Mining requirements knowledge from collections of domain documents"}, {"link": "", "title": "On the Perception of Software Quality Requirements during the Project Lifecycle"}, {"link": "/document/4685664", "title": "Extracting and Modeling Product Line Functional Requirements"}, {"link": "", "title": "Detecting, Classifying, and Tracing Non-functional Software Requirements"}, {"link": "", "title": "Automatic Requirement Categorization of Large Natural Language Specifications at Mercedes-benz for Review Improvements"}, {"link": "", "title": "Towards Automated Requirements Prioritization and Triage"}, {"link": "", "title": "What Works Better? A Study of Classifying Requirements"}, {"link": "", "title": "Requirements analysis tool: A tool for automatically analyzing software requirements documents"}, {"link": "", "title": "Automated classification of non-functional requirements"}, {"link": "/document/1704047", "title": "The Detection and Classification of Non-Functional Requirements with Application to Early Aspects"}, {"link": "/document/6912267", "title": "Automated Extraction and Visualization of Quality Concerns from Requirements Specifications"}, {"link": "", "title": "Identification of nonfunctional requirements in textual specifications: A semi-supervised learning approach"}, {"link": "/document/6345811", "title": "Detecting and Classifying Patterns of Requirements Clarifications"}, {"link": "/document/8049171", "title": "Automatically classifying functional and non-functional requirements using supervised machine learning"}, {"link": "", "title": "Using Classification Techniques for Informal Requirements in the Requirements Analysis-supporting System"}, {"link": "/document/6611715", "title": "Automated Extraction of Non-functional Requirements in Available Documentation"}, {"link": "", "title": "Na\u00efve Bayes for Text Classification with Unbalanced Classes"}, {"link": "", "title": "Accurate Unlexicalized Parsing"}, {"link": "", "title": "Probabilistic Topic Models"}, {"link": "", "title": "A Biterm Topic Model for Short Texts"}, {"link": "", "title": "Naive (Bayes)at Forty: The Independence Assumption in Information Retrieval"}, {"link": "", "title": "Finite-state Transducers in Language and Speech Processing"}, {"link": "", "title": "A machine learning framework for spoken-dialog classification"}, {"link": "", "title": "Word-sequence Kernels"}, {"link": "", "title": "Gauging similarity with n-grams: Language-independent categorization of text"}, {"link": "", "title": "Mismatch string kernels for discriminative protein classification"}, {"link": "", "title": "Kernel methods for predicting protein-protein interactions"}, {"link": "", "title": "Text Classification Using String Kernels"}, {"link": "", "title": "Rational Kernels"}, {"link": "", "title": "Lexical Association Measures and Collocation Extraction"}, {"link": "", "title": "Mathematical structures of language"}, {"link": "/document/6205756", "title": "A Context-Based Word Indexing Model for Document Summarization"}, {"link": "", "title": "Speech and language processing. Pearson London:"}, {"link": "", "title": "Automatic Evaluation of Summaries Using N-gram Co-occurrence Statistics"}, {"link": "/document/1165125", "title": "Estimation of probabilities from sparse data for the language model component of a speech recognizer"}, {"link": "/document/87000", "title": "The zero-frequency problem: Estimating the probabilities of novel events in adaptive text compression"}, {"link": "/document/479394", "title": "Improved Backing-off for M-gram Language Modeling"}, {"link": "", "title": "On structuring probabilistic dependences in stochastic language modelling"}, {"link": "/document/6636700", "title": "Automated Text Mining for Requirements Analysis of Policy Documents"}, {"link": "", "title": "Feature Model Extraction from Large Collections of Informal Product Descriptions"}, {"link": "/document/6051627", "title": "Semi-automatic Identification of Features in Requirement Specifications"}, {"link": "/document/6912257", "title": "How do users like this feature? a fine grained sentiment analysis of app reviews"}, {"link": "/document/8048887", "title": "Safe: A simple approach for feature extraction from app descriptions and app reviews"}, {"link": "", "title": "RT Essentials"}, {"link": "", "title": "Understanding Interobserver Agreement: The Kappa Statistic"}, {"link": "", "title": "The Measurement of Observer Agreement for Categorical Data"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "", "title": "Text mining with information extraction"}, {"link": "/document/682181", "title": "Learning String-edit Distance"}, {"link": "/document/8054866", "title": "Evaluation of tools for hairy requirements and software engineering tasks"}, {"link": "", "title": "Evaluation of evaluation in information retrieval"}, {"link": "/document/8049173", "title": "PURE: A Dataset of Public Requirements Documents"}, {"link": "", "title": "tm: Text Mining Package"}, {"link": "", "title": "Text Mining Infrastructure in R"}, {"link": "", "title": "An Algorithm for Suffix Stripping"}, {"link": "", "title": "Introduction to Algorithms"}, {"link": "", "title": "An Efficient Algorithm for the N-Best-Strings Problem"}, {"link": "", "title": "Improving identification of difficult small classes by balancing class distribution"}, {"link": "", "title": "LIBSVM: A Library for Support Vector Machines"}, {"link": "", "title": "Probability plotting methods for the analysis for the analysis of data"}, {"link": "/document/8048890", "title": "Using Argumentation to Explain Ambiguity in Requirements Elicitation Interviews"}, {"link": "", "title": "Un-derstanding data augmentation for classification: When to warp?"}, {"link": "", "title": "Evaluation metrics for language models"}, {"link": "", "title": "Minimizing Word Error Rate in Textual Summaries of Spoken Language"}, {"link": "/document/8491175", "title": "Dynamic visual analytics for elicitation meetings with elica"}, {"link": "/document/8501304", "title": "Elica: An automated tool for dynamic extraction of requirements relevant information"}, {"link": "", "title": "Managing multitasking in software development tasks using visual analytics and machine learning"}, {"link": "", "title": "Task Interruptions in Requirements Engineering: Reality Versus Perceptions!"}, {"link": "", "title": "Task Interruption in Software Development Projects: What Makes Some Interruptions More Disruptive Than Others?"}, {"link": "", "title": "Two sides of the same coin: Software developers' perceptions of task switching and task interruption"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812084"}
{"ref": [{"link": "", "title": "Benchmark.js"}, {"link": "", "title": "Chrome performance dashboard"}, {"link": "", "title": "D3: a JavaScript library for visualizing data with HTML, SVG, and CSS"}, {"link": "", "title": "d3-collection: Handy data structures for elements keyed by string"}, {"link": "", "title": "d3-hierarchy: 2d layout algorithms for visualizing hierarchical data"}, {"link": "", "title": "express.js: Fast, unopinionated, minimalist web framework for node"}, {"link": "", "title": "immutable.js: Immutable persistent data collections for Javascript"}, {"link": "", "title": "Math.js: An extensive math library for JavaScript and Node.js"}, {"link": "", "title": "Node.js"}, {"link": "", "title": "Heapviz: Interactive heap visualization for program understanding and debugging"}, {"link": "", "title": "WISE: Automated test generation for worst-case complexity"}, {"link": "", "title": "Generating performance distributions via probabilistic symbolic execution"}, {"link": "", "title": "Digging for data structures"}, {"link": "", "title": "Performance problems you can fix: A dynamic analysis of memoization opportunities"}, {"link": "", "title": "Graphvizopen source graph drawing tools"}, {"link": "", "title": "Is it a tree, a DAG, or a cyclic graph? A shape analysis for heap-directed pointers in C"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Amitabha Sanyal, and Amey Karkare. Heap reference analysis using access graphs"}, {"link": "", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "Static detection of asymptotic performance bugs in collection traversals"}, {"link": "", "title": "Dynamic data structure analysis for Java programs"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "Recursive data structure profiling"}, {"link": "", "title": "Parametric shape analysis via 3-valued logic"}, {"link": "", "title": "Jalangi: A selective record-replay and dynamic analysis framework for JavaScript"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "Control-Flow Analysis of Higher-Order Languages"}, {"link": "/document/7081839", "title": "MG++: Memory graphs for analyzing dynamic data structures"}, {"link": "", "title": "The Algorithm Design Manual"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "", "title": "Thomas Rupprecht, and Gerald L\u00fcttgen. DSI: An evidence-based approach to identify dynamic data structures in C programs"}, {"link": "", "title": "Efficient program execution indexing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985686"}
{"ref": [{"link": "", "title": "A few billion lines of code later: Using static analysis to find bugs in the real world"}, {"link": "", "title": "Practical memory leak detector based on parameterized procedural summaries"}, {"link": "", "title": "Context- and path-sensitive memory leak detection"}, {"link": "", "title": "Extended static checking for java"}, {"link": "", "title": "Saturn: A sat-based tool for bug detection"}, {"link": "", "title": "Archer: Using symbolic, path-sensitive analysis to detect memory access errors"}, {"link": "", "title": "Estimating the support of a high-dimensional distribution"}, {"link": "", "title": "On the \u201cnaturalness\u201d of buggy code"}, {"link": "", "title": "Learning minimal abstractions"}, {"link": "", "title": "Learning a strategy for adapting a program analysis via bayesian optimisation"}, {"link": "", "title": "Scikit-learn"}, {"link": "", "title": "Testing static analysis tools using exploitable buffer overflows from open source code"}, {"link": "", "title": "Bugbench: Benchmarks for evaluating bug detection tools"}, {"link": "", "title": "Common vulnerabilities and exposures"}, {"link": "", "title": "A training algorithm for optimal margin classifiers"}, {"link": "", "title": "Machine learning"}, {"link": "", "title": "A user-guided approach to program analysis"}, {"link": "", "title": "An experimental evaluation of deliberate unsoundness in a static program analyzer"}, {"link": "", "title": "Abstractions from tests"}, {"link": "", "title": "Finding optimum abstractions in parametric dataflow analysis"}, {"link": "", "title": "Selective context-sensitivity guided by impact pre-analysis"}, {"link": "", "title": "Taming false alarms from a domain-unaware c analyzer by a bayesian statistical post analysis"}, {"link": "", "title": "Z-ranking: Using statistical analysis to counter the impact of static analysis approximations"}, {"link": "", "title": "Correlation exploitation in error ranking"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985690"}
{"ref": [{"link": "", "title": "mMutant"}, {"link": "", "title": "A survey of statistical model checking"}, {"link": "", "title": "Obfuscated gradients give a false sense of security: Circumventing defenses to adversarial examples"}, {"link": "", "title": "Sequential Analysis"}, {"link": "", "title": "Measuring neural net robustness with constraints"}, {"link": "", "title": "End to end learning for self-driving cars"}, {"link": "", "title": "Decision-based adversarial attacks: Reliable attacks against black-box machine learning models"}, {"link": "", "title": "Towards evaluating the robustness of neural networks"}, {"link": "", "title": "Audio adversarial examples: Targeted attacks on speech-to-text"}, {"link": "", "title": "The relationship between precision-recall and roc curves"}, {"link": "", "title": "Detecting adversarial samples from artifacts"}, {"link": "", "title": "Attacking binarized neural networks"}, {"link": "", "title": "Ai 2: Safety and robustness certification of neural networks with abstract interpretation"}, {"link": "", "title": "Explaining and harnessing adversarial examples"}, {"link": "", "title": "Countering adversarial images using input transformations"}, {"link": "", "title": "Deep residual learning for image recognition"}, {"link": "", "title": "A baseline for detecting misclassified and out-of-distribution examples in neural networks"}, {"link": "", "title": "Safety verification of deep neural networks"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Reluplex: An efficient smt solver for verifying deep neural networks"}, {"link": "", "title": "Towards proving the adversarial robustness of deep neural networks"}, {"link": "", "title": "Adversarial machine learning at scale"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "", "title": "Enhancing the reliability of out-of-distribution image detection in neural networks"}, {"link": "", "title": "Deepgauge: Comprehensive and multi-granularity testing criteria for gauging the robustness of deep learning systems"}, {"link": "", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "", "title": "Houle, Grant Schoenebeck, Dawn Song, and James Bailey. Characterizing adversarial subspaces using local intrinsic dimensionality"}, {"link": "", "title": "Towards deep learning models resistant to adversarial attacks"}, {"link": "", "title": "On detecting adversarial perturbations"}, {"link": "", "title": "Proceedings of 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), number EPFL-CONF-218057"}, {"link": "", "title": "Cleverhans v2.0. 0: An adversarial machine learning library"}, {"link": "", "title": "Practical black-box attacks against machine learning"}, {"link": "", "title": "The limitations of deep learning in adversarial settings"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "", "title": "Understanding adversarial training: Increasing local stability of neural nets through robust optimization"}, {"link": "", "title": "Accessorize to a crime: Real and stealthy attacks on state-of-the-art face recognition"}, {"link": "", "title": "Certifying some distributional robustness with principled adversarial training"}, {"link": "", "title": "Pixeldefend: Leveraging generative models to understand and defend against adversarial examples"}, {"link": "", "title": "Attacking convolutional neural network using differential evolution"}, {"link": "", "title": "Testing deep neural networks"}, {"link": "", "title": "Concolic testing for deep neural networks"}, {"link": "", "title": "Proceedings of the IEEE conference on computer vision and pattern recognition"}, {"link": "", "title": "Intriguing properties of neural networks"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Ensemble adversarial training: Attacks and defenses"}, {"link": "", "title": "Detecting adversarial samples for deep neural networks through mutation testing"}, {"link": "", "title": "Towards fast computation of certified robustness for relu networks"}, {"link": "", "title": "Evaluating the robustness of neural networks: An extreme value theory approach"}, {"link": "", "title": "Feature-guided black-box safety testing of deep neural networks"}, {"link": "", "title": "Spatially transformed adversarial examples"}, {"link": "", "title": "Mitigating adversarial effects through randomization"}, {"link": "", "title": "Achieving human parity in conversational speech recognition"}, {"link": "", "title": "Robustness and generalization"}, {"link": "", "title": "Feature squeezing: Detecting adversarial examples in deep neural networks"}, {"link": "", "title": "Towards robust training of neural networks by regularizing adversarial gradients"}, {"link": "", "title": "Droid-sec: deep learning in android malware detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812047"}
{"ref": [{"link": "", "title": "Mining API Patterns As Partial Orders from Source Code: From Usage Scenarios to Specifications"}, {"link": "/document/7070485", "title": "M3: A General Model for Code Analytics in Rascal"}, {"link": "/document/6227140", "title": "Synthesizing API Usage Examples"}, {"link": "", "title": "Context-Aware Collaborative Filtering System: Predicting the User's Preference in the Ubiquitous Computing Environment"}, {"link": "/document/6233418", "title": "Context-Based Recommendation to Support Problem Solving in Software Development"}, {"link": "", "title": "Software Heritage: Why and How to Preserve Software Source Code"}, {"link": "", "title": "Linked Open Data to Support Content-based Recommender Systems"}, {"link": "", "title": "Confidence limits for a cross-product ratio"}, {"link": "", "title": "PAM: Probabilistic API Miner"}, {"link": "", "title": "Parameter-free Probabilistic API Mining Across GitHub"}, {"link": "", "title": "Deep Code Search"}, {"link": "", "title": "Deep API Learning"}, {"link": "", "title": "A simple sequentially rejective Bonferroni test procedure"}, {"link": "", "title": "Using Structural Context to Recommend Source Code Examples"}, {"link": "", "title": "The Distribution of the Flora in the Alpine Zone"}, {"link": "", "title": "A Study of Cross-validation and Bootstrap for Accuracy Estimation and Model Selection"}, {"link": "/document/7675466", "title": "How Can I Use This Method?"}, {"link": "/document/6405249", "title": "What Makes a Good Code Example?: A Study of Programming Q&A in StackOverflow"}, {"link": "", "title": "Statistical Learning Approach for Mining API Usage Mappings for Code Migration"}, {"link": "/document/8498236", "title": "CrossSim: Exploiting Mutual Relationships to Detect Similar OSS Projects"}, {"link": "", "title": "Knowledge-aware Recommender System for Software Development"}, {"link": "", "title": "crossminer/focus: Icse19-artifact-evaluation"}, {"link": "", "title": "API Usage Pattern Recommendation for Software Development"}, {"link": "", "title": "Information Distribution Aspects of Design Methodology"}, {"link": "/document/6498455", "title": "Leveraging Crowd Knowledge for Software Comprehension and Development"}, {"link": "", "title": "Mining StackOverflow to Turn the IDE into a Self-confident Programming Prompter"}, {"link": "/document/7985653", "title": "Supporting Software Developers with a Holistic Recommender System"}, {"link": "", "title": "SWIM: Synthesizing What I Mean: Code Search and Idiomatic Snippet Synthesis"}, {"link": "/document/6747170", "title": "Towards a Context-Aware IDE-Based Meta Search Engine for Recommendation about Programming Errors and Exceptions"}, {"link": "", "title": "Code Completion with Statistical Language Models"}, {"link": "/document/6606629", "title": "Discovering Essential Code Elements in Informal Documentation"}, {"link": "/document/5287006", "title": "What Makes APIs Hard to Learn? Answers from Developers"}, {"link": "/document/6311409", "title": "Automated API Property Inference Techniques"}, {"link": "", "title": "Mining Multilevel API Usage Patterns"}, {"link": "/document/7181434", "title": "Could We Infer Unordered API Usage Patterns Only Using the Library Source Code?"}, {"link": "", "title": "Item-based Collaborative Filtering Recommendation Algorithms"}, {"link": "", "title": "Collaborative filtering recommender systems"}, {"link": "", "title": "A Spontaneous Code Recommendation Tool Based on Associative Search"}, {"link": "/document/6671294", "title": "Automatic discovery of function mappings between similar libraries"}, {"link": "/document/4639336", "title": "SpotWeb: Detecting Framework Hotspots and Coldspots via Mining Open Source Code on the Web"}, {"link": "", "title": "Augmenting API Documentation with Insights from Stack Overflow"}, {"link": "/document/7140676", "title": "How API Documentation Fails"}, {"link": "/document/6624045", "title": "Mining Succinct and High-coverage API Usage Patterns from Source Code"}, {"link": "", "title": "Performance Evaluation of Classification Algorithms by K-fold and Leave-one-out Cross Validation"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812051"}
{"ref": [{"link": "", "title": "Peripheral developer participation in open source projects: an empirical analysis"}, {"link": "/document/8169979", "title": "Are one-time contributors different? a comparison to core and periphery developers in FLOSS repositories"}, {"link": "", "title": "Almost there: A study on quasi-contributors in open-source software projects"}, {"link": "", "title": "Lessons from volunteering and free/libre open source software development for the future of work"}, {"link": "", "title": "Sustainability of open source software communities beyond a fork: How and why has the Libreoffice project evolved?"}, {"link": "", "title": "Impact of developer turnover on quality in open-source software"}, {"link": "", "title": "Using software archaeology to measure knowledge loss in software projects due to developer turnover"}, {"link": "/document/6880395", "title": "Who will stay in the FLOSS community? Modeling participants initial behavior"}, {"link": "/document/7957078", "title": "Developer turnover in global, industrial open source projects: insights from applying survival analysis"}, {"link": "", "title": "Retention and quality in open source software projects"}, {"link": "", "title": "A systematic literature review on the barriers faced by newcomers to open source software projects"}, {"link": "/document/7985661", "title": "Understanding the impressions, motivations, and barriers of one time code contributors to FLOSS projects: a survey"}, {"link": "/document/8094410", "title": "How long and how much: What to expect from Summer of Code participants?"}, {"link": "/document/6149241", "title": "Who will remain? an evaluation of actual person-job and person-team fit to predict developer retention in FLOSS projects"}, {"link": "", "title": "Older adults and free/open source software: A diary study of first-time contributors"}, {"link": "", "title": "On the relationship between newcomer motivations and contribution barriers in open source projects"}, {"link": "", "title": "Open source barriers to entry, revisited: A sociotechnical perspective"}, {"link": "", "title": "Attracting, onboarding, and retaining newcomer developers in open source software projects"}, {"link": "", "title": "Let me in: Guidelines for the successful onboarding of newcomers to open source projects"}, {"link": "", "title": "Motivation, governance, and the viability of hybrid forms in open source software development"}, {"link": "", "title": "Understanding sustained participation in open source software projects"}, {"link": "", "title": "Open source software and the private-collective innovation model: Issues for organization science"}, {"link": "", "title": "Considerations of community: The context and process of volunteerism"}, {"link": "", "title": "Volunteerism: Social issues perspectives and social policy implications"}, {"link": "", "title": "The three-stage model of volunteers' duration of service"}, {"link": "", "title": "Episodic volunteering and retention: An integrated theoretical approach"}, {"link": "", "title": "Uncovering the periphery: A qualitative survey of episodic volunteering in free/libre and open source software communities"}, {"link": "", "title": "Societal changes and the rise of the episodic volunteer"}, {"link": "", "title": "Episodic volunteers: Reality for the future"}, {"link": "", "title": "A dictionary of nonprofit terms and concepts"}, {"link": "", "title": "Collective and reflexive styles of volunteering: A sociological modernization perspective"}, {"link": "", "title": "Management implications of contemporary trends in volunteerism in the United States and Canada"}, {"link": "", "title": "A systematic review of episodic volunteering in public health and print contexts"}, {"link": "", "title": "Evolution patterns of open-source software systems and communities"}, {"link": "", "title": "Effective work practices for software engineering: free/libre open source software development"}, {"link": "", "title": "The core and the periphery in distributed and self-organizing innovation systems"}, {"link": "", "title": "How peripheral developers contribute to open-source software development"}, {"link": "", "title": "The periphery on stage: The intra-organizational dynamics in online communities of creation"}, {"link": "", "title": "Teams are changing: Are research and practice evolving fast enough?"}, {"link": "", "title": "A comparative study of challenges in integrating open source software and inner source software"}, {"link": "", "title": "Inner source definition, benefits, and challenges"}, {"link": "", "title": "What makes a good contributor? Understanding contributor behavior within large free/open source software projects-a socialization perspective"}, {"link": "/document/4222598", "title": "Role migration and advancement processes in OSSD projects: A comparative case study"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "", "title": "The FLOSS2013 free/libre/open source survey"}, {"link": "", "title": "Cave or community? An empirical examination of 100 mature open source projects"}, {"link": "", "title": "One of a kind? Comparing episodic and regular volunteers at the Philadelphia Ronald McDonald House"}, {"link": "", "title": "The theory of planned behavior"}, {"link": "", "title": "Carrots and rainbows: motivation and social practice in open source software development"}, {"link": "", "title": "Open source software development-just anprint case of collective invention?"}, {"link": "", "title": "Summer on the island: Episodic volunteering"}, {"link": "", "title": "Investigating the geography of open source software through GitHub"}, {"link": "", "title": "Relationships between open source software companies and communities: Observations from Nordic firms"}, {"link": "/document/7352679", "title": "The organization of distributed problem-solving networks: Examining how core and periphery interact together to solve problems in Mozilla's community"}, {"link": "", "title": "Why hackers do what they do: Understanding motivation and effort in free/open source software projects"}, {"link": "", "title": "Peeling the onion"}, {"link": "", "title": "Psychological Sense of Community: Conceptual Issues and Connections to"}, {"link": "", "title": "Understanding and assessing the motivations of volunteers: a functional approach"}, {"link": "", "title": "An empirical analysis of open source software developers' motivations and continuance intentions"}, {"link": "", "title": "Volunteer motivation and attendance decisions: Competitive theory testing in multiple samples from a homeless shelter"}, {"link": "", "title": "The measurement of organizational commitment"}, {"link": "", "title": "Role identity, organizational experiences, and volunteer performance"}, {"link": "", "title": "The meaning behind attachment: Exploring camaraderie, cause, and competency at a charity sport event"}, {"link": "", "title": "A primer on partial least squares structural equation modeling (PLS-SEM)"}, {"link": "", "title": "Why do episodic volunteers stay in FLOSS communities? (Appendix)"}, {"link": "", "title": "Motivating factors influencing college students' participation in charity sport events"}, {"link": "", "title": "Reconsidering the role of training in event volunteers' satisfaction"}, {"link": "", "title": "Role-identity salience"}, {"link": "", "title": "Volunteering an opinion organizational voice and volunteer retention in nonprofit organizations"}, {"link": "", "title": "Prepaid and promised incentives in web surveys: An experiment"}, {"link": "", "title": "An investigation of the effect of lotteries on web survey response rates"}, {"link": "", "title": "How to write up and report PLS analyses"}, {"link": "/document/1579705", "title": "PLS, small sample size, and statistical power in MIS research"}, {"link": "", "title": "PLS path modeling with R"}, {"link": "", "title": "SmartPLS 3"}, {"link": "", "title": "Self-reports in organizational research: Problems and prospects"}, {"link": "", "title": "The open source survey"}, {"link": "", "title": "How developers acquire FLOSS skills"}, {"link": "", "title": "Free/Libre and Open Source Software: Survey and Study"}, {"link": "", "title": "PLS-SEM: Indeed a silver bullet"}, {"link": "", "title": "A new criterion for assessing discriminant validity in variance-based structural equation modeling"}, {"link": "", "title": "Discriminant validity assessment: Use of Fornell & Larcker criterion versus HTMT criterion"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences"}, {"link": "", "title": "REBUS-PLS: A response-based procedure for detecting unit segments in PLS path modelling"}, {"link": "", "title": "Assessing unobserved heterogeneity in SEM using REBUS-PLS: A case of the application of TAM to social media adoption"}, {"link": "", "title": "The impact of ideology on effectiveness in open source software development teams"}, {"link": "", "title": "Global ethics of collective internet governance: Intrinsic motivation and open source software"}, {"link": "", "title": "Validating instruments in MIS research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811892"}
{"ref": [{"link": "", "title": "User stories applied: For agile software development"}, {"link": "", "title": "Mastering the requirements process: Getting requirements right"}, {"link": "", "title": "Summarizing software artifacts: a case study of bug reports"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "", "title": "Summarizing spoken and written conversations"}, {"link": "", "title": "The ami meeting corpus"}, {"link": "", "title": "Manifesto for agile software development"}, {"link": "/document/4022121", "title": "Towards a framework for real time requirements elicitation"}, {"link": "", "title": "Doing conversation analysis"}, {"link": "", "title": "The language of turn and sequence"}, {"link": "", "title": "Conversation analysis"}, {"link": "", "title": "Conversational Informatics: An Engineering Approach"}, {"link": "", "title": "Sequence Organization in Interaction: A Primer in Conversation Analysis I"}, {"link": "", "title": "Information fusion in the context of multi-document summarization"}, {"link": "", "title": "A survey of text summarization extractive techniques"}, {"link": "", "title": "Summarizing text documents: sentence selection and evaluation metrics"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "/document/7181703", "title": "Automatic source code summarization of context for java methods"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "", "title": "Summarization of complex software artifacts"}, {"link": "", "title": "On the analysis of human and automatic summaries of source code"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "A metric for software readability"}, {"link": "", "title": "Introduction to the special issue on summarization"}, {"link": "", "title": "Information extraction and text summarization using linguistic knowledge acquisition"}, {"link": "/document/1704047", "title": "The detection and classification of non-functional requirements with application to early aspects"}, {"link": "", "title": "The enron corpus: A new dataset for email classification research"}, {"link": "", "title": "A practical guide to support vector classification"}, {"link": "", "title": "A study of the behavior of several methods for balancing machine learning training data"}, {"link": "", "title": "Smote: synthetic minority over-sampling technique"}, {"link": "/document/708428", "title": "Support vector machines"}, {"link": "", "title": "Applied logistic regression"}, {"link": "", "title": "Scikit-learn: Machine learning in python"}, {"link": "", "title": "An empirical comparison of supervised learning algorithms"}, {"link": "", "title": "Summarizing emails with conversational cohesion and subjectivity"}, {"link": "", "title": "Information Retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985649"}
{"ref": [{"link": "", "title": "Archetypal internet-scale source code searching"}, {"link": "/document/7181437", "title": "Code, camera, action: How software developers document and share program knowledge using YouTube"}, {"link": "/document/5235134", "title": "Recommendation systems for software engineering"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Recommending reference API documentation"}, {"link": "", "title": "Mining stackoverflow to turn the IDE into a self-confident programming prompter"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "How can I use this method?"}, {"link": "", "title": "Too long; didn't watch! extracting relevant fragments from software development video tutorials"}, {"link": "", "title": "Codetube: Extracting relevant fragments from software development video tutorials"}, {"link": "", "title": "Mining version histories to guide software changes"}, {"link": "", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "", "title": "Fishtail: from task context to source code examples"}, {"link": "/document/1201219", "title": "Hipikat: recommending pertinent software development artifacts"}, {"link": "", "title": "How developers search for code: a case study"}, {"link": "", "title": "Do developers search for source code examples using multiple facts?"}, {"link": "", "title": "The sensemaking process and leverage points for analyst technology as identified through cognitive task analysis"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "The anatomy of a large-scale hypertextual web search engine"}, {"link": "/document/7180121", "title": "Stormed: Stack overflow ready made data"}, {"link": "/document/7180103", "title": "Summarizing complex development artifacts by mining heterogenous data"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Lexrank: Graph-based lexical centrality as salience in text summarization"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "Effect sizes for research A broad practical approach"}, {"link": "", "title": "Modern permutation test software"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Exploiting code search engines to improve programmer productivity"}, {"link": "", "title": "Parseweb: a programmer assistant for reusing open source code on the web"}, {"link": "/document/5989838", "title": "A source code search engine for finding highly relevant applications"}, {"link": "", "title": "Portfolio: finding relevant functions and their usage"}, {"link": "", "title": "Spotweb: Detecting framework hotspots and coldspots via mining open source code on the web"}, {"link": "/document/5069489", "title": "Mining search topics from a code search engine usage log"}, {"link": "", "title": "Analyzing and mining a code search engine usage log"}, {"link": "", "title": "Mining internet-scale software repositories"}, {"link": "", "title": "How well do search engines support code retrieval on the web?"}, {"link": "", "title": "Building usage contexts during program comprehension"}, {"link": "/document/7181430", "title": "I know what you did last summer - an investigation of how developers spend their time"}, {"link": "/document/7503714", "title": "Taming the ide with fine-grained interaction data"}, {"link": "/document/7476636", "title": "A study of visual studio usage in practice"}, {"link": "", "title": "Codetrail: Connecting source code and web resources"}, {"link": "/document/1231611", "title": "Collecting, integrating and analyzing software metrics and personal software process data"}, {"link": "", "title": "Deep intellisense: a tool for rehydrating evaporated information"}, {"link": "", "title": "Strathcona example recommendation tool"}, {"link": "/document/4016572", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "/document/1698785", "title": "Mica: A web-search tool for finding api components and examples"}, {"link": "/document/6344497", "title": "Automatically locating relevant programming help online"}, {"link": "", "title": "Towards a context-aware ide-based meta search engine for recommendation about programming errors and exceptions"}, {"link": "/document/6233418", "title": "Context-based recommendation to support problem solving in software development"}, {"link": "", "title": "A spontaneous code recommendation tool based on associative search"}, {"link": "", "title": "Prompter: A self-confident recommender system"}, {"link": "", "title": "Prompter: Turning the IDE into a self-confident programming assistant"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985653"}
{"ref": [{"link": "", "title": "A NO way to BOLD?: Dietary nitrate alters the hemodynamic response to visual stimulation"}, {"link": "", "title": "The highly sensitive brain: an fMRI study of sensory processing sensitivity and response to others' emotions"}, {"link": "", "title": "Cogito, ergo sum! cognitive processes of students dealing with data structures"}, {"link": "", "title": "What you see is what you get the influence of visualization on the perception of data structures"}, {"link": "", "title": "Impacts of Data Structures and Algorithms on Multi-core Efficiency"}, {"link": "", "title": "Effect of instruction on spatial visualization ability in civil engineering students"}, {"link": "", "title": "Twisting space: are rigid and non-rigid mental transformations separate spatial skills?"}, {"link": "/document/548517", "title": "Fault tolerant data structures"}, {"link": "", "title": "Autoregressive model based algorithm for correcting motion and serially correlated errors in fNIRS"}, {"link": "", "title": "Neural correlates of interspecies perspective taking in the post-mortem atlantic salmon: an argument for multiple comparisons correction"}, {"link": "", "title": "Spatial ability and earth science conceptual understanding"}, {"link": "", "title": "Twenty years of functional near-infrared spectroscopy: introduction for the special issue"}, {"link": "", "title": "The brain's default network"}, {"link": "", "title": "Modeling the hemodynamic response to brain activation"}, {"link": "", "title": "The Role of the Insula in Intuitive Expert Bug Detection in Computer Code: An fMRI Study"}, {"link": "", "title": "Center for Diagnostic Imaging. I'm getting an MRI, so what's a coil?"}, {"link": "", "title": "Changes in cortical activity during mental rotation a mapping study using functional mri"}, {"link": "", "title": "Mental rotation and the right hemisphere"}, {"link": "", "title": "Understanding programming expertise: an empirical study of phasic brain wave changes"}, {"link": "", "title": "A quantitative comparison of NIRS and fMRI across multiple cognitive tasks"}, {"link": "", "title": "Neuroimaging of cognitive functions in human parietal cortex"}, {"link": "", "title": "Different activation patterns for working memory load and visual attention load"}, {"link": "", "title": "Yours is better!: participant response bias in HCI"}, {"link": "", "title": "Detecting and adjusting for artifacts in fMRI time series data"}, {"link": "", "title": "Impact of cognitive imaging and sex differences on the development of laparoscopic suturing skills"}, {"link": "/document/7774510", "title": "WAP: Understanding the Brain at Software Debugging"}, {"link": "", "title": "Application of functional near-infrared spectroscopy in psychiatry"}, {"link": "", "title": "The effect of poor source code lexicon and readability on developers' cognitive load"}, {"link": "/document/6498541", "title": "Impact of data structure layout on performance"}, {"link": "/document/7985660", "title": "Decoding the representation of code in the brain: An fMRI study of code review and expertise"}, {"link": "", "title": "Using psycho-physiological measures to assess task difficulty in software development"}, {"link": "", "title": "A human study of patch maintainability"}, {"link": "", "title": "Developmental aspects of language processing: fMRI of verbal fluency in children and adults"}, {"link": "", "title": "Brodmann's Localisation in the Cerebral Cortex"}, {"link": "", "title": "Overview of functional magnetic resonance imaging"}, {"link": "", "title": "Greater superior than inferior parietal lobule activation with increasing rotation angle during mental rotation: an fMRI study"}, {"link": "", "title": "Selective right parietal lobe activation during mental rotation: a parametric pet study"}, {"link": "", "title": "Types of visual-spatial representations and mathematical problem solving"}, {"link": "", "title": "Detecting latency differences in event-related bold responses: application to words versus nonwords and initial versus repeated face presentations"}, {"link": "", "title": "Commentary on the statistical properties of noise and its implication on general linear models in functional near-infrared spectroscopy"}, {"link": "/document/6888727", "title": "Brain activity measurement during program comprehension with NIRS"}, {"link": "", "title": "The ten-twenty electrode system of the international federation"}, {"link": "", "title": "Mining biometric data to predict programmer expertise and task difficulty"}, {"link": "/document/7790010", "title": "Comparing programming language comprehension between novice and expert programmers using EEG analysis"}, {"link": "", "title": "Assessment of the cerebral cortex during motor task behaviours in adults: a systematic review of functional near infrared spectroscopy (fNIRS) studies"}, {"link": "", "title": "Modeling the hemodynamic response function in fMRI: efficiency, bias and mis-modeling"}, {"link": "/document/6793478", "title": "Perception of face parts and face configurations: an fMRI study"}, {"link": "", "title": "Illuminating the developing brain: the past, present and future of functional near infrared spectroscopy"}, {"link": "", "title": "Validity of self-evaluation of ability: A review and meta-analysis"}, {"link": "", "title": "Navigation-related structural change in the hippocampi of taxi drivers"}, {"link": "", "title": "A survey of medical image registration"}, {"link": "", "title": "Navigation in a \u201cvirtual\u201d maze: Sex differences and correlation with psychometric measures of spatial ability in humans"}, {"link": "", "title": "Willful modulation of brain activity in disorders of consciousness"}, {"link": "", "title": "Quantifying programmers' mental workload during program comprehension based on cerebral blood flow measurement: A controlled experiment"}, {"link": "", "title": "fMRI validation of fNIRS measurements during a naturalistic task"}, {"link": "", "title": "NIRS in clinical neurology - a \u2018promising\u2019 tool?"}, {"link": "", "title": "Model-based fMRI and its application to reward learning and decision making"}, {"link": "", "title": "Brain magnetic resonance imaging with contrast dependent on blood oxygenation"}, {"link": "", "title": "Prefrontal activity during taste encoding: an fNIRS study"}, {"link": "/document/242525", "title": "Metrics for assessing a software system's maintainability"}, {"link": "", "title": "A cognitive neuroscience perspective on memory for programming tasks"}, {"link": "/document/5970156", "title": "Subvocalization-toward hearing the inner thoughts of developers"}, {"link": "", "title": "On the nature of programmer expertise"}, {"link": "", "title": "A look into programmers' heads"}, {"link": "", "title": "Simultaneous Measurement of Program Comprehension with fMRI and Eye Tracking: A Case Study"}, {"link": "", "title": "Applications of mental rotation figures of the shepard and metzler type and description of a mental rotation stimulus library"}, {"link": "", "title": "The \u201cperceptual wedge hypothesis\u201d as the basis for bilingual babies phonetic processing advantage: New insights from fNIRS brain imaging"}, {"link": "", "title": "Self-reports in organizational research: Problems and prospects"}, {"link": "", "title": "Password security: What users know and what they actually do"}, {"link": "", "title": "Applications of Spatial Data Structures: Computer Graphics, Image Processing, and GIS"}, {"link": "/document/7357209", "title": "An fMRI analysis of the efficacy of Euler diagrams in logical reasoning"}, {"link": "", "title": "Functional magnetic resonance imaging and functional near-infrared spectroscopy: insights from combined recording studies"}, {"link": "", "title": "Training induces changes in white matter architecture"}, {"link": "", "title": "IgNobel prize in neuroscience: The dead salmon study"}, {"link": "", "title": "Mental rotation of three-dimensional objects"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "Measuring Neural Efficiency of Program Comprehension"}, {"link": "", "title": "fMRI 2.0"}, {"link": "", "title": "Correspondence of the brain's functional architecture during activation and rest"}, {"link": "", "title": "Functional topography of the cerebellum for motor and cognitive tasks: an fMRI study"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Statistical analysis of fNIRS data: A comprehensive review"}, {"link": "", "title": ""}, {"link": "", "title": "How three fundamental data structures impact storage and retrieval"}, {"link": "", "title": "Toys, spatial ability, and science and mathematics achievement: Are they related?"}, {"link": "", "title": "Comparison of physiological noise at 1.5 t, 3 t and 7 t and optimization of fMRI acquisition parameters"}, {"link": "/document/6695979", "title": "Translating fMRI to fNIRS"}, {"link": "", "title": "Exploring the brain network: a review on resting-state fMRI functional connectivity"}, {"link": "", "title": "Spatial ability for stem domains: Aligning over 50 years of cumulative psychological knowledge solidifies its importance"}, {"link": "", "title": "A survey of data structures for computer graphics systems"}, {"link": "", "title": "Semi-automatic 10/20 identification method for MRI-free probe placement in transcranial brain mapping techniques"}, {"link": "", "title": "Spatial ability and the impact of visualization/animation on learning electrochemistry"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812086"}
{"ref": [{"link": "", "title": "Immutability"}, {"link": "", "title": "Exploring language support for immutability"}, {"link": "", "title": "Secure coding guidelines for Java SE, version 4.0"}, {"link": "", "title": "Framework design guidelines"}, {"link": "", "title": "Effective Java"}, {"link": "", "title": "Immutability changes everything"}, {"link": "", "title": "Featherweight Java: A minimal core calculus for Java and GJ"}, {"link": "", "title": "Quantifying Developers' Adoption of Security Tools"}, {"link": "", "title": "The Checker Framework"}, {"link": "", "title": "Object and reference immutability using Java generics"}, {"link": "", "title": "A study of the fragile base class problem"}, {"link": "", "title": "Guava: Google core libraries for Java"}, {"link": "", "title": "ZK spreadsheet"}, {"link": "", "title": "Transformation for class immutability"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "", "title": "Glacier"}, {"link": "", "title": "Securing Java"}, {"link": "", "title": "Map: remove and check values"}, {"link": "", "title": "Basex"}, {"link": "", "title": "An empirical study on the impact of static typing on software maintainability"}, {"link": "/document/7503516", "title": "Programmers are users too: Human-centered methods for improving programming tools"}, {"link": "", "title": "How do API documentation and static typing affect API usability?"}, {"link": "", "title": "An empirical study on the impact of C++ lambdas and programmer experience"}, {"link": "", "title": "European Conference on Object-Oriented Programming"}, {"link": "", "title": "A mode system for read-only references in Java"}, {"link": "", "title": "Pure4J @ImmutableValue specification"}, {"link": "", "title": "Immutables"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985688"}
{"ref": [{"link": "/document/199724", "title": "Operational profiles in software-reliability engineering"}, {"link": "", "title": "Handbook of Software Reliability Engineering"}, {"link": "", "title": "Optimal and adaptive testing for software reliability assessment"}, {"link": "", "title": "An experimental study of adaptive testing for software reliability assessment"}, {"link": "/document/544239", "title": "Software reliability-engineered testing"}, {"link": "/document/707695", "title": "Evaluating testing methods by delivered reliability"}, {"link": "", "title": "Synchronous testing of multimodal systems: an operational profile-based approach"}, {"link": "/document/7299696", "title": "RELAI testing: a technique to assess and improve software reliability"}, {"link": "/document/888629", "title": "Modeling the effects of combining diverse software fault detection techniques"}, {"link": "/document/6497086", "title": "Combining Operational and Debug Testing for Improving Reliability"}, {"link": "", "title": "Does code coverage provide a good stopping rule for operational profile based testing?"}, {"link": "", "title": "An empirical investigation of program spectra"}, {"link": "", "title": "Edge profiling versus path profiling: The showdown"}, {"link": "", "title": "Defect analysis in mission-critical software systems: a detailed investigation"}, {"link": "", "title": "SIR: Software-artifact Infrastructure Repository"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "/document/7081877", "title": "Code coverage and test suite effectiveness: Empirical study with real bugs in large systems"}, {"link": "", "title": "On the correlation between code coverage and software reliability"}, {"link": "", "title": "Comparison of delivered reliability of branch, data flow and operational testing: A case study"}, {"link": "/document/6822207", "title": "A Comparative Study of Test Coverage-Based Software Reliability Growth Models"}, {"link": "/document/963124", "title": "Effect of Code Coverage on Software Reliability Measurement"}, {"link": "/document/1251065", "title": "A comparison of coverage-based and distribution-based techniques for filtering and prioritizing test cases"}, {"link": "", "title": "Scope-aided Test Prioritization, Selection and Minimization for Software Reuse"}, {"link": "/document/869371", "title": "Using paths to measure, explain, and enhance program behavior"}, {"link": "", "title": "The use of program profiling for software maintenance with applications to the year 2000 problem"}, {"link": "/document/1542068", "title": "Checking inside the black box: regression testing by comparing value spectra"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "/document/7390282", "title": "A survey on software fault localization"}, {"link": "/document/6762895", "title": "On the asymptotic behavior of adaptive testing strategy for software reliability assessment"}, {"link": "/document/707695", "title": "Evaluating testing methods by delivered reliability"}, {"link": "", "title": "Pattern Recognition and Machine Learning"}, {"link": "", "title": "Adapting the Sample Size in Particle Filters Through KLD-Sampling"}, {"link": "", "title": "Prioritizing Mutation Operators Based on Importance Sampling"}, {"link": "", "title": "A study of operational and testing reliability in software reliability analysis"}, {"link": "", "title": "Statistical comparisons of classifiers over multiple data sets"}, {"link": "", "title": "A Unified Test Case Prioritization Approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985692"}
{"ref": [{"link": "", "title": "Hey, you have given me too many knobs!: Understanding and dealing with over-designed configuration in system software"}, {"link": "", "title": "On the modularity of feature interactions"}, {"link": "", "title": "Tradeoffs in modeling performance of highly-configurable software systems"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "/document/6693089", "title": "Variability-aware performance prediction: A statistical learning approach"}, {"link": "", "title": "Using bad learners to find good configurations"}, {"link": "", "title": "Finding faster configurations using FLASH"}, {"link": "/document/7675434", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "Data-efficient performance learning for configurable systems"}, {"link": "", "title": "A new algorithm for sampling CSP solutions uniformly at random"}, {"link": "", "title": "Distribution-aware sampling and weighted model counting for sat"}, {"link": "", "title": "IPOG/IPOG-D: Efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "An algorithm for generating t-wise covering arrays from large feature models"}, {"link": "", "title": "Practical pairwise testing for software product lines"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "Variability-aware static analysis at scale: An empirical study"}, {"link": "", "title": "Feature-Oriented Software Product Lines-Concepts and Implementation"}, {"link": "/document/4601575", "title": "Adaptive random testing"}, {"link": "", "title": "Finding near-optimal configurations in product lines by random sampling"}, {"link": "", "title": "Feature model synthesis"}, {"link": "", "title": "Cost-efficient sampling for performance prediction of configurable systems"}, {"link": "", "title": "Con-figuration coverage in the analysis of large-scale system software"}, {"link": "", "title": "A comparison of 10 sampling algorithms for configurable systems"}, {"link": "", "title": "Taxicab Geometry: An Adventure in Non-Euclidean Geometry. Courier Corporation"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "Handbook of Satisfiability"}, {"link": "", "title": "SAT-based analysis of large real-world feature models is easy"}, {"link": "", "title": "Use of ranks in one-criterion variance analysis"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "A critique and improvement of the \u201cCL\u201d common language effect size statistics of mcgraw and wong"}, {"link": "", "title": "Robust tests for equality of variances"}, {"link": "", "title": "Statistical methods"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "The iterative solver template library"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812049"}
{"ref": [{"link": "", "title": "Apache FtpServer"}, {"link": "", "title": "Authentication plugin for the Bukkit/Spigot API"}, {"link": "", "title": "H2 database engine"}, {"link": "", "title": "The Meltdown Attack"}, {"link": "", "title": "Xbox 360 Timing Attack"}, {"link": "", "title": "Multi-channel Attacks"}, {"link": "", "title": "Formal verification of side-channel countermeasures using self-composition"}, {"link": "", "title": "Decomposition instead of self-composition for proving the absence of timing channels"}, {"link": "", "title": "String Analysis for Side Channels with Segmented Oracles"}, {"link": "", "title": "Secure information flow by self-composition"}, {"link": "", "title": "STADS: Software testing as species discovery"}, {"link": "", "title": "Symbolic path cost analysis for side-channel detection"}, {"link": "", "title": "Remote Timing Attacks Are Practical"}, {"link": "", "title": "Precise detection of side-channel vulnerabilities using quantitative cartesian hoare logic"}, {"link": "/document/5504714", "title": "Side-Channel Leaks in Web Applications: A Reality Today, a Challenge Tomorrow"}, {"link": "", "title": "LeakWatch: Estimating Information Leakage from Java Programs"}, {"link": "", "title": "Exploit Generation for Information Flow Leaks in Object-Oriented Programs"}, {"link": "", "title": "CacheAudit: A Tool for the Static Analysis of Cache Side Channels"}, {"link": "", "title": "The CRIME attack"}, {"link": "", "title": "Space/Time Analysis for Cybersecurity (STAC)"}, {"link": "", "title": "Mining input grammars from dynamic taints"}, {"link": "/document/6547110", "title": "Practical timing side channel attacks against kernel space aslr"}, {"link": "", "title": "Hybrid Statistical Estimation of Mutual Information for Quantifying Information Flow"}, {"link": "", "title": "Poster: Afl-based fuzzing for java with kelinci"}, {"link": "", "title": "Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems"}, {"link": "", "title": "An Information-theoretic Model for Adaptive Side-channel Attacks"}, {"link": "", "title": "Automatic quantification of cache side-channels"}, {"link": "", "title": "Timing attack in Google Keyczar library"}, {"link": "", "title": "Perffuzz: Automatically generating pathological inputs"}, {"link": "", "title": "Fairfuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage"}, {"link": "", "title": "Last-level cache side-channel attacks are practical"}, {"link": "", "title": "A systematic study of cache side channels across aes implementations"}, {"link": "/document/6956586", "title": "Quantifying information flow for dynamic secrets"}, {"link": "", "title": "Badger: Complexity analysis with fuzzing and symbolic execution"}, {"link": "/document/7536389", "title": "Multi-run side-channel analysis using symbolic execution and max-smt"}, {"link": "", "title": "NEZHA: efficient domain-independent differential testing"}, {"link": "/document/8049730", "title": "Synthesis of adaptive side-channel attacks"}, {"link": "/document/7958596", "title": "Hvlearn: Automated black-box analysis of hostname verification in ssl/tls implementations"}, {"link": "", "title": "Singularity: Pattern fuzzing for worst case complexity"}, {"link": "", "title": "Stacco: Differentially analyzing side-channel traces for detecting ssl/tls vulnerabilities in secure enclaves"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "American fuzzy lop (afl)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812124"}
{"ref": [{"link": "", "title": "Report of license proliferation committee and draft faq"}, {"link": "", "title": "When and why developers adopt and change software licenses"}, {"link": "", "title": "License usage and changes: A large-scale study of Java projects on GitHub"}, {"link": "", "title": "Networks, social influence, and the choice among competing innovations: Insights from open source software licenses"}, {"link": "", "title": "Code reuse in open source software development: Quantitative evidence, drivers, and impediments"}, {"link": "", "title": "Understanding the drivers of unethical programming behavior: The inappropriate reuse of internet-accessible code"}, {"link": "", "title": "License integration patterns: Addressing license mismatches in component-based development"}, {"link": "", "title": "Understanding and auditing the licensing of open source software distributions"}, {"link": "", "title": "Mysql connectors"}, {"link": "", "title": "The FOSSoiogy project"}, {"link": "", "title": "Automated software license analysis"}, {"link": "", "title": "Identifying licensing of jar archives using a code-search approach"}, {"link": "/document/6178302", "title": "A method for open source license compliance of java applications"}, {"link": "", "title": "Software package data exchange - license exceptions"}, {"link": "", "title": "Sun microsystems - bsd license"}, {"link": "", "title": "New license/exception request: Bsd-3-clause-nonuclear"}, {"link": "", "title": "Open Source Definition"}, {"link": "", "title": "A sentence-matching method for automatic license identification of source code files"}, {"link": "", "title": "Gnu general public license, version 2, with the classpath exception"}, {"link": "", "title": ""}, {"link": "", "title": "Software package data exchange - fltk exception"}, {"link": "", "title": "Action mailer basics"}, {"link": "", "title": "Machine learning in automated text categorization"}, {"link": "", "title": "What's the code?: Automatic classification of source code archives"}, {"link": "", "title": "Categorizing software applications for maintenance"}, {"link": "", "title": "On using machine learning to automatically classify software applications into domain categories"}, {"link": "/document/4658083", "title": "Automated severity assessment of software defect reports"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "/document/6405306", "title": "Triaging incoming change requests: Bug or commit history, or code authorship?"}, {"link": "", "title": "The class imbalance problem: A systematic study"}, {"link": "", "title": "Enterprise Information Systems: 13th International Conference, ICEIS 2011"}, {"link": "", "title": "Open source licenses"}, {"link": "", "title": "Collection and characterization of spelling errors in scientific and scholarly text"}, {"link": "", "title": "Writing disturbances in acute confusional states"}, {"link": "", "title": "Mediadescriptionimpl.java"}, {"link": "", "title": "Learning from Data"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "ch. A Survey of Text Classification Algorithms"}, {"link": "", "title": "The weka data mining software: An update"}, {"link": "", "title": "A systematic analysis of performance measures for classification tasks"}, {"link": "", "title": "An introduction to roc analysis"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "A simple sequentially rejective Bonferroni test procedure"}, {"link": "", "title": "Effect sizes for research: A broad practical approach"}, {"link": "", "title": "Online appendix"}, {"link": "", "title": "Evolutional analysis of licenses in FOSS"}, {"link": "/document/5069483", "title": "Code siblings: Technical and legal implications of copying code between applications"}, {"link": "", "title": "A method to detect license inconsistencies in large-scale open source projects"}, {"link": "/document/7476659", "title": "On the detection of licenses violations in the android ecosystem"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985655"}
{"ref": [{"link": "/document/67595", "title": "Analyzing error-prone system structure"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "/document/5166450", "title": "Software dependencies, work dependencies, and their impact on failures"}, {"link": "/document/859533", "title": "Pre-dicting fault incidence using software change history"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "Exploring community structure of software call graph and its applications in class cohesion measurement"}, {"link": "", "title": "Design rule spaces: A new form of architecture insight"}, {"link": "", "title": "Leveraging design rules to improve software architecture recovery"}, {"link": "/document/8094412", "title": "Heterogeneous defect prediction through multiple kernel learning and ensemble learning"}, {"link": "/document/7935483", "title": "Dynamic selection of classifiers in bug prediction: An adaptive method"}, {"link": "", "title": "Acdc: An algorithm for comprehension-driven clustering"}, {"link": "/document/6100123", "title": "Enhancing architectural recovery using concerns"}, {"link": "/document/5741257", "title": "Investigating the use of lexical information for software system clustering"}, {"link": "/document/1235432", "title": "A heuristic approach to solving the software clustering problem"}, {"link": "/document/5645451", "title": "Evaluating the impact of software evolution on software clustering"}, {"link": "/document/1610610", "title": "On the automatic modularization of software systems using the bunch tool"}, {"link": "/document/6693106", "title": "A comparative analysis of software architecture recovery techniques"}, {"link": "/document/7202951", "title": "Comparing software architecture recovery techniques using accurate dependencies"}, {"link": "/document/6405348", "title": "Supporting the identification of architecturally-relevant code anomalies"}, {"link": "/document/7158503", "title": "Hotspot patterns: The formal definition and automatic detection of architecture smells"}, {"link": "", "title": "Code anomalies flock together: exploring code anomaly agglomerations for locating design problems"}, {"link": "", "title": "Automatic detection of instability architectural smells"}, {"link": "/document/7958506", "title": "Arcan: A tool for architectural smells detection"}, {"link": "", "title": "Identi-fying and quantifying architectural debt"}, {"link": "/document/5609687", "title": "Using relational topic models to capture coupling among classes in object-oriented software systems"}, {"link": "", "title": "Hierarchical relational models for document networks"}, {"link": "/document/6684534", "title": "Methodbook: Recommending move method refactorings via relational topic models"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "A case study in locating the architectural roots of technical debt"}, {"link": "", "title": "Titan: A toolset that connects software architecture with quality analysis"}, {"link": "", "title": "An effectiveness measure for software clustering algorithms"}, {"link": "/document/7180083", "title": "An empirical study of architectural change in open-source software systems"}, {"link": "/document/6100065", "title": "Generalizing evolutionary coupling with stochastic dependencies"}, {"link": "", "title": "The missing links:bugs and bug-fix commits"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812092"}
{"ref": [{"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques"}, {"link": "", "title": "Feature-Oriented Software Product Lines"}, {"link": "", "title": "What is a Feature? A Qualitative Study of Features in Industrial Software Product Lines"}, {"link": "", "title": "#ifdef confirmed harmful: Promoting understandable software variation"}, {"link": "", "title": "#ifdef Considered Harmful, or Portability Experience With C News"}, {"link": "/document/1201298", "title": "XVCL: XML-based variant configuration language"}, {"link": "", "title": "Granularity in Software Product Lines"}, {"link": "", "title": "Feature Maintenance with Emergent Interfaces"}, {"link": "", "title": "Delta-Oriented Programming of Software Product Lines"}, {"link": "", "title": "Pure delta-oriented programming"}, {"link": "", "title": "Deltaj 1.5: Delta-oriented programming for java 1.5"}, {"link": "", "title": "Feature-oriented programming: A fresh look at objects"}, {"link": "/document/1321059", "title": "Scaling step-wise refinement"}, {"link": "", "title": "FeatureC++: on the symbiosis of feature-oriented and aspect-oriented programming"}, {"link": "/document/6095570", "title": "Language-Independent and Automated Software Composition: The FeatureHouse Experience"}, {"link": "", "title": "How does the degree of variability affect bug finding?"}, {"link": "", "title": "Preprocessors from an Abstract Point of View"}, {"link": "", "title": "A model of refactoring physically and virtually separated features"}, {"link": "", "title": "Integrating compositional and annotative approaches for product line engineering"}, {"link": "", "title": "Comparing program comprehension of physically and virtually separated concerns"}, {"link": "", "title": "Online appendix"}, {"link": "", "title": "The Choice Calculus: A Representation for Software Variation"}, {"link": "", "title": "C-CLR: a tool for navigating highly configurable system software"}, {"link": "", "title": "Analyzing the discipline of preprocessor annotations in 30 million lines of C code"}, {"link": "/document/1020283", "title": "Point/Counterpoint: Being Proactive Pays Off - Eliminating the Adoption"}, {"link": "", "title": "An analysis of the variability in forty preprocessor-based software product lines"}, {"link": "", "title": "The Love/Hate Relationship with the C Preprocessor \u2014 An Interview Study"}, {"link": "", "title": "A Discipline of Programming"}, {"link": "", "title": "On the criteria to be used in decomposing systems into modules"}, {"link": "", "title": "Designing Software for Ease of Extension and Contraction"}, {"link": "", "title": "The road to feature modularity?"}, {"link": "", "title": "Is working memory still working?"}, {"link": "/document/957805", "title": "Folding: an approach to enable program understanding of preprocessed languages"}, {"link": "", "title": "Concepts, Operations, and Feasibility of a Projection-Based Variation Control System"}, {"link": "", "title": "Projectional editing of variational software"}, {"link": "/document/988710", "title": "A layered architecture for uniform version management"}, {"link": "/document/1019478", "title": "Using version control data to evaluate the impact of software tools: a case study of the Version Editor"}, {"link": "", "title": "JetBrains MPS"}, {"link": "", "title": "Towards User-Friendly Projectional Editors"}, {"link": "", "title": "Efficiency of projectional editing: A controlled experiment"}, {"link": "", "title": "Structured Document Algebra in Action"}, {"link": "", "title": "Efficient Development of Consistent Projectional Editors using Grammar Cells"}, {"link": "", "title": "Jest: Elasticsearch Java Rest Client"}, {"link": "", "title": "A Standard Problem for Evaluating Product-Line Methodologies"}, {"link": "", "title": "Entwicklung einer Werkzeugunterst\u00fctzung f\u00fcr DeltaJava und Evaluierung der Sprache anhand einer Fallstudie (German)"}, {"link": "", "title": "Code clones in feature-oriented software product lines"}, {"link": "/document/4339271", "title": "A Case Study Implementing Features Using AspectJ"}, {"link": "", "title": "Implementing Delta-oriented SPLs Using PEoPL: An Example Scenario and Case Study"}, {"link": "", "title": "Guaranteeing syntactic correctness for all product line variants: A language-independent approach"}, {"link": "/document/7065312", "title": "Where do configuration constraints stem from? an extraction approach and an empirical study"}, {"link": "", "title": "Features, modularity, and variation points"}, {"link": "", "title": "On the separation of concerns in program families"}, {"link": "/document/4407729", "title": "Aspectual Feature Modules"}, {"link": "", "title": "A calculus for modeling and implementing variation"}, {"link": "", "title": "Integrating Approaches for Feature Implementation"}, {"link": "", "title": "Snippets and Component-Based Authoring Tools for Reusing and Connecting Documents"}, {"link": "", "title": "The Snippet Platform Architecture: Dynamic and Interactive Compound Documents"}, {"link": "", "title": "Integrating Feature-based Implementation Approaches using a Common Graph-based Representation"}, {"link": "", "title": "FeatureIDE - An extensible framework for feature-oriented software development"}, {"link": "", "title": "Feature-context interfaces: Tailored programming interfaces for software product lines"}, {"link": "", "title": "Programming with Crosscutting Effective Views"}, {"link": "/document/6030048", "title": "Product line engineering using domain-specific languages"}, {"link": "", "title": "Implementing feature variability for models and code with projectional language workbenches"}, {"link": "", "title": "mbeddr: an extensible C-based programming language and IDE for embedded systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985694"}
{"ref": [{"link": "", "title": "Studying the Effectiveness of Application Performance Management (APM) Tools for Detecting Performance Regressions for Web Applications: an Experience Report"}, {"link": "", "title": "Accessing Hidden and Hard-to-Reach Populations: Snowball Research Strategies"}, {"link": "/document/1291833", "title": "Model-Based Performance Prediction in Software Development: a Survey"}, {"link": "/document/6613834", "title": "In Situ Understanding of Performance Bottlenecks Through Visually Augmented Code"}, {"link": "", "title": "The Palladio Component Model for Model-Driven Performance Prediction"}, {"link": "", "title": "Software change impact analysis"}, {"link": "", "title": "Performancehat eclipse plugin"}, {"link": "", "title": "The making of cloud applications: An empirical study on software development for the cloud"}, {"link": "", "title": "Flow and the foundations of positive psychology"}, {"link": "", "title": "Enhancing performance prediction robustness by combining analytical modeling and machine learning"}, {"link": "/document/1183929", "title": "Locating features in source code"}, {"link": "", "title": "How do api documentation and static typing affect api usability?"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "On designing and deploying internet-scale services"}, {"link": "", "title": "Deriving work plans for solving performance and scalability problems"}, {"link": "", "title": "Augmenting code with in situ visualizations to aid program understanding"}, {"link": "", "title": "Understanding customer problem troubleshooting from storage system logs"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Powering monitoring analytics with elk stack"}, {"link": "", "title": "A taxonomy for software change impact analysis"}, {"link": "", "title": "Calculating source line level energy information for android applications"}, {"link": "", "title": "Addressing misconceptions about code with always-on programming visualizations"}, {"link": "", "title": "Proceedings of the 13th International Conference on Mining Software Repositories (MSR)"}, {"link": "", "title": "Resumption strategies for interrupted programming tasks"}, {"link": "/document/4268239", "title": "Combining formal concept analysis with information retrieval for concept location in source code"}, {"link": "", "title": "Reducing wasted development time via continuous testing"}, {"link": "/document/7827078", "title": "On the positive effect of reactive programming on software comprehension: An empirical study"}, {"link": "", "title": "Learning from source code history to identify performance failures"}, {"link": "", "title": "Continuous deployment at facebook and oanda"}, {"link": "", "title": "Towards a conceptual framework and tool support for linking long-term product and business planning with agile software development"}, {"link": "", "title": "Kieker: A framework for application performance monitoring and dynamic software analysis"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811928"}
{"ref": [{"link": "/document/7181703", "title": "Automatic source code summarization of context for java methods"}, {"link": "", "title": "Api documentation from source code comments: a case study of javadoc"}, {"link": "/document/402076", "title": "Program comprehension during software maintenance and evolution"}, {"link": "", "title": "Cognitive processes in program comprehension"}, {"link": "/document/4815280", "title": "A systematic survey of program comprehension through dynamic analysis"}, {"link": "", "title": "Supporting program comprehension using semantic and structural information"}, {"link": "", "title": "The relevance of software documentation, tools and technologies: a survey"}, {"link": "", "title": "Doxygen website"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}, {"link": "/document/5070524", "title": "Automatically capturing source code context of nl-queries for software maintenance and reuse"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "/document/6080777", "title": "Generating natural language summaries for crosscutting source code concerns"}, {"link": "/document/6613830", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "/document/7118751", "title": "An eye-tracking study of java programmers and application to source code summarization"}, {"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "/document/7372045", "title": "Learning to generate pseudo-code from source code using statistical machine translation (t)"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "Summarizing source code using a neural attention model"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "", "title": "Learning to mine aligned code and natural language pairs from stack overflow"}, {"link": "", "title": "Deep code comment generation"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "", "title": "UCI source code data sets"}, {"link": "", "title": "The code2text challenge: Text generation in source code libraries"}, {"link": "", "title": "Workshop on nlp for software engineering"}, {"link": "", "title": "Intelligent software engineering: Synergy between ai and software engineering"}, {"link": "", "title": "Summarizing source code with transferred api knowledge"}, {"link": "", "title": "A neural architecture for generating natural language descriptions from source code changes"}, {"link": "", "title": "Natural language models for predicting programming comments"}, {"link": "", "title": "Bimodal modelling of source code and natural language"}, {"link": "", "title": "A parallel corpus of python functions and documentation strings for automated code documentation and code generation"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Staqc: A systematically mined question-code dataset from stack overflow"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Generating text with recurrent neural networks"}, {"link": "", "title": "Summarizing software artifacts: A literature review"}, {"link": "", "title": "Effective approaches to attention-based neural machine translation"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Attention is all you need"}, {"link": "", "title": "Google's multilingual neural machine translation system: Enabling zero-shot translation"}, {"link": "", "title": "Abc-cnn: An attention based convolutional neural network for visual question answering"}, {"link": "/document/7780379", "title": "Stacked attention networks for image question answering"}, {"link": "/document/7780863", "title": "Densecap: Fully convolutional localization networks for dense captioning"}, {"link": "", "title": "Deep captioning with multimodal recurrent neural networks (m-rnn)"}, {"link": "/document/1201194", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "", "title": "Portfolio: finding relevant functions and their usage"}, {"link": "/document/7464547", "title": "Identifying auto-generated code by using machine learning techniques"}, {"link": "/document/6065176", "title": "Lightweight transformation and fact extraction with the srcml toolkit"}, {"link": "/document/6200082", "title": "@tcomment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Deep learning to detect redundant method comments"}, {"link": "", "title": "Bleu: a method for automatic evaluation of machine translation"}, {"link": "", "title": "Nltk translate bleu score calculator v3.3"}, {"link": "/document/7298935", "title": "Show and tell: A neural image caption generator"}, {"link": "", "title": "Opennmt ensemble decoding"}, {"link": "", "title": "Ensemble learning for multi-source neural machine translation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811932"}
{"ref": [{"link": "", "title": "Approaches to agile adoption in large settings: a comparison of the results from a literature analysis and an industrial inventory"}, {"link": "", "title": "A Disciplined Approach to Adopting Agile Practices: The Agile Adoption Framework"}, {"link": "", "title": "Agile Adoption and Improvement Model"}, {"link": "", "title": "A Framework to Support the Evaluation, Adoption and Improvement of Agile Methods in Practice"}, {"link": "", "title": "The XP customer role: a grounded theory"}, {"link": "/document/4599449", "title": "Scrum in a multiproject environment: An ethnographically-inspired case study on the adoption challenges"}, {"link": "", "title": "Rebalancing your Organization's Agility and Discipline"}, {"link": "", "title": "Basics of grounded theory analysis: emergence vs forcing"}, {"link": "", "title": "The discovery of grounded theory"}, {"link": "", "title": "Theoretical Sensitivity: Advances in the Methodology of Grounded Theory"}, {"link": "", "title": "The Grounded Theory Perspective III: Theoretical Coding"}, {"link": "", "title": "\u201cAgile Adoption\u201d in IT Companies-Building a Change Capability by Qualitative Description of Agile Implementation in Different Companies"}, {"link": "", "title": "The evolution of agile software development in Brazil"}, {"link": "", "title": "It's Not the Pants, it's the People in the Pants"}, {"link": "/document/7166092", "title": "An Empirical Study into Social Success Factors for Agile Software Development"}, {"link": "/document/4293573", "title": "The social nature of agile teams"}, {"link": "", "title": "Transitioning to Agile: A Framework for Pre-Adoption Analysis using Empirical Knowledge and Strategic Modeling"}, {"link": "", "title": "Using grounded theory to understand software process improvement: a study of Irish software product companies"}, {"link": "", "title": "Where Is Scrum in the Current Agile World?"}, {"link": "", "title": "A failure to learn in a software development team: the unsuccessful introduction of an agile method"}, {"link": "/document/7477924", "title": "Problems in the Adoption of Agile-Serum Methodologies: A Systematic Literature Review"}, {"link": "/document/4638670", "title": "Adopting Agile in Distributed Development"}, {"link": "", "title": "Grounded theory in software engineering research: a critical review and guidelines"}, {"link": "", "title": "Agile methods, organizational culture and agility: some insights"}, {"link": "", "title": "Qualitative researchin information systems"}, {"link": "", "title": "The agile manifesto"}, {"link": "", "title": "The Role of Communication in Agile Systems Development: An Analysis of the State of the Art"}, {"link": "", "title": "Information Technology and Organizational Change: Causal Structure in Theory and Research"}, {"link": "", "title": "Strengths and barriers behind the successful agile deployment\u2014insights from the three software intensive companies in Finland"}, {"link": "/document/7284598", "title": "Explaining Agility with a Process Theory of Change"}, {"link": "", "title": "The challenges that challenge: Engaging with agile practitioners' concerns"}, {"link": "", "title": "Software engineering process theory: A multi-method comparison of Sensemaking-Coevolution-Implementation Theory and function-behavior-structure theory"}, {"link": "", "title": "Developing a grounded theory to explain the practices of self-organizing Agile teams"}, {"link": "/document/6197202", "title": "Self-organizing roles on agile software development teams"}, {"link": "", "title": "Multi-level agile project management challenges: A self-organizing team perspective"}, {"link": "", "title": "Managing Agile Projects"}, {"link": "", "title": "Best practices in project management through a grounded theory lens"}, {"link": "", "title": "A critical examination of recent industrial surveys on agile method usage"}, {"link": "", "title": "A decade of agile methodologies: Towards explaining agile software development"}, {"link": "", "title": "An empirically-developed framework for Agile transition and adoption: A Grounded Theory approach"}, {"link": "", "title": "Obstacles in moving to agile software development methods; at a glance"}, {"link": "", "title": "VersionOne, 10th Annual state of agile software development"}, {"link": "", "title": "Serum Anti-Patterns-An Empirical Study"}, {"link": "", "title": "Out of the Crisis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985657"}
{"ref": [{"link": "", "title": "Analyzing the social ties and structure of contributors in open source software community"}, {"link": "", "title": "Mining email social networks"}, {"link": "", "title": "Peer impressions in open source organizations: A survey"}, {"link": "", "title": "Impact of developer reputation on code review outcomes in oss projects: An empirical investigation"}, {"link": "", "title": "Process Aspects and Social Dynamics of Contemporary Code Review: Insights from Open Source Development as well as Industrial Practice at Microsoft"}, {"link": "", "title": "Identifying the characteristics of vulnerable code changes: An empirical study"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Defining open source software project success"}, {"link": "/document/1463231", "title": "The freebsd project: A replication case study of open source development"}, {"link": "", "title": "Socialization in an open source software community: A socio-technical analysis"}, {"link": "", "title": "The Measurement of Interrater Agreement"}, {"link": "", "title": "Free/libre and open source software: Survey and study"}, {"link": "", "title": "The Discovery of Grounded Theory: Strategies for Qualitative Research Aldine"}, {"link": "", "title": "An exploratory study of contribution barriers experienced by newcomers to open source software projects"}, {"link": "/document/927045", "title": "Working for free? motivations of participating in open source projects"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "Joining free/open source software communities: An analysis of newbies' first interactions on project mailing lists"}, {"link": "", "title": "Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects"}, {"link": "", "title": "Two case studies of open source software development: Apache and mozilla"}, {"link": "/document/7476635", "title": "More common than you think: An in-depth study of casual contributors"}, {"link": "", "title": "How peripheral developers contribute to open-source software development"}, {"link": "", "title": "Motivation, governance, and the viability of hybrid forms in open source software development"}, {"link": "/document/5071352", "title": "Understanding the process of participating in open source communities"}, {"link": "", "title": "Social barriers faced by newcomers placing their first contribution in open source software projects"}, {"link": "", "title": "Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: a case study"}, {"link": "", "title": "Which bug should i fix: Helping new developers onboard a new project"}, {"link": "", "title": "Comparative case studies of open source software peer review practices"}, {"link": "/document/6645669", "title": "Patterns for tearing down contribution barriers to floss projects"}, {"link": "", "title": "Toward an understanding of the motivation of open source software developers"}, {"link": "/document/6880395", "title": "Who will stay in the floss community? modeling participant's initial behavior"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985661"}
{"ref": [{"link": "", "title": "Approximate nearest neighbors: Towards removing the curse of dimensionality"}, {"link": "", "title": "Near-optimal hashing algorithms for approximate nearest neighbor in high dimensions"}, {"link": "", "title": "Hyperloglog: the analysis of a near-optimal cardinality estimation algorithm"}, {"link": "", "title": "Frequency estimation of internet packet streams with limited space"}, {"link": "", "title": "Finding repeated elements"}, {"link": "", "title": "An improved data stream summary: the Count-Min sketch and its applications"}, {"link": "", "title": "Random sampling with a reservoir"}, {"link": "", "title": "Space/time trade-offs in hash coding with allowable errors"}, {"link": "", "title": "Fast monte carlo algorithms for matrices i: Approximating matrix multiplication"}, {"link": "", "title": "Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions"}, {"link": "", "title": "An introduction to matrix concentration inequalities"}, {"link": "", "title": "RandNLA: randomized numerical linear algebra"}, {"link": "/document/492204", "title": "Approximate queries and representations for large data sequences"}, {"link": "", "title": "Blinkdb: queries with bounded errors and bounded response times on very large data"}, {"link": "", "title": "Knowing when you're wrong: building fast and reliable approximate query processing systems"}, {"link": "", "title": "Abs: a system for scalable approximate queries with accuracy guarantees"}, {"link": "", "title": "Approx-hadoop: Bringing approximations to mapreduce frameworks"}, {"link": "", "title": "Verifying quantitative reliability for programs that execute on unreliable hardware"}, {"link": "", "title": "Expressing and verifying probabilistic assertions"}, {"link": "", "title": "Chisel: Reliability-and accuracy-aware optimization of approximate computational kernels"}, {"link": "", "title": "Paraprox: Pattern-based approximation for data parallel applications"}, {"link": "/document/7092472", "title": "Quality configurable reduce-and-rank for energy efficient approximate computing"}, {"link": "", "title": "Probability type inference for flexible approximate programming"}, {"link": "", "title": "Gprof: A call graph execution profiler"}, {"link": "", "title": "Statistical analysis of latency through semantic profiling"}, {"link": "", "title": "Measuring empirical computational complexity"}, {"link": "", "title": "Input-sensitive profiling"}, {"link": "", "title": "Algorithmic profiling"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Randomized algorithms"}, {"link": "", "title": "TarsosLSH"}, {"link": "", "title": "Average-case complexity"}, {"link": "", "title": "Binomial Test"}, {"link": "", "title": "Mathematical methods of statistics"}, {"link": "", "title": "Sequential tests of statistical hypotheses"}, {"link": "", "title": "Statistical methods for research workers"}, {"link": "", "title": "Numerical vs. statistical probabilistic model checking"}, {"link": "", "title": "Graphical methods for data analysis"}, {"link": "/document/7429317", "title": "Dealing with the unknown: Resilience to prediction errors"}, {"link": "", "title": "Detecting novel associations in large data sets"}, {"link": "", "title": "java-LSH github.com/tdebatty/java-LSH"}, {"link": "", "title": "libbf: Bloom filters for C++11 mavam.github.io/libbf"}, {"link": "", "title": "java-bloomfilter: github.com/MagnusS/Java-BloomFilter"}, {"link": "", "title": "Count-Min Sketch github.com/alabid/countminsketch"}, {"link": "", "title": "CountMinSketch github.com/AWNystrom/CountMinSketch"}, {"link": "", "title": "Sketches Library from Yahoo datasketches.github.io"}, {"link": "", "title": "Datasketch github.com/ekzhu/datasketch/"}, {"link": "", "title": "sample github.com/alexpreynolds/sample"}, {"link": "", "title": "Randomized Matrix Product github.com/NumericalMax/Randomized-Matrix-Product"}, {"link": "", "title": "mcsc"}, {"link": "", "title": "Accuracy-aware optimization of approximate programs"}, {"link": "", "title": "SciPy: Open source scientific tools for Python"}, {"link": "/document/7058441", "title": "All-distances sketches, revisited: Hip estimators for massive graphs analysis"}, {"link": "", "title": "Distance between sets"}, {"link": "", "title": "Coz: finding code that counts with causal profiling"}, {"link": "", "title": "Precise memory leak detection for java software using container profiling"}, {"link": "", "title": "Recursive data structure profiling"}, {"link": "/document/5070506", "title": "Holmes: Effective statistical debugging via efficient path profiling"}, {"link": "", "title": "Statistical debugging for real-world performance problems"}, {"link": "", "title": "Statistical debugging: Simultaneous identification of multiple bugs"}, {"link": "", "title": "Quality of service profiling"}, {"link": "", "title": "Automatically identifying critical input regions and code in applications"}, {"link": "", "title": "Parallelizing sequential programs with statistical accuracy tests"}, {"link": "", "title": "Precimonious: Tuning assistant for floating-point precision"}, {"link": "", "title": "Monitoring and debugging the quality of results in approximate programs"}, {"link": "", "title": "Statistical model checking of black-box probabilistic systems"}, {"link": "", "title": "On statistical model checking of stochastic systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811971"}
{"ref": [{"link": "", "title": "Endo-testing: Unit testing with mock objects"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "JMock"}, {"link": "", "title": "EasyMock"}, {"link": "", "title": "Moq"}, {"link": "", "title": "LFI: A practical and general library-level fault injector"}, {"link": "", "title": "Jaca: A reflective fault injection tool based on patterns"}, {"link": "", "title": "Detours: Binary interception of Win32 functions"}, {"link": "", "title": "Moles: Tool-assisted environment isolation with closures"}, {"link": "", "title": "Javassist"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "On the emulation of software faults by software fault injection"}, {"link": "", "title": "Experimental analysis of binary-level software fault injection in complex software"}, {"link": "", "title": "FER-RARI: A flexible software-based fault and error injection system"}, {"link": "/document/666826", "title": "Xception: A technique for the experimental evaluation of dependability in modern computers"}, {"link": "", "title": "GOOFI: Generic object-oriented fault injection tool"}, {"link": "/document/4015509", "title": "Emulation of software faults: A field data study and a practical approach"}, {"link": "", "title": "MAFALDA: Microkernel assessment by fault injection and design aid"}, {"link": "", "title": "The exception handling effectiveness of POSIX operating systems"}, {"link": "", "title": "Dependent types for low-level programming"}, {"link": "", "title": "Error propagation analysis for file systems"}, {"link": "", "title": "Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems"}, {"link": "", "title": "Mining API error-handling specifications from source code"}, {"link": "", "title": "Automatically detecting error handling bugs using error specifications"}, {"link": "", "title": "On the \u201cnaturalness\u201d of buggy code"}, {"link": "", "title": "From symptom to cause: Localizing errors in counterexample traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985696"}
{"ref": [{"link": "/document/4221612", "title": "Software engineering for automotive systems: A roadmap"}, {"link": "", "title": "Cross-layer analysis, testing and verification of automotive control software"}, {"link": "", "title": "Challenges in automotive software engineering"}, {"link": "", "title": "Hardware-software co-design of embedded systems: the POLIS approach"}, {"link": "/document/606839", "title": "An approach for quantitative analysis of application-specific dataflow architectures"}, {"link": "", "title": "Modeling and optimizing automotive electric/electronic (e/e) architectures: Towards making clafer accessible to practitioners"}, {"link": "", "title": "Synthesis and exploration of multi-level, multi-perspective architectures of automotive embedded systems"}, {"link": "", "title": "Data-efficient performance learning for configurable systems"}, {"link": "/document/7372025", "title": "Performance prediction of configurable software systems by fourier learning (t)"}, {"link": "", "title": "Spl conqueror: Toward optimization of non-functional properties in software product lines"}, {"link": "", "title": "Performance-influence models for highly configurable systems"}, {"link": "/document/8115661", "title": "Transfer learning for performance modeling of configurable systems: An exploratory analysis"}, {"link": "", "title": "Transferring performance prediction models across different hardware platforms"}, {"link": "", "title": "Modelling and multi-objective optimization of quality attributes in variability-rich software"}, {"link": "", "title": "Optimizing alloy for multi-objective software product line configuration"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Model-based optimization of automotive e/e-architectures"}, {"link": "/document/7675434", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "Long-term average cost in featured transition systems"}, {"link": "/document/6030054", "title": "Formal description of variability in product families"}, {"link": "", "title": "Multi-valued symbolic model-checking"}, {"link": "/document/6389685", "title": "Featured transition systems: Foundations for verifying variability-intensive systems and their application to ltl model checking"}, {"link": "", "title": "Assessing the functional feasibility of variability-intensive data flow-oriented systems"}, {"link": "", "title": "Behavioural modelling and verification of real-time software product lines"}, {"link": "", "title": "Composing families of timed automata"}, {"link": "", "title": "Modeling and testing product lines with unbounded parametric real-time constraints"}, {"link": "/document/6394974", "title": "Variability management of reliability models in software product lines: An expressiveness and scalability analysis"}, {"link": "/document/7027429", "title": "Modeling and verification for probabilistic properties in software product lines"}, {"link": "", "title": "Trace checking for dynamic software product lines"}, {"link": "", "title": "Priced timed automata: Algorithms and applications"}, {"link": "", "title": "Optimal strategies in priced timed game automata"}, {"link": "", "title": "Optimal scheduling using priced timed automata"}, {"link": "", "title": "Refinement and consistency of timed modal specifications"}, {"link": "", "title": "Wuppaal: Computation of worst-case execution-time for binary programs with uppaal"}, {"link": "", "title": "Robbydbms: a case study on hardware/software product line engineering"}, {"link": "/document/6966686", "title": "Product line development for modular fpga-based embedded systems"}, {"link": "/document/6928834", "title": "On hardware variability and the relation to software variability"}, {"link": "", "title": "Configuring embedded system families using feature models"}, {"link": "", "title": "From model-based design to formal verification of adaptive embedded systems"}, {"link": "", "title": "Component-based modeling and verification of dynamic adaptation in safety-critical embedded systems"}, {"link": "", "title": "Embedded system design: Embedded systems foundations of cyber-physical systems"}, {"link": "", "title": "The embedded systems design challenge"}, {"link": "/document/1173203", "title": "Taming heterogeneity-the ptolemy approach"}, {"link": "", "title": "Milan: A model based integrated simulation framework for design of embedded systems"}, {"link": "", "title": "A next-generation design framework for platform-based design"}, {"link": "", "title": "Model-driven design-space exploration for embedded systems: The octopus toolset"}, {"link": "/document/1566572", "title": "A systematic approach to exploring embedded system architectures at multiple abstraction levels"}, {"link": "", "title": "High-level frameworks for the specification and verification of scheduling problems"}, {"link": "/document/5161220", "title": "Runtime decision of hardware or software execution on a heterogeneous reconfigurable platform"}, {"link": "/document/5161199", "title": "System-level runtime mapping exploration of reconfigurable architectures"}, {"link": "/document/4796501", "title": "Variability-aware robust design space exploration of chip multiprocessor architectures"}, {"link": "", "title": "Scenario-based design flow for mapping streaming applications onto on-chip many-core systems"}, {"link": "/document/5647727", "title": "Scenario-based design space exploration of mpsocs"}, {"link": "/document/6132693", "title": "Operational mode exploration for reconfigurable systems with multiple applications"}, {"link": "/document/4696986", "title": "Robust optimization of soc architectures: A multi-scenario approach"}, {"link": "", "title": "A decision-making process for exploring architectural variants in systems engineering"}, {"link": "/document/6659011", "title": "Ivam: Implicit variant modeling and management for automotive embedded systems"}, {"link": "", "title": "Robust design of e/e architecture component platforms"}, {"link": "", "title": "Efficient design space exploration of embedded platforms"}, {"link": "/document/7967993", "title": "Featured weighted automata"}, {"link": "/document/708434", "title": "Configuring large systems using generative constraint satisfaction"}, {"link": "/document/708432", "title": "Product configuration frameworks-a survey"}, {"link": "", "title": "A user survey of configuration challenges in linux and ecos"}, {"link": "/document/6606593", "title": "Beyond boolean product-line model checking: Dealing with feature attributes and multi-features"}, {"link": "", "title": "Knowledge-based Configuration: From Research to Business Cases"}, {"link": "", "title": "Software Product Lines: Practices and Patterns, ser. SEI Series in Software Engineering"}, {"link": "", "title": "Feature-oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "Automated reasoning on feature models"}, {"link": "", "title": "Uppaala tool suite for automatic verification of real-time systems"}, {"link": "", "title": "Model checking"}, {"link": "", "title": "Metamoc: Modular execution time analysis using model checking"}, {"link": "", "title": "Handbook of Weighted Automata"}, {"link": "", "title": "Sperner Systems"}, {"link": "", "title": "Minimum-cost reachability for priced timed automata"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "Splot: software product lines online tools"}, {"link": "", "title": "Provelines: a product line of verifiers for software product lines"}, {"link": "", "title": "The SPIN Model Checker: Primer and Reference Manual"}, {"link": "", "title": "A text-based approach to feature modelling: Syntax and semantics of tvl"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems - An Approach to the State-Explosion Problem, ser. LNCS"}, {"link": "", "title": "Visualization and exploration of optimal variants in product line engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812057"}
{"ref": [{"link": "", "title": "Getting the most from map data structures in android"}, {"link": "", "title": "A study of library migrations in Java"}, {"link": "/document/6747226", "title": "Broken promises: An empirical study into evolution problems in java programs caused by library upgrades"}, {"link": "", "title": "Understanding the use of lambda expressions in Java"}, {"link": "", "title": "Seeking the ground truth: a retroactive study on the evolution and migration of software libraries"}, {"link": "", "title": "Type migration refactoring"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "", "title": "Refactoring for generalization using type constraints"}, {"link": "", "title": "Refactoring support for class library migration"}, {"link": "", "title": "Automated refactoring of legacy Java software to enumerated types"}, {"link": "", "title": "Class hierarchy specialization"}, {"link": "", "title": "SWIN: Towards Type-Safe Java Program Adaptation Between APIs"}, {"link": "", "title": "Using twinning to adapt programs to alternative apis"}, {"link": "", "title": "Efficiently refactoring Java applications to use generic libraries"}, {"link": "", "title": "MapReduce"}, {"link": "", "title": "Autoboxing"}, {"link": "", "title": "Corenlp."}, {"link": "", "title": "Formalising behaviour preserving program transformations"}, {"link": "", "title": "Guava: Google core libraries for java"}, {"link": "", "title": "Protocol buffers"}, {"link": "", "title": "The open source implementation for T2R"}, {"link": "", "title": "Flumejava: Easy, efficient data-parallel pipelines"}, {"link": "", "title": "Cassandra"}, {"link": "", "title": "Prestodb"}, {"link": "", "title": "Ne04j"}, {"link": "", "title": "Sonarqube"}, {"link": "", "title": "Stanford-corenlp"}, {"link": "", "title": "Java-design-patterns"}, {"link": "", "title": "Speedment"}, {"link": "", "title": "Refaflex: Safer refactorings for reflective Java programs"}, {"link": "", "title": "Companion website"}, {"link": "", "title": "Pregel: A System for Large-scale Graph Processing"}, {"link": "", "title": "Apache giraph"}, {"link": "", "title": "Swing to SWT and back: Patterns for API migration by wrapping"}, {"link": "", "title": "ReBA: refactoring-aware binary adaptation of evolving libraries"}, {"link": "", "title": "Generative programming techniques for Java library migration"}, {"link": "/document/565039", "title": "Semi-automatic update of applications in response to library changes"}, {"link": "", "title": "Catchup!: capturing and replaying refactorings to support API evolution"}, {"link": "/document/4359473", "title": "API-evolution support with diff-catchup"}, {"link": "", "title": "Refactoring references for library migration"}, {"link": "/document/6385124", "title": "Mining library migration graphs"}, {"link": "/document/6671294", "title": "Automatic discovery of function mappings between similar libraries"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "", "title": "Recommending adaptive changes for framework evolution"}, {"link": "", "title": "AURA: a hybrid approach to identify framework evolution"}, {"link": "", "title": "A graph-based approach to API usage adaptation"}, {"link": "/document/6676954", "title": "Large-scale automated refactoring using clangmr"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812061"}
{"ref": [{"link": "", "title": "Amazon Device Farm."}, {"link": "", "title": "Android API Guide."}, {"link": "", "title": "Android Fragmentation Visualized"}, {"link": "", "title": "Barcode Scanner."}, {"link": "", "title": "Calendula."}, {"link": "", "title": "Camera. Parameters. setRecordingHint and aspect ratio - Stack Overflow."}, {"link": "", "title": "Dashboards - Android Developers."}, {"link": "", "title": "Device List - Amazon Device Farm."}, {"link": "", "title": "F-Droid."}, {"link": "", "title": "Face Slim."}, {"link": "", "title": "GitHub."}, {"link": "", "title": "Google."}, {"link": "", "title": "Google Play."}, {"link": "", "title": "Image preview is very slow on Nexus4 - Stack Overflow."}, {"link": "", "title": "jbool expressions."}, {"link": "", "title": "LG Developer - NullPointerException in Phone Window with custom PanelView."}, {"link": "", "title": "NewsBlur."}, {"link": "", "title": "OctoDroid."}, {"link": "", "title": "Open Manga."}, {"link": "", "title": "Pivot Homepage."}, {"link": "", "title": "Simple Camera."}, {"link": "", "title": "Simple Task."}, {"link": "", "title": "Stack overflow."}, {"link": "", "title": "Stack Overflow NullPointerException."}, {"link": "", "title": "There are nowmore than 24,000 different Android devices."}, {"link": "", "title": "VLC - Android."}, {"link": "", "title": "Walleth."}, {"link": "", "title": "WeTest."}, {"link": "", "title": "Xabber."}, {"link": "", "title": "Mining API Patterns as Partial Orders from Source Code: From Usage Scenarios to Specifications"}, {"link": "", "title": "Environmental and Ecological Statistics"}, {"link": "", "title": "Achieving Accuracy and Scalability Simultaneously in Detecting Application Clones on Android Markets"}, {"link": "", "title": "Large-Scale Analysis of Framework-Specific Exceptions in Android Apps"}, {"link": "/document/8115644", "title": "Automated Cross-Platform Inconsistency Detection for Mobile Apps"}, {"link": "", "title": "Parameter-Free Probabilistic API Mining across GitHub"}, {"link": "", "title": "Minimum Spanning Trees and Single Linkage Cluster Analysis"}, {"link": "", "title": "Call Graph Construction in Object-Oriented Languages"}, {"link": "/document/6385104", "title": "Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs"}, {"link": "/document/646147", "title": "The Minimization Problem for Boolean Formulas"}, {"link": "", "title": "A tale of two cities: How webview induces bugs to android applications"}, {"link": "", "title": "Understanding and detecting callback compatibility issues for android applications"}, {"link": "", "title": "Prioritizing the Devices to Test Your App on: A Case Study of Android Game Apps"}, {"link": "", "title": "The Soot Framework for Java Program Analysis: A Retrospective"}, {"link": "", "title": "Characterizing Smartphone Usage Patterns from Millions of Android Users"}, {"link": "/document/7476661", "title": "An Investigation into the Use of Common Libraries in Android Apps"}, {"link": "", "title": "CiD: Automating the Detection of API- Related Compatibility Issues in Android Apps"}, {"link": "", "title": "PR-Miner: Automatically Extracting Implicit Programming Rules and Detecting Violations in Large Software Code"}, {"link": "", "title": "Characterizing and Detecting Performance Bugs for Smartphone Applications"}, {"link": "", "title": "DynaMine: Finding Common Error Patterns by Mining Software Revision Histories"}, {"link": "", "title": "Chex: Statically Vetting Android Apps for Component Hijacking Vulnerabilities"}, {"link": "", "title": "PRADA: Prioritizing Android Devices for Apps by Mining Large-Scale Usage Data"}, {"link": "", "title": "Mining Preconditions of APIs in Large-Scale Code Corpus"}, {"link": "", "title": "Choco Documentation. TASC - LS2N CNRS UMR 6241, COSLING S.A.S."}, {"link": "", "title": "Static Specification Inference Using Predicate Mining"}, {"link": "", "title": "Automated API Property Inference Techniques"}, {"link": "", "title": "Communication Theory of Secrecy Systems"}, {"link": "", "title": "A Tribute to Claude Shannon (1916-2001) and a Plea for More Rigorous Use of Species Richness, Species Diversity and the \u201cShannon-Wiener\u201d Index"}, {"link": "", "title": "Using Combinatorial Approaches for Testing Mobile Applications"}, {"link": "/document/6624045", "title": "Mining Succinct and High-Coverage API Usage Patterns from Source Code"}, {"link": "", "title": "Taming Android Fragmentation: Characterizing and Detecting Compatibility Issues for Android Apps"}, {"link": "", "title": "Understanding and detection fragmentation-induced compatibility issues in android apps"}, {"link": "", "title": "MAPO: Mining API Usages from Open Source Repositories"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811898"}
{"ref": [{"link": "", "title": "Reliable third-party library detection in android and its security applications"}, {"link": "", "title": "How the apache community upgrades dependencies: an evolutionary study"}, {"link": "", "title": "Exposing Library API Misuses via Mutation Analysis"}, {"link": "", "title": "The Java language specification"}, {"link": "/document/7985688", "title": "Glacier: transitive class immutability for java"}, {"link": "", "title": "Dynamic class loading in the java virtual machine"}, {"link": "", "title": "Do the dependency conflicts in my project matter?"}, {"link": "", "title": "Maven"}, {"link": "", "title": "Changelocator: locate crash-inducing changes based on crash reports"}, {"link": "", "title": "Crashlocator: locating crashing faults based on crash stacks"}, {"link": "", "title": "Issue #57"}, {"link": "", "title": "Issue #8706"}, {"link": "", "title": "Issue #501"}, {"link": "", "title": "Issue #309"}, {"link": "/document/5463280", "title": "Do stack traces help developers fix bugs?"}, {"link": "/document/7372009", "title": "Do automatically generated unit tests find real faults? an empirical study of effectiveness and challenges (t)"}, {"link": "", "title": "Azure storage"}, {"link": "", "title": "Google/truth"}, {"link": "", "title": "Webmagic"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "What makes a good bug report?"}, {"link": "/document/5487527", "title": "What makes a good bug report?"}, {"link": "", "title": "Summarizing software artifacts: a case study of bug reports"}, {"link": "", "title": "Where is the bug and how is it fixed? an experiment with practitioners"}, {"link": "/document/6681382", "title": "Debugging revisited: Toward understanding the debugging needs of contemporary software developers"}, {"link": "/document/6976084", "title": "Boosting bug-report-oriented fault localization with segmentation and stack-trace analysis"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "Isomorphic regression testing: executing uncovered branches without test augmentation"}, {"link": "", "title": "From genetic to bacteriological algorithms for mutation-based testing"}, {"link": "", "title": "Analysing the fitness landscape of search-based software testing problems"}, {"link": "", "title": "A new representation and crossover operator for search-based optimization of software modularization"}, {"link": "", "title": "Asm"}, {"link": "", "title": "Ff4j"}, {"link": "", "title": "Incubator dubbo"}, {"link": "", "title": "Jetbrick/template"}, {"link": "", "title": "Webcam/capture"}, {"link": "", "title": "Blueflood"}, {"link": "", "title": "Vertx/swagger"}, {"link": "", "title": "Apache storm"}, {"link": "", "title": "Htm.java"}, {"link": "", "title": "Incubator service"}, {"link": "", "title": "Selendroid"}, {"link": "", "title": "Hotelsdotcom/styx"}, {"link": "", "title": "Wisdom"}, {"link": "", "title": "Geowave"}, {"link": "", "title": "Mayocat shop"}, {"link": "", "title": "Vipshop/saturn"}, {"link": "", "title": "St-js"}, {"link": "/document/7967959", "title": "Evosuite at the sbst 2017 tool competition"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "On parameter tuning in search based software engineering"}, {"link": "", "title": "Issue #345"}, {"link": "", "title": "Issue #473"}, {"link": "", "title": "Issue #315"}, {"link": "", "title": "Issue #2134"}, {"link": "", "title": "Issue #39"}, {"link": "", "title": "Issue #653"}, {"link": "", "title": "Issue #829"}, {"link": "", "title": "Issue #102"}, {"link": "", "title": "Issue #816"}, {"link": "", "title": "Storm-3171"}, {"link": "", "title": "Issue #540"}, {"link": "", "title": "Issue #858"}, {"link": "", "title": "Issue #1169"}, {"link": "", "title": "Issue #227"}, {"link": "", "title": "Issue #573"}, {"link": "", "title": "Issue #1371"}, {"link": "", "title": "Issue #272"}, {"link": "", "title": "Issue #477"}, {"link": "", "title": "Issue #146"}, {"link": "", "title": "Microsoft developer"}, {"link": "", "title": "Conflictjs: finding and understanding conflicts between javascript libraries"}, {"link": "", "title": "Locus: Locating bugs from software changes"}, {"link": "", "title": "Repairing crashes in android apps"}, {"link": "", "title": "Exception handling bug hazards in android"}, {"link": "", "title": "Locating faults through automated predicate switching"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Test input generation with java pathfinder"}, {"link": "", "title": "Randoop: feedback-directed random testing for java"}, {"link": "", "title": "Mujava: a mutation system for java"}, {"link": "", "title": "Jcrasher: an automatic robustness tester for java"}, {"link": "", "title": "Dart: directed automated random testing"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automatic and scalable t-wise test case generation strategies for software product lines"}, {"link": "", "title": "Ic-cut: A compositional search strategy for dynamic test generation"}, {"link": "/document/5416728", "title": "Finding bugs in web applications using dynamic test generation and explicit-state model checking"}, {"link": "", "title": "Mutation-based test generation for plc embedded software using model checking"}, {"link": "", "title": "Test generation through programming in UDITA"}, {"link": "/document/5071042", "title": "Datec: Contextual data flow testing of java classes"}, {"link": "", "title": "Graph methods for generating test cases with universal and existential constraints"}, {"link": "", "title": "Korat: Automated testing based on java predicates"}, {"link": "/document/8367052", "title": "Invasive software testing: Mutating target programs to diversify test exploration for high test coverage"}, {"link": "/document/6200180", "title": "Guicop: Specification-based gui testing"}, {"link": "", "title": "Test suite generation with the many independent objective (mio)algorithm"}, {"link": "", "title": "Directed test generation for effective fault localization"}, {"link": "", "title": "Automatically translating bug reports into test cases for mobile apps"}, {"link": "/document/4296715", "title": "Automatic test data generation for xml schema-based partition testing"}, {"link": "", "title": "Katch: high-coverage testing of software patches"}, {"link": "/document/6083936", "title": "Automated test case generation for an autopilot requirement prototype"}, {"link": "", "title": "Test generation through programming in udita"}, {"link": "", "title": "Automatic testcase generation for flight software"}, {"link": "", "title": "Testing concurrent programs on relaxed memory models"}, {"link": "", "title": "Contessa: Concurrency testing augmented with symbolic analysis"}, {"link": "/document/7985663", "title": "A guided genetic algorithm for automated crash reproduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812128"}
{"ref": [{"link": "/document/6681334", "title": "Real Challenges in Mobile App Development"}, {"link": "", "title": "Android Testing Support Library"}, {"link": "", "title": "Sapienz: Multi-objective Automated Testing for Android Applications"}, {"link": "", "title": "Guided, Stochastic Model-Based GUI Testing of Android Apps"}, {"link": "", "title": "UI/Application Exerciser Monkey"}, {"link": "", "title": "UI Events"}, {"link": "", "title": "Automated Test Input Generation for Android: Are We Really There Yet in an Industrial Case?"}, {"link": "", "title": "Minimizing GUI Event Traces"}, {"link": "", "title": "Evodroid: Segmented Evolutionary Testing of Android Apps"}, {"link": "", "title": "Automated Concolic Testing of Smartphone Apps"}, {"link": "/document/7372031", "title": "Automated Test Input Generation for Android: Are We There Yet?(e)"}, {"link": "", "title": "Automated Model-based Android GUI Testing Using Multi-level GUI Comparison Criteria"}, {"link": "/document/8094413", "title": "AimDroid: Activity-Insulated Multi-level Automated Testing for Android Applications"}, {"link": "", "title": "DetReduce: Minimizing Android GUI Test Suites for Regression Testing"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "Activity"}, {"link": "", "title": "A Grey-box Approach for Automated GUI-model Generation of Mobile Applications"}, {"link": "", "title": "UI Automator Viewer"}, {"link": "", "title": "Android Dashboard"}, {"link": "", "title": "Accessibility"}, {"link": "/document/8115614", "title": "Crowd Intelligence Enhances Automated Mobile Testing"}, {"link": "", "title": "Android Crashes"}, {"link": "", "title": "Window Leak"}, {"link": "", "title": "Intent Fuzzer: Crafting Intents of Death"}, {"link": "", "title": "Export Activity"}, {"link": "", "title": "Large-scale Analysis of Framework-specific Exceptions in Android Apps"}, {"link": "", "title": "Android Native Crashes"}, {"link": "", "title": "Android WebView"}, {"link": "", "title": "ART and Dalvik"}, {"link": "", "title": "Taming Android Fragmentation: Characterizing and Detecting Compatibility Issues for Android Apps"}, {"link": "", "title": "Caiipa: Automated Large-scale Mobile App Testing Through Contextual Fuzzing"}, {"link": "/document/7965246", "title": "CrashScope: A Practical Tool for Automated Testing of Android Applications"}, {"link": "", "title": "Efficiently Manifesting Asynchronous Programming Errors in Android Apps"}, {"link": "", "title": "AATT+: Effectively Manifesting Concurrency Bugs in Android Apps"}, {"link": "", "title": "Prioritizing the Devices to Test Your App on: A Case Study of Android Game Apps"}, {"link": "", "title": "Efficiently, Effectively Detecting Mobile App Bugs with AppDoctor"}, {"link": "", "title": "Systematic Execution of Android Test Suites in Adverse Conditions"}, {"link": "", "title": "Finding Resume and Restart Errors in Android Applications"}, {"link": "/document/6815752", "title": "GreenDroid: Automated Diagnosis of Energy Inefficiency for Smartphone Applications"}, {"link": "", "title": "Automated Energy Optimization of HTTP Requests for Mobile Applications"}, {"link": "", "title": "Optimizing Energy Consumption of GUIs in Android Apps: A Multi-objective Approach"}, {"link": "/document/8115613", "title": "Systematically Testing Background Services of Mobile Apps"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "Targeted and Depth-First Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "PATDroid: Permission-aware GUI Testing of Android"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "Automated Testing with Targeted Event Sequence Generation"}, {"link": "", "title": "Execution and Property Specifications for JPF-android"}, {"link": "", "title": "Deploying Search Based Software Engineering with Sapienz at Facebook"}, {"link": "/document/8115615", "title": "EHBDroid: Beyond GUI Testing for Android Applications"}, {"link": "", "title": "Counterexample-Guided Abstraction Refinement"}, {"link": "/document/6472094", "title": "Using Formal Verification to Evaluate Human-Automation Interaction: A Review"}, {"link": "", "title": "Model Checking Graphical User Interfaces Using Abstractions"}, {"link": "", "title": "Monkey See, Monkey Do: Effective Generation of GUI Tests with Inferred Macro Events"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812132"}
{"ref": [{"link": "", "title": "An empirical study on the developers' perception of software coupling"}, {"link": "", "title": "Mining email social networks"}, {"link": "/document/4228643", "title": "Open borders? Immigration in open source projects"}, {"link": "", "title": "Latent social structure in open source projects"}, {"link": "", "title": "Pattern recognition and machine learning"}, {"link": "", "title": "Models of core/periphery structures"}, {"link": "", "title": "Network Analysis: Methodological Foundations"}, {"link": "", "title": "Communication networks in geographically distributed software development"}, {"link": "/document/6205767", "title": "Coordination breakdowns and their impact on development productivity and software failures"}, {"link": "", "title": "The social structure of free and open source software development"}, {"link": "", "title": "Core and periphery in free/libre and open source software team communications"}, {"link": "", "title": "Seeking the source: Software source code as a social and technical artifact"}, {"link": "/document/5710950", "title": "The awareness network, to whom should I display my actions? And, whose actions should I monitor?"}, {"link": "/document/1463231", "title": "The FreeBSD project: A replication case study of open source development"}, {"link": "", "title": "tm.plugin.mail: Text Mining E-Mail Plug-In"}, {"link": "", "title": "Time Series Analysis"}, {"link": "", "title": "Formulation and preliminary test of an empirical theory of coordination in software engineering"}, {"link": "/document/4222598", "title": "Role migration and advancement processes in OSSD projects: A comparative case study"}, {"link": "", "title": "The onion patch: Migration in open source ecosystems"}, {"link": "", "title": "Evolutionary trends of developer coordination: A network approach"}, {"link": "", "title": "From developer networks to verified communities: A fine-grained approach"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "The effect of governance on global software development: An empirical researchin transactive memory systems"}, {"link": "", "title": "Socio-technical developer networks: Should we trust our measurements?"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "", "title": "Evolution patterns of open-source software systems and communities"}, {"link": "", "title": "Characterizing key developers: A case study with Apache Ant"}, {"link": "", "title": "Hierarchical organization in complex networks"}, {"link": "", "title": "Contributor turnover in libre software projects"}, {"link": "/document/5069497", "title": "Evolution of the core team of developers in libre software projects"}, {"link": "", "title": "Guide to Advanced Empirical Software Engineering"}, {"link": "", "title": "An empirical study on the structural complexity introduced by core and peripheral developers in free software projects"}, {"link": "", "title": "Toward an understanding of the motivation open source software developers"}, {"link": "", "title": "Identification of core-periphery structure in networks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985659"}
{"ref": [{"link": "", "title": "Recrash: Making software failures reproducible by preserving object states"}, {"link": "/document/4222588", "title": "A technique for enabling and supporting debugging of field failures"}, {"link": "", "title": "Bugnet: Continuously recording program execution for deterministic replay debugging"}, {"link": "", "title": "Automatic test factoring for java"}, {"link": "", "title": "jRapture: A capture/replay tool for observation-based testing"}, {"link": "/document/6926857", "title": "Star: Stack trace based automatic crash reproduction via symbolic execution"}, {"link": "/document/7081820", "title": "Jcharming: A bug reproduction approach using crash traces and directed model checking"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "", "title": "Contract driven development= test driven development-writing test cases"}, {"link": "/document/4815375", "title": "On the effectiveness of test extraction without overhead"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "Crash reproduction via test case mutation: Let existing test cases help"}, {"link": "", "title": "Analyzing multicore dumps to facilitate concurrency bug reproduction"}, {"link": "", "title": "Sbfr: A search based approach for reproducing failures of programs with grammar based input"}, {"link": "/document/6823878", "title": "Reproducing field failures for programs with complex grammar-based input"}, {"link": "", "title": "Korat: Automated testing based on java predicates"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/6227168", "title": "Bugredux: reproducing field failures for in-house debugging"}, {"link": "", "title": "A bug reproduction approach based on directed model checking and crash traces"}, {"link": "", "title": "Evolutionary testing for crash reproduction"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "Precise identification of problems for structural test generation"}, {"link": "", "title": "Principles of model checking"}, {"link": "", "title": "T3, a Combinator-Based Random Testing Tool for Java: Benchmarking"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Pex: White box test generation for. net"}, {"link": "/document/6926828", "title": "Instance generator and problem representation to improve object oriented code coverage"}, {"link": "", "title": "1600 faults in 100 projects: Automatically finding faults while achieving high coverage with evosuite"}, {"link": "", "title": "Automatically discovering, reporting and reproducing android application crashes"}, {"link": "", "title": "Search based software engineering: Techniques, taxonomy, tutorial"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "/document/6936894", "title": "Improving multi-objective test case selection by injecting diversity in genetic algorithms"}, {"link": "", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Evosuite: On the challenges of test case generation in the real world"}, {"link": "", "title": "Regression test selection techniques for test-driven development"}, {"link": "", "title": "OCAT: Object Capture-based Automated Testing"}, {"link": "", "title": "Exception handling bug hazards in android"}, {"link": "", "title": "Parameter tuning or default values? an empirical investigation in search-based software engineering"}, {"link": "", "title": "Reformulating branch coverage as a many-objective optimization problem"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985663"}
{"ref": [{"link": "", "title": "A low-cost approximate minimal hitting set algorithm and its application to model-based diagnosis"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Spectrum-based multiple fault localization"}, {"link": "", "title": "Evaluating the accuracy of fault localization techniques"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "/document/1703390", "title": "Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria"}, {"link": "", "title": "GZoltar: An Eclipse plug-in for testing and debugging"}, {"link": "", "title": "BegBunch: Benchmarking for C bug detection tools"}, {"link": "", "title": "Software Error Analysis: A Real Case Study Involving Real Faults and Mutations"}, {"link": "", "title": "On the Use of Software Artifacts to Evaluate the Effectiveness of Mutation Analysis in Detecting Errors in Production Software"}, {"link": "", "title": "Fault density, fault types, and spectra-based fault localization"}, {"link": "", "title": "On the Use of Mutation Faults in Empirical Assessments of Test Case Prioritization Techniques"}, {"link": "", "title": "Mutations: How close are they to real faults?"}, {"link": "", "title": "Using HTML5 visualizations in software fault localization"}, {"link": "/document/296778", "title": "Experiments of the Effectiveness of Dataflow-and Controlflow-Based Test Adequacy Criteria"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Empirical evaluation of the Tarantulaautomatic fault-localization technique"}, {"link": "", "title": "HSFal: Effective Fault Localization Using Hybrid Spectrum of Full Slices and Execution Slices"}, {"link": "", "title": "The Major mutation framework: Efficient and scalable mutation analysis for Java"}, {"link": "", "title": "Defects4J: A Database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "/document/6100138", "title": "MAJOR: An efficient and extensible tool for mutation analysis in a Java compiler"}, {"link": "", "title": "Practitioners' Expectations on Automated Fault Localization"}, {"link": "", "title": "Improving spectrum based fault localisation techniques"}, {"link": "", "title": "Should i follow this fault localization tool's output?"}, {"link": "/document/6676912", "title": "Theory and practice, do they match? A case with spectrum-based fault localization"}, {"link": "", "title": "Statistical debugging: A hypothesis testing-based approach"}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "/document/6823877", "title": "Ask the mutants: Mutating faulty programs for fault localization"}, {"link": "", "title": "A model for spectra-based software diagnosis"}, {"link": "", "title": "The use of mutation in testing experiments and its sensitivity to external threats"}, {"link": "", "title": "Metallaxis-FL: Mutation-based fault localization"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Evaluating & improving fault localization techniques"}, {"link": "", "title": "Automated fault localization using potential invariants"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "Covering and uncovering equivalent mutants"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators"}, {"link": "/document/738488", "title": "Empirical evaluation of the textual differencing regression testing technique"}, {"link": "", "title": "Program slices: formal, psychological, and practical investigations of an automatic program abstraction method"}, {"link": "/document/4539531", "title": "A Crosstab-based Statistical Method for Effective Fault Localization"}, {"link": "/document/6651713", "title": "The DStar method for effective software fault localization"}, {"link": "/document/7390282", "title": "A survey of software fault localization"}, {"link": "", "title": "Effect of Test Set Minimization on Fault Detection Effectiveness"}, {"link": "", "title": "Model-based debugging or how to diagnose programs automatically"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985698"}
{"ref": [{"link": "", "title": "Wikipedia vandalism detection: Combining natural language, metadata, and reputation features"}, {"link": "", "title": "What is wrong with topic modeling? and how to fix it using search-based software engineering"}, {"link": "/document/7962392", "title": "Rationale in Development Chat Messages: An Exploratory Study"}, {"link": "", "title": "Communication, Collaboration, and Bugs: The Social Nature of Issue Tracking in Small, Collocated Teams"}, {"link": "", "title": "Journal of Artificial Intelligence Research"}, {"link": "", "title": "A survey on the use of topic models when mining software repositories"}, {"link": "", "title": "How do the open source communities address usability and ux issues?: An exploratory study"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "An extensive empirical study of feature selection metrics for text classification"}, {"link": "", "title": "Tuning for software analytics: Is it really necessary?"}, {"link": "", "title": "Work practices and challenges in pull-based development: The contributor's perspective"}, {"link": "", "title": "A framework for quality assessment of just-in-time requirements: the case of open source feature requests"}, {"link": "", "title": "Convis: A visual text analytic system for exploring blog conversations"}, {"link": "/document/8109079", "title": "Which packages would be affected by this bug report?"}, {"link": "/document/4343747", "title": "The effects of over and under sampling on fault-prone module detection"}, {"link": "", "title": "Design, discussion, and dissent in open bug reports"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "Qualitative Research: A Guide to Design and Implementation"}, {"link": "/document/7765522", "title": "Software Feature Request Detection in Issue Tracking Systems"}, {"link": "", "title": "Analysis of online discussions in support of requirements discovery"}, {"link": "", "title": "Speech-acts Based Analysis for Requirements Discovery from Online Discussions"}, {"link": "/document/7332474", "title": "How can i improve my app? classifying user reviews for software maintenance and evolution"}, {"link": "/document/4271036", "title": "Applying novel resampling strategies to software defect prediction"}, {"link": "", "title": "Summarizing software artifacts: a case study of bug reports"}, {"link": "/document/6704866", "title": "Automatic Summarization of Bug Reports"}, {"link": "", "title": "What design topics do developers discuss?"}, {"link": "", "title": "Labeled topic detection of open source software from mining mass textual project profiles"}, {"link": "", "title": "Detecting Speech Act Types in Developer restion/Answer Conversations During Bug Repair"}, {"link": "/document/7484672", "title": "Improving Automated Bug Triaging with Specialized Topic Model"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811936"}
{"ref": [{"link": "", "title": "Replication package: scripts, n-grams, and graph data"}, {"link": "/document/6624029", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Version sensitive editing: Change history as a programming tool"}, {"link": "", "title": "Generating API Call Rules from Version History and Stack Overflow Posts"}, {"link": "", "title": "Understanding the shape of java software"}, {"link": "", "title": "Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering, ESEC/FSE"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "/document/7181454", "title": "Eye movements in code reading: Relaxing the linear order"}, {"link": "", "title": "Syntax errors just aren't natural: Improving error reporting with language models"}, {"link": "", "title": "Studying the difference between natural and programming language corpora"}, {"link": "/document/972749", "title": "Cvssearch: Searching through source code using cvs comments"}, {"link": "/document/4302780", "title": "Power-laws in a large object-oriented software system"}, {"link": "", "title": "The roles beacons play in comprehension for novice and expert programmers"}, {"link": "/document/48797", "title": "How do we read algorithms? a case study"}, {"link": "", "title": "Enabling static analysis for partial java programs"}, {"link": "", "title": "Using structure-based recommendations to facilitate discoverability in APIs"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "", "title": "The java language specification: Java se7 edition"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "Are deep neural networks the best choice for modeling source code?"}, {"link": "", "title": "Proceedings of the 34th International Conference on Software Engineering, ICSE \u201812"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/8530050", "title": "On the impact of tokenizer and parameters on n-gram based code analysis"}, {"link": "", "title": "Natural language processing: a historical review"}, {"link": "", "title": "Speech and language processing"}, {"link": "", "title": "Statistical machine translation"}, {"link": "", "title": "Pattern matching for clone and concept detection"}, {"link": "", "title": "Complexity of Word Collocation Networks: A Preliminary Structural Analysis"}, {"link": "", "title": "Pravaaha: Mining android applications for discovering API call usage patterns and trends"}, {"link": "/document/7961510", "title": "the uniqueness of code redundancies"}, {"link": "", "title": "Power laws in software"}, {"link": "", "title": "Recoder Technical Manual"}, {"link": "/document/802089", "title": "Data mining library reuse patterns in user-selected applications"}, {"link": "", "title": "Performance and scalability of a large-scale n-gram based information retrieval system"}, {"link": "/document/7194632", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Accurate and efficient structural characteristic feature extraction for clone detection"}, {"link": "/document/8530029", "title": "Statistical Translation of English Texts to API Code Templates"}, {"link": "", "title": "T2API: Synthesizing API Code Usage Templates from English Texts with Statistical Translation"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Markov chains"}, {"link": "", "title": "Swim: Synthesizing what i mean: Code search and idiomatic snippet synthesis"}, {"link": "", "title": "Analyzing the Predictability of Source Code and its Application in Creating Parallel Corpora for English-to-Code Statistical Machine Translation"}, {"link": "", "title": "the naturalness of buggy code"}, {"link": "/document/7180065", "title": "The uniqueness of changes: Characteristics and applications"}, {"link": "", "title": "The graph isomorphism disease"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/4639335", "title": "How program history can improve code completion"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Readings in information retrieval"}, {"link": "", "title": "Judging a commit by its cover: Correlating commit message entropy with build status on travis-ci"}, {"link": "", "title": "Prediction and entropy of printed english"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "An algorithm for subgraph isomorphism"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "/document/4656399", "title": "Exploring regularity in source code: Software science and zipf's law"}, {"link": "/document/5580952", "title": "Markov property of markov chains and its test"}, {"link": "/document/1463228", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811940"}
{"ref": [{"link": "", "title": "Apple app store growing by over 1,000 apps per day"}, {"link": "", "title": "Bottle"}, {"link": "", "title": "Code snippet for building the rnn model"}, {"link": "", "title": "Formalizing the training as an optimization problem"}, {"link": "", "title": "Functions that are not implemented"}, {"link": "", "title": "How many new apps are added to google play everyday?"}, {"link": "", "title": "Mongodb"}, {"link": "", "title": "The monkey ui android testing tool"}, {"link": "", "title": "Official documentation of xctest apis"}, {"link": "", "title": "Pymongo"}, {"link": "", "title": "Sigmoid function"}, {"link": "", "title": "Tanh"}, {"link": "", "title": "Tensorfiow"}, {"link": "", "title": "Toronto deep learning demos"}, {"link": "", "title": "Unwrap an optional value"}, {"link": "", "title": "Tensorflow: A system for large-scale machine learning"}, {"link": "", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Symbolic execution for software testing: Three decades later"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "Monkey see, monkey do: Effective generation of gui tests with inferred macro events"}, {"link": "", "title": "Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for android applications"}, {"link": "", "title": "Fast, lean, and accurate: Modeling password guessability using neural networks"}, {"link": "", "title": "Recurrent neural network based language model"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Randoop: Feedback-directed random testing for java"}, {"link": "", "title": "Generating text with recurrent neural networks"}, {"link": "", "title": "Execution and property specifications for jpf-android"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985701"}
{"ref": [{"link": "", "title": "Refactoring: improving the design of existing code."}, {"link": "", "title": "Code complete."}, {"link": "", "title": "Implementation patterns."}, {"link": "", "title": "Clean code: a handbook of agile software craftsmanship."}, {"link": "", "title": "Don't go into programming if you don't have a good thesaurus"}, {"link": "", "title": "Arg! the 9 hardest things programmers have to do"}, {"link": "", "title": "Automatic identifier inconsistency detection using code dictionary"}, {"link": "", "title": "Concise and consistent naming"}, {"link": "", "title": "CodeTopics: which topic am i coding now?"}, {"link": "/document/6684534", "title": "Methodbook: Recommending move method refactorings via relational topic models"}, {"link": "/document/7181427", "title": "Concise and consistent naming: ten years later"}, {"link": "", "title": "The effects of comments and identifier names on program comprehensibility: an experimental investigation"}, {"link": "", "title": "Cognitive perspectives on the role of naming in computer programs"}, {"link": "/document/1631100", "title": "What's in a name? a study of identifiers"}, {"link": "/document/6776542", "title": "Repent: Analyzing the nature of identifier renamings"}, {"link": "", "title": "Linguistic antipatterns: What they are and how developers perceive them"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "/document/7884623", "title": "Shorter identifier names take longer to comprehend"}, {"link": "/document/5328661", "title": "Relating identifier naming flaws and code quality: An empirical study"}, {"link": "/document/6065171", "title": "The effect of lexicon bad smells on concept location in source code"}, {"link": "/document/6385119", "title": "Can lexicon bad smells improve fault prediction?"}, {"link": "", "title": "A systematic evaluation of api-misuse detectors"}, {"link": "", "title": "Finding bugs is easy"}, {"link": "", "title": "AspectJ"}, {"link": "", "title": "Stack overflow"}, {"link": "", "title": "Github"}, {"link": "", "title": "Debugging method names"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Class-based n-gram models of natural language"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "Distributed representations of sentences and documents"}, {"link": "", "title": "Subject independent facial expression recognition with robust face detection using a convolutional neural network"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Training restricted boltzmann machines on word observations"}, {"link": "", "title": "Document modeling with gated recurrent neural network for sentiment classification"}, {"link": "", "title": "Analysis of the paragraph vector model for information retrieval"}, {"link": "", "title": "From word embeddings to document distances"}, {"link": "", "title": "Towards universal paraphrastic sentence embeddings"}, {"link": "", "title": "Document embedding with paragraph vectors"}, {"link": "", "title": "Ask me anything: Dynamic memory networks for natural language processing"}, {"link": "", "title": "Learning semantic representations of users and products for document level sentiment classification"}, {"link": "", "title": "Convolutional neural networks for sentence classification"}, {"link": "", "title": "Semantic clustering and convolutional neural network for short text categorization"}, {"link": "", "title": "Building program vector representations for deep learning"}, {"link": "", "title": "Bimodal modelling of source code and natural language"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "Deep api learning"}, {"link": "/document/8115626", "title": "Automatically generating commit messages from diffs using neural machine translation"}, {"link": "/document/7985683", "title": "Exploring api embedding for api usages and applications"}, {"link": "", "title": "Deep code search"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "A survey of machine learning for big code and naturalness"}, {"link": "", "title": "Cross-language learning for program classification using bilateral tree-based convolutional neural networks"}, {"link": "/document/726791", "title": "Gradient-based learning applied to document recognition"}, {"link": "", "title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation"}, {"link": "", "title": "Word2vec"}, {"link": "", "title": "Distributed representations of words and phrases and their composition-ality"}, {"link": "", "title": "The java programmer's phrase book"}, {"link": "", "title": "Mining fix patterns for findbugs violations"}, {"link": "", "title": "AntMiner: mining more bugs by reducing noise interference"}, {"link": "", "title": "Unsupervised learning"}, {"link": "", "title": "Lazy learning."}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "Java naming convention"}, {"link": "/document/6080776", "title": "Mining java class naming conventions"}, {"link": "", "title": "Some implementations of the boxplot"}, {"link": "", "title": "Why should I trust you?: Explaining the predictions of any classifier"}, {"link": "", "title": "Deep learning for java"}, {"link": "", "title": "Deeplearning4j communities"}, {"link": "", "title": "Recommending rename refactorings"}, {"link": "", "title": "Improving identifier informativeness using part of speech information"}, {"link": "", "title": "code2vec: Learning distributed representations of code"}, {"link": "", "title": "An approach for evaluating and suggesting method names using n-gram models"}, {"link": "", "title": "MeCC: memory comparison-based clone detector"}, {"link": "", "title": "Code relatives: detecting similarly behaving software"}, {"link": "", "title": "Facoy-a code-to-code search engine"}, {"link": "/document/5714430", "title": "Exploring the influence of identifier names on code quality: An empirical study"}, {"link": "/document/7189745", "title": "Mining java class identifier naming conventions"}, {"link": "/document/6624056", "title": "INVocD: identifier name vocabulary dataset"}, {"link": "/document/806952", "title": "Nomen est omen: Analyzing the language of function identifiers"}, {"link": "/document/4026863", "title": "Syntactic identifier conciseness and consistency"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "/document/5601742", "title": "Improving source code lexicon via traceability and information retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812134"}
{"ref": [{"link": "", "title": "WordPress Download Manager 2.7.4 - remote code execution vulnerability"}, {"link": "", "title": "Transparent ROP exploit mitigation using indirect branch tracing"}, {"link": "", "title": "ROPecker: A generic and practical approach for defending against ROP attack"}, {"link": "", "title": "Size does matter - why using gadget chain length to prevent code-reuse attacks is hard"}, {"link": "", "title": "Stitching the gadgets: On the ineffectiveness of coarse-grained control-flow integrity protection"}, {"link": "", "title": "ROP is still dangerous: Breaking modern defenses"}, {"link": "", "title": "Utilizing code reuse or return oriented programming in PHP applications"}, {"link": "", "title": "Code reuse attacks in php: Automated pop chain generation"}, {"link": "", "title": "WordPress revslider arbitrary file upload, download & cross site scripting"}, {"link": "", "title": "A story of cyber attack and incident response"}, {"link": "", "title": "Wordpress formeraft plugin file upload vulnerability"}, {"link": "", "title": "Mute screamer-wordpress plugins"}, {"link": "", "title": "Snort - network intrusion detection & prevention system"}, {"link": "", "title": "ModSecurity: Open source web application firewall"}, {"link": "", "title": "Abstracting application-level web security"}, {"link": "", "title": "Anomalous payload-based worm detection and signature generation"}, {"link": "", "title": "Anagram: A content anomaly detector resistant to mimicry attack"}, {"link": "", "title": "Anomaly detection of web-based attacks"}, {"link": "", "title": "Using generalization and characterization techniques in the anomaly-based detection of web attacks"}, {"link": "", "title": "DARPA intrusion detection data sets"}, {"link": "", "title": "Outside the closed world: On using machine learning for network intrusion detection"}, {"link": "", "title": "A sense of self for unix processes"}, {"link": "", "title": "Enforceable security policies"}, {"link": "", "title": "Sound and precise analysis of web applications for injection vulnerabilities"}, {"link": "/document/6606611", "title": "Path sensitive static analysis of web applications for remote code execution vulnerability detection"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "", "title": "Securing web application code by static analysis and runtime protection"}, {"link": "", "title": "Saner: Composing static and dynamic analysis to validate sanitization in web applications"}, {"link": "", "title": "Pixy: A static analysis tool for detecting web application vulnerabilities (short paper)"}, {"link": "", "title": "SCRIPTGARD: Automatic context-sensitive sanitization for large-scale legacy web applications"}, {"link": "", "title": "Noncespaces: Using randomization to defeat cross-site scripting attacks"}, {"link": "", "title": "Diglossia: Detecting code injection attacks with precision and efficiency"}, {"link": "", "title": "The essence of command injection attacks in web applications"}, {"link": "", "title": "Practical control flow integrity & randomization for binary executables"}, {"link": "", "title": "Control flow integrity for COTS binaries"}, {"link": "", "title": "XFI: Software guards for system address spaces"}, {"link": "", "title": "MoCFI: A framework to mitigate control-flow attacks on smartphones"}, {"link": "", "title": "Losing control: On the effectiveness of control-flow integrity under stack attacks"}, {"link": "", "title": "Out of control: Overcoming control-flow integrity"}, {"link": "", "title": "Controlflow bending: On the effectiveness of control-flow integrity"}, {"link": "", "title": "Control jujutsu: On the weaknesses of fine-grained control flow integrity"}, {"link": "", "title": "Ccfi: Cryptographically enforced control flow integrity"}, {"link": "", "title": "Practical context-sensitive CFI"}, {"link": "", "title": "SafeDispatch: Securing C++ virtual calls from memory corruption attacks"}, {"link": "", "title": "Enforcing forward-edge control-flow integrity in GCC & LLVM"}, {"link": "", "title": "Opaque control-flow integrity"}, {"link": "", "title": "ROPdefender: A detection tool to defend against return-oriented programming attacks"}, {"link": "", "title": "Drop: Detecting return-oriented programming malicious code"}, {"link": "", "title": "Smashing the gadgets: Hindering return-oriented programming using in-place code randomization"}, {"link": "", "title": "Sok: Automated software diversity"}, {"link": "", "title": "Librando: Transparent code randomization for just-in-time compilers"}, {"link": "", "title": "BlackBox: Lightweight security monitoring for COTS binaries"}, {"link": "", "title": "Mining sandboxes"}, {"link": "", "title": "Automatically patching errors in deployed software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985665"}
{"ref": [{"link": "", "title": "American fuzzy lop (afl)fuzzer"}, {"link": "", "title": "Apache projects issues"}, {"link": "", "title": "Javaparser"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Calysto: Scalable and precise extended static checking"}, {"link": "", "title": "Path-sensitive value-flow analysis"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Tracking bad apples: reporting the origin of null and undefined value errors"}, {"link": "/document/7190050", "title": "Billions and billions of constraints: Whitebox fuzz testing in production"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Gzoltar: an eclipse plug-in for testing and debugging"}, {"link": "/document/8115718", "title": "Intpti: Automatic integer error repair with proper-type inference"}, {"link": "", "title": "Practical memory leak detection using guarded value-flow analysis"}, {"link": "", "title": "Routing in undirected graphs with constant congestion"}, {"link": "", "title": "Hardness of routing with congestion in directed graphs"}, {"link": "", "title": "Propagation of jml non-null annotations in java programs"}, {"link": "/document/7190117", "title": "Program transformations to fix c integers"}, {"link": "", "title": "Esp: Path-sensitive program verification in polynomial time"}, {"link": "/document/4700309", "title": "Changing java's semantics for handling null pointer exceptions"}, {"link": "", "title": "Software validation via scalable path-sensitive value flow analysis"}, {"link": "/document/7884635", "title": "Dynamic patch generation for null pointer exceptions using metaprogramming"}, {"link": "/document/7194597", "title": "Safe memory-leak fixing for c programs"}, {"link": "/document/7372020", "title": "Fixing recurring crash bugs via analyzing q&a sites (T)"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Information flow analysis of android applications in droidsafe"}, {"link": "", "title": "Automatic runtime recovery via error handler synthesis"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Minthint: automated synthesis of repair hints"}, {"link": "/document/7372019", "title": "Repairing programs with semantic code search (T)"}, {"link": "", "title": "Dynamic error remediation: A case study with null pointer exceptions"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Jfix: Semantics-based repair of java programs via symbolic pathfinder"}, {"link": "", "title": "S3: Syntax-and semantic-guided repair synthesis via programming by examples"}, {"link": "", "title": "History driven program repair"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Memfix: static analysis-based repair of memory deallocation errors for c"}, {"link": "", "title": "Boosting the performance of flow-sensitive points-to analysis using value flow"}, {"link": "", "title": "Have things changed now?: an empirical study of bug characteristics in modern open source software"}, {"link": "", "title": "Verifying dereference safety via expanding-scope analysis"}, {"link": "", "title": "Modular and verified automatic program repair"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Automatic runtime error repair and containment via recovery shepherding"}, {"link": "", "title": "Unisan: Proactive kernel memory initialization to eliminate data leakages"}, {"link": "", "title": "Null dereference verification via over-approximated weakest pre-conditions analysis"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the defects4j dataset"}, {"link": "/document/7194596", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for java"}, {"link": "/document/5070515", "title": "Accurate interprocedural null-dereference analysis for java"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "/document/8115675", "title": "ELIXIR: effective object oriented program repair"}, {"link": "", "title": "Cute: A concolic unit testing engine for c"}, {"link": "/document/6903573", "title": "Automatically fixing c buffer overflows using program transformations"}, {"link": "", "title": "Pinpoint: Fast and precise sparse value flow analysis for million lines of code"}, {"link": "", "title": "Pick your contexts well: understanding object-sensitivity"}, {"link": "", "title": "Ide al: Efficient and precise alias-aware dataflow analysis"}, {"link": "", "title": "Boomerang: Demand-driven flow-and context-sensitive pointer analysis for java"}, {"link": "", "title": "Precise null-pointer analysis"}, {"link": "", "title": "Refinement-based context-sensitive points-to analysis for java"}, {"link": "", "title": "The value flow graph: A program representation for optimal program transformations"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators"}, {"link": "", "title": "On-demand strong update analysis via value-flow refinement"}, {"link": "", "title": "SVF: interprocedural static value-flow analysis in llvm"}, {"link": "", "title": "Static memory leak detection using full-sparse value-flow analysis"}, {"link": "", "title": "Repairing crashes in android apps"}, {"link": "", "title": "Making k-object-sensitive pointer analysis more precise with still k-limiting"}, {"link": "", "title": "Efficient and precise points-to analysis: modeling the heap by merging equivalent automata"}, {"link": "", "title": "Automatically diagnosing and repairing error handling bugs in c"}, {"link": "", "title": "Soot: A java bytecode optimization framework"}, {"link": "", "title": "Static automated program repair for heap properties"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "/document/5070536", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Programmers use slices when debugging"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "", "title": "Debugging of globally optimized programs using data flow analysis"}, {"link": "", "title": "A survey on software fault localization"}, {"link": "/document/8115676", "title": "Leveraging syntax-related code for automated program repair"}, {"link": "", "title": "Identifying patch correctness in test-based program repair"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/6976085", "title": "Learning to combine multiple ranking metrics for fault localization"}, {"link": "", "title": "Automated memory leak fixing on value-flow slices for c programs"}, {"link": "", "title": "Spatio-temporal context reduction: A pointer-analysis-based static approach for detecting use-after-free vulnerabilities"}, {"link": "", "title": "Accelerating dynamic detection of uses of undefined values with static value-flow analysis"}, {"link": "", "title": "Intpatch: Automatically fix integer-overflow-to-buffer-overflow vulnerability at compile-time"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812101"}
{"ref": [{"link": "", "title": "A study on tolerable waiting time: how long are web users willing to wait?"}, {"link": "", "title": "Speed is a killer"}, {"link": "", "title": "Startup = growth"}, {"link": "", "title": "How not to structure your database-backed web applications: a study of performance bugs in the wild"}, {"link": "", "title": "tracks, a task management application"}, {"link": "", "title": "tracks-870"}, {"link": "", "title": "More deeply, the framework exists to separate the representation of information from user interaction"}, {"link": "", "title": "chrome development tool"}, {"link": "", "title": "active record query trace"}, {"link": "", "title": "Performance issues and optimizations in javascript: an empirical study"}, {"link": "/document/7451264", "title": "Finding and evaluating the performance impact of redundant data access for applications that are developed using object-relational mapping frameworks"}, {"link": "", "title": "Powerstation: Automatically detecting and fixing inefficiencies of database-backed web applications in ide"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Jruby"}, {"link": "", "title": "will-paginate tool package"}, {"link": "", "title": "A study and toolkit for asynchronous programming in c"}, {"link": "", "title": "Study and refactoring of android asynchronous programming"}, {"link": "", "title": "Retrofitting concurrency for android applications through refactoring"}, {"link": "", "title": "Discourse-4663 issue report"}, {"link": "", "title": "asynchronous rendering library"}, {"link": "", "title": "jquery"}, {"link": "", "title": "Meantime: Achieving both minimal energy and timeliness with approximate computing"}, {"link": "", "title": "Query processing, approximation, and resource management in a data stream management system"}, {"link": "", "title": "Histogram-based approximation of set-valued query-answers"}, {"link": "", "title": "redmine, a project management application"}, {"link": "", "title": "Rubymine, a popular ruby on rails ide"}, {"link": "", "title": "Aws cloud9"}, {"link": "", "title": "Panorama website"}, {"link": "", "title": "Detecting performance anti-patterns for applications developed using object-relational mapping"}, {"link": "", "title": "Understanding database performance inefficiencies in real-world web applications"}, {"link": "", "title": "Optimizing database-backed applications with query synthesis"}, {"link": "", "title": "Automatically leveraging mapreduce frameworks for data-intensive applications"}, {"link": "", "title": "Automatic partitioning of database applications"}, {"link": "", "title": "Sloth: Being Lazy is a Virtue (when Issuing Database Queries)"}, {"link": "", "title": "Leveraging parallel data processing frameworks with verified lifting"}, {"link": "/document/6224281", "title": "A qualitative study on performance bugs"}, {"link": "", "title": "Catch me if you can: performance bug detection in the wild"}, {"link": "/document/7190094", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "/document/7985677", "title": "Performance diagnosis for inefficient loops"}, {"link": "", "title": "Pcatch: automatically detecting performance cascading bugs in cloud systems"}, {"link": "", "title": "CARAMEL: detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "A scalable technique for characterizing the usage of temporaries in framework-intensive java applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811938"}
{"ref": [{"link": "", "title": "APPLAUSE"}, {"link": "", "title": "GitHub"}, {"link": "", "title": "Google Code"}, {"link": "", "title": "Google Code Archive"}, {"link": "", "title": "Google Play Data"}, {"link": "", "title": "Mark message as unread make app crash"}, {"link": "", "title": "ReCDroid"}, {"link": "", "title": "UI Automator"}, {"link": "", "title": "UI/Application Exerciser Monkey"}, {"link": "", "title": "Word2vec"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "/document/6786194", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "/document/632822", "title": "Processing natural language requirements"}, {"link": "", "title": "Debugadvisor: a recommender system for debugging"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Class-based n-gram models of natural language"}, {"link": "", "title": "Bugzilla keyword descriptions"}, {"link": "", "title": "Detecting missing information in bug descriptions"}, {"link": "/document/8812043", "title": "Storydroid: Automated generation of storyboard for Android apps"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "", "title": "Efficiently manifesting asynchronous programming errors in android apps"}, {"link": "", "title": "Large-scale analysis of framework-specific exceptions in android apps"}, {"link": "", "title": "Automatically translating bug reports into test cases for mobile apps"}, {"link": "", "title": "Martin Fowler and Matthew Foemmel. Continuous integration. Thought-Works"}, {"link": "/document/5463340", "title": "Identifying security bug reports via text mining: An industrial case study"}, {"link": "", "title": "Learning from bug reports to understand and generate performance test frames"}, {"link": "", "title": "Puma: programmable ui-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "spacy 2: Natural language understanding with bloom embeddings, convolutional neural networks and incremental parsing"}, {"link": "", "title": "Foster. Symdroid: Symbolic execution for dalvik bytecode"}, {"link": "", "title": "Cohen, XiaoQu, and Brian Robinson. Preffinder: getting the right preference in configurable software systems"}, {"link": "", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Natural language processing and text mining"}, {"link": "", "title": "Knowledge Base Population"}, {"link": "", "title": "Improving distributional similarity with lessons learned from word embeddings"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "", "title": "Sapienz: Multi-objective automated testing for android applications"}, {"link": "/document/6998838", "title": "Using recurrent neural networks for slot filling in spoken language understanding"}, {"link": "", "title": "Auto-completing bug reports for android applications"}, {"link": "/document/7515457", "title": "Automatically discovering, reporting and reproducing android application crashes"}, {"link": "", "title": "On mining concurrency defect-related reports from bug repositories"}, {"link": "", "title": "Automatic summarization of bug reports"}, {"link": "/document/7675447", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "Fsmdroid: Guided gui testing of android apps"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "/document/6100061", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "ACM SIGOPS Operating Systems Review"}, {"link": "/document/4470313", "title": "Topical n-grams: Phrase and topic discovery, with an application to information retrieval"}, {"link": "", "title": "Analyzing multicore dumps to facilitate concurrency bug reproduction"}, {"link": "/document/7181432", "title": "Generating reproducible and replayable bug reports from android application crashes"}, {"link": "/document/7194611", "title": "Dase: Document-assisted symbolic execution for improving automated software testing"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Descry: reproducing system-level concurrency failures"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Robotium Automated Testing for Android"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "Inferring test models from kate's bug reports using multi-objective search"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811942"}
{"ref": [{"link": "", "title": "An ethnographic study of copy and paste programming practices in oopl"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "", "title": "CP-Miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "/document/514697", "title": "On finding duplication and near-duplication in large software systems"}, {"link": "/document/1541846", "title": "Cloning by accident: an empirical study of source code cloning across software systems"}, {"link": "/document/4656397", "title": "An empirical study of function clones in open source software"}, {"link": "", "title": "An empirical study of operating system errors"}, {"link": "", "title": "Do code clones matter?"}, {"link": "/document/1695784", "title": "Cognitive view of reuse and redesign"}, {"link": "/document/4222606", "title": "Supporting the investigation and planning of pragmatic reuse tasks"}, {"link": "/document/7194566", "title": "Interactive code review for systematic changes"}, {"link": "", "title": "Detection of recurring software vulnerabilities"}, {"link": "/document/6693095", "title": "Detecting and characterizing semantic inconsistencies in ported code"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "The major mutation framework: Efficient and scalable mutation analysis for java"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Automated software transplantation"}, {"link": "", "title": "Using genetic improvement and code transplants to specialise a c++ program to a problem class"}, {"link": "", "title": "Babel pidgin: Sbse can grow and graft entirely new functionality into a real world system"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Levenshtein distance wikipedia"}, {"link": "", "title": "Stable marriage problem (smp) wikipedia"}, {"link": "", "title": "The development of a software clone detector"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "/document/1702959", "title": "Weak mutation testing and completeness of test sets"}, {"link": "", "title": "From weak to strong, dead or alive? an analysis of some mutation testing issues"}, {"link": "", "title": "Efficient mutation analysis by propagating and partitioning infected execution states"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?[software testing]"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing"}, {"link": "", "title": "Systematic editing: generating program transformations from an example"}, {"link": "", "title": "Semi-automating small-scale source code reuse via structural correspondence"}, {"link": "", "title": "Validating pragmatic reuse tasks by leveraging existing test suites"}, {"link": "", "title": "Systematizing pragmatic software reuse"}, {"link": "", "title": "Semi-automating small-scale source code reuse via structural correspondence"}, {"link": "", "title": "Active refinement of clone anomaly reports"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "/document/6227874", "title": "Semantic clone detection using method ioe-behavior"}, {"link": "/document/7069882", "title": "An execution-semantic and content-and-context-based code-clone detection and analysis"}, {"link": "", "title": "Active clones: Source code clones at runtime"}, {"link": "", "title": "Code similarities beyond copy & paste"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Controllable combinatorial coverage in grammar-based testing"}, {"link": "/document/4222623", "title": "Randomized differential testing as a prelude to formal verification"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Automatic test factoring for java"}, {"link": "", "title": "Selective capture and replay of program executions"}, {"link": "", "title": "Carving differential unit test cases from system test cases"}, {"link": "", "title": "Pruning interference and ready dependence for slicing concurrent java programs"}, {"link": "", "title": "Towards a framework for differential unit testing of object-oriented programs"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985703"}
{"ref": [{"link": "", "title": "On scheduling constraint abstraction for multi-threaded program verification"}, {"link": "", "title": "2017 software verification competition"}, {"link": "", "title": "2018 software verification competition"}, {"link": "", "title": "Tarmo: A framework for parallelized bounded model checking"}, {"link": "", "title": "YOGAR-CBMC: CBMC with scheduling constraint based abstraction refinement-(competition contribution)"}, {"link": "", "title": "Optimal dynamic partial order reduction"}, {"link": "", "title": "Divine 3.0 - an explicit-state model checker for multithreaded C & C++ programs"}, {"link": "", "title": "Bounded partial-order reduction"}, {"link": "", "title": "Stateless model checking concurrent programs with maximal causality reduction"}, {"link": "", "title": "Partial orders for efficient bounded model checking of concurrent software"}, {"link": "", "title": "Vienna verification tool: IC3 for parallel software - (competition contribution)"}, {"link": "", "title": "Bounded model checking of multi-threaded C programs via lazy sequentialization"}, {"link": "", "title": "Verifying concurrent programs by memory unwinding"}, {"link": "", "title": "Succinct representation of concurrent trace sets"}, {"link": "", "title": "On interference abstractions"}, {"link": "", "title": "Thread-modular counterexample-guided abstraction refinement"}, {"link": "", "title": "Threader: A constraint-based verifier for multi-threaded programs"}, {"link": "/document/8133152", "title": "Parallel and distributed methods in verification"}, {"link": "", "title": "Detecting harmful data races through parallel verification"}, {"link": "", "title": "Parallelizing the murj verifier"}, {"link": "/document/4302778", "title": "The design of a multicore extension of the SPIN model checker"}, {"link": "", "title": "Parallel and distributed model checking in Eddy"}, {"link": "/document/5637433", "title": "Parallel partial order reduction with topological sort proviso"}, {"link": "/document/5698463", "title": "Divine: Parallel distributed model checker"}, {"link": "", "title": "Distributed dynamic partial order reduction"}, {"link": "", "title": "Partial-order reduction for GPU model checking"}, {"link": "", "title": "Designing fast LTL model checking algorithms for many-core gpus"}, {"link": "", "title": "Efficient explicit-state model checking on general purpose graphics processors"}, {"link": "", "title": "GPUexplore: Many-core on-the-fly state space exploration using GPUs"}, {"link": "/document/7384234", "title": "GPU accelerated on-the-fly reachability checking"}, {"link": "", "title": "Control-based clause sharing in parallel SAT solving"}, {"link": "", "title": "An overview of parallel SAT solving"}, {"link": "", "title": "Lazy clause exchange policy for parallel SAT solvers"}, {"link": "/document/8133153", "title": "Parallel SAT solving in bounded model checking"}, {"link": "", "title": "PKind: A parallel k-induction based model checker"}, {"link": "", "title": "Concurrent bounded model checking"}, {"link": "", "title": "SAT-based model checking without unrolling"}, {"link": "", "title": "Model checking with multi-threaded IC3 portfolios"}, {"link": "/document/8115686", "title": "Parallel bug-finding in concurrent programs via reduced interleaving instances"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812136"}
{"ref": [{"link": "", "title": "Lamp stack"}, {"link": "", "title": "Linux"}, {"link": "", "title": "Apache web server"}, {"link": "", "title": "Mysql database server"}, {"link": "", "title": "Php-interpreter"}, {"link": "", "title": "Wordpress"}, {"link": "", "title": "Drupal"}, {"link": "", "title": "J2ee"}, {"link": "", "title": "Mean"}, {"link": "", "title": "Confdiagnoser: An automated configuration error diagnosis tool for java software"}, {"link": "", "title": "Which configuration option should i change?"}, {"link": "", "title": "Fixing configuration inconsistencies across file type boundaries"}, {"link": "", "title": "Feature consistency in compile-time-configurable system software: Facing the linux 10,000 feature problem"}, {"link": "", "title": "Smartfixer: Fixing software configurations based on dynamic priorities"}, {"link": "/document/6991616", "title": "Range fixes: Interactive error resolution for software configuration"}, {"link": "", "title": "Tracking load-time configuration options"}, {"link": "", "title": "Mining configuration constraints: Static analyses and empirical results"}, {"link": "", "title": "An empirical study on configuration errors in commercial and open source systems"}, {"link": "", "title": "Systems approaches to tackling configuration errors: A survey"}, {"link": "", "title": "Configurations everywhere: Implications for testing and debugging in practice"}, {"link": "", "title": "Data set of empirical evaluation"}, {"link": "", "title": "Multi-layer software configuration - empirical study on word-press"}, {"link": "", "title": "Exploring variability-aware execution for testing plugin-based web applications"}, {"link": "/document/6693098", "title": "Dangling references in multi-configuration and dynamic php-based web applications"}, {"link": "", "title": "Identifying and locating interference issues in php applications: The case of word-press"}, {"link": "", "title": "A user survey of configuration challenges in linux and ecos"}, {"link": "", "title": "Characterizing configuration problems in java ee application servers: An empirical study with glassfish and jboss"}, {"link": "", "title": "A comparison of 10 sampling algorithms for configurable systems"}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "Practical and accurate pinpointing of configuration errors using static analysis"}, {"link": "", "title": "Automating configuration troubleshooting with dynamic information flow analysis"}, {"link": "", "title": "Do not blame users for misconfigurations"}, {"link": "/document/7476675", "title": "A large scale study of multiple programming languages and code quality"}, {"link": "", "title": "Cross-language program slicing for dynamic web applications"}, {"link": "", "title": "The sorting techniques: a tutorial paper on card sorts, picture sorts and item sorts"}, {"link": "", "title": "Max input vars error"}, {"link": "", "title": "Wp configuration error"}, {"link": "", "title": "Apache configuration error"}, {"link": "", "title": "Example of a system file permission error"}, {"link": "", "title": "Wp override problem"}, {"link": "", "title": "Program slicing"}, {"link": "/document/4659249", "title": "Program slicing"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "An empirical study of php feature usage: A static analysis perspective"}, {"link": "", "title": "Sloc count user's guide"}, {"link": "", "title": "Phpslicer: Slicing dynamically typed programming language-case study on php web apps"}, {"link": "", "title": "Backslicer: A lightweight backward slicer"}, {"link": "", "title": "Superglobal variables"}, {"link": "", "title": "Understanding asynchronous interactions in full-stack javascript"}, {"link": "/document/7774516", "title": "Colua: Automatically predicting configuration bug reports and extracting configuration options"}, {"link": "", "title": "DevOps: A Software Architect's Perspective"}, {"link": "", "title": "How social Q&A sites are changing knowledge sharing in open source software communities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985667"}
{"ref": [{"link": "", "title": "A bibliometric analysis of 20 years of research on software product lines"}, {"link": "/document/8106869", "title": "Context-aware software variability through adaptable interpreters"}, {"link": "/document/4543990", "title": "Evaluating formal properties of feature diagram languages"}, {"link": "", "title": "Cool features and tough decisions: a comparison of variability modeling approaches"}, {"link": "", "title": "A systematic mapping study of information visualization for software product line engineering"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "Generative Programming: Methods, Tools, and Applications"}, {"link": "/document/4626837", "title": "Sample spaces and feature models: There and back again"}, {"link": "/document/6030043", "title": "Optimizing user guidance during decision-making"}, {"link": "", "title": "C2O configurator: a tool for guided decision-making"}, {"link": "", "title": "A feature-based personalized recommender system for product-line configuration"}, {"link": "", "title": "A literature review on feature diagram product counting and its usage in software product line economic models"}, {"link": "", "title": "Visual guidance for product line configuration using recommendations and non-functional properties"}, {"link": "", "title": "Quan-titative analysis of probabilistic models of software product lines with statistical model checking"}, {"link": "", "title": "Feature Models, Grammars, and Propositional Formulas"}, {"link": "", "title": "Formal Semantics of the CDL Language"}, {"link": "", "title": "Mastering Variability Challenges in Linux and Related Highly-Configurable System Software"}, {"link": "", "title": "Formal semantics of the kconfig language"}, {"link": "/document/1676819", "title": "Graph-based algorithms for boolean function manipulation"}, {"link": "", "title": "Sylvan: multi-core framework for decision diagrams"}, {"link": "", "title": "Feature-Oriented Software Product Lines: Concepts and Implementation"}, {"link": "/document/6572787", "title": "A study of variability models and languages in the systems software domain"}, {"link": "", "title": "The Structured Intuitive Model for Product Line Economics (SIMPLE)"}, {"link": "/document/7322184", "title": "Efficient identification of core and dead features in variability models"}, {"link": "", "title": "Algorithms and Data Structures in VLSI Design: OBDD - Foundations and Applications"}, {"link": "", "title": "Logic in Computer Science: Modelling and Reasoning about Systems"}, {"link": "", "title": "Propagating configuration decisions with modal implication graphs"}, {"link": "", "title": "A comparison of decision modeling approaches in product lines"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles, and Techniques"}, {"link": "", "title": "Three-dimensional feature diagrams visualization"}, {"link": "", "title": "View infinity: a zoomable interface for feature-oriented software development"}, {"link": "/document/7516851", "title": "Musa: A scalable multi-touch and multi-perspective variability management tool"}, {"link": "/document/7332417", "title": "A visual support for decomposing complex feature models"}, {"link": "", "title": "Statistical model checking for product lines"}, {"link": "", "title": "A framework for quantitative modeling and analysis of highly (re) configurable systems"}, {"link": "/document/6980213", "title": "Feature relations graphs: A visualisation paradigm for feature constraints in software product lines"}, {"link": "/document/6835200", "title": "A scalable approach to exact model and commonality counting for extended feature models"}, {"link": "", "title": "Doing Bayesian Data Analysis, 2nd Edition: a Tutorial with R, JAGS, and Stan"}, {"link": "", "title": "Handbook of Satisfiability"}, {"link": "", "title": "SDD: A New Canonical Representation of Propositional Knowledge Bases"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811977"}
{"ref": [{"link": "", "title": "Grodddroid: a gorilla for triggering malicious behaviors"}, {"link": "/document/6100082", "title": "Automated web application testing using search based software engineering"}, {"link": "", "title": "Android security 2015 year in review"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Using targeted symbolic execution for reducing false-positives in dataflow analysis"}, {"link": "/document/6100119", "title": "Symbolic search-based testing"}, {"link": "", "title": "Dexpler: Converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Exe: automatically generating inputs of death"}, {"link": "", "title": "Symbolic execution for software testing: Three decades later"}, {"link": "", "title": "Automatic static unpacking of malware binaries"}, {"link": "", "title": "Z3: An Efficient SMT Solver"}, {"link": "", "title": "Taintdroid: an information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "/document/7546513", "title": "Triggerscope: Towards detecting logic bombs in android applications"}, {"link": "", "title": "Androidleaks: Automatically detecting potential privacy leaks in android applications on a large scale"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Information-flow analysis of android applications in droidsafe"}, {"link": "", "title": "Model checking java programs using java pathfinder"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Rozzle: Decloaking internet malware"}, {"link": "", "title": "Iccta: Detecting inter-component privacy leaks in android apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "/document/6100092", "title": "Combining search-based and constraint-based testing"}, {"link": "", "title": "Testing android apps through symbolic execution"}, {"link": "", "title": "Exploring multiple execution paths for malware analysis"}, {"link": "", "title": "Vietnamese adult apps on google play open gate to sms trojans"}, {"link": "", "title": "Effective inter-component communication mapping in android: An essential step towards holistic security analysis"}, {"link": "", "title": "X-force: Force-executing binary programs for security applications"}, {"link": "", "title": "Harvesting runtime values in android applications that feature anti-analysis techniques"}, {"link": "", "title": "How current android malware seeks to evade automated code analysis"}, {"link": "", "title": "Appsplayground: Automatic security analysis of smartphone applications"}, {"link": "", "title": "Intent fuzzer: crafting intents of death"}, {"link": "", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Synthesizing method sequences for high-coverage testing"}, {"link": "", "title": "Soot - a Java bytecode optimization framework"}, {"link": "", "title": "Intellidroid: A targeted input generator for the dynamic analysis of android malware"}, {"link": "", "title": "Goldeneye: Efficiently and effectively unveiling malwares targeted environment"}, {"link": "", "title": "Droidscope: Seamlessly reconstructing the os and dalvik semantic views for dynamic android malware analysis"}, {"link": "", "title": "Droidfuzzer: Fuzzing the android apps with intent-filter tag"}, {"link": "", "title": "Z3-str: A z3-based string solver for web application analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985671"}
{"ref": [{"link": "", "title": "Ethir: A framework for high-level analysis of ethereum bytecode"}, {"link": "", "title": "Dissecting ponzi schemes on ethereum: identification"}, {"link": "", "title": "Formal verification of smart contracts: Short paper"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "/document/7884650", "title": "Under-optimized smart contracts devour your money"}, {"link": "", "title": "Efficiently computing static single assignment form and the control dependence graph"}, {"link": "", "title": "Defining and continuous checking of structural program dependencies"}, {"link": "", "title": "Decompilation of java bytecode to prolog by partial evaluation"}, {"link": "", "title": "Madmax: Surviving out-of-gas conditions in ethereum smart contracts"}, {"link": "", "title": "Online detection of effectively callback free objects with applications to smart contracts"}, {"link": "", "title": "Codequest: Scalable source code queries with Datalog"}, {"link": "/document/5279917", "title": "An evaluation of current java bytecode decompilers"}, {"link": "", "title": "Souffle: On synthesis of program analyzers"}, {"link": "", "title": "Zeus: Analyzing safety of smart contracts"}, {"link": "", "title": "Eveem/Panoramix - Showing Contract Sources since 2018, 2018"}, {"link": "", "title": "Context-sensitive program analysis as database queries"}, {"link": "", "title": "The Java Virtual Machine Specification, Java SE 8 Edition"}, {"link": "", "title": "Making smart contracts smarter"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Designing secure ethereum smart contracts"}, {"link": "", "title": "Decompiling java bytecode: Problems, traps and pitfalls"}, {"link": "", "title": "Smashing ethereum smart contracts for fun and real profit"}, {"link": "", "title": "Effective static race detection for java"}, {"link": "/document/5070538", "title": "Effective static deadlock detection"}, {"link": "", "title": "Finding the greedy, prodigal, and suicidal contracts at scale"}, {"link": "", "title": "Krakatoa: Decompilation in Java (does bytecode reveal source?)"}, {"link": "", "title": "Demand interprocedural program analysis using logic databases"}, {"link": "", "title": "Pointer analysis"}, {"link": "", "title": "Introspective analysis: Context-sensitivity, across the board"}, {"link": "", "title": "Various. Eip 214 - new opcode staticcall"}, {"link": "", "title": "Various. Ethereum function signature database"}, {"link": "", "title": "Various. JODE - Java Optimize and Decompile Environment"}, {"link": "", "title": "Various. Porosity - a decompiler for EVM bytecode into readable Solidity-syntax contracts"}, {"link": "", "title": "Various. Rattle - An EVM Binary Static Analysis Framework, 2018"}, {"link": "", "title": "Various. Vandal - A Static Analysis Framework for Ethereum Bytecode"}, {"link": "", "title": "Using Datalog with binary decision diagrams for program analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811905"}
{"ref": [{"link": "", "title": "Archetypal internet-scale source code searching"}, {"link": "/document/5070022", "title": "Internet-scale code search"}, {"link": "", "title": "Two studies of opportunistic programming: interleaving web foraging, learning, and writing code"}, {"link": "", "title": "How developers search for code: a case study"}, {"link": "", "title": "Usage and attribution of stack overflow code snippets in github projects"}, {"link": "", "title": "How do developers utilize source code from stack overflow?"}, {"link": "", "title": "Are code examples on an online q&a forum reliable?: a study of api misuse on stack overflow"}, {"link": "/document/7958574", "title": "Stack overflow considered harmful? the impact of copy&paste on android application security"}, {"link": "", "title": "Api deprecation: a retrospective analysis and detection method for code examples on the web"}, {"link": "/document/8094452", "title": "Understanding stack overflow code fragments"}, {"link": "", "title": "Sourcerercc: Scaling code clone detection to big-code"}, {"link": "/document/7884629", "title": "Stack overflow: a code laundering platform?"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "Semi-automating small-scale source code reuse via structural correspondence"}, {"link": "", "title": "Snipmatch: Using source code context to enhance snippet retrieval and parameterization"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Micro pattern evolution"}, {"link": "/document/1631103", "title": "Classifying change types for qualifying change couplings"}, {"link": "", "title": "The promises and perils of mining github"}, {"link": "", "title": "D\u00e9j\u00e0vu: a map of code duplicates on github"}, {"link": "/document/6224294", "title": "Ghtorrent: Github's data from a firehose"}, {"link": "", "title": "Stack Overflow data dump"}, {"link": "/document/6624012", "title": "Making sense of online code snippets"}, {"link": "", "title": "From query to usable code: an analysis of stack overflow code snippets"}, {"link": "", "title": "Live api documentation"}, {"link": "/document/7962378", "title": "Stack overflow in github: any snippets there?"}, {"link": "", "title": "Qualitative Research Methods for the Social Sciences"}, {"link": "", "title": "Effective interprocedural resource leak detection"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "", "title": "Get OS-level system information"}, {"link": "", "title": "A GitHub clone that gets the CPU usage"}, {"link": "", "title": "Adding new paths for native libraries at runtime in Java"}, {"link": "", "title": "A GitHub clone that adds new paths for native libraries at runtime in Java"}, {"link": "", "title": "How to get IP address of the device from code?"}, {"link": "", "title": "A GitHub clone about how to get IP address from an Android device"}, {"link": "", "title": "JSlider question: Position after leftclick"}, {"link": "", "title": "A GitHub clone about JSlide"}, {"link": "", "title": "Another GitHub clone about JSlide"}, {"link": "", "title": "A GitHub clone that downloads videos from YouTube"}, {"link": "", "title": "Youtube data API: Get access to media stream and play (JAVA)"}, {"link": "", "title": "Local regression models"}, {"link": "/document/6405249", "title": "What makes a good code example?: A study of programming q&a in stackoverflow"}, {"link": "", "title": "Add Lat and Long to ArrayList"}, {"link": "", "title": "ColorBrewer: Color Advice for Maps"}, {"link": "", "title": "Calculate distance in meters when you know longitude and latitude in java"}, {"link": "", "title": "Construct a relative path in Java from two absolute paths"}, {"link": "", "title": "How to use SHA-256 with Android"}, {"link": "", "title": "How can I add animations to existing UI components?"}, {"link": "", "title": "An integrated approach for studying architectural evolution"}, {"link": "", "title": "Tracking structural evolution using origin analysis"}, {"link": "", "title": "Detecting merging and splitting using origin analysis"}, {"link": "/document/1401931", "title": "Using origin analysis to detect merging and splitting of source code entities"}, {"link": "/document/6233404", "title": "Harnessing stack overflow for the ide"}, {"link": "/document/7190193", "title": "Seahawk: Stack overflow in the ide"}, {"link": "", "title": "Mining stackoverflow to turn the ide into a self-confident programming prompter"}, {"link": "/document/4222606", "title": "Supporting the investigation and planning of pragmatic reuse tasks"}, {"link": "", "title": "Memories of bug fixes"}, {"link": "", "title": "Mining evolution data of a product family"}, {"link": "", "title": "How do APIs evolve? a story of refactoring"}, {"link": "", "title": "Micro patterns in java code"}, {"link": "", "title": "A file comparison program"}, {"link": "", "title": "Identifying syntactic differences between two programs"}, {"link": "", "title": "Change detection in hierarchically structured information"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Detecting differences across multiple instances of code clones"}, {"link": "/document/7194566", "title": "Interactive code review for systematic changes"}, {"link": "/document/7190088", "title": "Lase: locating and applying systematic edits by learning from examples"}, {"link": "", "title": "Visualizing api usage examples at scale"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812028"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "Automated software transplantation"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Recommending adaptive changes for framework evolution"}, {"link": "", "title": "Automated detection of refactorings in evolving components"}, {"link": "", "title": "Fine-grained and accurate source code differencing"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "/document/6227191", "title": "Witchdoctor: IDE support for real-time auto-completion of refactorings"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code."}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software."}, {"link": "/document/6227192", "title": "Reconciling manual and automatic refactoring"}, {"link": "", "title": "Java Concurrency in Practice."}, {"link": "/document/6035728", "title": "GenProg: A Generic Method for Automatic Software Repair"}, {"link": "/document/4016572", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "/document/7372019", "title": "Repairing programs with semantic code search (t)"}, {"link": "", "title": "Effective Java"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6569728", "title": "Check-then-act misuse of Java concurrent collections"}, {"link": "/document/7372011", "title": "Study and refactoring of android asynchronous programming (T)"}, {"link": "", "title": "Sydit: Creating and applying a program transformation from an example"}, {"link": "/document/7190088", "title": "LASE: locating and applying systematic edits by learning from examples"}, {"link": "/document/6901259", "title": "The design space of bug fixes and how developers navigate it"}, {"link": "", "title": "Mining fine-grained code changes to detect unknown change patterns"}, {"link": "", "title": "API Code Recommendation Using Statistical Learning from Fine-grained Changes"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "/document/6693078", "title": "A study of repetitiveness of code changes in software evolution"}, {"link": "/document/6007141", "title": "Clone management for evolving software"}, {"link": "", "title": "Accurate and efficient structural characteristic feature extraction for clone detection"}, {"link": "", "title": "A graph-based approach to API usage adaptation"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "A study and toolkit for asynchronous programming in c#"}, {"link": "/document/6747191", "title": "Mining frequent bug-fix code changes"}, {"link": "", "title": "naturalness\u201d of buggy code"}, {"link": "", "title": "A case study of cross-system porting in forked projects"}, {"link": "", "title": "REPERTOIRE: a cross-system porting analysis tool for forked software projects"}, {"link": "/document/4639335", "title": "How program history can improve code completion"}, {"link": "/document/7832888", "title": "Improving change recommendation using aggregated association rules"}, {"link": "/document/7985680", "title": "Learning syntactic program transformations from examples"}, {"link": "", "title": ""}, {"link": "", "title": "Why we refactor? confessions of github contributors"}, {"link": "/document/6100098", "title": "Analyzing temporal API usage patterns"}, {"link": "/document/1324645", "title": "Predicting source code changes by mining change history"}, {"link": "/document/7985703", "title": "Automated transplantation and differential testing for clones"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "/document/1317478", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812071"}
{"ref": [{"link": "", "title": "Bazel"}, {"link": "", "title": "Fastbuild"}, {"link": "", "title": "Magellan code coverage framework"}, {"link": "", "title": "Visual studio team test"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Empirical evaluations of regression test selection techniques: a systematic review"}, {"link": "", "title": "CloudBuild: Microsoft's distributed and caching build service"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Regression test selection for Java software"}, {"link": "/document/10188", "title": "An incremental approach to unit testing during maintenance"}, {"link": "", "title": "The art of testing less without sacrificing quality"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "The evolution of java build systems"}, {"link": "", "title": "A large-scale empirical study of the relationship between build technology and build maintenance"}, {"link": "/document/6225994", "title": "Searching for build debt: Experiences managing technical debt at Google"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "/document/6617629", "title": "Taking control of your engineering tools"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "", "title": "An empirical study of build system migrations in practice: Case studies on KDE and the Linux kernel"}, {"link": "/document/4493340", "title": "A tool for optimizing the build performance of large software code bases"}, {"link": "", "title": "Automated decomposition of build targets"}, {"link": "", "title": "Large-scale automated refactoring using Clang MR"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985705"}
{"ref": [{"link": "", "title": "Understanding JavaScript event-based interactions"}, {"link": "", "title": "WaRR: A tool for high-fidelity web application record and replay"}, {"link": "", "title": "Abstraction and mining of traces to explain concurrency bugs"}, {"link": "", "title": "Engineering JavaScript state persistence of web applications migrating across multiple devices"}, {"link": "", "title": "Interactive record/replay for web application debugging"}, {"link": "", "title": "GATEKEEPER: mostly static enforcement of security and reliability policies for JavaScript code"}, {"link": "/document/6823866", "title": "Detecting concurrency errors in client-side java script web applications"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Stateless model checking of event-driven applications"}, {"link": "", "title": "Remedying the Eval that men do"}, {"link": "", "title": "Data races vs. data race bugs: Telling the difference with portend"}, {"link": "", "title": "ConcBugAssist: Constraint solving for diagnosis and repair of concurrency bugs"}, {"link": "", "title": "Dynamic invariant generation for concurrent programs"}, {"link": "", "title": "Imagen: Runtime migration of browser sessions for javascript web applications"}, {"link": "", "title": "Live migration of JavaScript web apps"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Mugshot: Deterministic capture and replay for JavaScript applications"}, {"link": "", "title": "Detecting JavaScript races that matter"}, {"link": "", "title": "Automatically classifying benign and harmful data races using replay analysis"}, {"link": "", "title": "CTrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "Race detection for web applications"}, {"link": "", "title": "Effective race detection for event-driven programs"}, {"link": "", "title": "The eval that men do \u2014 A large-scale study of the use of eval in JavaScript applications"}, {"link": "", "title": "Generating data race witnesses by an SMT-based analysis"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "/document/5970516", "title": "Predictive analysis for detecting serializability violations through trace segmentation"}, {"link": "", "title": "PENELOPE: Weaving threads to expose atomicity violations"}, {"link": "", "title": "Correlation tracking for points-to analysis of JavaScript"}, {"link": "", "title": "Static DOM event dependency analysis for testing web applications"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "", "title": "Dynamic model checking with property driven pruning to detect race conditions"}, {"link": "", "title": "ARROW: Automated repair of races on client-side web pages"}, {"link": "", "title": "Statically locating web application bugs caused by asynchronous calls"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985669"}
{"ref": [{"link": "", "title": "Uk universities, mcafee collude to beat collusion attacks"}, {"link": "", "title": "I know what leaked in your pocket: Uncovering privacy leaks on Android apps with static taint analysis"}, {"link": "", "title": "McAfee Labs Report Reveals New Mobile App Collusion Threats"}, {"link": "/document/7349085", "title": "Colluding apps: Tomorrow's mobile malware threat"}, {"link": "", "title": "Identifying message flow in distributed event-based systems"}, {"link": "", "title": "Apple breaks new iphones with terrible software update"}, {"link": "", "title": "YouTube API change: some older devices can't update to newapp"}, {"link": "", "title": "What Every App Developer Should Know About Android"}, {"link": "", "title": "Improving test case generation for web applications using automated interface discovery"}, {"link": "", "title": "Program analysis for event-based distributed systems"}, {"link": "", "title": "Extracting conditional component dependence for distributed robotic systems"}, {"link": "", "title": "Detecting event anomalies in event-based systems"}, {"link": "", "title": "Automated identification of parameter mismatches in web applications"}, {"link": "", "title": "Apkcom-biner: Combining multiple android apps to support inter-app analysis"}, {"link": "", "title": "Effective inter-component communication mapping in Android: An essential step towards holistic security analysis"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Threat Information Overload is Overwhelming SecurityAnalysts"}, {"link": "", "title": "Soot: A Java Bytecode Optimization Framework"}, {"link": "", "title": "Composite constant propagation: Application to Android inter-component communication analysis"}, {"link": "", "title": "Lifting Inter-App Data-Flow Analysis to Large App Sets"}, {"link": "/document/7079508", "title": "COVERT: compositional analysis of android inter-app permission leakage"}, {"link": "", "title": "Android taint flow analysis for app sets"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of Android apps"}, {"link": "", "title": "Java Virtual Machine Specification"}, {"link": "", "title": "Elements of Programming"}, {"link": "", "title": "Concepts: Linguistic support for generic programming in C++"}, {"link": "/document/1281665", "title": "Llvm: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Scaling Java points-to analysis using SPARK"}, {"link": "", "title": "Combining static analysis with probabilistic models to enable market-scale android inter-component analysis"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Android users have an average of 95 appsinstalled on their phones, according to Yahoo Aviate data"}, {"link": "/document/6234407", "title": "Dissecting Android malware: Characterization and evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985673"}
{"ref": [{"link": "", "title": "Android Dashboard."}, {"link": "", "title": "Android Release Notes."}, {"link": "", "title": "Android UI Automator."}, {"link": "", "title": "Apache HTTP Client Removal."}, {"link": "", "title": "Android Espresso."}, {"link": "", "title": "Feature Matching."}, {"link": "", "title": "Histogram Comparison."}, {"link": "", "title": "MonkeyRunner."}, {"link": "", "title": "OpenCV."}, {"link": "", "title": "RoboTest."}, {"link": "", "title": "Robotium."}, {"link": "", "title": "Template Matching."}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "/document/6786194", "title": "Mobiguitar: Automated model-based testing of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "ulink: Enabling user-defined deep linking to app content"}, {"link": "", "title": "Automated model-based android gui testing using multi-level gui comparison criteria"}, {"link": "", "title": "Blue-mountain: An architecture for customized data management on mobile systems"}, {"link": "", "title": "Automated test input generation for android: Are we there yet? (e)"}, {"link": "", "title": "Event listener analysis and symbolic execution for testing gui applications"}, {"link": "", "title": "PUMA: Programmable UI-Automation for Large-scale Dynamic Analysis of Mobile Apps"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Reptor: Enabling api virtualization on android for platform openness"}, {"link": "", "title": "Caiipa: Automated large-scale mobile app testing through contextual fuzzing"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "", "title": "Testing android apps through symbolic execution"}, {"link": "", "title": "Guitar: an innovative tool for automated testing of gui-driven software"}, {"link": "", "title": "Automatic and Scalable Fault Detection for Mobile Applications"}, {"link": "", "title": "Enhancing Mobile Apps to Use Sensor Hubs Without Programmer Effort"}, {"link": "", "title": "Guided, stochastic model-based gui testing of android apps"}, {"link": "", "title": "Symfinder: Privacy leakage detection using symbolic execution on android devices"}, {"link": "", "title": "Taming android fragmentation: Characterizing and detecting compatibility issues for android apps"}, {"link": "", "title": "Droidfuzzer: Fuzzing the android apps with intent-filter tag"}, {"link": "", "title": "Towards a contextual and scalable automated-testing service for mobile apps"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811983"}
{"ref": [{"link": "", "title": "SurveyGizmo"}, {"link": "", "title": "Test-Driven Code Review: An Empirical Study - Data and Material"}, {"link": "/document/6862882", "title": "Test code quality and its relation to issue handling performance"}, {"link": "/document/7190109", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "/document/7190134", "title": "Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation"}, {"link": "", "title": "Studies on reading techniques"}, {"link": "", "title": "The empirical investigation of perspective-based reading"}, {"link": "/document/7589787", "title": "A faceted classification scheme for change-based industrial code review processes"}, {"link": "", "title": "Factors influencing code review processes in industry"}, {"link": "/document/8094433", "title": "On the optimal order of reading source code changes for review"}, {"link": "", "title": "Test-driven development: by example"}, {"link": "/document/6405258", "title": "The order of things: How developers sort fields and methods"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Using grounded theory to understand software process improvement: A study of irish software product companies"}, {"link": "", "title": "Analyzing the relationships between inspections and testing to provide a software testing focus"}, {"link": "", "title": "Inspection and test process integration based on explicit test prioritization strategies"}, {"link": "/document/5388086", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "Empirical software engineering experts on the use of students and professionals in experiments"}, {"link": "", "title": "How to design and report experiments"}, {"link": "", "title": "Conducting survey research among physicians and other medical professionals: a review of current literature"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Sustainable Test-Driven Development"}, {"link": "", "title": "A replicated experiment to assess requirements inspection techniques"}, {"link": "", "title": "blue book\u201d series)"}, {"link": "/document/7503711", "title": "On method ordering"}, {"link": "", "title": "Software Inspection"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "Robust Confidence Intervals for Effect Sizes: A Comparative Study of Cohen's and Cliff's Delta Unter Non-normality and Heterogeneous Variances"}, {"link": "", "title": "An encompassing life cycle centric survey of software inspection"}, {"link": "", "title": "Inspecting automated test code: a preliminary study"}, {"link": "", "title": "The impact of code review coverage and code review participation on software quality: A case study of the qt, vtk, and itk projects"}, {"link": "", "title": "An empirical study of the impact of modern code review practices on software quality"}, {"link": "", "title": "Further experiences with scenarios and checklists"}, {"link": "/document/8094404", "title": "Does refactoring of test smells induce fixing flaky tests?"}, {"link": "", "title": "Test case review processes in software testing"}, {"link": "", "title": "Comparing detection methods for software requirements inspections: A replication using professional subjects"}, {"link": "/document/296770", "title": "An experiment to assess different defect detection methods for software requirements inspections"}, {"link": "/document/391380", "title": "Comparing detection methods for software requirements inspections: A replicated experiment"}, {"link": "", "title": "What makes a code change easier to review? an empirical investigation on code change reviewability"}, {"link": "", "title": "Hierarchical linear models: Applications and data analysis methods"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "/document/6148202", "title": "Contemporary peer review in action: Lessons from open source development"}, {"link": "", "title": "Modern code review: a case study at google"}, {"link": "", "title": "An extended replication of an experiment for assessing methods for software requirements inspections"}, {"link": "/document/1514443", "title": "A survey of controlled experiments in software engineering"}, {"link": "/document/7962389", "title": "To mock or not to mock? an empirical study on mocking practices"}, {"link": "", "title": "When testing meets code review: Why and how developers review tests"}, {"link": "/document/8529832", "title": "On the relation of test smells to software code quality"}, {"link": "/document/7180077", "title": "Investigating code review practices in defective files: An empirical study of the qt system"}, {"link": "/document/7884606", "title": "Code of conduct in open source projects"}, {"link": "", "title": "An empirical investigation into the nature of test smells"}, {"link": "/document/7332456", "title": "An empirical study of bugs in test code"}, {"link": "", "title": "Learning from Strangers: The Art and Method of Qualitative Interview Studies"}, {"link": "/document/232397", "title": "Lessons from three years of inspection data (software development)"}, {"link": "", "title": "Investigating the temporal behavior of defect detection in software inspection and inspection-based testing"}, {"link": "", "title": "Test-Driven Code Review"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811911"}
{"ref": [{"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "/document/6624029", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Static analysis of executables to detect malicious patterns"}, {"link": "", "title": "Parameter-free probabilistic API mining at github scale"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "Synthesizing Java expressions from freeform queries"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Fuzzy sets and fuzzy logic: Theory and applicationss"}, {"link": "/document/4223228", "title": "Exploring multiple execution paths for malware analysis"}, {"link": "", "title": "TBCNN: A tree-based convolutional neural network for programming language processing"}, {"link": "", "title": "Statistical learning of API fully qualified names in code snippets of online forums"}, {"link": "", "title": "SWIM: Synthesizing what i mean: Code search and idiomatic snippet synthesis"}, {"link": "", "title": "Predicting program properties from \u201cbig code\u201d"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/1566145", "title": "Deobfuscation: Reverse engineering obfuscated code"}, {"link": "", "title": "Uglify"}, {"link": "", "title": "Recovering clear, natural identifiers from obfuscated js names"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812034"}
{"ref": [{"link": "", "title": "Oss-fuzz: Five months later, and rewarding projects"}, {"link": "", "title": "How heartbleed could've been found"}, {"link": "", "title": "Cisco webex. atp and. wrf overflow vulnerabilities"}, {"link": "", "title": "Analysis and exploitation of pegasus kernel vulnerabilities"}, {"link": "/document/7958599", "title": "Skyfire: Data-driven seed generation for fuzzing"}, {"link": "/document/8115618", "title": "Learn&fuzz: machine learning for input fuzzing"}, {"link": "", "title": "TIE: principled reverse engineering of types in binary programs"}, {"link": "", "title": "Automatic reverse engineering of data structures from binary execution"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Dyta: dynamic symbolic execution guided with static verification results"}, {"link": "", "title": "Learning to accelerate symbolic execution via code transformation"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "S2E: a platform for in-vivo multi-path analysis of software systems"}, {"link": "/document/8418633", "title": "Angora: Efficient fuzzing by principled search"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "American fuzzy lop (afl)"}, {"link": "/document/8418631", "title": "Collafl: Path sensitive fuzzing"}, {"link": "", "title": "Oss-fuzz project"}, {"link": "", "title": "Google fuzzer test suite"}, {"link": "", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "", "title": "LibZip"}, {"link": "", "title": "Zip file format"}, {"link": "", "title": "Loop-extended symbolic execution on binary programs"}, {"link": "", "title": "Optimizing seed selection for fuzzing"}, {"link": "", "title": "Fairfuzz: Targeting rare branches to rapidly increase greybox fuzz testing coverage"}, {"link": "", "title": "Slowfuzz: Automated domain-independent detection of algorithmic complexity vulnerabilities"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Dowsing for overflows: a guided fuzzer to find buffer boundary violations"}, {"link": "", "title": "Github-guilhermeferreira/spikepp"}, {"link": "", "title": "Github - mozillasecurity/peach: Peach is a fuzzing framework which uses a dsl for building fuzzers and an observer based architecture to execute and monitor them"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "Symbolic execution for software testing in practice: preliminary assessment"}, {"link": "/document/7381814", "title": "Studying the influence of standard compiler optimizations on symbolic execution"}, {"link": "/document/7194612", "title": "Compositional symbolic execution with memoized replay"}, {"link": "", "title": "Certified symbolic execution"}, {"link": "", "title": "A synergistic approach for distributed symbolic execution using test ranges"}, {"link": "/document/5270315", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "/document/6693084", "title": "Characteristic studies of loop problems for structural test generation via symbolic execution"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}, {"link": "/document/5270315", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "Symstra: A framework for generating object-oriented unit tests using symbolic execution"}, {"link": "", "title": "On test repair using symbolic execution"}, {"link": "", "title": "On parameter tuning in search based software engineering"}, {"link": "", "title": "Parameter tuning or default values? an empirical investigation in search-based software engineering"}, {"link": "", "title": "Search-based system testing: high coverage, no false alarms"}, {"link": "/document/6200103", "title": "The seed is strong: Seeding strategies in search-based software testing"}, {"link": "/document/6100092", "title": "Combining search-based and constraint-based testing"}, {"link": "", "title": "Search Based Software Engineering-4th International Symposium, SSBSE 2012, Riva del Garda, Italy, September 28\u201330, 2012. Proceedings"}, {"link": "", "title": "Search-based software engineering"}, {"link": "/document/1214740", "title": "Reformulating software engineering as a search problem"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "/document/5406532", "title": "Software module clustering as a multi-objective search problem"}, {"link": "", "title": "HOMI: searching higher order mutants for software improvement"}, {"link": "", "title": "Automated search for good coverage criteria: moving from code coverage to fault coverage through search-based software engineering"}, {"link": "", "title": "An experimental search-based approach to cohesion metric evaluation"}, {"link": "/document/7895281", "title": "Search based software engineering [guest editorial]"}, {"link": "/document/6004309", "title": "Evolutionary generation of whole test suites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812105"}
{"ref": [{"link": "", "title": "Autonomous driving model: Chauffeur"}, {"link": "", "title": "The udacity open source self-driving car project"}, {"link": "", "title": "Google accident 2016: A google self-driving car caused a crash for the first time"}, {"link": "", "title": "Introduction to Software Testing"}, {"link": "", "title": "Better mixing via deep representations"}, {"link": "", "title": "End to end learning for self-driving cars"}, {"link": "", "title": "Adversarial examples are not easily detected"}, {"link": "", "title": "Adversarial examples are not easily detected: Bypassing ten detection methods"}, {"link": "", "title": "Towards evaluating the robustness of neural networks"}, {"link": "/document/7410669", "title": "Deepdriving: Learning affordance for direct perception in autonomous driving"}, {"link": "/document/1372139", "title": "Metamorphic testing and beyond"}, {"link": "/document/8330042", "title": "Detection of malicious code variants based on deep learning"}, {"link": "/document/6338939", "title": "Learning hierarchical features for scene labeling"}, {"link": "", "title": "Detecting adversarial samples from artifacts"}, {"link": "/document/7515474", "title": "Test set diameter: Quantifying the diversity of sets of test cases"}, {"link": "", "title": "Explaining and harnessing adversarial examples"}, {"link": "", "title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups"}, {"link": "/document/6795963", "title": "Long short-term memory"}, {"link": "", "title": "Safety verification of deep neural networks"}, {"link": "", "title": "On using very large target vocabulary for neural machine translation"}, {"link": "", "title": "The CIFAR-10 dataset"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "", "title": "Adversarial examples in the physical world"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Mnist handwritten digit database"}, {"link": "", "title": "Detecting rare events using extreme value statistics applied to epileptic convulsions in children"}, {"link": "", "title": "Deepgauge: Comprehensive and multi-granularity testing criteria for gauging the robustness of deep learning systems"}, {"link": "", "title": "Deepmutation: Mutation testing of deep learning systems"}, {"link": "", "title": "Combinatorial testing for deep learning systems"}, {"link": "", "title": "Characterizing adversarial subspaces using local intrinsic dimensionality"}, {"link": "", "title": "Automatic system testing of programs without test oracles"}, {"link": "", "title": "Technical report on the cleverhans v2.1.0 adversarial examples library"}, {"link": "", "title": "The limitations of deep learning in adversarial settings"}, {"link": "", "title": "Deepxplore: Automated whitebox testing of deep learning systems"}, {"link": "/document/7899038", "title": "Generating controllably invalid and atypical inputs for robustness testing"}, {"link": "", "title": "Multivariate density estimation: theory, practice, and visualization"}, {"link": "", "title": "Sequence to sequence learning with neural networks"}, {"link": "/document/7298594", "title": "Going deeper with convolutions"}, {"link": "/document/1543119", "title": "BioSign\u2122: multi-parameter monitoring for early warning of patient deterioration"}, {"link": "", "title": "Deeptest: Automated testing of deep-neural-network-driven autonomous cars"}, {"link": "", "title": "Kernel smoothing"}, {"link": "/document/5463648", "title": "Metamorphic testing of stochastic optimisation"}, {"link": "", "title": "Regression testing minimisation, selection and prioritisation: A survey"}, {"link": "", "title": "Software unit test coverage and adequacy"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812069"}
{"ref": [{"link": "", "title": "Fuzzing: Art, science, and engineering"}, {"link": "/document/7190050", "title": "Billions and billions of constraints: Whitebox fuzz testing in production"}, {"link": "", "title": "Clusterfuzz"}, {"link": "", "title": "American Fuzzy Lop"}, {"link": "", "title": "Coverage-based grey-box fuzzing as markov chain"}, {"link": "", "title": "Steelix: Program-state based binary fuzzing"}, {"link": "", "title": "VUzzer: Application-aware evolutionary fuzzing"}, {"link": "/document/8418633", "title": "Angora: Efficient fuzzing by principled search"}, {"link": "/document/8418631", "title": "CollAFL: Path sensitive fuzzing"}, {"link": "/document/8418632", "title": "T-Fuzz: Fuzzing by program transformation"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "Optimizing seed selection for fuzzing"}, {"link": "/document/7958599", "title": "Skyfire: Data-driven seed generation for fuzzing"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "jFuzz: A concolic whitebox fuzzer for java"}, {"link": "", "title": "Path-exploration lifting: Hi-fi tests for lo-fi emulators"}, {"link": "", "title": "Satisfiability modulo theories: Introduction and applications"}, {"link": "", "title": "SAGE: Whitebox fuzzing for security testing"}, {"link": "", "title": "Symbolic execution for software testing in practice: Preliminary assessment"}, {"link": "", "title": "Enhancing symbolic execution with Veritesting"}, {"link": "", "title": "Parallel symbolic execution for automated real-world software testing"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "Circumventing fuzzing roadblocks with compiler transformations"}, {"link": "", "title": "Revolutionizing the field of grey-box attack surface testing with evolutionary fuzzing"}, {"link": "", "title": "Search-based software test data generation: A survey"}, {"link": "/document/57624", "title": "Automated software test data generation"}, {"link": "/document/732680", "title": "An automated framework for structural test-data generation"}, {"link": "", "title": "QEMU, a fast and portable dynamic translator"}, {"link": "/document/6234425", "title": "Unleashing mayhem on binary code"}, {"link": "", "title": "Convicting exploitable software vulnerabilities: An efficient input provenance based approach"}, {"link": "/document/1317472", "title": "Efficient forward computation of dynamic slices using reduced ordered binary decision diagrams"}, {"link": "/document/6606567", "title": "Segmented symbolic analysis"}, {"link": "", "title": "Verification of realtime systems using linear relation analysis"}, {"link": "", "title": "ARCHER: Using symbolic, path-sensitive analysis to detect memory access errors"}, {"link": "/document/4222603", "title": "Hybrid concolic testing"}, {"link": "", "title": "Towards optimal concolic testing"}, {"link": "", "title": "Introduction to Algorithms"}, {"link": "/document/7546498", "title": "LAVA: Large-scale automated vulnerability addition"}, {"link": "", "title": "Coreutils experiments"}, {"link": "", "title": "Debian popularity contest"}, {"link": "", "title": "honggfuzz"}, {"link": "", "title": "MoonShine: Optimizing OS fuzzer seed selection with trace distillation"}, {"link": "", "title": "Scheduling black-box mutational fuzzing"}, {"link": "", "title": "IMF: Inferred model-based fuzzer"}, {"link": "", "title": "CodeAlchemist: Semantics-aware code generation to find vulnerabilities in javascript engines"}, {"link": "", "title": "How we get there: A context-guided search strategy in concolic testing"}, {"link": "/document/4639362", "title": "Heuristics for scalable dynamic test generation"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Guiding dynamic symbolic execution toward unverified program executions"}, {"link": "", "title": "Efficient state merging in symbolic execution"}, {"link": "", "title": "MultiSE: Multi-path symbolic execution using value summaries"}, {"link": "/document/8115639", "title": "Detecting information flow by mutating input data"}, {"link": "", "title": "Memory corruption mitigation via hardening and testing"}, {"link": "/document/1702369", "title": "Automatic generation of floating-point test data"}, {"link": "", "title": "Coverage maximization using dynamic taint tracing"}, {"link": "/document/5954405", "title": "Search-based software testing: Past, present and future"}, {"link": "", "title": "CORAL: Solving complex constraints for symbolic pathfinder"}, {"link": "", "title": "AUSTIN: An open source tool for search based software testing of c programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811950"}
{"ref": [{"link": "", "title": "Testing at the speed and scale of Google"}, {"link": "", "title": "Tools for continuous integration at Google scale"}, {"link": "", "title": "CloudBuild: Microsoft's distributed and caching build service"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}, {"link": "", "title": "Regression test selection techniques: A survey"}, {"link": "", "title": "A qualitative survey of regression testing practices"}, {"link": "", "title": "A systematic review on regression test selection techniques"}, {"link": "", "title": "Accelerated continuous testing with test impact analysis"}, {"link": "", "title": "About test optimization"}, {"link": "", "title": "Extraction-based regression test selection"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Hybrid regression test selection"}, {"link": "/document/8115710", "title": "STARTS: STAtic Regression Test Selection"}, {"link": "", "title": "Apache Camel - Building"}, {"link": "/document/296779", "title": "A framework for evaluating regression test selection techniques"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "An extensive study of static regression test selection in modern software evolution"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "", "title": "DeFlaker: Automatically detecting flaky tests"}, {"link": "", "title": "Unit test virtualization with VMVM"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "Efficient dependency detection for safe Java test acceleration"}, {"link": "", "title": "Reliable testing: detecting state-polluting tests to prevent test dependency"}, {"link": "", "title": "Empirically revisiting the test independence assumption"}, {"link": "", "title": "Open Clover"}, {"link": "/document/6175911", "title": "Automated behavioral testing of refactoring engines"}, {"link": "", "title": "Refactoring: an aid in designing application frameworks and evolving object-oriented systems"}, {"link": "", "title": "JDolly program generator"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Randoop home page"}, {"link": "/document/1319081", "title": "Random program generator for Java JIT compiler test system"}, {"link": "", "title": "Test-case reduction for C compiler bugs"}, {"link": "", "title": "CCG - random C Code Generator"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Making program refactoring safer"}, {"link": "", "title": "Skeletal program enumeration for rigorous compiler testing"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Finding and analyzing compiler warning defects"}, {"link": "", "title": "Coverage-directed differential testing of JVM implementations"}, {"link": "", "title": "Chianti: A tool for change impact analysis of Java programs"}, {"link": "/document/6080769", "title": "Localizing failure-inducing program edits based on spectrum information"}, {"link": "/document/1702444", "title": "Testing programs with the aid of a compiler"}, {"link": "/document/1646911", "title": "Hints on test data selection: help for the practicing programmer"}, {"link": "", "title": "MAJOR: An efficient and extensible tool for mutation analysis in a Java compiler"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "PIT Mutation Testing"}, {"link": "", "title": "Defects4J: A database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "Boosting spectrum-based fault localization using PageRank"}, {"link": "", "title": "Are mutation scores correlated with real fault detection? a large scale empirical study on the relationship between mutants and real faults"}, {"link": "", "title": "Automated patch extraction via syntax-and semantics-aware delta debugging on source code changes"}, {"link": "", "title": "RTSCheck"}, {"link": "", "title": "Ekstazi"}, {"link": "", "title": "STARTS - A tool for STAtic Regression Test Selection"}, {"link": "", "title": "Oracle and/or its affiliates"}, {"link": "", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "Mutation analysis using mutant schemata"}, {"link": "/document/8530713", "title": "From start-ups to scale-ups: Opportunities and open problems for static and dynamic program analysis"}, {"link": "", "title": "Does refactoring of test smells induce fixing flaky tests?"}, {"link": "", "title": "File-level vs. module-level regression test selection for. NET"}, {"link": "", "title": "Bugs.jar: A large-scale, diverse dataset of real-world Java bugs"}, {"link": "", "title": "Pythia: A regression test selection tool based on textual differencing"}, {"link": "", "title": "gitflow-incremental-builder (GIB)"}, {"link": "", "title": "Regression test selection across JVM boundaries"}, {"link": "", "title": "Software assurance by bounded exhaustive testing"}, {"link": "", "title": "Software abstractions: logic, language, and analysis"}, {"link": "", "title": "TestEra: A novel framework for automated testing of Java programs"}, {"link": "", "title": "Korat: Automated testing based on Java predicates"}, {"link": "", "title": "Test generation through programming in UDITA"}, {"link": "", "title": "Evolutionary testing of classes"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "Scaling testing of refactoring engines"}, {"link": "", "title": "Testing static analyzers with randomly generated programs"}, {"link": "", "title": "Automatic testing of symbolic execution engines via program generation and differential testing"}, {"link": "", "title": "Testing probabilistic programming systems"}, {"link": "/document/8367056", "title": "Approximate transformations as mutation operators"}, {"link": "", "title": "Javalanche: Efficient mutation testing for Java"}, {"link": "", "title": "MuJava: An automated class mutation system"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812073"}
{"ref": [{"link": "", "title": "Where do developers log? an empirical study on logging practices in industry"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Testing web applications"}, {"link": "", "title": "Empirically detecting false test alarms using association rules"}, {"link": "", "title": "Test failure bucketing"}, {"link": "", "title": "Syntactic clustering of the web"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Chinese Word Ordering Errors Detection and Correction for Non-Native Chinese Language Learners"}, {"link": "", "title": "Analysis engine for automatically analyzing and linking error logs"}, {"link": "/document/1214327", "title": "General test result checking with log file analysis"}, {"link": "", "title": "A method of log file analysis for test oracle"}, {"link": "", "title": "Industrial evaluation of a log file analysis methodology"}, {"link": "", "title": "The impact of test ownership and team structure on the reliability and effectiveness of quality test runs"}, {"link": "", "title": "Systems and methods for automated classification and analysis of large volumes of test result data"}, {"link": "", "title": "Execution anomaly detection in distributed systems through unstructured log analysis"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "", "title": "Structured comparative analysis of systems logs to diagnose performance problems"}, {"link": "", "title": "Be conservative: enhancing failure diagnosis with proactive logging"}, {"link": "", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "", "title": "Advances and challenges in log analysis"}, {"link": "", "title": "Failure proximity: a fault localization-based approach"}, {"link": "", "title": "Pursuing failure: the distribution of program failures in a profile space"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Concept-based failure clustering"}, {"link": "", "title": "Tree-based methods for classifying software failures"}, {"link": "", "title": "Classification of software behaviors for failure detection: a discriminative pattern mining approach"}, {"link": "", "title": "Revisit of automatic debugging via human focus-tracking analysis"}, {"link": "", "title": "An introduction to roc analysis"}, {"link": "", "title": "Learning to log: Helping developers make informed logging decisions"}, {"link": "", "title": "MALLET: A Machine Learning for Language Toolkit"}, {"link": "", "title": "DevOps for developers"}, {"link": "", "title": "Continuous integration and quality assurance: A case study of two open source projects"}, {"link": "/document/6228986", "title": "A whitebox approach for automated security testing of Android applications on the cloud"}, {"link": "", "title": "Is this a bug or an obsolete test?"}, {"link": "", "title": "An empirical study of bugs in test code"}, {"link": "", "title": "UML-based integration testing"}, {"link": "", "title": "The WEKA Data Mining Software: An Update; SIGKDD Explorations"}, {"link": "", "title": "Modelling the \u2018hurried\u2019 bug report reading process to summarize bug reports"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "", "title": "JavaDiffUtils"}, {"link": "", "title": "Issuance of IK Analyzer 3.2.3 for Stable Edition for lucene 3.0"}, {"link": "/document/6227209", "title": "Developer prioritization in bug repositories"}, {"link": "", "title": "Lazy associative classification"}, {"link": "", "title": "Lazy Associative Classifier"}, {"link": "", "title": "Manual System Tests"}, {"link": "/document/4618", "title": "Function point analysis: difficulties and improvements"}, {"link": "", "title": "Automatic generation of test scripts from formal test specifications"}, {"link": "/document/7123685", "title": "Clustering deviations for black box regression testing of database applications"}, {"link": "", "title": "Striving for Failure: An Industrial Case Study about Test Failure Prediction"}, {"link": "", "title": "Misleading classification"}, {"link": "", "title": "Effective bug triage based on historical bug-fix information"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985707"}
{"ref": [{"link": "", "title": "Strong typing vs. strong testing"}, {"link": "", "title": "The inconvenient truth about dynamic vs. static typing"}, {"link": "", "title": "Static typing is the root of all evil"}, {"link": "", "title": "Static vs. dynamic typing"}, {"link": "", "title": "Type systems"}, {"link": "", "title": "Types and programming languages"}, {"link": "", "title": "JavaScript is assembly language for the web: Part 2 - madness or just insanity?"}, {"link": "", "title": "Randomised trial of endarterectomy for recently symptomatic carotid stenosis: final results of the mrc european carotid surgery trial (ecst)"}, {"link": "", "title": "Inhabitation in typed lambda-calculi (a syntactic approach)"}, {"link": "", "title": "Dynamic typing in a statically typed language"}, {"link": "", "title": "JavaScript equality table"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "The missing links: bugs and bug-fix commits"}, {"link": "", "title": "The promises and perils of mining github"}, {"link": "", "title": "Determining sample size for research activities"}, {"link": "", "title": "Qualitative research: A guide to design and implementation"}, {"link": "", "title": "Doing psychology experiments"}, {"link": "", "title": "A Coefficient of Agreement for Nominal Scales"}, {"link": "", "title": "Computing inter-rater reliability and its variance in the presence of high agreement"}, {"link": "", "title": "The kappa statistic: A second look"}, {"link": "", "title": "Assessing inter-rater agreement for nominal judgement variables"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "An experiment about static and dynamic type systems: doubts about the positive impact of static type systems on development time"}, {"link": "", "title": "A large scale study of programming languages and code quality in github"}, {"link": "", "title": "A comparative study of programming languages in rosetta code"}, {"link": "", "title": "A type system for format strings"}, {"link": "", "title": "Typescript language specification"}, {"link": "", "title": "The art of scientific writing: from student reports to professional publicationsin chemistry and related fields"}, {"link": "", "title": "Ide++ (ide plus plus)"}, {"link": "", "title": "Work in progress: an empirical study of static typing in ruby"}, {"link": "", "title": "Static vs. dynamic type systems: an empirical study about the relationship between type casts and development time"}, {"link": "/document/6240483", "title": "Do static type systems improve the maintainability of software systems? an empirical study"}, {"link": "", "title": "An empirical study of the influence of static type systems on the usability of undocumented software"}, {"link": "", "title": "Empirical analysis of programming language adoption"}, {"link": "/document/677186", "title": "A controlled experiment to assess the benefits of procedure argument type checking"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "Jsmeter: comparing the behavior of JavaScript benchmarks with real web applications"}, {"link": "", "title": "The eval that men do"}, {"link": "", "title": "The good, the bad, and the ugly: An empirical study of implicit type conversions in JavaScript"}, {"link": "", "title": "You are what you include: large-scale evaluation of remote javascript inclusions"}, {"link": "", "title": "JavaScript errors in the wild: An empirical study"}, {"link": "/document/6681338", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "Discovering bug patterns in javascript"}, {"link": "", "title": "Performance issues and optimizations in javascript: an empirical study"}, {"link": "", "title": "Towards a type system for analyzing JavaScript programs"}, {"link": "", "title": "Checking correctness of typescript interfaces for javascript libraries"}, {"link": "", "title": "Evaluating the cost reduction of static code analysis for software security"}, {"link": "", "title": "To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools"}, {"link": "", "title": "Proactive detection of collaboration conflicts"}, {"link": "", "title": "Assessing the value of branches with what-if analysis"}, {"link": "", "title": "Typing local control and state using flow analysis"}, {"link": "", "title": "Typedevil: Dynamic type inconsistency analysis for javascript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985711"}
{"ref": [{"link": "", "title": "Worldwide smartwatch market will see modest growth in 2016 before swelling to 50 million units in 2020"}, {"link": "", "title": "Android Wear"}, {"link": "", "title": "Building apps for wearables"}, {"link": "", "title": "Effective inter-component communication mapping in Android with Epicc"}, {"link": "", "title": "Composite constant propagation: Application to Android inter-component communication analysis"}, {"link": "", "title": "SCanDroid: Security Certifier for anDroid"}, {"link": "", "title": "PendingIntent"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "", "title": "Pick your contexts well: Understanding object-sensitivity"}, {"link": "", "title": "Static reference analysis for GUI objects in Android software"}, {"link": "", "title": "Static control-flow analysis of user-driven callbacks in Android applications"}, {"link": "", "title": "Static window transition graphs for Android"}, {"link": "", "title": "Featherweight Java: A minimal core calculus for Java and GJ"}, {"link": "", "title": "Program analyses for understanding the behavior and performance of traditional and mobile object-oriented software"}, {"link": "", "title": "Dimensions of precision in reference analysis of object-oriented programming languages"}, {"link": "", "title": "Scaling Java points-to analysis using Spark"}, {"link": "", "title": "Refinement-based context-sensitive points-to analysis for Java"}, {"link": "", "title": "Optimizing Java bytecode using the Soot framework: Is it feasible?"}, {"link": "", "title": "Robotium: User scenario testing for Android"}, {"link": "", "title": "Testing UI for a single app"}, {"link": "", "title": "Android Wear (AW) UIAutomator server"}, {"link": "", "title": "Android UIAutomator server"}, {"link": "", "title": "Python-tesseract: A Python wrapper for Google's Tesseract-OCR"}, {"link": "", "title": "F-Droid application market"}, {"link": "", "title": "UI patterns for Android Wear"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for Java"}, {"link": "", "title": "UI/Application exerciser Monkey"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "A grey-box approach for automated GUI-model generation of mobile applications"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of Android apps"}, {"link": "", "title": "Dynodroid: An input generation system for Android apps"}, {"link": "", "title": "Using GUI ripping for automated testing of Android applications"}, {"link": "", "title": "MobiGUITAR: Automated model-based testing of mobile apps"}, {"link": "", "title": "PUMA: Programmable UI-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Automated test generation for detection of leaks in Android applications"}, {"link": "", "title": "Exploring current practices for battery use and management of smartwatches"}, {"link": "", "title": "Characterization of early smartwatch apps"}, {"link": "", "title": "Understanding the characteristics of Android Wear OS"}, {"link": "", "title": "EchoWear: Smartwatch technology for voice and speech treatments of patients with Parkinson's disease"}, {"link": "", "title": "Recognizing text using motion data from a smartwatch"}, {"link": "", "title": "Smartwatch-based biometric gait recognition"}, {"link": "/document/7372031", "title": "Automated test input generation for Android: Are we there yet?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985675"}
{"ref": [{"link": "/document/6498452", "title": "An exploratory study of cloning in industrial software product lines"}, {"link": "", "title": "A survey of variability modeling in industrial practice"}, {"link": "", "title": "Managing cloned variants: a framework and experience"}, {"link": "", "title": "Forking and coordination in multi-platform development: a case study"}, {"link": "", "title": "Three cases of feature-based variability modeling in industry"}, {"link": "", "title": "Forked and Integrated Variants in an Open-Source Firmware Project"}, {"link": "", "title": "\u201ccloning considered harmful\u201d considered harmful: patterns of cloning in software"}, {"link": "", "title": "Reengineering legacy applications into software product lines: a systematic mapping"}, {"link": "", "title": "Marlin"}, {"link": "/document/8094445", "title": "Software Practitioner Perspectives on Merge Conflicts and Resolutions"}, {"link": "/document/6227180", "title": "Improving early detection of software merge conflicts"}, {"link": "", "title": "An Analysis of the Variability in Forty Preprocessor-Based Software Product Lines"}, {"link": "", "title": "Projectional editing of variational software"}, {"link": "", "title": "The love/hate relationship with the c preprocessor: An interview study"}, {"link": "/document/1000449", "title": "A state-of-the-art survey on software merging"}, {"link": "", "title": "Flexible product line engineering with a virtual platform"}, {"link": "", "title": "Cloned product variants: from ad-hoc to managed software product lines"}, {"link": "", "title": "Reverse engineering feature models"}, {"link": "/document/4339269", "title": "Minimally invasive migration to software product lines"}, {"link": "", "title": "Running a Software Product Line: Standing Still is Going Backwards"}, {"link": "", "title": "#ifdef Considered Harmful, or Portability Experience With C News"}, {"link": "", "title": "How Does the Degree of Variability Affect Bug-Finding?"}, {"link": "", "title": "Granularity in Software Product Lines"}, {"link": "/document/7985694", "title": "PEoPL: Projectional Editing of Software Product Lines"}, {"link": "", "title": "Jetbrains MPS"}, {"link": "", "title": "Towards User-Friendly Projectional Editors"}, {"link": "", "title": "Efficiency of projectional editing: A controlled experiment"}, {"link": "", "title": "Z3: An efficient smt solver"}, {"link": "", "title": "mbeddr: an extensible c-based programming language and ide for embedded systems"}, {"link": "", "title": "A natural and multi-layered approach to detect changes in tree-based textual documents"}, {"link": "", "title": "Online Appendix"}, {"link": "", "title": "Preprocessor-based variability in open-source and industrial software systems: An empirical study"}, {"link": "", "title": "Using Students As Subjects-A Comparative Study of Students and Professionals in Lead-Time Impact Assessment"}, {"link": "", "title": "Using Students as Experiment Subjects-An Analysis on Graduate and Freshmen Student Data"}, {"link": "", "title": "Variant-preserving refactoring in feature-oriented software product lines"}, {"link": "", "title": "Refactoring a legacy component for reuse in a software product line: a case study"}, {"link": "/document/4339271", "title": "A case study implementing features using aspectj"}, {"link": "", "title": "Aspect-oriented programming."}, {"link": "/document/7194590", "title": "Morpheus: Variability-aware refactoring in the wild"}, {"link": "", "title": "Enhancing clone-and-own with systematic reuse for developing software variants"}, {"link": "", "title": "Bottom-up adoption of software product lines: a generic and extensible approach"}, {"link": "", "title": "Incremental return on incremental investment: Engenio's transition to software product line practice"}, {"link": "", "title": "Semistructured merge: Rethinking merge in revision control systems"}, {"link": "", "title": "Structured merge with auto-tuning: Balancing precision and performance"}, {"link": "", "title": "Balancing precision and performance in structured merge"}, {"link": "/document/5071714", "title": "Different models for model matching: An analysis of approaches to support model differencing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811913"}
{"ref": [{"link": "", "title": "Test-Driven Development \u2014 A Practical Guide"}, {"link": "/document/1407832", "title": "Automatic test case optimization: A bacteriologic algorithm"}, {"link": "", "title": "Improving test suites for efficient fault localization"}, {"link": "/document/6405253", "title": "An empirical analysis of the distribution of unit test smells and their impact on software maintenance"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "/document/6405252", "title": "Code Coverage-based Regression Test Selection and Prioritization in WebKit"}, {"link": "", "title": "Pharo by Example. Square Bracket Associates, Kehrsatz, Switzerland"}, {"link": "", "title": "Test case selection in industry: An analysis of issues related to static approaches"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "/document/7968009", "title": "How good are my tests"}, {"link": "", "title": "TestQ: Exploring structural and maintenance characteristics of unit test suites"}, {"link": "", "title": "Enterprise Pharo: a Web Perspective"}, {"link": "", "title": "Jcrasher: an automatic robust tester for java"}, {"link": "", "title": "Reassert: A tool for repairing broken unit tests"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "", "title": "Sub-method Structural and Behavioral Reflection"}, {"link": "", "title": "Refactoring test code"}, {"link": "", "title": "Traits: A mechanism for fine-grained reuse"}, {"link": "", "title": "Reusing and composing tests with traits"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/1357796", "title": "Ordering broken unit tests for focused debugging"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "/document/7202948", "title": "Empirically detecting false test alarms using association rules"}, {"link": "", "title": "Improving oracle quality by detecting brittle assertions and unused inputs in tests"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "/document/4076910", "title": "A multipurpose code coverage tool for java"}, {"link": "/document/1357785", "title": "Empirical evaluation of the fault-detection effectiveness of smoke regression test cases for gui-based software"}, {"link": "", "title": "XUnit Test Patterns - Refactoring Test Code"}, {"link": "", "title": "The test automation manifesto"}, {"link": "/document/5315981", "title": "Test coverage and post-verification defects: A multiple case study"}, {"link": "", "title": "Will my tests tell me if i break this code?"}, {"link": "", "title": "Understanding myths and realities of test-suite evolution"}, {"link": "", "title": "Generating controllably invalid and atypical inputs for robustness testing"}, {"link": "", "title": "Rule-based assessment of test quality"}, {"link": "/document/4021366", "title": "Characterizing the relative significance of a test smell"}, {"link": "", "title": "Improving test code reviews with metrics: a pilot study"}, {"link": "", "title": "Checked coverage: an indicator for oracle quality"}, {"link": "/document/6130684", "title": "Robustest: Towards a framework for automated testing of robustness in software"}, {"link": "", "title": "Demand-driven type inference with subgoal pruning: Trading precision for scalability"}, {"link": "", "title": "Partial behavioral reflection: Spatial and temporal selection of reification"}, {"link": "", "title": "Parameterized unit tests"}, {"link": "/document/4359471", "title": "On the detection of test smells: A metrics-based approach for general fixture and eager test"}, {"link": "", "title": "A comprehensive study of pseudo-tested methods"}, {"link": "", "title": "Smoke tests vs. BVTs. Crosslake Tech Blog"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812040"}
{"ref": [{"link": "", "title": "DefinitelyTyped"}, {"link": "", "title": "Averroes: Whole-program analysis without the whole program"}, {"link": "", "title": "Combining type-analysis with points-to analysis for analyzing Java library source-code"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}, {"link": "", "title": "Systematic approaches for increasing soundness and precision of static analyzers"}, {"link": "", "title": "Understanding TypeScript"}, {"link": "", "title": "Interprocedural constant propagation"}, {"link": "", "title": "Analysis of pointers and structures"}, {"link": "", "title": "Fast and precise type checking for JavaScript"}, {"link": "", "title": "Modular static program analysis"}, {"link": "", "title": "Context-sensitive interprocedural points-to analysis in the presence of function pointers"}, {"link": "", "title": "Checking correctness of TypeScript interfaces for JavaScript libraries"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "JSAI: a static analysis platform for JavaScript"}, {"link": "", "title": "Type refinement for static analysis of JavaScript"}, {"link": "", "title": "Inference and evolution of TypeScript declaration files"}, {"link": "", "title": "Type test scripts for TypeScript testing"}, {"link": "", "title": "HybriDroid: static analysis framework for Android hybrid applications"}, {"link": "", "title": "In defense of soundiness: A manifesto"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Static analysis of JavaScript libraries in a scalable and precise way using loop sensitivity"}, {"link": "", "title": "Battles with false positives in static analysis of JavaScript web applications in the wild"}, {"link": "", "title": "Safe & efficient gradual typing for TypeScript"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "Modular shape analysis for dynamically encapsulated programs"}, {"link": "", "title": "Control-flow analysis in Scheme"}, {"link": "", "title": "Gradual typing for functional languages"}, {"link": "", "title": "Mixed messages: Measuring conformance and non-interference in Type-Script"}, {"link": "", "title": "A study of object creators in JavaScript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812107"}
{"ref": [{"link": "", "title": "Clang static analyzer"}, {"link": "", "title": "Infer"}, {"link": "", "title": "Context-and path-sensitive memory leak detection"}, {"link": "", "title": "Static detection of leaks in polymorphic containers"}, {"link": "", "title": "A practical flow-sensitive and context-sensitive C and C++ memory leak detector"}, {"link": "", "title": "Memory Leak Analysis by Contradiction"}, {"link": "", "title": "Practical Memory Leak Detector Based on Parameterized Procedural Summaries"}, {"link": "", "title": "Practical memory leak detection using guarded value-flow analysis"}, {"link": "/document/6720116", "title": "Detecting memory leaks statically with full-sparse value-flow analysis"}, {"link": "", "title": "Mozilla bugzilla"}, {"link": "", "title": "Chromium bugs"}, {"link": "", "title": "CVE List"}, {"link": "/document/7180119", "title": "The debsources dataset: Two decades of debian source code metadata"}, {"link": "", "title": "Scalable and incremental software bug detection"}, {"link": "", "title": "A few billion lines of code later"}, {"link": "", "title": "The value flow graph: A program representation for optimal program transformations"}, {"link": "", "title": "The complexity of theorem-proving procedures"}, {"link": "", "title": "Pinpoint: Fast and precise sparse value flow analysis for million lines of code"}, {"link": "", "title": "A deterministic (2-2/(k+1)) n algorithm for k-sat based on local search"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Efficiently computing static single assignment form and the control dependence graph"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "/document/1281665", "title": "Llvm: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Automated memory leak detection for production use"}, {"link": "", "title": "Optimization of Object-Oriented Programs Using Static Class Hierarchy Analysis"}, {"link": "", "title": "Typestates for Objects"}, {"link": "/document/869367", "title": "SPEC CPU2000: Measuring CPU performance in the new millennium"}, {"link": "", "title": "Coverity scan"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "/document/5764689", "title": "Practical memory checking with dr. memory"}, {"link": "", "title": "Valgrind: A framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "Leakpoint: pinpointing the causes of memory leaks"}, {"link": "", "title": "Purify: Fast Detection of Memory Leaks and Access Errors"}, {"link": "", "title": "Low-overhead memory leak detection using adaptive statistical profiling"}, {"link": "", "title": "AddressSanitizer: a fast address sanity checker"}, {"link": "", "title": "Insure++"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812075"}
{"ref": [{"link": "", "title": "Object-Oriented Software Engineering Using UML, Patterns, and Java"}, {"link": "", "title": "UML for the IT Business Analyst: A Practical Guide to Object-Oriented Requirements Gathering"}, {"link": "", "title": "Unified Modeling Language Reference Manual"}, {"link": "", "title": "Integrating and refining UML models"}, {"link": "", "title": "Maintaining consistency between UML models using description logic"}, {"link": "", "title": "UML-B: Formal modeling and design aided by UML"}, {"link": "", "title": "Category theory and model-driven engineering: From formal semantics to design patterns and beyond"}, {"link": "", "title": "UML refinement and abstraction transformations"}, {"link": "", "title": "Heuristics on the definition of UML refinement patterns"}, {"link": "", "title": "Using Z: Specification, Refinement, and Proof"}, {"link": "", "title": "The B-book: Assigning programs to meanings"}, {"link": "", "title": "Uml in practice"}, {"link": "", "title": "AstroGrid"}, {"link": "", "title": "On understanding of refinement relationship"}, {"link": "", "title": "Reasoning with UML class diagrams"}, {"link": "/document/772616", "title": "Structuring and refinement of class diagrams"}, {"link": "", "title": "Towards an incremental development of UML specifications"}, {"link": "", "title": "Incremental development of UML specifications using operation refinements"}, {"link": "", "title": "Modules and class refinement: a metamodeling approach to object-oriented languages"}, {"link": "", "title": "Using the metamodel mechanism to support class refinement"}, {"link": "/document/4815278", "title": "An efficient and scalable approach to correct class model refinement"}, {"link": "", "title": "Understanding refinement and specialization in the UML"}, {"link": "", "title": "On the decomposition of use cases for the refinement of software requirements"}, {"link": "", "title": "On model typing"}, {"link": "", "title": "State-based model slicing: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985709"}
{"ref": [{"link": "", "title": "Performance bugs detected and reported in toddler project"}, {"link": "", "title": "X-ray: automating root-cause diagnosis of performance anomalies in production software"}, {"link": "", "title": "Wise: Automated test generation for worst-case complexity"}, {"link": "", "title": "Input-sensitive profiling"}, {"link": "", "title": "Coz: finding code that counts with causal profiling"}, {"link": "", "title": "Mining hot calling contexts in small space"}, {"link": "", "title": "A scalable technique for characterizing the usage of temporaries in framework-intensive java applications"}, {"link": "/document/6227197", "title": "Automatically finding performance problems with feedback-directed learning software testing"}, {"link": "/document/6227198", "title": "Performance debugging in the large via mining millions of stack traces"}, {"link": "", "title": "Performance regression testing target prioritization via performance risk analysis"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Catch me if you can: performance bug detection in the wild"}, {"link": "", "title": "Why is my state's aca healthcare exchange site slow?"}, {"link": "", "title": "Finding latent performance bugs in systems implementations"}, {"link": "", "title": "Introperf: Transparent context-sensitive multi-layer performance inference using system stack traces"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Sheriff: precise detection and automatic mitigation of false sharing"}, {"link": "", "title": "The Art of Application Performance Testing: Help for Programmers and Quality Assurance"}, {"link": "", "title": "Lessons from the colorado benefits management system disaster"}, {"link": "", "title": "Evaluating the accuracy of java profilers"}, {"link": "", "title": "Cachetor: Detecting cacheable data to remove bloat"}, {"link": "", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "Caramel: Detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Static detection of asymptotic performance bugs in collection traversals"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "Eventbreak: Analyzing the responsiveness of user interfaces through performance-guided test generation"}, {"link": "", "title": "Appinsight: mobile app performance monitoring in the wild"}, {"link": "", "title": "Software performance antipatterns"}, {"link": "", "title": "Statistical debugging for real-world performance problems"}, {"link": "", "title": "Context-sensitive delta inference for identifying workload-dependent performance bottlenecks"}, {"link": "", "title": "Detecting inefficiently-used containers to avoid bloat"}, {"link": "", "title": "Go with the flow: profiling copies to find runtime bloat"}, {"link": "", "title": "Finding low-utility data structures"}, {"link": "", "title": "Comprehending performance from real-world execution traces: A device-driver case"}, {"link": "", "title": "Algorithmic profiling"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985677"}
{"ref": [{"link": "", "title": "uTest"}, {"link": "", "title": "Testin"}, {"link": "", "title": "Baidu Crowd Test"}, {"link": "", "title": "Alibaba Crowd Test"}, {"link": "", "title": "Mooctest"}, {"link": "", "title": "TestIO"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "/document/6100061", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "/document/6624026", "title": "A contextual approach towards more accurate duplicate bug report detection"}, {"link": "", "title": "Improving the accuracy of duplicate bug report detection using textual similarity measures"}, {"link": "", "title": "An approach to detecting duplicate bug reports using natural language and execution information"}, {"link": "/document/5693213", "title": "Detecting duplicate bug report using character n-gram-based features"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "A contextual approach towards more accurate duplicate bug report detection and ranking"}, {"link": "/document/8094414", "title": "Towards accurate duplicate bug retrieval using deep learning techniques"}, {"link": "", "title": "Bugzilla"}, {"link": "", "title": "Jira"}, {"link": "", "title": "Mantis"}, {"link": "", "title": "Stopping duplicate bug reports before they start with continuous querying for bug reports"}, {"link": "", "title": "Revisiting the performance of automated approaches for the retrieval of duplicate reports in issue tracking systems that perform just-in-time duplicate retrieval"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "", "title": "Bug reports for desktop software and mobile apps in github: What is the difference?"}, {"link": "/document/5487527", "title": "What makes a good bug report?"}, {"link": "/document/4658082", "title": "Duplicate bug reports considered harmful \u2026 really?"}, {"link": "", "title": "A formal model for information selection in multi-sentence text extraction"}, {"link": "", "title": "Text summarization model based on maximum coverage problem and its variant"}, {"link": "", "title": "The use of mmr, diversity-based reranking for reordering documents and producing summaries"}, {"link": "", "title": "Test report prioritization to assist crowdsourced testing"}, {"link": "", "title": "Multi-objective test report prioritization using image understanding"}, {"link": "/document/1641019", "title": "Beyond bags of features: Spatial pyramid matching for recognizing natural scene categories"}, {"link": "", "title": "Algorithms for Clustering Data"}, {"link": "", "title": "The pagerank citation ranking: Bringing order to the web"}, {"link": "", "title": "Modelling the hurried bug report reading process to summarize bug reports"}, {"link": "", "title": "Ausum: approach for unsupervised bug report summarization"}, {"link": "", "title": "Summarizing software artifacts: a case study of bug reports"}, {"link": "", "title": "Prst: A pagerank-based summarization technique for summarizing bug reports with duplicates"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "V-measure: A conditional entropy-based external cluster evaluation measure"}, {"link": "", "title": "Summarizing text documents: Sentence selection and evaluation metrics"}, {"link": "", "title": "Automatically evaluating content selection in summarization without human models"}, {"link": "/document/7675447", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "/document/6227111", "title": "Rebucket: A method for clustering duplicate crash reports based on call stack similarity"}, {"link": "", "title": "Fuzzy clustering of crowdsourced test reports for apps"}, {"link": "", "title": "Mining authorship characteristics in bug repositories"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811987"}
{"ref": [{"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "R2Fix: Automatically generating bug fixes from bug reports"}, {"link": "", "title": "MintHint: Automated synthesis of repair hints"}, {"link": "", "title": "More efficient automatic repair of large-scale programs using weak recompilation"}, {"link": "", "title": "Efficient automatic patch generation and defect identification in Kali"}, {"link": "", "title": "Automatically generated patches as debugging aids: A human study"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "", "title": "Automatic repair of real bugs in java: A large-scale experiment on the Defects4J dataset"}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "", "title": "Inductive programming: A survey of program synthesis techniques"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "History driven program repair"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "Qlose: Program repair with quantiative objectives"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "", "title": "Automatic inference of code transforms and search spaces for automatic patch generation systems"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Automatic model generation from documentation for java api functions"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Locating faults through automated predicate switching"}, {"link": "", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Learning to combine multiple ranking metrics for fault localization"}, {"link": "", "title": "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "", "title": "Gzoltar: an eclipse plug-in for testing and debugging"}, {"link": "", "title": "A learning-to-rank based fault localization approach using likely invariants"}, {"link": "", "title": "A critical review of \u201cautomatic patch generation learned from human-written patches\u201d: Essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "Automatic software repair: a bibliography"}, {"link": "", "title": "Dynamoth: dynamic code synthesis for automatic program repair"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "Repairing programs with semantic code search"}, {"link": "", "title": "The use of program profiling for software maintenance with applications to the year 2000 problem"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "", "title": "Deepfix: Fixing common c language errors by deep learning"}, {"link": "", "title": "Fixing recurring crash bugs via analyzing q&a sites"}, {"link": "", "title": "Safe memory-leak fixing for c programs"}, {"link": "", "title": "Fixing, preventing, and recovering from concurrency bugs"}, {"link": "", "title": "Automatic repair for multi-threaded programs with deadlock/livelock using maximum satisfiability"}, {"link": "", "title": "Fixing deadlocks via lock pre-acquisitions"}, {"link": "/document/6991616", "title": "Range fixes: Interactive error resolution for software configuration"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985681"}
{"ref": [{"link": "", "title": "Efficient, transparent, and comprehensive runtime code manipulation"}, {"link": "", "title": "Binary rewriting without relocation information"}, {"link": "", "title": "A Binary Rewriting Defense against Stack based Buffer Overflow Attacks"}, {"link": "", "title": "Control-flow integrity: principles, implementations, and applications. University of California"}, {"link": "", "title": "MoCFI: A framework to mitigate control-flow attacks on smartphones"}, {"link": "", "title": "Securing untrusted code via compiler-agnostic binary rewriting"}, {"link": "", "title": "Stackarmor: Comprehensive protection from stack-based memory error vulnerabilities for binaries"}, {"link": "", "title": "Practical context-sensitive cfi"}, {"link": "", "title": "A tough call: Mitigating advanced code-reuse attacks at the binary level"}, {"link": "/document/7962000", "title": "CodeArmor: Virtualizing the Code Space to Counter Disclosure Attacks"}, {"link": "", "title": "Dynamic analysis and debugging of binary code for security applications"}, {"link": "", "title": "Detecting code clones in binary executables"}, {"link": "", "title": "X-force: Force-executing binary programs for security applications"}, {"link": "", "title": "oo7: Low-overhead defense against spectre attacks via binary analysis"}, {"link": "", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "", "title": "Model-based whitebox fuzzing for program binaries"}, {"link": "/document/7194635", "title": "Hercules: Reproducing crashes in real-world application binaries"}, {"link": "/document/7194569", "title": "Data-delineation in software binaries and its application to buffer-overrun discovery"}, {"link": "/document/7985685", "title": "Spain: Security patch analysis for binaries towards understanding the pain and pills"}, {"link": "/document/1553569", "title": "Binary refactoring: Improving code behind the scenes"}, {"link": "", "title": "Recovering the toolchain provenance of binary code"}, {"link": "", "title": "Binary analysis platform"}, {"link": "", "title": "The Interactive Disassembler"}, {"link": "", "title": "Ollydbg"}, {"link": "", "title": "Jakstab: A static analysis platform for binaries"}, {"link": "", "title": "Second Write: Binary Rewriting without Relocation Information"}, {"link": "", "title": "Anywhere, any-time binary instrumentation"}, {"link": "", "title": "Binary code is not easy"}, {"link": "", "title": "BYTEWEIGHT: Learning to Recognize Functions in Binary Code"}, {"link": "", "title": "Superset disassembly: Statically rewriting x86 binaries without heuristics"}, {"link": "", "title": "An in-depth analysis of disassembly on full-scale x86/x64 binaries"}, {"link": "", "title": "Learning to analyze binary computer code"}, {"link": "", "title": "Recognizing functions in binaries with neural networks"}, {"link": "/document/7961979", "title": "Compiler-agnostic function detection in binaries"}, {"link": "/document/8023123", "title": "Function interface analysis: A principled approach for function recognition in cots binaries"}, {"link": "", "title": "Accurate Recovery of Functions in COTS Binaries"}, {"link": "", "title": "Obfuscation of executable code to improve resistance to static disassembly"}, {"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": "Intel\u00ae 64 and ia-32 architectures software developers manual"}, {"link": "", "title": "The probabilistic program dependence graph and its application to fault diagnosis"}, {"link": "", "title": "Merlin: Specification inference for explicit information flow problems"}, {"link": "", "title": "Dimsum: Discovering semantic data of interest from un-mappable with confidence"}, {"link": "", "title": "Differentiating code from data in x86 binaries"}, {"link": "", "title": "Shingled graph disassembly: Finding the undecideable path"}, {"link": "/document/1191551", "title": "An infrastructure for adaptive dynamic optimization"}, {"link": "/document/1550984", "title": "Pinpointing representative portions of large Intel Itanium programs with dynamic instrumentation"}, {"link": "/document/1611554", "title": "BIRD: binary interpretation using runtime disassembly"}, {"link": "/document/6671280", "title": "Static binary rewriting without supplemental information: Overcoming the tradeoff between coverage and correctness"}, {"link": "", "title": "Binary code continent: Finer-grained control flow integrity for stripped binaries"}, {"link": "", "title": "Retrofitting Security in COTS Software with Binary Rewriting"}, {"link": "", "title": "Static Disassembly of Obfuscated Binaries"}, {"link": "", "title": "Static disassembly of obfuscated binaries"}, {"link": "", "title": "Reassembleable disassembling"}, {"link": "/document/7476646", "title": "Uroboros: Instrumenting stripped binaries with static reassembling"}, {"link": "", "title": "Ramblr: Making reassembly great again"}, {"link": "", "title": "Eureka: A framework for enabling static malware analysis"}, {"link": "", "title": "Rootkits: Subverting the Windows Kernel, ch. 4: The Age-Old Art of Hooking"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812038"}
{"ref": [{"link": "", "title": "Stack Overflow goes beyond Q & As and launches crowdsourced documentation"}, {"link": "", "title": "Stack Overflow's Crowdsourcing Model Guarantees Success"}, {"link": "", "title": "Design Lessons from the Fastest Q&A Site in the West"}, {"link": "/document/7546508", "title": "You get where you're looking for: The impact of information sources on code security"}, {"link": "/document/7958574", "title": "Stack Overflow considered harmful? The impact of copy&paste on Android application security"}, {"link": "", "title": "Secure coding practices in Java: Challenges and vulnerabilities"}, {"link": "", "title": "Why Eve and Mallory love Android: An analysis of Android SSL (in) security"}, {"link": "", "title": "Live API documentation"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Discovering authorities in question answer communities by using link analysis"}, {"link": "/document/7404735", "title": "Incentive and reputation mechanisms for online crowdsourcing systems"}, {"link": "", "title": "A reputation-based incentive mechanism for a crowdsourcing platform for financial awareness"}, {"link": "", "title": "Privileges"}, {"link": "", "title": "KSOAP 2 Android with HTTPS"}, {"link": "", "title": "The Success of Stack Exchange: Crowdsourcing + Reputation Systems"}, {"link": "", "title": "What is reputation? How do I earn (and lose) it?"}, {"link": "", "title": "Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)"}, {"link": "", "title": "KSOAP 2 Android with HTTPS"}, {"link": "", "title": "Android - Crittografy Cipher decrypt doesn't work"}, {"link": "", "title": "RSA Encryption-Decryption: BadPaddingException: Data must start with zero"}, {"link": "", "title": "How do I use 3DES encryption/decryption in Java?"}, {"link": "", "title": "where to store confidential data like decryption key in android so that it can never be found by hacker"}, {"link": "", "title": "Stack Exchange Data Dump"}, {"link": "", "title": "Networks-Learning/stackexchange-dump-to-postgres"}, {"link": "", "title": "Bouncy castle"}, {"link": "", "title": "The GNU Crypto project"}, {"link": "", "title": "jasypt"}, {"link": "", "title": "Keyczar: A Cryptographic Toolkit"}, {"link": "", "title": "scribejava"}, {"link": "", "title": "spongycastle"}, {"link": "", "title": "Computational Statistics"}, {"link": "", "title": "Wilcoxon-Mann-Whitney or t-test? On assumptions for hypothesis tests and multiple interpretations of decision rules"}, {"link": "", "title": "Cliff's Delta Calculator: A non-parametric effect size program for two groups of observations"}, {"link": "", "title": "sky-wiper (a.k.a. flame a.k.a. flamer): A complex malware for targeted attacks"}, {"link": "", "title": "The most dangerous code in the world: Validating SSL certificates in non-browser software"}, {"link": "", "title": "Here come the xor ninjas"}, {"link": "", "title": "Fast and simple String encrypt/decrypt in JAVA"}, {"link": "", "title": "Understanding the factors for fast answers in technical Q & A websites"}, {"link": "", "title": "SSL Certificate Verification: javax.net.ssl.SSLHandshakeException"}, {"link": "", "title": "MessageDigest"}, {"link": "", "title": "is there a Java ECB provider?"}, {"link": "", "title": "Java: How implement AES with 128 bits with CFB and No Padding"}, {"link": "", "title": "Android Facebook API won't login"}, {"link": "", "title": "Trusting all certificates using HttpClient over HTTPS"}, {"link": "", "title": "encrypt message with symmetric key byte[] in Java"}, {"link": "", "title": "Software vulnerabilities in Java"}, {"link": "", "title": "An empirical study of cryptographic misuse in Android applications"}, {"link": "", "title": "Why does cryptographic software fail? A case study and open problems"}, {"link": "", "title": "State of software security"}, {"link": "", "title": "What security questions do developers ask? A large-scale study of Stack Overflow posts"}, {"link": "/document/6070393", "title": "Why do programmers make security errors?"}, {"link": "/document/6876252", "title": "Improving App Privacy: Nudging App Developers to Protect User Privacy"}, {"link": "", "title": "Jumping through hoops: Why do Java developers struggle with cryptography APIs?"}, {"link": "/document/6624013", "title": "Building reputation in stackoverflow: An empirical investigation"}, {"link": "", "title": "What are developers talking about? An analysis of topics and trends in Stack Overflow"}, {"link": "", "title": "An empirical case study on Stack Overflow to explore developers' security challenges"}, {"link": "", "title": "Are Code Examples on an Online Q & A Forum Reliable?: A Study of API Misuse on Stack Overflow"}, {"link": "/document/6693332", "title": "Stackoverflow and github: Associations between software development and crowdsourced knowledge"}, {"link": "", "title": "Crowd debugging"}, {"link": "", "title": "Mining Duplicate Questions in Stack Overflow"}, {"link": "/document/7884629", "title": "Stack overflow: A code laundering platform?"}, {"link": "", "title": "Detecting Duplicate Posts in Programming QA Communities via Latent Semantics and Association Rules"}, {"link": "/document/7962378", "title": "Stack Overflow in Github: Any Snippets There?"}, {"link": "", "title": "Detection of recurring software vulnerabilities"}, {"link": "/document/6234404", "title": "Redebug: Finding unpatched code clones in entire os distributions"}, {"link": "", "title": "Vulpecker: An automated vulnerability detection system based on code similarity analysis"}, {"link": "/document/7958600", "title": "Vuddy: A scalable approach for vulnerable code clone discovery"}, {"link": "", "title": "Keeping answers related to security up to date"}, {"link": "/document/7163045", "title": "Vetting SSL usage in applications with SSLINT"}, {"link": "/document/8077808", "title": "Program analysis of cryptographic implementations for security"}, {"link": "", "title": "Lase: Locating and applying systematic edits"}, {"link": "", "title": "Flawfinder"}, {"link": "", "title": "Checkmarx"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812042"}
{"ref": [{"link": "", "title": "A survey of the use of crowdsourcing in software engineering"}, {"link": "", "title": "Research progress of crowdsourced software testing"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "The art of software testing"}, {"link": "", "title": "Software testing and continuous quality improvement"}, {"link": "/document/5871780", "title": "When to stop testing: a study from the perspective of software reliability models"}, {"link": "/document/6918882", "title": "A software reliability growth model with two types of learning"}, {"link": "", "title": "Towards confidence with capture-recapture estimation: An exploratory study of dependence within inspections"}, {"link": "", "title": "The adoption of capture-recapture in software engineering: a systematic literature review"}, {"link": "", "title": "Estimating the number of undetected software errors via the correlated capture-recapture model"}, {"link": "", "title": "Application of kusumoto cost-metric to evaluate the cost effectiveness of software inspections"}, {"link": "", "title": "An approach to software reliability prediction based on time series modeling"}, {"link": "", "title": "On analyzing maintenance process data at the global and the detailed levels: A case study"}, {"link": "/document/799945", "title": "An empirical approach to studying software evolution"}, {"link": "/document/4228669", "title": "Fore-casting the number of changes in eclipse using time series analysis"}, {"link": "", "title": "Towards effectively test report classification to assist crowdsourced testing"}, {"link": "/document/7965432", "title": "Domain adaptation for test report classification in crowdsourced testing"}, {"link": "", "title": "Incremental sampling methodology"}, {"link": "", "title": "Sur les naissances, les mariages et les morts"}, {"link": "", "title": "Estimation of the size of a closed population when capture probabilities vary among animals"}, {"link": "", "title": "Estimating animal abundance with capture frequency data"}, {"link": "", "title": "Estimating the population size for capture-recapture data with unequal catchability"}, {"link": "", "title": "Estimating population size for capture-recapture data when capture probabilities vary by time, behavior and individual animal"}, {"link": "", "title": "Software engineering metrics and models"}, {"link": "/document/6081882", "title": "On the value of ensemble effort estimation"}, {"link": "", "title": "Comparative studies of the model evaluation criterions mmre and pred in software cost estimation research"}, {"link": "", "title": "Heterogeneous defect prediction"}, {"link": "", "title": "Ordinal methods for behavioral data analysis"}, {"link": "", "title": "Metrics and models in software quality engineering"}, {"link": "/document/852741", "title": "A comprehensive evaluation of capture-recapture models for estimating software defect content"}, {"link": "/document/4815353", "title": "Evaluating the effect of the number of naturally occurring faults on the estimates produced by capture-recapture models"}, {"link": "", "title": "Using learning styles of software professionals to improve their inspection team performance"}, {"link": "", "title": "Defect propagation at the project-level: results and a post-hoc analysis on inspection efficiency"}, {"link": "", "title": "Successes, challenges, and rethinking-an industrial investigation on crowdsourced mobile application testing"}, {"link": "", "title": "Puzzle-based automatic testing: Bringing humans into the loop by solving puzzles"}, {"link": "", "title": "Affective crowdsourcing applied to usability testing"}, {"link": "/document/6509371", "title": "Leveraging the crowd: How 48,000 users helped improve lync performance"}, {"link": "", "title": "Re-producing context-sensitive crashes of mobile apps using crowdsourced monitoring"}, {"link": "", "title": "Test report prioritization to assist crowdsourced testing"}, {"link": "", "title": "Multi-objective test report prioritization using image understanding"}, {"link": "", "title": "Fuzzy clustering of crowdsourced test reports for apps"}, {"link": "", "title": "Local-based active classification of test report to assist crowdsourced testing"}, {"link": "/document/8029593", "title": "Who should be selected to perform a task in crowdsourced testing?"}, {"link": "", "title": "Multi-objective crowd worker selection in crowdsourced testing"}, {"link": "", "title": "Cocoon: Crowd-sourced testing quality maximization under context coverage constraint"}, {"link": "", "title": "QTEP: quality-aware test case prioritization"}, {"link": "", "title": "Comparing and combining test-suite reduction and regression test selection"}, {"link": "", "title": "Empirical evaluation of pareto efficient multi-objective regression test case prioritisation"}, {"link": "/document/7194580", "title": "An information retrieval approach for regression test prioritization based on program changes"}, {"link": "", "title": "Comparing white-box and black-box test prioritization"}, {"link": "/document/6936894", "title": "Improving multi-objective test case selection by injecting diversity in genetic algorithms"}, {"link": "", "title": "Towards refactoring-aware regression test selection"}, {"link": "", "title": "Hybrid regression test selection"}, {"link": "", "title": "Fast approaches to scalable similarity-based test case prioritization"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "\u201cbetter data\u201d is better than \u201cbetter data miners\u201d (benefits of tuning smote for defect prediction)"}, {"link": "", "title": "A systematic review on software defect prediction"}, {"link": "/document/145356", "title": "Realistic assumptions for software reliability models"}, {"link": "", "title": "Software failure prediction based on a markov bayesian network model"}, {"link": "", "title": "Using bayesian networks to predict software defects and reliability"}, {"link": "", "title": "Bayesian software reliability prediction using software metrics information"}, {"link": "", "title": "A generic data-driven software reliability model with model mining technique"}, {"link": "", "title": "Failure and reliability prediction by support vector machines regression of time series data"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812109"}
{"ref": [{"link": "", "title": "A systematic and comprehensive investigation of methods to build and evaluate fault prediction models"}, {"link": "", "title": "Optimally profiling and tracing programs"}, {"link": "/document/5609736", "title": "Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging"}, {"link": "/document/1317470", "title": "Finding latent code errors via machine learning over program executions"}, {"link": "", "title": "Learning fault localisation for both humans and machines using multi-objective gp"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "", "title": "Doc: A practical approach to source-level debugging of globally optimized code"}, {"link": "/document/5463279", "title": "An extensive comparison of bug prediction approaches"}, {"link": "/document/5562940", "title": "A grouping-based strategy to improve the effectiveness of fault localization techniques"}, {"link": "", "title": "Critical slicing for software fault localization"}, {"link": "", "title": "Method, system, and program for logging statements to monitor execution of a program"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "/document/7194626", "title": "Revisiting the impact of classification techniques on the performance of defect prediction models"}, {"link": "", "title": "An artificial intelligence approach to network fault management"}, {"link": "", "title": "Advances in techniques for test prioritization"}, {"link": "/document/6982636", "title": "Using pre-release test failures to build early post-release defect prediction models"}, {"link": "/document/7202948", "title": "Empirically detecting false test alarms using association rules"}, {"link": "", "title": "Fault isolation based on decision-theoretic troubleshooting"}, {"link": "/document/7985707", "title": "What causes my test alarm?: Automatic cause analysis for test alarms in system and integration testing"}, {"link": "", "title": "An automated approach for abstracting execution logs to execution events"}, {"link": "", "title": "Empirical evaluation of the tarantula automatic fault-localization technique"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing"}, {"link": "", "title": "A defect prediction method for software versioning"}, {"link": "/document/5670030", "title": "Attribute selection and imbalanced data: Problems in software defect prediction"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "/document/4408585", "title": "Classifying software changes: Clean or buggy?"}, {"link": "", "title": "Predicting defect densities in source code files with decision tree learners"}, {"link": "", "title": "Experimental evaluation of program slicing for fault localization"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "", "title": "A log mining approach to failure analysis of enterprise telephony systems"}, {"link": "", "title": "A hybrid approach to fault diagnosis in network and system management"}, {"link": "/document/5714425", "title": "Effort-aware defect prediction models"}, {"link": "/document/4812760", "title": "Evaluating defect prediction models for a large evolving software system"}, {"link": "", "title": "Flaky tests at google and how we mitigate them"}, {"link": "", "title": "Comprehensible software fault and effort prediction: A data mining approach"}, {"link": "", "title": "Analysis of execution log files"}, {"link": "/document/5463281", "title": "Abstracting log lines to log event types for mining software system logs"}, {"link": "", "title": "Predicting vulnerable software components"}, {"link": "", "title": "Software defect prediction using bayesian networks"}, {"link": "", "title": "Mutation testing advances: an analysis and survey"}, {"link": "", "title": "Resource Management for Big Data Platforms: Algorithms, Modelling, and High-Performance Computing Techniques"}, {"link": "", "title": "The impact of failing, flaky, and high failure tests on the number of crash reports associated with firefox builds"}, {"link": "/document/341844", "title": "A practical approach to programming with assertions"}, {"link": "", "title": "Introduction to modern information retrieval"}, {"link": "/document/7190078", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "/document/510855", "title": "Improving the accuracy of diagnostics provided by fault dictionaries"}, {"link": "/document/6226427", "title": "Reducing features to improve code change-based bug prediction"}, {"link": "/document/5611551", "title": "A general software defect-proneness prediction framework"}, {"link": "/document/1392628", "title": "Towards informatic analysis of syslogs"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "/document/1251233", "title": "A data clustering algorithm for mining patterns from event logs"}, {"link": "", "title": "Program slicing"}, {"link": "/document/819971", "title": "What is software testing? and why is it so hard?"}, {"link": "", "title": "Using neural networks for alarm correlation in cellular phone networks"}, {"link": "/document/5562955", "title": "Fault localization based on dynamic slicing and hitting-set computation"}, {"link": "/document/6227209", "title": "Developer prioritization in bug repositories"}, {"link": "", "title": "Pareto efficient multi-objective test case selection"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}, {"link": "", "title": "Predictive mutation testing"}, {"link": "/document/8530018", "title": "Test re-prioritization in continuous testing environments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812113"}
{"ref": [{"link": "", "title": "Longest consecutive sequence"}, {"link": "", "title": "Microbat experiment code"}, {"link": "", "title": "Microbat github website"}, {"link": "", "title": "Microbat webpage"}, {"link": "", "title": "Search in roated sorted array"}, {"link": "", "title": "Simple calculator problem"}, {"link": "", "title": "Whyline video"}, {"link": "", "title": "Biological Sequences and the Exact String Matching Problem"}, {"link": "", "title": "Spectrum-based multiple fault localization"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "Tardis: Affordable time-travel debugging in managed runtimes"}, {"link": "", "title": "Software Testing Techniques (2Nd Ed.)"}, {"link": "", "title": "When, how, and why developers (do not) test in their ides"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "", "title": "Evaluating the effectiveness of reliability-assurance techniques"}, {"link": "", "title": "Interactive fault localization leveraging simple user feedback"}, {"link": "", "title": "Locating faulty code using failure-inducing chops"}, {"link": "", "title": "A linear space algorithm for computing maximal common subsequences"}, {"link": "", "title": "Designing the whyline: A debugging interface for asking questions about program behavior"}, {"link": "", "title": "Debugging reinvented: Asking and answering why and why not questions about program behavior"}, {"link": "", "title": "Finding causes of program output with the java whyline"}, {"link": "", "title": "Technique report: A tree-based approach to identifying and explaining regression bug"}, {"link": "", "title": "Doubletake: Evidence-based dynamic analysis"}, {"link": "", "title": "Hdd: Hierarchical delta debugging"}, {"link": "/document/5287015", "title": "Back to the future: Omniscient debugging"}, {"link": "", "title": "Summarized trace indexing and querying for scalable back-in-time debugging"}, {"link": "", "title": "Darwin: An approach for debugging evolving programs"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "The use of program profiling for software maintenance with applications to the year 2000 problem"}, {"link": "/document/6227167", "title": "Object-centric debugging"}, {"link": "", "title": "Lightweight fault-localization using multiple coverage types"}, {"link": "", "title": "Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization"}, {"link": "", "title": "A synergistic analysis method for explaining failed regression tests"}, {"link": "", "title": "Sherlog: Error diagnosis by connecting clues from run-time logs"}, {"link": "", "title": "Yesterday, my program worked. today, it does not. why?"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985679"}
{"ref": [{"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Principal Component Analysis"}, {"link": "", "title": "Linguistic regularities in continuous space word representations"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Statistical Learning Approach for Mining API Usage Mappings for Code Migration"}, {"link": "", "title": "Phrasal: A toolkit for statistical machine translation with facilities for extraction and incorporation of arbitrary model features"}, {"link": "", "title": "Deep learning: Methods and applications"}, {"link": "", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "", "title": "Inferring likely mappings between APIs"}, {"link": "", "title": "Java2CSharp"}, {"link": "", "title": "Exploiting similarities among languages for machine translation"}, {"link": "", "title": "Aura: A hybrid approach to identify framework evolution"}, {"link": "/document/6227179", "title": "A history-based matching approach to identification of framework evolution"}, {"link": "", "title": "Jv2cs project's website"}, {"link": "", "title": "Deep API learning"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Parameter-free probabilistic API mining at GitHub scale"}, {"link": "", "title": "Suggesting accurate method and class names"}, {"link": "", "title": "Structured generative models of natural source code"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Bimodal modelling of source code and natural language"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Synthesizing Java expressions from free-form queries"}, {"link": "", "title": "SWIM: Synthesizing What I Mean: Code Search and Idiomatic Snippet Synthesis"}, {"link": "", "title": "Building program vector representations for deep learning"}, {"link": "", "title": "Convolutional neural networks over tree structures for programming language processing"}, {"link": "", "title": "Sharpen"}, {"link": "", "title": "DMS"}, {"link": "", "title": "Java to C# Converter"}, {"link": "", "title": "XES"}, {"link": "", "title": "Octopus.Net Translator"}, {"link": "", "title": "Microsoft Java Language Conversion Assistant"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "/document/7372046", "title": "Divide-and-conquer approach for multi-phase statistical migration for source code (t)"}, {"link": "", "title": "Migrating code with statistical machine translation"}, {"link": "", "title": "Phrase-based statistical translation of programming languages"}, {"link": "", "title": "Learning to generate pseudo-code from source code using statistical machine translation (t)"}, {"link": "", "title": "Mapping API Elements for Code Migration with Vector Representations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985683"}
{"ref": [{"link": "/document/7962385", "title": "Oops, my tests broke the build: an explorative analysis of travis CI with GitHub"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Continuous delivery: Patterns and antipatterns in the software life cycle"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Use and misuse of continuous integration features: An empirical study of projects that (mis) use Travis CI"}, {"link": "", "title": ""}, {"link": "", "title": "The GHTorrent dataset and tool suite"}, {"link": "", "title": "Work practices and challenges in pull-based development: The contributor's perspective"}, {"link": "/document/6227171", "title": "Detecting and visualizing inter-worksheet smells in spreadsheets"}, {"link": "", "title": "Trade-offs in continuous integration: assurance, security, and flexibility"}, {"link": "", "title": "Usage, costs, and benefits of continuous integration in open-source projects"}, {"link": "", "title": "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation"}, {"link": "/document/4639357", "title": "Automated continuous integration of component-based software: An industrial experience"}, {"link": "/document/7284593", "title": "Stakeholder perceptions of the adoption of continuous integration-a case study"}, {"link": "/document/8330201", "title": "Automatically repairing dependency-related build breakage"}, {"link": "/document/5196681", "title": "DECOR: A method for the specification and detection of code and design smells"}, {"link": "", "title": "Questionnaire Design, Interviewing and Attitude Measurement. Pinter, London"}, {"link": "/document/6976076", "title": "Do they really smell bad? A study on developers' perception of bad code smells"}, {"link": "", "title": "Characteristics of defective infrastructure as code scripts in devops"}, {"link": "/document/8367034", "title": "Characterizing defective configuration scripts used for continuous deployment"}, {"link": "/document/7962384", "title": "An empirical analysis of build failures in the continuous integration workflows of Java-based open-source software"}, {"link": "", "title": "Does your configuration code smell?"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "Card sorting: Designing usable categories"}, {"link": "", "title": "Automated Software Integration Flows in Industry: A Multiple-case Study"}, {"link": "", "title": ""}, {"link": "", "title": "Exploratory Data Analysis"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in GitHub"}, {"link": "", "title": "Artifact Page - Automated Reporting of Anti-Patterns and Decay in Continuous Integration"}, {"link": "", "title": "Un-break my build: assisting developers with build repair hints"}, {"link": "/document/8094420", "title": "A tale of CI build failures: An open source and a financial organization perspective"}, {"link": "/document/4815346", "title": "The effectiveness of automated static analysis tools for fault detection and refactoring prediction"}, {"link": "/document/7962383", "title": "How open source projects use static code analysis tools in continuous integration pipelines"}, {"link": "/document/8115619", "title": "The impact of continuous integration on other software development practices: A large-scale empirical study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811921"}
{"ref": [{"link": "", "title": "Understanding sustained participation in open source software projects"}, {"link": "", "title": "Why modern open source projects fail"}, {"link": "", "title": "Activity traces and signals in software developer recruitment and hiring"}, {"link": "", "title": "Open source survey"}, {"link": "", "title": "Understanding the motivations, participation, and performance of open source software developers: A longitudinal study of the apache projects"}, {"link": "", "title": "Motivation of software developers in open source projects: An internet-based survey of contributors to the Linux kernel"}, {"link": "/document/7976690", "title": "Developer turnover in global, industrial open source projects: Insights from applying survival analysis"}, {"link": "/document/6149241", "title": "Who will remain? an evaluation of actual person-job and person-team fit to predict developer retention in FLOSS projects"}, {"link": "/document/6624016", "title": "Will my patch make it? and how fast?: Case study on the Linux kernel"}, {"link": "/document/7180076", "title": "Will they like this?: Evaluating code contributions with language models"}, {"link": "", "title": "A study of external community contribution to open-source projects on GitHub"}, {"link": "/document/6976093", "title": "Writing acceptable patches: An empirical study of open source project patches"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "The gender of social capital"}, {"link": "", "title": "Structural holes versus network closure as social capital"}, {"link": "", "title": "Understanding knowledge sharing in virtual communities: An integration of social capital and social cognitive theories"}, {"link": "", "title": "The impact of social capital on labor force participation: Evidence from the 2000 social capital benchmark survey"}, {"link": "", "title": "Social capital and philanthropy: An analysis of the impact of social capital on individual giving and volunteering"}, {"link": "", "title": "The role of social capital in financial development"}, {"link": "", "title": "Emergence of new project teams from open source software developer networks: Impact of prior collaboration ties"}, {"link": "", "title": "Developer onboarding in GitHub: The role of prior social links and language experience"}, {"link": "", "title": "Do women suffer from network closure? the moderating effect of social capital on gender inequality in a project-based labor market, 1929 to 2010"}, {"link": "", "title": "Open source barriers to entry, revisited: A sociotechnical perspective"}, {"link": "", "title": "Social capital: Prospects for a new concept"}, {"link": "", "title": "The open source software development phenomenon: An analysis based on social network theory"}, {"link": "", "title": "The role of social capital in open source software communities"}, {"link": "", "title": "Foundations of social theory"}, {"link": "", "title": "The strength of weak ties"}, {"link": "", "title": "Information networks and market behavior"}, {"link": "", "title": "Volunteers' participation in open source software development: A study from the social-relational perspective"}, {"link": "", "title": "Membership herding and network stability in the open source community: The Ising perspective"}, {"link": "/document/7312948", "title": "Promoting continuance through shaping members' social identity in knowledge-based versus support/advocacy virtual communities"}, {"link": "", "title": "Analysis of virtual communities supporting OSS projects using social network analysis"}, {"link": "", "title": "Working in the creative economy: Risk, adaptation and the persistence of exclusionary networks"}, {"link": "", "title": "Social capital and networks in film and tv: Jobs for the boys?"}, {"link": "", "title": "Active networking: Action, social structure and the process of networking"}, {"link": "", "title": "Social capital: Its origins and applications in modern sociology"}, {"link": "", "title": "Chasing Stars: The Myth of Talent and the Portability of Performance"}, {"link": "", "title": "Diversity in open source is even worse than in tech overall"}, {"link": "", "title": "Summary analysis of the 2017 GitHub open source survey"}, {"link": "", "title": "patches don't have gender': What is not open in open source software"}, {"link": "", "title": "Gender and tenure diversity in GitHub teams"}, {"link": "", "title": "Gender differences and bias in open source: Pull request acceptance of women versus men"}, {"link": "", "title": "Social Capital: A Theory of Social Structure and Action"}, {"link": "", "title": "Perceptions of diversity on GitHub: A user survey"}, {"link": "", "title": "Paradise unplugged: Identifying barriers for female participation on Stack Overflow"}, {"link": "", "title": "Appiyng social network analysis to the information in CVS repositories"}, {"link": "", "title": "Team structure and team performance in is development: A social network perspective"}, {"link": "/document/4031755", "title": "Leveraging expertise in global software teams: Going outside boundaries"}, {"link": "", "title": "Analysis of virtual communities supporting oss projects using social network analysis"}, {"link": "/document/6336697", "title": "Uncovering latent social communities in software development"}, {"link": "", "title": "Impact of developer turnover on quality in open-source software"}, {"link": "/document/6227164", "title": "What make long term contributors: Willingness and opportunity in OSS community"}, {"link": "", "title": "Selecting empirical methods for software engineering research"}, {"link": "/document/6624034", "title": "The GHTorrent dataset and tool suite"}, {"link": "/document/7816480", "title": "Who is who in the mailing list? comparing six disambiguation heuristics to identify multiple addresses of a participant"}, {"link": "", "title": "Mining email social networks"}, {"link": "", "title": "On the variation and specialisation of workload-a case study of the Gnome ecosystem community"}, {"link": "", "title": "Recognizing gender of Stack Overflow users"}, {"link": "", "title": "Inferring gender from names on the web: A comparative evaluation of gender detection methods"}, {"link": "", "title": "Overview of the 5th author profiling task at pan 2017: Gender and language variety identification in twitter"}, {"link": "/document/8154879", "title": "Gender, representation and online participation: A quantitative study"}, {"link": "", "title": "Survival analysis"}, {"link": "", "title": "Disruptive diversity and recurring cohesion: Assembling creative teams in the video game industry, 1979-2009"}, {"link": "", "title": "Scientific collaboration networks II. Shortest paths, weighted networks, and centrality"}, {"link": "", "title": "Mixing genres and matching people: A study in innovation and team composition in Hollywood"}, {"link": "", "title": "More than network structure: How knowledge heterogeneity influences managerial performance and innovativeness"}, {"link": "", "title": "Programming languages and github"}, {"link": "", "title": "The Babel of software development: Linguistic diversity in open source"}, {"link": "", "title": "Don't touch my code!: Examining the effects of ownership on software quality"}, {"link": "", "title": "Understanding watchers on GitHub"}, {"link": "", "title": "Social coding in GitHub: Transparency and collaboration in an open software repository"}, {"link": "", "title": "Impression formation in online peer production: Activity traces and personal profiles in GitHub"}, {"link": "/document/7476635", "title": "More common than you think: An in-depth study of casual contributors"}, {"link": "", "title": "Handbook of statistical distributions"}, {"link": "", "title": "Data analysis using regression and multi-level/hierarchical models"}, {"link": "", "title": "Applied multiple regression/correlation analysis for the behavioral sciences"}, {"link": "", "title": "Proportional hazards tests and diagnostics based on weighted residuals"}, {"link": "", "title": "The promises and perils of mining GitHub"}, {"link": "/document/7985658", "title": "From diversity by numbers to diversity as process: Supporting inclusiveness in software development teams with brainstorming"}, {"link": "", "title": "The measurement of work engagement with a short questionnaire: A cross-national study"}, {"link": "", "title": "The benefits of facebook \u201cfriends:\u201d social capital and college students' use of online social network sites"}, {"link": "", "title": "Events and loyalty formation: The role of satisfaction, felt community, emotional experience, and frequency of use"}, {"link": "", "title": "Job demands, job resources, and their relationship with burnout and engagement: A multi-sample study"}, {"link": "", "title": "Measuring and modeling programming experience"}, {"link": "", "title": "Modeling participation in an online travel community"}, {"link": "", "title": "Why hackers do what they do: Understanding motivation and effort in free/open source software projects"}, {"link": "/document/7155435", "title": "Feminine expertise in architecting teams"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences"}, {"link": "", "title": "Competence-confidence gap: A threat to female developers' contribution on GitHub"}, {"link": "", "title": "One-time contributors to FLOSS: Surveys and data analysis"}, {"link": "", "title": "Sex-specific labour market indicators: What they show"}, {"link": "", "title": "Women in free/libre/open source software: The situation in the 2010s"}, {"link": "", "title": "Exploring methods for evaluating group differences on the NSSE and other surveys: Are the t-test and Cohen's d indices the most appropriate choices?"}, {"link": "", "title": "Roads and bridges: The unseen labor behind our digital infrastructure"}, {"link": "", "title": "Ecosystem-level determinants of sustained activity in open-source projects: A case study of the PyPI ecosystem"}, {"link": "", "title": "Newcomers' barriers\u2026 is that all? an analysis of mentors' and newcomers' barriers in OSS projects"}, {"link": "", "title": "Adding sparkle to social coding: An empirical study of repository badges in the npm ecosystem"}, {"link": "", "title": "Gender differences in early free and open source software joining process"}, {"link": "/document/8103473", "title": "Someone like me: How does peer parity influence participation of women on Stack Overflow?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812044"}
{"ref": [{"link": "", "title": "Apachc-Hadoop Design documents"}, {"link": "", "title": "Apache-Hive Developer Guide"}, {"link": "", "title": "34th International Conference on Software Engineering, ICSE 2012"}, {"link": "/document/5420791", "title": "Agility and architecture: Can they coexist?"}, {"link": "", "title": "Reducing the effort of bug report triage: Recommenders for development-oriented decisions"}, {"link": "", "title": "Deriving Architectural Tactics: A Step Toward Methodical Architectural Design"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "On creating a handbook of software architecture"}, {"link": "", "title": "Software architecture: The next step"}, {"link": "/document/256851", "title": "Developing interpretable models with optimized set reduction for identifying high-risk software components"}, {"link": "", "title": "The Adaptive Web, Methods and Strategies of Web Personalization"}, {"link": "", "title": "Hybrid recommender systems: Survey and experiments"}, {"link": "", "title": "Pattern-Oriented Software Architecture"}, {"link": "", "title": "A recommender system for requirements elicitation in large-scale software projects"}, {"link": "", "title": "Roc graphs: Notes and practical considerations for researchers"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Information Retrieval: Data Structures and Algorithms"}, {"link": "", "title": "Adaptive bootstrapping of recommender systems using decision trees"}, {"link": "", "title": "Adaptive bootstrapping of recommender systems using decision trees"}, {"link": "", "title": "Large-scale learning with adagrad on spark"}, {"link": "", "title": "Artificial neural network modeling to predict the hot deformation behavior of an a356 aluminum alloy"}, {"link": "", "title": "Patterns for Fault Tolerant Software"}, {"link": "", "title": "Potentials and challenges of recommendation systems for software development"}, {"link": "", "title": "How do architecture patterns and tactics interact? a model and annotation"}, {"link": "", "title": "Evaluating collaborative filtering recommender systems"}, {"link": "/document/4016572", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "/document/6152147", "title": "Selection of proper neural network sizes and architecturesa comparative study"}, {"link": "", "title": "How software designs decay: A pilot study of pattern evolution"}, {"link": "/document/1017616", "title": "An efficient k-means clustering algorithm: Analysis and implementation"}, {"link": "", "title": "Atam: A method for architecture evaluation"}, {"link": "/document/5197422", "title": "Matrix factorization techniques for recommender systems"}, {"link": "", "title": "An ontology of architectural design decisions"}, {"link": "", "title": "Sourcerer: mining and searching internet-scale software repositories"}, {"link": "", "title": "A decision-centric approach for tracing reliability concerns in embedded software systems"}, {"link": "/document/5420794", "title": "Agile architecture interactions"}, {"link": "", "title": "Comparison of the predicted and observed secondary structure of t4 phage lysozyme"}, {"link": "/document/6617352", "title": "A domain-centric approach for recommending architectural tactics to satisfy quality concerns"}, {"link": "/document/7270338", "title": "Detecting, tracing, and monitoring architectural tactics in code"}, {"link": "", "title": "Variability points and design pattern usage in architectural tactics"}, {"link": "/document/6227153", "title": "A tactic-centric approach for automating traceability of quality concerns"}, {"link": "/document/1007994", "title": "Expertise browser: a quantitative approach to identifying expertise"}, {"link": "/document/910904", "title": "Weaving together requirements and architectures"}, {"link": "", "title": "Content-based recommendation systems"}, {"link": "", "title": "Improving evolvability through refactoring"}, {"link": "/document/5235134", "title": "Recommendation systems for software engineering"}, {"link": "", "title": "Optimization of laser welding process parameters for super austenitic stainless steel using artificial neural networks and genetic algorithm"}, {"link": "", "title": "Collaborative filtering recommender systems"}, {"link": "", "title": "An empirical study of learning rates in deep neural networks for speech recognition"}, {"link": "", "title": "Real-time frequency-based noise-robust automatic speech recognition using multi-nets artificial neural networks: A multi-views multi-learners approach"}, {"link": "", "title": "Beyond refactoring: a framework for modular maintenance of crosscutting design idioms"}, {"link": "/document/6178900", "title": "Recommending refactorings to reverse software architecture erosion"}, {"link": "", "title": "Parseweb: a programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Design preservation over subsequent releases of a software product: a case study of baan erp: Practice articles"}, {"link": "", "title": "Top 10 algorithms in data mining"}, {"link": "", "title": "Three-way recommender systems based on random forests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985646"}
{"ref": [{"link": "", "title": "customers really want better battery life"}, {"link": "/document/6682059", "title": "Energy consumption and efficiency in mobile applications: A user feedback study"}, {"link": "/document/6762802", "title": "What do mobile app users complain about?"}, {"link": "", "title": "An empirical study of practitioners' perspectives on green software engineering"}, {"link": "/document/7155416", "title": "What do programmers know about software energy consumption?"}, {"link": "", "title": "From benchmarks to real apps: Exploring the energy impacts of performance-directed changes"}, {"link": "", "title": "Number of smartphone users worldwide from 2014 to 2020 (in billions)"}, {"link": "", "title": "Half of Us Have Computers in Our Pockets, Though You'd Hardly Know it"}, {"link": "", "title": "Cisco visual networking index: Forecast and methodology, 2016-2021"}, {"link": "", "title": "Detecting Energy Bugs and Hotspots in Mobile Apps"}, {"link": "", "title": "Decoupling level: A new metric for architectural maintenance complexity"}, {"link": "", "title": "Greenbundle: replication and extension"}, {"link": "", "title": "Making Web Applications More Energy Efficient for OLED Smartphones"}, {"link": "", "title": "Accurate Online Power Estimation and Automatic Battery Behavior Based Power Model Generation for Smartphones"}, {"link": "", "title": "Energy profiles of java collections classes"}, {"link": "", "title": "The influence of the java collection framework on overall energy consumption"}, {"link": "", "title": "Automated energy optimization of http requests for mobile applications"}, {"link": "/document/7476672", "title": "Client-side Energy Efficiency of HTTP/2 for Web and Mobile App Developers"}, {"link": "", "title": "Understanding and detecting wake lock misuses for android applications"}, {"link": "", "title": "Energy optimization in android applications through wakelock placement"}, {"link": "/document/6945728", "title": "Wlcleaner: Reducing energy waste caused by wakelock bugs at runtime"}, {"link": "/document/7154832", "title": "Reducing power consumption of smart device by proper management of wakelocks"}, {"link": "/document/6606555", "title": "Estimating Mobile Application Energy Consumption Using Program Analysis"}, {"link": "/document/7884613", "title": "Software-based energy profiling of android apps: Simple, efficient and reliable?"}, {"link": "", "title": "An Analysis of Power Consumption in a Smartphone"}, {"link": "", "title": "Into the Wild: Studying Real User Activity Patterns to Guide Power Optimizations for Mobile Architectures"}, {"link": "/document/995705", "title": "Using Complete Machine Simulation for Software Power Estimation: The SoftWatt Approach"}, {"link": "/document/749272", "title": "PowerScope: A Tool for Profiling the Energy Usage of Mobile Applications"}, {"link": "", "title": "Self-constructive High-rate System Energy Modeling for Battery-powered Mobile Systems"}, {"link": "", "title": "Greenscaler: training software energy models with automatic test generation"}, {"link": "/document/6224257", "title": "Initial explorations on design pattern energy usage"}, {"link": "", "title": "Gui architectures. 2006"}, {"link": "", "title": "Mvp: Model-view-presenter the taligent programming model for c++ and java"}, {"link": "", "title": "Exercises in programming style"}, {"link": "", "title": "Model-view-presenter: Our choice of architecture for your android app"}, {"link": "", "title": "Android architecture blueprints"}, {"link": "", "title": "Xamarin application architecture"}, {"link": "", "title": "Where is the Energy Spent Inside My App?: Fine Grained Energy Accounting on Smartphones with Eprof"}, {"link": "", "title": "An exploratory study on assessing the energy impact of logging on android applications"}, {"link": "", "title": "Remove rats from your code: Automated optimization of resource inefficient database writes for mobile applications"}, {"link": "", "title": "Processes and threads overview"}, {"link": "", "title": "GreenMiner: A Hardware Based Mining Software Repositories Software Energy Consumption Framework"}, {"link": "", "title": "Green Mining: Energy Consumption of Advertisement Blocking Methods"}, {"link": "/document/7332477", "title": "Greenadvisor: A tool for analyzing the impact of software evolution on energy consumption"}, {"link": "/document/8094428", "title": "Deep green: Modelling time-series of software energy consumption"}, {"link": "", "title": "Greenoracle: Estimating software energy consumption with energy measurement corpora"}, {"link": "", "title": "What can android mobile app developers do about the energy consumption of machine learning?"}, {"link": "", "title": "Nonparametric statistical methods"}, {"link": "", "title": "Android Debug Bridge"}, {"link": "", "title": "Spearman's Rank-Order Correlation"}, {"link": "", "title": "The world beyond batch: Streaming 101"}, {"link": "", "title": "How to serve billions of web requests per day without breaking a sweat"}, {"link": "", "title": "How many data sources in your apps? let me count the apis"}, {"link": "", "title": "Microsoft"}, {"link": "", "title": "Sensor readout"}, {"link": "", "title": "Colorpicker"}, {"link": "", "title": "Angulo"}, {"link": "", "title": "Acrylicpaint"}, {"link": "", "title": "F-droid: Free and open source android app repository"}, {"link": "", "title": "How android app developers manage power consumption?: An empirical study by mining power management commits"}, {"link": "/document/7180133", "title": "A dataset of open-source android applications"}, {"link": "", "title": "Predicting crashing releases of mobile applications"}, {"link": "", "title": "Sensor readout"}, {"link": "/document/6636712", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "Understand"}, {"link": "", "title": "Exploring the structure of complex software designs: An empirical study of open source and proprietary code"}, {"link": "/document/5290817", "title": "From retrospect to prospect: Assessing modularity and stability from software architecture"}, {"link": "", "title": "Characterizing energy-aware software projects: Are they different?"}, {"link": "", "title": "Kruskalwallis test: Handbook of biological statistics"}, {"link": "/document/7180107", "title": "Going green: An exploratory analysis of energy-related questions"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "/document/7972715", "title": "Investigating decreasing energy usage in mobile apps via indistinguishable color changes"}, {"link": "", "title": "Energy Efficiency of Mobile Clients in Cloud Computing"}, {"link": "", "title": "A Comparison of the Cost and Energy Efficiency of Prefetching and Streaming of Mobile Video"}, {"link": "/document/7884614", "title": "Investigating the energy impact of android smells"}, {"link": "/document/6976079", "title": "How Does Code Obfuscation Impact Energy Usage?"}, {"link": "", "title": "How do code refactorings affect energy usage?"}, {"link": "", "title": "Fine-grained Power Modeling for Smartphones Using System Call Tracing"}, {"link": "", "title": "Energy-aware test-suite minimization for android apps"}, {"link": "", "title": "\u03bcdroid: An energy-aware mutation testing framework for android"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811956"}
{"ref": [{"link": "", "title": "Recommending clones for refactoring using design, context, and history"}, {"link": "", "title": "Automatic ranking of clones for refactoring through mining associationrules"}, {"link": "/document/6975631", "title": "Automatic identification of important clones for refactoring and tracking"}, {"link": "", "title": "Do code clones matter?"}, {"link": "", "title": "An empirical study on inconsistent changes to code clones at the release level"}, {"link": "/document/4658071", "title": "Assessing the effect of clones on changeability"}, {"link": "", "title": "An empirical study on the maintenance of source code clones"}, {"link": "", "title": "Why we refactor? confessions of github contributors"}, {"link": "", "title": "SourcererCC: Scaling code clone detection to big-code"}, {"link": "", "title": "Increasing clone maintenance support by unifying clone detection and refactoring activities"}, {"link": "", "title": "Does automated refactoring obviate systematic editing?"}, {"link": "/document/7130676", "title": "Assessing the refactorability of software clones"}, {"link": "", "title": "Java 8 in Action: Lambdas, Streams, and Functional-style Programming"}, {"link": "", "title": "Clone Refactoring with Lambda Expressions - Dataset"}, {"link": "", "title": "Does automated unit test generation really help software testers? a controlled empirical study"}, {"link": "", "title": "The impact of test case summaries on bug fixing performance: An empirical investigation"}, {"link": "", "title": "Refactoring test code"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Backtrack search algorithms and the maximal common subgraph problem"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Detecting differences across multiple instances of code clones"}, {"link": "", "title": "The Java\u2122 Tutorials - Local Classes"}, {"link": "", "title": "The Java\u2122 Tutorials - Lambda Expressions"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "NICAD: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization"}, {"link": "", "title": "JDeodorant - Commandline"}, {"link": "", "title": "JaCoCo Java Code Coverage Library"}, {"link": "", "title": "JDeodorant - JLS8-support branch"}, {"link": "/document/6175911", "title": "Automated behavioral testing of refactoring engines"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Java 8 top tips"}, {"link": "", "title": "Lambda expressions and functional interfaces: Tips and best practices"}, {"link": "", "title": "Searching for better configurations: A rigorous approach to clone evaluation"}, {"link": "/document/6178876", "title": "Identifying, tailoring, and suggesting form template method refactoring opportunities with program dependence graph"}, {"link": "", "title": "Toward an implementation of the \u201cform template method\u201crefactoring"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "/document/6606699", "title": "LAMBDAFICATOR: From imperative to functional programming through automated refactoring"}, {"link": "", "title": "An empirical study on the impact of C++ lambdas and programmer experience"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985650"}
{"ref": [{"link": "", "title": "Software Architecture: Foundations, Theory, and Practice"}, {"link": "/document/1007967", "title": "Archjava: Connecting software architecture to implementation"}, {"link": "", "title": "A component- and message-based architectural style for gui software"}, {"link": "", "title": "Project Jigsaw"}, {"link": "", "title": "DARCY web page [In accordance with the double-blind policy]"}, {"link": "", "title": "The module system"}, {"link": "", "title": "JSR 376 : Java Platform Module System"}, {"link": "", "title": "Understanding Java 9 Modules"}, {"link": "", "title": "Java 9 for Programmers"}, {"link": "", "title": "The Java Language Specification Java SE 9 Edition"}, {"link": "", "title": "Oracle Corporation. API specification for the Java Platform, Standard Edition: Class ServiceLoader"}, {"link": "", "title": "Classycle: Analysing Tools for Java Class and Package Dependencies"}, {"link": "", "title": "Lightweight, obfuscation-resilient detection and family identification of android malware"}, {"link": "", "title": "Soot: A Java bytecode optimization framework"}, {"link": "", "title": "ServiceLoader (Java SE 9 & JDK 9)"}, {"link": "", "title": "ANTLR"}, {"link": "", "title": "GitHub"}, {"link": "", "title": "Measuring a system's attack surface"}, {"link": "", "title": "An approach to measuring a system's attack surface"}, {"link": "/document/5482589", "title": "An attack surface metric"}, {"link": "/document/6976087", "title": "Quantifying the encapsulation of implemented software architectures"}, {"link": "/document/366952", "title": "Measuring and assessing maintainability at the end of high level design"}, {"link": "", "title": "Large-scale c++ software design"}, {"link": "", "title": "Quantitative analysis of testability antipatterns on open source java applications"}, {"link": "/document/7476793", "title": "Extensions of component rank model by taking into account for clone relations"}, {"link": "/document/6065045", "title": "Towards open source software system architecture recovery using design metrics"}, {"link": "/document/7180083", "title": "An empirical study of architectural change in open-source software systems"}, {"link": "/document/6693106", "title": "A comparative analysis of software architecture recovery techniques"}, {"link": "/document/7202951", "title": "Comparing software architecture recovery techniques using accurate dependencies"}, {"link": "", "title": "Open source software: How can design metrics facilitate architecture recovery?"}, {"link": "", "title": "Uses of the Soot Framework"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "Soot GitHub Issue"}, {"link": "", "title": "TIOBE Index for August 2018"}, {"link": "", "title": "The State of the Octoverse 2017"}, {"link": "/document/825699", "title": "The koala component model for consumer electronics software"}, {"link": "/document/825767", "title": "A classification and comparison framework for software architecture description languages"}, {"link": "/document/4302781", "title": "Software component models"}, {"link": "/document/4815276", "title": "Software architecture reconstruction: A process-oriented taxonomy"}, {"link": "", "title": "Architecture reconstruction"}, {"link": "/document/1199211", "title": "Enhancing domain-specific software architecture recovery"}, {"link": "", "title": "Secrets from the monster: Extracting mozillas software architecture"}, {"link": "/document/6227153", "title": "A tactic-centric approach for automating traceability of quality concerns"}, {"link": "/document/8417122", "title": "Recovering architectural design decisions"}, {"link": "", "title": "An automated approach for noise identification to assist software architecture recovery techniques"}, {"link": "", "title": "Reconstructing software high-level architecture by clustering weighted directed class graph"}, {"link": "", "title": "Clustering Methodologies for Software Engineering"}, {"link": "/document/4339232", "title": "Hierarchical clustering for software architecture recovery"}, {"link": "/document/4812761", "title": "Comparison of graph clustering algorithms for recovering software architecture module views"}, {"link": "/document/917525", "title": "Software reflexion models: Bridging the gap between design and implementation"}, {"link": "", "title": "Stemming architectural erosion by coupling architectural discovery and recovery"}, {"link": "/document/1310696", "title": "Symphony: View-driven software architecture reconstruction"}, {"link": "/document/1691635", "title": "Supporting migration to services using software architecture reconstruction"}, {"link": "/document/852479", "title": "Architectural repair of open source software"}, {"link": "", "title": "Improving system dependability by enforcing architectural intent"}, {"link": "", "title": "DiscoTect: A System for Discovering Architectures from Running Systems"}, {"link": "", "title": "Using dependency models to manage complex software architecture"}, {"link": "/document/5290801", "title": "Assisting the synchronization of ucm-based architectural documentation with implementation"}, {"link": "/document/493433", "title": "Monitoring compliance of a software system with its high-level design models"}, {"link": "/document/1287235", "title": "Hierarchical reflexion models"}, {"link": "/document/1566149", "title": "Equipping the reflexion method with automated clustering"}, {"link": "", "title": "Extending the reflexion method for consolidating software variants into product lines"}, {"link": "", "title": "Blending and reusing rules for architectural degradation prevention"}, {"link": "", "title": "Rapid system development via product line architecture implementation"}, {"link": "", "title": "Multi-perspective specification, design and implementation of software components using aspects"}, {"link": "/document/1423996", "title": "A style-aware architectural middleware for resource-constrained, distributed systems"}, {"link": "", "title": "Language-based architectural control"}, {"link": "/document/4459158", "title": "The role of dependency links in ensuring architectural view consistency"}, {"link": "/document/385970", "title": "Abstractions for software architecture and tools to support them"}, {"link": "", "title": "Archface: a contract place where architectural design and code meet together"}, {"link": "/document/6227154", "title": "Enhancing architecture-implementation conformance with change management and support for behavioral mapping"}, {"link": "", "title": "Maintaining architecture-implementation conformance to support architecture centrality: From single system to product line development"}, {"link": "", "title": "Supporting runtime software architecture: A bidirectional-transformation-based approach"}, {"link": "", "title": "OSGI Alliance"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812079"}
{"ref": [{"link": "", "title": "Apache Maven Central Repository"}, {"link": "", "title": "Spacy"}, {"link": "/document/8115623", "title": "Senticr: A customized sentiment analysis tool for code review interactions"}, {"link": "", "title": "Sentiment polarity detection for software development"}, {"link": "/document/8272591", "title": "Emotxt: A toolkit for emotion recognition from text"}, {"link": "/document/6606604", "title": "Analysis of user comments: an approach for software requirements evolution"}, {"link": "", "title": "Smote: synthetic minority over-sampling technique"}, {"link": "/document/6233418", "title": "Context-based recommendation to support problem solving in software development"}, {"link": "", "title": "Which library should I use?: a metric-based comparison of software libraries"}, {"link": "", "title": "On the interpretation of X2 from contingency tables, and the calculation of p"}, {"link": "", "title": "Codetrail: Connecting source code and web resources"}, {"link": "/document/6149403", "title": "Managing the enterprise business intelligence app store: Sentiment analysis supported requirements engineering"}, {"link": "", "title": "An exploratory study of twitter messages about software applications"}, {"link": "", "title": "Sentiment analysis of commit comments in github: an empirical study"}, {"link": "/document/6912257", "title": "How do users like this feature? a fine grained sentiment analysis of app reviews"}, {"link": "", "title": "A simple sequentially rejective Bonferroni test procedure"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Proceedings of ICWSM 2014 (8th International AAAI Conference on Weblogs and Social Media"}, {"link": "/document/7957944", "title": "Leveraging automated sentiment analysis in software engineering"}, {"link": "", "title": "On negative results when using sentiment analysis tools for software engineering research"}, {"link": "/document/6344497", "title": "Automatically locating relevant programming help online"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "Sentiment analysis for so ware engineering: How far can we go?"}, {"link": "", "title": "The challenges of sentiment detection in the social programmer ecosystem"}, {"link": "/document/7180089", "title": "Are bullies more productive?: empirical study of affectiveness vs. issue fixing time"}, {"link": "", "title": "Opinion mining and sentiment analysis"}, {"link": "/document/7332474", "title": "How can i improve my app? classifying user reviews for software maintenance and evolution"}, {"link": "", "title": "Scikit-learn: Machine learning in python"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming Prompter"}, {"link": "/document/7985653", "title": "Supporting software developers with a holistic recommender system"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Recommending reference API documentation"}, {"link": "", "title": "Fishtail: from task context to source code examples"}, {"link": "", "title": "Analyzing developer sentiment in commit logs"}, {"link": "", "title": "Recursive deep models for semantic compositionality over a sentiment treebank"}, {"link": "/document/7962396", "title": "Sentiment analysis of travis ci builds"}, {"link": "/document/1698785", "title": "Mica: A web-search tool for finding api components and examples"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "A spontaneous code recommendation tool based on associative search"}, {"link": "", "title": "Sentiment strength detection in short informal text"}, {"link": "", "title": "Monitoring sentiment in open source mailing lists: exploratory study on the apache ecosystem"}, {"link": "", "title": "Augmenting API documentation with insights from stack overflow"}, {"link": "", "title": "The opiner tool"}, {"link": "/document/8115629", "title": "Automatic summarization of api reviews"}, {"link": "/document/8115715", "title": "Opiner: an opinion search and summarization engine for apis"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "/document/6613842", "title": "Extracting problematic API features from forum discussions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811960"}
{"ref": [{"link": "", "title": "Another reason 99"}, {"link": "", "title": "Report of smartphone security in china, 2017"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Droidlegacy: Automated familial classification of android malware"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on android markets"}, {"link": "", "title": "Wukong: A scalable and accurate two-phase approach to android app clone detection"}, {"link": "", "title": "Sourcerercc: Scaling code clone detection to big-code"}, {"link": "", "title": "Detecting differences across multiple instances of code clones"}, {"link": "/document/6891250", "title": "Exploring permission-induced risk in android applications for malicious application detection"}, {"link": "", "title": "Droidapiminer: Mining api-level features for robust malware detection in android"}, {"link": "/document/7774504", "title": "Frequent subgraph based familial classification of android malware"}, {"link": "", "title": "Groupdroid: Automatically grouping mobile malware by extracting code similarities"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "", "title": "A novel software toolkit for graph edit distance computation"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "", "title": "Malware classification based on call graph clustering"}, {"link": "", "title": "Apktool: A tool for reverse engineering android apk files"}, {"link": "/document/7887707", "title": "Dapasa: Detecting android piggybacked apps through sensitive subgraph analysis"}, {"link": "", "title": "Structural detection of android malware using embedded call graphs"}, {"link": "", "title": "Andarwin: Scalable detection of semantically similar android applications"}, {"link": "", "title": "Attack of the clones: Detecting cloned applications on android markets"}, {"link": "", "title": "Finding unknown malice in 10 seconds: Mass vetting for new threats at the google-play scale"}, {"link": "", "title": "Towards a scalable resource-driven approach for detecting repackaged android applications"}, {"link": "/document/7828100", "title": "Understanding android app piggybacking: A systematic study of malicious code grafting"}, {"link": "/document/7985674", "title": "Libd: Scalable and precise third-party library detection in android markets"}, {"link": "/document/7476661", "title": "An investigation into the use of common libraries in android apps"}, {"link": "", "title": "Statistical deobfuscation of android applications"}, {"link": "", "title": "Semantics-aware android malware classification using weighted contextual api dependency graphs"}, {"link": "", "title": "Deep learning"}, {"link": "", "title": "Asymmetric transitivity preserving graph embedding"}, {"link": "", "title": "Deepwalk: Online learning of social representations"}, {"link": "", "title": "node2vec: Scalable feature learning for networks"}, {"link": "", "title": "struc2vec: Learning node representations from structural identity"}, {"link": "", "title": "Discriminative embeddings of latent variable models for structured data"}, {"link": "", "title": "The link-prediction problem for social networks"}, {"link": "", "title": "Node classification in social networks"}, {"link": "", "title": "Visualizing data using t-sne"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing android sources and sinks"}, {"link": "", "title": "Drebin: Effective and explainable detection of android malware in your pocket"}, {"link": "/document/8293854", "title": "Android malware familial classification and representative sample selection via frequent subgraph analysis"}, {"link": "/document/4749258", "title": "Normalized mutual information feature selection"}, {"link": "", "title": "Properties of the hubert-arable adjusted rand index"}, {"link": "", "title": "A method for comparing two hierarchical clusterings"}, {"link": "", "title": "V-measure: A conditional entropy-based external cluster evaluation measure"}, {"link": "", "title": "Maps of random walks on complex networks reveal community structure"}, {"link": "", "title": "Finding community structure in very large networks"}, {"link": "", "title": "Near linear time algorithm to detect community structures in large-scale networks"}, {"link": "", "title": "Fast unfolding of communities in large networks"}, {"link": "/document/7153572", "title": "Software plagiarism detection with birthmarks based on dynamic key instruction sequences"}, {"link": "", "title": "Dasho"}, {"link": "", "title": "Droidra: Taming reflection to support whole-program analysis of android apps"}, {"link": "", "title": "Bangcle Inc."}, {"link": "", "title": "Ijiami Inc."}, {"link": "/document/7985676", "title": "Adaptive unpacking of android apps"}, {"link": "/document/7546500", "title": "Sok: (state of) the art of war: Offensive techniques in binary analysis"}, {"link": "", "title": "Malton: Towards on-device non-invasive mobile malware analysis for art"}, {"link": "", "title": "Overlapping community detection in networks: The state-of-the-art and comparative study"}, {"link": "", "title": "Dendroid: A text mining approach to analyzing and classifying code structures in android malware families"}, {"link": "", "title": "Automated synthesis of semantic malware signatures using maximum satisfiability"}, {"link": "", "title": "graph2vec: Learning distributed representations of graphs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812083"}
{"ref": [{"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "File parsing vulnerability detection with symbolic execution"}, {"link": "", "title": "Its4: a static vulnerability scanner for c and c++ code"}, {"link": "", "title": "Can source code auditing software identify common vulnerabilities and be used to evaluate software security?"}, {"link": "/document/7958599", "title": "Skyfire: Data-driven seed generation for fuzzing"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "/document/6227176", "title": "Identifying linux bug fixing patches"}, {"link": "", "title": "Recovering traceability links between source code and fixed bugs via patch analysis"}, {"link": "", "title": "Binhunt: Automatically finding semantic differences in binary programs"}, {"link": "", "title": "Bissam: Automatic vulnerability identification of office documents"}, {"link": "", "title": "From patches to honey-patches: Lightweight attacker misdirection, deception, and disinformation"}, {"link": "", "title": "Recognizing functions in binaries with neural networks"}, {"link": "", "title": "IDA Pro"}, {"link": "", "title": "Structural comparison of executable objects"}, {"link": "", "title": "An in-depth analysis of disassembly on full-scale x86/x64 binaries"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on android markets"}, {"link": "", "title": "Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "", "title": "Intel 64 and ia-32 architectures software developer's manual"}, {"link": "", "title": "Bingo: cross-architecture cross-os binary search"}, {"link": "", "title": "Cross-architecture bug search in binary executables"}, {"link": "", "title": "Static detection of vulnerabilities in x86 executables"}, {"link": "", "title": "Leveraging semantic signatures for bug search in binary programs"}, {"link": "", "title": "An empirical study of supplementary bug fixes"}, {"link": "", "title": "SPAIN"}, {"link": "", "title": "Caramel: Detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Generalized vulnerability extrapolation using abstract syntax trees"}, {"link": "", "title": "BAP: A Binary Analysis Platform"}, {"link": "", "title": "PVDF: An automatic Patch-based Vulnerability Description and Fuzzing method"}, {"link": "", "title": "A deeper look into bug fixes: Patterns, replacements, deletions, and additions"}, {"link": "", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Improving accuracy of static integer overflow detection in binary"}, {"link": "", "title": "Intscope: Automatically detecting integer overflow vulnerability in X86 binary using symbolic execution"}, {"link": "", "title": "Firmalice \u2014 automatic detection of authentication bypass vulnerabilities in binary firmware"}, {"link": "", "title": "Automatic patch-based exploit generation is possible: Techniques and implications"}, {"link": "", "title": "Statically detecting use after free on binary code"}, {"link": "", "title": "Loongchecker: Practical summary-based semi-simulation to detect vulnerability in binary code"}, {"link": "", "title": "Automatic inference of search patterns for taint-style vulnerabilities"}, {"link": "", "title": "A first step towards automated detection of buffer overrun vulnerabilities"}, {"link": "", "title": "AEG: automatic exploit generation"}, {"link": "", "title": "The correctness-security gap in compiler optimization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985685"}
{"ref": [{"link": "", "title": "Antlr's grammar list for different languages"}, {"link": "", "title": "Cyber grand challenge (cgc)"}, {"link": "", "title": "Peach fuzzer platform"}, {"link": "", "title": "Spike fuzzer platform"}, {"link": "", "title": "Automated testing for sql injection vulnerabilities: an input mutation approach"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "Synthesizing program input grammars"}, {"link": "", "title": "Directed greybox fuzzing"}, {"link": "", "title": "Coverage-based greybox fuzzing as markov chain"}, {"link": "/document/7163057", "title": "Program-adaptive mutational fuzzing"}, {"link": "", "title": "Bingo: Cross-architecture cross-os binary search"}, {"link": "", "title": "Fot: A versatile, configurable, extensible fuzzing framework"}, {"link": "", "title": "Hawkeye: Towards a desired directed grey-box fuzzing"}, {"link": "", "title": "Iotfuzzer: Discovering memory corruptions in iot through app-based fuzzing"}, {"link": "/document/8418633", "title": "Angora: Efficient fuzzing by principled search"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Difuze: Interface aware fuzzing for kernel drivers"}, {"link": "", "title": "Compiler fuzzing through deep learning"}, {"link": "", "title": "Sayinghi!is not enough: Mining inputs for effective test generation"}, {"link": "", "title": "Language fuzzing using constraint logic programming"}, {"link": "/document/7546498", "title": "Lava: Large-scale automated vulnerability addition"}, {"link": "", "title": "The great dom fuzz-off of 2017"}, {"link": "/document/8418631", "title": "Collafl: Path sensitive fuzzing"}, {"link": "/document/5070546", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Sage: Whitebox fuzzing for security testing"}, {"link": "/document/8115618", "title": "Learn&fuzz: Machine learning for input fuzzing"}, {"link": "", "title": "Mongodb's javascript fuzzer"}, {"link": "", "title": "Dowsing for overflows: A guided fuzzer to find buffer boundary violations"}, {"link": "", "title": "Imf: Inferred model-based fuzzer"}, {"link": "", "title": "Fuzzing with code fragments"}, {"link": "", "title": "Mining input grammars from dynamic taints"}, {"link": "", "title": "Mining input grammars with autogram"}, {"link": "", "title": "Probability-based parameter selection for black-box fuzz testing"}, {"link": "", "title": "Contractfuzzer: Fuzzing smart contracts for vulnerability detection"}, {"link": "", "title": "Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing"}, {"link": "", "title": "Evaluating fuzz testing"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Perffuzz: Automatically generating pathological inputs"}, {"link": "", "title": "Fairfuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage"}, {"link": "", "title": "Steelix: Program-state based binary fuzzing"}, {"link": "", "title": "Many-core compiler fuzzing"}, {"link": "", "title": "Collaborative security: A survey and taxonomy"}, {"link": "", "title": "An empirical study of the reliability of unix utilities"}, {"link": "", "title": "The borg: Nanoprobing binaries for buffer overreads"}, {"link": "", "title": "Badger: Complexity analysis with fuzzing and symbolic execution"}, {"link": "", "title": "Moonshine: Optimizing OS fuzzer seed selection with trace distillation"}, {"link": "", "title": "The Definitive ANTLR 4 Reference"}, {"link": "", "title": "Learning to fuzz: Application-independent fuzz testing with probabilistic, generative models of input data"}, {"link": "", "title": "Slowfuzz: Automated domain-independent detection of algorithmic complexity vulnerabilities"}, {"link": "", "title": "Model-based whitebox fuzzing for program binaries"}, {"link": "", "title": "afl-cov - afl fuzzing code coverage"}, {"link": "", "title": "Vuzzer: Application-aware evolutionary fuzzing"}, {"link": "", "title": "Optimizing seed selection for fuzzing"}, {"link": "", "title": "Introducing jsfunfuzz"}, {"link": "", "title": "kafl: Hardware-assisted feedback fuzzing for os kernels"}, {"link": "", "title": "Driller: Augmenting fuzzing through selective symbolic execution"}, {"link": "", "title": "Finding compiler bugs via live code mutation"}, {"link": "", "title": "Taking browsers fuzzing to the next (dom) level"}, {"link": "", "title": "Ifuzzer: An evolutionary interpreter fuzzer using genetic programming"}, {"link": "", "title": "Experiences with model inference assisted fuzzing"}, {"link": "/document/7958599", "title": "Skyfire: Data-driven seed generation for fuzzing"}, {"link": "/document/5504701", "title": "Taintscope: A checksum-aware directed fuzzing tool for automatic software vulnerability detection"}, {"link": "", "title": "Scheduling black-box mutational fuzzing"}, {"link": "", "title": "Designing new operating primitives to improve fuzzing performance"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "", "title": "Finding and understanding bugs in c compilers"}, {"link": "", "title": "afl-fuzz: making up grammar with a dictionary in hand"}, {"link": "", "title": "American fuzzy lop"}, {"link": "", "title": "mangleme"}, {"link": "", "title": "Mutation strategies in american fuzzy lop"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811923"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Lavnotes. Published by Sheridan Libraries at Johns Hopkins University"}, {"link": "", "title": "Published by Harvard Law School Library"}, {"link": "", "title": "LLVM Documentation"}, {"link": "", "title": "Schibsted testing on the toilet"}, {"link": "", "title": "Testing on the toilet"}, {"link": "", "title": "How Google convinced programmers to do something called \u2018testing on the toilet\u2019"}, {"link": "", "title": "Inferring causal impact using Bayesian structural time-series models"}, {"link": "", "title": "Designing refactoring tools for developers"}, {"link": "", "title": "CacheOptimizer: Helping developers configure caching frameworks for hibernate-based database-centric web applications"}, {"link": "", "title": "Unit testing tips from Google"}, {"link": "", "title": "The costs and benefits of pair programming"}, {"link": "", "title": "Determining validity in qualitative inquiry"}, {"link": "", "title": "What would users change in my app? summarizing app reviews for recommending software changes"}, {"link": "", "title": "The illusory diffusion of innovation: An examination of assimilation gaps"}, {"link": "", "title": "and Sorin Lerner. WitchDoctor: IDE support for real-time auto-completion of refactorings"}, {"link": "/document/6227192", "title": "Reconciling manual and automatic refactoring"}, {"link": "", "title": "Everyone poops"}, {"link": "", "title": "Building a \u2018Googley\u2019 workforce"}, {"link": "", "title": "A survey of software learnability: metrics, methodologies and guidelines"}, {"link": "", "title": "Advertising in restrooms"}, {"link": "", "title": "Why are CASE tools not used?"}, {"link": "", "title": "A study on restroom advertising and its effect on awareness of campus recreation programs"}, {"link": "", "title": "Advantages and disadvantages of a monolithic repository: a case study at google"}, {"link": "", "title": "Investigating the not invented here (NIH) syndrome: A look at the performance, tenure, and communication patterns of 50 R&D project groups"}, {"link": "", "title": "A field test of the effectiveness of different print layouts: A mixed model field experiment in alternative advertising"}, {"link": "", "title": "OWL: A recommender system for organization-wide learning"}, {"link": "", "title": "Understanding and detecting wake lock misuses for android applications"}, {"link": "", "title": "Digital advertising in a new age"}, {"link": "", "title": "think the sink"}, {"link": "", "title": "Community help: discovering tools and locating experts in a dynamic environment"}, {"link": "", "title": "CommunityCommands: command recommendations for software applications"}, {"link": "", "title": "Improving software developers' fluency by recommending development environment commands"}, {"link": "", "title": "Peer interaction effectively, yet infrequently, enables programmers to discover new tools"}, {"link": "", "title": "How do users discover new tools in software development and beyond?"}, {"link": "", "title": "Addressing disparities in academic medicine: what of the minority tax?"}, {"link": "", "title": "Diffusion of Innovations"}, {"link": "", "title": "Improving the Adoption of Software Engineering Practices Through Persuasive Interventions"}, {"link": "/document/7194589", "title": "Build it yourself!: Homegrown tools in a large software company"}, {"link": "", "title": "Improving program navigation with an active help system"}, {"link": "", "title": "Quantifying developers' adoption of security tools"}, {"link": "", "title": "Social influences on secure development tool adoption: Why security tools spread"}, {"link": "", "title": "Case Study Research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812046"}
{"ref": [{"link": "/document/7194618", "title": "What makes a great software engineer?"}, {"link": "/document/795608", "title": "How to be a star engineer"}, {"link": "", "title": "Novice software developers, all over again"}, {"link": "", "title": "What game developers look for in a new graduate: interviews and surveys at one game company"}, {"link": "/document/7202990", "title": "Code hunt: Experience with coding contests at scale"}, {"link": "/document/6693144", "title": "Pex4fun: A web-based environment for educational gaming via automated test generation"}, {"link": "", "title": "Elements of Programming Interviews: The Insiders' Guide."}, {"link": "", "title": "Programming Interviews Exposed: Secrets to Landing Your Next Job"}, {"link": "/document/1377187", "title": "How effective developers investigate source code: An exploratory study"}, {"link": "/document/658300", "title": "A survey of the relevance of computer science and software engineering education"}, {"link": "", "title": "Programmer performance and the effects of the workplace"}, {"link": "/document/553636", "title": "Improving speed and productivity of software development: a global survey of software developers"}, {"link": "", "title": "Improving software productivity"}, {"link": "", "title": "Software developers' perceptions of productivity"}, {"link": "", "title": "Summarizing and measuring development activity"}, {"link": "", "title": "Links between the personalities, styles and performance in computer programming"}, {"link": "", "title": "Software engineering: a practitioner's approach."}, {"link": "", "title": "Programming Pearls, 2/E."}, {"link": "", "title": "What skills are required to be proficient at coding"}, {"link": "", "title": "As a student, how should programming language familiarity be described on a cv/resume"}, {"link": "", "title": "Insigma Global Service"}, {"link": "", "title": "Hengtian"}, {"link": "", "title": "How practitioners perceive coding proficiency: Appendix"}, {"link": "", "title": "Card sorting: Designing usable categories."}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "How practitioners perceive the relevance of esem research"}, {"link": "", "title": "How practitioners perceive the relevance of software engineering research"}, {"link": "", "title": "Quantifying developers' adoption of security tools"}, {"link": "/document/7194589", "title": "Build it yourself!: homegrown tools in a large software company"}, {"link": "/document/6901259", "title": "The design space of bug fixes and how developers navigate it"}, {"link": "", "title": "Belief & evidence in empirical software engineering"}, {"link": "", "title": "On the interpretation of \u03c7 2 from contingency tables, and the calculation of p"}, {"link": "", "title": "When to use the bonferroni correction"}, {"link": "", "title": "An Empirical Comparison of Model Validation Techniques for Defect Prediction Model"}, {"link": "", "title": "Fusion fault localizers"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed?-more accurate information retrieval-based bug localization based on bug reports"}, {"link": "", "title": "Refactoring: improving the design of existing code."}, {"link": "", "title": "Code bad smells: a review of current knowledge"}, {"link": "", "title": "Does automated refactoring obviate systematic editing?"}, {"link": "/document/7675424", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "On the effectiveness of concern metrics to detect code smells: An empirical study"}, {"link": "/document/6963448", "title": "Mining version histories for detecting code smells"}, {"link": "/document/7965444", "title": "Practices and perceptions of uml use in open source projects"}, {"link": "/document/7190110", "title": "Uml in practice"}, {"link": "", "title": "Evaluating the impact of design pattern and anti-pattern dependencies on changes and faults"}, {"link": "/document/914971", "title": "Assessment of design patterns during software reengineering: Lessons learned from a large commercial project"}, {"link": "", "title": "Documenting design-pattern instances: a family of experiments on source-code comprehensibility"}, {"link": "", "title": "Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812050"}
{"ref": [{"link": "", "title": "Success and Failure Factors in Software Reuse"}, {"link": "/document/6227207", "title": "Recovering Traceability Links between an API and its Learning Resources"}, {"link": "", "title": "Discovering Information Explaining API Types using Text Classification"}, {"link": "/document/5287006", "title": "What Makes APIs Hard to Learn? Answers from Developers"}, {"link": "", "title": "A Field Study of API Learning Obstacles"}, {"link": "", "title": "Too Long; Didn't Watch!: Extracting Relevant Fragments from Software Development Video Tutorials"}, {"link": "/document/7476639", "title": "A More Accurate Model for Finding Tutorial Segments Explaining APIs"}, {"link": "", "title": "Introduction to Machine Learning (Adaptive Computation and Machine Learning)"}, {"link": "", "title": "Unsupervised Learning and Clustering"}, {"link": "", "title": "Coreference Resolution with Reconcile"}, {"link": "", "title": "LingPipe 4.1.0"}, {"link": "", "title": "How to Effectively Use Topic Models for Software Engineering Tasks? An Approach Based on Genetic Algorithms"}, {"link": "", "title": "Mining Software Repositories with Topic Models"}, {"link": "", "title": "Stanford Topic Modeling Toolbox"}, {"link": "", "title": "Ranking Systems: The PageRank Axioms"}, {"link": "", "title": "Google's PageRank and Beyond: The Science of Search Engine Rankings"}, {"link": "", "title": "An Empirical Study on Evolution of API Documentation"}, {"link": "/document/6878435", "title": "Using Traceability Links to Recommend Adaptive Changes for Documentation Evolution"}, {"link": "", "title": "Detecting API Documentation Errors"}, {"link": "/document/6473801", "title": "Patterns of Knowledge in API Reference Documentation"}, {"link": "", "title": "What Should Developers Be Aware Of? An Empirical Study on the Directives of API Documentation"}, {"link": "", "title": "Improving API Documentation Usability with Knowledge Pushing"}, {"link": "", "title": "Augmenting API Documentation with Insights from Stack Overflow"}, {"link": "", "title": "Enriching Documents with Examples: A Corpus Mining Approach"}, {"link": "", "title": "Live API Documentation"}, {"link": "", "title": "Inferring Resource Specifications from Natural Language API Documentation"}, {"link": "", "title": "API Documentation from Source Code Comments: A Case Study of Javadoc"}, {"link": "", "title": "Recommending Reference API Documentation"}, {"link": "", "title": "API Documentation with Executable Examples"}, {"link": "", "title": "CoDocent: Support API Usage with Code Example and API Documentation"}, {"link": "", "title": "Asking and Answering Questions about Unfamiliar APIs: An Exploratory Study"}, {"link": "", "title": "Who Asked What: Integrating Crowdsourced FAQs into API Documentation"}, {"link": "/document/6100098", "title": "Analyzing Temporal API Usage Patterns"}, {"link": "/document/6606629", "title": "Discovering Essential Code Elements in Informal Documentation"}, {"link": "", "title": "Use at Your Own Risk: The Java Unsafe API in the Wild"}, {"link": "", "title": "The Problem with Kappa"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985648"}
{"ref": [{"link": "", "title": "Java Programming Language Enhancements"}, {"link": "", "title": "Default methods"}, {"link": "", "title": "Interface evolution via virtual extensions methods"}, {"link": "", "title": "Effective Java"}, {"link": "", "title": "To-wards improving interface modularity in legacy java software through automated refactoring"}, {"link": "", "title": "Object-oriented type systems"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Java\u2122 platform, standard edition 8 api"}, {"link": "", "title": "Featherweight defenders: A formal model for virtual extension methods in java"}, {"link": "", "title": "Design patterns: elements of reusable object-oriented software"}, {"link": "", "title": "Java SE 8 for the Really Impatient"}, {"link": "", "title": "The Java Language Specification"}, {"link": "", "title": "Single versus multiple inheritance in object oriented programming"}, {"link": "", "title": "Disciplined inheritance"}, {"link": "", "title": "Java: Do interfaces inherit from object?"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Integrating refactoring support into a Java development tool"}, {"link": "", "title": "Use java 8 language features I android developers"}, {"link": "", "title": "Featherweight java: A minimal core calculus for java and gj"}, {"link": "", "title": "From public to private to absent: Refactoring java programs under constrained accessibility"}, {"link": "/document/6152131", "title": "A comprehensive approach to naming and accessibility in refactoring java programs"}, {"link": "", "title": "Constraint-based refactoring with foresight"}, {"link": "", "title": "Algebraic reasoning for object-oriented programming"}, {"link": "", "title": "Trait-oriented programming in java 8"}, {"link": "", "title": "Nomen est omen: Exploring and exploiting similarities between argument and parameter names"}, {"link": "", "title": "Refactoring for parameterizing java classes"}, {"link": "", "title": "Efficiently refactoring java applications to use generic libraries"}, {"link": "", "title": "Refactoring support for class library migration"}, {"link": "", "title": "Customization of java library classes using type constraints and profile information"}, {"link": "", "title": "Automatic inheritance hierarchy restructuring and method refactoring"}, {"link": "", "title": "Migrating large object-oriented applications into component-based ones: Instantiation and inheritance transformation"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "", "title": "Automated refactoring of legacy java software to enumerated types"}, {"link": "", "title": "Rejuvenating c++ programs through demacrofication"}, {"link": "", "title": "Cloud refactoring: Automated transitioning to cloud-based services"}, {"link": "", "title": "Migrating cascading style sheets to preprocessors by introducing mixins"}, {"link": "", "title": "Improving refactoring speed by 10x"}, {"link": "", "title": "Manual refactoring changes with automated refactoring validation"}, {"link": "/document/6175911", "title": "Automated behavioral testing of refactoring engines"}, {"link": "", "title": "Safira: A tool for evaluating behavior preservation"}, {"link": "", "title": "Automated testing of refactoring engines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985652"}
{"ref": [{"link": "/document/7092387", "title": "Effective verification of low-level software with nested interrupts"}, {"link": "", "title": "Timing analysis of interrupt-driven programs under context bounds"}, {"link": "", "title": "Stack size analysis for interrupt-driven programs"}, {"link": "", "title": "Inter-context control-flow and data-flow test adequacy criteria for nesC applications"}, {"link": "", "title": "Random testing of interrupt-driven software"}, {"link": "/document/6194", "title": "An applicable family of data flow testing criteria"}, {"link": "", "title": "Efficient computation of interprocedural definition-use chains"}, {"link": "/document/1650214", "title": "Reachability testing of concurrent programs"}, {"link": "", "title": "All-du-path coverage for parallel programs"}, {"link": "/document/5601853", "title": "Real time properties for interrupt timed automata"}, {"link": "", "title": "Interrupt timed automata: Verification and expressiveness"}, {"link": "", "title": "The impressive power of stopwatches"}, {"link": "", "title": "UML2.0 superstructure specification"}, {"link": "", "title": "How UML is used"}, {"link": "", "title": "Hybrid automata: An algorithmic approach to the specification and verification of hybrid systems"}, {"link": "", "title": "Integration graphs: A class of decidable hybrid systems"}, {"link": "", "title": "SpaceEx: Scalable verification of hybrid systems"}, {"link": "", "title": "Timed sequence diagrams and tool-based analysis: A case study"}, {"link": "", "title": "Incremental elaboration of scenario-based specifications and behavior models using implied scenarios"}, {"link": "", "title": "Model checking of UML 2.0 interactions"}, {"link": "", "title": "A theory of timed automata"}, {"link": "/document/1231600", "title": "A flyweight UML modelling tool for software development in heterogeneous environments"}, {"link": "/document/6237295", "title": "Model-checking framework for embedded systems controllers development using IOPT Petri nets"}, {"link": "/document/1607136", "title": "Model checking interrupt-dependent software"}, {"link": "/document/874622", "title": "Formal coverification of embedded systems using model checking"}, {"link": "/document/57887", "title": "Seven myths of formal methods"}, {"link": "", "title": "Eliminating stack overflow by abstract interpretation"}, {"link": "", "title": "Lazy preemption to enable path-based analysis of interrupt-driven code"}, {"link": "", "title": "Reduction of interrupt handler executions for model checking embedded software"}, {"link": "", "title": "What's decidable about hybrid automata?"}, {"link": "", "title": "Suspension automata: A decidable class of hybrid automata"}, {"link": "", "title": "Syntax and defining equations for an interrupt mechanism in process algebra"}, {"link": "", "title": "Modelling and proof analysis of interrupt driven scheduling"}, {"link": "", "title": "A typed interrupt calculus"}, {"link": "", "title": "Testing Enbredded Software."}, {"link": "/document/919080", "title": "Static checking of interrupt-driven software"}, {"link": "", "title": "Static analysis of interrupt-driven programs synchronized via the priority ceiling protocol"}, {"link": "/document/7318260", "title": "Numerical static analysis of interrupt-driven programs via sequentialization"}, {"link": "", "title": "Interrupt verification via thread verification"}, {"link": "", "title": "Deadline analysis of interrupt-driven software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812085"}
{"ref": [{"link": "", "title": "Amazon Cloudwatch documentation"}, {"link": "", "title": "Analyzing latency-aware self-adaptation using stochastic games and simulations"}, {"link": "", "title": "Queueing Networks and Markov Chains: Modeling and Performance Evaluation with Computer Science Applications"}, {"link": "", "title": "The probabilistic model checking landscape"}, {"link": "", "title": "Self-adaptive software needs quantitative verification at runtime"}, {"link": "/document/7083754", "title": "Supporting self-adaptation via quantitative verification and sensitivity analysis at run time"}, {"link": "", "title": "An iterative decision-making scheme for Markov Decision Processes and its application to self-adaptive systems"}, {"link": "", "title": "Reliability of run-time Quality-of-Service evaluation using parametirc model checking"}, {"link": "/document/4515874", "title": "Performance model estimation and tracking using optimal filters"}, {"link": "", "title": "On the complexity of model checking interval-valued discrete time Markov chains"}, {"link": "", "title": "Symbolic and parametric model checking of discrete-time Markov chains"}, {"link": "", "title": "Model-checking Markov chains in the presence of uncertainties"}, {"link": "", "title": "Time-bounded verification of CTMCs against real-time specifications"}, {"link": "", "title": "Sensitivity analysis of continuous time markov chains using uniformization"}, {"link": "", "title": "Sensitivity computation of reliability markov models using the uniformized power method"}, {"link": "/document/7355393", "title": "Asymptotic perturbation bounds for probabilistic model checking with empirically determined probability parameters"}, {"link": "", "title": "PRISM 4.0: Verification of probabilistic real-time systems"}, {"link": "/document/1205180", "title": "Model-checking algorithms for continuous-time Markov chains"}, {"link": "", "title": "Modeling and Analysis of Stochastic Systems"}, {"link": "", "title": "Introduction to the numerical solutions of Markov chains"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "ProEva: Runtime proactive performance evaluation based on continuous-time Markov chains"}, {"link": "", "title": "Stochastic modeling of a power-managed system: construction and optimization"}, {"link": "/document/1224427", "title": "Formal analysis and validation of continuous-time markov chain based system level power management strategies"}, {"link": "", "title": "Software engineering for self-adaptive systems: A second research roadmap"}, {"link": "", "title": "A survey of autonomic computing\u2014degrees, models, and applications"}, {"link": "/document/5611553", "title": "Dynamic qos management and optimization in service-based systems"}, {"link": "/document/6606549", "title": "Managing non-functional uncertainty via model-driven adaptivity"}, {"link": "", "title": "Automatic verification of competitive stochastic systems"}, {"link": "", "title": "Prism-games: A model checker for stochastic multi-player games"}, {"link": "", "title": "Probabilistic reachability for parametric Markov models"}, {"link": "", "title": "Formal verification with confidence intervals: A new approach to establishing the Quality-of-Service properties of software systems"}, {"link": "/document/4700433", "title": "Approximate parameter synthesis for probabilistic time-bounded reachability"}, {"link": "", "title": "Optimizing performance of continuous-time stochastic systems using timeout synthesis"}, {"link": "", "title": "Efficient continuous-time Markov chain estimation"}, {"link": "", "title": "Perturbation analysis in verification of discrete-time Markov chains"}, {"link": "", "title": "Model checking of continuous-time Markov chains against timed automata specifications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985687"}
{"ref": [{"link": "", "title": "Risk-driven revision of requirements models"}, {"link": "", "title": "Identifying security requirements and privacy concerns in digital health applications"}, {"link": "", "title": "DataLoss DB"}, {"link": "", "title": "The United States Department of Defense cybersecurity culture and compliance initiative"}, {"link": "", "title": "A modeling ontology for integrating vulnerabilities into security requirements conceptual foundations"}, {"link": "", "title": "Formal Ontology in Information Systems"}, {"link": "", "title": "Designing minimal effective normative systems with the help of lightweight formal methods"}, {"link": "", "title": "Summary of the HIPAA privacy rule"}, {"link": "", "title": "Breach portal: Notice to the Secretary of HHS breach of unsecured protected health information affecting 500 or more individuals"}, {"link": "", "title": "The healthcare information and management systems society (HIMSS) cybersecurity study"}, {"link": "", "title": "The Security Development Lifecycle"}, {"link": "", "title": "Attack tree generation by policy invalidation"}, {"link": "/document/7579407", "title": "Revani: Revising and verifying normative specifications for privacy"}, {"link": "", "title": "Kont: Computing tradeoffs in normative multiagent systems"}, {"link": "/document/7765519", "title": "Nane: Identifying misuse cases using temporal norm enactments"}, {"link": "", "title": "Understanding ambiguity in requirements engineering"}, {"link": "", "title": "Investigating security threats in architectural context: Experimental evaluations of misuse case maps"}, {"link": "", "title": "Robust semantic text similarity using LSA, machine learning, and linguistic resources"}, {"link": "/document/7496848", "title": "Priguard: A semantic approach to detect privacy violations in online social networks"}, {"link": "", "title": "HIPAA and human error: The role of enhanced situation awareness in protecting health information"}, {"link": "", "title": "An information-theoretic definition of similarity"}, {"link": "", "title": "Cloudy with a chance of breach: Forecasting cyber security incidents"}, {"link": "", "title": "Alignment of misuse cases with security risk management"}, {"link": "", "title": "Graph based similarity measures for synonym extraction from parsed text"}, {"link": "", "title": "Is cybersecurity possible in healthcare?"}, {"link": "", "title": "Experimental comparison of attack trees and misuse cases for security threat identification"}, {"link": "", "title": "Reducing ambiguities in requirements specifications via automatically created object-oriented models"}, {"link": "", "title": "Discovering \u201cunknown known\u201d security requirements"}, {"link": "", "title": "Using information content to evaluate semantic similarity in a taxonomy"}, {"link": "", "title": "DIGS: A framework for discovering goals for security requirements engineering"}, {"link": "/document/1185844", "title": "Determining semantic similarity among entity classes from different ontologies"}, {"link": "", "title": "A survey of semantic similarity methods for ontology based information retrieval"}, {"link": "/document/6104044", "title": "Ontology matching: State of the art and future challenges"}, {"link": "", "title": "Norms as a basis for governing sociotechnical systems"}, {"link": "", "title": "Toward a framework for detecting privacy policy violations in android application code"}, {"link": "", "title": "A security ontology for security requirements elicitation"}, {"link": "", "title": "Privacy incidents database: the data mining challenges and opportunities"}, {"link": "", "title": "Data breach investigations reports"}, {"link": "/document/1432705", "title": "Experimentation with local consensus ontologies with implications for automated service composition"}, {"link": "", "title": "Automatic detection of nocuous coordination ambiguities in natural language requirements"}, {"link": "", "title": "Do security patterns really help designers?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985691"}
{"ref": [{"link": "", "title": "Streams a la carte: Extensible Pipelines with Object Algebras"}, {"link": "", "title": "Collections-mutable and immutable collections-scala documentation"}, {"link": "", "title": "JavaScript array mapr()method"}, {"link": "", "title": "LINQ:. NET language integrated query"}, {"link": "", "title": "java.util.stream (Java SE 9 & JDK 9)"}, {"link": "", "title": "Future of Java 8 language feature support on Android"}, {"link": "", "title": "MapReduce: Simplified data processing on large clusters"}, {"link": "", "title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "What do concurrency developers ask about?: A large-scale study using stack overflow"}, {"link": "", "title": "Order types: Static reasoning about message races in asynchronous message passing concurrency"}, {"link": "", "title": "Poster: Towards safe refactoring for intelligent parallelization of Java 8 streams"}, {"link": "", "title": "Thread interference"}, {"link": "", "title": "Java 8 Lambdas: Pragmatic Functional Programming"}, {"link": "", "title": "Newest \u2018java-stream\u2019 questions"}, {"link": "", "title": "Understanding the use of lambda expressions in Java"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "/document/5070539", "title": "Refactoring sequential java code for concurrency via concurrent libraries"}, {"link": "", "title": "Transforming JavaScript event-loop into a pipeline"}, {"link": "", "title": "Translating imperative code to MapReduce"}, {"link": "", "title": "Commutativity of reducers"}, {"link": "", "title": "Nondeterminism in MapReduce considered harmful? an empirical study on noncommutative aggregators in MapReduce programs"}, {"link": "", "title": "Testing MapReduce-style programs"}, {"link": "/document/5457747", "title": "Formalizing MapReduce with CSP"}, {"link": "", "title": "Improving MapReduce performance in heterogeneous environments"}, {"link": "", "title": "Haloop: Efficient iterative data processing on large clusters"}, {"link": "", "title": "Automatic optimization for MapReduce programs"}, {"link": "", "title": "SHadoop: Improving MapReduce performance by optimizing job execution mechanism in Hadoop clusters"}, {"link": "/document/8530715", "title": "A tool for optimizing Java 8 stream software via automated refactoring"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Effective typestate verification in the presence of aliasing"}, {"link": "", "title": "Eclipse IDEs"}, {"link": "", "title": "T.J. Watson Libraries for Analysis"}, {"link": "", "title": "SAFE typestate analysis engine"}, {"link": "", "title": "HashSet (Java SE 9)& JDK 9"}, {"link": "", "title": "Points-to analysis in almost linear time"}, {"link": "", "title": "Spliterator (Java SE 9 & JDK 9)"}, {"link": "", "title": "Control-flow analysis of higher-order languages of taming lambda"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "", "title": "Linear types can change the world"}, {"link": "", "title": "Integrating refactoring support into a Java development tool"}, {"link": "", "title": "Global value numbers and redundant computations"}, {"link": "", "title": "Mastering Lambdas: Java Programming in a Multicore World"}, {"link": "", "title": "Hierarchical Temporal Memory implementation in Java"}, {"link": "", "title": "JMH"}, {"link": "", "title": "Design patterns implemented in Java"}, {"link": "", "title": "Pull request #539-numenta/htm.java"}, {"link": "/document/2259", "title": "Measuring parallelism in computation-intensive scientific/engineering applications"}, {"link": "", "title": "Pull request #140-orfjackal/retrolambda"}, {"link": "", "title": "Proactive empirical assessment of new language feature adoption via automated refactoring: The case of Java 8 default methods"}, {"link": "/document/8812061", "title": "Type migration in ultra-large-scale codebases"}, {"link": "/document/4362902", "title": "An integrated crosscutting concern migration strategy and its application to JHotDraw"}, {"link": "", "title": "Parallelizing compilers"}, {"link": "/document/214548", "title": "Automatic program parallelization"}, {"link": "", "title": "Run-time support for the automatic parallelization of java programs"}, {"link": "", "title": "Parallel computing works!"}, {"link": "", "title": "Automatic parallelization of divide and conquer algorithms"}, {"link": "", "title": "Automatic parallelization of recursive procedures"}, {"link": "", "title": "Automatic parallelization of a class of irregular loops for distributed memory systems"}, {"link": "", "title": "Automatic parallelization for graphics processing units"}, {"link": "", "title": "Automatic parallelization via matrix multiplication"}, {"link": "", "title": "The paralax infrastructure: Automatic parallelization with a helping hand"}, {"link": "/document/650541", "title": "The potential for using thread-level data speculation to facilitate automatic parallelization"}, {"link": "", "title": "Machine-learning-based performance heuristics for runtime cpu/gpu selection"}, {"link": "/document/7429325", "title": "Compiling and optimizing Java 8 programs for GPU execution"}, {"link": "", "title": "The interprocedural analysis and automatic parallelization of scheme programs"}, {"link": "/document/6065177", "title": "Automatic parallelization of side-effecting higher-order scheme programs"}, {"link": "", "title": "Writing JML specifications using Java 8 streams"}, {"link": "/document/7985650", "title": "Clone refactoring with lambda expressions"}, {"link": "/document/7985652", "title": "Automated refactoring of legacy Java software to default methods"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "/document/558915", "title": "Identifying enumeration types modeled with symbolic constants"}, {"link": "", "title": "Automated refactoring of legacy Java software to enumerated types"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "", "title": "Foundations of typestate-oriented programming"}, {"link": "", "title": "Deadlock-free typestate-oriented programming"}, {"link": "", "title": "Efficient hybrid typestate analysis by determining continuation-equivalent states"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811925"}
{"ref": [{"link": "", "title": "Database-friendly random projections: Johnson-lindenstrauss with binary coins"}, {"link": "", "title": "Test suite reduction based on similarity of test cases"}, {"link": "", "title": "Reducing gui test suites via program slicing"}, {"link": "", "title": "k-means++: The advantages of careful seeding"}, {"link": "", "title": "Scalable k-means clustering via lightweight coresets"}, {"link": "", "title": "A categorization scheme for software engineering conference papers and its application"}, {"link": "/document/7190056", "title": "Interaction-based test-suite minimization"}, {"link": "", "title": "Using machine learning to refine category-partition test specifications and test suites"}, {"link": "", "title": "On the use of a similarity function for test case selection in the context of model-based testing"}, {"link": "", "title": "Adaptive random testing: The art of test case diversity"}, {"link": "/document/8330200", "title": "Clustering support for inadequate test suite reduction"}, {"link": "", "title": "Scalable approaches for test suite reduction (online material)"}, {"link": "", "title": "Recent advances in regression testing techniques"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Practical regression test selection with dynamic file dependencies"}, {"link": "", "title": "Achieving scalable model-based testing through test case diversity"}, {"link": "", "title": "Let's assume we had to pay for testing"}, {"link": "", "title": "Testing and continuous integration at scale: Limits, costs, and expectations"}, {"link": "/document/5431769", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Extensions of lipschitz mappings into a hilbert space"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "/document/8303823", "title": "A systematic review on test suite reduction: Approaches, experiment's quality evaluation, and guidelines"}, {"link": "/document/7167168", "title": "Supporting continuous integration by code-churn based test selection"}, {"link": "", "title": "Mining of massive datasets."}, {"link": "", "title": "Very sparse random projections"}, {"link": "/document/6142253", "title": "User-session-based test cases optimization method based on agglutinate hierarchy clustering"}, {"link": "", "title": "FAST approaches to scalable similarity-based test case prioritization"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "/document/6786085", "title": "Identifying effective test cases through k-means clustering for enhancing regression testing"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Analyzing clusters of web application user sessions"}, {"link": "", "title": "Comparing and combining test-suite reduction and regression test selection"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "/document/6149572", "title": "On the fault-detection capabilities of adaptive random test case prioritization: Case studies with large test suites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812048"}
{"ref": [{"link": "", "title": "2018 Node.js User Survey Report"}, {"link": "", "title": "Flow"}, {"link": "", "title": "Typescript"}, {"link": "", "title": "Assessing the type annotation burden"}, {"link": "", "title": "Tejas: Retrofitting type systems for javascript"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "Static type inference for ruby"}, {"link": "", "title": "Dynamic inference of static types for ruby"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Natural language processing (almost)from scratch"}, {"link": "/document/7178838", "title": "Convolutional, long short-term memory, fully connected deep neural networks"}, {"link": "", "title": "Neural machine translation by jointly learning to align and translate"}, {"link": "", "title": "Recurrent neural network for text classification with multi-task learning"}, {"link": "", "title": "Sequential short-text classification with recurrent and convolutional neural networks"}, {"link": "", "title": "Predicting program properties from \u201cbig code"}, {"link": "", "title": "Deep learning type inference"}, {"link": "", "title": "Improving the tokenisation of identifier names"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Document modeling with gated recurrent neural network for sentiment classification"}, {"link": "", "title": "On calibration of modern neural networks"}, {"link": "", "title": "Dropout as a bayesian approximation: Representing model uncertainty in deep learning"}, {"link": "", "title": "JSDoc tool"}, {"link": "", "title": "Natural Language Processing with Python, 1st"}, {"link": "", "title": "Software Framework for Topic Modelling with Large Corpora"}, {"link": "", "title": "Keras"}, {"link": "", "title": "Learning programs from noisy data"}, {"link": "", "title": "CDNJS"}, {"link": "", "title": "DeepBugs: A learning approach to name-based bug detection"}, {"link": "", "title": "Learning to represent programs with graphs"}, {"link": "", "title": "VulDeePecker: A deep learning-based system for vulnerability detection"}, {"link": "", "title": "JSNice Artifact"}, {"link": "", "title": "DeepTyper artifact"}, {"link": "/document/7985711", "title": "To type or not to type: quantifying detectable bugs in javascript"}, {"link": "", "title": "Fast and precise hybrid type inference for javascript"}, {"link": "/document/7194584", "title": "TypeDevil: Dynamic type inconsistency analysis for JavaScript"}, {"link": "", "title": "/*iComment: bugs or bad comments?*/"}, {"link": "/document/6200082", "title": "@tComment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Debugging method names"}, {"link": "", "title": "Translating code comments to procedure specifications"}, {"link": "/document/8115624", "title": "Detecting fragile comments"}, {"link": "/document/6624052", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "", "title": "Deep Learning to Detect Redundant Method Comments"}, {"link": "", "title": "From word embeddings to document similarities for improved information retrieval in software engineering"}, {"link": "", "title": "Deep api learning"}, {"link": "", "title": "Deep code search"}, {"link": "", "title": "Retrieval on source code: a neural code search"}, {"link": "", "title": "Learning unified features from natural and programming languages for locating buggy source code"}, {"link": "", "title": "A convolutional attention network for extreme summarization of source code"}, {"link": "", "title": "Recovering clear, natural identifiers from obfuscated JS names"}, {"link": "", "title": "Context2Name: A deep learning-based approach to infer natural variable names from usage contexts"}, {"link": "", "title": "Neural network-based graph embedding for cross-platform binary code similarity detection"}, {"link": "", "title": "Path-based function embedding and its application to specification mining"}, {"link": "", "title": "A general path-based representation for predicting program properties"}, {"link": "", "title": "Dynamic neural program embedding for program repair"}, {"link": "/document/8330220", "title": "A deep neural network language model with contexts for source code"}, {"link": "/document/8115618", "title": "Learn&fuzz: machine learning for input fuzzing"}, {"link": "", "title": "Learning to fuzz: Application-independent fuzz testing with probabilistic, generative models of input data"}, {"link": "", "title": "Deepfix: Fixing common c language errors by deep learning"}, {"link": "", "title": "Automatically learning semantic features for defect prediction"}, {"link": "", "title": "DLint: Dynamically checking bad coding practices in JavaScript"}, {"link": "", "title": "JITProf: Pinpointing JIT-unfriendly JavaScript code"}, {"link": "", "title": "ConflictJS: Finding and understanding conflicts between JavaScript libraries"}, {"link": "", "title": "Understanding asynchronous interactions in full-stack javascript"}, {"link": "/document/6606621", "title": "Efficient construction of approximate call graphs for javascript IDE services"}, {"link": "", "title": "A survey of dynamic analysis and test generation for JavaScript"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811893"}
{"ref": [{"link": "", "title": "The Impact of Switching to a Rapid Release Cycle on the Integration Delay of Addressed Issues: An Empirical Study of the Mozilla Firefox Project"}, {"link": "/document/6224279", "title": "Do Faster Releases Improve Software Quality?: An Empirical Case Study of Mozilla Firefox"}, {"link": "/document/7476674", "title": "Release Practices for Mobile Apps - What do Users and Developers Think?"}, {"link": "", "title": "Modern Release Engineering in a Nutshell - Why Researchers Should Care"}, {"link": "", "title": "User Feedback in the AppStore: An Empirical Study"}, {"link": "", "title": "Causal Impact Analysis for App Releases in Google Play"}, {"link": "", "title": "Factors Influencing Quality of Mobile Apps: Role of Mobile App Development Life Cycle"}, {"link": "", "title": "How Do Users Like This Feature? A Fine Grained Sentiment Analysis of App Reviews"}, {"link": "", "title": "Retrieving and Analyzing Mobile Apps Feature Requests from Online Reviews"}, {"link": "", "title": "Analysis of User Comments: An Approach for Software Requirements Evolution"}, {"link": "", "title": "User Feedback in Mobile Development"}, {"link": "", "title": "Modeling the Mobile Application Development Lifecycle"}, {"link": "/document/7332475", "title": "User Reviews Matter! Tracking Crowdsourced Reviews to Support Evolution of Successful Apps"}, {"link": "", "title": "How Can I Improve My App? Classifying User Reviews for Software Maintenance and Evolution"}, {"link": "/document/6648584", "title": "Does Involving Users in Software Development Really Influence System Success?"}, {"link": "", "title": "On Satisfying the Android OS Community: User Feedback Still Central to Developers' Portfolios"}, {"link": "", "title": "Do Android Users Write About Electric Sheep? Examining Consumer Reviews in Google Play"}, {"link": "", "title": "Facilitating Developer-User Interactions with Mobile App Review Digests"}, {"link": "", "title": "What Would Users Change in My App? Summarizing App Reviews for Recommending Software Changes"}, {"link": "", "title": "What Parts of Your Apps Are Loved by Users?"}, {"link": "/document/7965256", "title": "SURF: Summarizer of User Reviews Feedback"}, {"link": "/document/7884612", "title": "Analyzing Reviews and Code of Mobile Apps for better Release Planning"}, {"link": "", "title": "Release Planning of Mobile Apps Based on User Reviews"}, {"link": "", "title": "Improving Bug Localization Using Structured Information Retrieval"}, {"link": "", "title": "Recommending and Localizing Code Changes for Mobile Apps based on User Reviews: Online Appendix"}, {"link": "", "title": "A Survey of App Store Analysis for Software Engineering"}, {"link": "/document/6224306", "title": "App Store Mining and Analysis: MSR for App Stores"}, {"link": "", "title": "AR-Miner: Mining Informative Reviews for Developers from Mobile App Marketplace"}, {"link": "", "title": "What Do Mobile App Users Complain About? A Study on Free iOS Apps"}, {"link": "", "title": "ARdoc: App Reviews Development Oriented Classifier"}, {"link": "/document/1041053", "title": "Recovering Traceability Links Between Code and Documentation"}, {"link": "", "title": "Information Retrieval Methods for Automated Traceability Recovery"}, {"link": "", "title": "Feature Location in Source Code: A Taxonomy and Survey"}, {"link": "", "title": "Linking E-Mails and Source Code Artifacts"}, {"link": "/document/7371991", "title": "Development Emails Content Analyzer: Intention Mining in Developer Discussions"}, {"link": "", "title": "DECA: Development Emails Content Analyzer"}, {"link": "", "title": "Crowd Documentation: Exploring the Coverage and Dynamics of API Discussions on Stack Overflow"}, {"link": "", "title": "Mining Source Code Descriptions from Developer Communications"}, {"link": "", "title": "CODES: Mining Source Code Descriptions from Developers Discussions"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "Software Traceability with Topic Modeling"}, {"link": "", "title": "How to Effectively Use Topic Models for Software Engineering Tasks? An Approach Based on Genetic Algorithms"}, {"link": "", "title": "An Algorithm for Suffix Stripping"}, {"link": "", "title": "When and How to Develop Domain-specific Languages"}, {"link": "/document/6613828", "title": "Part-of-Speech Tagging of Program Identifiers for Improved Text-Based Software Engineering Tools"}, {"link": "", "title": "On the Role of Semantics in Automated Requirements Tracing"}, {"link": "", "title": "Improving Ir-Based Traceability Recovery Via Noun-Based Indexing of Software Artifacts"}, {"link": "", "title": "NLTK, Natural Language Toolkit"}, {"link": "", "title": "TextBlob, Simplified Text Processing"}, {"link": "", "title": "PyEnchant, a spellchecking library for python"}, {"link": "", "title": "WordNet English Stopword List"}, {"link": "", "title": "Natural Language Processing: An Introduction"}, {"link": "", "title": "Some Methods for Classification and Analysis of Multivariate Observations"}, {"link": "", "title": "Finding Groups in Data"}, {"link": "", "title": "Hierarchical Dirichlet Processes"}, {"link": "", "title": "Latent Dirichlet Allocation"}, {"link": "", "title": "Bayesian Data Analysis"}, {"link": "", "title": "Etude comparative de la distribution fiorale dans une portion des Alpes et des Jura"}, {"link": "", "title": "F-Droid, Free and Open Source Software App Repository"}, {"link": "", "title": "Google Play Store"}, {"link": "", "title": "A Technique for the Measurement of Attitudes"}, {"link": "", "title": "Survey Methodology"}, {"link": "/document/6227177", "title": "Content Classification of Development Emails"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985654"}
{"ref": [{"link": "", "title": "Memories of bug fixes"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs"}, {"link": "", "title": "An empirical study of supplementary bug fixes"}, {"link": "", "title": "The txl source transformation language"}, {"link": "", "title": "Matching dependence-related queries in the system dependence graph"}, {"link": "", "title": "Generic patch inference"}, {"link": "", "title": "Detection of recurring software vulnerabilities"}, {"link": "", "title": "Systematic editing: generating program transformations from an example"}, {"link": "", "title": "Lase: locating and applying systematic edits by learning from examples"}, {"link": "/document/7985680", "title": "Learning syntactic program transformations from examples"}, {"link": "/document/7194566", "title": "Interactive code review for systematic changes"}, {"link": "", "title": "Inductive logic programming: Theory and methods"}, {"link": "", "title": "Logical and relational learning, ser. Cognitive Technologies"}, {"link": "", "title": "Neural Networks: A Comprehensive Foundation"}, {"link": "", "title": "Efficient induction of logic programs. Citeseer"}, {"link": "", "title": "Recovering software specifications with inductive logic programming"}, {"link": "", "title": "Inductive learning applied to program construction and verification"}, {"link": "/document/6216384", "title": "Elaborating requirements using model checking and inductive learning"}, {"link": "/document/5070023", "title": "Working with search results"}, {"link": "", "title": "Automatically leveraging mapre-duce frameworks for data-intensive applications"}, {"link": "", "title": "Leveraging parallel data processing frameworks with verified lifting"}, {"link": "", "title": "Two studies of opportunistic programming: interleaving web foraging, learning, and writing code"}, {"link": "/document/6227187", "title": "Asking and answering questions about unfamiliar apis: An exploratory study"}, {"link": "", "title": "Active learning"}, {"link": "", "title": "Logical and relational learning"}, {"link": "", "title": "Simply logical intelligent reasoning by example"}, {"link": "", "title": "The yap prolog system"}, {"link": "", "title": "Case Study Research: Design and Methods (Applied Social Research Methods)"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "Xsnippet: Mining for sample code"}, {"link": "", "title": "Portfolio: finding relevant functions and their usage"}, {"link": "", "title": "Parseweb: a programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Example-centric programming: integrating web search into the development environment"}, {"link": "", "title": "Mining stackoverflow to turn the ide into a self-confident programming prompter"}, {"link": "", "title": "Solving the search for source code"}, {"link": "", "title": "Sourcerer: a search engine for open source code supporting structure-based search"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Deep code search"}, {"link": "/document/5989838", "title": "Exemplar: A source code search engine for finding highly relevant applications"}, {"link": "", "title": "Cp-miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "/document/1019480", "title": "Ccfinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Sourcerercc: Scaling code clone detection to big-code"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/4556129", "title": "Nicad: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization"}, {"link": "", "title": "Navigating and querying code without getting lost"}, {"link": "", "title": "Codequest: Scalable source code queries with datalog"}, {"link": "/document/711007", "title": "Declarative reasoning about the structure of object-oriented systems"}, {"link": "/document/1192416", "title": "Identifying refactoring opportunities using logic meta programming"}, {"link": "/document/941682", "title": "Using design patterns and constraints to automate the detection and correction of inter-class design defects"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "", "title": "Pick your contexts well: understanding object-sensitivity"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "/document/5070538", "title": "Effective static deadlock detection"}, {"link": "", "title": "A user-guided approach to program analysis"}, {"link": "", "title": "Finding application errors and security flaws using pql: a program query language"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Synthesizing highly expressive sql queries from input-output examples"}, {"link": "", "title": "Codehint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Nalir: an interactive natural language interface for querying relational databases"}, {"link": "", "title": "User interaction models for disambiguation in programming by example"}, {"link": "", "title": "Support vector machine active learning for image retrieval"}, {"link": "", "title": "Learning horn expressions with logan-h"}, {"link": "", "title": "Queries and concept learning"}, {"link": "", "title": "Inductive specification recovery: Understanding software by learning from example behaviors"}, {"link": "", "title": "Learning by transduction"}, {"link": "/document/4787647", "title": "Semi-supervised learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812091"}
{"ref": [{"link": "", "title": "Reflection analysis for Java"}, {"link": "", "title": "In defense of soundiness: a manifesto"}, {"link": "", "title": "A corpus of java projects representing the 2012 ohloh universe"}, {"link": "", "title": "Strictly Declarative Specification of Sophisticated Points-to Analyses"}, {"link": "", "title": "Evaluating the benefits of context-sensitive points-to analysis using a bdd-based implementation"}, {"link": "", "title": "Logic-based techniques for program analysis and specification synthesis"}, {"link": "", "title": "Self-inferencing reflection resolution for java"}, {"link": "", "title": "Effective soundness-guided reflection analysis"}, {"link": "", "title": "Pointer analysis"}, {"link": "", "title": "More Sound Static Handling of Java Reflection"}, {"link": "", "title": "Precise analysis of string expressions"}, {"link": "", "title": "Improved static resolution of dynamic class loading in java"}, {"link": "", "title": "Improving static resolution of dynamic class loading in java using dynamically gathered environment information"}, {"link": "", "title": "Averroes: Whole-program analysis without the whole program"}, {"link": "", "title": "Combining static and dynamic analysis for automatic identification of precise access-control policies"}, {"link": "", "title": "Android permissions demystified"}, {"link": "", "title": "ScanDal: Static analyzer for detecting privacy leaks in android applications"}, {"link": "", "title": "Comparing mobile privacy protection through cross-platform applications"}, {"link": "", "title": "Formalisation and analysis of dalvik bytecode"}, {"link": "", "title": "Multi-app security analysis with FUSE: statically detecting android app collusion"}, {"link": "", "title": "T.J. Watson Libraries for Analysis (WALA)"}, {"link": "/document/7372054", "title": "Static analysis of implicit control flow: Resolving java reflection and android intents"}, {"link": "", "title": "Collaborative verification of information flow for a high-assurance app store"}, {"link": "", "title": "EdgeMiner: Automatically detecting implicit control flow transitions through the Android framework"}, {"link": "", "title": "Guidelines for snowballing in systematic literature studies and a replication in software engineering"}, {"link": "", "title": "Analyzing the past to prepare for the future: Writing a literature review"}, {"link": "", "title": "Guidelines for performing Systematic Literature Reviews in Software Engineering"}, {"link": "", "title": "A systematic review of cross- vs. within- company cost estimation studies"}, {"link": "", "title": "Conducting Research Literature Reviews: From the Internet to Paper"}, {"link": "", "title": "Soot \u2014 a Java bytecode optimization framework"}, {"link": "", "title": "Scaling java points-to analysis using SPARK"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Type-based taint analysis for java web applications"}, {"link": "", "title": "Appcontext: Differentiating malicious and benign mobile app behaviors using context"}, {"link": "", "title": "Information Flow Analysis of Android Applications in DroidSafe"}, {"link": "", "title": "Application-only call graph construction"}, {"link": "", "title": "Defining datalog in rewriting logic"}, {"link": "", "title": "Datalog-based program analysis with BES and RWL"}, {"link": "", "title": "Assumption hierarchy for a CHA call graph construction algorithm"}, {"link": "", "title": "TAJ: effective taint analysis of web applications"}, {"link": "", "title": "Constructing call graphs of scala programs"}, {"link": "", "title": "Lessons from applying the systematic literature review process within the software engineering domain"}, {"link": "", "title": "Fast online pointer analysis"}, {"link": "", "title": "Blended analysis for performance understanding of framework-based applications"}, {"link": "", "title": "Refaflex: safer refactorings for reflective java programs"}, {"link": "", "title": "Generating test cases for programs that are coded against interfaces and annotations"}, {"link": "", "title": "Stadyna: Addressing the problem of dynamic code updates in the security analysis of android applications"}, {"link": "", "title": "Practical experience with an application extractor for java"}, {"link": "", "title": "Practical extraction techniques for java"}, {"link": "", "title": "F4F: taint analysis of framework-based web applications"}, {"link": "", "title": "Droidel: a general approach to android framework modeling"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "Corpora in Applied Linguistics"}, {"link": "", "title": "The Qualitas corpus: A curated collection of Java code for empirical studies"}, {"link": "", "title": "Diversity in software engineering research"}, {"link": "", "title": "Bounded seas: Island parsing without shipwrecks"}, {"link": "/document/957806", "title": "Generating robust parsers using island grammars"}, {"link": "/document/7070485", "title": "M3: a General Model for Code Analytics in Rascal"}, {"link": "/document/5279910", "title": "Rascal: A domain specific language for source code analysis and manipulation"}, {"link": "/document/7081870", "title": "Evolution of dynamic feature usage in PHP"}, {"link": "", "title": "Empirical analysis of the relationship between CC and SLOC in a large corpus of Java methods and C functions"}, {"link": "", "title": "An empirical study of PHP feature usage: a static analysis perspective"}, {"link": "", "title": "cwi-swat/static-analysis-reflection"}, {"link": "", "title": "How (and why) developers use the dynamic features of programming languages: the case of smalltalk"}, {"link": "", "title": "An analysis of the dynamic behavior of javascript programs"}, {"link": "", "title": "The eval that men do: A large-scale study of the use of eval in javascript applications"}, {"link": "/document/7372044", "title": "Variable feature usage patterns in php"}, {"link": "", "title": "Evaluating the dynamic behaviour of python applications"}, {"link": "", "title": "Tracing dynamic features in python programs"}, {"link": "", "title": "Adoption and use of java generics"}, {"link": "", "title": "A large-scale study on the usage of java's concurrent programming constructs"}, {"link": "", "title": "Mining billions of AST nodes to study actual and potential usage of java language features"}, {"link": "/document/7424222", "title": "Towards an empirical analysis of. net framework and c# language features' adoption"}, {"link": "", "title": "Harvesting runtime values in android applications that feature anti-analysis techniques"}, {"link": "/document/7467346", "title": "Horndroid: Practical and sound static analysis of android applications by SMT solving"}, {"link": "", "title": "Droidra: taming reflection to support whole-program analysis of android apps"}, {"link": "", "title": "Composite constant propagation: Application to android inter-component communication analysis"}, {"link": "", "title": "Correlation tracking for points-to analysis of javascript"}, {"link": "", "title": "Determinacy in static analysis for jquery"}, {"link": "", "title": "Dynamic determinacy analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985689"}
{"ref": [{"link": "", "title": "Requirements Engineering: From System Goals to UML Models to Software Specifications"}, {"link": "", "title": "Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives"}, {"link": "", "title": "Uncertainty, risk, and information value in software requirements and architecture"}, {"link": "", "title": "Thinking, Fast and Slow"}, {"link": "", "title": "Anchoring and adjustment in software estimation"}, {"link": "", "title": "Simulating and optimising design decisions in quantitative goal models"}, {"link": "", "title": "Product Release Planning: Methods, Tools and Applications"}, {"link": "/document/919103", "title": "Quantifying the costs and benefits of architectural decisions"}, {"link": "/document/1201237", "title": "Quantifying the value of architecture design decisions: lessons from the field"}, {"link": "", "title": "A systematic review of software requirements selection and prioritization using SBSE approaches"}, {"link": "", "title": "A comparison of model-based and judgment-based release planning in incremental software projects"}, {"link": "", "title": "Goal-oriented requirements engineering: A guided tour"}, {"link": "", "title": "Reasoning about agents in goal-oriented requirements engineering"}, {"link": "", "title": "Reasoning about partial goal satisfaction for requirements and design engineering"}, {"link": "/document/4685677", "title": "A case study in eliciting scalability requirements"}, {"link": "/document/6152130", "title": "Systematic elaboration of scalability requirements through goal-obstacle analysis"}, {"link": "", "title": "Performance criteria for plastic card fraud detection tools"}, {"link": "", "title": "An introduction to Bayesian inference and decision"}, {"link": "", "title": "Risk Assessment and Decision Analysis with Bayesian Networks"}, {"link": "", "title": "Uncertain Judgements: Eliciting Experts' Probabilities"}, {"link": "", "title": "How to Measure Anything: Finding the Value of Intangibles in Business"}, {"link": "/document/1704057", "title": "Feature diagrams: A survey and a formal semantics"}, {"link": "/document/4082064", "title": "Information value theory"}, {"link": "", "title": "Readings on the Principles and Applications of Decision Analysis"}, {"link": "", "title": "Need for speed: an efficient algorithm for calculation of single-parameter expected value of partial perfect information"}, {"link": "", "title": "The IT measurement inversion"}, {"link": "/document/6606595", "title": "On the value of user preferences in search-based software engineering: a case study in software product lines"}, {"link": "", "title": "Scaling exact multi-objective combinatorial optimization by parallelization"}, {"link": "", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "A fast elitist nondominated sorting genetic algorithm for multi-objective optimization: Nsga-II"}, {"link": "", "title": "The definitive ANTLR 4 reference"}, {"link": "", "title": "Graphviz \u2014 open source graph drawing tools"}, {"link": "/document/7310818", "title": "Improving security policy decisions with models"}, {"link": "", "title": "Modelling and simulating systems security policy"}, {"link": "/document/1423996", "title": "A style-aware architectural middleware for resource-constrained, distributed systems"}, {"link": "/document/6606550", "title": "Guidearch: guiding the exploration of architectural solution space under uncertainty"}, {"link": "", "title": "Making architecture design decisions: An economic approach"}, {"link": "", "title": "Scalability analysis of the RADAR decision support tool"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Multi-objective search-based requirements selection and optimisation"}, {"link": "", "title": "Reasoning with goal models"}, {"link": "", "title": "Quantitative risk-based requirements reasoning"}, {"link": "", "title": "Reasoning about alternative requirements options"}, {"link": "", "title": "Evaluating goal models within the goal-oriented requirement language"}, {"link": "", "title": "PRISM 4.0: Verification of probabilistic real-time systems"}, {"link": "/document/7372021", "title": "Search-based synthesis of probabilistic models for quality-of-service software engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985693"}
{"ref": [{"link": "", "title": "2017 developer survey"}, {"link": "", "title": "Mobility, custom apps a priority for 2015"}, {"link": "", "title": "A measurement study of Google Play"}, {"link": "", "title": "Code injection attacks on HTML5-based mobile apps: Characterization, detection and mitigation"}, {"link": "", "title": "Reducing attack surface on Cordova-based hybrid mobile apps"}, {"link": "", "title": "On the static analysis of hybrid mobile apps"}, {"link": "", "title": "\n            "}, {"link": "", "title": "Webview"}, {"link": "", "title": "Chromium"}, {"link": "", "title": "Operational semantics for multi-language programs"}, {"link": "", "title": "Featherweight Java: A minimal core calculus for Java and GJ"}, {"link": "", "title": "The essence of JavaScript"}, {"link": "", "title": "The revised report on the syntactic theories of sequential control and state"}, {"link": "", "title": "LiveConnect support in the next generation Java\u2122Plug-In technology introduced in Java SE 6 update 10"}, {"link": "", "title": "Rhino"}, {"link": "", "title": "Towards understanding and reasoning about Android interoperations (supplementary material)"}, {"link": "", "title": "Types and Programming Languages"}, {"link": "", "title": "SAFE: Formal specification and implementation of a scalable analysis framework for ECMAScript"}, {"link": "", "title": "Type system for safe interoperability in Android"}, {"link": "", "title": "Androzoo: Collecting millions of android apps for the research community"}, {"link": "", "title": "Breaking and fixing origin-based access control in hybrid web/mobile application frameworks"}, {"link": "", "title": "Java\u2122 Native Interface"}, {"link": "", "title": "Jeannie: Granting Java Native Interface developers their wishes"}, {"link": "", "title": "JNI Light: An operational model for the core JNI"}, {"link": "", "title": "Safe cross-language inheritance"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811927"}
{"ref": [{"link": "", "title": "The Relevance of Software Documentation, Tools and Technologies: A Survey"}, {"link": "/document/1241364", "title": "How software engineers use documentation: The state of the practice"}, {"link": "", "title": "A Survey of Documentation Practice within Corrective Maintenance"}, {"link": "", "title": "Cost, benefits and quality of software development documentation: A systematic mapping"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? on the relation between source code and comment changes"}, {"link": "", "title": "An empirical analysis of the impact of software development problem factors on software maintainability"}, {"link": "/document/7371993", "title": "How do developers document database usages in source code? (n)"}, {"link": "/document/7181703", "title": "Automatic source code summarization of context for Java methods"}, {"link": "/document/8094446", "title": "On-demand Developer Documentation"}, {"link": "/document/6405303", "title": "Modelling the \u2018hurried\u2019 bug report reading process to summarize bug reports"}, {"link": "", "title": "AUSUM: Approach for unsupervised bug report summarization"}, {"link": "/document/6704866", "title": "Automatic Summarization of Bug Reports"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Towards automatically generating summary comments for Java methods"}, {"link": "/document/6613830", "title": "Automatic Generation of Natural Language Summaries for Java Classes"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Improving topic model source code summarization"}, {"link": "", "title": "Doc-umenting database usages and schema constraints in database-centric applications"}, {"link": "", "title": "The impact of test case summaries on bug fixing performance: An empirical investigation"}, {"link": "/document/7515485", "title": "Automatically documenting unit test cases"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "/document/7203049", "title": "ChangeScribe: A tool for automatically generating commit messages"}, {"link": "/document/7961530", "title": "Towards automatic generation of short summaries of commits"}, {"link": "", "title": "Automatic generation of release notes"}, {"link": "/document/7513412", "title": "ARENA: An approach for the automated generation of release notes"}, {"link": "", "title": "What would users change in my app? Summarizing app reviews for recommending software changes"}, {"link": "", "title": "Code fragment summarization"}, {"link": "/document/8094475", "title": "Tracelab components for generating extractive summaries of user stories"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "/document/1698785", "title": "Mica: A web-search tool for finding api components and examples"}, {"link": "", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "/document/7675466", "title": "How can I use this method?"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}, {"link": "/document/5070525", "title": "Semantics-based code search"}, {"link": "", "title": "Portfolio: Finding relevant functions and their usage"}, {"link": "/document/7985653", "title": "Supporting software developers with a holistic recommender system"}, {"link": "/document/6498455", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming prompter"}, {"link": "/document/5287006", "title": "What makes APIs hard to learn? Answers from developers"}, {"link": "", "title": "Creating and evolving developer documentation"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "/document/6958422", "title": "The Value of Software Documentation Quality"}, {"link": "", "title": "Usage and usefulness of technical software documentation: An industrial case study"}, {"link": "/document/7140676", "title": "How API Documentation Fails"}, {"link": "", "title": "A Topic Modeling Based Solution for Confirming Software Documentation Quality"}, {"link": "/document/8103450", "title": "A study of the effectiveness of usage examples in REST API documentation"}, {"link": "", "title": "Document quality indicators: A framework for assessing documentation adequacy"}, {"link": "/document/6100151", "title": "Automatic assessment of software documentation quality"}, {"link": "", "title": "Use Documentation: The State of the Practice Documentation"}, {"link": "", "title": "Assessing the State of Software Documentation Practices"}, {"link": "/document/6624014", "title": "An exploratory analysis of mobile development issues using Stack Overflow"}, {"link": "", "title": "What are developers talking about? An analysis of topics and trends in Stack Overflow"}, {"link": "", "title": "What are mobile developers asking about? A large scale study using Stack Overflow"}, {"link": "/document/6762802", "title": "What do mobile app users complain about?"}, {"link": "", "title": "Replication Package"}, {"link": "", "title": "GitHub Archive"}, {"link": "", "title": "Event Types & Payloads"}, {"link": "", "title": "Apache Mail Archives"}, {"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Survey of research on software clones"}, {"link": "", "title": "A comprehensive model for code readability"}, {"link": "", "title": "Derivation of new readability formulas (automated readability index, fog count and flesch reading ease formula) for navy enlisted personnel"}, {"link": "", "title": "Detecting API documentation errors"}, {"link": "", "title": "GitHub Issue of acid-state/acid-state"}, {"link": "", "title": "GitHub Issue of rockstor/rockstor-core"}, {"link": "", "title": "GitHub Issue of pluskid/mocha.jl"}, {"link": "", "title": "GitHub PR of silverstripe/silverstripe-framework"}, {"link": "", "title": "Apache Mailing List httpd-docs"}, {"link": "", "title": "Apache Mailing List httpd-docs"}, {"link": "", "title": "GitHub Issue of tinymce/tinymce"}, {"link": "", "title": "GitHub Issue of mlpack/mlpack"}, {"link": "", "title": "GitHub Issue of elliotchance/c2go"}, {"link": "", "title": "GitHub PR of falconry/falcon"}, {"link": "", "title": "GitHub Issue of trilinos/trilinos"}, {"link": "", "title": "GitHub Issue of bytedeco/javacpp-presets"}, {"link": "", "title": "GitHub Issue of nodcmcu/nodemcu-tirmwarc"}, {"link": "", "title": "GitHub Issue of facebook/watchman"}, {"link": "", "title": "Apache Mailing List forrest-dev"}, {"link": "", "title": "GitHub PR of coreos/etcd"}, {"link": "", "title": "GitHub Issue of d3/d3-dispatch"}, {"link": "", "title": "GitHub PR of alibaba/rax"}, {"link": "", "title": "Apache Mailing List systemml-dev"}, {"link": "", "title": "GitHub Issue of domaindrivendev/swashbuckle"}, {"link": "", "title": "GitHub Issue of doctrine/doctrine1"}, {"link": "", "title": "GitHub Issue of webpack/docs"}, {"link": "", "title": "GitHub Issue of stevegrunwell/mcavoy"}, {"link": "", "title": "GitHub PR of asciidoctor/asciidoctorj"}, {"link": "", "title": "Apache Mailing List cocoon-docs"}, {"link": "", "title": "Apache Mailing List directory-dev"}, {"link": "", "title": "GitHub Issue of revapi/revapi"}, {"link": "", "title": "GitHub PR of habitat-sh/habitat"}, {"link": "", "title": "GitHub Issue of riot-os/riot"}, {"link": "", "title": "StackOverflow discussion 30596247"}, {"link": "", "title": "GitHub Issue of realm/jazzy"}, {"link": "", "title": "Apache Mailing List httpd-docs"}, {"link": "", "title": "Apache MailingList stdcxx-user"}, {"link": "", "title": "Apache Mailing List hc-dev"}, {"link": "", "title": "Apache Mailing List httpd-docs"}, {"link": "", "title": "GitHub PR of rails/rails"}, {"link": "", "title": "GitHub PR of paulcollett/vue-masonry-css"}, {"link": "", "title": "GitHub PR of composewell/streamly"}, {"link": "", "title": "GitHub PR of facebook/react-native"}, {"link": "", "title": "GitHub Issue of commercialhaskell/stack"}, {"link": "", "title": "StackOverflow discussion 532779"}, {"link": "", "title": "StackOverflow discussion 1136234"}, {"link": "", "title": "StackOverflow discussion 48435375"}, {"link": "", "title": "GitHub PR of uber/luma.gl"}, {"link": "", "title": "StackOverflow discussion 23900027"}, {"link": "", "title": "GitHub Issue of pinax/pinax-badges"}, {"link": "", "title": "GitHub PR of netflix/hollow"}, {"link": "", "title": "Apache MailingList camel-dev"}, {"link": "", "title": "StackOverflow discussion 45737685"}, {"link": "", "title": "GitHub Issue of phpdocumentor/phpdocumentor2"}, {"link": "", "title": "StackOverflow discussion 23689297"}, {"link": "", "title": "Apache MailingList httpd-docs"}, {"link": "", "title": "GitHub Issue of dvajs/dva"}, {"link": "", "title": "Apache Mailing List tomee-dev"}, {"link": "", "title": "Apache MailingList httpd-docs"}, {"link": "", "title": "GitHub PR of keratin/authn"}, {"link": "", "title": "Apache MailingList jclouds-user"}, {"link": "", "title": "Apache Mailing List tomee-users"}, {"link": "", "title": "Apache Mailing List jena-dev"}, {"link": "", "title": "StackOverflow discussion 45342178"}, {"link": "", "title": "Apache Mailing List tuscany-user"}, {"link": "", "title": "Apache Mailing List systemml-dev"}, {"link": "", "title": "GitHub PR of prestodb/tempto"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811931"}
{"ref": [{"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "", "title": "Reversible debugging software"}, {"link": "/document/7194596", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/7381836", "title": "Should fixing these failures be delegated to automated program repair?"}, {"link": "/document/7816488", "title": "Enhancing automated program repair with deductive verification"}, {"link": "", "title": "Jfix: Semantics-based repair of java programs via symbolic pathfinder"}, {"link": "", "title": "Angelic debugging"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "", "title": "Overfitting in semantics-based automated program repair"}, {"link": "/document/7816487", "title": "Empirical study on synthesis engines for semantics-based program repair"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "Identifying patch correctness in test-based program repair"}, {"link": "", "title": "S3: syntax-and semantic-guided repair synthesis via programming by example"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Automatic repair of real bugs in java: a large-scale experiment on the defects4j dataset"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Gauging the quality of relevance assessments using inter-rater agreement"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Syntax-guided synthesis"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "/document/7476644", "title": "History driven program repair"}, {"link": "", "title": "Evaluation of Text and Speech Systems"}, {"link": "", "title": "Summarizing software artifacts: a case study of bug reports"}, {"link": "", "title": "Anger and its direction in apache jira developer comments"}, {"link": "/document/5332232", "title": "Learning a metric for code readability"}, {"link": "", "title": "Labeling source code with information retrieval methods: an empirical study"}, {"link": "/document/7371990", "title": "Learning to rank for question-oriented software text retrieval (t)"}, {"link": "", "title": "Toward a text classification system for the quality assessment of software requirements written in natural language"}, {"link": "/document/7000568", "title": "Extracting development tasks to navigate software documentation"}, {"link": "", "title": "Quantifying test collection quality based on the consistency of relevance judgements"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Estimating the reliability, systematic error, and random error of interval data"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "Dominance statistics: Ordinal analyses to answer ordinal questions"}, {"link": "", "title": "Author conflict and bias in research: Quantifying the downgrade in methodology"}, {"link": "", "title": "Processing resources and attention"}, {"link": "", "title": "Evosuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "A critical review of automatic patch generation learned from human-written patches: essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "Introduction to the Theory of Computation"}, {"link": "/document/6385116", "title": "Automatic defect categorization"}, {"link": "/document/6227177", "title": "Content classification of development emails"}, {"link": "/document/7181433", "title": "Active semi-supervised defect categorization"}, {"link": "", "title": "Fair and balanced?: bias in bug-fix datasets"}, {"link": "", "title": "Potential biases in bug localization: Do they matter?"}, {"link": "", "title": "Dont embarrass yourself: Beware of bias in your data"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Towards efficient and effective automatic program repair"}, {"link": "", "title": "Openjml: Jml for java 7 by extending openjdk"}, {"link": "", "title": "Jml: a java modeling language"}, {"link": "", "title": "No issue left behind: Reducing information overload in issue tracking"}, {"link": "", "title": "Thirty years of software problems in the news"}, {"link": "", "title": "Modeling readability to improve unit tests"}, {"link": "", "title": "Relevance assessment: are judges exchangeable and does it matter"}, {"link": "", "title": "Dataset"}, {"link": "", "title": "Tracing software developers' eyes and interactions for change tasks"}, {"link": "/document/6606613", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "The challenges of staying together while moving fast: An exploratory study"}, {"link": "", "title": "A reference collection for web spam"}, {"link": "", "title": "Combining concepts and language models for information access"}, {"link": "", "title": "A general evaluation measure for document organization tasks"}, {"link": "", "title": "Detecting missing information in bug descriptions"}, {"link": "", "title": "Why do developers use trivial packages? an empirical case study on npm"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Qlose: Program repair with quantitative objectives"}, {"link": "/document/8115675", "title": "Elixir: Effective object-oriented program repair"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "", "title": "Automatic software repair: A survey"}, {"link": "", "title": "The effect of assessor error on ir system evaluation"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "/document/6606585", "title": "It's not a bug, it's a feature: how misclassification impacts bug prediction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812054"}
{"ref": [{"link": "", "title": "Effective C++: 55 Specific Ways to Improve Your Programs and Designs"}, {"link": "", "title": "Can we crowdsource language design?"}, {"link": "", "title": "ISO International Standard ISO/IEC 14882:2014(E)-programming language C++"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "/document/7985688", "title": "Glacier: Transitive class immutability for Java"}, {"link": "", "title": "Exploring language support for immutability"}, {"link": "", "title": "Quantifying and explaining immutability in Scala"}, {"link": "", "title": "The eval that men do: A large-scale study of the use of eval in javascript applications"}, {"link": "", "title": "Evaluating the dynamic behaviour of python applications"}, {"link": "", "title": "How do developers use parallel libraries?"}, {"link": "", "title": "Evaluating the design of the R language: Objects and functions for data analysis"}, {"link": "", "title": "Uniqueness and reference immutability for safe parallelism"}, {"link": "", "title": "C++ const and immutability: An empirical study of writes-through-const"}, {"link": "", "title": "ReIm & ReImInfer: Checking and inference of reference immutability and method purity"}, {"link": "", "title": "Purity and side-effect analysis for Java programs"}, {"link": "", "title": "A Theory of Type Qualifiers"}, {"link": "", "title": "Type qualifier inference for Java"}, {"link": "", "title": "Javari: Adding reference immutability to java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812125"}
{"ref": [{"link": "", "title": "Lean thinking: banish waste and create wealth in your corporation"}, {"link": "", "title": "A decade of system justification theory: Accumulated evidence of conscious and unconscious bolstering of the status quo"}, {"link": "", "title": "Toyota production system: beyond large-scale production"}, {"link": "", "title": "A study of the Toyota Production System: From an Industrial Engineering Viewpoint"}, {"link": "", "title": "Lean Software Development: An Agile Toolkit"}, {"link": "", "title": "Kanban: successful evolutionary change for your technology business"}, {"link": "", "title": "The Toyota Way: 14 Management Principles from the World's Greatest Manufacturer"}, {"link": "", "title": "Implementing Lean Software Development: From Concept to Cash"}, {"link": "", "title": "Impediments to flow: Rethinking the lean concept of \u2018waste\u2019 in modern software development"}, {"link": "", "title": "Flow-assisted value stream mapping in the early phases of large-scale software development"}, {"link": "", "title": "Extending value stream mapping through waste definition beyond customer perspective"}, {"link": "", "title": "Waste and lead time reduction in a software product customization process with value stream maps"}, {"link": "", "title": "Constructing Grounded Theory"}, {"link": "", "title": "Sustainable software development through overlapping pair rotation"}, {"link": "", "title": "Practice and perception of team code ownership"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "", "title": "Agile Retrospectives: Making Good Teams Great"}, {"link": "", "title": "Theoretical Sensitivity: Advances in the Methodology of Grounded Theory"}, {"link": "", "title": "Sustainable software development: Evolving extreme programming"}, {"link": "", "title": "Personas, participatory design and product development: An infrastructure for engagement"}, {"link": "", "title": "Managing technical debt"}, {"link": "", "title": "Cognitive load during problem solving: Effects on learning"}, {"link": "", "title": "Cognitive load theory and the role of learner experience: An abbreviated review for educational practitioners"}, {"link": "", "title": "Element interactivity and intrinsic, extraneous, and germane cognitive load"}, {"link": "", "title": "Cognitive load theory and complex learning: Recent developments and future directions"}, {"link": "", "title": "Stress without distress"}, {"link": "", "title": "The impact of vacation and job stress on burnout and absenteeism"}, {"link": "", "title": "Task switching"}, {"link": "", "title": "Grounded theory in software engineering research: A critical review and guideline"}, {"link": "", "title": "Doing Grounded Theory: Issues and Discussions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985656"}
{"ref": [{"link": "/document/28121", "title": "Software inspections: An effective verification process"}, {"link": "", "title": "A Hitchhiker's Guide to Statistical Tests for Assessing Randomized Algorithms in Software Engineering"}, {"link": "", "title": "A functional MRI study of high-level cognition. I. the game of chess"}, {"link": "", "title": "Evaluating static analysis defect warnings on production software"}, {"link": "", "title": "SLAM and static driver verifier: Technology transfer of formal methods inside microsoft"}, {"link": "", "title": "Dynamic reconfiguration of human brain networks during learning"}, {"link": "", "title": "Neural correlates of interspecies perspective taking in the post-mortem atlantic salmon: An argument for proper multiple comparisons correction"}, {"link": "", "title": "A few billion lines of code later: Using static analysis to find bugs in the real world"}, {"link": "", "title": "Learning a metric for code readability"}, {"link": "", "title": "Benefits and barriers of user evaluation in software engineering research"}, {"link": "/document/6227122", "title": "Information needs for software development analytics"}, {"link": "", "title": "Task-independent and task-specific age effects on brain activity during working memory, visual attention and episodic retrieval"}, {"link": "", "title": "Influence of personality types in software tasks choices"}, {"link": "", "title": "Gaussian process classification of Alzheimer's disease and mild cognitive impairment from resting-state fMRI"}, {"link": "", "title": "Expertise in problem solving"}, {"link": "", "title": "Can a general deontic logic capture the facts of human moral reasoning? How the mind interprets social exchange rules and detects cheaters"}, {"link": "", "title": "Experts bodies, experts minds: How physical and mental training shape the brain"}, {"link": "", "title": "The uses of program reading"}, {"link": "", "title": "Detecting and adjusting for artifacts in fmri time series data"}, {"link": "", "title": "The economic value of rapid response time"}, {"link": "/document/1207450", "title": "Practical code inspection techniques for object-oriented systems: An experimental comparison"}, {"link": "", "title": "BUGS in Writing: A Guide to Debugging your Prose"}, {"link": "", "title": "Cluster failure: Why fmri inferences for spatial extent have inflated false-positive rates"}, {"link": "", "title": "Improving computer program readability to aid modification"}, {"link": "/document/5387093", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "A human study of patch maintainability"}, {"link": "/document/5609691", "title": "A human study of fault localization accuracy"}, {"link": "", "title": "Choosing a proxy for academic aptitude"}, {"link": "", "title": "What do programmers really do anyway?"}, {"link": "", "title": "Software documentation and readability: a proposed process improvement"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Automated Defect Prevention: Best Practices in Software Management"}, {"link": "", "title": "Brain activity measurement during program comprehension with NIRS"}, {"link": "", "title": "A full-size MRI-compatible keyboard response system"}, {"link": "/document/6606613", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Google Mondrian: web-based code review and storage"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "An improved inspection technique"}, {"link": "", "title": "Literate programming"}, {"link": "", "title": "Archetypal personalities of software engineers and their work preferences: a new perspective for empirical studies"}, {"link": "", "title": "Assessing approximate inference for binary Gaussian process classification"}, {"link": "", "title": "Human connectome project"}, {"link": "", "title": "Support vector machines for temporal classification of block design fmri data"}, {"link": "/document/5680914", "title": "Measuring code quality to improve specification mining"}, {"link": "", "title": "Validity of self-evaluation of ability: A review and meta-analysis"}, {"link": "", "title": "London taxi drivers and bus drivers: A structural mri and neuropsychological analysis"}, {"link": "", "title": "A survey of medical image registration"}, {"link": "", "title": "Quantitative prediction of subjective pain intensity from whole-brain fMRI data using Gaussianprocesses"}, {"link": "", "title": "Behavioral study of obedience"}, {"link": "", "title": "Attentional control in the aging brain: Insights from an fMRI study of the Stroop task"}, {"link": "", "title": "Deconvolving BOLD activation in event-related designs for multivoxel pattern classification analyses"}, {"link": "", "title": "Quantifying programmers' mental workload during program comprehension based on cerebral blood flow measurement: A controlled experiment"}, {"link": "", "title": "Software reuse survey"}, {"link": "", "title": "Brain magnetic resonance imaging with contrast dependent on blood oxygenation"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Self-reports in organizational research Problems and prospects"}, {"link": "", "title": "A simpler model of software readability"}, {"link": "", "title": "Gaussian Processing for Machine Learning"}, {"link": "", "title": "Reading source code"}, {"link": "", "title": "Functional connectivity relationships predict similarities in task activation and pattern information during associative memory encoding"}, {"link": "", "title": "The minds eye: Functional MR imaging evaluation of golf motor imagery"}, {"link": "", "title": "The use of domain knowledge in program understanding"}, {"link": "", "title": "Exploratory experimental studies comparing online and offline programming performance"}, {"link": "", "title": "Learning with kernels"}, {"link": "", "title": "Training induces changes in white-matter architecture"}, {"link": "", "title": "Localizing and comparing weight maps generated from linear kernel machine learning models"}, {"link": "", "title": "Decoding semi constrained brain activity from fMRI using support vector machines and Gaussian processes"}, {"link": "", "title": "Kernel methods for pattern analysis"}, {"link": "", "title": "Improving software inspections by using reading techniques"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "Questions programmers ask during software evolution tasks"}, {"link": "", "title": "The influence of students and teachers characteristics on the efficacy of face-to-face and computer supported collaborative learning"}, {"link": "", "title": "Software Engineering"}, {"link": "", "title": "A deeper look into bug fixes: Patterns, replacements, deletions, and additions"}, {"link": "", "title": "Selective impairment of reasoning about social exchange in a patient with bilateral limbic system damage"}, {"link": "", "title": "The Official SAT Study Guide (Redesigned SAT)"}, {"link": "", "title": "Meet Phabricator, the witty code review tool built inside Facebook"}, {"link": "", "title": "Automated anatomical labeling of activations in SPM using a macroscopic anatomical parcellation of the MNI MRI single-subject brain"}, {"link": "", "title": "How long will it take to fix this bug?"}, {"link": "", "title": "Statistical parametric mapping"}, {"link": "", "title": "IBM Rational software analyzer: Beyond source code"}, {"link": "", "title": "In-demand and aging: A look at engineers and engineering technicians in the workforce"}, {"link": "", "title": "Moving from static to dynamic modeling of expertise for question routing in CQA sites"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "/document/7328331", "title": "Automatically recommending peer reviewers in modern code review"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985660"}
{"ref": [{"link": "", "title": "The Art of Application Performance Testing: Help for Programmers and Quality Assurance"}, {"link": "", "title": "Computer Systems: A Programmer's Perspective"}, {"link": "", "title": "Dynamic Dead-instruction Detection and Elimination"}, {"link": "", "title": "Architecture-level power optimization-what are the limits?"}, {"link": "/document/7429311", "title": "Runtime Value Numbering: A Profiling Technique to Pinpoint Redundant Computations"}, {"link": "", "title": "DeadSpy: A Tool to Pinpoint Program Inefficiencies"}, {"link": "", "title": "On the Value Locality of Store Instructions"}, {"link": "/document/6557169", "title": "Pinpointing data locality bottlenecks with low overhead"}, {"link": "/document/4510744", "title": "Pinpointing and Exploiting Opportunities for Enhancing Data Reuse"}, {"link": "", "title": "Redspy: Exploring value locality in software"}, {"link": "", "title": "Barrier Elision for Production Parallel Programs"}, {"link": "", "title": "Analyzing Lock Contention in Multithreaded Applications"}, {"link": "", "title": "Eliminating Redundancies in Sum-of-product Array Computations"}, {"link": "", "title": "Global Value Numbers and Redundant Computations"}, {"link": "", "title": "Constant Propagation with Conditional Branches"}, {"link": "", "title": "Simple and Effective Link-time Optimization of Modula-3 Programs"}, {"link": "/document/7863733", "title": "ThinIto: Scalable and incremental Ito"}, {"link": "", "title": "A practical system for intermodule code optimization at link-time"}, {"link": "", "title": "HPCToolkit: Tools for Performance Analysis of Optimized Parallel Programs"}, {"link": "", "title": "Intel VTune"}, {"link": "", "title": "Linux perf tool"}, {"link": "", "title": "Gprof: A Call Graph Execution Profiler"}, {"link": "", "title": "OProfile"}, {"link": "", "title": "Cray performance analysis tools"}, {"link": "/document/6606602", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "Graphite: Polyhedral analyses and optimizations for GCC"}, {"link": "", "title": "Redundancy elimination revisited"}, {"link": "", "title": "Optimizing Stencil Code via Locality of Computation"}, {"link": "/document/5764669", "title": "MAO - An Extensible Micro-architectural Optimizer"}, {"link": "", "title": "Glore: Generalized loop redundancy elimination upon ler-notation"}, {"link": "", "title": "Generalizations of the theory and deployment of triangular inequality for compiler-based strength reduction"}, {"link": "", "title": "Value Locality and Load Value Prediction"}, {"link": "/document/566464", "title": "Exceeding the Dataflow Limit via Value Prediction"}, {"link": "", "title": "Silent Stores for Free"}, {"link": "/document/7011383", "title": "Load Value Approximation"}, {"link": "", "title": "Doppel-ganger: A Cache for Approximate Computing"}, {"link": "", "title": "RFVP: Rollback-free Value Prediction with Safe-to-approximate Loads"}, {"link": "/document/645816", "title": "Value profiling"}, {"link": "", "title": "Value Profiling and Optimization"}, {"link": "", "title": "Value Profiling for Instructions and Memory Locations"}, {"link": "", "title": "Goal-Directed Value Profiling"}, {"link": "", "title": "Efficient and Flexible Value Sampling"}, {"link": "", "title": "Continuous Profiling: Where Have All the Cycles Gone?"}, {"link": "", "title": "Watching for software inefficiencies with witch"}, {"link": "", "title": "Code Specialization Based on Value Profiles"}, {"link": "", "title": "Practi-cal Automatic Loop Specialization"}, {"link": "", "title": "Energy Efficient Source Code Transformation based on Value Profiling"}, {"link": "", "title": "A Value Profiler for Assisting Object-Oriented Program Specialization"}, {"link": "", "title": "Towards the Generalization of Value Profiling for High-Performance Application Optimization"}, {"link": "", "title": "Performance problems you can fix: A dynamic analysis of memoization opportunities"}, {"link": "/document/7985686", "title": "Travioli: A dynamic analysis for detecting data-structure traversals"}, {"link": "/document/7985677", "title": "Performance diagnosis for inefficient loops"}, {"link": "", "title": "SPEC Corporation, \u201cSPEC CPU2006 benchmark suite"}, {"link": "", "title": "Benchmarking modern multiprocessors"}, {"link": "/document/5306797", "title": "Rodinia: A benchmark suite for heterogeneous computing"}, {"link": "", "title": "NERSC-8/Trinity Benchmarks"}, {"link": "", "title": "Graphite: Gimple Represented as Polyhedra"}, {"link": "/document/1281665", "title": "Llvm: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Intel C++ Compilers"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Call paths for pin tools"}, {"link": "", "title": "Exploiting hardware performance counters with flow and context sensitive profiling"}, {"link": "", "title": "A data-centric profiler for parallel programs"}, {"link": "", "title": "Engineering A Compiler"}, {"link": "/document/7877003", "title": "A highly effective global surface wave numerical simulation with ultra-high resolution"}, {"link": "", "title": "Nesting of reducible and irreducible loops"}, {"link": "", "title": "Sampling-based program locality approximation"}, {"link": "", "title": "The DWARF Debugging Standard"}, {"link": "/document/5644887", "title": "Scalable identification of load imbalance in parallel executions using call path profiles"}, {"link": "", "title": "SPEC OMP2012 benchmark suite"}, {"link": "", "title": "SPEC CPU2017 benchmark suite"}, {"link": "/document/4636089", "title": "Stamp: Stanford transactional applications for multi-processing"}, {"link": "", "title": "Apache avro"}, {"link": "", "title": "Hoard: A scalable memory allocator for multithreaded applications"}, {"link": "", "title": "shogun-toolbox/shogun: Shogun 6.0.0 - Baba Nobuharu"}, {"link": "", "title": "The chroma software system for lattice qcd"}, {"link": "", "title": "Inferring Algorithmic Patterns with Stack-Augmented Recurrent Nets"}, {"link": "", "title": "GNU Binutils"}, {"link": "", "title": "Near-optimal RNA-Seq quantification"}, {"link": "/document/8811970", "title": "Redundant Loads: A Software Inefficiency Indicator"}, {"link": "", "title": "Benchmark comparing various data serialization libraries (thrift, protobuf etc.) for C++"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811970"}
{"ref": [{"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Accuracy and stability of numerical algorithms"}, {"link": "", "title": "Software for roundoff analysis, ii"}, {"link": "", "title": "Rounding Errors in Algebraic Processes"}, {"link": "", "title": "Static analysis of finite precision computations"}, {"link": "", "title": "Sound compilation of reals"}, {"link": "", "title": "A dynamic program analysis to find floating-point accuracy problems"}, {"link": "", "title": "Automatically improving accuracy for floating point expressions"}, {"link": "", "title": "American National Standards Institute"}, {"link": "", "title": "On-the-fly detection of instability problems in floating-point program execution"}, {"link": "", "title": "The iRRAM: exact arithmetic in C++"}, {"link": "", "title": "MPFR: A multiple-precision binary floating-point library with correct rounding"}, {"link": "/document/6879754", "title": "Practically accurate floating-point math"}, {"link": "", "title": "Stochastic optimization of floating-point programs with tunable precision"}, {"link": "", "title": "An improved arc algorithm for detecting definite Hermitian pairs"}, {"link": "", "title": "EXE: automatically generating inputs of death"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "ROSE: Compiler support for object-oriented frameworks"}, {"link": "", "title": "Numerical Methods for Scientists and Engineers"}, {"link": "", "title": "Toward mechanical verification of properties of roundoff error propagation"}, {"link": "", "title": "Software for roundoff analysis"}, {"link": "", "title": "Semantics-Based transformation of arithmetic expressions"}, {"link": "", "title": "Program transformation for numerical precision"}, {"link": "", "title": "Perturbing numerical calculations for statistical analysis of floating-point program (in) stability"}, {"link": "", "title": "Finding root causes of floating point error"}, {"link": "", "title": "Automatically adapting programs for mixed-precision floating-point computation"}, {"link": "", "title": "Precimonious: Tuning assistant for floating-point precision"}, {"link": "", "title": "Floating-point precision tuning using blame analysis"}, {"link": "", "title": "Exploiting community structure for floating-point precision tuning"}, {"link": "", "title": "The pitfalls of verifying floating-point computations"}, {"link": "", "title": "Trustworthy numerical computation in Scala"}, {"link": "/document/8115662", "title": "A comprehensive study of real-world numerical bug characteristics"}, {"link": "", "title": "Static analyses of the precision of floating-point operations"}, {"link": "", "title": "Static analysis of numerical algorithms"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "Efficient search for inputs causing high floating-point errors"}, {"link": "/document/7194603", "title": "A genetic algorithm for detecting significant floating-point inaccuracies"}, {"link": "", "title": "RAIVE: Runtime assessment of floating-point instability by vectorization"}, {"link": "/document/7792694", "title": "Software numerical instability detection and diagnosis by combining stochastic and infinite-precision testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812093"}
{"ref": [{"link": "", "title": "On compiler error messages: What they say and what they mean"}, {"link": "", "title": "Programmers' build errors: A case study (at Google)"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "What developers want and need from program analysis: An empirical study"}, {"link": "", "title": "Frequency distribution of error messages"}, {"link": "", "title": "Enhancing syntax error messages appears ineffectual"}, {"link": "", "title": "Measuring the effectiveness of error messages designed for novice programmers"}, {"link": "", "title": "Framework for measuring program comprehension"}, {"link": "", "title": "GazePoint"}, {"link": "", "title": "Eclipse"}, {"link": "", "title": "IntelliJ"}, {"link": "", "title": "Visual Studio"}, {"link": "", "title": "OpenCV"}, {"link": "", "title": "An overview of the Tesseract OCR engine"}, {"link": "", "title": "Pattern matching: The Gestalt approach"}, {"link": "", "title": "Response time effort: A new measure of examinee motivation in computer-based tests"}, {"link": "", "title": "Retrospective vs. concurrent think-aloud protocols: Testing the usability of an online library catalogue"}, {"link": "", "title": "Conscience without cognition: The effects of subconscious priming on ethical behavior"}, {"link": "", "title": "Vision and Attention"}, {"link": "", "title": "Eye movements in reading and information processing: 20 years of research"}, {"link": "", "title": "Kullback-Leibler Divergence"}, {"link": "", "title": "Saccadic eye movements during reading"}, {"link": "", "title": "A note on a general definition of the coefficient of determination"}, {"link": "", "title": "A cross-tool communication study on program analysis tool notifications"}, {"link": "", "title": "Switching languages, Switching palabras (words): An electrophysiological study of code switching"}, {"link": "", "title": "Clang Static Analyzer"}, {"link": "/document/1698761", "title": "Using visual momentum to explain disorientation in the Eclipse IDE"}, {"link": "", "title": "From Quick Fixes to Slow Fixes: Reimagining Static Analysis Resolutions to Enable Design Space Exploration"}, {"link": "", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Visual Attention and Representation Switching During Java Program Debugging: A Study Using the Restricted Focus Viewer"}, {"link": "", "title": "Analyzing individual performance of source code review using reviewers' eye movement"}, {"link": "", "title": "An eye-tracking study on the role of scan time in finding source code defects"}, {"link": "", "title": "Temporal eye-tracking data: Evolution of debugging strategies with multiple representations"}, {"link": "", "title": "Visual attention patterns during program debugging with an IDE"}, {"link": "/document/7181454", "title": "Eye movements in code reading: Relaxing the linear order"}, {"link": "/document/5674060", "title": "How programmers debug, revisited: An information foraging theory perspective"}, {"link": "/document/1494236", "title": "Using eye tracking to address limitations in think-aloud protocol"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985695"}
{"ref": [{"link": "", "title": "Ad Script jsvpaid.js"}, {"link": "", "title": "Ad Script vd0.2.88.1.js"}, {"link": "", "title": "Google Ad Experience Report API"}, {"link": "", "title": "Amazon.com Associates: The web's most popular and successful affiliate program."}, {"link": "", "title": "Budget Management Strategies in Repeated Auctions"}, {"link": "", "title": "Measuring the Quality of Experience of Web Users"}, {"link": "", "title": "Understanding Emerging Threats to Online Advertising"}, {"link": "", "title": "Understanding Website Complexity: Measurements, Metrics, and Implications"}, {"link": "", "title": "KLOTSKI: Reprioritizing Web Content to Improve User Experience on Mobile Devices"}, {"link": "", "title": "Eyeo GmbH. Adblock Plus"}, {"link": "", "title": "The Effects of Exposure Time on Memory of Display Advertisements"}, {"link": "", "title": "DoubleClick - Digital Advertising Solutions"}, {"link": "", "title": "Google AdSense - Make Money Online through Website Monetization"}, {"link": "", "title": "WebPagetest - Website Performance and Optimization Test"}, {"link": "", "title": "Pricing a Low-Regret Seller"}, {"link": "", "title": "Basics of Software Engineering Experimentation"}, {"link": "", "title": "Improving User Perceived Page Load Times Using Gaze"}, {"link": "", "title": "How Loading Time Affects Your Bottom Line"}, {"link": "/document/1027796", "title": "Preliminary Guidelines for Empirical Research in Software Engineering"}, {"link": "", "title": "An Expressive Auction Design for Online Display Advertising"}, {"link": "", "title": "Handling Forecast Errors While Bidding for Display Advertising. In"}, {"link": "", "title": "Streamrail Ad Server"}, {"link": "", "title": "moz.com. Page Speed"}, {"link": "", "title": "Usability Engineering"}, {"link": "", "title": "npm Software. Htmlparser2"}, {"link": "", "title": "Akamai's [state of the internet]Ql"}, {"link": "/document/7148084", "title": "QoE in the Web: A Dance of Design and Performance"}, {"link": "", "title": "Demystifying Page Load Performance with WProf"}, {"link": "", "title": "Speeding up Web Page Loads with Shandian"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811929"}
{"ref": [{"link": "", "title": "Fast algorithms for mining association rules in large databases"}, {"link": "", "title": "The Web Was Done by Amateurs: A Reflection on One of the Largest Collective Systems Ever Engineered"}, {"link": "/document/7927965", "title": "Recovering semantic traceability links between APIs and security vulnerabilities: An ontological modeling approach"}, {"link": "", "title": "Code smells for model-view-controller architectures"}, {"link": "", "title": "How modern news aggregators help development communities shape and share knowledge"}, {"link": "", "title": "Design-code traceability for object-oriented systems"}, {"link": "", "title": "Usage and attribution of stack overflow code snippets in github projects"}, {"link": "", "title": "Sotorrent: Reconstructing and analyzing the evolution of stack overflow posts"}, {"link": "", "title": "Digital plagiarism-the web giveth and the web shall taketh"}, {"link": "", "title": "Github Language Statistics - GitHut 2.0"}, {"link": "", "title": "Crowd debugging"}, {"link": "", "title": "A sentence-matching method for automatic license identification of source code files"}, {"link": "", "title": "GitHub. The State of the Octoverse 2017"}, {"link": "", "title": "Codetrail: Connecting source code and web resources"}, {"link": "/document/6624011", "title": "A study of innovation diffusion through link sharing on stack overflow"}, {"link": "/document/6624034", "title": "The ghtorent dataset and tool suite"}, {"link": "", "title": "Scholarly context not found: one in five articles suffers from reference rot"}, {"link": "", "title": "Web page change and persistence-a four-year longitudinal study"}, {"link": "", "title": "Determining sample size for research activities"}, {"link": "", "title": "Language Trends on GitHub - The GitHub Blog"}, {"link": "/document/8094425", "title": "An empirical study on the removal of self-admitted technical debt"}, {"link": "", "title": "Broken links: The ephemeral nature of educational www hyperlinks"}, {"link": "", "title": "Curating github for engineered software projects"}, {"link": "", "title": "Take me back: validating the wayback machine"}, {"link": "", "title": "Xanalogical structure, needed now more than ever: parallel documents, deep links to content, deep versioning, and deep re-use"}, {"link": "", "title": "Human capital in software engineering: A systematic mapping of reconceptualized human aspect studies"}, {"link": "/document/7962372", "title": "Classifying code comments in java open-source software systems"}, {"link": "/document/6976075", "title": "An exploratory study on self-admitted technical debt"}, {"link": "/document/7476684", "title": "Towards building api usage example metrics"}, {"link": "", "title": "Evolving software trace links between requirements and source code"}, {"link": "", "title": "Traceability in the wild: Automatically augmenting incomplete trace links"}, {"link": "/document/8115624", "title": "Detecting fragile comments"}, {"link": "/document/8094446", "title": "On-demand developer documentation"}, {"link": "", "title": "Do software models based on the UML aid in source-code comprehensibility? aggregating evidence from 12 controlled experiments"}, {"link": "", "title": "What makes a good code example?: A study of programming q&a in stackoverflow"}, {"link": "", "title": "Todo or to bug"}, {"link": "", "title": "/*icomment: Bugs or bad comments?*/"}, {"link": "", "title": "How do programmers ask and answer questions on the web? (nier track)"}, {"link": "", "title": "Understanding interobserver agreement: the kappa statistic"}, {"link": "", "title": "A general theory of software engineering: Balancing human, social and organizational capitals"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Analysis of license inconsistency in large collections of open source projects"}, {"link": "", "title": "What do developers search for on the web?"}, {"link": "", "title": "Why does site visit matter in global software development: A knowledge-based perspective"}, {"link": "", "title": "Was self-admitted technical debt removal a real removal?: An in-depth perspective"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811933"}
{"ref": [{"link": "/document/6679387", "title": "Counter-strategy guided refinement of GR(1) temporal logic specifications"}, {"link": "", "title": "RATSY - A new requirements analysis tool with synthesis"}, {"link": "", "title": "Synthesis of Reactive(1) Designs"}, {"link": "", "title": "Interpolation-based GR(1) assumptions refinement"}, {"link": "", "title": "A weakness measure for GR(1) formulae"}, {"link": "", "title": "Environment assumptions for synthesis"}, {"link": "", "title": "Diagnostic information for realizability"}, {"link": "", "title": "Synthesis of live behaviour models for fallible domains"}, {"link": "", "title": "Synthesizing nonanomalous event-based controllers for liveness goals"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "", "title": "Slugs: Extensible GR(1) synthesis"}, {"link": "", "title": "Performance heuristics for GR(1) synthesis and related algorithms"}, {"link": "/document/8089448", "title": "Automatic software repair: A survey"}, {"link": "", "title": "Synthesizing executable PLC code for robots from scenario-based GR(1) specifications"}, {"link": "", "title": "Towards practical program repair with on-demand candidate generation"}, {"link": "/document/7372019", "title": "Repairing programs with semantic code search (T)"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Debugging formal specifications: a practical approach using model-based diagnosis and counterstrategies"}, {"link": "/document/5238617", "title": "Temporal-logic-based reactive mission and motion planning"}, {"link": "", "title": "utomata theory and model checking"}, {"link": "", "title": "A symbolic justice violations transition system for unrealizable GR(1) specifications"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "/document/5970509", "title": "Mining assumptions for synthesis"}, {"link": "", "title": "GR(1) synthesis for LTL specification patterns"}, {"link": "", "title": "On well-separation of GR(1) specifications"}, {"link": "/document/6606570", "title": "Counter play-out: executing unrealizable scenario-based specifications"}, {"link": "", "title": "Two-way traceability and conflict debugging for AspectLTL programs"}, {"link": "", "title": "Semantic program repair using a reference implementation"}, {"link": "/document/7194596", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Synthesis of reactive(l) designs"}, {"link": "", "title": "On the Synthesis of a Reactive Module"}, {"link": "", "title": "CUDD: BDD package, University of Colorado, Boulder"}, {"link": "", "title": "Spectra Website"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/7463060", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Supporting Materials Website"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812056"}
{"ref": [{"link": "", "title": "personal communication"}, {"link": "", "title": "A comparison of extrinsic clustering evaluation metrics based on formal constraints"}, {"link": "", "title": "Plagiarism detection across programming languages"}, {"link": "", "title": "BusyBox authors"}, {"link": "/document/5328770", "title": "Benchmarking lightweight techniques to link e-mails and source code"}, {"link": "", "title": "Miler: A toolset for exploring email data"}, {"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "Using fuzzy code search to link code fragments in discussions to source code"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "/document/4228663", "title": "Detecting patch submission and acceptance in oss projects"}, {"link": "", "title": "Mining Email Social Networks"}, {"link": "", "title": "Latent Social Structure in Open Source Projects"}, {"link": "", "title": "Mixed criticality systems-a review. Tech. rep. Department of Computer Science, University of York"}, {"link": "", "title": "How the Development Process Works"}, {"link": "/document/6086533", "title": "An approach to source-code plagiarism detection and investigation using latent semantic analysis"}, {"link": "", "title": "Release management within open source projects"}, {"link": "", "title": "Linux Foundation"}, {"link": "", "title": "Linux Foundation"}, {"link": "", "title": "A method for comparing two hierarchical clusterings"}, {"link": "", "title": "Continuously mining distributed version control systems: an empirical study of how Linux uses Git"}, {"link": "", "title": "Global software engineering: The future of socio-technical coordination"}, {"link": "", "title": "Motivation of software developers in Open Source projects: an Internet-based survey of contributors to the Linux kernel"}, {"link": "", "title": "IEC 61508: Functional Safety of Electrical/Electronic/Programmable Electronic Safety-related Systems"}, {"link": "", "title": "IEC 62304: Medical device software - Software life cycle processes"}, {"link": "", "title": "ISO 26262: Road vehicles - Functional safety"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Will my patch make it? and how fast?: Case study on the linux kernel"}, {"link": "", "title": "Tracing back the history of commits in low-tech reviewing environments: a case study of the linux kernel"}, {"link": "", "title": "Classifying developers into core and peripheral: An empirical study on count and network metrics"}, {"link": "", "title": "Open Source Automation Development Lab"}, {"link": "", "title": "Open Dependable Power Computing Platform for Automated Driving"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "", "title": "Comparing and Merging Files"}, {"link": "", "title": "Open source engineering processes"}, {"link": "", "title": "Observing Custom Software Modifications: A Quantitative Approach of Tracking the Evolution of Patch Stacks"}, {"link": "", "title": "V-measure: A conditional entropy-based external cluster evaluation measure"}, {"link": "", "title": "Detecting code clones in binary executables"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Using Software Repositories to Investigate Socio-technical Congruence in Development Projects"}, {"link": "", "title": "Program development by stepwise refinement"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812060"}
{"ref": [{"link": "", "title": "What makes a good code example?: A study of programming q&a in stackoverflow"}, {"link": "", "title": "Crowd documentation: Exploring the coverage and the dynamics of api discussions on stack overflow"}, {"link": "", "title": "From query to usable code: An analysis of stack overflow code snippets"}, {"link": "", "title": "Paradise unplugged: Identifying barriers for female participation on stack overflow"}, {"link": "", "title": "Flask"}, {"link": "/document/8530031", "title": "Gistable: Evaluating the executability of python code snippets on github"}, {"link": "", "title": "Programmers' build errors: A case study (at google)"}, {"link": "/document/8115673", "title": "Tortoise: Interactive system configuration repair"}, {"link": "", "title": "Hirebuild: An automatic approach to history-driven repair of build scripts"}, {"link": "", "title": "Automated localization for unreproducible builds"}, {"link": "", "title": "Python Package Index"}, {"link": "", "title": "Libraries.io"}, {"link": "", "title": "Software ecosystem call graph for dependency management"}, {"link": "", "title": "PyHum"}, {"link": "/document/4400160", "title": "A model to understand the building and running inter-dependencies of software"}, {"link": "", "title": "Pep 508 - dependency specification for python software packages"}, {"link": "", "title": "Coding in-depth semistructured interviews"}, {"link": "", "title": ""}, {"link": "", "title": "Error installing pytorch vision"}, {"link": "", "title": "Slicing objects using system dependence graphs"}, {"link": "", "title": "System-dependence-graph-based slicing of programs with arbitrary interprocedural control flow"}, {"link": "/document/7962382", "title": "An empirical analysis of the docker container ecosystem on github"}, {"link": "", "title": "Hirebuild: An automatic approach to history-driven repair of build scripts"}, {"link": "", "title": "Autobash: Improving configuration management with operating system causality analysis"}, {"link": "/document/8330201", "title": "Automatically repairing dependency-related build breakage"}, {"link": "", "title": "Cimplifier: Automatically debloating containers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811897"}
{"ref": [{"link": "", "title": "Automatic software repair: A survey"}, {"link": "", "title": "Automatic software repair: A bibliography"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "/document/7675469", "title": "An empirical study on real bug fixes"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Bugs. jar: a large-scale, diverse dataset of real-world java bugs"}, {"link": "", "title": "Using a clone genealogy extractor for understanding and supporting evolution of code clones"}, {"link": "/document/4656397", "title": "An empirical study of function clones in open source software"}, {"link": "/document/4222578", "title": "Tracking code clones in evolving software"}, {"link": "/document/5070547", "title": "Do code clones matter?"}, {"link": "/document/1019480", "title": "Ccfinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/5970189", "title": "The nicad clone detector"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "/document/7190088", "title": "Lase: Locating and applying systematic edits by learning from examples"}, {"link": "/document/7675423", "title": "Does automated refactoring obviate systematic editing?"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "/document/1374310", "title": "Insights into system-wide code duplication"}, {"link": "/document/7476631", "title": "Bug replication in code clones: An empirical study"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/7194598", "title": "Relifix: Automated repair of software regressions"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "", "title": "Automatic inference of code transforms for patch generation"}, {"link": "", "title": "Context-aware patch generation for better automated program repair"}, {"link": "", "title": "Shaping program repair space with existing patches and similar code"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/7985681", "title": "Precise condition synthesis for program repair"}, {"link": "/document/8115676", "title": "Leveraging syntax-related code for automated program repair"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic repair of real bugs: An experience report on the defects4j dataset"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Zoltar: a spectrum-based fault localization tool"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "/document/8115675", "title": "Elixir: Effective object oriented program repair"}, {"link": "", "title": "Simple fast algorithms for the editing distance between trees and related problems"}, {"link": "/document/8115674", "title": "Contract-based program repair without the contracts"}, {"link": "", "title": "Automated software transplantation"}, {"link": "", "title": "Au-tomatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Repairing programs with semantic code search"}, {"link": "", "title": "History Driven Program Repair"}, {"link": "/document/5070531", "title": "Discovering and representing systematic code changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812131"}
{"ref": [{"link": "", "title": "How stereotypes impair women's careers in science"}, {"link": "", "title": "Gender, Representation and Online Participation: A Quantitative Study"}, {"link": "", "title": "Women and sciencecareers: leaky pipeline or gender filter?"}, {"link": "", "title": "Finding Gender \u2014 Inclusiveness Software Issues with GenderMag: A Field Investigation"}, {"link": "", "title": "Occupations in Information Technology"}, {"link": "", "title": "Persistence Is Cultural: Professional Socialization and the Reproduction of Sex Segregation"}, {"link": "", "title": "Men and Women of the Corporation: New Edition"}, {"link": "", "title": "Hackathons are for beginners"}, {"link": "", "title": "Major League Hacking"}, {"link": "", "title": "Digital Innovation: The Hackathon Phenomenon"}, {"link": "", "title": "From Personal Tool to Community Resource"}, {"link": "", "title": "Community-driven development for computational biology at Sprints, Hackathons and Codefests"}, {"link": "", "title": "Open innovation requires integrated competition-community ecosystems: Lessons learned from civic open innovation"}, {"link": "", "title": "Rediscovering the Social Group: A Self-Categorization Theory"}, {"link": "", "title": "Social identity and self-categorization processes in organizational contexts"}, {"link": "", "title": "Demographic Diversity in Decision-Making Groups: The Experiences of Women and People of Color"}, {"link": "", "title": "Searching for Common Threads: Understanding the Multiple Effects of Diversity in Organizational Groups"}, {"link": "", "title": "Organizational Behavior and Human Decision Processes Diversity mindsets and the performance of diverse teams"}, {"link": "", "title": "Brainstorming Beyond the Laboratory: Idea Generation Practices in Software Development Firms"}, {"link": "", "title": "Requirements Engineering: A Roadmap"}, {"link": "", "title": "Applied imagination: Principles and procedures of creative problem-solving"}, {"link": "", "title": "A Review of Brainstorming Research: Six Critical Issues for Inquiry"}, {"link": "", "title": "Productivity loss in brainstorming groups: A meta-analytic integration"}, {"link": "", "title": "Beyond brainstorming: Effects of different group procedures on selection of ideas and satisfaction with the process"}, {"link": "", "title": "From diversity to creativity: Stimulating group brainstorming with cultural differences and conversationally-retrieved pictures"}, {"link": "", "title": "Individualism-collectivism and group creativity"}, {"link": "", "title": "Persistence in brainstorming: Exploring stop rules in same-sex groups"}, {"link": "", "title": "An exploratory study of subordinates' perceptions of supervisory politics"}, {"link": "", "title": "The job satisfaction-job performance relationship: A qualitative and quantitative review"}, {"link": "", "title": "Toward an Understanding of Satisfaction with the Process and Outcomes of Teamwork"}, {"link": "", "title": "Measuring satisfaction in GSS meetings"}, {"link": "", "title": "Goal and process clarity: Specification of multiple constructs of role ambiguity and a structural equation model of their antecedents and consequences"}, {"link": "", "title": "Minority Dissent in Organizations: Factors Influencing Willingness to Dissent1"}, {"link": "", "title": "Knowledge sharing and shared understanding in virtual teams"}, {"link": "", "title": "Beyond simple demographic effects: The importance of relational demography in superior-subordinate dyads"}, {"link": "", "title": "Minority dissent and team innovation: the importance of participation in decision making"}, {"link": "", "title": "What type of collaboration helps? Psychological ownership, perceived learning and outcome quality of collaboration using Google Docs"}, {"link": "", "title": "Helping and voice extra-role behaviors: Evidence of construct and predictive validity"}, {"link": "", "title": "Psychological safety and learning behavior in work teams"}, {"link": "", "title": "High-Involvement Management"}, {"link": "", "title": "Self-disclosure and liking: a meta-analytic review"}, {"link": "", "title": "What are we talking about when we talk about no-voice procedures? On the psychology of the fair outcome effect"}, {"link": "", "title": "Impact of heterogeneity and collaborative conflict management style on the performance of synchronous global virtual teams"}, {"link": "", "title": "Student traits and attributes contributing to success in online courses: Evaluation of university online courses"}, {"link": "", "title": "The moderator-mediator variable distinction in social psychological research Conceptual, strategic, and statistical considerations"}, {"link": "", "title": "A general model for testing mediation and moderation effects"}, {"link": "", "title": "Collaboration engineering: foundations and opportunities: editorial to the special issue on the journal of the associationof information systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985658"}
{"ref": [{"link": "", "title": "The sky is not the limit: multitasking across github projects"}, {"link": "/document/7498605", "title": "How social and communication channels shape and challenge a participatory culture in software development"}, {"link": "", "title": "When email use gets out of control: Understanding the relationship between personality and email overload and their impact on burnout and work engagement"}, {"link": "", "title": "Digital stress over the life span: The effects of communication load and internet multitasking on perceived stress and psychological health impairments in a german probability sample"}, {"link": "", "title": "Project overload: An exploratory study of work and management in multi-project settings"}, {"link": "", "title": "What makes interruptions disruptive? a process-model account of the effects of the problem state bottleneck on task interruption and resumption"}, {"link": "", "title": "Resumption strategies for interrupted programming tasks"}, {"link": "", "title": "The problem state: a cognitive bottleneck in multitasking"}, {"link": "", "title": "Behavioral software engineering: A definition and systematic literature review"}, {"link": "", "title": "Time-zone and time-of-day variance in GitHub teams: an empirical method and study"}, {"link": "", "title": "A survey of social media use in software systems development"}, {"link": "", "title": "Social media for software engineering"}, {"link": "", "title": "The impact of social media on software engineering practices and tools"}, {"link": "/document/6224287", "title": "What does software engineering community microblog about?"}, {"link": "", "title": "Online pauses and silence: Chronemic expectancy violations in written computer-mediated communication"}, {"link": "", "title": "Social barriers faced by newcomers placing their first contribution in open source software projects"}, {"link": "", "title": "Social coding in github: transparency and collaboration in an open software repository"}, {"link": "/document/6357175", "title": "Leveraging transparency"}, {"link": "", "title": "Impression formation in online peer production: activity traces and personal profiles in github"}, {"link": "", "title": "Activity traces and signals in software developer recruitment and hiring"}, {"link": "", "title": "Adding sparkle to social coding: An empirical study of repository badges in the npm ecosystem"}, {"link": "/document/7180080", "title": "Ecosystems in github and a method for ecosystem identification using reference coupling"}, {"link": "/document/7985678", "title": "How do developers fix cross-project correlated bugs?: A case study on the GitHub scientific Python ecosystem"}, {"link": "", "title": "Within-ecosystem issue linking: a large-scale study of Rails"}, {"link": "", "title": "How to break an api: cost negotiation and community values in three software ecosystems"}, {"link": "", "title": "Executive control of cognitive processes in task switching"}, {"link": "", "title": "Task switching: A PDP model"}, {"link": "", "title": "The myth of multitasking"}, {"link": "", "title": "Knowledge work and work-related stress"}, {"link": "", "title": "Ambiguity, identity construction and stress amongst knowledge workers: developing collective coping strategies through negotiations of meaning"}, {"link": "", "title": "Thinking for a living: how to get better performances and results from knowledge workers."}, {"link": "", "title": "Challenges for research and prevention in relation to work and cardiovascular diseases"}, {"link": "", "title": "Designing organizations: an executive guide to strategy"}, {"link": "", "title": "The cost of interrupted work: more speed and stress"}, {"link": "", "title": "Job stressors and their effects on physical health, emotional health and job satisfaction in a university"}, {"link": "", "title": "Stess@ work: From measuring stress to its understanding, prediction and handling with personalized coaching"}, {"link": "", "title": "Selecting empirical methods for software engineering research"}, {"link": "/document/6224294", "title": "Ghtorrent: Github's data from a firehose"}, {"link": "/document/7180131", "title": "A data set for social diversity studies of github teams"}, {"link": "", "title": "Using thematic analysis in psychology"}, {"link": "", "title": "Querying mongodb programmatically"}, {"link": "", "title": "Sentiment analysis of commit comments in github: an empirical study"}, {"link": "", "title": "Security and emotion: sentiment analysis of security discussions on github"}, {"link": "", "title": "The jira repository dataset: Understanding social aspects of software development"}, {"link": "", "title": "On negative results when using sentiment analysis tools for software engineering research"}, {"link": "", "title": "The challenges of sentiment detection in the social programmer ecosystem"}, {"link": "/document/7962370", "title": "Leveraging automated sentiment analysis in software engineering"}, {"link": "/document/8115623", "title": "Senticr: A customized sentiment analysis tool for code review interactions"}, {"link": "", "title": "Sentiment polarity detection for software development"}, {"link": "", "title": "Sentiment strength detection for the social web"}, {"link": "", "title": "Focus-shifting patterns of oss developers and their congruence with call graphs"}, {"link": "", "title": "Mixed-effects modeling with crossed random effects for subjects and items"}, {"link": "", "title": "Applied multiple regression/correlation analysis for the behavioral sciences."}, {"link": "", "title": "lmertest package: Tests in linear mixed effects models"}, {"link": "", "title": "Data analysis using regression and multi-level/hierarchical models."}, {"link": "", "title": "A general and simple method for obtaining r2 from generalized linear mixed-effects models"}, {"link": "", "title": "Applied longitudinal data analysis: modeling change and event occurrence."}, {"link": "", "title": "Controlling the false discovery rate: a practical and powerful approach to multiple testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811968"}
{"ref": [{"link": "", "title": "OWASP Top 10"}, {"link": "/document/5070521", "title": "Automatic creation of SQL injection and Cross-Site Scripting attacks"}, {"link": "", "title": "A symbolic execution framework for JavaScript"}, {"link": "", "title": "Simple linear string constraints"}, {"link": "/document/6606611", "title": "Path sensitive static analysis of Web applications for remote code execution vulnerability detection"}, {"link": "", "title": "Automata-based symbolic string analysis for vulnerability detection"}, {"link": "", "title": "A DPLL(T) theory solver for a theory of strings and Regular Expressions"}, {"link": "", "title": "S3: A symbolic string solver for vulnerability detection in Web applications"}, {"link": "", "title": "Effective search-space pruning for solvers of string equations, Regular Expressions and length constraints"}, {"link": "", "title": "OWASP ESAPI"}, {"link": "", "title": "StringEscapeUtils"}, {"link": "", "title": "Ant Colony Optimization"}, {"link": "", "title": "ACO-Solver: a hybrid constraint solving tool"}, {"link": "", "title": "Stranger: An automata-based string analysis tool for PHP"}, {"link": "", "title": "StrSolve: solving string constraints lazily"}, {"link": "", "title": "PASS: String solving with parameterized array and interval automaton"}, {"link": "", "title": "Symbolic execution of programs with strings"}, {"link": "", "title": "JST: An automatic test generation tool for industrial Java applications with strings"}, {"link": "", "title": "Handbook of constraint programming"}, {"link": "", "title": "MAX-MIN Ant System"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "/document/57624", "title": "Automated software test data generation"}, {"link": "", "title": "A guided tour to approximate string matching"}, {"link": "", "title": "Search-based software test data generation for string data using program-specific search operators"}, {"link": "", "title": "It does matter how you normalise the branch distance in search based software testing"}, {"link": "/document/6200106", "title": "Search-based test input generation for string data types using the results of Web queries"}, {"link": "", "title": "Computer solutions of the traveling salesman problem"}, {"link": "", "title": "OWASP webgoat project"}, {"link": "", "title": "Apache Roller blogging application"}, {"link": "", "title": "A lightweight, open source, Java EE blogging tool"}, {"link": "", "title": "Finding security vulnerabilities in Java applications with static analysis"}, {"link": "", "title": "TAJ: Effective taint analysis of Web applications"}, {"link": "", "title": "Practical static analysis for inference of security-related program properties"}, {"link": "", "title": "ASIDE: IDE support for Web application security"}, {"link": "", "title": "AN-DROMEDA: Accurate and scalable security analysis of Web applications"}, {"link": "", "title": "Automated detection of client-state manipulation vulnerabilities"}, {"link": "", "title": "Regain search engine"}, {"link": "", "title": "A simple, open, Webhook based pubsub protocol & open source reference implementation"}, {"link": "", "title": "rest-auth-proxy"}, {"link": "/document/6763052", "title": "Assessing and comparing vulnerability detection tools for Web services: Benchmarking approach and examples"}, {"link": "", "title": "Security slicing for auditing XML, XPath, and SQL injection vulnerabilities"}, {"link": "", "title": "NIST: National vulnerability database"}, {"link": "", "title": "Evaluation of string constraint solvers in the context of symbolic execution"}, {"link": "", "title": "Solving complex path conditions through heuristic search on induced polytopes"}, {"link": "", "title": "HAMPI: A solver for string constraints"}, {"link": "", "title": "String analysis for Java and Android applications"}, {"link": "", "title": "Automata-based model counting for string constraints"}, {"link": "", "title": "Norn: An SMT solver for string constraints"}, {"link": "/document/4359474", "title": "WASP: Protecting web applications using positive tainting and syntax-aware evaluation"}, {"link": "", "title": "Type-based taint analysis for Java Web applications"}, {"link": "", "title": "Sound and precise analysis of Web applications for injection vulnerabilities"}, {"link": "", "title": "Static detection of Cross-Site Scripting vulnerabilities"}, {"link": "", "title": "Saner: Composing static and dynamic analysis to validate sanitization in Web applications"}, {"link": "", "title": "Optimal sanitization synthesis for Web application vulnerability repair"}, {"link": "", "title": "Patching vulnerabilities with sanitization synthesis"}, {"link": "", "title": "A memetic algorithm for whole test suite generation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985662"}
{"ref": [{"link": "/document/5609665", "title": "Index-based code clone detection: incremental, distributed, scalable"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "/document/4019578", "title": "Identifying refactorings from source-code changes"}, {"link": "/document/5328752", "title": "Shinobi: A tool for automatic code clone detection in the ide"}, {"link": "", "title": "Shinobi: A real-time code clone detection tool for software maintenance"}, {"link": "", "title": "Software clone detection: A systematic review"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Oreo: Detection of clones in the twilight zone"}, {"link": "/document/1610609", "title": "Cp-miner: finding copy-paste and related bugs in large-scale software code"}, {"link": "", "title": "Sourcer-ercc: Scaling code clone detection to big-code"}, {"link": "/document/7965249", "title": "Fast and flexible large-scale clone detection with cloneworks"}, {"link": "/document/4222572", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "Scalable detection of semantic clones"}, {"link": "/document/4556129", "title": "Nicad: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "", "title": "A dataset of clone references with gaps"}, {"link": "", "title": "On the detection of source code re-use"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "/document/7816515", "title": "Bigcloneeval: A clone detection tool evaluation framework with bigclonebench"}, {"link": "", "title": "Ccaligner: A token based large-gap clone detector"}, {"link": "/document/7332459", "title": "Evaluating clone detection tools with bigclonebench"}, {"link": "", "title": "Cloned and non-cloned java methods: a comparative study"}, {"link": "", "title": "Mondego/oreo-artifact: Oreo first release"}, {"link": "/document/6797067", "title": "Neural networks for fingerprint recognition"}, {"link": "/document/4812755", "title": "Incremental clone detection"}, {"link": "/document/6613857", "title": "Simcad: An extensible and faster clone detection tool for large scale software systems"}, {"link": "", "title": "Copy/paste detector (cpd)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811972"}
{"ref": [{"link": "/document/7778091", "title": "Policy Compression for Aircraft Collision Avoidance Systems"}, {"link": "/document/6868045", "title": "Early Diagnosis of Alzheimer's Disease with Deep Learning"}, {"link": "/document/7410669", "title": "Deepdriving: Learning Affordance for Direct Perception in Autonomous Driving"}, {"link": "", "title": "Skip-Thought Vectors"}, {"link": "", "title": "Recurrent Neural Network that Generates Little Stories About Images"}, {"link": "", "title": "Uber Finds Deadly Accident Likely Caused by Software Set to Ignore Objects on Road"}, {"link": "", "title": "Taryn Southern's new album is produced entirely by AI"}, {"link": "", "title": "Keras"}, {"link": "", "title": "TensorFlow: a System for Large-Scale Machine Learning"}, {"link": "", "title": "Theano: Deep learning on GPUs with Python"}, {"link": "", "title": "CNTK: Microsoft's Open-Source Deep-Learning Toolkit"}, {"link": "", "title": "The Data Incubator"}, {"link": "", "title": "Phylogenetic Convolutional Neural Networks in Metagenomics"}, {"link": "", "title": "DeepCCI: End-to-End Deep Learning for Chemical-Chemical Interaction Prediction"}, {"link": "", "title": "Distributed Deep Learning Networks Among Institutions for Medical Imaging"}, {"link": "", "title": "Multi-Stage Diagnosis of Alzheimer's Disease with Incomplete Multimodal Data via Multi-Task Deep Learning"}, {"link": "", "title": "Forecasting Air Quality Time Series Using Deep Learning"}, {"link": "", "title": "Intrusion Detection Using Deep Neural Network"}, {"link": "", "title": "Deepxplore: Automated Whitebox Testing of Deep Learning Systems"}, {"link": "/document/8416388", "title": "Benchmarking Deep Learning Frameworks: Design Considerations, Metrics and Beyond"}, {"link": "", "title": "Intriguing Properties of Neural Networks"}, {"link": "/document/7298640", "title": "Deep Neural Networks are Easily Fooled: High Confidence Predictions for Unrecognizable Images"}, {"link": "", "title": "Adversarial Examples in the Physical World"}, {"link": "/document/7795300", "title": "Crafting Adversarial Input Sequences for Recurrent Neural Networks"}, {"link": "/document/8014906", "title": "Simple Black-Box Adversarial Attacks on Deep Neural Networks"}, {"link": "", "title": "ImageNet Large Scale Visual Recognition Challenge"}, {"link": "", "title": "Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"}, {"link": "", "title": "What every computer scientist should know about floating-point arithmetic"}, {"link": "/document/7995975", "title": "End-to-End Learning for Lane Keeping of Self-Driving Cars"}, {"link": "/document/726791", "title": "Gradient-Based Learning Applied to Document Recognition"}, {"link": "", "title": "Thai Handwriting Number"}, {"link": "", "title": "BetaGo: AlphaGo for the Masses"}, {"link": "", "title": "Anime Face Dataset"}, {"link": "", "title": "Cat vs. Dog Models"}, {"link": "", "title": "Dog Model"}, {"link": "", "title": "Model Weights File of Dog Project"}, {"link": "", "title": "Gender Model"}, {"link": "", "title": "Pokedex"}, {"link": "", "title": "TrafficSigns1 Model"}, {"link": "", "title": "TrafficSigns2 Model"}, {"link": "", "title": "TrafficSigns3 Model"}, {"link": "", "title": "Identifying implementation bugs in machine learning based image classifiers using metamorphic testing"}, {"link": "", "title": "Multiple-implementation testing of supervised learning software"}, {"link": "", "title": "Testing probabilistic programming systems"}, {"link": "", "title": "DAWNBench: An End-to-End Deep Learning Benchmark and Competition"}, {"link": "/document/7979887", "title": "Benchmarking State-of-the-Art Deep Learning Software Tools"}, {"link": "", "title": "A Comparative Study of Deep Learning Models for Medical Image Classification"}, {"link": "/document/7980078", "title": "Evaluation of Deep Learning Frameworks Over Different HPC Architectures"}, {"link": "/document/8355444", "title": "A Comparative Study of Open Source Deep Learning Frameworks"}, {"link": "", "title": "Feature-Guided Black-Box Safety Testing of Deep Neural Networks"}, {"link": "", "title": "Reluplex: An Efficient SMT Solver for Verifying Deep Neural Networks"}, {"link": "", "title": "Safety Verification of Deep Neural Networks"}, {"link": "", "title": "DeepTest: Automated Testing of Deep-neural-network-driven Autonomous Cars"}, {"link": "", "title": "Deepgauge: Multi-granularity testing criteria for deep learning systems"}, {"link": "", "title": "AI 2: Safety and Robustness Certification of Neural Networks with Abstract Interpretation"}, {"link": "", "title": "Differential Testing for Software"}, {"link": "", "title": "Finding and Understanding Bugs in C Compilers"}, {"link": "/document/1319081", "title": "Random Program Generator for Java JIT Compiler Test System"}, {"link": "", "title": "Practical Testing of a C99 Compiler Using Output Comparison"}, {"link": "", "title": "Compiler Validation via Equivalence Modulo Inputs"}, {"link": "/document/8115644", "title": "Automated Cross-platform Inconsistency Detection for Mobile Apps"}, {"link": "/document/7381838", "title": "Detecting Inconsistencies in Multi-platform Mobile Apps"}, {"link": "/document/5609723", "title": "WEBDIFF: Automated Identification of Cross-browser Issues in Web Applications"}, {"link": "", "title": "Detecting Cross-browser Issues in Web Applications"}, {"link": "/document/6200112", "title": "CrossCheck: Combining Crawling and Differencing to Better Detect Cross-browser Incompatibilities in Web Applications"}, {"link": "", "title": "X-PERT: a Web Application Testing Tool for Cross-Browser Inconsistency Detection"}, {"link": "", "title": "On the Correctness of Electronic Documents: Studying, Finding, and Localizing Inconsistency Bugs in PDF Readers and Files"}, {"link": "/document/7985698", "title": "Evaluating and Improving Fault Localization"}, {"link": "", "title": "Empirical Evaluation of the Tarantula Automatic Fault-Localization Technique"}, {"link": "", "title": "A Model for Spectra-based Software Diagnosis"}, {"link": "/document/6823877", "title": "Ask the Mutants: Mutating Faulty Programs for Fault Localization"}, {"link": "", "title": "Metallaxis-FL: Mutation-based Fault Localization"}, {"link": "/document/988498", "title": "Simplifying and Isolating Failure-Inducing Input"}, {"link": "", "title": "HDD: Hierarchical Delta Debugging"}, {"link": "", "title": "Modernizing Hierarchical Delta Debugging"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812095"}
{"ref": [{"link": "", "title": "Automation showdown: IFTTT vs Zapier vs Microsoft Flow"}, {"link": "", "title": "Mozilla's new Things Gateway is an open home for your smart devices"}, {"link": "", "title": "SmartThings automates your house via sensors, app"}, {"link": "", "title": "openHAB"}, {"link": "", "title": "Home Assistant"}, {"link": "/document/7979852", "title": "Ripple: Home automation for research data management"}, {"link": "", "title": "Trigger-action programming in the wild: An analysis of 200,000 IFTTT recipes"}, {"link": "", "title": "An empirical characterization of IFTTT: Ecosystem, usage, and performance"}, {"link": "", "title": "Practical trigger-action programming in the smart home"}, {"link": "", "title": "Supporting mental model accuracy in trigger-action programming"}, {"link": "", "title": "Locked or not?: Mental models of IoT feature interaction"}, {"link": "", "title": "Buildingrules: A trigger-action based system to manage complex commercial buildings"}, {"link": "", "title": "Exploring end user programming needs in home automation"}, {"link": "", "title": "How users interpret bugs in trigger-action programming"}, {"link": "", "title": "Fear and logging in the Internet of Things"}, {"link": "", "title": "Some recipes can do more than spoil your appetite: Analyzing the security and privacy risks of IFTTT recipes"}, {"link": "", "title": "PSPWizard: machine-assisted definition of temporal logical properties with specification patterns"}, {"link": "", "title": "Solving sequential conditions by finite-state strategies"}, {"link": "", "title": "Synthesis of reactive (1) designs"}, {"link": "/document/6606605", "title": "Requirements modelling by synthesis of deontic input-output automata"}, {"link": "", "title": "Systematically debugging IoT control system correctness for building automation"}, {"link": "", "title": "Systematically ensuring the confidence of real-time home automation IoT systems"}, {"link": "", "title": "Automatic trigger generation for rule-based smart homes"}, {"link": "", "title": "SOTERIA: Automated IoT safety and security analysis"}, {"link": "", "title": "Automated goal operationalisation based on interpolation and SAT solving"}, {"link": "", "title": "Latent attention for if-then program synthesis"}, {"link": "", "title": "Language to code: Learning semantic parsers for if-this-then-that recipes"}, {"link": "", "title": "Instructablecrowd: Creating if-then rules via conversations with the crowd"}, {"link": "", "title": "User experience in do-it-yourself-style smart homes"}, {"link": "", "title": "Decentralized action integrity for trigger-action IoT platforms"}, {"link": "", "title": "IFTTT competitor Stringify gets a major update"}, {"link": "", "title": "IFTTT vs. Zapier: A comparative study of trigger-action programming frameworks"}, {"link": "", "title": "Principles of model checking"}, {"link": "", "title": "Algorithmic program synthesis: Introduction"}, {"link": "", "title": "Capabilities reference"}, {"link": "", "title": "Simple on-the-fly automatic verification of linear temporal logic"}, {"link": "", "title": "Spot 2.0a framework for ltl and \u03c9-automata manipulation"}, {"link": "", "title": "Specifying real-time properties with metric temporal logic"}, {"link": "", "title": "A theory of timed automata"}, {"link": "", "title": "Personalization of context-dependent applications through trigger-action rules"}, {"link": "", "title": "GRAIL/KAOS: An environment for goal-driven requirements engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811900"}
{"ref": [{"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "", "title": "Code coverage for suite evaluation by developers"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "/document/1703390", "title": "Using mutation analysis for assessing and comparing testing coverage criteria"}, {"link": "", "title": "Further empirical studies of test effectiveness"}, {"link": "", "title": "Symbolic execution for software testing: Three decades later"}, {"link": "", "title": "Achievements, open problems and challenges for search based software testing (keynote)"}, {"link": "/document/6019060", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "An empirical evaluation of the first and second order mutation testing strategies"}, {"link": "", "title": "RTCA DO178-B Software considerations in airborne systems and equipment certification"}, {"link": "", "title": "The software testing standard - how you can use it"}, {"link": "", "title": "Corebench: studying complexity of regression errors"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automated test data generation for coverage: Haven't we solved this problem yet?"}, {"link": "", "title": "An orchestrated survey of methodologies for automated software test case generation"}, {"link": "/document/855537", "title": "Using simulation for assessing the real impact of test-coverage on defect-coverage"}, {"link": "", "title": "The influence of size and coverage on test suite effectiveness"}, {"link": "", "title": "Guidelines for coverage-based comparisons of non-adequate test suites"}, {"link": "", "title": "Software unit test coverage and adequacy"}, {"link": "/document/6312836", "title": "Toward a theory of test data selection"}, {"link": "", "title": "Software testing research Achievements, challenges, dreams"}, {"link": "", "title": "An experimental comparison of the effectiveness of the all-uses and all-edges adequacy criteria"}, {"link": "/document/238581", "title": "An experimental comparison of the effectiveness of branch testing and data flow testing"}, {"link": "", "title": "An experimental evaluation of data flow and mutation testing"}, {"link": "", "title": "All-uses vs mutation testing: An experimental comparison of effectiveness"}, {"link": "", "title": "An experimental comparison of four unit test criteria: Mutation, edge-pair, all-uses and prime path coverage"}, {"link": "", "title": "On the number and nature of faults found by random testing"}, {"link": "", "title": "Is Branch Coverage a Good Measure of Testing Effectiveness?"}, {"link": "", "title": "Comparing multi-point stride coverage and dataflow coverage"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Software Fault Injection: Inoculating Programs Against Errors"}, {"link": "", "title": "Introduction to software testing"}, {"link": "", "title": "An analysis of the relationship between conditional entropy and failed error propagation in software testing"}, {"link": "", "title": "Investigations of the software testing coupling effect"}, {"link": "/document/7927962", "title": "The theory of composite faults"}, {"link": "", "title": "Shadow of a doubt: testing for divergences between software versions"}, {"link": "/document/296778", "title": "Experiments of the effectiveness of dataflow- and controlflow-based test adequacy criteria"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Differential testing: a new approach to change detection"}, {"link": "", "title": "Search-based system testing: high coverage, no false alarms"}, {"link": "", "title": "B-refactoring: Automatic test code refactoring to improve dynamic analysis"}, {"link": "", "title": "Cause reduction: delta debugging, even without bugs"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "Frama-c: A software analysis perspective"}, {"link": "", "title": "Automatically performing weak mutation with the aid of symbolic execution, concolic testing and search-based testing"}, {"link": "", "title": "Mutation based test case generation via a path selection strategy"}, {"link": "", "title": "Sound and quasi-complete detection of infeasible test requirements"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of a simple, fast and effective equivalent mutant detection technique"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}, {"link": "", "title": "A Critique and Improvement of the CL Common Language Effect Size Statistics of McGraw and Wong"}, {"link": "", "title": "Metallaxis-fl: mutation-based fault localization"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "/document/6693070", "title": "Operator-based and random mutant selection: Better together"}, {"link": "", "title": "Threats to the validity of mutation-based test assessment"}, {"link": "", "title": "What makes killing a mutant hard"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7985697"}
{"ref": [{"link": "/document/947100", "title": "Agile software development: The business of innovation"}, {"link": "", "title": "Amazons's technical evolution"}, {"link": "", "title": "Keynote at Amazon Re: Invent"}, {"link": "", "title": "Climbing the \u201cstairway to heaven\u201d \u2013 a multiple-case study exploring barriers in the transition from agile development towards continuous deployment of software"}, {"link": "", "title": "Experimentation Matters: Unlocking the Potential of New Technologies for Innovation"}, {"link": "", "title": "Online experimentation at Microsoft"}, {"link": "", "title": "1st International Workshop on Rapid Continuous Software Engineering, RCoSE 2014"}, {"link": "", "title": "Continuous software engineering and beyond: trends and challenges"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203144"}
{"ref": [{"link": "/document/1357891", "title": "Metrics are fitness functions too"}, {"link": "", "title": "Search based software engineering"}, {"link": "", "title": "Search-based software test data generation: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203148"}
{"ref": [{"link": "", "title": "Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection"}, {"link": "/document/6686139", "title": "Candidate indistinguishability obfuscation and functional encryption for all circuits"}, {"link": "", "title": "Multimedia security technologies for digital rights management"}, {"link": "", "title": "White-box cryptography: hiding keys in software"}, {"link": "", "title": "C.E.: Hindering Reverse Engineering: Thinking Outside the Box"}, {"link": "", "title": "Feedback-Driven Binary Code Diversification"}, {"link": "/document/4529369", "title": "Application-Oriented Trust in Distributed Computing"}, {"link": "/document/5720710", "title": "Guest Editors' Introduction: Software Protection"}, {"link": "", "title": "EU FP7 ASPIRE project (Advanced Software Protection: Integration, Research and Exploitation)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203154"}
{"ref": [{"link": "/document/910904", "title": "Weaving together requirements and architectures"}, {"link": "", "title": "Views on software engineering from the twin peaks of requirements and architecture"}, {"link": "", "title": "Towards bridging the twin peaks of requirements and architecture"}, {"link": "", "title": "8th Annual State of Agile Survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203156"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203129"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203137"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203143"}
{"ref": [{"link": "", "title": "Profiling systems using the defining characteristics of systems of systems (SoS)"}, {"link": "", "title": "Office of the Deputy Under Secretary of Defense for Acquisition and Technology, Systems and Software Engineering. Systems Engineering Guide for Systems of Systems, Version 1.0"}, {"link": "", "title": "Architecting principles for systems-of-systems"}, {"link": "", "title": "Proceedings of the first international workshop on software engineering for systems-of-systems"}, {"link": "", "title": "Proceedings of the second international workshop on software engineering for systems-of-systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203153"}
{"ref": [{"link": "", "title": "Directive 95/46/EC of the European Parliament and of Council. Official Journal of the European Union, L281/31"}, {"link": "", "title": "Health information technology for economic and clinical health (hitech) act"}, {"link": "", "title": "Health Insurance Portability and Accountability Act (HIPAA)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203155"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453097"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453159"}
{"ref": [{"link": "", "title": "Bounded model checking"}, {"link": "", "title": "Symbolic model checking with partitioned transition relations"}, {"link": "/document/113767", "title": "Symbolic model checking: 10 20 states and beyond"}, {"link": "", "title": "Progress on the state explosion problem in model checking"}, {"link": "", "title": "Cartesian partial-order reduction"}, {"link": "", "title": "A family of abstract interpretations for static analysis of concurrent higher-order programs"}, {"link": "", "title": "Ten years of partial order reduction"}, {"link": "", "title": "Static analysis of concurrent constructs in higherorder programs"}, {"link": "", "title": "Abstracting abstract machines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203086"}
{"ref": [{"link": "", "title": "Variability modeling and resolution in component-based robotics systems"}, {"link": "", "title": "Modeling and Reusing Robotic Software Architectures: the HyperFlex toolchain"}, {"link": "", "title": "Feature-oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "Stability and control of a quadrocopter despite the complete loss of one, two or three propellers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203090"}
{"ref": [{"link": "", "title": "IEEE Std 610.12-1990"}, {"link": "", "title": "Group Techniques for Program Planning: A Guide to Nominal Group and Delphi Processes"}, {"link": "", "title": "Peopleware: Productive Projects and Teams"}, {"link": "", "title": "Heuristic Decision Making"}, {"link": "", "title": "The heuristics and biases approach to judgment under uncertainty"}, {"link": "", "title": "A Framework and Methodology for Studying the Causes of Software Errors in Programming Systems"}, {"link": "", "title": "To err is human: Building a safer health system. A report of the committee on quality health care"}, {"link": "/document/731236", "title": "Experimenting with error abstraction in requirements documents"}, {"link": "", "title": "Errors in Medicine"}, {"link": "", "title": "Human error and the problem of causality in analysis of accidents"}, {"link": "", "title": "Managing the Risks of Organizational Accidents"}, {"link": "", "title": "Introduction to Humans in Engineered Systems"}, {"link": "", "title": "Systems, Man and Cybernetics"}, {"link": "", "title": "Using error abstraction and classification to improve requirement quality: conclusions from a family of four empirical studies"}, {"link": "", "title": "A systematic literature review to identify and classify software requirement errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203157"}
{"ref": [{"link": "", "title": "Privilege escalation attacks on android"}, {"link": "", "title": "Covert: Compositional analysis of android inter-app permission leakage"}, {"link": "", "title": "Analyzing interapplication communication in android"}, {"link": "", "title": "Inter-procedural data-flow analysis with ifds/ide and soot"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Pscout: Analyzing the android permission specification"}, {"link": "", "title": "Alloy: a lightweight object modelling notation"}, {"link": "/document/6606569", "title": "Aluminum: Principled scenario exploration through minimality"}, {"link": "", "title": "Javafx-the rich client platform"}, {"link": "", "title": "Android debug bridge"}, {"link": "", "title": "Covert website"}, {"link": "", "title": "Effective Inter-Component Communication Mapping in Android with Epicc: An Essential Step Towards Holistic Security Analysis"}, {"link": "", "title": "Chex: statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Android taint flow analysis for app sets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203053"}
{"ref": [{"link": "", "title": "Lightweight Transformation and Fact Extraction with the srcML Toolkit"}, {"link": "", "title": "srcML: An Infrastructure for the Exploration, Analysis, and Manipulation of Source Code"}, {"link": "/document/1199197", "title": "An XML-Based Lightweight C++ Fact Extractor"}, {"link": "/document/5609719", "title": "A Lightweight Transformational Approach to Support Large Scale Adaptive Changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203124"}
{"ref": [{"link": "", "title": "MAPP: The Berkeley Model and Algorithm Prototyping Platform"}, {"link": "", "title": "Private communication"}, {"link": "", "title": "Implementation of algorithms for the periodic-steady-state analysis of nonlinear circuits"}, {"link": "", "title": "SPICE2: a computer program to simulate semiconductor circuits"}, {"link": "", "title": "Analysis of Performance and Convergence Issues for Circuit Simulation"}, {"link": "", "title": "Numerical simulation and modelling of electronic and biochemical systems"}, {"link": "/document/1084794", "title": "Computation of the periodic steady-state response of nonlinear networks by extrapolation methods"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203088"}
{"ref": [{"link": "", "title": "Toward an assessment of software development risk"}, {"link": "", "title": "Portfolio approach to information systems"}, {"link": "", "title": "Top ten lists of software project risks: Evidence from the literature survey"}, {"link": "", "title": "Software risk management: principles and practices"}, {"link": "", "title": "Understanding software project risk: a cluster analysis"}, {"link": "", "title": "Taxonomy-based risk identification"}, {"link": "", "title": "Analyzing project exposure and risk using PERIL"}, {"link": "", "title": "Oracle, Oracle Products"}, {"link": "", "title": "Improved multilabel classification with neural networks"}, {"link": "/document/1683770", "title": "Multi-label neural networks with applications to functional genomics and text categorization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203092"}
{"ref": [{"link": "", "title": "Brian Randell, and Carl Landwehr. Basic concepts and taxonomy of dependable and secure computing"}, {"link": "", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "What is a software fault, and why does it matter?"}, {"link": "", "title": "Specification-based program repair using sat"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Differential assertion checking"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "", "title": "Modular and verified automatic program repair"}, {"link": "", "title": "Verification modulo versions: towards usable verification"}, {"link": "", "title": "On faults and faulty programs"}, {"link": "", "title": "A critical review of automatic patch generation learned from human-written patches: essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Automated fixing of programs with contracts"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203020"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "HP LoadRunner software"}, {"link": "", "title": "Autonomic load-testing framework"}, {"link": "", "title": "Software System Testing and Quality Assurance"}, {"link": "", "title": "Nasdaq's Blow-by-Blow on What Happened to Facebook"}, {"link": "/document/6227197", "title": "Automatically finding performance problems with feedback-directed learning software testing"}, {"link": "", "title": "Automatic detection of performance deviations in the load testing of large scale systems"}, {"link": "", "title": "Obama Admits Web Site Flaws on Health Law"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "", "title": "Continuous validation of load test suites"}, {"link": "", "title": "Who really cares if the program crashes?"}, {"link": "", "title": "Compositional load test generation for software pipelines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203126"}
{"ref": [{"link": "", "title": "Big data value strategic research and innovation agenda (SRIA)"}, {"link": "", "title": "Software engineering: Key enabler for innovation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203130"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194555"}
{"ref": [{"link": "", "title": "Spring Loaded"}, {"link": "", "title": "The Android Platfrom"}, {"link": "", "title": "The Android Debug Bridge (ADB)"}, {"link": "", "title": "Apps-for-Android"}, {"link": "", "title": "My Tracks application"}, {"link": "", "title": "Dynamic update of Java applications-balancing change flexibility vs programming transparency. J. Softw. Maint. Evol."}, {"link": "", "title": "InstaReloader"}, {"link": "", "title": "A thousand years of productivity: the JRebel story"}, {"link": "", "title": "NanoHttpd OSS project hosted at Github"}, {"link": "", "title": "Software and Technology and Application Science Center"}, {"link": "", "title": "Unrestricted and safe dynamic code evolution for Java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203057"}
{"ref": [{"link": "", "title": "Parseweb: a programmer assistant for reusing open source code on the web"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Effective API navigation and reuse"}, {"link": "", "title": "Static specification mining using automata-based abstractions"}, {"link": "", "title": "Strathcona example recommendation tool"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Jungloid mining: Helping to navigate the api jungle"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Response time in man-computer conversational transactions"}, {"link": "", "title": "The information visualizer, an information workspace"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}, {"link": "", "title": "Large language models in machine translation"}, {"link": "", "title": "SRILM-an Extensible Language Modeling Toolkit"}, {"link": "", "title": "Faster and smaller n-gram language models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203061"}
{"ref": [{"link": "", "title": "Does distributed development affect software quality?: an empirical case study of windows vista"}, {"link": "", "title": "Defect prediction from static code features: Current results, limitations, new approaches"}, {"link": "", "title": "Where the bugs are"}, {"link": "", "title": "AI-based software defect predictors: Applications and benefits in a case study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203128"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203132"}
{"ref": [{"link": "", "title": "Measuring API documentation on the web"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "What makes a good code example?: A study of programming Q&A in StackOverflow"}, {"link": "", "title": "Apache Maven"}, {"link": "", "title": "Enabling static analysis for partial Java programs"}, {"link": "", "title": "IBM Bluemix"}, {"link": "", "title": "Cloud Foundry"}, {"link": "", "title": "CodeHint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Runnable.com"}, {"link": "", "title": "JSFiddle"}, {"link": "", "title": "WWDC 2014 Session Videos-Swift Playgrounds"}, {"link": "", "title": "Test-driven development by example"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203024"}
{"ref": [{"link": "/document/6659015", "title": "Automatic generation of compact formal properties for effective error detection"}, {"link": "", "title": "Dynamic property mining for embedded software"}, {"link": "", "title": "From daikon to agitator: Lessons and challenges in building a commercial tool for developer testing"}, {"link": "", "title": "Mining temporal rules for software maintenance"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Javert: Fully automatic mining of general temporal properties from dynamic traces"}, {"link": "", "title": "Symbolic Mining of Temporal Specifications"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Automata-based pattern mining from imperfect traces"}, {"link": "", "title": "A pattern-based approach to parametric specification mining"}, {"link": "", "title": "Iodine: A tool to automatically infer dynamic invariants for hardware designs"}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "/document/1317467", "title": "A tool for writing and debugging algebraic specifications"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "", "title": "Texada"}, {"link": "", "title": "Mining exception-handling rules as sequence association rules"}, {"link": "", "title": "Process mining and verification of properties: An approach based on temporal logic"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "", "title": "erracotta: Mining temporal API rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203059"}
{"ref": [{"link": "", "title": "Android Monkey Recorder"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning"}, {"link": "", "title": "RERAN: Timing-and Touch-Sensitive Record and Replay for Android"}, {"link": "", "title": "Google. Android Debug Bridge"}, {"link": "", "title": "Google. UI/application exerciser monkey"}, {"link": "", "title": "Automated Testing with Targeted Event Sequence Generation"}, {"link": "", "title": "Real Challenges in Mobile App Development"}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "Automatic and Scalable Fault Detection for Mobile Applications"}, {"link": "", "title": "Experiences of System-Level Model-Based GUI Testing of an Android Application"}, {"link": "", "title": "Interpolated N-Grams for Model Based Testing"}, {"link": "", "title": "A Grey-box Approach for Automated GUI-Model Generation of Mobile Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203063"}
{"ref": [{"link": "", "title": "The situational factors that affect the software development process: Towards a comprehensive reference frame-work"}, {"link": "", "title": "What works for whom, where, when, and why?: on the role of context in empirical software engineering"}, {"link": "/document/5316010", "title": "Context in industrial software engineering research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203134"}
{"ref": [{"link": "", "title": "Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code"}, {"link": "", "title": "Kent State Plagiarism Flowchart"}, {"link": "", "title": "Institutional models for adjudicating plagiarism in the United States"}, {"link": "", "title": "Towards a definition of source-code plagiarism. Education"}, {"link": "", "title": "Cloze tests may be quick, but are they dirty? Development and preliminary validation of a cloze test of reading comprehension"}, {"link": "", "title": "Plagiarism: A good practice guide"}, {"link": "", "title": "SIGSCE Discussion Board"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202975"}
{"ref": [{"link": "", "title": "Pair Programming Illuminated"}, {"link": "", "title": "ollaborative discovery in a scientific domain"}, {"link": "", "title": "Collaborative discovery in a scientific domain"}, {"link": "", "title": "Social Psychology"}, {"link": "", "title": "Groups. Theory and Experience"}, {"link": "", "title": "The effectiveness of pair programming: A meta-analysis"}, {"link": "/document/5315997", "title": "An empirical study of the effects of personality in pair programming using the five-factor model"}, {"link": "", "title": "Activity patterns of pair programming"}, {"link": "", "title": "The social dynamics of pair programming"}, {"link": "", "title": "Industry-inspired guidelines improve students' pair programming communication"}, {"link": "", "title": "The costs and benefits of pair programming"}, {"link": "", "title": "Knowledge management through pair programming"}, {"link": "", "title": "The impact of pair programming on student performance, perception, and persistance"}, {"link": "", "title": "Basics of Qualitative Research. Grounded Theory Procedure and Techniques"}, {"link": "", "title": "A coding scheme development methodology using grounded theory for qualitative analysis of pair programming"}, {"link": "", "title": "Understanding Pair Programming: The Base Layer"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203098"}
{"ref": [{"link": "", "title": "Making trace monitors feasible"}, {"link": "", "title": "Rule systems for run-time monitoring: from Eagle to Rule R"}, {"link": "", "title": "A staged static program analysis to improve the performance of runtime monitoring"}, {"link": "", "title": "Finding programming errors earlier by evaluating runtime monitors ahead-of-time"}, {"link": "", "title": "Towards monitoring-oriented programming: A paradigm combining specification and implementation"}, {"link": "", "title": "Mining billions of AST nodes to study actual and potential usage of Java language features"}, {"link": "", "title": "Ekstazi"}, {"link": "", "title": "Symbolic mining of temporal specifications"}, {"link": "", "title": "Ekstazi: Lightweight test selection"}, {"link": "", "title": ""}, {"link": "", "title": "Towards categorizing and formalizing the JDK API"}, {"link": "", "title": "Verification modulo versions: Towards usable verification"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "RV-Monitor: Efficient parametric runtime verification with simultaneous properties"}, {"link": "/document/4639318", "title": "Efficient monitoring of parametric context-free patterns"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "Tracking source locations"}, {"link": "", "title": "Chianti: A tool for change impact analysis of Java programs"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "/document/1463230", "title": "Automatic mining of source code repositories to improve bug finding techniques"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Regression mutation testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203026"}
{"ref": [{"link": "", "title": "Version Control with Git"}, {"link": "", "title": "Version control concepts and best practices"}, {"link": "/document/714388", "title": "The Inscape environment"}, {"link": "", "title": "Mental models and software maintenance"}, {"link": "/document/6112738", "title": "How we refactor, and how we know it"}, {"link": "", "title": "Is it dangerous to use version control histories to study source code evolution?"}, {"link": "/document/6754345", "title": "How much do code repositories include peripheral modifications?"}, {"link": "", "title": "Hey! Are you committing tangled changes?"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "/document/6312940", "title": "A rational design process: How and why to fake it"}, {"link": "", "title": "Commit often, perfect later, publish once: Git best practices"}, {"link": "", "title": "What's wrong with Git?"}, {"link": "", "title": "Programmer information needs after memory failure"}, {"link": "", "title": "'The intellectual challenge of CSCW: The gap between social requirements and technical feasibility"}, {"link": "", "title": "Code Bubbles: A working set-based interface for code understanding and maintenance"}, {"link": "", "title": "Code Canvas: Zooming towards better development environments"}, {"link": "", "title": "The Patchworks code editor"}, {"link": "", "title": "JASPER: An Eclipse plug-in to facilitate software maintenance tasks"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Refactoring edit history of source code"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "The emergent structure of development tasks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203030"}
{"ref": [{"link": "", "title": "System of Systems-Innovations for 21st Century"}, {"link": "", "title": "Architecting principles for systems of systems"}, {"link": "", "title": "System of systems-the meaning of OF"}, {"link": "", "title": "Bibliometric and social network analysis of the sos field"}, {"link": "/document/1335465", "title": "Basic concepts and taxonomy of dependable and secure computing"}, {"link": "", "title": "A systematic review of system of systems architecture research"}, {"link": "", "title": "A semantic security framework for systems of systems"}, {"link": "", "title": "Security patterns in practice. Designing Secure Architectures Using Software Patterns, J. W. S. Ltd"}, {"link": "", "title": "System of systems security engineering"}, {"link": "", "title": "Formal methods for exchange policy specification"}, {"link": "/document/5966619", "title": "The challenges of secure and trustworthy service composition in the future internet"}, {"link": "", "title": "Interdependencies between critical infrastructures: Analyzing the risk of cascading effects"}, {"link": "", "title": "Security engineering in a system of systems environment"}, {"link": "", "title": "On Securing Communications among Federated Health Information Systems"}, {"link": "", "title": "System of systems approach for interdependent critical infrastructures"}, {"link": "/document/5929083", "title": "Agile development for system of systems: Cyber security integration into information repositories architecture"}, {"link": "", "title": "Using architecture patterns to architect and analyze systems of systems"}, {"link": "", "title": "Designing and operating through compromise: Architectural analysis of ckms for the advanced metering infrastructure"}, {"link": "", "title": "Critical infrastructure protection: A 21st century challenge"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203101"}
{"ref": [{"link": "", "title": "An empirical study of the impact of two antipatterns blob and spaghetti code, on program comprehension"}, {"link": "", "title": "Understanding the longevity of code smells: preliminary results of an explanatory survey"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "Improving software modularization via automated analysis of latent topics and dependencies"}, {"link": "/document/6684534", "title": "Methodbook: Recommending move method refactorings via relational topic models"}, {"link": "", "title": "An empirical study on the developers' perception of software coupling"}, {"link": "", "title": "Managing technical debt in softwarereliant systems"}, {"link": "", "title": "Investigating the evolution of bad smells in object-oriented code"}, {"link": "", "title": "The wycash portfolio management system"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change-and fault-proneness"}, {"link": "/document/6336722", "title": "Technical debt: From metaphor to theory and practice"}, {"link": "/document/6280547", "title": "A balancing act: What software practitioners have to say about technical debt"}, {"link": "/document/1510110", "title": "The conceptual cohesion of classes"}, {"link": "/document/4384505", "title": "Using the conceptual cohesion of classes for fault prediction in object-oriented systems"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "/document/1509293", "title": "Product metrics for automatic identification of \u201cbad smell\u201d design problems in java source-code"}, {"link": "", "title": "Numerical signatures of antipatterns: An approach based on b-splines"}, {"link": "", "title": "Do they really smell bad? a study on developers' perception of bad code smells"}, {"link": "/document/6963448", "title": "Mining version histories for detecting code smells"}, {"link": "", "title": "Using history information to improve design flaws detection"}, {"link": "", "title": "ch. Technical Debt: Showing the Way for Better Transfer of Empirical Results"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "", "title": "Detecting defects in object-oriented designs: using reading techniques to increase software quality"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "/document/1173068", "title": "Java quality assurance by detecting code smells"}, {"link": "", "title": "Automatic segmentation of method code into meaningful blocks to improve readability"}, {"link": "", "title": "Exploring the impact of inter-smell relations on software maintainability: An empirical study"}, {"link": "/document/6405287", "title": "Do code smells reflect important maintainability aspects?"}, {"link": "", "title": "Do developers care about code smells? an exploratory survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203065"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203140"}
{"ref": [{"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "", "title": "Identifying compiler options to minimize energy consumption for embedded platforms"}, {"link": "", "title": "On the energy consumption of design patterns"}, {"link": "", "title": "Energy consumption analysis of design patterns"}, {"link": "/document/6224257", "title": "Initial explorations on design pattern energy usage"}, {"link": "/document/6095515", "title": "Compiler-directed energy reduction using dynamic voltage scaling and voltage islands for embedded systems"}, {"link": "", "title": "Dynamic compilation framework with dvs for reducing energy consumption in embedded processors"}, {"link": "", "title": "Reducing noc energy consumption through compiler-directed channel voltage scaling"}, {"link": "", "title": "Compiler-directed frequency and voltage scaling for a multiple clock domain microarchitecture"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "", "title": "Making web applications more energy efficient for oled smartphones"}, {"link": "", "title": "Vince Huston. Hutson Design Patterns"}, {"link": "", "title": "clang: aC language family frontend for LLVM"}, {"link": "", "title": "Towards a Better Understanding of the Energy Consumption of Software Systems"}, {"link": "", "title": "Valgrind's Lackey"}, {"link": "", "title": "A Review of Design Pattern Mining Techniques"}, {"link": "/document/4015512", "title": "Design pattern detection using similarity scoring"}, {"link": "", "title": "Reverse engineering of design patterns from java source code"}, {"link": "/document/1240309", "title": "Spqr: Flexible automated design pattern extraction from source code"}, {"link": "", "title": "Mining design patterns from c++ source code"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203028"}
{"ref": [{"link": "", "title": "Challenges in software product line composition"}, {"link": "", "title": "Design and Use of Software Architectures: Adopting and Evolving a Product-line Approach"}, {"link": "", "title": "Variability issues in software product lines"}, {"link": "", "title": "Software product lines: practices and patterns"}, {"link": "/document/5070526", "title": "Reasoning about edits to feature models"}, {"link": "", "title": "A case study on the evolution of a component-based product line"}, {"link": "", "title": "Evaluating feature change impact on multi-product line configurations using partial information"}, {"link": "", "title": "Type-checking software product lines \u2013 a formal approach"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "/document/6178858", "title": "Mining kbuild to detect variability anomalies in linux"}, {"link": "", "title": "Dead or alive: Finding zombie features in the linux kernel"}, {"link": "", "title": "Coevolution of variability models and related artifacts: a case study from the linux kernel"}, {"link": "", "title": "42 variability bugs in the linux kernel: A qualitative analysis"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "", "title": "Coevolution of Variability Models and Related Artifacts: A Fresh Look at Evolution Patterns in the Linux Kernel"}, {"link": "", "title": "Extracting feature model changes from the linux kernel using FMDiff"}, {"link": "", "title": "Analyzing the linux kernel feature model changes using FMDiff"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203103"}
{"ref": [{"link": "/document/6606619", "title": "Cassandra: Proactive conflict minimization through optimized task scheduling"}, {"link": "/document/6520859", "title": "Early detection of collaboration conflicts and risks"}, {"link": "/document/4228648", "title": "Mining workspace updates in CVS"}, {"link": "", "title": "Semistructured merge: Rethinking merge in revision control systems"}, {"link": "/document/5928359", "title": "Palantir: Early detection of development conflicts arising from parallel code changes"}, {"link": "", "title": "Online appendix"}, {"link": "", "title": "Diversity in software engineering research"}, {"link": "", "title": "Structured merge with auto-tuning: Balancing precision and performance"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203067"}
{"ref": [{"link": "", "title": "Efficient purely-dynamic information flow analysis"}, {"link": "", "title": "Permissive dynamic information flow analysis"}, {"link": "", "title": "Exception handling for dynamic information flow control"}, {"link": "", "title": "Information flow control in WebKit's JavaScript bytecode"}, {"link": "", "title": "A lattice model of secure information flow"}, {"link": "", "title": "Cryptography and Data Security"}, {"link": "/document/6234468", "title": "Security policies and security models"}, {"link": "", "title": "JSFlow: Tracking information flow in JavaScript and its APIs"}, {"link": "/document/6266148", "title": "Information-flow security for a core of JavaScript"}, {"link": "", "title": "Information flow analysis for JavaScript"}, {"link": "/document/1159651", "title": "Language-based information-flow security"}, {"link": "", "title": "A sound type system for secure flow analysis"}, {"link": "", "title": "Programming Languages for Information Security"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203071"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203138"}
{"ref": [{"link": "", "title": "Software product Line Engineering: A Family-Based Software Development Process"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Software Product Line Engineering: Foundations, Principles, and Techniques"}, {"link": "", "title": "Cloud-based software product lines"}, {"link": "", "title": "Customization and 3D printing: a challenging playground for software product lines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203142"}
{"ref": [{"link": "", "title": "Design Notations for Secure Software: A Systematic Literature Review"}, {"link": "", "title": "Automated analysis of security-design models"}, {"link": "", "title": "Specification and Validation of Authorisation Constraints Using UML and OCL"}, {"link": "", "title": "A Rigorous Approach to Uncovering Security Policy Violations in UML Designs"}, {"link": "", "title": "UML specification of access control policies and their formal verification"}, {"link": "/document/1628972", "title": "Threat-Driven Modeling and Verification of Secure Software Using Aspect-Oriented Petri Nets"}, {"link": "", "title": "UML-BASED MODELING AND ANALYSIS OF SECURITY THREATS"}, {"link": "", "title": "An aspect-oriented methodology for designing secure applications"}, {"link": "", "title": "Constructing Authorization Systems Using Assurance Management Framework"}, {"link": "", "title": "Secure Systems Development with UML"}, {"link": "", "title": "Least privilege analysis in software architectures"}, {"link": "", "title": "Design patterns: elements of reusable object-oriented software"}, {"link": "", "title": "Security patterns in practice: designing secure architectures using software patterns"}, {"link": "", "title": "Securing distributed systems using patterns: A survey"}, {"link": "", "title": "Using FDAF to bridge the gap between enterprise and software architectures for security"}, {"link": "", "title": "A Formal Analysis Technique for Secure Software Architectures"}, {"link": "", "title": "Requirements engineering: from system goals to UML models to software specifications"}, {"link": "", "title": "PCI DSS v3.0"}, {"link": "", "title": "The Common Criteria: Security functional components"}, {"link": "", "title": "Sirius"}, {"link": "", "title": "The SPIN MODEL CHECKER-PRIMER AND REFERENCE MANUAL"}, {"link": "/document/6227155", "title": "Does organizing security patterns focus architectural choices?"}, {"link": "", "title": "Empirical evaluation of a privacy-focused threat modeling methodology"}, {"link": "", "title": "Do security patterns really help designers?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203105"}
{"ref": [{"link": "", "title": "Does every inspection need a meeting?"}, {"link": "/document/4604671", "title": "What Types of Defects Are Really Discovered in Code Reviews?"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "/document/6509369", "title": "CODEMINE: Building a Software Development Data Analytics Platform at Microsoft"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Impact of Peer Code Review on Peer Impression Formation: A Survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202946"}
{"ref": [{"link": "", "title": "Machine learning and software engineering"}, {"link": "", "title": "Deep sparse rectifier neural networks"}, {"link": "", "title": "On the importance of initialization and momentum in deep learning"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Natural language models for predicting programming comments"}, {"link": "", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Syntax errors just aren't natural: Improving error reporting with language models"}, {"link": "", "title": "Interpolated n-grams for model based testing"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "/document/83915", "title": "An information retrieval approach for automatically constructing software libraries"}, {"link": "", "title": "Assessing software libraries by browsing similar classes, functions and relationships"}, {"link": "", "title": "Supporting reuse by delivering task-relevant and personalized information"}, {"link": "", "title": "Applying information-retrieval methods to software reuse: A case study"}, {"link": "", "title": "Relevancy based semantic interoperation of reuse repositories"}, {"link": "", "title": "Unsupervised feature learning and deep learning: A review and new perspectives"}, {"link": "", "title": "Speech and Language Processing"}, {"link": "", "title": "Statistical Methods for Speech Recognition"}, {"link": "", "title": "Statistical Machine Translation"}, {"link": "", "title": "Hierarchical probabilistic neural network language model"}, {"link": "", "title": "A neural probabilistic language model"}, {"link": "", "title": "Generating text with recurrent neural networks"}, {"link": "", "title": "Deep neural network language models"}, {"link": "", "title": "Statistical language models based on neural networks"}, {"link": "", "title": "A maximum entropy approach to adaptive statistical language modeling"}, {"link": "", "title": "Learning deep architectures for AI"}, {"link": "", "title": "Deep learning of representations: Looking forward"}, {"link": "", "title": "The evolution and analysis of term-weighting schemes in information retrieval"}, {"link": "", "title": "Semantic hashing"}, {"link": "/document/1583599", "title": "Advancing candidate link generation for requirements tracing: The study of methods"}, {"link": "", "title": "Term-based enhancement factors for improving automated requirement trace retrieval"}, {"link": "", "title": "IR-based traceability recovery processes: An empirical comparison of \u2018one-shot\u2019 and incremental processes"}, {"link": "", "title": "IRiSS \u2013 a source code exploration tool"}, {"link": "", "title": "JIRiSS \u2013 an eclipse plug-in for source code exploration"}, {"link": "", "title": "3d visualization for concept location in source code"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "", "title": "Combining formal concept analysis with information retrieval for concept location in source code"}, {"link": "", "title": "Mudablue: An automatic categorization system for open source repositories"}, {"link": "/document/5069496", "title": "Using latent dirichlet allocation for automatic categorization of software"}, {"link": "", "title": "Categorizing software applications for maintenance"}, {"link": "", "title": "On using machine learning to automatically classify software applications into domain categories"}, {"link": "/document/1165125", "title": "Estimation of probabilities from sparse data for the language model component of a speech recognizer"}, {"link": "", "title": "Interpolated estimation of markov source parameters from sparse data"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203069"}
{"ref": [{"link": "", "title": "Scalable analysis of variable software"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Static analysis of variability in system software: The 90,000# ifdefs issue"}, {"link": "", "title": "42 variability bugs in the linux kernel: a qualitative analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203073"}
{"ref": [{"link": "/document/5353439", "title": "The physics of notations: Toward a scientific basis for constructing visual notations in software engineering"}, {"link": "", "title": "Domain-specific languages"}, {"link": "", "title": "Model-driven software engineering in practice"}, {"link": "", "title": "Model-driven development of mobile personal health care applications"}, {"link": "", "title": "User interface master detail pattern on android"}, {"link": "", "title": "Evaluation of xis-mobile, a domain specific language for mobile application development"}, {"link": "", "title": "Cross-platform model-driven development of mobile applications with md 2"}, {"link": "", "title": "Yet another dsl for cross-platforms mobile development"}, {"link": "", "title": "Model-driven development of cloud-connected mobile applications using dsls with xtext"}, {"link": "/document/6344487", "title": "A prototype for eud in touch-based mobile devices"}, {"link": "", "title": "Model-driven development of mobile applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203036"}
{"ref": [{"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "/document/5674060", "title": "How programmers debug, revisited: An information foraging theory perspective"}, {"link": "", "title": "A framework and methodology for studying the causes of software errors in programming systems"}, {"link": "", "title": ""}, {"link": "/document/842715", "title": "Spatial-domain image hiding using image differencing"}, {"link": "", "title": "What help do developers seek, when and how?"}, {"link": "", "title": "Sift implementation and optimization for multicore systems"}, {"link": "", "title": "Gpu-based video feature tracking and matching"}, {"link": "", "title": "Prefab: implementing advanced behaviors using pixel-based reverse engineering of interface structure"}, {"link": "", "title": "Waken: reverse engineering usage information and interface structure from software videos"}, {"link": "", "title": "Sikuli: using gui screenshots for search and automation"}, {"link": "", "title": "Computer vision: a modern approach. Prentice Hall Professional Technical Reference"}, {"link": "", "title": "Extracting usability information from user interface events"}, {"link": "", "title": "Tracking real-time user experience (true): a comprehensive instrumentation solution for complex systems"}, {"link": "", "title": "Automatically identifying targets users interact with during real world tasks"}, {"link": "", "title": "Associating the visual representation of user interfaces with their internal structures and metadata"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203040"}
{"ref": [{"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Mining apps for abnormal usage of sensitive data"}, {"link": "", "title": "Appguard: Enforcing user requirements on android apps"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Androidleaks: Automatically detecting potential privacy leaks in Android applications on a large scale"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "", "title": "Information Flow Control for Java \u2013 A Comprehensive Approach based on Path Conditions in Dependence Graphs"}, {"link": "", "title": "Asdroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction"}, {"link": "", "title": "Information flow analysis for javascript"}, {"link": "", "title": "Information flows as a permission mechanism"}, {"link": "", "title": "Soot \u2013 a java bytecode optimization framework"}, {"link": "", "title": "Aurasium: Practical policy enforcement for android applications"}, {"link": "", "title": "Leakminer: Detect information leakage on Android with static taint analysis"}, {"link": "/document/6234407", "title": "Dissecting Android malware: Characterization and evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203107"}
{"ref": [{"link": "", "title": "Source code archeology using logic program queries across version repositories"}, {"link": "", "title": "Reasoning over the evolution of source code using quantified regular path expressions"}, {"link": "", "title": "A history querying tool and its application to detect multi-version refactorings"}, {"link": "", "title": "Building development tools interactively using the ekeko meta-programming library"}, {"link": "", "title": "A logic foundation for a general-purpose history querying tool"}, {"link": "", "title": "Prevalence and maintenance of automated functional tests for web applications"}, {"link": "", "title": "Querying the history of software projects using qwalkeko"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Codequest: Scalable source code queries with dartalog"}, {"link": "", "title": "Finding application errors and security flaws using pql: a program query language"}, {"link": "", "title": "The SOUL tool suite for querying programs in symbiosis with Eclipse"}, {"link": "/document/4721180", "title": "Change analysis with evolizer and changedistiller"}, {"link": "", "title": "SCQL: A formal model and a query language for source control repositories"}, {"link": "", "title": "D-Praxis: A peer-to-peer collaborative model editing framework"}, {"link": "", "title": "Universal regular path queries"}, {"link": "", "title": "Change detection in hierarchically structured information"}, {"link": "", "title": "Using information fragments to answer the questions developers ask"}, {"link": "", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "The harmony platform"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203111"}
{"ref": [{"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Real-time collaborative coding in a web ide"}, {"link": "", "title": "Codetrail: Connecting source code and web resources"}, {"link": "", "title": "Hypersource: bridging the gap between source and code-related web sites"}, {"link": "", "title": "Microtask programming: Building software with a crowd"}, {"link": "", "title": "Design lessons from the fastest q&a site in the west"}, {"link": "", "title": "Codelets: linking interactive documentation and example code in the editor"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203075"}
{"ref": [{"link": "/document/4685680", "title": "Linking Requirements and Testing in Practice"}, {"link": "/document/5358848", "title": "Applying a Systematic Approach to Link Requirements and Testing: A Case Study"}, {"link": "", "title": "Challenges in Aligning Requirements Engineering and Verification in a Large-Scale Industrial Context"}, {"link": "", "title": "Challenges and Practices in Aligning Requirements with Verification and Validation: A Case Study of Six Companies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203146"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203150"}
{"ref": [{"link": "", "title": "An exploratory study of cloning in industrial software product lines"}, {"link": "", "title": "Recovering traceability between features and code in product variants"}, {"link": "", "title": "Enhancing clone-and-own with systematic reuse for developing software variants"}, {"link": "", "title": "Managing cloned variants: a framework and experience"}, {"link": "/document/6613490", "title": "Variability mining: Consistent semi-automatic detection of product-line features"}, {"link": "", "title": "Feature location in source code: a taxonomy and survey"}, {"link": "", "title": "Type checking annotation-based product lines"}, {"link": "", "title": "FeatureIDE: an extensible framework for feature-oriented software development"}, {"link": "", "title": "CIDE: decomposing legacy applications into features"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203038"}
{"ref": [{"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Modular and verified automatic program repair"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatic program repair by fixing contracts"}, {"link": "", "title": "Contracts in practice"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for$8 each"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "SemFix: program repair via semantic analysis"}, {"link": "", "title": "Evolutionary repair of faulty software"}, {"link": "", "title": "A critical review of \u201cautomatic patch generation learned from human-written patches"}, {"link": "/document/6100080", "title": "Code-based automated program fixing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203042"}
{"ref": [{"link": "", "title": "Software developers perceptions of productivity"}, {"link": "", "title": "Stress and multitasking in everyday college life: An empirical study of online activity"}, {"link": "", "title": "No task left behind? examining the nature of fragmented work"}, {"link": "", "title": "The alternating decision tree learning algorithm"}, {"link": "", "title": "Markov chain monte carlo"}, {"link": "", "title": "A modern approach. Citeseer"}, {"link": "", "title": "Soylent: A word processor with a crowd inside"}, {"link": "", "title": "Crowdforge: Crowdsourcing complex work"}, {"link": "", "title": "Microtask programming: Building software with a crowd"}, {"link": "", "title": "What makes a good bug report?"}, {"link": "", "title": "Classifying action items for semantic email"}, {"link": "", "title": "Task ontology for reuse of problem solving knowledge"}, {"link": "", "title": "A linguistic analysis of how people describe software problems"}, {"link": "", "title": "Promoting universal usability with multi-layer interface design"}, {"link": "", "title": "The computer user as toolsmith: The use, reuse and organization of computer-based tools"}, {"link": "", "title": "Dynamic versus static menus: an exploratory comparison"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203113"}
{"ref": [{"link": "", "title": "The Qualitas Corpus: A curated collection of Java code for empirical studies"}, {"link": "", "title": "Identification of design roles for the assessment of design quality in enterprise applications"}, {"link": "", "title": "Using history information to improve design flaws detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203077"}
{"ref": [{"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Statistically rigorous Java performance evaluation"}, {"link": "/document/6224281", "title": "A qualitative study on performance bugs"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203081"}
{"ref": [{"link": "", "title": "NSF, Cyber Physical Systems, NSF 14-542"}, {"link": "", "title": "EU H2020, Smart Cyber-Physical Systems ICT-01-2014"}, {"link": "", "title": "ECSEL Joint Undertaking"}, {"link": "", "title": "2014 ECSEL MultiAnnual Strategic Research and Innovation Agenda"}, {"link": "", "title": "Cyber-Physical Systems: A Perspective at the Centennial"}, {"link": "", "title": "Cyber Physical Systems: Design Challenges"}, {"link": "", "title": "Cyber-Physical Systems: A New Frontier"}, {"link": "", "title": "Desirable Advances in Cyber-Physical System Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203152"}
{"ref": [{"link": "/document/4375255", "title": "A software chasm: Software engineering and scientific computing"}, {"link": "/document/4222616", "title": "Software development environments for scientific and engineering software: A series of case studies"}, {"link": "", "title": "A scientist's nightmare: Software problem leads to five retractions"}, {"link": "", "title": "Chaste: Using agile programming techniques to develop computational biology software"}, {"link": "/document/5337646", "title": "Engineering the software for understanding climate change"}, {"link": "/document/1231463", "title": "Introducing agile development into bioinformatics: An experience report"}, {"link": "/document/6081842", "title": "What do we know about scientific software development's agile practices?"}, {"link": "/document/5069155", "title": "How do scientists develop and use scientific software?"}, {"link": "/document/5069163", "title": "Testing for trustworthiness in scientific software"}, {"link": "/document/5069157", "title": "Barely sufficient software engineering: 10 practices to improve your CSE software"}, {"link": "", "title": "Software Carpentry: Home page"}, {"link": "", "title": "An analysis of process characteristics for developing scientific software"}, {"link": "", "title": "Scientific software process improvement decisions: A proposed research strategy"}, {"link": "", "title": "Integrating scientific and software engineering expertise to support scientific software process improvement decisions"}, {"link": "", "title": "Grounded theory research: Procedures, canons, and evaluative criteria"}, {"link": "", "title": "Constructing grounded theory: A practical guide through qualitative analysis"}, {"link": "", "title": "A practitioner's guide to light weight software process assessment and improvement planning"}, {"link": "", "title": "CMMI for development, version 1.3.2010"}, {"link": "", "title": "Agility and Discipline Made Easy: Practices from OpenUP and RUP"}, {"link": "", "title": "Balancing agility and discipline: A guide for the perplexed"}, {"link": "", "title": "Narratives at work: Story telling as cooperative diagnostic activity"}, {"link": "", "title": "Competence in experts: The role of task characteristics"}, {"link": "", "title": "Conditions for intuitive expertise: A failure to disagree"}, {"link": "", "title": "A recognition-primed decision (RPD) model of rapid decision making"}, {"link": "", "title": "A survey of scientific software development"}, {"link": "", "title": "A survey of the practice of computational science"}, {"link": "", "title": "All Our Ideas: Home page"}, {"link": "", "title": "Wiki surveys: Open and quantifiable social data collection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203115"}
{"ref": [{"link": "", "title": "Performance troubleshooting in data centers: An annotated bibliography"}, {"link": "", "title": "Principal component analysis"}, {"link": "", "title": "Performance problems diagnosis in cloud computing systems by mining request trace logs"}, {"link": "", "title": "Diagnosing network-wide traffic anomalies"}, {"link": "", "title": "TraceBench: An open data set for trace-oriented monitoring"}, {"link": "", "title": "Hadoop"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203079"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Exploratory software testing: tips, tricks, tours, and techniques to guide test design. Pearson Education"}, {"link": "/document/6298893", "title": "The role of the tester's knowledge in exploratory software testing"}, {"link": "", "title": "Learning styles and exploratory testing"}, {"link": "", "title": "An empirical evaluation of the influence of human personality on exploratory software testing"}, {"link": "", "title": "Human computer interaction (hci)"}, {"link": "", "title": "Using thematic analysis in psychology"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203083"}
{"ref": [{"link": "", "title": "Reality is Broken"}, {"link": "", "title": "The Grasshopper: Games, Life and Utopia"}, {"link": "", "title": "For the Win"}, {"link": "/document/6693332", "title": "Stackoverflow and github: Associations between software development and crowdsourced knowledge"}, {"link": "", "title": "The Psychology of Computer Programming"}, {"link": "", "title": "Measuring programming quality and productivity"}, {"link": "", "title": "The Mythical Man-Month"}, {"link": "", "title": "Reflections on Behaviorism and Society"}, {"link": "", "title": "Punished by Rewards"}, {"link": "/document/6980226", "title": "Visualizing developer interactions"}, {"link": "", "title": "Object-Oriented Design Heuristics"}, {"link": "", "title": "A change-based approach to software evolution"}, {"link": "/document/6958415", "title": "Quantifying program comprehension with interaction data"}, {"link": "", "title": "Ludus opus proficit-a gamification framework for software engineering"}, {"link": "/document/1657944", "title": "How are java software developers using the eclipse IDE?"}, {"link": "", "title": "in bug: Visual analytics of bug reposito-ries"}, {"link": "", "title": "Seahawk: Stack overflow in the ide"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203011"}
{"ref": [{"link": "", "title": "Henshin: Advanced Concepts and Tools for In-place EMF Model Transformations"}, {"link": "", "title": "Applying Model Management to Classical Meta Data Problems"}, {"link": "", "title": "On the need for megamodels"}, {"link": "/document/4339252", "title": "Feature Diagrams and Logics: There and Back Again"}, {"link": "", "title": "Z3: An Efficient SMT Solver"}, {"link": "", "title": "Partial Models: A Position Paper"}, {"link": "/document/6227159", "title": "Partial Models: Towards Modeling and Reasoning with Uncertainty"}, {"link": "", "title": "Transformation of Models Containing Uncertainty"}, {"link": "", "title": "Eclipse Modeling Project"}, {"link": "/document/6912245", "title": "Supporting Early Decision-Making in the Presence of Uncertainty"}, {"link": "", "title": "MAV-Vis: a Notation for Model Uncertainty"}, {"link": "/document/5353439", "title": "The \u201cPhysics\u201d of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering"}, {"link": "", "title": "Insights from Expert Software Design Practice"}, {"link": "", "title": "An Eclipse-Based Tool Framework for Software Model Management"}, {"link": "", "title": "A Methodology for Verifying Refinements of Partial Models"}, {"link": "", "title": "Language Independent Refinement using Partial Modeling"}, {"link": "", "title": "EMF: Eclipse Modeling Framework"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203046"}
{"ref": [{"link": "", "title": "Build in the cloud"}, {"link": "", "title": "Ekstazi"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "A qualitative survey of regression testing practices"}, {"link": "", "title": "A systematic review on regression test selection techniques"}, {"link": "", "title": "Empirical evaluations of regression test selection techniques: a systematic review. In ESEM"}, {"link": "", "title": "Fabricate"}, {"link": "", "title": "An empirical evaluation and comparison of manual and automated test selection"}, {"link": "", "title": "Using automatic persistent memoization to facilitate data analysis scripting"}, {"link": "", "title": "Regression testing of database applications"}, {"link": "", "title": "Regression test selection for database applications"}, {"link": "", "title": "A technique for the selective revalidation of OO software"}, {"link": "", "title": "Class firewall, test order, and regression testing of object-oriented programs"}, {"link": "", "title": "Memoize"}, {"link": "", "title": "Regression testing in the presence of non-code changes"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "Improving class firewall regression test selection by removing the class firewall"}, {"link": "", "title": "Testing at the speed and scale of Google"}, {"link": "/document/1510137", "title": "A safe regression test selection technique for database-driven applications"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203050"}
{"ref": [{"link": "", "title": "OCSEGen: Open components and systems environment generator"}, {"link": "", "title": "Gen-eration of Library Models for Verification of Android Applications"}, {"link": "", "title": "Dynodroid: an input generation system for Android apps"}, {"link": "", "title": "Verifying Android applications using Java PathFinder"}, {"link": "", "title": "Execution and property specifications for JPF-android"}, {"link": "", "title": "Automated Generation of Model Classes for Java PathFinder"}, {"link": "", "title": "FlowDroid"}, {"link": "", "title": "SCanDroid: Automated Security Certification of Android Applications"}, {"link": "", "title": "TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones"}, {"link": "", "title": "A Study on the Evaluation of Unit Testing for Android Systems"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Testing android apps through symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203117"}
{"ref": [{"link": "", "title": "Agile Project Management"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203121"}
{"ref": [{"link": "", "title": "Spoken language understanding for natural interaction: The Siri experience"}, {"link": "/document/6777502", "title": "The road to natural conversational speech interfaces"}, {"link": "", "title": "The use of English as a programming language"}, {"link": "/document/4115597", "title": "ARMAR-III: An integrated humanoid platform for sensory-motor control"}, {"link": "", "title": "Programming in natural language: NLC as a prototype"}, {"link": "", "title": "Smartsynth: Synthesizing smartphone automation scripts from natural language"}, {"link": "", "title": "Pegasus: first steps toward a naturalistic programming language"}, {"link": "", "title": "Metafor: Visualizing Stories as Code"}, {"link": "", "title": "From requirements to uml models and back: how automatic processing of text can support requirements engineering"}, {"link": "", "title": "Deriving timelines from texts"}, {"link": "", "title": "Cycorp Inc., ResearchCyc"}, {"link": "", "title": "Wordnet: a lexical database for english"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203085"}
{"ref": [{"link": "", "title": "Ide 2.0: collective intelligence in software development"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Calcite: Completing code completion for constructors using crowds"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Improving code completion with program history"}, {"link": "", "title": "On the localness of software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203048"}
{"ref": [{"link": "", "title": "Cooperative expendable micro-slice servers (CEMS): low cost, low power servers for internet-scale services"}, {"link": "", "title": "Energy efficient utilization of resources in cloud computing systems"}, {"link": "", "title": "CloudSim: a toolkit for modeling and simulation of cloud computing environments and evaluation of resource provisioning algorithms"}, {"link": "", "title": "Performance of Cloud-Based Scalability and Load with an Automation Testing Tool in Virtual World"}, {"link": "", "title": "GreenCloud: a packet-level simulator of energy-aware cloud computing data centers"}, {"link": "", "title": "SoftArch/MTE: Generating Distributed System Test-beds from High-level Software Architecture Descriptions"}, {"link": "", "title": "Experimental Analysis of Task-based Energy Consumption in Cloud Computing Systems"}, {"link": "", "title": "Realistic Load Testing of Web Applications"}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203052"}
{"ref": [{"link": "", "title": "Exploring initial challenges for green software engineering: summary of the first GREENS workshop, at ICSE 2012"}, {"link": "/document/6489956", "title": "Energy oddities, part 2: Why green computing is odd"}, {"link": "", "title": "Power-efficient software"}, {"link": "", "title": "Framing sustainability as a software quality property"}, {"link": "/document/6171963", "title": "Measuring application software energy efficiency"}, {"link": "", "title": "Bootstrapping energy debugging on smartphones: A first look at energy bugs in mobile devices"}, {"link": "", "title": "Definition, implementation and validation of energy code smells: an exploratory study on an embedded system"}, {"link": "", "title": "Fast feedback cycles in empirical software engineering research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203119"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203123"}
{"ref": [{"link": "/document/6227159", "title": "Partial Models: Towards Modeling and Reasoning with Uncertainty"}, {"link": "", "title": "Grants-in-Aid for Scientific Research"}, {"link": "", "title": "CUTE: A Concolic Unit Testing Engine for C"}, {"link": "", "title": "Concurrency: State Models & Java Programs"}, {"link": "", "title": "Archface: A Contract Place Where Architectural Design and Code Meet Together"}, {"link": "", "title": "Abstraction-aware Verifying Compiler for Yet Another MDD"}, {"link": "", "title": "XVCL: A Mechanism for Handling Variants in Software Product Lines"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203087"}
{"ref": [{"link": "", "title": "Links: Web programming Without Tiers"}, {"link": "", "title": "Hop: a Language for Programming the Web 2.0"}, {"link": "", "title": "Ur: Statically-typed Metaprogramming with Type-level Record Computation"}, {"link": "", "title": "Static Consistency Checking of Web Applications with WebDSL"}, {"link": "", "title": "Towards Tierless Web Development Without Tierless Languages"}, {"link": "/document/5010248", "title": "Program slicing"}, {"link": "", "title": "An Open Implementation of Cloud Types for the Web"}, {"link": "", "title": "Cloud Types for Eventual Consistency"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203091"}
{"ref": [{"link": "", "title": "Cognionics 64-channel wireless EEG Headset"}, {"link": "", "title": "A 10-year perspective on software engineering self-adaptive systems (Keynote)"}, {"link": "", "title": "Architecture-based self-adaptation"}, {"link": "/document/6600847", "title": "A Speedy Hybrid BCI Spelling Approach Combining P300 and SSVEP"}, {"link": "", "title": "EPOC"}, {"link": "/document/6419714", "title": "The Future of Human-in-the-Loop Cyber-Physical Systems"}, {"link": "", "title": "Visibility of control in adaptive systems"}, {"link": "", "title": "IBM Smarter Planet Initiative, retrieved"}, {"link": "", "title": "Outline of a general theory of behavior and brain coordination"}, {"link": "/document/1160055", "title": "The Vision of Autonomic Computing"}, {"link": "/document/1642775", "title": "Brain-Computer Interfaces for 1-D and 2-D Cursor Control: Designs Using Volitional Control of the EEG Spectrum or Steady-State Visual Evoked Potentials"}, {"link": "", "title": "Evaluation of commercially available electrodes and gels for recording of slow EEG potentials: Clinical Neurophysiology"}, {"link": "", "title": "Brain Computer Interface and Neuroprosthetics"}, {"link": "", "title": "Software engineering for self-adaptive systems: A second research roadmap"}, {"link": "", "title": "Brain-Computer Interfacing: An Introduction"}, {"link": "", "title": "ReThink Medical Next Generation Wireless EEG, retrieved"}, {"link": "", "title": "A Review of P300, SSVEP, and Hybrid P300/SSVEP Brain-Computer Interface Systems: Brain-Computer Interface Systems \u2013 Recent Progress and Future Prospects"}, {"link": "", "title": "How about taking a low-cost, small, and wireless EEG for a walk?"}, {"link": "", "title": "Brainware: Synergizing software systems and neural inputs"}, {"link": "", "title": "Wearable Sensing"}, {"link": "", "title": "A CWT-based SSVEP Classification Method for Brain-Computer Interface System"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203015"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203158"}
{"ref": [{"link": "", "title": "Topology Aware Adaptive Security"}, {"link": "", "title": "En-gineering Topology Aware Adaptive Security: Preventing Requirements Violations at Runtime"}, {"link": "", "title": "A review of formalisms and analysis techniques for cyber-physical systems"}, {"link": "", "title": "The Space and Motion of Communicating Agents"}, {"link": "", "title": "Model checking"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203054"}
{"ref": [{"link": "", "title": "Deprecating the Observer Pattern"}, {"link": "", "title": "A survey on reactive programming"}, {"link": "", "title": "Flapjax: a programming language for Ajax applications"}, {"link": "", "title": ""}, {"link": "", "title": "Functional reactive animation"}, {"link": "", "title": "Embedding dynamic dataflow in a call-by-value language"}, {"link": "", "title": "Rescala: Bridging between object-oriented and functional style in reactive applications"}, {"link": "", "title": "Higher-order reactive programming with incremental lists"}, {"link": "", "title": "Programming Reactive Extensions and LINQ"}, {"link": "", "title": "Programming with implicit flows"}, {"link": "", "title": "We have a DREAM: Distributed reactive programming with consistency guarantees"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203125"}
{"ref": [{"link": "", "title": "Spark: a high-level synthesis framework for applying parallelizing compiler transformations"}, {"link": "", "title": "Translation validation"}, {"link": "", "title": "Translation validation for an optimizing compiler"}, {"link": "", "title": "Credible compilation"}, {"link": "", "title": "Validating high-level synthesis"}, {"link": "/document/6856295", "title": "Verification of code motion techniques using value propagation"}, {"link": "", "title": "Translation validation using path-based equivalence checking of petri net based models of programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203089"}
{"ref": [{"link": "", "title": "A survey of context modelling and reasoning techniques"}, {"link": "", "title": "Answer set programming at a glance"}, {"link": "", "title": "Modelling and using imperfect context information"}, {"link": "", "title": "SecuriTAS: a tool for engineering adaptive security"}, {"link": "", "title": "Engineering self-adaptive systems through feedback loops"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203093"}
{"ref": [{"link": "", "title": "Error invariants"}, {"link": "", "title": "Concolic fault abstraction"}, {"link": "", "title": "Vermeer tool web page"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "Vx86: x86 assembler simulated in C powered by automated theorem proving"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "An extensible sat-solver"}, {"link": "", "title": "Bug-Assist: Assisting fault localization in ANSI-C programs"}, {"link": "", "title": "What gives? a hybrid algorithm for error trace explanation"}, {"link": "", "title": "Automated error diagnosis using abductive inference"}, {"link": "", "title": "Explaining counterexamples using causality"}, {"link": "", "title": "Using unsatisfiable cores to debug multiple design errors"}, {"link": "", "title": "Improving the effectiveness of spectra-based fault localization using specifications"}, {"link": "", "title": "F3: Fault localization for field failures"}, {"link": "", "title": "Angelic debugging"}, {"link": "", "title": "Flow-sensitive fault localization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203056"}
{"ref": [{"link": "", "title": "River trail: A path to parallelism in javascript"}, {"link": "", "title": "Parallel Computers Two: Architecture, Programming and Algorithms"}, {"link": "/document/1232284", "title": "Polymetric views-a lightweight visual approach to reverse engineering"}, {"link": "", "title": "Firepile: Runtime compilation for gpus in scala"}, {"link": "", "title": "Data-parallel algorithms and data structures"}, {"link": "", "title": "Optimizing data structures in high-level programs: New directions for extensible compilers based on staging"}, {"link": "", "title": "A visual approach to investigating shared and global memory behavior of cuda kernels"}, {"link": "", "title": "OpenCL in Action"}, {"link": "", "title": "Composition and reuse with compiled domain-specific languages"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203060"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203127"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203131"}
{"ref": [{"link": "", "title": "Sando's homepage"}, {"link": "/document/1374321", "title": "An information retrieval approach to concept location in source code"}, {"link": "", "title": "Ncrunch's homepage"}, {"link": "", "title": "An experimental evaluation of continuous testing during development"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Codetrail's homepage"}, {"link": "", "title": "Codetrail's usage homepage"}, {"link": "", "title": "Crossing the chasm"}, {"link": "", "title": "Crossing the gap from imperative to functional programming through refactoring"}, {"link": "", "title": "Netbeans's homepage"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Tasktop's homepage"}, {"link": "", "title": "A few billion lines of code later: using static analysis to find bugs in the real world"}, {"link": "", "title": "Findbug"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202968"}
{"ref": [{"link": "", "title": "Reeducation to expand the software engineering workforce: successful industry/university collaborations (CMU/SEI-2002-SR-001)"}, {"link": "", "title": "Industrial input to the computing curriculum"}, {"link": "", "title": "Industry-university partnerships: the wave of the future?"}, {"link": "", "title": "Industry/university collaboration: closing the gap between industry and academia"}, {"link": "", "title": "Intdustry/university collaborations: different perspectives heighten mutual opportunities"}, {"link": "", "title": "Can industry and academia collaborate to meet the need for software engineers?"}, {"link": "", "title": "Characteristics of successful collaborations to produce educated software engineering professionals"}, {"link": "", "title": "Industry/university software engineering collaborations for the successful reeducation of non-software professionals"}, {"link": "", "title": "Software assurance curriculum project volume I: master of software assurance reference curriculum (CMU/SEI-2010-TR-005)"}, {"link": "/document/6754364", "title": "Software engineering education program for software professionals of high competency at DENSO"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202972"}
{"ref": [{"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "/document/1463233", "title": "Toward understanding the rhetoric of small source code changes"}, {"link": "", "title": "Mutant census: an empirical examination of the competent programmer hypothesis"}, {"link": "", "title": "Toward an understanding of bug fix patterns"}, {"link": "", "title": "Mining frequent bug-fix code changes"}, {"link": "", "title": "Are faults localizable"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Recrash: Making software failures reproducible by preserving object states"}, {"link": "", "title": "HAIARI: Raising risk awareness"}, {"link": "", "title": "An empirical study of bugs in software build systems"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "Fair and balanced?: Bias in bug-fix datasets"}, {"link": "", "title": "The missing links: Bugs and bug-fix commits"}, {"link": "", "title": "The discovery of grounded theory: Strategies for qualitative research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203095"}
{"ref": [{"link": "", "title": "Assurance Cases and Prescriptive Software Safety Certification: A Comparative Study"}, {"link": "", "title": "Software Safety: Where's the Evidence?"}, {"link": "", "title": "Evidence: Using Safety Cases in Industry and Health-care"}, {"link": "", "title": "Runtime Verification of Web Services for Interconnected Medical Devices"}, {"link": "", "title": "The Nimrod Review: An Independent Review into the Broader Issues surrounding the Loss of the RAF Nimrod MR2 Aircraft XV230 in Afghanistan in 2006"}, {"link": "", "title": "International Civil Aviation Organization (ICAO)"}, {"link": "", "title": "Leading Indicators of System Safety-Monitoring and Driving the Organizational Safety Potential"}, {"link": "", "title": "A New Approach to Creating Clear Safety Arguments"}, {"link": "", "title": "Querying Safety Cases"}, {"link": "/document/6092593", "title": "Towards Measurement of Confidence in Safety Cases"}, {"link": "", "title": "AdvoCATE: An Assurance Case Automation Toolset"}, {"link": "", "title": "Specifying Safety Monitors for Autonomous Systems using Model-checking"}, {"link": "", "title": "Learning the Task Management Space of an Aircraft Approach Model"}, {"link": "", "title": "Runtime Certification"}, {"link": "/document/6100125", "title": "Towards Requirements Aware Systems: Run-time Resolution of Design-time Assumptions"}, {"link": "", "title": "Self-adaptive Software needs Quantitative Verification at Runtime"}, {"link": "", "title": "Safety Integrity Levels - Theory and Problems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203019"}
{"ref": [{"link": "", "title": "Trace visualization for program comprehension: A controlled experiment"}, {"link": "", "title": "Practical Software Maintenance: Best Practices for Managing Your Software Investment"}, {"link": "/document/6227173", "title": "Graph-based analysis and prediction for software evolution"}, {"link": "/document/4492452", "title": "Execution trace visualization in a 3D space"}, {"link": "/document/4656413", "title": "Visual exploration of large-scale system evolution"}, {"link": "/document/1201192", "title": "On the uniformity of software evolution patterns"}, {"link": "", "title": "Feature-level phase detection for execution trace using object cache"}, {"link": "", "title": "Zinsight: A visual and analytic environment for exploring large event traces"}, {"link": "", "title": "Almost: exploring program traces"}, {"link": "/document/4639052", "title": "Exploring the evolution of software quality with animated visualization"}, {"link": "", "title": "A heuristic-based approach to identify concepts in execution traces"}, {"link": "", "title": "An approach for detecting execution phases of a system for the purpose of program comprehension"}, {"link": "", "title": "Modeling history to analyze software evo-lution: Research articles"}, {"link": "", "title": "Classifying change types for qualifying change couplings"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "De-tection of software evolution phases based on development activities"}, {"link": "", "title": "Detecting program execution phases using heuristic search"}, {"link": "/document/6650524", "title": "Visualizing software dynamicities with heat maps"}, {"link": "", "title": "Using information fragments to answer the questions developers ask"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203023"}
{"ref": [{"link": "", "title": "It's Too Complicated: The Technological Implications of IP-Based Communications on Content/Non-Content Distinctions and the Third Party Doctrine"}, {"link": "", "title": "A Structure for Organizing Information"}, {"link": "", "title": "Court of Justice of the European Union"}, {"link": "", "title": "Gaydar: Facebook Friendships Expose Sexual Orientation"}, {"link": "", "title": "Surveillance or Security? The Risks Posed by New Wiretapping Technologies"}, {"link": "", "title": "Metaphone: The Sensitivity of Telephone Meta-data"}, {"link": "", "title": "Unique in the Shopping Mall: On the reidentifiability of credit card data"}, {"link": "", "title": "President's Review Committee on Intelligence and Communications Technologies"}, {"link": "", "title": "Using Component Metadata to Regression Test Component-based Software"}, {"link": "", "title": "Privacy and Civil Liberties Oversight Board"}, {"link": "", "title": "I Know Where You Were Last Summer: London's Public Bike Data is Telling Everyone Where You've Been"}, {"link": "", "title": "Verizon Forced to Hand Over Telephone Data \u2014 Full Court Ruling"}, {"link": "", "title": "Do Too Many Cooks Spoil the Broth? Using the Number of Developers to Enhance Defect Prediction Models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194556"}
{"ref": [{"link": "", "title": "Domain specific approaches to software test automation"}, {"link": "", "title": "Guitar: an innovative tool for automated testing of gui-driven software"}, {"link": "", "title": "Model-based testing of web applications using nmodel"}, {"link": "", "title": "Statistical testing of web applications"}, {"link": "", "title": "Leveraging existing tests in automated test generation for web applications"}, {"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Model-based integration, execution and certification of development tool-chains"}, {"link": "", "title": "Form-Oriented Analysis"}, {"link": "", "title": "Online testing with model programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203058"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Efficiently, Effectively Detecting Mobile App Bugs with AppDoctor"}, {"link": "", "title": "A Toolset for GUI Testing of Android Applications"}, {"link": "/document/6671275", "title": "The First Decade of GUI Ripping: Extensions, Applications, and Broader Impacts"}, {"link": "", "title": ""}, {"link": "", "title": "Dynodroid: An Input Generation System for Android Apps"}, {"link": "", "title": "Using GUI Ripping for Automated Testing of Android Applications"}, {"link": "", "title": "Automatic GUI Model Generation: State of the Art"}, {"link": "", "title": "Enhancing generated Java GUI models with valid test data"}, {"link": "", "title": "Targeted and Depth-First Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": ""}, {"link": "", "title": "Perturbation-based user-input-validation testing of web applications"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "AppsPlayground: Automatic Security Analysis of Smartphone Applications"}, {"link": "", "title": "Model Reverse-engineering of Mobile Applications with Exploration Strategies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203062"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203133"}
{"ref": [{"link": "", "title": "Mutation analysis"}, {"link": "", "title": "Toward the determination of sufficient mutant operators for C"}, {"link": "", "title": "Selective mutation testing for concurrent code"}, {"link": "/document/1702444", "title": "Testing programs with the aid of a compiler"}, {"link": "", "title": "Test-data generation guided by static defect detection"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Curve and surface fitting"}, {"link": "", "title": "Performance, effectiveness, and reliability issues in software testing"}, {"link": "", "title": "An experimental determination of sufficient mutant operators"}, {"link": "", "title": "Sufficient mutation operators for measuring test effectiveness"}, {"link": "", "title": "Mutation versus all-uses: An empirical evaluation of cost, strength and effectiveness"}, {"link": "", "title": "On mutation and data flow"}, {"link": "", "title": "Reducing the cost of mutation testing: An empirical study"}, {"link": "", "title": "Forecasting the efficiency of test generation algorithms for combinational circuits"}, {"link": "", "title": "An empirical study on the scalability of selective mutation testing"}, {"link": "/document/6693070", "title": "Operator-based and random mutant selection: Better together"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}, {"link": "", "title": "Regression mutation testing"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203097"}
{"ref": [{"link": "", "title": "Letters to the editor: Go to statement considered harmful"}, {"link": "", "title": "Guardians and Actions: Linguistic support for robust, distributed programs"}, {"link": "", "title": "Active object-an object behavioral pattern for concurrent programming"}, {"link": "", "title": "Active objects in Hybrid"}, {"link": "", "title": "Concurrent programming using actors: Exploiting large-scale parallelism"}, {"link": "", "title": "Concurrent Programming in ERLANG"}, {"link": "", "title": "Capabilities for uniqueness and borrowing"}, {"link": "", "title": "Minimal ownership for Active Objects"}, {"link": "", "title": "Implicit invocation meets safe, implicit concurrency"}, {"link": "", "title": "Concurrency by modularity: Design patterns, a case in point"}, {"link": "", "title": "Building scalable software systems in the multicore era"}, {"link": "", "title": "Capsule-oriented programming in the Panini language"}, {"link": "", "title": "Communicating sequential processes"}, {"link": "", "title": "Flexible alias protection"}, {"link": "", "title": "A parallel Java Grande benchmark suite"}, {"link": "", "title": "Implementation of the NAS Parallel Benchmarks in Java"}, {"link": "", "title": "Parallelism in curricula an international survey"}, {"link": "", "title": "Computer science curricula 2013 (CS 2013)"}, {"link": "", "title": "On the criteria to be used in decomposing systems into modules"}, {"link": "", "title": "Encapsulating objects with confined types"}, {"link": "", "title": "Ownership types for flexible alias protection"}, {"link": "/document/303616", "title": "COOL: An object-based language for parallel programming"}, {"link": "", "title": "Object-oriented concurrent programming"}, {"link": "", "title": "Research directions in object-oriented programming"}, {"link": "", "title": "Concurrency in object-oriented programming languages"}, {"link": "", "title": "Panini: A concurrent programming model for solving pervasive & oblivious interference"}, {"link": "", "title": "An automatic actors to threads mapping technique for jvm-based actor frameworks"}, {"link": "", "title": "Garbage collection of actors"}, {"link": "/document/1675439", "title": "How to make a multiprocessor computer that correctly executes multiprocess programs"}, {"link": "", "title": "Behavioral automata composition for automatic topology independent verification of parameterized systems"}, {"link": "", "title": "Automating cut-off for multi-parameterized systems"}, {"link": "", "title": "Ptolemy: A language with quantified, typed events"}, {"link": "", "title": "Ambient-oriented programming in Ambient'Talk"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203025"}
{"ref": [{"link": "", "title": "Towards a better understanding of software evolution: An empirical study on open source software"}, {"link": "", "title": "Understanding software evolution using a combination of software visualization and software metrics"}, {"link": "/document/6227173", "title": "Graph-based analysis and prediction for software evolution"}, {"link": "/document/6178868", "title": "Software evolution prediction using seasonal time analysis: A comparative study"}, {"link": "", "title": "Principles of Modeling and Simulation: A Multidisciplinary Approach"}, {"link": "/document/1456074", "title": "Programs, life cycles, and laws of software evolution"}, {"link": "", "title": "iplasma: An integrated platform for quality assessment of object-oriented design"}, {"link": "", "title": "Introductory tutorial: Agent-based modeling and simulation"}, {"link": "", "title": "Agent-based simulation of open source evolution"}, {"link": "/document/1572315", "title": "How developers drive software evolution"}, {"link": "", "title": "A hidden markov model of developer learning dynamics in open source software projects"}, {"link": "", "title": "Bugzilla"}, {"link": "/document/7022680", "title": "Software process simulation based on mining software repositories"}, {"link": "/document/845379", "title": "Training hidden markov models with multiple observations-a combinatorial method"}, {"link": "", "title": "Calculation and optimization of thresholds for sets of software metrics"}, {"link": "", "title": "Rekonq"}, {"link": "", "title": "Adapting the \u201cstaged model for software evolution\u201d to free/libre/open source software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203100"}
{"ref": [{"link": "", "title": "Android performance tips"}, {"link": "", "title": "Android will account for 58commanding a market share of 75"}, {"link": "", "title": "Dalvik bytecode"}, {"link": "", "title": "Java platform, micro edition (java me)"}, {"link": "", "title": "Mobile applications futures 2013-2017"}, {"link": "", "title": ""}, {"link": "", "title": "Smali: An assembler/disassembler for android's dex format"}, {"link": "", "title": "Dexpler: converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "", "title": "AntiPatterns: refactoring software, architectures, and projects in crisis"}, {"link": "", "title": "Android smells catalogue"}, {"link": "", "title": "A study of android application security"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "Domain matters: bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in java mobile apps"}, {"link": "", "title": "How to leak a context: Handlers and inner classes"}, {"link": "", "title": "Software analytics for mobile applications-insights and lessons learned"}, {"link": "", "title": "A Tool-Supported Quality Smell Catalogue For Android Developers"}, {"link": "", "title": "On the reuse and recommendation of model refactoring specifications"}, {"link": "", "title": "Understanding reuse in the android market"}, {"link": "", "title": "Reconstructing dalvik applications"}, {"link": "", "title": "Soot-a java bytecode optimization framework"}, {"link": "", "title": "Code Smells in the Mobile Applications Domain"}, {"link": "", "title": "Techniques and Tools for Analyzing and Understanding Android Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203064"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203135"}
{"ref": [{"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "/document/6224267", "title": "Bug introducing changes: A case study with android"}, {"link": "/document/6233404", "title": "Harnessing stack overflow for the ide"}, {"link": "", "title": "What are developers talking about? an analysis of topics and trends in stack overflow"}, {"link": "", "title": "Sniff: A search engine for java using free-form queries"}, {"link": "", "title": "Research Design: Qualitative, Quantitative, and Mixed Methods Approaches"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "", "title": "User profiling for answer quality assessment in q&a communities"}, {"link": "", "title": "Understanding android fragmentation with topic analysis of vendor-specific bugs"}, {"link": "", "title": "Real challenges in mobile app development"}, {"link": "", "title": "Using and asking: Apis used in the android market and asked about in stackoverflow"}, {"link": "", "title": "Api change and fault proneness: A threat to the success of android apps"}, {"link": "/document/6624014", "title": "An exploratory analysis of mobile development issues using stack overflow"}, {"link": "/document/6224268", "title": "Trendy bugs: Topic trends in the android bug reports"}, {"link": "", "title": "Seahawk: stack overflow in the ide"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/6624009", "title": "A discriminative model approach for suggesting tags automatically for stack overflow questions"}, {"link": "", "title": "Predicting tags for stackoverflow posts"}, {"link": "", "title": "Making sense of online code snippets"}, {"link": "", "title": "How do programmers ask and answer questions on the web? (nier track)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203099"}
{"ref": [{"link": "", "title": "The education of a software engineer"}, {"link": "", "title": "A teamwork-based approach to programming fundamentals with scheme, smalltalk & java"}, {"link": "", "title": "The javafest: A collaborative learning technique for java programming courses"}, {"link": "", "title": "The 2 sigma problem: The search for methods of group instruction as effective as one-to-one tutoring"}, {"link": "", "title": "Mastery learning: Theory and practice"}, {"link": "", "title": "An evaluation method of project based learning on software development experiment"}, {"link": "", "title": "Project-based learning within a large-scale interdisciplinary research effort"}, {"link": "", "title": "How to evaluate competencies in game-based learning systems automatically?"}, {"link": "", "title": "Learning for mastery in an introductory programming course"}, {"link": "", "title": "Motivating project-based learning: Sustaining the doing, supporting the learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202980"}
{"ref": [{"link": "", "title": "Software Architecture: Foundations, Theory, and Practice"}, {"link": "", "title": "Foundations for the study of software architecture"}, {"link": "", "title": "How do software architects specify and validate quality requirements?"}, {"link": "", "title": "Dicto: A unified DSL for testing architectural rules"}, {"link": "", "title": "Dicto: Keeping software architecture under control"}, {"link": "/document/7158502", "title": "A unified approach to architecture conformance checking"}, {"link": "", "title": "The Wright architectural specification language"}, {"link": "/document/464548", "title": "An event-based architecture definition language"}, {"link": "", "title": "The architecture analysis & design language (AADL): An introduction"}, {"link": "", "title": "Moving architectural description from under the technology lamppost"}, {"link": "/document/6374194", "title": "What industry needs from architectural languages: A survey"}, {"link": "", "title": "The Unified Modeling Language User Guide"}, {"link": "", "title": "Static evaluation of software architectures"}, {"link": "", "title": "Sotograph-a pragmatic approach to source code architecture conformance checking"}, {"link": "", "title": "Moose: an agile reengineering environment"}, {"link": "", "title": "IntensiVE, a toolsuite for documenting and checking structural source-code regularities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203102"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202943"}
{"ref": [{"link": "", "title": "The evolution of project inter-dependencies in a software ecosystem: The case of apache"}, {"link": "", "title": "The market for open source: An intelligent virtual open source marketplace"}, {"link": "", "title": "Identifying licensing of jar archives using a code-search approach"}, {"link": "", "title": "An exploratory study of the evolution of software licensing"}, {"link": "", "title": "Categories of free and nonfree software"}, {"link": "", "title": "Understanding and auditing the licensing of open source software distributions"}, {"link": "/document/5069483", "title": "Code siblings: Technical and legal implications of copying code between ap-plications"}, {"link": "", "title": "License integration patterns: Addressing license mismatches in component-based development"}, {"link": "", "title": "A sentence-matching method for automatic license identification of source code files"}, {"link": "", "title": ""}, {"link": "", "title": "The FOSSology project"}, {"link": "", "title": "Evolutional analysis of licenses in FOSS"}, {"link": "", "title": "Study: Most projects on github not open source licensed"}, {"link": "", "title": "Lgpl 2.1 vs lgpl 3.0 advantages and disad-vantages"}, {"link": "", "title": "What are the differences between gpl v2 and gpl v3 licenses? [closed]"}, {"link": "", "title": "Automated software license analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203066"}
{"ref": [{"link": "", "title": "Using Latent Dirichl et al. ocation for automatic categorization of software"}, {"link": "", "title": "Categorizing software applications for maintenance"}, {"link": "", "title": "Automatic categorization algorithm for evolvable software archive"}, {"link": "", "title": "MUDABlue: An automatic categorization system for Open Source repositories"}, {"link": "", "title": "Mining Software Profile across Multiple Repositories for Hierarchical Catego-rization"}, {"link": "", "title": "On Using Machine Learning to Automatically Classify Software Applications into Domain Categories"}, {"link": "", "title": "The Byte Code Engineering Library (Apache Commons BCEL)"}, {"link": "", "title": "Dirichlet process"}, {"link": "", "title": "Unsupervised Classification of Dialogue Acts Using a Dirichlet Process Mixture Model"}, {"link": "", "title": "Welcome to The Apache Software Foundation"}, {"link": "", "title": "Introduction to Information Retrieval"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203070"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203141"}
{"ref": [{"link": "", "title": "Antisocial punishment across societies"}, {"link": "", "title": "Descriptive social norms as underappreciated sources of social control"}, {"link": "", "title": "Social norms and economic theory"}, {"link": "", "title": "Norm creation, spreading and emergence: A survey of simulation models of norms in multi-agent systems"}, {"link": "", "title": "The emergence of conventions in online social networks"}, {"link": "/document/6547619", "title": "Software analytics: So what?"}, {"link": "", "title": "MSR 2014: Proceedings of the 11th Working Conference on Mining Software Repositories"}, {"link": "", "title": "Applications of deontic logic in computer science: a concise overview"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203029"}
{"ref": [{"link": "", "title": "Explaining inconsistent code"}, {"link": "", "title": "Detecting inconsistencies via universal reachability analysis"}, {"link": "", "title": "A theory for control-flow graph exploration"}, {"link": "", "title": "Joogie: Infeasible code detection for Java"}, {"link": "", "title": "A polymorphic intermediate verification language: design and logical encoding"}, {"link": "", "title": "Soot-a Java optimization framework"}, {"link": "", "title": "Doomed program points"}, {"link": "", "title": "Joogie: from Java through Jimple to Boogie"}, {"link": "", "title": "A constraint sequent calculus for first-order logic with linear integer arithmetic"}, {"link": "", "title": "Bug-Assist: Assisting fault localization in ANSI-C programs"}, {"link": "", "title": "The gradual verifier"}, {"link": "", "title": "What gives? a hybrid algorithm for error trace explanation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203033"}
{"ref": [{"link": "", "title": "Software Engineering"}, {"link": "", "title": "Software Testing Techniques"}, {"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Experiments with test case prioritization using relevant slices"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Test case prioritization: a systematic mapping study"}, {"link": "", "title": "On the influence of model structure and test case profile in the prioritization of test cases in the context of model-based testing"}, {"link": "", "title": "Selecting a cost -effective test case prioritization technique"}, {"link": "", "title": "On the fault-detection capabilities of adaptive random test case prioritization: Case studies with large test suites"}, {"link": "", "title": "Test case prioritization using relevant slices"}, {"link": "/document/5482587", "title": "The effects of time constraints on test case prioritization: A series of controlled experiments"}, {"link": "/document/988497", "title": "Test case prioritization: A family of empirical studies"}, {"link": "", "title": "Model-based test prioritization heuristic methods and their evaluation"}, {"link": "/document/4658073", "title": "Application of system models in regression test suite prioritization"}, {"link": "/document/962562", "title": "Prioritizing test Cases for regression testing"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Using coverage information to guide test case selection in adaptive random testing"}, {"link": "", "title": "Prioritizing test cases with string distances"}, {"link": "", "title": "System testing for object-oriented systems with test case prioritization"}, {"link": "", "title": "Prioritization of scenarios based on uml activity diagrams"}, {"link": "", "title": "An automated technique for risk-based test case generation and prioritization"}, {"link": "", "title": "Prioritization of test scenarios derived from uml activity diagram using path complexity"}, {"link": "", "title": "Off-line test selection with test purposes for non-deterministic timed automata"}, {"link": "", "title": "Synthesis of test purpose directed reactive planning tester for nondeterministic systems"}, {"link": "", "title": "Revealing influence of model structure and test case profile on the prioritization of test cases in the context of model-based testing"}, {"link": "", "title": "A systematic mapping about the general test case prioritization, in the context of the model-based testing"}, {"link": "", "title": "A new adaptive random prioritization technique based on similarity"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203104"}
{"ref": [{"link": "", "title": "Tracking bad apples: reporting the origin of null and undefined value errors"}, {"link": "", "title": "My hairiest bug war stories"}, {"link": "", "title": "Have things changed now?: an empirical study of bug characteristics in modern open source software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203072"}
{"ref": [{"link": "/document/6276302", "title": "Where's the Theory for Software Engineering?"}, {"link": "", "title": "Report on the First SEMAT Workshop on a General Theory of Software Engineering (GTSE 2012)"}, {"link": "", "title": "Report on the Second SEMAT Workshop on General Theory of Software Engineering (GTSE 2013)"}, {"link": "", "title": "How to Develop a General Theory of Software Engineering: Report on the GTSE 2014 Workshop"}, {"link": "", "title": "Alignment practices affect distances in software development: a theory and a model"}, {"link": "", "title": "Extending a general theory of software to engineering"}, {"link": "", "title": "Sensemaking-Coevolution-Implementation Theory: a model of the software engineering process in practice"}, {"link": "", "title": "The Sensemaking-Coevolution-Implementation Theory of Software Design"}, {"link": "", "title": "Exploring theory of cognition for general theory of software engineering-Predicting the effort of program language comprehension"}, {"link": "/document/7169393", "title": "Essence-based, goal-driven adaptive software engineering"}, {"link": "/document/7169395", "title": "The unending quest for valid, useful software engineering theories"}, {"link": "/document/7169394", "title": "A theory about the structure of GTSEs"}, {"link": "/document/7169389", "title": "Towards a design-theoretic characterisation of software development process models"}, {"link": "", "title": "Towards an emerging theory for the diagnosis of faulty functions in function-call traces"}, {"link": "/document/7169391", "title": "An approximate theory for value sensitivity"}, {"link": "/document/7169392", "title": "A theory of software complexity"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203139"}
{"ref": [{"link": "", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "Best Kept Secrets of Peer Code Review"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "A refactoring tool for smalltalk"}, {"link": "", "title": "Object-Oriented Design Heuristics"}, {"link": "/document/4602670", "title": "Using static analysis to find bugs"}, {"link": "", "title": "Software systems as cities"}, {"link": "", "title": "Software systems as cities: A controlled experiment"}, {"link": "/document/6976109", "title": "Visual storytelling of development sessions"}, {"link": "", "title": "Safe metaclass programming"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203035"}
{"ref": [{"link": "", "title": "Measuring the difficulty of code comprehension tasks using software metrics"}, {"link": "", "title": "Program complexity metrics and programmer opinions"}, {"link": "", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Galvanic skin response (GSR) as an index of cognitive load"}, {"link": "", "title": "Autonomic nervous system response patterns specificity to basic emotions"}, {"link": "", "title": "Autonomic nervous system activity distinguishes among emotions"}, {"link": "", "title": "The emotions of systems developers: An empirical study of affective events theory"}, {"link": "", "title": "Are happy developers more productive? the correlation of affective states of software developers ane their-self-assessed productivity"}, {"link": "", "title": "Do moods affect programmers' debug performance?"}, {"link": "", "title": "Towards estimating Computer users' mood from interaction behaviour with keyboard and mouse"}, {"link": "/document/6092561", "title": "Exploring software measures to assess program comprehension"}, {"link": "", "title": "Comprehension strategies and difficulties in maintaining object-oriented systems: An explorative study"}, {"link": "", "title": "Challenges in program comprehension"}, {"link": "", "title": "Neurophysiologic monitoring of mental workload and fatigue during operation of a flight simulator"}, {"link": "", "title": "Quantitative EEG patterns of differential in-flight workload"}, {"link": "", "title": "Physiological metrics of mental work-load: A review of recent progress"}, {"link": "", "title": "EEG correlates of task engagement and mental workload in vigilance, learning, and memory tasks"}, {"link": "", "title": "Applied use of cardiac and respiration measures: Practical considerations and precautions"}, {"link": "", "title": "Heart rate and heart rate variability as indirect markers of surgeons' intraoperative stress"}, {"link": "/document/954607", "title": "Toward machine emotional intelligence: Analysis of affective physiological state"}, {"link": "", "title": "Cardiovascular, electrodermal, and respiratory response patterns to fear-and sadness-inducing films"}, {"link": "", "title": "Using galvanic skin response for cognitive load measurement in arithmetic and reading tasks"}, {"link": "", "title": "Task-evoked pupillary responses, processing load, and the structure of processing resources"}, {"link": "", "title": "Fixation-aligned pupillary response averaging"}, {"link": "", "title": "An eye-tracking methodology for characterizing program comprehension processes"}, {"link": "/document/48797", "title": "How do we read algorithms? A case study"}, {"link": "", "title": "An eye tracking study on camelcase and under_score identifier styles"}, {"link": "", "title": "Subvocalization \u2013 toward hearing the inner thoughts of developers"}, {"link": "", "title": "Un-derstanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "Using psycho-physiological measures to assess task difficulty in software development"}, {"link": "", "title": "Stuck and frustrated or in flow and happy: Sensing developers' emotions and progress"}, {"link": "", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "Game Usability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203106"}
{"ref": [{"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Dynamic scaling Jenkins in the cloud"}, {"link": "", "title": "A survey of software testing in the cloud"}, {"link": "", "title": "Automating system tests using declarative virtual machines"}, {"link": "", "title": "Large-scale software testing environment Using cloud computing technology for dependable parallel and distributed systems"}, {"link": "", "title": "Cloud engineering is search based software engineering too"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203074"}
{"ref": [{"link": "/document/1492369", "title": "Software reuse research: Status and future"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "", "title": "How Google Tests Software"}, {"link": "", "title": "Avoiding packaging mismatch with flexible packaging"}, {"link": "", "title": "Software release management for component-based software"}, {"link": "", "title": "Continuous Delivery, 1st"}, {"link": "", "title": "Continuous deployment at IMVU: Doing the impossible fifty times a day"}, {"link": "", "title": "Google ethos speeds up Chrome release cycle"}, {"link": "", "title": "Rapid-release Firefox meets corporate backlash"}, {"link": "", "title": "Recovering commit dependencies for selective code integration in software product lines"}, {"link": "", "title": "Do faster releasesimprove software quality? an empirical case study of mozilla firefox"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203145"}
{"ref": [{"link": "", "title": "Exploratory search: from finding to understanding"}, {"link": "", "title": "Making sense of online code snippets"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Example embedding"}, {"link": "", "title": "Snipmatch: Using source code context to enhance snippet retrieval and parameterization"}, {"link": "", "title": "Seahawk: Stack overflow in the ide"}, {"link": "", "title": "Data curation at scale: The data tamer system"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming prompter"}, {"link": "", "title": "Crowd documentation: Exploring the coverage and the dynamics of API discussions on Stack Overflow"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "", "title": "The Practice of Social Research"}, {"link": "", "title": "An exploratory study of program comprehension strategies of procedural and object-oriented programmers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203037"}
{"ref": [{"link": "", "title": "Software Product Line Engineering: Foundations, Principles and Techniques. Secaucus"}, {"link": "", "title": "Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering. Secaucus"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Extending uml components to develop software product-line architectures: Lessons learned"}, {"link": "", "title": "Easing the transition to software mass customization"}, {"link": "", "title": "Domain-driven technique for functionality identification in source code"}, {"link": "", "title": "Feature location for software product line migration: A mapping study"}, {"link": "", "title": "Model-driven software development: technology, engineering, management"}, {"link": "", "title": "Search based software engineering for software product line engineering: a survey and directions for future work"}, {"link": "", "title": "Sound merging and differencing for class diagrams"}, {"link": "", "title": "Recovering traceability between features and code in product variants"}, {"link": "", "title": "Feature-oriented domain analysis (foda) feasibility study"}, {"link": "", "title": "Feature model synthesis with genetic programming"}, {"link": "", "title": "Improving feature location using structural similarity and iterative graph mapping"}, {"link": "", "title": "Systematic management of variability in uml-based software product lines"}, {"link": "", "title": "A multi-objective solution for retrieving class diagrams"}, {"link": "", "title": "Enhancing clone-and-own with systematic reuse for developing software variants"}, {"link": "", "title": "Towards system analysis with variability model metrics"}, {"link": "", "title": "ETHOM: An evolutionary algorithm for optimized feature models generation"}, {"link": "", "title": "Reverse engineering feature models with evolutionary algorithms: An exploratory study"}, {"link": "", "title": "Improving trace accuracy through data-driven configuration and composition of tracing features"}, {"link": "", "title": "Moms: Multi-objective miniaturization of software"}, {"link": "", "title": "Decision support for moving from a single product to a product portfolio in evolving software systems"}, {"link": "", "title": "Class diagram retrieval with particle swarm optimization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203108"}
{"ref": [{"link": "", "title": "A Guide to the Project Management Body of Knowledge-PMBOK Guides-Fifth Edition, PMI"}, {"link": "", "title": "CHAOS MANIFESTO 2013"}, {"link": "", "title": "Why Your IT Project may be Riskier than You Think"}, {"link": "", "title": "A Flexible Model for Simulation of Software Development Process"}, {"link": "", "title": "Software Development Pprocess Simulation: Multi Agent-Based Simulation versus System Dynamics"}, {"link": "", "title": "A Generic Agent Framework to Support the Various Software Project Management Processes"}, {"link": "", "title": "Computing as Interaction: Agent and Aagreement Technologies"}, {"link": "", "title": "Multi-Agent Oriented Programming with J aCaMo"}, {"link": "", "title": "A Multiagent-Based Simulation Model to Support Management Decision Making in Software Development"}, {"link": "", "title": "MultiAgent-Based Simulation in Software Project Management: Scope Management Represetantion and Visualization"}, {"link": "", "title": "Cormas: Common-Pool Resources and Multi-Aagent Systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203112"}
{"ref": [{"link": "", "title": "Platform independent software development monitoring: Design of an architecture"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Software developer activity as a source for identifying hidden source code dependencies"}, {"link": "", "title": "How tools in IDEs shape developers' navigation behavior"}, {"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "", "title": "Using developer interaction data to compare expertise metrics"}, {"link": "", "title": "Reducing the sparsity of contextual information for recommendation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203076"}
{"ref": [{"link": "", "title": "Automated, scalable debugging of mpi programs with intel message checker"}, {"link": "", "title": "Dynamic verification of MPI programs with reductions in presence of split operations and relaxed orderings"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Parallel symbolic execution for automated real-world software testing"}, {"link": "", "title": "Precise predictive analysis for discovering communication deadlocks in MPI programs"}, {"link": "", "title": "TASS: The toolkit for accurate scientific software"}, {"link": "", "title": "MPISE: Symbolic execution of MPI programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203080"}
{"ref": [{"link": "", "title": "IEEE Software, Special Issue on Technical Debt"}, {"link": "", "title": "Sustainability evaluation of software architectures: a systematic review"}, {"link": "", "title": "A practice-driven systematic review of dependency analysis solutions"}, {"link": "", "title": "Are automatically-detected code anomalies relevant to architectural modularity?: an exploratory analysis of evolving systems"}, {"link": "", "title": "Quantifying software architecture quality \u2013 report on the first international workshop on software architecture metrics"}, {"link": "", "title": "Second International Workshop on Software Architecture and Metrics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203147"}
{"ref": [{"link": "", "title": "What Industry Wants from Research, ICSE 2011 panel"}, {"link": "", "title": "Making Software: What Really Works, and Why We Believe It"}, {"link": "", "title": "1st International Workshop on Software Engineering Research and Industrial Practices (SER&IPs 2014)"}, {"link": "/document/6018960", "title": "David Lorge Parnas: Software Engineering \u2013 Missing in Action: A Personal Perspective"}, {"link": "", "title": "Briand: Embracing the Engineering Side of Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203151"}
{"ref": [{"link": "", "title": "On understanding laws, evolution, and conservation in the large-program life cycle"}, {"link": "", "title": "Establishing the source code disruption caused by automated remodularization tools"}, {"link": "/document/6227233", "title": "Supporting extract class refactoring in eclipse: The ARIES project"}, {"link": "", "title": "Measuring the coupling and cohesion of an object-oriented program based on information flow"}, {"link": "", "title": "Using information retrieval based coupling measures for impact analysis"}, {"link": "", "title": "Using structural and semantic measures to improve software modularization"}, {"link": "", "title": "Revisiting the delta ic approach to component recovery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203039"}
{"ref": [{"link": "", "title": "Let's go to the whiteboard: how and why software developers use drawings"}, {"link": "", "title": "Supporting informal design with interactive whiteboards"}, {"link": "", "title": "Ambiguous intentions: a paper-like interface for creative design"}, {"link": "", "title": "Notation and representation in collaborative object-oriented design: An observational study"}, {"link": "", "title": "FlexiSketch: A mobile sketching tool for software modeling"}, {"link": "/document/6693130", "title": "Semi-automatic generation of metamodels from model sketches"}, {"link": "", "title": "Functions of sketching in design idea generation meetings"}, {"link": "", "title": "Are flexible modeling tools applicable to software design discussions?"}, {"link": "", "title": "Bottom-up meta-modelling: an interactive approach"}, {"link": "", "title": "A collaborative mobile approach for business process elicitation"}, {"link": "", "title": "Dynamic injection of sketching features into GEF based diagram editors"}, {"link": "/document/6606708", "title": "CEL: modeling everywhere"}, {"link": "", "title": "Collaborative sketching with distributed displays and multimodal interfaces"}, {"link": "", "title": "TEAM STORM: Demonstrating an interaction model for working with multiple ideas during creative group work"}, {"link": "", "title": "Idea Playground: When brainstorming is not enough"}, {"link": "", "title": "Tool support for cooperative object-oriented design: Gesture based modelling on an electronic whiteboard"}, {"link": "", "title": "Tivoli: An electronic whiteboard for informal workgroup meetings"}, {"link": "", "title": "Blending freeform and managed information in tables (NIER Track)"}, {"link": "/document/6205768", "title": "Generating domain-specific visual language tools from abstract visual specifications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203043"}
{"ref": [{"link": "/document/4221620", "title": "Global software engineering: The future of sociotechnical coordination"}, {"link": "", "title": "Gartner Highlights Key Predictions for IT Organisations and Users in 2008 and Beyond"}, {"link": "", "title": "Open source technologies play a key role in future of application development"}, {"link": "", "title": "Understanding sustained participation in open source software projects"}, {"link": "/document/1353231", "title": "Is the software industry's productivity declining?"}, {"link": "", "title": "Determinants of open source software project success: A longitudinal study"}, {"link": "", "title": "A confirmatory factor analysis of is employee motivation and retention"}, {"link": "/document/6759097", "title": "What do we know about floss developers' attraction, retention, and commitment? a literature review"}, {"link": "", "title": "Together but apart: how spatial, temporal and cultural distances affect floss developers' project retention"}, {"link": "", "title": "Performance evaluation of software development teams: a practical case study"}, {"link": "", "title": "Measuring developer contribution from software repository data"}, {"link": "", "title": "Rank-me: A java tool for ranking team members in software bug repositories"}, {"link": "", "title": "Fastdash: a visual dashboard for fostering awareness in software teams"}, {"link": "", "title": "Author entropy: A metric for characterization of software authorship patterns"}, {"link": "", "title": "Codesaw: A social visualization of distributed software development"}, {"link": "", "title": "Samiksha: mining issue tracking system for contribution and performance assessment"}, {"link": "", "title": "Samikshaviz: a panoramic view to measure contribution and performance of software maintenance professionals by mining bug archives"}, {"link": "", "title": "Examining turnover in open source software projects using logistic hierarchical linear modeling approach"}, {"link": "", "title": "The effects of diversity on group productivity and member withdrawal in online volunteer groups"}, {"link": "", "title": "Who will remain? an evaluation of actual person-job and person-team fit to predict developer retention in floss projects"}, {"link": "", "title": "Does the initial environment impact the future of developers?"}, {"link": "", "title": "Impact of license choice on open source software development activity"}, {"link": "", "title": "Train and retain: the impact of mentoring on the retention of floss developers"}, {"link": "", "title": "Measuring open source quality: A literature review"}, {"link": "", "title": "Does contributor characteristics influence future participation? a case study on google chromium issue tracking system"}, {"link": "", "title": "What community contribution pattern says about stability of software project?"}, {"link": "", "title": "Understanding the motivations, participation, and performance of open source software developers: A longitudinal study of the apache projects"}, {"link": "", "title": "An empirical study of volunteer members' perceived turnover in open source software projects"}, {"link": "/document/6227164", "title": "What make long term contributors: Willingness and opportunity in oss community"}, {"link": "", "title": "Impacts of license choice and organizational sponsorship on user interest and development activity in open Source software projects"}, {"link": "", "title": "The impact of ideology on effectiveness in open source software development teams"}, {"link": "", "title": "An empirical analysis of open source software developers motivations and continuance intentions"}, {"link": "", "title": "Exploring motivations for contributing to open source initiatives: The roles of contribution context and personal values"}, {"link": "/document/4228643", "title": "Open borders? immigration in open source projects"}, {"link": "", "title": "Decoding the\u201d free/open source (f/oss) software puzzle"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203114"}
{"ref": [{"link": "/document/5963695", "title": "DESSERT: a divide-and-conquer methodology for identifying categories, choices, and choice relations for test case generation"}, {"link": "/document/1214323", "title": "A choice relation framework for supporting category-partition test case generation"}, {"link": "/document/536462", "title": "The combinatorial design approach to automatic test generation"}, {"link": "", "title": "Classification tree for partition testing"}, {"link": "/document/62448", "title": "Partition testing does not inspire confidence"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203078"}
{"ref": [{"link": "", "title": "Mugshot: Deterministic capture and replay for javascript applications"}, {"link": "", "title": "Jsmeter: Comparing the behavior of javascript benchmarks with real web applications"}, {"link": "", "title": "Automated construction of javascript benchmarks"}, {"link": "", "title": "An analysis of the dynamic behavior of javascript programs"}, {"link": "", "title": "Jalangi: A selective record-replay and dynamic analysis framework for javascript"}, {"link": "", "title": "Object versioning to support recovery needs: Using proxies to preserve previous development states in lively"}, {"link": "", "title": "Taj: effective taint analysis of web applications"}, {"link": "", "title": "Proxies: design principles for robust object-oriented intercession apis"}, {"link": "", "title": "Dynamic test input generation for web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203082"}
{"ref": [{"link": "/document/4784388", "title": "First international workshop on software engineering for computational science & engineering"}, {"link": "/document/5337640", "title": "Report: The second international workshop on software engineering for cse"}, {"link": "/document/6159198", "title": "Software engineering for computational science and engineering"}, {"link": "", "title": "Software engineering for computational science and engineering [guest editors' introduction]"}, {"link": "/document/4721189", "title": "Guest editors' introduction: Developing scientific software, part 2"}, {"link": "", "title": "Special issue on scientific end user computing"}, {"link": "/document/4548403", "title": "Developing scientific software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203149"}
{"ref": [{"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "", "title": "SuperC: Parsing all of C by taming the preprocessor"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "Static approximation of dynamically generated web pages"}, {"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "/document/6693098", "title": "Dangling references in multi-configuration and dynamic PHP-based Web applications"}, {"link": "", "title": "Autolocating and fix-propagating for HTML validation errors to PHP serverside code"}, {"link": "", "title": "Parsing C/C++ code without pre-processing"}, {"link": "", "title": "Automated repair of HTML generation errors in PHP applications using string constraint solving"}, {"link": "", "title": "Locating need-to-translate constant strings in web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203045"}
{"ref": [{"link": "", "title": "Ten Steps towards Systematic Requirements Reuse"}, {"link": "", "title": "Mastering the Requirements Process"}, {"link": "/document/936219", "title": "Requirements Engineering as a Success Factor in Software Projects"}, {"link": "", "title": "Software Engineering Economics"}, {"link": "", "title": "Hype Cycle for Application Development: Requirements Elicitation and Simulation"}, {"link": "", "title": "SwissQ Requirements Trends & Benchmarks Switzerland"}, {"link": "", "title": "The Main Thing is Keeping the Main Thing the Main Thing"}, {"link": "", "title": "The Timeless Way of Building"}, {"link": "", "title": "Software Requirements Patterns"}, {"link": "", "title": "A Pattern-based Method for building Requirements Documents in Call-for-tender Processes"}, {"link": "", "title": "A Metamodel for Software Requirement Patterns"}, {"link": "", "title": "Constructing and Using Software Requirement Patterns"}, {"link": "", "title": "Requirements Reuse and Patterns: A Survey"}, {"link": "", "title": "Success Factors for Requirement Patterns Approaches Exploring Requirements Analysts' Opinions and Whishes"}, {"link": "", "title": "Managing Requirements Specifications for Product Lines-An Approach and Industry Case Study"}, {"link": "", "title": "A Measurement Framework for assessing the Maturity of Requirements Engineering Process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203120"}
{"ref": [{"link": "", "title": "Foundations of software testing"}, {"link": "/document/5487526", "title": "An Analysis and Survey of the Development of Mutation Testing"}, {"link": "", "title": "Proteum/FSM: a tool to support finite state machine validation based on mutation testing"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "/document/6389685", "title": "Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking"}, {"link": "", "title": "A Variability Perspective of Mutation Analysis"}, {"link": "", "title": "Mutation Testing Using Featured Transition Systems"}, {"link": "", "title": "VIBeS: Variability Intensive Behavioural teSting"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203084"}
{"ref": [{"link": "", "title": "Video"}, {"link": "", "title": "Video"}, {"link": "", "title": "Video"}, {"link": "", "title": "Watch what I Do: Programming by Demonstration"}, {"link": "", "title": "Your Wish Is My Command: Programming by Example"}, {"link": "", "title": "Synthesis from examples: Interaction models and algorithms"}, {"link": "", "title": "Spreadsheet data manipulation using examples"}, {"link": "", "title": "Automating string processing in spreadsheets using input-output examples"}, {"link": "", "title": "Learning semantic string transformations from examples"}, {"link": "", "title": "A machine learning framework for programming by example"}, {"link": "", "title": "Synthesizing number transformations from input-output examples"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203047"}
{"ref": [{"link": "", "title": "JPF-SE: a symbolic execution extension to Java PathFinder"}, {"link": "", "title": "Software testing techniques (2nd ed.)"}, {"link": "", "title": "Symbolic execution for software testing in practice-preliminary assessment"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Model-based testing in practice"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203051"}
{"ref": [{"link": "", "title": "The Security Development Lifecycle"}, {"link": "/document/799939", "title": "Building knowledge through families of experiments"}, {"link": "", "title": "Toward a framework for evaluating extreme programming"}, {"link": "", "title": "Towards an Ontology of software maintenance"}, {"link": "", "title": "Software Assessments, Benchmarks and Best Practices"}, {"link": "", "title": "Why Software Repositories Are Not Used for Defect-insertion Circumstance Analysis More Often: A Case Study"}, {"link": "", "title": "What We Have Learned About Fighting Defects"}, {"link": "", "title": "DDP \u2013 A tool for life-cycle risk management"}, {"link": "", "title": "Assessing Quality Processes with ODC COQUALMO"}, {"link": "", "title": "Engineering a Safer World: Systems Thinking Applied to Safety"}, {"link": "", "title": "Are Vulnerabilities Like Defects from a Process Perspective?"}, {"link": "", "title": "Mapping the Field of Software Security Metrics"}, {"link": "", "title": "An Introduction to Categorical Data Analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203118"}
{"ref": [{"link": "/document/4359472", "title": "Analyzing regulatory rules for privacy and security requirements"}, {"link": "", "title": "Evaluating existing security and privacy requirements for legal compliance"}, {"link": "", "title": "Commitment analysis to operationalize software requirements from privacy policies"}, {"link": "", "title": "A machine learning approach for tracing regulatory codes to product specific requirements"}, {"link": "", "title": "Tracing object-oriented code into functional requirements"}, {"link": "", "title": "Anonymity, unlinkability, undetectability, unobservability, pseudonymity, and identity management-a consolidated proposal for terminology"}, {"link": "", "title": "Differential privacy"}, {"link": "", "title": "Generalizing data to provide anonymity when disclosing information"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Verification and change-impact analysis of access-control policies"}, {"link": "", "title": "Monitoring security policies with metric first-order temporal logic"}, {"link": "", "title": "Privacy 2.0: Personal and consumer protection in new media reality"}, {"link": "", "title": "Facebook and privacy: it's complicated"}, {"link": "", "title": "Privacy design in online social networks: Learning from privacy breaches and community feedback"}, {"link": "", "title": "Imagined communities: Awareness, information sharing, and privacy on the facebook"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203122"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453173"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453101"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453065"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453140"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453103"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453138"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453142"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453105"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453069"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453179"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453107"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453075"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453146"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453150"}
{"ref": [{"link": "", "title": "Towards logistic regression models for predicting fault-prone code across software projects"}, {"link": "", "title": "A Comparative Study to Benchmark Cross-project Defect Prediction Approaches"}, {"link": "", "title": "Correction of \u201cA Comparative Study to Benchmark Cross-project Defect Prediction"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453185"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453109"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453113"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453077"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453187"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453115"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453079"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453083"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453085"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453156"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453119"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453123"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453162"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453125"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453200"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453164"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453056"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453199"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453127"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453095"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453170"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453058"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453062"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453133"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453204"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453100"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453135"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453099"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453206"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453066"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453070"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453137"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453141"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453104"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453068"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453072"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453139"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453143"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453178"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453110"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453074"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453145"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453184"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453108"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453112"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453151"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453186"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453114"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453149"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453153"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453120"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453155"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453194"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453122"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453090"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453163"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453198"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453126"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453165"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453057"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453061"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453203"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453167"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453171"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453098"}
{"ref": [{"link": "", "title": "Information technology \u2013 Security techniques \u2013 Message Authentication Codes (MACs) \u2013 Part 1: Mechanisms using a block cipher, ISO/IEC 9797\u20131"}, {"link": "", "title": "ECMAScript language specification, 5.1 edition"}, {"link": "", "title": "Improving JavaScript performance by deconstructing the type system"}, {"link": "", "title": "Dynamic inference of static types for Ruby"}, {"link": "", "title": "RPython: a step towards reconciling dynamically and statically typed OO languages"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "", "title": "Efficient purely-dynamic information flow analysis"}, {"link": "", "title": "Aggressive type inference"}, {"link": "", "title": "Understanding TypeScript"}, {"link": "", "title": "Staged information flow for JavaScript"}, {"link": "", "title": "WebMate: A tool for testing web 2.0 application"}, {"link": "", "title": "Kind analysis for MATLAB"}, {"link": "/document/4812393", "title": "Ajax Crawl: Making Ajax applications searchable"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "Profile-guided static typing for dynamic scripting languages"}, {"link": "", "title": "Static type inference for ruby"}, {"link": "", "title": "JITProf: Pinpointing JIT-unfriendly JavaScript code"}, {"link": "", "title": "Dlint: Dynamically checking bad coding practices in javascript"}, {"link": "", "title": "Typing local control and state using flow analysis"}, {"link": "", "title": "Fast and precise hybrid type inference for JavaScript"}, {"link": "", "title": "Recency types for analyzing scripting languages"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "Searching for type-error messages"}, {"link": "", "title": "RATA: Rapid atomic type analysis by abstract interpretation\u2014application to JavaScript optimization"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "/document/4539539", "title": "State-based testing of Ajax web applications"}, {"link": "/document/4577876", "title": "Crawling Ajax by inferring user interface state changes"}, {"link": "", "title": "Microsoft. TypeScript Language Specification, Version 1.0. 2014"}, {"link": "", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "Vejovis: Suggesting fixes for JavaScript faults"}, {"link": "", "title": "Finding minimum type error sources"}, {"link": "", "title": "Detecting anomalies in the order of equally-typed method arguments"}, {"link": "/document/6419711", "title": "Name-based analysis of equally typed method arguments"}, {"link": "", "title": "Static detection of brittle parameter typing"}, {"link": "", "title": "EventBreak: Analyzing the responsiveness of user interfaces through performance-guided test generation"}, {"link": "", "title": "The ins and outs of gradual type inference"}, {"link": "", "title": "The eval that men do \u2013 a large-scale study of the use of eval in JavaScript applications"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "A symbolic execution framework for JavaScript"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "Jalangi: A selective record-replay and dynamic analysis framework for JavaScript"}, {"link": "", "title": "Towards a type system for analyzing JavaScript programs"}, {"link": "/document/6606562", "title": "Guided test generation for web applications"}, {"link": "", "title": "Logical types for untyped languages"}, {"link": "", "title": "Toward general diagnosis of static errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194584"}
{"ref": [{"link": "/document/5370764", "title": "Four Trends Leading to Java Runtime Bloat"}, {"link": "", "title": "Modeling Runtime Behavior in Framework-Based Applications"}, {"link": "", "title": "Software Bloat Analysis: Finding. Removing, and Preventing Performance Problems in Modern Large-Scale Object-Oriented Applications"}, {"link": "", "title": "Patterns of Memory Inefficiency"}, {"link": "", "title": "Reuse, Recycle to De-bloat Software"}, {"link": "", "title": "The diary of a datum: an approach to modeling runtime complexity in framework-based applications"}, {"link": "", "title": "Chameleon: Adaptive Selection of Collections"}, {"link": "", "title": "Finding low-utility data structures"}, {"link": "", "title": "Detecting inefficiently-used containers to avoid bloat"}, {"link": "", "title": "Finding reusable data structures"}, {"link": "", "title": "Uncovering performance problems in Java applications with reference propagation profiling"}, {"link": "", "title": "Cachetor: detecting cacheable data to remove bloat"}, {"link": "", "title": "Blended analysis for performance understanding of framework-based applications"}, {"link": "", "title": "A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications"}, {"link": "", "title": "Subsuming Methods: Finding New Optimisation Opportunities in Object-Oriented Software"}, {"link": "", "title": "The DaCapo Benchmarks: Java Benchmarking Development and Analysis"}, {"link": "", "title": "Letterboxd"}, {"link": "", "title": "Exploiting hardware performance counters with flow and context sensitive profiling"}, {"link": "", "title": "Performance analysis of idle programs"}, {"link": "", "title": "Evaluating the accuracy of Java profilers"}, {"link": "", "title": "Yourkit"}, {"link": "", "title": "Jprofiler"}, {"link": "", "title": "Visualvm"}, {"link": "", "title": "JP2: Call-site aware calling context profiling for the Java Virtual Machine"}, {"link": "", "title": "Portable and accurate sampling profiling for Java"}, {"link": "", "title": "Towards Anomaly Comprehension: Using Structural Compression to Navigate Profiling Call-Trees"}, {"link": "", "title": "Summarizing application performance from a components perspective"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202959"}
{"ref": [{"link": "", "title": "VITA - An Autonomous Road Vehicle (ARV) for Collision Avoidance in Traffic"}, {"link": "", "title": "Self-driving cars inch closer to mainstream availability"}, {"link": "", "title": "Caroline: An Autonomously Driving Vehicle for Urban Environments"}, {"link": "", "title": "Technical Aspects on Team Chalmers Solution to Cooperative Driving"}, {"link": "", "title": "Software Product Line Engineering"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Software Product Lines in Action"}, {"link": "", "title": "Procedures for Performing Systematic Reviews"}, {"link": "/document/5664350", "title": "Adaptive AUV mission management in under-informed situations"}, {"link": "", "title": "Intelligent Autonomy for Unmanned Surface and Underwater Vehicles"}, {"link": "/document/6263248", "title": "COLA2: A Control Architecture for AUVs"}, {"link": "", "title": "Mission control system for dam inspection with an AUV"}, {"link": "", "title": "On AUV Control Architecture"}, {"link": "", "title": "O2CA2, a new object oriented control architecture for autonomy: The reactive layer"}, {"link": "/document/5547041", "title": "Hierarchical agent-based command and control system for autonomous underwater vehicles"}, {"link": "", "title": "4D/RCS A Reference Model Architecture for Intelligent Unmanned Ground Vehicles"}, {"link": "", "title": "Architecture for embedded open software ecosystems"}, {"link": "", "title": "An architecture for motion planning and motion control of a car-like vehicle"}, {"link": "/document/4770173", "title": "Interoperable Control Architecture for Cybercars and Dual-Mode Cars"}, {"link": "/document/5069132", "title": "Applying software product line techniques in model-based embedded systems engineering"}, {"link": "", "title": "Design and Use of Software Architectures. Adopting and evolving a product-line approach"}, {"link": "", "title": "Information technology - Software product quality - Part 1: Quality model, ISO/IEC FDIS 9126-1:2000(E)"}, {"link": "", "title": "The Volvo Group Annual Report 2013"}, {"link": "/document/795198", "title": "Stakeholder identification in the requirements engineering process"}, {"link": "", "title": "Snowball sampling"}, {"link": "", "title": "Requirements Engineering Fundamentals"}, {"link": "", "title": "Systematic literature reviews in software engineering: A systematic literature review"}, {"link": "", "title": "Road recognition from multifocal vision"}, {"link": "/document/639472", "title": "Seeing Passenger Car \u2018VaMoRs-P\u2019"}, {"link": "", "title": "Guide to Advanced Empirical Software Engineering"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "", "title": "Core J2EE Patterns: Best Practices and Design Strategies"}, {"link": "/document/6065739", "title": "Modeling Product Line Software Assets Using Domain-Specific Kits"}, {"link": "", "title": "Goal-oriented modeling and verification of feature-oriented product lines"}, {"link": "", "title": "Variability management with feature models"}, {"link": "/document/5290994", "title": "A Variation Mechanism Based on Adaptive Object Model for Software Product Line of Brazilian Satellite Launcher"}, {"link": "", "title": "A text-based approach to feature modelling: Syntax and semantics of TVL"}, {"link": "/document/4019690", "title": "Criteria for Comparing Requirements Variability Modeling Notations for Product Lines"}, {"link": "", "title": "Representing variability in a family of MRI scanners"}, {"link": "", "title": "Integrated Analysis of Software Product Lines: A constraint based framework for consistency, liveness, and commonness checking"}, {"link": "/document/6685797", "title": "A Model-Driven Infrastructure for Developing Product Line Architectures Using CVL"}, {"link": "/document/6685787", "title": "Software Variability Management: An Exploratory Study with Two Feature Modeling Tools"}, {"link": "", "title": "Industrial validation of COVAMOF"}, {"link": "", "title": "Software product lines: A case study"}, {"link": "", "title": "Achieving Extensibility Through Product-Lines and Domain-Specific Languages: A Case Study"}, {"link": "/document/4459180", "title": "Supporting the Evolution of Product Line Architectures with Variability Model Fragments"}, {"link": "/document/6065644", "title": "Analysis of Software Product Line Architecture Representation Mechanisms"}, {"link": "", "title": "Semantics of UML 2.0 Interactions with Variabilities"}, {"link": "", "title": "A Variability Management Process for Software Product Lines"}, {"link": "", "title": "Modeling variability in the component and connector view of architecture using UML"}, {"link": "", "title": "Simpl: A product-line modeling methodology for families of integrated control systems"}, {"link": "", "title": "The DOPLER metatool for decision-oriented variability modeling: a multiple case study"}, {"link": "", "title": "A mixed-method approach for the empirical evaluation of the issue-based variability modeling"}, {"link": "", "title": "Issue-based variability management"}, {"link": "/document/1579144", "title": "Study on Application of a Quantitative Evaluation Approach for Software Architecture Adaptability"}, {"link": "/document/4291181", "title": "Adaptability Evaluation of Software Architectures; A Case Study"}, {"link": "/document/1392720", "title": "Class point: an approach for the size estimation of object-oriented systems"}, {"link": "", "title": "Assessing the Evolution of Software Product Lines Maintainability"}, {"link": "", "title": "Comparing Maintainability Evolution of Object-Oriented and Aspect-Oriented Software Product Lines"}, {"link": "", "title": "Quantifying Software Architectures: An Analysis of Change Propagation Probabilities"}, {"link": "", "title": "Stability assessment of aspect-oriented software architectures: A quantitative study"}, {"link": "", "title": "A Framework for Software Reference Architecture Analysis and Review"}, {"link": "", "title": "Towards a Method for the Evaluation of Reference Architectures: Experiences from a Case"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202963"}
{"ref": [{"link": "", "title": "Towards self-healing smartphone software via automated patching"}, {"link": "", "title": "Traon. Dexpler: Converting Android Dalvik Bytecode to Jimple for Static Analysis with Soot"}, {"link": "", "title": "Ar-miner: Mining informative reviews for developers from mobile app market-place"}, {"link": "", "title": "E unibus pluram: massive-scale software diversity as a defense mechanism"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "", "title": "A Recommender System of Buggy App Checkers for App Store Moderators"}, {"link": "/document/6224306", "title": "App store mining and analysis: MSR for app stores"}, {"link": "/document/1160055", "title": "The vision of autonomic computing"}, {"link": "/document/6636712", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "Automated program repair through the evolution of assembly code"}, {"link": "", "title": "Automatically finding patches using genetic programming"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203014"}
{"ref": [{"link": "", "title": "A Pattern Language: Towns, Buildings, Construction"}, {"link": "", "title": "Patterns of software"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "A pattern language for human-computer interface design"}, {"link": "", "title": "On the socially aware development of self-adaptive ubiquitous computing applications"}, {"link": "", "title": "Towards interdisciplinary design patterns for ubiquitous computing aplications"}, {"link": "", "title": "Privacy by designprinciples of privacy-aware ubiquitous systems"}, {"link": "", "title": "European disappearing computer privacy design guidelines, version 1.1"}, {"link": "", "title": "for Economic Co-operation, and Development"}, {"link": "", "title": "Designing social interfaces: Principles, patterns, and practices for improving the user experience"}, {"link": "", "title": "Designing User Interfaces"}, {"link": "", "title": "Development and evaluation of emerging design patterns for ubiquitous computing"}, {"link": "", "title": "Requirements systematization through pattern application in ubiquitous systems"}, {"link": "", "title": "Socio-technical Design of Ubiquitous Computing Systems. Springer"}, {"link": "", "title": "Designing socio-technical applications for ubiquitous computing"}, {"link": "", "title": "Connect-U Development of Ubiquitous Systems for Enhancing Social Networking. Springer"}, {"link": "", "title": "Socially acceptable design of a ubiquitous system for monitoring elderly family members"}, {"link": "", "title": ""}, {"link": "", "title": "Die venus-entwicklungsmethode eine interdisziplin\u00e4re methode f\u00fcr soziotechnische softwaregestaltung"}, {"link": "", "title": "A meta-model for software requirement patterns"}, {"link": "", "title": "Mastering the requirements process"}, {"link": "", "title": "A requirements elicitation approach based in templates and patterns"}, {"link": "", "title": "Twenty software requirement patterns to specify recommender systems that users will trust"}, {"link": "", "title": "Designing mobile interfaces"}, {"link": "", "title": "The dat project: A smart home environment for people with disabilities"}, {"link": "", "title": "A context-aware virtual secretary in a smart office environment"}, {"link": "", "title": "Identifying and facilitating social interaction with a wearable wireless sensor network"}, {"link": "", "title": "Enhancing social interactions at conferences"}, {"link": "", "title": "European Data Protection Law, Corporate Compliance and Regulation"}, {"link": "", "title": "Data protection in germany: The population census decision and the right to informational self-determination"}, {"link": "", "title": "Christopher Alexander: the search for a new paradigm in architecture"}, {"link": "", "title": "The nature of order: an essay on the art of building and the nature of the universe"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202998"}
{"ref": [{"link": "", "title": "Automatically documenting program changes"}, {"link": "", "title": "Ldiff: An enhanced line differencing tool"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "", "title": "Commit 2.0"}, {"link": "", "title": "Using stereotypes to help characterize commits"}, {"link": "", "title": "Reverse engineering method stereotypes"}, {"link": "/document/4339230", "title": "Change distilling:tree differencing for fine-grained source code change extraction"}, {"link": "/document/1572315", "title": "How developers drive software evolution"}, {"link": "/document/4659248", "title": "The road ahead for mining software repositories"}, {"link": "", "title": "Automatically capturing source code context of nl-queries for software maintenance and reuse"}, {"link": "/document/336770", "title": "Semantic diff: A tool for summarizing the effects of modifications"}, {"link": "/document/5069490", "title": "From work to word: How do software developers describe their work?"}, {"link": "", "title": "Automatic generation of release notes"}, {"link": "", "title": "Jstereocode: automatically identifying method and class stereotypes in java code"}, {"link": "/document/6613855", "title": "Jsummarizer: An automatic generator of natural language summaries for java classes"}, {"link": "/document/5295312", "title": "Attacking information overload in software development"}, {"link": "", "title": "iDiff: Interaction-based program differencing tool"}, {"link": "", "title": "Improving change descriptions with change contexts"}, {"link": "", "title": "Why did this code change?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203049"}
{"ref": [{"link": "", "title": "Novice software developers, all over again"}, {"link": "", "title": "What game developers look for in a new graduate: interviews and surveys at one game company"}, {"link": "", "title": "Debugging by skilled and novice programmers"}, {"link": "", "title": "A summary of software measurement experiences in the software engineering laboratory"}, {"link": "", "title": "Exploratory experimental studies comparing online and offline programmmg performance"}, {"link": "", "title": "Computing curricula 2005: the overview report"}, {"link": "/document/4012619", "title": "SE2004: recommendations for undergraduate software engineering curricula"}, {"link": "", "title": "Employers' perspectives on it learning outcomes"}, {"link": "", "title": "The IS expectation gap: industry expectations versus academic preparation"}, {"link": "/document/658300", "title": "A survey of the relevance of computer science and software engineering education"}, {"link": "/document/795608", "title": "How to be a star engineer"}, {"link": "", "title": "Critical skills and knowledge requirements of IS professionals: a joint academic/industry investigation"}, {"link": "", "title": "Things they would not teach me of in college: what Microsoft developers learn later"}, {"link": "", "title": "The humble programmer"}, {"link": "", "title": "In head-hunting, big data may not be such a big deal"}, {"link": "", "title": "Code complete: a practical handbook of software construction"}, {"link": "", "title": "Expertise in problem solving"}, {"link": "", "title": "Dimensions of consumer expertise"}, {"link": "/document/1377187", "title": "How effective developers investigate source code: an exploratory study"}, {"link": "", "title": "The role of deliberate practice in the acquisition of expert performance"}, {"link": "", "title": "Administrative behavior"}, {"link": "", "title": "Managing conflict in software development teams: a multilevel analysis"}, {"link": "/document/4228639", "title": "Determining implementation expertise from bug reports"}, {"link": "", "title": "Improving bug triage with bug tossing graphs"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "Communication, collaboration, and bugs: the social nature of issue tracking in small, collocated teams"}, {"link": "", "title": "The secret life of bugs: going past the errors and omissions in software repositories"}, {"link": "", "title": "Basics of qualitative research: techniques and procedures for developing grounded theory"}, {"link": "", "title": "Perspectives on socially shared cognition"}, {"link": "", "title": "The time famine: toward a sociology of work time"}, {"link": "", "title": "Software quality and the Capability Maturity Model"}, {"link": "", "title": "Software cost estimation with COCOMO II"}, {"link": "", "title": "Formulation and preliminary test of an empirical theory of coordination in software engineering"}, {"link": "/document/506460", "title": "Verifying and validating software requirements and design specifications"}, {"link": "", "title": "A behavioral model of rational choice"}, {"link": "", "title": "Naturalistic decision making"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194618"}
{"ref": [{"link": "", "title": "Optimal loop parallelization"}, {"link": "/document/214548", "title": "Automatic program parallelization"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "A critique of ansi sql isolation levels"}, {"link": "", "title": "Inductive verification of data model invariants for web applications"}, {"link": "", "title": "Cogent: Accurate theorem proving for program verification"}, {"link": "", "title": "Discourse"}, {"link": "", "title": "A calculus of atomic actions"}, {"link": "", "title": "Fat Free CRM - Ruby on Rails-based open source CRM platform"}, {"link": "", "title": "Making snapshot isolation serializable"}, {"link": "", "title": "Architectural Styles and the Design of Network-based Software Architectures"}, {"link": "", "title": "Extended static checking for java"}, {"link": "/document/1553587", "title": "Dynalloy: Upgrading alloy with actions"}, {"link": "", "title": "Efficient analysis of dynalloy specifications"}, {"link": "", "title": "Dynalloy as a formal method for the analysis of java programs"}, {"link": "", "title": "GitHub"}, {"link": "", "title": "Detecting coarse-grain parallelism using an interprocedural parallelizing compiler"}, {"link": "", "title": "On the complexity of commutativity analysis"}, {"link": "", "title": "Alloy: A lightweight object modelling notation"}, {"link": "", "title": "Software Abstractions: Logic, Language, and Analysis"}, {"link": "", "title": "kandanapp/kandan"}, {"link": "", "title": "Verification of semantic commutativity conditions and inverse operations on linked data structures"}, {"link": "", "title": "A cookbook for using the model-view controller user interface paradigm in Smalltalk-80"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": "Lobsters"}, {"link": "", "title": "Ruby on Rails"}, {"link": "", "title": "Overview - Redmine"}, {"link": "", "title": "Commutativity analysis: A new analysis technique for parallelizing compilers"}, {"link": "", "title": "macfanatic/SprintApp"}, {"link": "", "title": "Tracks"}, {"link": "", "title": "Spass input syntax version 1.5"}, {"link": "", "title": "SPASS version 3.5"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194622"}
{"ref": [{"link": "", "title": "Can I use \u2026 Support tables for HTML 5, CSS 3, etc"}, {"link": "/document/5207656", "title": "Secure Content Sniffing for Web Browsers, or How to Stop Papers from Reviewing Themselves"}, {"link": "", "title": "Reining in the Web with Content Security Policy"}, {"link": "", "title": "Content Security Policy 1.0"}, {"link": "/document/4359474", "title": "WASP: Protecting Web Applications Using Positive Tainting and Syntax-Aware Evaluation"}, {"link": "", "title": "HTML Standard"}, {"link": "", "title": "PHP: PHP Usage Stats"}, {"link": "", "title": "jsoup Java HTML Parser, with best of DOM, CSS, and jquery"}, {"link": "", "title": "FreeMarker Java Template Engine \u2013 Overview"}, {"link": "", "title": "Cross Site Scripting Prevention with Dynamic Data Tainting and Static Analysis"}, {"link": "", "title": "Static Detection of Cross-Site Scripting Vulnerabilities"}, {"link": "", "title": "Mining SQL Injection and Cross Site Scripting Vulnerabilities using Hybrid Program Analysis"}, {"link": "", "title": "Pixy: A Static Analysis Tool for Detecting Web Application Vulnerabilities"}, {"link": "", "title": "A Systematic Analysis of XSS Sanitization in Web Application Frame-works"}, {"link": "/document/5070521", "title": "Automatic Creation of SQL Injection and Cross-Site Scripting Attacks"}, {"link": "", "title": "XSS Filter Evasion Cheat Sheet \u2013 OWASP"}, {"link": "", "title": "XSS (Cross Site Scripting) Prevention Cheat Sheet \u2013 OWASP"}, {"link": "", "title": "DOM based XSS Prevention Cheat Sheet \u2013 OWASP"}, {"link": "", "title": "HTML5 Security Cheatsheet"}, {"link": "", "title": "deDacota: Toward Preventing Server-Side XSS via Automatic Code and Data Separation"}, {"link": "", "title": "Remedying the Eval That Men Do"}, {"link": "", "title": "Precise Alias Analysis for Static Detection of Web Application Vulnerabilities"}, {"link": "/document/1410997", "title": "Identi-fying Cross Site Scripting Vulnerabilities in Web Applications"}, {"link": "", "title": "Saner: Composing Static and Dynamic Analysis to Validate Sanitization in Web Applications"}, {"link": "", "title": "ScriptGard: Automatic Context-Sensitive Sanitization for Large-Scale Legacy Web Applications"}, {"link": "", "title": "XSS-GUARD: Precise Dynamic Prevention of Cross-Site Scripting Attacks"}, {"link": "", "title": "TAJ: Effective Taint Analysis of Web Applications"}, {"link": "", "title": "Finding Security Vulnerabilities in Java Applications with Static Analysis"}, {"link": "", "title": "Automatically Hardening Web Applications Using Precise Tainting"}, {"link": "", "title": "Defending against Injection Attacks through Context-Sensitive String Evaluation"}, {"link": "", "title": "Defeating Script Injection Attacks with Browser-Enforced Embedded Policies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194586"}
{"ref": [{"link": "", "title": "Can we Refactor Conditional Compilation into Aspects?"}, {"link": "", "title": "Feature-Oriented Software Product Lines: Concepts and Implementation"}, {"link": "", "title": "Type Safety for Feature-Oriented Product Lines"}, {"link": "", "title": "Language-Independent Reference Checking in Software Product Lines"}, {"link": "/document/1321059", "title": "Scaling Step-Wise Refinement"}, {"link": "/document/957833", "title": "Preprocessor Conditional Removal by Simple Partial Evaluation"}, {"link": "", "title": "\n            DMS\n            "}, {"link": "", "title": "Feature-to-Code Mapping in Two Large Product Lines"}, {"link": "", "title": "Variability Modelling in the Real: A Perspective from the Operating Systems Domain"}, {"link": "", "title": "\n            SPL\n            "}, {"link": "", "title": "Tag and Prune: A Pragmatic Approach to Software Product Line Implementation"}, {"link": "", "title": "Intraprocedural Dataflow Analysis for Software Product Lines"}, {"link": "", "title": "Intrapro-cedural Dataflow Analysis for Software Product Lines"}, {"link": "", "title": "Simple Crosscutting Concerns Are Not So Simple: Analysing Variability in Large-Scale Idioms-Based Implementations"}, {"link": "", "title": "Variability Management in Software Product Lines: A Systematic Review"}, {"link": "", "title": "Automated Testing of Refactoring Engines"}, {"link": "", "title": "Understanding Linux Feature Distribution"}, {"link": "", "title": "The Choice Calculus: A Representation for Software Variation"}, {"link": "", "title": "Variation Programming with the Choice Calculus"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Program Refactoring in the Presence of Preprocessor Directives"}, {"link": "", "title": "Refactoring C with Conditional Compilation"}, {"link": "/document/1510133", "title": "Analyzing Multiple Configurations of a C Program"}, {"link": "", "title": "Systematic Testing of Refactoring Engines on Real Software Projects"}, {"link": "", "title": "OpenRefactory/C: An Infrastructure for Developing Program Transformations for C Programs"}, {"link": "", "title": "OpenRefactory/C: An Infrastructure for Building Correct and Complex C Transformations"}, {"link": "", "title": "Virtual Separation of Concerns: Preprocessor 2.0"}, {"link": "", "title": "A Model of Refactoring Physically and Virtually Separated Features"}, {"link": "", "title": "Type Checking Annotation-Based Product Lines"}, {"link": "", "title": "Variability-Aware Parsing in the Presence of Lexical Macros and Conditional Compilation"}, {"link": "", "title": "A Variability-Aware Module System"}, {"link": "", "title": "TypeChef: Toward Type Checking #ifdef Variability in C"}, {"link": "", "title": "Aspect-Oriented Programming"}, {"link": "", "title": "SPLat: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems"}, {"link": "", "title": "An Analysis of the Variability in Forty Preprocessor-Based Software Product Lines"}, {"link": "", "title": "Analyzing the Discipline of Preprocessor Annotations in 30 Million Lines of C Code"}, {"link": "", "title": "Scalable Analysis of Variable Software"}, {"link": "", "title": "A Quantitative Analysis of Aspects in the eCos Kernel"}, {"link": "", "title": "ASTEC: A New Approach to Refactoring C"}, {"link": "/document/1000449", "title": "A State-of-the-Art Survey on Software Merging"}, {"link": "/document/1265817", "title": "A Survey of Software Refactoring"}, {"link": "/document/6112738", "title": "How We Refactor, and How We Know It"}, {"link": "", "title": "Mining Configuration Constraints: Static Analyses and Empirical Results"}, {"link": "", "title": "A Survey of Combinatorial Testing"}, {"link": "", "title": "Parsing C/C++ Code without Pre-processing"}, {"link": "", "title": "Documenting and Automating Collateral Evolutions in Linux Device Drivers"}, {"link": "/document/160319", "title": "An Integrated Program Representation and Toolkit for the Maintenance of C Programs"}, {"link": "", "title": "On the Feasibility of an AOSD Approach to Linux Kernel Extensions"}, {"link": "", "title": "Stepping Stones over the Refactoring Rubicon"}, {"link": "", "title": "Implementing Refactorings for FOP: Lessons Learned and Challenges Ahead"}, {"link": "", "title": "Refactoring Delta-Oriented Software Product Lines"}, {"link": "", "title": "Variant-Preserving Refactoring in Feature-Oriented Software Product Lines"}, {"link": "", "title": "Efficient Extraction and Analysis of Preprocessor-based Variability"}, {"link": "/document/6175911", "title": "Automated Behavioral Testing of Refactoring Engines"}, {"link": "/document/1245303", "title": "Global Analysis and Transformations in Preprocessed Languages"}, {"link": "", "title": "CScout: A Refactoring Browser for C"}, {"link": "", "title": "Feature Consistency in Compile-Time Configurable System Software"}, {"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "/document/5070526", "title": "Reasoning about Edits to Feature Models"}, {"link": "", "title": "Refactoring Browser with Preprocessor"}, {"link": "", "title": "High-Fidelity C/C++ Code Transformation"}, {"link": "", "title": "Variational Data Structures: Exploring Tradeoffs in Computing with Variability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194590"}
{"ref": [{"link": "", "title": "LaFoSec: S\u00e9curit\u00e9 et langages fonctionnels"}, {"link": "", "title": "JavaSec: S\u00e9curit\u00e9 et langage Java"}, {"link": "", "title": "Mind your Language (s)-A discussion about languages and security (Long Version)"}, {"link": "", "title": "Extensible Markup Language (XML) 1.1 (Second Edition)"}, {"link": "", "title": "Namespaces in XML 1.0 (Third Edition)"}, {"link": "", "title": "W3C XML Schema Definition Language (XSD) 1.1 Part 1: Structures"}, {"link": "", "title": "W3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes"}, {"link": "", "title": "Canonical (XML) 1.0"}, {"link": "", "title": "The Objective Caml system release 3.12-Documentation and user's manual"}, {"link": "", "title": "Experience in using a typed functional language for the development of a security application"}, {"link": "", "title": "XML benchmarks"}, {"link": "", "title": "The XMLBench Project: Comparison of Fast, Multiplatform XML libraries"}, {"link": "", "title": "W3C XML Test Suites"}, {"link": "", "title": "XML Schema Test Suite"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202965"}
{"ref": [{"link": "", "title": "Replication, Reproduction and Re-analysis: Three ways for verifying experimental findings"}, {"link": "", "title": "Empirical evaluations of regression test selection techniques: a systematic review"}, {"link": "", "title": "A survey on model-based testing approaches: a systematic review"}, {"link": "", "title": "Empirical studies of software testing techniques: Challenges, practical strategies, and future research"}, {"link": "", "title": "Reviewing 25 years of testing technique experiments"}, {"link": "", "title": "Empirical evaluation of software testing techniques \u2013 need, issues and mitigation"}, {"link": "", "title": "Understanding replication of experiments in software engineering: A classification"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "Searching for models to evaluate software technology"}, {"link": "/document/6698888", "title": "Finding test data with specific properties via metaheuristic search"}, {"link": "", "title": "A hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering"}, {"link": "", "title": "On the reproducibility of empirical software engineering studies based on data retrieved from development repositories"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203016"}
{"ref": [{"link": "", "title": "To kill a centrifuge"}, {"link": "", "title": "Cve-2014-0160"}, {"link": "", "title": "Cve-2014-1266"}, {"link": "", "title": "Cve-2014-6271"}, {"link": "", "title": "Heartbleed conspiracy theories"}, {"link": "", "title": "Atlas: A new way to explore software, build analysis tools"}, {"link": "", "title": "Atlas video demo"}, {"link": "", "title": "Pscout: Analyzing the android permission specification"}, {"link": "", "title": "Fast static analysis of c++ virtual function calls"}, {"link": "", "title": "SCanDroid: Automated Security Certification of Android Applications"}, {"link": "", "title": "Static analysis of android programs"}, {"link": "", "title": "Droidmat: Android malware detection through manifest and api calls tracing"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "On the effectiveness of malware protection on android"}, {"link": "", "title": "Droidapiminer: Mining api-level features for robust malware detection in android"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "A system call-centric analysis and stimulation technique to automatically reconstruct android malware behaviors"}, {"link": "", "title": "Android permissions demystified"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203055"}
{"ref": [{"link": "", "title": "Advanced configuration and power interface"}, {"link": "", "title": "Carat"}, {"link": "", "title": "Data centers look for lower-emission cooling"}, {"link": "", "title": "A framework for supporting energy-conscious programming using controlled approximation"}, {"link": "/document/6606599", "title": "Green streams for data-intensive software"}, {"link": "", "title": "Economic models for resource management and scheduling in grid computing"}, {"link": "", "title": "Market-oriented cloud computing: Vision, hype, and reality for delivering it services as computing utilities"}, {"link": "", "title": "Stitch: A language for architecture-based self-adaptation"}, {"link": "", "title": "Dynamic power management using adaptive learning tree"}, {"link": "", "title": "Energy types"}, {"link": "", "title": "Power prediction for Intel XScale processors using performance monitoring unit events"}, {"link": "", "title": "Managing battery lifetime with energy-aware adaptation"}, {"link": "/document/6004860", "title": "A multi-agent framework for thermal aware task migration in many-core systems"}, {"link": "", "title": "Power System Analysis and Design"}, {"link": "", "title": "The transaction concept: Virtues and limitations (invited paper)"}, {"link": "", "title": "Estimating mobile application energy consumption using program analysis"}, {"link": "", "title": "Greenminer: A hardware based mining software repositories software energy consumption framework"}, {"link": "", "title": "Sustainability evaluation of software architectures: A systematic review"}, {"link": "", "title": "Task types for pervasive atomicity"}, {"link": "", "title": "The service greenery-integrating sustainability in service oriented software"}, {"link": "", "title": "Integrated energy-directed test suite optimization"}, {"link": "", "title": "Distributed programming in argus"}, {"link": "", "title": "Data-oriented characterization of application-level energy optimization"}, {"link": "/document/6224253", "title": "Energy-efficient synchronization through program patterns"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "", "title": "On the fly capacity planning"}, {"link": "", "title": "A supply-demand model based scalable energy management system for improved energy utilization efficiency"}, {"link": "", "title": "Polyglot: An extensible compiler framework for java"}, {"link": "", "title": "A generic model for sustainability with process- and product-specific instances"}, {"link": "", "title": "Mining questions about software energy consumption"}, {"link": "", "title": "Understanding energy behaviors of thread management constructs"}, {"link": "", "title": "Developing a sustainability non-functional requirements frame-work"}, {"link": "", "title": "Energy-efficient work-stealing language runtimes"}, {"link": "/document/6602665", "title": "Sustainability requirement patterns"}, {"link": "/document/6224257", "title": "Initial explorations on design pattern energy usage"}, {"link": "", "title": "EnerJ: Approximate data types for safe and general low-power computation"}, {"link": "", "title": "An energy consumption framework for distributed java-based systems"}, {"link": "", "title": "Temperature-aware microarchitecture"}, {"link": "", "title": "Eon: A language and runtime system for perpetual systems"}, {"link": "", "title": "Ecosystem: Managing energy as a first class operating system resource"}, {"link": "", "title": "A programming model for sustainable software (technical report)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194624"}
{"ref": [{"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "The GHTorrent dataset and tool suite"}, {"link": "/document/1687860", "title": "Distribution dimensions in software development projects: A taxonomy"}, {"link": "", "title": "Identification of coordination requirements: implications for the design of collaboration and awareness tools"}, {"link": "/document/4221622", "title": "Collaboration in software engineering: A roadmap"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "", "title": "Understanding broadcast based peer review on open source software projects"}, {"link": "", "title": "Will my patch make it? and how fast?: case study on the Linux kernel"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: a case study"}, {"link": "", "title": "Socialization in an open source software community: A socio-technical analysis"}, {"link": "", "title": "Impression formation in online peer production: activity traces and personal profiles in GitHub"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in GitHub"}, {"link": "", "title": "Creating a shared understanding of testing culture on a social coding site"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "", "title": "A dataset for pull-based development research"}, {"link": "/document/6385140", "title": "The secret life of patches: A Firefox case study"}, {"link": "", "title": "Improving bug triage with bug tossing graphs"}, {"link": "", "title": "Characterizing and predicting which bugs get fixed: an empirical study of microsoft windows"}, {"link": "", "title": "Open source community building"}, {"link": "", "title": "Contrasting community building in sponsored and community founded open source projects"}, {"link": "", "title": "Towards a taxonomy of software change"}, {"link": "", "title": "Open source software peer review practices: a case study of the Apache server"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194588"}
{"ref": [{"link": "", "title": "An empirical study of the impact of two antipatterns, Blob and Spaghetti Code, on program comprehension"}, {"link": "", "title": "Is it a bug or an enhancement?: a text-based approach to classify change requests"}, {"link": "", "title": "Understanding the longevity of code smells: preliminary results of an explanatory survey"}, {"link": "", "title": "A new family of software anti-patterns: Linguistic anti-patterns"}, {"link": "", "title": "The missing links: bugs and bug-fix commits"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "/document/6676899", "title": "The evolution of project inter-dependencies in a software ecosystem: The case of Apache"}, {"link": "", "title": "When does a refactoring induce bugs? an empirical study"}, {"link": "/document/6405253", "title": "An empirical analysis of the distribution of unit test smells and their impact on software maintenance"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "", "title": "Competitive coevolutionary code-smells detection"}, {"link": "", "title": "Managing technical debt in software-reliant systems"}, {"link": "", "title": "Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis"}, {"link": "", "title": "On the impact of refactoring operations on code quality metrics"}, {"link": "", "title": "Investigating the evolution of bad smells in object-oriented code"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "Practical Nonparametric Statistics"}, {"link": "", "title": "The WyCash portfolio management system"}, {"link": "", "title": "Populating a release history database from version control and bug tracking systems"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Effect sizes for research: A broad practical approach"}, {"link": "/document/6227171", "title": "Detecting and visualizing inter-worksheet smells in spreadsheets"}, {"link": "/document/6405300", "title": "Detecting code smells in spreadsheet formulas"}, {"link": "", "title": "It's not a bug, it's a feature: how misclassification impacts bug prediction"}, {"link": "/document/5328703", "title": "An exploratory study of the impact of code smells on software change-proneness"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change and fault-proneness"}, {"link": "/document/6336722", "title": "Technical debt: From metaphor to theory and practice"}, {"link": "", "title": "Software Evolution \u2013 Processes of Software Change"}, {"link": "", "title": "The effect of lexicon bad smells on concept location in source code"}, {"link": "", "title": "An empirical study of the bad smells and class error probability in the post-release object-oriented system evolution"}, {"link": "/document/6280547", "title": "A balancing act: What software practitioners have to say about technical debt"}, {"link": "", "title": "Assessing the impact of bad smells using historical information"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "", "title": "Towards a better understanding of software evolution: an empirical study on open-source software"}, {"link": "/document/6693086", "title": "Detecting bad smells in source code using change history information"}, {"link": "", "title": "Do they really smell bad? A study on developers' perception of bad code smells"}, {"link": "", "title": "Software aging"}, {"link": "/document/6178888", "title": "Evaluating the lifespan of code smells using software repository mining"}, {"link": "", "title": "Using history information to improve design flaws detection"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "ch. Technical Debt: Showing the Way for Better Transfer of Empirical Results"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "ReLink: recovering links between bugs and changes"}, {"link": "", "title": "Towards a better understanding of software evolution: An empirical study on open source software"}, {"link": "", "title": "Exploring the impact of inter-smell relations on software maintainability: An empirical study"}, {"link": "/document/6405287", "title": "Do code smells reflect important maintainability aspects?"}, {"link": "/document/6671299", "title": "Do developers care about code smells? an exploratory survey"}, {"link": "", "title": "Why Programs Fail: A Guide to Systematic Debugging"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194592"}
{"ref": [{"link": "/document/1377187", "title": "How effective developers investigate source code: an exploratory study"}, {"link": "", "title": "Questions programmers ask during software evolution tasks"}, {"link": "/document/4459340", "title": "A Realistic Empirical Evaluation of the Costs and Benefits of UML in Software Maintenance"}, {"link": "", "title": "Mental models and software maintenance"}, {"link": "", "title": "Maintaining Mental Models: A Study of Developer Work Habits"}, {"link": "", "title": "Blaze: Navigating source code via call stack contexts"}, {"link": "", "title": "Stacksplorer: call graph navigation helps increasing code maintenance efficiency"}, {"link": "", "title": "Sando: An extensible local code search framework"}, {"link": "", "title": "Source code files as structured documents"}, {"link": "", "title": "Mylar: A degree-of-interest model for IDEs"}, {"link": "", "title": "Modeling programmer navigation: A head-to-head empirical evaluation of predictive models"}, {"link": "", "title": "Automatic generation of suggestions for program investigation"}, {"link": "", "title": "Context-sensitive information retrieval using implicit feedback"}, {"link": "", "title": "Personalized information retrieval based on context and ontological knowledge"}, {"link": "", "title": "Topology analysis of software dependencies"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "", "title": "Context-sensitive ranking of dependencies for software navigation"}, {"link": "/document/1510128", "title": "Navtracks: Supporting navigation in software maintenance"}, {"link": "/document/1374321", "title": "An information retrieval approach to concept location in source code"}, {"link": "", "title": "Using natural language program analysis to locate and understand action-oriented concerns"}, {"link": "", "title": "How developers use multi-recommendation system in local code search"}, {"link": "", "title": "Experiences gamifying developer adoption of practices and tools"}, {"link": "", "title": "Statistical Research Methods in the Life Sciences"}, {"link": "", "title": "Navigating and querying code without getting lost"}, {"link": "/document/1698784", "title": "Relo: Helping users manage context during interactive exploratory visualization of large codebases"}, {"link": "", "title": "Concern graphs: finding and describing concerns using structural program dependencies"}, {"link": "", "title": "Code Bubbles: Rethinking the User Interface Paradigm of Integrated Development Environments"}, {"link": "/document/6227113", "title": "Debugger canvas: Industrial experience with the code bubbles paradigm"}, {"link": "", "title": "Blaze"}, {"link": "", "title": "How tools in ides shape developers' navigation behavior"}, {"link": "", "title": "Building usage contexts during program comprehension"}, {"link": "/document/4222646", "title": "Suade: Topology-based searches for software investigation"}, {"link": "", "title": "Exploring the neighborhood with dora to expedite software maintenance"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Developers' code context models for change tasks"}, {"link": "", "title": "Automatically inferring concern code from program investigation activities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202967"}
{"ref": [{"link": "", "title": "Accessing decision-making in software design"}, {"link": "", "title": "Cognitive engineering"}, {"link": "", "title": "Teaching requirements engineering to the Baha'i students in Iran who are denied of higher education"}, {"link": "", "title": "Designing for the digital age"}, {"link": "", "title": "Personas and user-centered design: How can personas benefit product design processes?"}, {"link": "", "title": "Reframing Practice through the use of Personas"}, {"link": "", "title": "Persona ontology for user centred design professionals"}, {"link": "", "title": "Software Engineering 2004: Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering"}, {"link": "", "title": "Software Engineering for the 21 st Century: A basis for rethinking the curriculum"}, {"link": "/document/4638676", "title": "Developing a course on designing software in globally distributed teams"}, {"link": "", "title": "The obstacles and myths of usability and software engineering"}, {"link": "", "title": "Persona-Scenario-Goal Methodology for UserCentered Requirements Engineering"}, {"link": "", "title": "Feasibility and pragmatics of classifying working memory load with an electroencephalograph"}, {"link": "", "title": "Creating effective personas for product design: insights from a case study"}, {"link": "", "title": "An inverted classroom experience: engaging students in architectural thinking for agile projects"}, {"link": "", "title": "Modeling the role of empathic design engaged personas: an emotional design approach"}, {"link": "", "title": "Personas: from theory to practices"}, {"link": "", "title": "An alternative description of personality: the big-five factor structure"}, {"link": "", "title": "The Big Five trait taxonomy: History, measurement, and theoretical perspectives"}, {"link": "", "title": "Exploring personality-targeted UI design in online social participation systems"}, {"link": "", "title": "Influence of personality on satisfaction with mobile phone services"}, {"link": "", "title": "The structure of phenotypic personality traits"}, {"link": "", "title": "personality inventory (NEO-PI-R) and NEO five-factor inventory (NEO-FFI) professional manual, 1992"}, {"link": "", "title": "The development of markers for the Big-Five factor structure"}, {"link": "", "title": "A very brief measure of the Big-Five personality domains"}, {"link": "", "title": "Measuring personality in one minute or less: A 10-item short version of the Big Five Inventory in English and German"}, {"link": "", "title": "Measuring personality traits with ultra-short scales: A study of the Ten Item Personality Inventory (TIP I) in a Spanish sample"}, {"link": "", "title": "Is short in length short in content? An examination of the domain representation of the Ten Item Personality Inventory scales in Dutch language"}, {"link": "", "title": "The relationship between extraversion and neuroticism and the different uses of the Internet"}, {"link": "", "title": "An investigation of Big Five and narrow personality traits in relation to Internet usage"}, {"link": "", "title": "e-Perceptions: personality impressions based on personal websites"}, {"link": "", "title": "E-nabled for E-Learning? The Moderating Role of Personality in Determining the Optimal Degree of Learner Control in an E-Learning Environment"}, {"link": "", "title": "A personality based design approach using subgroup discovery"}, {"link": "", "title": "Personality and technology acceptance: the influence of personality factors on the core constructs of the Technology Acceptance Model"}, {"link": "", "title": "Discovering Statistics Using R"}, {"link": "", "title": "Testing the latent factor structure and construct validity of the Ten-Item Personality Inventory"}, {"link": "", "title": "A model of personality and emotional traits"}, {"link": "", "title": "Using Personality Traits and a Spatial Ability Test to Identify Talented Aspiring Designers in User-Centred Design Methodologies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202971"}
{"ref": [{"link": "/document/1160055", "title": "The vision of autonomic computing"}, {"link": "", "title": "Engineering self-adaptive systems through feedback loops"}, {"link": "", "title": "Self-adaptive software: Landscape and research challenges"}, {"link": "", "title": "Claims and evidence for architecture-based self-adaptation: A systematic literature review"}, {"link": "", "title": "Using architectural style as a basis for system self-repair"}, {"link": "", "title": "Self-managed systems: an architectural challenge"}, {"link": "/document/769885", "title": "An architecture-based approach to self-adaptive software"}, {"link": "", "title": "A survey of autonomic communications"}, {"link": "", "title": "Rainbow: cost-effective software architecture-based self-adaptation"}, {"link": "/document/1350726", "title": "Rainbow: Architecture-based self-adaptation with reusable infrastructure"}, {"link": "", "title": "Stitch: A language for architecture-based self-adaptation"}, {"link": "/document/6197201", "title": "Self-management of adaptable component-based applications"}, {"link": "", "title": "Plan-directed architectural change for autonomous systems"}, {"link": "", "title": "PDDL-the planning domain definition language"}, {"link": "", "title": "Multilevel planning for self-optimizing mechatronic systems"}, {"link": "", "title": "A framework for automatic generation of processes for self-adaptive software systems"}, {"link": "", "title": "Acme vs pddl: support for dynamic reconfiguration of software architectures"}, {"link": "", "title": "Automated planning for software architecture evolution"}, {"link": "", "title": "A taxonomy of uncertainty for dynamically adaptive systems"}, {"link": "/document/6606549", "title": "Managing non-functional uncertainty via model-driven adaptivity"}, {"link": "", "title": "Using quantitative analysis to implement autonomic it systems"}, {"link": "/document/6100064", "title": "Self-adaptive software meets control theory: A preliminary approach supporting reliability requirements"}, {"link": "", "title": "Hope for the best, prepare for the worst: multi-tier control for adaptive systems"}, {"link": "/document/6606552", "title": "Learning revised models for planning in adaptive systems"}, {"link": "", "title": "Fusion: a framework for engineering self-tuning self-adaptive software systems"}, {"link": "", "title": "Impact models for architecture-based self-adaptive systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203094"}
{"ref": [{"link": "", "title": "Power to the people: The role of humans in interactive machine learning"}, {"link": "", "title": "A personal perspective on the evolution of empirical software engineering"}, {"link": "", "title": "Encyclopedia of Software Engineering, chapter The Experience Factory"}, {"link": "", "title": "End-user feature labeling: Supervised and semisupervised approaches based on locally-weighted logistic regression"}, {"link": "/document/6618462", "title": "Software industry experiments: A systematic literature review"}, {"link": "/document/1524918", "title": "The economic impact of learning and flexibility on process decisions"}, {"link": "/document/4012630", "title": "A model for technology transfer in practice"}, {"link": "", "title": "Empirical practice in software engineering"}, {"link": "", "title": "Big Data: A Revolution That Will Transform How We Live, Work, and Think. Houghton Mifflin Harcourt"}, {"link": "", "title": "Empirical software engineering 2.0"}, {"link": "", "title": "Creating minimum viable products in industry-academia collaborations"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "", "title": "The green lab: Experimentation in software energy efficiency"}, {"link": "", "title": "Empirical software engineering models: Can they become the equivalent of physical laws in traditional engineering?"}, {"link": "", "title": "Science 2.0. Science"}, {"link": "", "title": "Research 2.0? IEEE Software"}, {"link": "/document/6547604", "title": "Getting an intuition for big data"}, {"link": "/document/4221632", "title": "The future of empirical methods in software engineering research"}, {"link": "", "title": "Probabilistic topic models"}, {"link": "", "title": "Empirical software engineering 2.0: How mining software repositories changes the game for empirical software engineering research"}, {"link": "", "title": "Failure is a four-letter word: A parody in empirical research"}, {"link": "/document/6559957", "title": "Software analytics in practice"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203018"}
{"ref": [{"link": "", "title": "Elements of information theory"}, {"link": "", "title": "Normalized information distance"}, {"link": "", "title": "Three great challenges for half-century-old computer science"}, {"link": "", "title": "Information theory: structural models for qualitative data. Sage"}, {"link": "", "title": "Feynman's Rainbow: A Search for Beauty in Physics and in Life"}, {"link": "/document/6227083", "title": "Augmenting test suites' effectiveness by increasing output diversity"}, {"link": "", "title": "Coverage and fault detection of the output-uniqueness test selection criteria"}, {"link": "/document/4567005", "title": "Searching for cognitively diverse tests: Towards universal test diversity metrics"}, {"link": "", "title": "Squeeziness: an information theoretic metric for avoiding fault masking"}, {"link": "", "title": "An analysis of the relationship between conditional entropy and failed error propagation in software testing"}, {"link": "", "title": "Prevalence of coincidental correctness and mitigation of its impact on fault localization"}, {"link": "/document/6698888", "title": "Finding test data with specific properties via metaheuristic search"}, {"link": "", "title": "A static analysis for quantifying information flow in a simple imperative language"}, {"link": "", "title": "Measuring coupling and cohesion of software modules: An information-theory approach"}, {"link": "", "title": "A tool: quantitative analyser for programs"}, {"link": "", "title": "Automatically deriving information-theoretic bounds for adaptive side-channel attacks"}, {"link": "", "title": "Kolmogorov complexity justifies software engineering heuristics"}, {"link": "/document/6823896", "title": "Do system test cases grow old?"}, {"link": "", "title": "Studying software evolution using artefacts' shared information content"}, {"link": "", "title": "Fault localization prioritization: Comparing information-theoretic and coverage-based approaches"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203022"}
{"ref": [{"link": "", "title": "Predicting fault-prone components in a java legacy system"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "", "title": "Improving defect prediction using temporal features and non linear models"}, {"link": "", "title": "An overview of data mining techniques"}, {"link": "/document/6224300", "title": "Think locally, act globally: Improving defect and effort prediction models"}, {"link": "", "title": "Bagging predictors"}, {"link": "", "title": "Replicated case studies for investigating quality factors in object-oriented designs"}, {"link": "", "title": "Radial basis functions"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "Fast Effective Rule Induction"}, {"link": "/document/1053964", "title": "Nearest neighbor pattern classification"}, {"link": "", "title": "Evaluating defect prediction approaches: A benchmark and an extensive comparison"}, {"link": "", "title": "Statistical comparisons of classifiers over multiple data sets"}, {"link": "", "title": "An experimental comparison of three methods for constructing ensembles of decision trees: Bagging, boosting, and randomization"}, {"link": "/document/846201", "title": "Leveraging legacy system dollars for e-business"}, {"link": "", "title": "Bayesian regularization for normal mixture estimation and model-based clustering"}, {"link": "", "title": "Experiments with a New Boosting Algorithm"}, {"link": "", "title": "Induction of ripple-down rules applied to modeling large databases"}, {"link": "", "title": "Empirical investigation of metrics for fault prediction on object-oriented software"}, {"link": "/document/1542070", "title": "Empirical validation of object-oriented metrics on open source software for fault prediction"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "Learning the k in k-means"}, {"link": "", "title": "A comparative study of data clustering techniques"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "The random subspace method for constructing decision forests"}, {"link": "", "title": "Scottknott: A package for performing the scott-knott clustering algorithm in r"}, {"link": "", "title": "Personalized defect prediction"}, {"link": "", "title": "Static and dynamic complexity analysis of software metrics"}, {"link": "", "title": "Prioritizing the devices to test your app on: A case study of android game apps"}, {"link": "/document/4693715", "title": "An investigation into the functional form of the size-defect relationship for software modules"}, {"link": "", "title": "Supervised machine learning: A review of classification techniques"}, {"link": "", "title": "Logistic model trees"}, {"link": "", "title": "The effect of locality based learning on software defect prediction"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "", "title": "Metrics that matter"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "Defect prediction from static code features: Current results, limitations, new approaches"}, {"link": "/document/6235961", "title": "Ranking and clustering software cost estimation models through a multiple comparisons algorithm"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "", "title": "Static analysis tools as early indicators of pre-release defect density"}, {"link": "", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "/document/553637", "title": "Predicting fault-prone software modules in telephone switches"}, {"link": "/document/4520171", "title": "Software quality metrics and their impact on embedded software"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "", "title": "Cross-project defect prediction models: L'union fait la force"}, {"link": "", "title": "Better cross company defect prediction"}, {"link": "", "title": "Fast training of support vector machines using sequential minimal optimization"}, {"link": "", "title": "C4. 5: programs for machine learning"}, {"link": "", "title": "On the relation of refactorings and software defect prediction"}, {"link": "/document/1677518", "title": "Rotation forest: A new classifier ensemble method"}, {"link": "", "title": "Intelligence system for software maintenance severity prediction"}, {"link": "", "title": "Quality prediction of function based software using decision tree approach"}, {"link": "", "title": "Metrics for object oriented design software systems: A survey"}, {"link": "/document/6824804", "title": "Researcher bias: The use of machine learning in software defect pre-diction"}, {"link": "/document/6464273", "title": "Data quality: Some comments on the nasa software defect datasets"}, {"link": "", "title": "An exploration of challenges limiting pragmatic software defect prediction"}, {"link": "", "title": "Neural networks in data mining"}, {"link": "/document/1191795", "title": "Empirical analysis of ck metrics for object-oriented design complexity: Implications for software defects"}, {"link": "", "title": "Software defect prediction based on classifiers ensemble"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}, {"link": "", "title": "A scored auc metric for classifier evaluation and selection"}, {"link": "", "title": "Ensemble learning"}, {"link": "", "title": "Predicting Defects for Eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194626"}
{"ref": [{"link": "", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "", "title": "2014 software verification competition"}, {"link": "", "title": "Partial-Order Methods for the Verification of Concurrent Systems: An Approach to the State-Explosion Problem"}, {"link": "", "title": "Finding and reproducing heisenbugs in concurrent programs"}, {"link": "", "title": "Coverage guided systematic concurrency testing"}, {"link": "/document/6227149", "title": "Using dynamic analysis to discover polynomial and array invariants"}, {"link": "", "title": "Using dynamic analysis to generate disjunctive invariants"}, {"link": "", "title": "Trace theory"}, {"link": "", "title": "Model checking for programming languages using verisoft"}, {"link": "", "title": "Transition invariants"}, {"link": "", "title": "Inspect: A runtime model checker for multithreaded C programs"}, {"link": "", "title": "Efficient stateful dynamic partial order reduction"}, {"link": "", "title": "Myths about the mutual exclusion problem"}, {"link": "", "title": "The origin of concurrent programming"}, {"link": "", "title": "Non-blocking data structures"}, {"link": "", "title": "Valgrind: A program supervision frame-work"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Automatic discovery of linear restraints among variables of a program"}, {"link": "", "title": "Linear invariant generation using non-linear constraint solving"}, {"link": "", "title": "Non-linear loop invariant generation using Gr\u00f6bner bases"}, {"link": "", "title": "Generating all polynomial invariants in simple loops"}, {"link": "", "title": "Fields of logic and computation"}, {"link": "", "title": "Automatic verification of integer array programs"}, {"link": "", "title": "What's decidable about arrays?"}, {"link": "", "title": "Invariant and type inference for matrices"}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "", "title": "DySy: Dynamic symbolic execution for invariant inference"}, {"link": "", "title": "From daikon to agitator: Lessons and challenges in building a commercial tool for developer testing"}, {"link": "", "title": "Iodine: A tool to automatically infer dynamic invariants for hardware designs"}, {"link": "", "title": "A practical loop invariant generation approach based on random testing, constraint solving and verification"}, {"link": "", "title": "A data driven approach for algebraic loop invariants"}, {"link": "", "title": "Multithreaded java program test generation"}, {"link": "", "title": "Bounded partial-order reduction"}, {"link": "", "title": "Variable and thread bounding for systematic testing of multithreaded programs"}, {"link": "", "title": "Delay-bounded scheduling"}, {"link": "", "title": "Ctrigger: Exposing atomicity violation bugs from their hiding places"}, {"link": "", "title": "CalFuzzer: An extensible active testing framework for concurrent programs"}, {"link": "", "title": "PENELOPE: Weaving threads to expose atomicity violations"}, {"link": "", "title": "Maple: A coverage-driven testing tool for multithreaded programs"}, {"link": "", "title": "Dynamic model checking with property driven pruning to detect race conditions"}, {"link": "", "title": "Assertion guided abstraction: A cooperative optimization for dynamic partial order reduction"}, {"link": "", "title": "Concurrency testing using schedule bounding: An empirical study"}, {"link": "", "title": "The impact of concurrent coverage metrics on testing effectiveness"}, {"link": "", "title": "Testing concurrent programs to achieve high synchronization coverage"}, {"link": "", "title": "A serializability violation detector for shared-memory server programs"}, {"link": "", "title": "Avio: Detecting atomcity violations via access interleaving invariants"}, {"link": "/document/1599419", "title": "Runtime analysis of atomicity for multithreaded programs"}, {"link": "", "title": "Jpredictor: A predictive runtime analysis tool for java"}, {"link": "", "title": "Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis"}, {"link": "/document/5970516", "title": "Predictive analysis for detecting serializability violations through trace segmentation"}, {"link": "", "title": "Trace-based symbolic analysis for atomicity violations"}, {"link": "", "title": "Universal Causality Graphs: A precise happens-before model for detecting bugs in concurrent programs"}, {"link": "", "title": "Predicting serializability violations: SMT-based search vs. DPOR-based search"}, {"link": "", "title": "Generating data race witnesses by an SMT-based analysis"}, {"link": "", "title": "On interference abstractions"}, {"link": "", "title": "DETERMIN: Inferring likely deterministic specifications of multithreaded programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194630"}
{"ref": [{"link": "", "title": "A forensic analysis of Android malware. how is malware written and how it could be detected"}, {"link": "", "title": "Drebin: Effective and explainable detection of android malware in your pocket"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "PScout: analyzing the Android permission specification"}, {"link": "", "title": "Mining distance-based outliers in near linear time with randomization and a simple pruning rule"}, {"link": "", "title": "Mast: Triage for market-scale mobile malware analysis"}, {"link": "", "title": "A tutorial on v-support vector machines"}, {"link": "", "title": "TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "On lightweight mobile phone application certification"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware through static analysis"}, {"link": "", "title": "Androidleaks: Automatically detecting potential privacy leaks in Android applications on a large scale"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "/document/6224306", "title": "App store mining and analysis: MSR for app stores"}, {"link": "", "title": "Asdroid: Detecting stealthy behaviors in Android applications by user interface and program behavior contradiction"}, {"link": "", "title": "Android taint flow analysis for app sets"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "I know what leaked in your pocket: uncovering privacy leaks on Android apps with static taint analysis"}, {"link": "", "title": "Android and security"}, {"link": "", "title": "Understanding reuse in the Android market"}, {"link": "", "title": "WHYPER: Towards automating risk assessment of mobile applications"}, {"link": "", "title": "Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications"}, {"link": "", "title": "AutoCog: Measuring the description-to-permission fidelity in Android applications"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing Android sources and sinks"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "On the relationship between the number of ad libraries in an Android app and its rating"}, {"link": "", "title": "Information flows as a permission mechanism"}, {"link": "", "title": "Asking for (and about) permissions used by Android apps"}, {"link": "", "title": ""}, {"link": "", "title": "Leakminer: Detect information leakage on Android with static taint analysis"}, {"link": "/document/6234407", "title": "Dissecting Android malware: Characterization and evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194594"}
{"ref": [{"link": "", "title": "Analysis of research into the teaching and learning of programming"}, {"link": "", "title": "Development of a structured interview for assessing student use of self-regulated learning strategies"}, {"link": "", "title": "Promoting self-regulation in science education: Metacognition as part of a broader perspective on learning"}, {"link": "", "title": "The development of measures of individual differences in self-regulatory control and their relationship to academic performance"}, {"link": "", "title": "Inherent details in self-regulated learning"}, {"link": "", "title": "Novices on the computer: A review of the literature"}, {"link": "", "title": "The role of knowledge in software development"}, {"link": "", "title": "The Reflective Practitioner: How Professionals Think in Action"}, {"link": "", "title": "Csl students speak: Advice for students by students"}, {"link": "", "title": "Self-efficacy and mental models in learning to program"}, {"link": "", "title": "Identifying computer science self-regulated learning strategies"}, {"link": "", "title": "Student Motivation, Cognition and Learning: Essays in Honor of Wilbert J. McKeachie"}, {"link": "", "title": "Self-Regulated Learning"}, {"link": "", "title": "The generality vs domain-specificity of metacognitive skills in novice learning across domains"}, {"link": "", "title": "Is abstraction the key to computing?"}, {"link": "", "title": "Problem perception and knowledge structure in expert and novice mathematical problem solvers"}, {"link": "", "title": "Day one of the objects-first first course: what to do"}, {"link": "", "title": "Modelling and coaching of relevant metacognitive strategies for enhancing university students' learning"}, {"link": "", "title": "Cognitive Development: Neo-Piagetian Perspectives"}, {"link": "", "title": "Mind in Society: The Development of Higher Psychological Processes"}, {"link": "", "title": "Experience report: Getting novice programmers to think about improving their software development process"}, {"link": "", "title": "A review of literature on teaching engineering design through project-oriented capstone courses"}, {"link": "", "title": "Evaluating gamedevtycoon for teaching software engineering"}, {"link": "", "title": "Introduction to the personal software process (sm)"}, {"link": "/document/827035", "title": "The personal software process in the classroom: Student reactions (an experience report)"}, {"link": "/document/730851", "title": "The personal software process: A cautionary case study"}, {"link": "/document/6245002", "title": "Changes in transferable knowledge resulting from study in a graduate software engineering curriculum"}, {"link": "", "title": "The case study approach"}, {"link": "", "title": "Qualitative inquiry and research design: choosing among five approaches"}, {"link": "", "title": "Sample size in qualitative research"}, {"link": "", "title": "Application of social research methods to questions in information and library science"}, {"link": "", "title": "A social cognitive view of self-regulated academic learning"}, {"link": "", "title": "Integrated and Holistic Perspectives on Learning, Instruction and Technology"}, {"link": "", "title": "The abstraction transition taxonomy: developing desired learning outcomes through the lens of situated cognition"}, {"link": "", "title": "Integrating software process in computer science curriculum"}, {"link": "", "title": "Using project-based learning to teach object oriented application development"}, {"link": "/document/5487434", "title": "Teaching agile software development: A case study"}, {"link": "", "title": "Adapting extreme programming for a core software engineering course"}, {"link": "/document/5765710", "title": "A capstone course on agile software development using scrum"}, {"link": "", "title": "Integrating testing into the curriculum &mdash; arsenic in small doses"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202969"}
{"ref": [{"link": "/document/4385252", "title": "Teaching Software Evolution in Open Source"}, {"link": "/document/1191369", "title": "A Practical Approach of Teaching Software Engineering"}, {"link": "", "title": "Multi-site Evaluation of SimSE"}, {"link": "", "title": "Introducing Students to Professional Software Construction: A Software Construction and Maintenance Course and its Maintenance Corpus"}, {"link": "", "title": "Teaching Practical Software Maintenance Skills in a Software Engineering Course"}, {"link": "", "title": "Experiments with Adding to the Experience that can be Acquired from Software Courses"}, {"link": "", "title": "Including practical software evolution in software engineering education"}, {"link": "", "title": "Comprehending reality - practical barriers to industrial adoption of software maintenance automation"}, {"link": "", "title": "Program understanding behaviour during enhancement of large-scale software"}, {"link": "", "title": "Gaps between industry expectations and the abilities of graduates"}, {"link": "", "title": "Student projects are not throwaways: Teaching practical software maintenance in a software engineering course"}, {"link": "", "title": "Software Engineering 2004: Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering"}, {"link": "/document/4221609", "title": "Improving Software Practice Through Education: Challenges and Future Trends"}, {"link": "/document/1309648", "title": "Incremental Change in Object-oriented Programming"}, {"link": "", "title": "Difficulties experienced by students in maintaining object-oriented systems: an empirical study"}, {"link": "", "title": "Strategies that students use to trace code: an analysis based in grounded theory"}, {"link": "/document/402076", "title": "Program comprehension during software maintenance and evolution"}, {"link": "", "title": "Designing documentation to compensate for delocalized plans"}, {"link": "", "title": "Mental models and software maintenance"}, {"link": "", "title": "Integrating software process in computer science curriculum"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202973"}
{"ref": [{"link": "/document/4273282", "title": "Designing Tool Support for Translating Use Cases and UML 2.0 Sequence Diagrams into a Coloured Petri Net"}, {"link": "", "title": "Model Checking of UML 2.0 Interactions"}, {"link": "", "title": "Flexible Modular Formalization of UML Sequence Diagrams"}, {"link": "", "title": "Object Management Group: UML 2.4. 1 Superstructure Specification, formal/2011\u201308-06"}, {"link": "", "title": "The many meanings of UML 2 Sequence Diagrams: a survey"}, {"link": "", "title": "The Zot Bounded Model/Satisfiability Checker"}, {"link": "", "title": "Linear Encodings of Bounded LTL Model Checking"}, {"link": "", "title": "Efficient Scalable Verification of LTL Specifications"}, {"link": "", "title": "NuSMV 2: An OpenSource Tool for Symbolic Model Checking"}, {"link": "", "title": "Incremental and Complete Bounded Model Checking for Full PLTL"}, {"link": "", "title": "Transition from Global to Modular Temporal Reasoning about Programs"}, {"link": "", "title": "Counterexample-guided Abstraction Refinement for Symbolic Model Checking"}, {"link": "", "title": "Symbolic Model Checking without BDDs"}, {"link": "", "title": "Simple Is Better: Efficient Bounded Model Checking for Past LTL"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203096"}
{"ref": [{"link": "", "title": "Software Modeling and Measurement: The Goal/Question/Metric Paradigm"}, {"link": "/document/799939", "title": "Building Knowledge through Families of Experiments"}, {"link": "/document/6312975", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "Presenting Software Engineering Results Using Structured Abstracts: A Randomised Experiment"}, {"link": "", "title": "A Systematic Review of Statistical Power in software Engineering Experiments"}, {"link": "", "title": "An Experiment about Static and Dynamic Type Sytems: Doubts about the Positive Impact of Static Type Systems on Development Time"}, {"link": "", "title": "Using Students as Subjects: A Comparative Study of Students and Professionals in Lead-Time Impact Assessment"}, {"link": "", "title": "Card Sorting"}, {"link": "", "title": "A Method for Evaluating Rigor and Industrial Relevance of Technology Evaluations"}, {"link": "", "title": "Reporting Experiments in Software Engineering"}, {"link": "", "title": "Reporting Guidelines for Controlled Experiments in Software Engineering"}, {"link": "", "title": "Basics of Software Engineering Experimentation"}, {"link": "", "title": "The Role of Non-exact Replications in Software Engineering Experiments"}, {"link": "", "title": "A Systematic Review of Quasi-Experiments in Software Engineering"}, {"link": "", "title": "Evaluating Guidelines for Reporting Empirical Software Engineering Studies"}, {"link": "", "title": "Systematic Literature Reviews in Software Engineering: A Systematic Literature Review"}, {"link": "/document/6083161", "title": "Repeatability of Systematic Literature Reviews"}, {"link": "", "title": "Guidelines for Performing Systematic Literature Reviews in Software Engineering"}, {"link": "", "title": "A Practical Guide to Controlled Experiments of Software Engineering Tools with Human Participants"}, {"link": "", "title": "On the Difficulty of Replicating Human Subjects Studies in Software Engineering"}, {"link": "", "title": "Diversity in Software Engineering Research"}, {"link": "/document/5287010", "title": "Point: Empirical Research in Software Engineering: A Critical View"}, {"link": "/document/6227188", "title": "How Do Professional Developers Comprehend Software?"}, {"link": "", "title": "Teachers' Expectancies: Determinants of Pupils' IQ Gains"}, {"link": "", "title": "Experimental and Quasi-Experimental Designs for Generalized Causal Inference"}, {"link": "", "title": "Research Toward an Engineering Discipline for Software"}, {"link": "", "title": "The Role of Replications in Empirical Software Engineering"}, {"link": "", "title": "Confounding Parameters on Program Comprehension: A Literature Survey"}, {"link": "/document/1166921", "title": "Conducting Realistic Experiments in Software Engineering"}, {"link": "/document/4221632", "title": "The Future of Empirical Methods in Software Engineering Research"}, {"link": "/document/1514443", "title": "A Survey of Controlled Experiments in Software Engineering"}, {"link": "", "title": "Using Students as Subjects: An Empirical Evaluation"}, {"link": "", "title": "Hints for Reviewing Empirical Work in Software Engineering"}, {"link": "", "title": "Experimental Evaluation in Computer Science: A Quantitative Study"}, {"link": "/document/675631", "title": "Should Computer Scientists Experiment More?"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}, {"link": "", "title": "On the Success of Empirical Studies in the International Conference on Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194557"}
{"ref": [{"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "/document/6200122", "title": "An effective regression testing approach for php web applications"}, {"link": "", "title": "Selenium \u2013 Web Browser Automation"}, {"link": "", "title": "Mozmill \u2013 Mozilla \u2013 MDN"}, {"link": "", "title": "Automation Testing Software Tools, QuickTest Professional, (Unified Functional Testing) UFT \u2013 HP Official Site"}, {"link": "", "title": "Efficient mutation testing by checking invariant violations"}, {"link": "", "title": "Dynamically inferring, refining, and checking api usage protocols"}, {"link": "", "title": "Behind the scenes: An approach to incorporate context in GUI test case"}, {"link": "/document/6606562", "title": "Guided test generation for web applications"}, {"link": "", "title": "Using search-based algorithms for ajax event sequence generation during testing"}, {"link": "", "title": "Invariant-based automatic testing of ajax user interfaces"}, {"link": "", "title": "An empirical validation of a web fault taxonomy and its usage for web testing"}, {"link": "", "title": "Event listener analysis and symbolic execution for testing GUI applications"}, {"link": "", "title": "Experiences of system-level model-based GUI testing of an android application"}, {"link": "", "title": "GUI software fault localization using N-gram analysis"}, {"link": "", "title": "Algorithms for the detection of defects in GUI applications"}, {"link": "", "title": "Design and analysis of GUI test-case prioritization using weight-based methods"}, {"link": "/document/6227083", "title": "Augmenting test suites effectiveness by increasing output diversity"}, {"link": "", "title": "Coverage and fault detection of the output-uniqueness test selection criteria"}, {"link": "", "title": "Test case prioritization for regression testing of service-oriented business applications"}, {"link": "/document/6100082", "title": "Automated web application testing using search based software engineering"}, {"link": "", "title": "An empirical comparison of the fault-detection capabilities of internal oracles"}, {"link": "", "title": "Automated replay and failure detection for web applications"}, {"link": "/document/6200180", "title": "Guicop: Specification-based gui testing"}, {"link": "", "title": "A toolset for gui testing of android applications"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "Automated testing of GUI applications: Models, tools, and controlling flakiness"}, {"link": "", "title": "Automated unit test generation for classes with environment dependencies"}, {"link": "", "title": "Empirically revisiting the test independence assumption"}, {"link": "", "title": "Repairing GUI test suites using a genetic algorithm"}, {"link": "", "title": "COMET \u2013 Community Event-based Testing"}, {"link": "", "title": "Configuration-aware regression testing: An empirical study of sampling and prioritization"}, {"link": "", "title": "Covering array sampling of input event sequences for automated GUI testing"}, {"link": "", "title": "GUITAR \u2013 a GUI Testing frAmewoRk"}, {"link": "", "title": "GUITAR: an innovative tool for automated testing of gui-driven software"}, {"link": "", "title": "Cobertura"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Entropy-based test generation for improved fault localization"}, {"link": "", "title": "An analysis of the relationship between conditional entropy and failed error propagation in software testing"}, {"link": "", "title": "Virtual DOM coverage for effective testing of dynamic web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194561"}
{"ref": [{"link": "", "title": "An Example of Software System Debug-ging"}, {"link": "", "title": "Is it a Bug or an Enhancement? A Text-based Approach to Classify Change Requests"}, {"link": "", "title": "The Secret Life of Bugs: Going Past the Errors and Omissions in Software Repos-itories"}, {"link": "", "title": "A Systematic and Comprehensive Investigation of Methods to Build and Evaluate Fault Prediction Models"}, {"link": "", "title": "The Missing Links: Bugs and Bug-fix Commits"}, {"link": "", "title": "Fair and Balanced? Bias in Bug-Fix Datasets"}, {"link": "", "title": "Don't Touch My Code! Examining the Effects of Ownership on Software Quality"}, {"link": "", "title": "Random Forests"}, {"link": "", "title": "boot: Bootstrap R (S-Plus) Functions"}, {"link": "/document/5166450", "title": "Software Dependencies, Work Dependencies, and Their Impact on Failures"}, {"link": "", "title": "An Extensive Comparison of Bug Prediction Approaches"}, {"link": "", "title": "An Introduction to the Bootstrap"}, {"link": "", "title": "An Empirical Study of Just-in-Time Defect Prediction using Cross-Project Models"}, {"link": "", "title": "An Exploratory Study of the Pull-Based Software Development Model"}, {"link": "/document/6035727", "title": "A Systematic Literature Review on Fault Prediction Performance in Software Engineering"}, {"link": "", "title": "Regression Modeling Strategies"}, {"link": "/document/5070510", "title": "Predicting Faults Using the Complexity of Code Changes"}, {"link": "/document/1510122", "title": "The Top Ten List: Dynamic Fault Prediction"}, {"link": "", "title": "It's Not a Bug, It's a Feature: How Misclassication Impacts Bug Prediction"}, {"link": "", "title": "The Impact of Tangled Code Changes"}, {"link": "", "title": "ScottKnott: A Package for Performing the Scott-Knott Clustering Algorithm in R"}, {"link": "", "title": "Can Data Transformation Help in the Detection of Fault-prone Modules?"}, {"link": "/document/6341763", "title": "A Large-Scale Empirical Study of Just-in- Time Quality Assurance"}, {"link": "/document/5609530", "title": "Revisiting Common Bug Prediction Findings Using Effort-Aware Models"}, {"link": "", "title": "Beanplot: A Boxplot Alternative for Visual Comparison of Distributions"}, {"link": "", "title": "Dealing with Noise in Defect Prediction"}, {"link": "", "title": "Predicting Faults from Cached History"}, {"link": "/document/4527256", "title": "Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings"}, {"link": "", "title": "bigrf: Big Random Forests: Classification and Regression Forests for Large Data Sets"}, {"link": "", "title": "The Impact of Code Review Coverage and Code Review Participation on Software Quality"}, {"link": "", "title": "Missing Data in Software Engineering"}, {"link": "", "title": "Organizational Volatility and its Effects on Software Defects"}, {"link": "", "title": "Predicting Risk of Software Changes"}, {"link": "", "title": "A Comparative Analysis of the Efficiency of Change Metrics and Static Code Attributes for Defect Prediction"}, {"link": "", "title": "The Influence of Organizational Structure on Software Quality: An Empirical Case Study"}, {"link": "", "title": "Change Bursts as Defect Predictors"}, {"link": "", "title": "Multi-layered Approach for Recovering Links between Bug Reports and Fixes"}, {"link": "/document/5645567", "title": "A Case Study of Bias in Bug-Fix Datasets"}, {"link": "", "title": "Software Fault Prediction Metrics: A Systematic Literature Review"}, {"link": "", "title": "How, and Why, Process Metrics Are Better"}, {"link": "", "title": "Sample Size vs. Bias in Defect Prediction"}, {"link": "", "title": "BugCache for Inspections: Hit or Miss?"}, {"link": "", "title": "A Cluster Analysis Method for Grouping Means in the Analysis of Variance"}, {"link": "", "title": "An Empirical Study of the Classification Performance of Learners on Imbalanced and Noisy Software Quality Data"}, {"link": "", "title": "An Exploration of Challenges Limiting Pragmatic Software Defect Prediction"}, {"link": "", "title": "Understanding the Impact of Code and Process Metrics on Post-Release Defects: A Case Study on the Eclipse Project"}, {"link": "", "title": "High-Impact Defects: A Study of Breakage and Surprise Defects"}, {"link": "", "title": "Improving Random Forests"}, {"link": "", "title": "Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models"}, {"link": "", "title": "ReLink: Recovering Links between Bugs and Changes"}, {"link": "", "title": "Predicting Defects for Eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194628"}
{"ref": [{"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "MAPO: Mining and Recommending API Usage Patterns"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Recommending adaptive changes for framework evolution"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6693078", "title": "A study of repetitiveness of code changes in software evolution"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "/document/4492791", "title": "Discovering neglected conditions in software by mining dependence graphs"}, {"link": "", "title": "Mining scenario-based triggers and effects"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Enabling static analysis for partial Java programs"}, {"link": "", "title": "Eclipse"}, {"link": "", "title": "Intellisense"}, {"link": "", "title": "Informer"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Using local similarity measures to efficiently address approximate graph matching"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "", "title": "Code template inference using language models"}, {"link": "", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Code completion from abbreviated input"}, {"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "", "title": "How program history can improve code completion"}, {"link": "", "title": "An evaluation of the strategies of sorting, filtering, and grouping API methods for code completion"}, {"link": "", "title": "Automatic method completion"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Recommending Source Code Examples via API Call Usages and Documentation"}, {"link": "/document/6693127", "title": "Export: Detecting and visualizing api usages in large source code repositories"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "/document/5989838", "title": "Exemplar: A source code search engine for finding highly relevant applications"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "/document/6227136", "title": "Automatic parameter recommendation for practical API usage"}, {"link": "/document/6227133", "title": "Active code completion"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Toward semantic search via smt solver"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194632"}
{"ref": [{"link": "", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "Understanding Open Source Software Development"}, {"link": "", "title": "Small patches get in!"}, {"link": "/document/1463233", "title": "Toward understanding the rhetoric of small source code changes"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Semfix: program repair via semantic analysis"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "A human study of patch maintainability"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for$8 each"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "VCC: A practical system for verifying concurrent C"}, {"link": "", "title": "Cause clue clauses: error localization using maximum satisfiability"}, {"link": "", "title": "Error invariants"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "The SMT-LIB standard version 2.0"}, {"link": "", "title": "On solving the partial max-sat problem"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Extraction of bug localization benchmarks from history"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Detecting and escaping infinite loops with Jolt"}, {"link": "", "title": "Inference and enforcement of data structure consistency specifications"}, {"link": "", "title": "Dira: Automatic detection, identification and repair of control-hijacking attacks"}, {"link": "/document/1556535", "title": "Countering network worms through automatic patch generation"}, {"link": "", "title": "Exterminator: Automatically correcting memory errors with high probability"}, {"link": "", "title": "Automated debugging using path-based weakest preconditions"}, {"link": "", "title": "Program repair as a game"}, {"link": "", "title": "Specification-based program repair using SAT"}, {"link": "", "title": "Autoaated error localization and correction for imperative programs"}, {"link": "", "title": "Falling back on executable specifications"}, {"link": "", "title": "Juzi: a tool for repairing complex data structures"}, {"link": "", "title": "Evolutionary repair of faulty software"}, {"link": "/document/6823889", "title": "An assessment of the quality of automated program operator repair"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with SMT"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194596"}
{"ref": [{"link": "/document/989787", "title": "Testera: A novel framework for automated testing of java programs"}, {"link": "", "title": "Korat: automated testing based on java predicates"}, {"link": "", "title": "Automated testing of refactoring engines"}, {"link": "", "title": "Test generation through programming in udita"}, {"link": "", "title": "Alloy: a lightweight object modelling notation"}, {"link": "", "title": "Cute: a concolic unit testing engine for c"}, {"link": "", "title": "Pex: white box test generation for. net"}, {"link": "", "title": "Dart: directed automated random testing"}, {"link": "", "title": "Klee: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Decision Procedures: An Algorithmic Point of View"}, {"link": "", "title": "Reducing the costs of bounded-exhaustive testing"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Generation of test data structures using constraint logic programming"}, {"link": "", "title": "An abstract prolog instruction set"}, {"link": "", "title": "Instruction merging and specialization in the sicstus prolog virtual machine"}, {"link": "/document/108055", "title": "High-performance logic programming with the aquarius prolog compiler"}, {"link": "", "title": "The gnu prolog system and its implementation"}, {"link": "", "title": "Solving the incremental satisfiability problem"}, {"link": "", "title": "Satire: A new incremental satisfiability engine"}, {"link": "", "title": "Prolog \u2013 the language and its implementation compared with lisp"}, {"link": "", "title": "Software assurance by bounded exhaustive testing"}, {"link": "", "title": "An evaluation of exhaustive testing for data structures"}, {"link": "", "title": "Introducing jsfunfuzz"}, {"link": "", "title": "SWI-Prolog"}, {"link": "", "title": "A proposal for disequality constraints in curry"}, {"link": "", "title": "Store-passing style"}, {"link": "", "title": "The eval that men do: A large-scale study of the use of eval in javascript applications"}, {"link": "", "title": "The Craft of Prolog"}, {"link": "", "title": "Language fuzzing using constraint logic programming"}, {"link": "", "title": "Windows 95 animated cursor format"}, {"link": "", "title": "Proving memory safety of the ani windows image parser using compositional exhaustive testing"}, {"link": "", "title": "Concurrent maintenance of skip lists"}, {"link": "", "title": "Self-adjusting binary search trees"}, {"link": "", "title": "Organization and maintenance of large ordered indices"}, {"link": "", "title": "Binary b-trees for virtual memory"}, {"link": "", "title": "The gnu prolog website"}, {"link": "", "title": "Automatic software model checking via constraint logic"}, {"link": "", "title": "Test case generation for object-oriented imperative languages in CLP*"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194559"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194563"}
{"ref": [{"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Leveraging usage similarity for effective retrieval of examples in code repositories"}, {"link": "", "title": "SNIFF: A search engine for java using free-form queries"}, {"link": "/document/1553554", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming prompter"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "", "title": "MAPO: Mining API usages from open source repositories"}, {"link": "/document/6624045", "title": "Mining succinct and high-coverage API usage patterns from source code"}, {"link": "", "title": "MAPO: mining and recommending API usage patterns"}, {"link": "", "title": "How can I use this method? The MUSE approach. Replication package"}, {"link": "", "title": "Identification of extract method refactoring opportunities for the decomposition of methods"}, {"link": "", "title": "Simian - Similarity Analyser"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/5332232", "title": "Learning a metric for code readability"}, {"link": "", "title": "Questionnaire Design, Interviewing and Attitude Measurement"}, {"link": "", "title": "Practical Nonparametric Statistics"}, {"link": "", "title": "Effect sizes for research: A broad practical approach"}, {"link": "", "title": "Modern permutation test software"}, {"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "", "title": "Selection and presentation practices for code example summarization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194634"}
{"ref": [{"link": "", "title": "Cpython 5b0fda regression bug report"}, {"link": "", "title": "Cpython 5b0fda source code"}, {"link": "", "title": "Cpython b878df regression bug report"}, {"link": "", "title": "Cpython b878df source code"}, {"link": "", "title": "Indent version 2.2.10 regression bug report"}, {"link": "", "title": "Indent version 2.2.10 source code"}, {"link": "", "title": "Perl bb9ee9 regression bug report"}, {"link": "", "title": "Perl bb9ee9 source code"}, {"link": "", "title": "Perl dca606 regression bug report"}, {"link": "", "title": "Perl dca606 source code"}, {"link": "", "title": "Tar version 1.14 regression bug report"}, {"link": "", "title": "Tar version 1.14 source code"}, {"link": "", "title": "Vim commit 220906 regression bug report"}, {"link": "", "title": "Vim commit 220906 source code"}, {"link": "", "title": "Vim version 7.2.50 regression bug report"}, {"link": "", "title": "Vim version 7.2.50 source code"}, {"link": "", "title": "Vim version 7.3.202 regression bug report"}, {"link": "", "title": "Vim version 7.3.202 source code"}, {"link": "", "title": "Vim version 7.3.251 regression bug report"}, {"link": "", "title": "Vim version 7.3.251 source code"}, {"link": "", "title": "A practical evaluation of spectrum-based fault localization"}, {"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "/document/4344104", "title": "On the accuracy of spectrum-based fault localization"}, {"link": "", "title": "Semantic differential repair for input validation and sanitization"}, {"link": "/document/6100114", "title": "Fault-localization using dynamic slicing and change impact analysis"}, {"link": "", "title": "A novel co-evolutionary approach to automatic software bug fixing"}, {"link": "", "title": "Golden implementation driven software debugging"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "Corebench: Studying complexity of regression errors"}, {"link": "", "title": "Generating fixes from object behavior anomalies"}, {"link": "", "title": "Program mutation: A new approach to program testing"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "A genetic programming approach to automated software repair"}, {"link": "", "title": "Bugfix: A learning-based tool to assist developers in fixing bugs"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6035728", "title": "Genprog: A generic method for automatic software repair"}, {"link": "", "title": "R2Fix: Automatically generating bug fixes from bug reports"}, {"link": "/document/6676914", "title": "Automatically extracting instances of code change patterns with ast analysis"}, {"link": "", "title": "Mining repair actions for guiding automated program fixing"}, {"link": "", "title": "Do the fix ingredients already exist? an empirical inquiry into the redundancy assumptions of program repair approaches"}, {"link": "", "title": "A critical review of \u201cautomatic patch generation learned from human-written patches\u201d: Essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "Towards a better understanding of testing if conditionals"}, {"link": "", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Toward an understanding of bug fix patterns"}, {"link": "", "title": "Darwin: An approach to debugging evolving programs"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Chianti: A tool for change impact analysis of java programs"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Automated repair of html generation errors in php applications using string constraint solving"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Towards automated debugging in software evolution: Evaluating delta debugging on real regression bugs from the developers' perspectives"}, {"link": "", "title": "Yesterday, my program worked. today, it does not. why?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194598"}
{"ref": [{"link": "", "title": "Computer Science Curricula 2013: Curriculum Guidelines for Undergraduate Degree Programs in Computer Science. ACM, Inc"}, {"link": "/document/4287121", "title": "Best Practices Involving Teamwork in the Classroom: Results From a Survey of 6435 Engineering Student Respondents"}, {"link": "/document/6225704", "title": "Teamwork, coordination and customer relationship management skills: as important as technical skills in preparing our SE graduates"}, {"link": "/document/6816787", "title": "Improving teamwork in students software projects"}, {"link": "", "title": "Improving Group Work: Voices of Students"}, {"link": "", "title": "Benefits and Problems With Student Teams: Suggestions for Improving Team Projects"}, {"link": "", "title": "A Pattern Language: Towns, Buildings, Construction"}, {"link": "", "title": "Design Patterns: elements of reusable object-oriented software"}, {"link": "", "title": "Pedagogical Patterns Editorial Board"}, {"link": "", "title": "Learning Patterns III - A Pattern Language for Creative Learning"}, {"link": "", "title": "Using pattern mining for competency-focused education"}, {"link": "", "title": "Learning Patterns for Group Assignments - Part 1"}, {"link": "", "title": "Learning Patterns for Group Assignments - Part 2"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202977"}
{"ref": [{"link": "", "title": "Using wiki technology to support student engagement: Lessons from the trenches"}, {"link": "", "title": "Collaborative knowledge building with wikis"}, {"link": "", "title": "Peer instruction: Ten years of experience and results"}, {"link": "", "title": "Using wikis for collaborative learning"}, {"link": "", "title": "Inverting the classroom"}, {"link": "", "title": "Wikis to support collaborative learning"}, {"link": "", "title": "Using wikis for collaborative learning"}, {"link": "", "title": "The responsive classroom discussion"}, {"link": "", "title": "Essential elements of team based learning"}, {"link": "", "title": "Collaborative critical thinking"}, {"link": "", "title": "The early growth of logic in the child"}, {"link": "", "title": "Situating CoWeb: A scholarship of application"}, {"link": "", "title": "Computer supported learning environments"}, {"link": "", "title": "Distributed cognition"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202981"}
{"ref": [{"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "/document/6227140", "title": "Synthesizing api usage examples"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "/document/6227187", "title": "sking and answering questions about unfamiliar apis: An exploratory study"}, {"link": "", "title": "Tidier: an identifier splitting approach using speech recognition techniques"}, {"link": "", "title": "Supporting program comprehension with source code summarization"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Design lessons from the fastest q&a site in the west"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Recovery of traceability links between software documentation and source code"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Some methods for classification and analysis of multivariate observations"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Lightweight Structural Summarization as an Aid to Software Evolution. University of Washington"}, {"link": "", "title": "Lexical statistical machine translation for language migration"}, {"link": "/document/6704866", "title": "Automatic summarization of bug reports"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Term-weighting approaches in automatic text retrieval"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Live api documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203032"}
{"ref": [{"link": "", "title": "Agitar Code Coverage"}, {"link": "", "title": "Clover Java Code Coverage"}, {"link": "", "title": "IBM Rational Pure Coverage"}, {"link": "", "title": "Jcover Java code coverage analyzer"}, {"link": "", "title": "Purify Plus run-time analysis tools for application reliability and perfor-mance"}, {"link": "", "title": "MC/DC automatic test input data generation"}, {"link": "", "title": "Efficient leveraging of symbolic execution to advanced coverage criteria"}, {"link": "", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Evaluating regression test suites based on their fault exposure capability"}, {"link": "", "title": "Automatic test data generation for multiple condition and mc/dc coverage"}, {"link": "", "title": "A methodology for controlling the size of a test suite"}, {"link": "", "title": "A practical tutorial on modified condition/decision coverage"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Model-Based Safety Analysis of Simulink Models Using SCADE Design Verifier"}, {"link": "", "title": "Automated test data generation for coverage: Haven't we solved this problem yet?"}, {"link": "", "title": "An automatically-generated run-time instrumenter to reduce coverage testing overhead"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Demand-driven structural testing with dynamic instrumentation"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of Java bytecode"}, {"link": "", "title": "Symbolic Pathfinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Selecting software test data using data flow information"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "/document/738487", "title": "An empirical study of the effects of minimization on the fault detection capabilities of test suites"}, {"link": "", "title": "RTCA/DO-178C"}, {"link": "/document/6405261", "title": "A change impact analysis to characterize evolving program behaviors"}, {"link": "", "title": "SAE-ARP4761"}, {"link": "", "title": "CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "Towards a framework for generating tests to satisfy complex code coverage in java pathfinder"}, {"link": "", "title": "On the danger of coverage directed test case generation"}, {"link": "", "title": "Generative programming for embedded systems"}, {"link": "", "title": "Efficient instrumentation for code coverage testing"}, {"link": "", "title": "Analyzing dynamic binary instrumentation overhead"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Test input generation for Java containers using state matching"}, {"link": "", "title": "Efficient test coverage measurement for mc/dc"}, {"link": "", "title": "A survey of coverage based testing tools"}, {"link": "/document/199633", "title": "Test data adequacy measurement"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194601"}
{"ref": [{"link": "", "title": "Marketer Perceptions of Mobile Advertising"}, {"link": "", "title": "Mobile Advertising Begins to Take Off"}, {"link": "", "title": "Driven by Facebook and Google"}, {"link": "", "title": "At $11.6 Billion in Q1 2014, Internet Advertising Revenues Hit All-Time First Quarter High. Interactive Advertising Bureau"}, {"link": "", "title": "Gartner Says Mobile Advertising Spending Will Reach 18 Billion in 2014"}, {"link": "", "title": "IAB Interactive Advertising Outlook 2014"}, {"link": "", "title": "Impact of Ad Libraries on Ratings of Android Mobile Apps"}, {"link": "", "title": "The Value Of Rewarded Advertising. Rewarded Ad Formats Boost Consumer Receptivity To In-App Ads"}, {"link": "", "title": "Making Web Applications More Energy Efficient for OLED Smartphones"}, {"link": "", "title": "An Empirical Study of the Energy Consumption of Android Applications"}, {"link": "", "title": ""}, {"link": "", "title": "On Ad Library Updates in Android Apps"}, {"link": "/document/6224306", "title": "App Store Mining and Analysis: MSR for App Stores"}, {"link": "", "title": "Factors influencing consumers' willingness to accept mobile advertising: a conceptual model"}, {"link": "", "title": "Factors affecting consumers responses to mobile advertising from a social norm theoretical perspective"}, {"link": "", "title": "Consumer Attitudes toward Mobile Advertising: An Empirical Study"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Prefetching mobile ads: Can advertising systems afford it?"}, {"link": "", "title": "Estimating Mobile Application Energy Consumption using Program Analysis"}, {"link": "", "title": ""}, {"link": "", "title": "RERAN: Timing-and Touch-Sensitive Record and Replay for Android"}, {"link": "", "title": "Calculating Source Line Level Energy Information for Android Applications"}, {"link": "", "title": "SIF: A Selective Instrumentation Framework for Mobile Applications"}, {"link": "", "title": "Efficient Path Profiling"}, {"link": "", "title": "Monsoon Solutions"}, {"link": "", "title": ""}, {"link": "", "title": "An Investigation into Energy-Saving Programming Practices for Android Smartphone App Development"}, {"link": "", "title": "What Do Mobile App Users Complain About? A Study on Free iOS Apps"}, {"link": "", "title": "Prioritizing the Devices to Test Your App on: A Case Study of Android Game Apps"}, {"link": "", "title": "Breaking for Commercials: Characterizing Mobile Advertising"}, {"link": "", "title": "ProfileDroid: Multilayer Profiling of Android Applications"}, {"link": "", "title": "AdSplit: Separating Smart-phone Advertising from Applications"}, {"link": "", "title": "Mitigating the True Cost of Advertisement-Supported Free Mobile Applications"}, {"link": "", "title": "DECAF: Detecting and Characterizing Ad Fraud in Mobile Apps"}, {"link": "", "title": "SmartAds: Bringing Contextual Ads to Mobile Apps"}, {"link": "", "title": "PUMA: Programmable UI-Automation for Large Scale Dynamic Analysis of Mobile Apps"}, {"link": "", "title": "Personalized mobile advertising: Its key attributes, trends, and social impact"}, {"link": "", "title": "Combining empirical experimentation and modeling techniques: A design research approach for personalized mobile advertising applications"}, {"link": "", "title": "Green Mining: Energy Consumption of Advertisement Blocking Methods"}, {"link": "", "title": "Longitudinal Analysis of Android Ad Library Permissions"}, {"link": "", "title": "AppScope: Application Energy Metering Framework for Android Smartphone Using Kernel Activity Monitoring"}, {"link": "/document/6224303", "title": "Green Mining: A Methodology of Relating Software Change to Power Consumption"}, {"link": "", "title": "Load Balancing and Unbalancing for Power and Performance in Cluster-Based Systems"}, {"link": "", "title": "Profiling Resource Usage for Mobile Applications: A Cross-layer Approach"}, {"link": "", "title": "Where is the energy spent inside my app? Fine Grained Energy Accounting on Smartphones with Eprof"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194565"}
{"ref": [{"link": "/document/1509505", "title": "Estimating the numbers of end users and end user programmers"}, {"link": "", "title": "Analyzing and visualizing spreadsheets"}, {"link": "", "title": "Growth in a time of debt"}, {"link": "", "title": "The reinhart and rogoff controversy: A summing up"}, {"link": "", "title": "Faq: Reinhart, rogoff, and the excel error that changed history"}, {"link": "/document/4222587", "title": "Goaldebug: A spreadsheet debugger for end users"}, {"link": "/document/6227171", "title": "Detecting and visualizing inter-worksheet smells in spreadsheets"}, {"link": "", "title": "Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation"}, {"link": "", "title": "Introducing the enron corpus"}, {"link": "", "title": ""}, {"link": "", "title": "Detecting and refactoring code smells in spreadsheet formulas"}, {"link": "", "title": "How do range names hinder novice spreadsheet debugging performance?"}, {"link": "", "title": "Effect of range naming conventions on reliability and development time for simple spreadsheet formulas"}, {"link": "", "title": "An exploratory analysis of the impact of named ranges on the debugging performance of novice users"}, {"link": "", "title": "Detecting code smells in spreadsheet formulas"}, {"link": "", "title": "Towards a catalog of spreadsheet smells"}, {"link": "", "title": "The spreadsheet interface: A basis for end user programming"}, {"link": "", "title": "The magical number seven plus or minus two: some limits on our capacity for processing information"}, {"link": "", "title": "Improving spreadsheet test practices"}, {"link": "", "title": "Removing pii from the edrm enron data set: Investigating the prevalence of unsecured financial, health and personally identifiable information in corporate data"}, {"link": "", "title": "Supporting professional spreadsheet users by generating leveled dataflow diagrams"}, {"link": "", "title": "Two corpuses of spreadsheet errors"}, {"link": "", "title": "A critical review of the literature on spreadsheet errors"}, {"link": "/document/941671", "title": "Detecting design flaws via metrics in object-oriented systems"}, {"link": "", "title": "Object-Oriented Metrics in Practice. Secaucus"}, {"link": "/document/5609747", "title": "Deriving metric thresholds from benchmark data"}, {"link": "/document/5314231", "title": "The evolution and impact of code smells: A case study of two open source systems"}, {"link": "", "title": "Complexity metrics for spreadsheet models"}, {"link": "", "title": "Metrics-based spreadsheet visualization: Support for focused maintenance"}, {"link": "", "title": "Mining spreadsheet complexity data to classify end user developers"}, {"link": "", "title": "New guidelines for spreadsheets"}, {"link": "", "title": "Quality control in spreadsheets: a software engineering-based approach to spreadsheet development"}, {"link": "", "title": "Detecting errors in spreadsheets"}, {"link": "", "title": "What we know about spreadsheet errors"}, {"link": "", "title": "Errors in operational spreadsheets: A review of the state of the art"}, {"link": "", "title": "Ucheck: A spreadsheet type checker for end users"}, {"link": "", "title": "Automatic detection of dimension errors in spreadsheets"}, {"link": "/document/5222790", "title": "Software engineering for spreadsheets"}, {"link": "", "title": "Automatically extracting class diagrams from spreadsheets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202944"}
{"ref": [{"link": "", "title": "Watson libraries for analysis"}, {"link": "", "title": "Adobe Systems Inc. Known issues and bugs"}, {"link": "", "title": "Semantic differential repair for input validation and sanitization"}, {"link": "", "title": "Performance analysis of idle programs"}, {"link": "", "title": "Reuse, recycle to de-bloat software"}, {"link": "", "title": "Computer Systems: A Programmer's Perspective"}, {"link": "", "title": "Bugzilla@Mozilla"}, {"link": "", "title": "WISE: Automated test generation for worst-case complexity"}, {"link": "", "title": "The road not taken: Estimating path execution frequency statically"}, {"link": "", "title": "Automated analysis of performance and energy consumption for cloud applications"}, {"link": "", "title": "Input-sensitive profiling"}, {"link": "", "title": "Generating fixes from object behavior anomalies"}, {"link": "", "title": "Mining hot calling contexts in small space"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with SM T"}, {"link": "", "title": "A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications"}, {"link": "", "title": "Measuring empirical computational complexity"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6227197", "title": "Automatically finding performance problems with feedback-directed learning software testing"}, {"link": "", "title": "SPEED: Precise and efficient static estimation of program computational complexity"}, {"link": "", "title": "Variability-aware performance prediction: A statistical learning approach"}, {"link": "/document/6227198", "title": "Performance debugging in the large via mining millions of stack traces"}, {"link": "", "title": "Performance regression testing target prioritization via performance risk analysis"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "More details on today's outage"}, {"link": "", "title": "Trend Micro will pay for PC repair costs"}, {"link": "", "title": "Finding latent performance bugs in systems implementations"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Recommending program transformations-Automating repetitive software changes"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "", "title": "Axis: Automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "SHERIFF: Precise detection and automatic mitigation of false sharing"}, {"link": "", "title": "Automatic detection of performance deviations in the load testing of large scale systems"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "", "title": "LASE: Locating and applying systematic edits by learning from examples"}, {"link": "", "title": "An online service-oriented performance profiling tool for cloud computing systems"}, {"link": "", "title": "Microsoft Corp. Connect"}, {"link": "", "title": "Embarrassment"}, {"link": "", "title": "The Art of Application Performance Testing: Help for Programmers and Quality Assurance"}, {"link": "", "title": "Evaluating the accuracy of Java profilers"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "Cachetor: Detecting cacheable data to remove bloat"}, {"link": "", "title": "Recurring bug fixes in object-oriented programs"}, {"link": "", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "LIME: A framework for debugging load imbalance in multi-threaded execution"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "EventBreak: Analyzing the responsiveness of user interfaces through performance-guided test generation"}, {"link": "", "title": "Automated repair of HTML generation errors in PHP applications using string constraint solving"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "", "title": "Statistical debugging for real-world performance problems"}, {"link": "", "title": "Using computer simulation to predict the performance of multithreaded programs"}, {"link": "", "title": "Model-based performance analysis of software architectures under un-certainty"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Context -sensitive delta inference for identifying workload-dependent performance bottlenecks"}, {"link": "", "title": "Ad hoc synchronization considered harmful"}, {"link": "", "title": "Scalable runtime bloat detection using abstract dynamic slicing"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Comprehending performance from real-world execution traces: A device-driver case"}, {"link": "", "title": "Algorithmic profiling"}, {"link": "/document/6100093", "title": "Automatic generation of load tests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194636"}
{"ref": [{"link": "", "title": "Software Testing and Analysis: Process, Principles and Techniques"}, {"link": "", "title": "Selecting software test data using data flow information"}, {"link": "/document/296778", "title": "Experiments of the effectiveness of dataflow- and controlflow-based test adequacy criteria"}, {"link": "/document/238581", "title": "An experimental comparison of the effectiveness of branch testing and data flow testing"}, {"link": "", "title": "Performing data flow testing on classes"}, {"link": "", "title": "Contextual integration testing of classes"}, {"link": "", "title": "Search-based data-flow test generation"}, {"link": "/document/6823867", "title": "On the right objectives of data flow testing"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Data flow testing in STAD"}, {"link": "", "title": "Datec: Dataflow testing of java classes"}, {"link": "", "title": "Data flow-based test adequacy analysis for languages with pointers"}, {"link": "", "title": "Scaling java points-to analysis using spark"}, {"link": "/document/6194", "title": "An applicable family of data flow testing criteria"}, {"link": "", "title": "Search-based software test data generation: A survey"}, {"link": "", "title": "Evosuite: Automatic test suite generation for object-oriented software"}, {"link": "", "title": "Disl: a domain-specific language for bytecode instrumentation"}, {"link": "/document/6227195", "title": "Sound empirical evidence in software testing"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "Code coverage for suite evaluation by developers"}, {"link": "", "title": "JCrasher: An automatic robustness tester for Java"}, {"link": "", "title": "Eclat: Automatic generation and classification of test inputs"}, {"link": "", "title": "Automatic testing based on design by contract"}, {"link": "/document/4222570", "title": "Feedback-directed random test generation"}, {"link": "/document/989787", "title": "Testera: A novel framework for automated testing of java programs"}, {"link": "", "title": "Korat: Automated testing based on java predicates"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "Parameterized unit tests"}, {"link": "", "title": "Bogor/Kiasan: A k-bounded symbolic execution for checking strong heap properties of open systems"}, {"link": "", "title": "Automated testing of classes"}, {"link": "", "title": "Mseqgen: Object-oriented unit-test generation via mining source code"}, {"link": "", "title": "Random unit-test generation with mut-aware sequence recommendation"}, {"link": "", "title": "Palus: A hybrid automated test generation tool for java"}, {"link": "", "title": "Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization"}, {"link": "", "title": "Synthesizing method sequences for high-coverage testing"}, {"link": "", "title": "Evolutionary testing of classes"}, {"link": "", "title": "A program data flow analysis procedure"}, {"link": "", "title": "A graph model for parallel computation"}, {"link": "", "title": "First version of a data flow procedure language"}, {"link": "", "title": "A formal evaluation of data flow path selection criteria"}, {"link": "/document/44376", "title": "The cost of data flow testing: An empirical study"}, {"link": "", "title": "An experimental evaluation of data flow and mutation testing"}, {"link": "", "title": "An empirical comparison of data flow and mutation-based test adequacy criteria"}, {"link": "", "title": "All-uses vs mutation testing: An experimental comparison of effectiveness"}, {"link": "", "title": "Comparing multi-point stride coverage and dataflow coverage"}, {"link": "", "title": "Quantifying the complexity of dataflow testing"}, {"link": "", "title": "Classifying data dependences in the presence of pointers for program comprehension, testing, and de-bugging"}, {"link": "", "title": "Integration testing of procedural object-oriented languages with polymorphism"}, {"link": "", "title": "Interclass testing of object oriented software"}, {"link": "/document/1245302", "title": "The construction of contextual defuse associations for object-oriented systems"}, {"link": "", "title": "Testing coupling relationships in object-oriented programs"}, {"link": "", "title": "A framework for call graph construction algorithms"}, {"link": "/document/1702622", "title": "Detection of data flow anomaly through program in-strumentation"}, {"link": "", "title": "Effective memory protection using dynamic tainting"}, {"link": "", "title": "Using valgrind to detect undefined value errors with bit-precision"}, {"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Checksum-aware fuzzing combined with dynamic taint analysis and symbolic execution"}, {"link": "", "title": "Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "Automatic test factoring for java"}, {"link": "", "title": "Carving differential unit test cases from system test cases"}, {"link": "", "title": "Ocat: Object capture-based automated testing"}, {"link": "", "title": "Visualizing memory graphs"}, {"link": "", "title": "Practical object-oriented back-in-time debugging"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194640"}
{"ref": [{"link": "", "title": "Educating software engineers of the future: Software quality research through problem-based learning"}, {"link": "", "title": "Software engineering meets problem-based learning"}, {"link": "", "title": "Steps in developing an advanced software engineering course using problem based learning"}, {"link": "", "title": "The suitability of problem-based learning for engineering education: theory and practice"}, {"link": "", "title": "Engineering education-is problem-based or project-based learning the answer?"}, {"link": "/document/6685145", "title": "Simulating industry: An innovative software engineering capstone design course"}, {"link": "", "title": "Enterprising research skills: academia's changing role"}, {"link": "", "title": "Guide to the software engineering body of knowledge, version 3.0"}, {"link": "", "title": "Two dogmas of empiricism"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202979"}
{"ref": [{"link": "", "title": "System and Software Architecture Reconciliation"}, {"link": "", "title": "The Capability Maturity Model: Guidelines for Improving the Software Process"}, {"link": "/document/936227", "title": "Crouching Dragon, Hidden Software: Software in DOD Weapon Systems"}, {"link": "/document/689675", "title": "Using the WinWin Spiral Model: A Case Study"}, {"link": "", "title": "Educating Software Engineers to Become Systems Engineers"}, {"link": "", "title": "The Incremental Commitment Spiral Model"}, {"link": "", "title": "CSCI577 - Software Engineering class"}, {"link": "", "title": "Process Guides: Effective Guidance for Process Participants"}, {"link": "", "title": "IBM Rational Method Composer: Part 1: Key concepts"}, {"link": "", "title": "Process Implications of Social Networking-Based Requirements Negotiation Tools"}, {"link": "/document/4438728", "title": "WikiWinWin: A Wiki Based System for Collaborative Requirements Negotiation"}, {"link": "", "title": "The Value-Based Theory of Systems Engineering: Identifying and Explaining Dependencies"}, {"link": "", "title": "Composable Risk-Driven Processes for Developing Software Systems from Commercial-Off-The-Shelf (COTS) Products"}, {"link": "", "title": "An empirical study of variations in COTS-Based Software Development Processes in Norwegian IT industry"}, {"link": "", "title": "The Information Paradox"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202983"}
{"ref": [{"link": "/document/4427110", "title": "On query completion in web search engines based on query stream mining"}, {"link": "", "title": "Query suggestions in the absence of query logs"}, {"link": "", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "Automatically capturing source code context of NL-queries for software maintenance and reuse"}, {"link": "", "title": "Identifying business Tasks and commitments from email and chat conversations"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Investigating the semantic gap through query log analysis"}, {"link": "", "title": "Classifying action items for semantic email"}, {"link": "", "title": "Sando: An extensible local code search framework"}, {"link": "", "title": "Using natural language program analysis to locate and understand action-oriented concerns"}, {"link": "", "title": "The impact of social media on software engineering practices and tools"}, {"link": "", "title": "Automating test automation"}, {"link": "/document/7000568", "title": "Extracting development tasks to navigate software documentation"}, {"link": "", "title": "Effective communication of software development knowledge through community portals"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203034"}
{"ref": [{"link": "", "title": "Trustworthy numerical computation in scala"}, {"link": "", "title": "Static analysis-based validation of floating-point computations"}, {"link": "", "title": "Static analysis of numerical algorithms"}, {"link": "", "title": "Interval arithmetic: From principles to implementation"}, {"link": "", "title": "An introduction to affine arithmetic"}, {"link": "", "title": "On-the-fly detection of instability problems in floating-point program execution"}, {"link": "/document/1702369", "title": "Automatic generation of floating-point test data"}, {"link": "", "title": "Symbolic path-oriented test data generation for floating-point programs"}, {"link": "", "title": "A dynamic program analysis to find floating-point accuracy problems"}, {"link": "", "title": "Perturbing numerical calculations for statistical analysis of floating-point program (in)stability"}, {"link": "", "title": "IEEE standard 754 for binary floating-point arithmetic"}, {"link": "", "title": "Genetic algorithms and grouping problems"}, {"link": "", "title": "Accuracy and stability of numerical algorithms. Siam"}, {"link": "", "title": "The numerical reliability of econometric software"}, {"link": "", "title": "A calculator with controlled error, example section (in Chinese)"}, {"link": "", "title": "What every computer scientist should know about floating-point arithmetic"}, {"link": "", "title": "Evolutionary computation: toward a new philosophy of machine intelligence"}, {"link": "", "title": "The genitor algorithm and selection pressure: Why rank-based allocation of reproductive trials is best"}, {"link": "", "title": "Efficient search for inputs causing high floating-point errors"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "/document/4075583", "title": "Optimization of control parameters for genetic algorithms"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Stochastic optimization of floating-point programs with tunable precision"}, {"link": "", "title": "Automatically adapting programs for mixed-precision floating-point computation"}, {"link": "", "title": "Precimonious: Tuning assistant for floating-point precision"}, {"link": "/document/4272865", "title": "Formal verification of floating-point programs"}, {"link": "", "title": "Flocq: A unified library for proving floating-point algorithms in coq"}, {"link": "", "title": "Multi-prover verification of floating-point programs"}, {"link": "", "title": "proving programs robust"}, {"link": "", "title": "White box sampling in uncertain data processing enabled by program analysis"}, {"link": "", "title": "Cooperative software testing and analysis: Advances and challenges"}, {"link": "", "title": "Test-data generation guided by static defect detection"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Search-based inference of polynomial metamorphic relations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194603"}
{"ref": [{"link": "/document/6671296", "title": "Towards Automatically Improving Package Structure while Respecting Original Design Decisions"}, {"link": "/document/4362624", "title": "Design Recovery and Maintenance of Build Systems"}, {"link": "", "title": "Experiments with Clustering as a Software Remodularization Method"}, {"link": "", "title": "Firefox Release Engineering"}, {"link": "", "title": "Building Software at Google Scale"}, {"link": "", "title": "Putting the Developer in-the-Loop: An Interactive GA for Software Re-modularization"}, {"link": "/document/5645559", "title": "Software Re-Modularization Based on Structural and Semantic Metrics"}, {"link": "", "title": "Build in the Cloud: Distributing Build Outputs"}, {"link": "", "title": "FlumeJava: Easy, Efficient Data-Parallel Pipelines"}, {"link": "", "title": "Elementary Graph Algorithms"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "An Empirical Study of Regression Test Selection Techniques"}, {"link": "", "title": "Testing at the Speed and Scale of Google"}, {"link": "", "title": "Regression Test Selection for Java Software"}, {"link": "/document/10188", "title": "An Incremental Approach to Unit Testing during Maintenance"}, {"link": "", "title": "SPLat: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems"}, {"link": "", "title": "Development at the Speed and Scale of Google. QCon San Francisco"}, {"link": "", "title": "Supporting Program Comprehension Using Semantic and Structural Information"}, {"link": "/document/4339232", "title": "Hierarchical Clustering for Software Architecture Recovery"}, {"link": "", "title": "From Code to Monkeys: Continuous Delivery at Netflix. QCon San Francisco"}, {"link": "", "title": "The Evolution of Java Build Systems"}, {"link": "", "title": "An Empirical Study of Build Maintenance Effort"}, {"link": "", "title": "Tools for Continuous Integration at Google Scale"}, {"link": "/document/1610610", "title": "On the Automatic Modularization of Software Systems Using the Bunch Tool"}, {"link": "/document/6225994", "title": "Searching for Build Debt: Experiences Managing Technical Debt at Google"}, {"link": "", "title": "Refactoring Object-Oriented Frameworks"}, {"link": "", "title": "Scaling Regression Testing to Large Software Systems"}, {"link": "/document/5406532", "title": "Software Module Clustering as a Multi-Objective Search Problem"}, {"link": "/document/6617629", "title": "Taking Control of Your Engineering Tools"}, {"link": "", "title": "Release Engineering at Facebook. QCon San Francisco"}, {"link": "/document/536955", "title": "Analyzing Regression Test Selection Techniques"}, {"link": "/document/689399", "title": "Empirical Studies of a Safe Regression Test Selection Technique"}, {"link": "/document/6227152", "title": "Build Code Analysis with Symbolic Evaluation"}, {"link": "/document/4493340", "title": "A Tool for Optimizing the Build Performance of Large Software Code Bases"}, {"link": "", "title": "Google Engineering Tools"}, {"link": "/document/891477", "title": "ACCD: An Algorithm for Comprehension-Driven Clustering"}, {"link": "", "title": "Automated Decomposition of Build Targets (Extended Version)"}, {"link": "", "title": "Apache Ant"}, {"link": "", "title": "Apache Maven"}, {"link": "", "title": "GNU Make"}, {"link": "", "title": "Gradle"}, {"link": "", "title": "Hudson"}, {"link": "", "title": "Jenkins"}, {"link": "", "title": "Maven Central Repository"}, {"link": "", "title": "Google Protocol Buffers: Google's Data Interchange Format"}, {"link": "", "title": "Rake"}, {"link": "", "title": "Travis"}, {"link": "/document/624574", "title": "Using Clustering Algorithms in Legacy Systems Remod-ularization"}, {"link": "/document/1510147", "title": "Comparison of Clustering Algorithms in the Context of Software Evolution"}, {"link": "", "title": "Build in the Cloud: Accessing Source Code"}, {"link": "", "title": "Applying Regression Test Selection for COTS-based Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194567"}
{"ref": [{"link": "", "title": "Mapreduce: simplified data processing on large clusters"}, {"link": "", "title": "Volunteer computing"}, {"link": "", "title": "Youtube statistics"}, {"link": "", "title": "Intel processors"}, {"link": "", "title": "Top500 supercomputer"}, {"link": "", "title": "Mrjs: A javascript mapreduce framework for web browsers"}, {"link": "/document/6407142", "title": "Distributed computing on an ensemble of browsers"}, {"link": "", "title": "Browser-based distributed evolutionary computation: performance and scaling behavior"}, {"link": "", "title": "Crowdsourcing mapreduce: Jsmapreduce"}, {"link": "", "title": "Emscripten"}, {"link": "", "title": "Clang"}, {"link": "", "title": "Greasemonkey"}, {"link": "", "title": "Sabotage-tolerance mechanisms for volunteer computing systems"}, {"link": "", "title": "Understanding web browsing behaviors through weibull analysis of dwell time"}, {"link": "", "title": "Wide applicability"}, {"link": "", "title": "Rapid object detection using a boosted cascade of simple features"}, {"link": "", "title": "Opinion mining and sentiment analysis"}, {"link": "", "title": "A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts"}, {"link": "", "title": "Making a faster cryptanalytic time-memory trade-off"}, {"link": "", "title": "Bayanihan: Web-based volunteer computing using java"}, {"link": "", "title": "Seti@ home: an experiment in public-resource computing"}, {"link": "", "title": "Folding@Home"}, {"link": "", "title": "Boinc: A system for public-resource computing and storage"}, {"link": "", "title": "On-demand web search using browser-based volunteer computing"}, {"link": "/document/4215435", "title": "Rabc: A conceptual design of pervasive infrastructure for browser computing based on ajax technologies"}, {"link": "", "title": "Moon: Mapreduce on opportunistic environments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194571"}
{"ref": [{"link": "", "title": "Architecture-based approach to reliability assessment of software systems. Perform. Eval."}, {"link": "", "title": "Apache. The Apache Ant Project"}, {"link": "", "title": "Machine Learning Group at the University of Waikato. Weka 3: Data mining software in java"}, {"link": "", "title": "Model-driven software development"}, {"link": "", "title": "Quantifying the analyzability of software architectures"}, {"link": "", "title": "Dependency profiles for software architecture evaluations"}, {"link": "", "title": "Coverity. Coverity"}, {"link": "", "title": "Flexible architecture conformance assessment with conqat"}, {"link": "", "title": "Developing next generation adls through mde techniques"}, {"link": "", "title": "Continuous Integration: Improving Software Quality and Reducing Risk (The Addison-Wesley Signature Series"}, {"link": "", "title": "Eclipse. Eclipse Java Development Tools (JDT)"}, {"link": "", "title": "Eclipselab. Architectural Conformance Validation Tool for MDD"}, {"link": "", "title": "Defining and continuous checking of structural program dependencies"}, {"link": "", "title": "EMF. Eclipse modeling framework"}, {"link": "", "title": "Efficient retrieval and ranking of undesired package cycles in large software systems"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "", "title": "GNU. Gnu grub"}, {"link": "", "title": "System grokking: a novel approach for software understanding, validation, and evolution"}, {"link": "", "title": "Improving software through automatic untangling of cyclic dependencies"}, {"link": "", "title": "Performance and architecture validation with existing unit tests"}, {"link": "", "title": "An approach to automatically enforce object-oriented constraints"}, {"link": "/document/5661759", "title": "Pattern-based architecture reviews"}, {"link": "", "title": "Finding Bugs is Easy"}, {"link": "", "title": "Automatic modularity conformance checking"}, {"link": "", "title": "Rational software architect simulation toolkit"}, {"link": "/document/1510569", "title": "Test-driven development: Concepts, taxonomy, and future direction"}, {"link": "", "title": "An uml-based approach for validation of software architecture descriptions"}, {"link": "", "title": "Saam: A method for analyzing the properties of software architectures"}, {"link": "", "title": "Klockwork. Rogue wave software"}, {"link": "", "title": "Lance Walton and Channing Walton. EclipseMetrics"}, {"link": "", "title": "Are automatically-detected code anomalies relevant to architectural modularity?: An exploratory analysis of evolving systems"}, {"link": "/document/840994", "title": "A language and environment for architecture-based software development and evolution"}, {"link": "", "title": "Microsoft. Validate code with layer diagrams"}, {"link": "", "title": "Automated verification of design patterns: A case study"}, {"link": "/document/1605176", "title": "The golden age of software architecture"}, {"link": "", "title": "Abstractions for software architecture and tools to support them"}, {"link": "", "title": "SonarQube. Sonarqube software"}, {"link": "", "title": "The structure and value of modularity in software design"}, {"link": "", "title": "Depth-first search and linear graph algorithms"}, {"link": "", "title": "Vuze. Vuze bittorent client"}, {"link": "", "title": "Paving the road for formally defined architecture description in software development"}, {"link": "", "title": "Detecting software modularity violations"}, {"link": "", "title": "A classification and comparison of model checking software architecture techniques"}, {"link": "/document/6227154", "title": "Enhancing architecture-implementation conformance with change management and support for behavioral mapping"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202950"}
{"ref": [{"link": "", "title": "Practical fault localization for dynamic web applications"}, {"link": "", "title": "Active learning for automatic classification of software behavior"}, {"link": "/document/6606560", "title": "A learning-based method for combining testing techniques"}, {"link": "", "title": "Generating fixes from object behavior anomalies"}, {"link": "/document/919107", "title": "Finding failures by cluster analysis of execution profiles"}, {"link": "", "title": "On the influence of multiple faults on coverage-based fault localization"}, {"link": "", "title": "Software Behavior and Failure Clustering: An Empirical Study of Fault Causality"}, {"link": "/document/1707670", "title": "On the use of mutation faults in empirical assessments of test case prioritization techniques"}, {"link": "", "title": "Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact"}, {"link": "/document/5282499", "title": "Better Debugging via Output Tracing and Callstack-Sensitive Slicing"}, {"link": "", "title": "Rapid: Identifying bug signatures to support debugging activities"}, {"link": "", "title": "Fault localization using value replacement"}, {"link": "", "title": "Personalized defect prediction"}, {"link": "", "title": "Debugging in parallel"}, {"link": "", "title": "Fault Localization Using Visualization of Test Information"}, {"link": "", "title": "Empirical evaluation of the Tarantula automatic fault localization technique"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "MintHint: Automated synthesis of repair hints"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Failure proximity: A fault localization-based approach"}, {"link": "", "title": "Prevalence of coincidental correctness and mitigation of its impact on fault localization"}, {"link": "", "title": "Transfer defect learning"}, {"link": "", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "An experimental determination of sufficient mutation operators"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Darwin: An approach to debugging evolving programs"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "Predicting recurring crash stacks"}, {"link": "", "title": "Selecting peers for execution comparison"}, {"link": "", "title": "Mining succinct predicated bug signatures"}, {"link": "", "title": "Expertise in debugging computer programs: A process analysis"}, {"link": "", "title": "Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization"}, {"link": "", "title": "Automated path generation for software fault localization"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "", "title": "Mutation-oriented test data augmentation for GUI software fault localization"}, {"link": "", "title": "GUI software fault localization using N-gram analysis"}, {"link": "", "title": "An empirical study of the effects of test-suite reduction on fault localization"}, {"link": "", "title": "Yesterday, my program worked. Today, it does not. Why?"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Locating Faults through Automated Predicate Switching"}, {"link": "", "title": "Towards locating execution omission errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194638"}
{"ref": [{"link": "", "title": "Social Sustainability Indicators for Software: Initial Review"}, {"link": "", "title": "Domain-Specific Languages in Few Steps: The Neverlang Approach"}, {"link": "", "title": "Neverlang 2: Componentised Language Development for the JVM"}, {"link": "", "title": "Environment-Conscious Scheduling of HPC Applications on Distributed Cloud-Oriented Data Centers"}, {"link": "/document/6227089", "title": "UDesignIt: Towards Social Media for Community-Driven Design"}, {"link": "/document/895984", "title": "Does Code Decay?"}, {"link": "", "title": "Near-Optimal Energy-Efficient Joint resource Allocation for Multi-Hop MIMO-AF Systems"}, {"link": "", "title": "ICSE-SEIS 2015: SEIS Track Call for Contributions"}, {"link": "", "title": "The Spoofax Language Workbench: Rules for Declarative Specification of Languages and IDEs"}, {"link": "", "title": "Aspect-Oriented Programming"}, {"link": "", "title": "LISA: An Interactive Environment for Programming Language Development"}, {"link": "/document/1531049", "title": "Multi-Dimensional Separation of Concerns in Requirements Engineering"}, {"link": "", "title": "Infusing Green: Requirements Engineering for Green In and Through Software Systems"}, {"link": "", "title": "Persistence as an Aspect"}, {"link": "", "title": "N Degrees of Separation: Multi-Dimensional Separation of Concerns"}, {"link": "", "title": "Neverlang: A Framework for Feature-Oriented Language Development"}, {"link": "", "title": "Silver: An Extensible Attribute Grammar System"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203001"}
{"ref": [{"link": "/document/1191353", "title": "Educating Software Engineering Managers"}, {"link": "", "title": "Software Engineering: Report on a Conference Sponsored by the NATO Science Committee"}, {"link": "", "title": "The Mythical Man-Month: Essays on Software Engineering"}, {"link": "", "title": "Software Engineering Economics"}, {"link": "", "title": "No Silver Bullet - Essence and Accident in Software Engineering"}, {"link": "", "title": "The Art of Agile Development"}, {"link": "", "title": "Extreme Programming and Agile Software Development Methodologies"}, {"link": "", "title": "Managing Technical Debt"}, {"link": "/document/59", "title": "A Spiral Model of Software Development and Enhancement"}, {"link": "", "title": "Don't forget about good management"}, {"link": "", "title": "Getting Results from Software Development Teams"}, {"link": "/document/6750443", "title": "Looking for the Holy Grail of Software Development"}, {"link": "", "title": "Managing that churning sensation"}, {"link": "", "title": "From Nobel Prize to Project Management: Getting Risks Right"}, {"link": "/document/4490148", "title": "Team Leadership Effectiveness in Technology Based Project Environments"}, {"link": "", "title": "The software manager's toolkit"}, {"link": "", "title": "Managing Software Projects: On the Edge of Chaos - From Antipatterns to Success, Kindle eBook"}, {"link": "", "title": "Delusions of success - how optimism undermines executives' decisions"}, {"link": "", "title": "A-12 Administrative Inquiry"}, {"link": "", "title": "Earned Value Project Management - Fourth Edition"}, {"link": "", "title": "Leadership Skills Development for Engineers"}, {"link": "", "title": "Quality Software Management"}, {"link": "/document/6324429", "title": "A Multidimensional Analysis of Project Manager Competences"}, {"link": "", "title": "The team scaling fallacy: Underestimating the declining efficiency of larger teams"}, {"link": "/document/1288436", "title": "Modeling Team Member Characteristics for the Formation of a Multifunctional Team in Concurrent Engineering"}, {"link": "", "title": "Management Teams - Why They Succeed or Fail"}, {"link": "", "title": "Software Developer Perceptions About Software Project Failure: A Case Study"}, {"link": "", "title": "Lean Principles, Learning, and Software Production: Evidence from Indian Software Services"}, {"link": "", "title": "National Study of the Changing Workforce"}, {"link": "", "title": "Intrinsic and Extrinsic Motivations: Classic Definitions and New Directions"}, {"link": "", "title": "Performance Pressure as a Double Edged Sword: Enhancing Team Motivation While Undermining the Use of Team Knowledge"}, {"link": "/document/6489837", "title": "Motivating Technical Professionals Today"}, {"link": "", "title": "When Prophecy Fails"}, {"link": "", "title": "live interview on KUOW radio, Seattle, Washington"}, {"link": "", "title": "Driven to Distraction: Recognizing and Coping with Attention Deficit Disorder from Childhood through Adulthood"}, {"link": "", "title": "The New New Thing"}, {"link": "", "title": "Up the Organization: How to Stop the Corporation from stifling people and strangling Profits"}, {"link": "", "title": "Project Management Communications Bible"}, {"link": "", "title": "Why do Smart People Make Such Dumb Mistakes?"}, {"link": "", "title": "The Peter Principle: Why Things Always Go Wrong"}, {"link": "", "title": "Short History of Software Development Methods"}, {"link": "/document/4012619", "title": "SE2004: Recommendations for Undergraduate Software Engineering Curricula"}, {"link": "", "title": "Curriculum Guidelines for Graduate Degree Programs in Software Engineering"}, {"link": "", "title": "Making a Transition from Technical Professional to Project Manager"}, {"link": "/document/7093031", "title": "Software Project Management: Learning from Our Mistakes"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge"}, {"link": "", "title": "How Hard Can It Be? - Actively Managing Complexity in Technology Projects"}, {"link": "", "title": "Linking the Balanced Scorecard to Strategy"}, {"link": "", "title": "Strategy Maps: Converting Intangible Assets into Tangible Outcomes"}, {"link": "", "title": "SWOT Analysis"}, {"link": "", "title": "How (In)Accurate are Demand Forecasts in Public Works Projects? The Case of Transportation"}, {"link": "", "title": "The High Cost of Low Performance: The Essential role of Communications"}, {"link": "", "title": "Agile Project Management: Managing for Success"}, {"link": "", "title": "Cross-Cultural differences and information systems developer values"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202985"}
{"ref": [{"link": "/document/6401114", "title": "Social networking meets software development: perspectives from github, msdn, stack exchange, and topcoder"}, {"link": "", "title": "Sketching User Experiences: Getting the Design Right and the Right Design"}, {"link": "", "title": "Blind variation and selective retention in creative thought as in other knowledge processes"}, {"link": "", "title": "Optimal crowdsourcing contests"}, {"link": "", "title": "Free/libre open source software development: what we know and what we do not know"}, {"link": "", "title": "Verification games: making verification fun"}, {"link": "", "title": "Prototyping dynamics: sharing multiple designs improves exploration, group rapport, and results"}, {"link": "", "title": "Parallel prototyping leads to better design results, more divergence, and increased self-efficacy"}, {"link": "", "title": "Idea Vis: a hybrid workspace and interactive visualization for paper-based collaborative sketching sessions"}, {"link": "", "title": "Software development with real-time collaborative coding in a Web IDE"}, {"link": "", "title": "Collabode: collaborative coding in the browser"}, {"link": "", "title": "Comprehension differences in debugging by skilled and novice programmers. In Empirical Studies of Programmers"}, {"link": "", "title": "TEAM STORM: demonstrating an interaction model for working with multiple ideas during creative group work"}, {"link": "", "title": "What would other programmers do: suggesting solutions to error messages"}, {"link": "", "title": "The cost of collaboration for code and art: evidence from a remixing community"}, {"link": "", "title": "Crowdsourcing: Why the Power of the Crowd Is Driving the Future of Business. Crown Business"}, {"link": "", "title": "Program comprehension as fact finding"}, {"link": "", "title": "Microtask programming: building software with a crowd"}, {"link": "/document/6614737", "title": "Crowd development"}, {"link": "", "title": "Towards crowdsourced humanassisted verification"}, {"link": "", "title": "Design lessons from the fastest Q&A site in the west"}, {"link": "", "title": "Supporting informal design with interactive whiteboards"}, {"link": "", "title": "What does lOx mean? Measuring variations in programmer productivity"}, {"link": "", "title": "Managing a trois: a study of a multi-user drawing tool in distributed design work"}, {"link": "", "title": "Crowdsourcing suggestions to programming problems for dynamic web development languages"}, {"link": "", "title": "CrowdOracles: can the crowd solve the oracle problem?"}, {"link": "", "title": "Software Designers in Action: A Human-Centric Look at Design Work"}, {"link": "/document/1377187", "title": "How Effective Developers Investigate Source Code: An Exploratory Study"}, {"link": "", "title": "Creative nach regeln: Methode 635, eine neue technik zum losen von problemen"}, {"link": "", "title": "Exploratory experimental studies comparing online and offline programming per-formance"}, {"link": "", "title": "Collaborative sketching (c-sketch)-an idea generation technique for engineering design"}, {"link": "", "title": "Scientific creativity as constrained stochastic behavior: The integration of product, person, and process perspectives"}, {"link": "", "title": "Two's company, three's a crowd: a case study of crowdsourcing software development"}, {"link": "", "title": "The Wisdom of Crowds. Random House, Inc."}, {"link": "/document/4221623", "title": "Software design and architecture: the once and future focus of software engineering"}, {"link": "", "title": "Conceptual revolutions"}, {"link": "", "title": "Bluefix: using crowdsourced feedback to support programming students in error di\u201d agnosis and repair"}, {"link": "", "title": "A crowdsourcing model for receiving design critique"}, {"link": "", "title": "Cooks or cobblers? Crowd creativity through combination"}, {"link": "", "title": "skWiki: a multimedia sketching system for collaborative creativity"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194605"}
{"ref": [{"link": "", "title": "StackGuard: Automatic adaptive detection and prevention of buffer-overflow attacks"}, {"link": "", "title": "Address space layout randomization"}, {"link": "", "title": "Address obfuscation: An efficient approach to combat a board range of memory error exploits"}, {"link": "", "title": "Data execution prevention: Changes to functionality in Windows XP service pack 2"}, {"link": "", "title": "RAD: A compile-time solution to buffer overflow attacks"}, {"link": "", "title": "Stack Shield: A \u201cstack smashing\u201d technique protection tool for linux"}, {"link": "", "title": "Control-flow integrity principles, implementations, and applications"}, {"link": "", "title": "XFI: Software guards for system address spaces"}, {"link": "", "title": "Control-flow integrity"}, {"link": "", "title": "Practical control flow integrity and randomization for binary executables"}, {"link": "", "title": "Non-control-data attacks are realistic threats"}, {"link": "", "title": "Defense against stack-based attacks using speculative stack layout transformation"}, {"link": "", "title": "SoftBound: highly compatible and complete spatial memory safety for C"}, {"link": "", "title": "CETS: compiler enforced temporal safety for C"}, {"link": "", "title": "Light-weight bounds checking"}, {"link": "", "title": "MemSafe: ensuring the spatial and temporal memory safety of C at runtime"}, {"link": "", "title": "IDA Pro \u2013 interactive disassembler"}, {"link": "", "title": "Aggregate structure identification and its application to program analysis"}, {"link": "", "title": "DIVINE: DIscovering Variables IN Executables"}, {"link": "", "title": "CodeSonar static analysis tool"}, {"link": "", "title": "PuTTy: A free telnet/SSH client"}, {"link": "/document/6983810", "title": "Quantitative evaluation of static analysis tools"}, {"link": "", "title": "WYSINWYX: What you see is not what you execute"}, {"link": "", "title": "Dynamic data structure excavation"}, {"link": "", "title": "Howard: a dynamic excavator for reverse engineering data structures"}, {"link": "", "title": "Automatic reverse engineering of data structures from binary execution"}, {"link": "", "title": "Recovering C++objects from binaries using inter-procedural data-flow analysis"}, {"link": "", "title": "TIE: Principled reverse engineering of types in binary programs"}, {"link": "", "title": "Analyzing memory accesses in x86 executables"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194569"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194573"}
{"ref": [{"link": "/document/6509369", "title": "CODEMINE: Building a Software Development Data Analytics Platform at Microsoft"}, {"link": "", "title": "Mining cause-effect-chains from version histories"}, {"link": "", "title": "Capturing the long-term impact of changes"}, {"link": "/document/5714425", "title": "Effort-Aware Defect Prediction Models"}, {"link": "", "title": "The Influence of Organizational Structure on Software Quality: An Empirical Case Study"}, {"link": "", "title": "The Impact of Code Review Coverage and Code Review Participation on Software Quality: A Case Study of the Qt, VTK, and ITK Projects"}, {"link": "", "title": "Test case prioritization: an empirical study"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "/document/87284", "title": "Test selection based on finite state models"}, {"link": "", "title": "A Safe, Efficient Regression Test Selection Technique"}, {"link": "", "title": "EvoSuite: Automatic Test Suite Generation for Object-oriented Software"}, {"link": "", "title": "Generating Test Cases for Specification Mining"}, {"link": "", "title": "Test Quality Feedback Improving Effectivity and Efficiency of Unit Testing"}, {"link": "", "title": "Improving Efficiency in Software Maintenance"}, {"link": "", "title": "The Impact of Test Ownership and Team Structure on the Reliability and Effectiveness of Quality Test Runs"}, {"link": "", "title": "Is This a Bug or an Obsolete Test?"}, {"link": "", "title": "Characterizing and Predicting Which Bugs Get Fixed: An Empirical Study of Microsoft Windows"}, {"link": "", "title": "What Makes a Good Bug Report?"}, {"link": "", "title": "Categorizing Bugs with Social Networks: A Case Study on Four Open Source Software Communities"}, {"link": "", "title": "Is It a Bug or an Enhancement?: A Text-based Approach to Classify Change Requests"}, {"link": "", "title": "Automatically Characterizing Large Scale Program Behavior"}, {"link": "", "title": "Active Learning for Automatic Classification of Software Behavior"}, {"link": "", "title": "Simplifying Failure-inducing Input"}, {"link": "", "title": "Empirical Evaluation of the Tarantula Automatic Fault-localization Technique"}, {"link": "", "title": "Failure Proximity: A Fault Localization -based Approach"}, {"link": "/document/6227210", "title": "Where Should the Bugs Be Fixed? - More Accurate Information Retrieval-based Bug Localization Based on Bug Reports"}, {"link": "", "title": "Understanding Myths and Realities of Test-suite Evolution"}, {"link": "/document/1357796", "title": "Ordering broken unit tests for focused debugging"}, {"link": "", "title": "ReAssert: Suggesting Repairs for Broken Unit Tests"}, {"link": "", "title": "On Test Repair Using Symbolic Execution"}, {"link": "", "title": "Specification-Based Test Repair Using a Lightweight Formal Method"}, {"link": "", "title": "Automated Session Data Repair for Web Application Regression Testing"}, {"link": "", "title": "Automatically Repairing Event Sequence-based GUI Test Suites for Regression Testing"}, {"link": "", "title": "Pursuing Failure: The Distribution of Program Failures in a Profile Space"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Concept-based Failure Clustering"}, {"link": "", "title": "Tree-based methods for classifying software failures"}, {"link": "", "title": "Systems and methods for automated classification and analysis of large volumes of test result data"}, {"link": "", "title": "Assessing the Value of Branches with What-if Analysis"}, {"link": "", "title": "Branching Taxonomy"}, {"link": "", "title": "Mining Association Rules Between Sets of Items in Large Databases"}, {"link": "", "title": "The Arules R-Package Ecosystem: Analyzing Interesting Patterns from Large Transaction Data Sets"}, {"link": "", "title": "R: A Language and Environment for Statistical Computing"}, {"link": "", "title": "eROSE: Guiding Programmers in Eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202948"}
{"ref": [{"link": "/document/6549288", "title": "Device-to-device communications with Wi-Fi Direct: overview and experimentation"}, {"link": "", "title": "LTE Direct workshop white paper"}, {"link": "", "title": "Trainroulette: promoting situated in-train social interaction between passengers"}, {"link": "", "title": "A common language for the internet of everything"}, {"link": "", "title": "Intel common connectivity framework"}, {"link": "", "title": "Shair: Extensible middleware for mobile peer-to-peer resource sharing"}, {"link": "", "title": "Cocam: A collaborative content sharing framework based on opportunistic P2P networking"}, {"link": "", "title": "A middleware service for pervasive social networking"}, {"link": "", "title": "Mobiclique: Middleware for mobile social networking"}, {"link": "", "title": "The magnet: Agent-based middleware enabling social networking for mobile users"}, {"link": "", "title": "Mobisoft: An agent-based middle-ware for social-mobile applications"}, {"link": "", "title": "Middleware for social networking on mobile devices"}, {"link": "", "title": "MyNet: A platform for secure P2P personal and social networking services"}, {"link": "", "title": "Mobisoc: a middle-ware for mobile social computing applications"}, {"link": "/document/4338491", "title": "Context-aware middleware for anytime, anywhere social networks"}, {"link": "", "title": "Middleware for mobile social networks: A survey"}, {"link": "", "title": "Dbus overview"}, {"link": "/document/6676512", "title": "Lightweight self-organizing reconfiguration of opportunistic infrastructure-mode WiFi networks"}, {"link": "", "title": "Crossroads: A framework for developing proximity-based social interactions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202952"}
{"ref": [{"link": "", "title": "Here comes everybody: The power of organizing without organizations"}, {"link": "", "title": "Insurgent citizenship: Disjunctions of democracy and modernity in Brazil"}, {"link": "", "title": "Architecting principles for systems-of-systems"}, {"link": "", "title": "Bringing semantics to web services with owl-s"}, {"link": "/document/920599", "title": "Semantic web services"}, {"link": "", "title": "A model for reasoning about the privacy impact of composite service execution in pervasive computing"}, {"link": "", "title": "Service oriented architectures: approaches, technologies and research issues"}, {"link": "", "title": "Service-oriented middleware for the future internet: state of the art and research directions"}, {"link": "", "title": "Yarta: A Middleware for Managing Mobile Social Ecosystems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203003"}
{"ref": [{"link": "/document/1641735", "title": "Mobile robot programming in education"}, {"link": "/document/6335453", "title": "A one-year introductory robotics curriculum for computer science upperclassmen"}, {"link": "", "title": "Using autonomous robotics to teach science and engineering"}, {"link": "", "title": "A multidisciplinary model for using robotics in engineering education"}, {"link": "", "title": "Measuring the effectiveness of robots in teaching computer science"}, {"link": "", "title": "Personalizing cs1 with robots"}, {"link": "", "title": "Learning to program with personal robots: Influences on student motivation"}, {"link": "", "title": "Using robotics to teach software engineering"}, {"link": "", "title": "Software engineering in robotics"}, {"link": "", "title": "Why using robots to teach computer science can be successful theoretical reflection to andragogy and minimalism"}, {"link": "", "title": "Active-constructive-interactive: A conceptual framework for differentiating learning activities"}, {"link": "", "title": "The Modern Practice of Adult Education: from Pedagogy to Andragogy"}, {"link": "", "title": "Minimalism beyond the Nurnberg funnel"}, {"link": "/document/1249235", "title": "Perspectives on standardization in mobile robot programming: The carnegie mellon navigation (CARMEN) toolkit"}, {"link": "", "title": "Moos - misssion orientated operating suite"}, {"link": "/document/4437755", "title": "Microsoft robotics studio: A technical introduction"}, {"link": "", "title": "ROS: an open-source robot operating system"}, {"link": "", "title": "Practical framework for contract-based concurrent object-oriented programming"}, {"link": "", "title": "Prototyping a concurrency model"}, {"link": "", "title": "Simple concurrency for robotics with the Roboscoop framework"}, {"link": "/document/6092581", "title": "Design of an empirical study for comparing the usability of concurrent programming languages"}, {"link": "", "title": "Object-Oriented Software Construction, 2nd ed."}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley"}, {"link": "", "title": "Pattern-Oriented Software Architecture Volume 2: Patterns for Concurrent and Networked Objects"}, {"link": "", "title": "Probabilistic Robotics"}, {"link": "", "title": "Introduction to Autonomous Mobile Robots, 2nd ed."}, {"link": "", "title": "Tangentbug: A range-sensor-based navigation algorithm"}, {"link": "", "title": "Object-oriented software construction"}, {"link": "", "title": "Human Learning, 5th ed."}, {"link": "/document/5980567", "title": "3D is here: Point Cloud Library (PCL)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202987"}
{"ref": [{"link": "", "title": "Java visualization using BlueJ"}, {"link": "", "title": "Objects First-does it work?"}, {"link": "", "title": "Fourteen pedagogical patterns, 12.01.2006"}, {"link": "", "title": "Teaching an industry-oriented Software Engineering course"}, {"link": "", "title": "The education of the Information Systems engineer: To meet the present and future needs for staffing of the IT industry with appropriately qualified and trained people, new and radical approached to education and training are required"}, {"link": "", "title": "Teaching Objects-First in introductory Computer Science"}, {"link": "", "title": "Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Core Java 2"}, {"link": "", "title": "A first look at novice compilation behaviour using BlueJ"}, {"link": "", "title": "Guidelines for teaching Object Orientation with Java"}, {"link": "", "title": "Towards an Object-Oriented curriculum"}, {"link": "", "title": "The outside-in method of teaching introductory programming"}, {"link": "", "title": "Touch of Class: Learning to Program Well with Object Technology"}, {"link": "", "title": "How we teach Software Engineering"}, {"link": "", "title": "Umfrage: Java ist verbreitetste Programmiersprache bei IT-Dienstleistern (in German)"}, {"link": "", "title": "Empirical study of novice errors and error paths in Object-Oriented programming"}, {"link": "", "title": "The Inverted Curriculum in practice"}, {"link": "", "title": "Objects from the beginning-with GUIs"}, {"link": "", "title": "Planned software reuse in Object-Oriented Software Engineering education"}, {"link": "", "title": "Welche Kompetenzen ben\u00f6tigt ein Software Ingenieur? (in German)"}, {"link": "", "title": "Integrating research, reuse, and integration into Software Engineering course"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202991"}
{"ref": [{"link": "", "title": "Incorporating social software into distributed agile development environments"}, {"link": "", "title": "The Art of Community: Building the New Age of Participation"}, {"link": "", "title": "Cohesive and Isolated Development with Branches"}, {"link": "", "title": "2 reasons to keep an eye on github"}, {"link": "", "title": "The impact of communication structure on new product development outcomes"}, {"link": "/document/6205767", "title": "Coordination breakdowns and their impact on development productivity and software failures"}, {"link": "", "title": "Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity"}, {"link": "", "title": "Basics of qualitative research: Techniques and procedures for developing grounded theory"}, {"link": "", "title": "Free/libre open-source software development: What we know and what we do not know"}, {"link": "", "title": "Coordination of free/libre open source software development"}, {"link": "", "title": "Selforganization of teams in free/libre open source software development"}, {"link": "", "title": "Social coding in github: transparency and collaboration in an open software repository"}, {"link": "/document/6357175", "title": "Leveraging transparency"}, {"link": "", "title": "Progressive open source"}, {"link": "", "title": "A framework analysis of the open source software development paradigm"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "A case study of open source tools and practices in a commercial setting"}, {"link": "", "title": "Group awareness in distributed software development"}, {"link": "/document/4221620", "title": "Global software engineering: The future of sociotechnical coordination"}, {"link": "/document/6606619", "title": "Cassandra: Proactive conflict minimization through optimized task scheduling"}, {"link": "", "title": "Github' s new ceo: We're serious about the enterprise"}, {"link": "/document/5420797", "title": "Collaboration tools for global software engineering"}, {"link": "", "title": "Applying open source development practices inside a company"}, {"link": "", "title": "The interdisciplinary study of coordination"}, {"link": "", "title": "Impression formation in online peer production: Activity traces and personal profiles in github"}, {"link": "", "title": "This week on github: In good company"}, {"link": "", "title": "Performance and participation in open source software on github"}, {"link": "", "title": "Improving software developers' fluency by recommending development environment commands"}, {"link": "", "title": "Peer interaction effectively, yet infrequently, enables programmers to discover new tools"}, {"link": "", "title": "Creating a shared understanding of testing culture on a social coding site"}, {"link": "/document/4786953", "title": "Open collaboration within corporations using software forges"}, {"link": "", "title": "Open source software peer review practices: A case study of the apache server"}, {"link": "", "title": "Towards supporting awareness of indirect conflicts across software configuration management workspaces"}, {"link": "", "title": "Tesseract: Interactive visual exploration of socio-technical relationships in software development"}, {"link": "/document/5928359", "title": "Palantir: Early detection of development conflicts arising from parallel code changes"}, {"link": "", "title": "A framework for creating hybrid-open source software communities"}, {"link": "", "title": "Key factors for adopting inner source"}, {"link": "", "title": "On the use of visualization to support awareness of human activities in software development: a survey and a framework"}, {"link": "", "title": "Investigating the geography of open source software through github"}, {"link": "", "title": "Network structure of social coding in github"}, {"link": "", "title": "Let' s Talk About It: Evaluating Contributions through Discussion in GitHub"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in github"}, {"link": "", "title": "Social media and success in open source projects"}, {"link": "", "title": "Impact of internal open source development on reuse: Participatory reuse in action"}, {"link": "/document/4221622", "title": "Collaboration in software engineering: A roadmap"}, {"link": "", "title": "Design rule hierarchies and parallelism in software development tasks"}, {"link": "", "title": "Social influences on secure development tool adoption: Why security tools spread"}, {"link": "", "title": "Collaboration with lean media: How open-source software succeeds. CSCW '00"}, {"link": "", "title": "Github workflows inside of a company"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194607"}
{"ref": [{"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "Software testing research: Achievements, challenges, dreams"}, {"link": "", "title": "Korat: Automated testing based on java predicates"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Whitebox fuzzing for security testing"}, {"link": "/document/6606562", "title": "Guided test generation for web applications"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Enhancing symbolic execution with veritesting"}, {"link": "", "title": "Comparison and integration of genetic algorithms and dynamic symbolic execution for security testing of crosssite scripting vulnerabilities"}, {"link": "", "title": "Symbolic execution for software testing in practice: Preliminary assessment"}, {"link": "/document/6100134", "title": "BEST: A symbolic testing tool for predicting multi-threaded program failures"}, {"link": "", "title": "SEDGE: Symbolic example data generation for dataflow programs"}, {"link": "/document/6227146", "title": "Make test-zesti: A symbolic execution solution for improving regression testing"}, {"link": "/document/6100093", "title": "Automatic generation of load tests"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Reducing test inputs using information partitions"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Directed test generation using symbolic grammars"}, {"link": "", "title": "Defective error/pointer interactions in the linux kernel"}, {"link": "", "title": "Error propagation analysis for file systems"}, {"link": "", "title": "Learning constraints for consistent timeline extraction"}, {"link": "", "title": "Jointly identifying temporal relations with markov logic"}, {"link": "", "title": "A specificationbased test case generation method for uml/ocl"}, {"link": "", "title": "Generating tests from uml specifications"}, {"link": "", "title": "KATCH: High-coverage testing of software patches"}, {"link": "", "title": "The Stanford natural language processing dependencies"}, {"link": "", "title": "/* iComment: Bugs or bad comments? */"}, {"link": "", "title": "Inferring resource specifications from natural language api documentation"}, {"link": "", "title": "Stanford typed dependencies manual"}, {"link": "", "title": "Executable and linkable format"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "Docovery: Toward generic automatic document recovery"}, {"link": "", "title": "High-coverage symbolic patch testing"}, {"link": "", "title": "OSDI'08 Coreutils Experiments"}, {"link": "", "title": "Readelf bug 16664 \u2013 Segmentation fault in process_attributes() of readelf.c"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "S2E: A platform for invivo multi-path analysis of software systems"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Symbolic pathfinder: Integrating symbolic execution with model checking for java bytecode analysis"}, {"link": "", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Pex-white box test generation for. net"}, {"link": "", "title": "Directed test suite augmentation: Techniques and tradeoffs"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "MACE: Model-inference-assisted concolic exploration for protocol and vulnerability discovery"}, {"link": "", "title": "Strategies for scalable symbolic execution-driven test generation for programs"}, {"link": "", "title": "Exploiting program dependencies for scalable multiple-path symbolic execution"}, {"link": "", "title": "Carfast: Achieving higher statement coverage faster"}, {"link": "/document/1702725", "title": "Theories of program testing and the application of revealing subdomains"}, {"link": "", "title": "Parallel symbolic execution for structural test generation"}, {"link": "", "title": "Path exploration based on symbolic output"}, {"link": "", "title": "DASE: Document-assisted symbolic execution for improving automated test generation"}, {"link": "", "title": "Expect the unexpected: Error code mismatches between documentation and the real world"}, {"link": "", "title": "aComment: Mining annotations from comments and code to detect interrupt-related concurrency bugs"}, {"link": "", "title": "@tComment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Inferring specifications for resources from natural language api documentation"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "PIT mutation operators"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194611"}
{"ref": [{"link": "", "title": "Challenges for SoS architecture description"}, {"link": "", "title": "Mechanisms for leveraging models at runtime in self-adaptive software"}, {"link": "/document/5280648", "title": "Models@run.time"}, {"link": "", "title": "Towards an architectural viewpoint for systems of software intensive systems"}, {"link": "", "title": "Facilitating system-of-systems evolution with architecture support"}, {"link": "", "title": "Profiling systems using the defining characteristics of systems of systems (SoS)"}, {"link": "", "title": "An emergent perspective on interoperation in systems of systems"}, {"link": "", "title": "Towards a conceptual model for software-intensive system-of-systems"}, {"link": "", "title": "A systematic literature review on the description of software architectures for systems of systems"}, {"link": "", "title": "ISO/IEC/IEEE International Standard for Systems and Software Engineering - Architectural Description"}, {"link": "", "title": "Composing distributed systems: Overcoming the interoperability challenge"}, {"link": "", "title": "Architecting principles for systems-of-systems"}, {"link": "/document/825767", "title": "A classification and comparison framework for software architecture description languages"}, {"link": "", "title": "Elements of Interaction - Turing Award Lecture"}, {"link": "", "title": "Communicating and mobile systems"}, {"link": "", "title": "The state of the art and future perspectives in systems-of-systems software architectures"}, {"link": "", "title": "\u03c0-ADL: An architecture description language based on the higher-order typed \u03c0 -calculus for specifying dynamic and mobile software architectures"}, {"link": "", "title": "Toward an evolutionary system of systems architecture"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203109"}
{"ref": [{"link": "", "title": "Eclipse Code Recommenders"}, {"link": "", "title": "Complete Completion Using Types and Weights"}, {"link": "/document/6178187", "title": "Exploiting Dynamic Information in IDEs Improves Speed and Correctness of Software Maintenance Tasks"}, {"link": "", "title": "Augmenting Eclipse with Dynamic Information"}, {"link": "", "title": "Maintaining Mental Models: A Study of Developer Work Habits"}, {"link": "", "title": "Temporal Code Completion and Navigation"}, {"link": "", "title": "Towards Multidimensional Integrated Development Environment for Improved Productivity"}, {"link": "", "title": "ANTLR"}, {"link": "", "title": "Pro Git"}, {"link": "", "title": "An Integration Resolution Algorithm for Mining Multiple Branches in Version Control Systems"}, {"link": "", "title": "Identifying Refactorings from Source-Code Changes"}, {"link": "", "title": "When Functions Change Their Names: Automatic Detection of Origin Relationships"}, {"link": "", "title": "Is It Dangerous to Use Version Control Histories to Study Source Code Evolution?"}, {"link": "", "title": "EGit"}, {"link": "", "title": "Refactoring Lab Session"}, {"link": "", "title": "Drag-and-drop Refactoring: Intuitive and Efficient Program Transformation"}, {"link": "/document/4222604", "title": "Refactoring-Aware Configuration Management for Object-Oriented Programs"}, {"link": "/document/4509441", "title": "Effective Software Merging in the Presence of Object-Oriented Refactorings"}, {"link": "", "title": "ReBA: Refactoringaware Binary Adaptation of Evolving Libraries"}, {"link": "", "title": "Tempura User Guide"}, {"link": "", "title": "EGit User Guide"}, {"link": "/document/6227133", "title": "Active Code Completion"}, {"link": "", "title": "Type-directed Completion of Partial Expressions"}, {"link": "", "title": "Using Structure-based Recommendations to Facilitate Discoverability in APIs"}, {"link": "", "title": "Speculative Analysis of Integrated Development Environment Recommendations"}, {"link": "", "title": "Calcite: Completing Code Completion for Constructors Using Crowds"}, {"link": "", "title": "An Exploratory Study of How Developers Seek, Relate, and Collect Relevant Information During Software Maintenance Tasks"}, {"link": "", "title": "Navigating and Querying Code Without Getting Lost"}, {"link": "/document/4362639", "title": "How Programmers Can Turn Comments into Waypoints for Code Navigation"}, {"link": "/document/1698756", "title": "Code Thumbnails: Using Spatial Memory to Navigate Source Code"}, {"link": "", "title": "How Program History Can Improve Code Completion"}, {"link": "", "title": "Improving Code Completion with Program History"}, {"link": "", "title": "Learning from Examples to Improve Code Completion Systems"}, {"link": "/document/1510128", "title": "NavTracks: Supporting Navigation in Software Maintenance"}, {"link": "/document/6100095", "title": "Do Software Engineers Benefit from Source Code Navigation with Traceability? \u2013 An experiment in Software Change Management"}, {"link": "", "title": "Visualization of fine-grained code change history"}, {"link": "", "title": "Crystal: Precise and Unobtrusive Conflict Warnings"}, {"link": "", "title": "Proactive Detection of Collaboration Conflicts"}, {"link": "/document/6227180", "title": "Improving Early Detection of Software Merge Conflicts"}, {"link": "", "title": "A Change-based Approach to Software Evolution"}, {"link": "", "title": "SpyWare: A Change-Aware Development Toolset"}, {"link": "", "title": "Recording Finer-grained Software Evolution with IDE: An Annotation-based Approach"}, {"link": "/document/1510134", "title": "The Role of Refactorings in API Evolution"}, {"link": "", "title": "An Empirical Investigation into the Role of API-level Refactorings During Software Evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194575"}
{"ref": [{"link": "", "title": "Classifying software changes: Clean or buggy?"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "Defect prediction from static code features: Current results, limitations, new approaches"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "", "title": "Predicting defects for eclipse"}, {"link": "/document/6224300", "title": "Think locally, act globally: Improving defect and effort prediction models"}, {"link": "", "title": "Predicting fault incidence using software change history"}, {"link": "", "title": "On the prediction of the evolution of libre software projects"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Early prediction of software component reliability"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "Method-level bug prediction"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Why software repositories are not used for defect-insertion circumstance analysis more often: A case study"}, {"link": "", "title": "Does bug prediction support human developers? Findings from a google case study"}, {"link": "", "title": "Personalized defect prediction"}, {"link": "/document/4271036", "title": "Applying novel resampling strategies to software defect prediction"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "", "title": "Correlations between bugginess and time-based commit characteristics"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "It's not a bug, it's a feature: How misclassification impacts bug prediction"}, {"link": "", "title": "Snowball: A language for stemming algorithms"}, {"link": "", "title": "The WEKA data mining software: An update"}, {"link": "", "title": "DECKARD: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/6341763", "title": "A large-scale empirical study of just-in-time quality assurance"}, {"link": "", "title": "Do time of day and developer experience affect commit bugginess?"}, {"link": "", "title": "How long did it take to fix bugs?"}, {"link": "", "title": "An empirical study of dormant bugs"}, {"link": "", "title": "SMOTE: Synthetic minority over-sampling technique"}, {"link": "", "title": "Estimating continuous distributions in Bayesian classifiers"}, {"link": "", "title": "Instance-based learning algorithms"}, {"link": "", "title": "K*: An instance-based learner using an entropic distance measure"}, {"link": "", "title": "Additive logistic regression: a statistical view of boosting"}, {"link": "", "title": "Locally weighted learning"}, {"link": "", "title": "Instance-based learning: Nearest neighbor with generalization"}, {"link": "", "title": "Pegasos: Primal estimated sub-gradient solver for svm"}, {"link": "", "title": "Using class imbalance learning for software defect prediction"}, {"link": "", "title": "The alternating decision tree learning algorithm"}, {"link": "/document/6824804", "title": "Researcher bias: The use of machine learning in software defect prediction"}, {"link": "", "title": "Influence of confirmation biases of developers on software quality: an empirical study"}, {"link": "", "title": "An industrial research program in software fault prediction"}, {"link": "", "title": "An industrial study on the risk of software changes"}, {"link": "", "title": "Assessing the impact of using fault prediction in industry"}, {"link": "", "title": "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm"}, {"link": "/document/6392473", "title": "Using coding-based ensemble learning to improve software defect prediction"}, {"link": "/document/6319220", "title": "Compressed c4.5 models for software defect prediction"}, {"link": "", "title": "Cost-sensitive boosting neural networks for software defect prediction"}, {"link": "", "title": "Dictionary learning based software defect prediction"}, {"link": "/document/5575249", "title": "Using search-based metric selection and oversampling to predict fault prone modules"}, {"link": "", "title": "SMOTEBoost: Improving prediction of the minority class in boosting"}, {"link": "", "title": "Negative correlation learning for classification ensembles"}, {"link": "", "title": "The misuse of the NASA metrics data program data sets for automated software defect prediction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202954"}
{"ref": [{"link": "", "title": "A Spiral Model of Software Development and Enhancement, ACM SIGSOFT Software Engineering Notes"}, {"link": "", "title": "The Ethics of Internet Research, Handbook of Online Research Methods, SAGE"}, {"link": "", "title": "A software development solution"}, {"link": "", "title": "The Public is the Priority: Making Decisions Using the Software Engineering Code of Ethics"}, {"link": "/document/6227089", "title": "UDesignIt: Towards social media for community-driven design"}, {"link": "", "title": "Single infrastructure utility provision to households: Technological feasibility study"}, {"link": "", "title": "Children and the Internet"}, {"link": "", "title": "Safeguarding Cyborg Childhoods: Incorporating the On/Offline Behaviour of Children into Everyday Social Work Practices"}, {"link": "/document/6957295", "title": "iCOP: Automatically Identifying New Child Abuse Media in P2P Networks"}, {"link": "", "title": "Who Am I? Analyzing Digital Personas in Cybercrime Investigations"}, {"link": "", "title": "Software Engineering Code of Ethics and Professional Practice, ACM/IEEE"}, {"link": "", "title": "Control and Contingency: Maintaining Ethical Stances in Research"}, {"link": "", "title": "But the Data is Already Public: On the Ethics of Research in Facebook"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203005"}
{"ref": [{"link": "", "title": "Teaching reuse-driven software engineering through innovative role playing"}, {"link": "", "title": "Software engineering"}, {"link": "/document/296806", "title": "Software Engineering Education: A Place in the Sun?"}, {"link": "", "title": "Steps in developing an advanced software engineering course using problem based learning"}, {"link": "", "title": "Supporting Reflective Practice in Software Engineering Education through a Studio-Based Approach"}, {"link": "", "title": "Studios in Software Engineering Education: Towards an Evaluable Model"}, {"link": "/document/6816784", "title": "Observations of a Software Engineering Studio: Reflecting with the Studio Framework"}, {"link": "", "title": "An activity-based sensor networks course for undergraduates with sun spot devices"}, {"link": "", "title": "Agile Product Management with Scrum: Creating Products that Customers Love"}, {"link": "/document/329409", "title": "Fifteen principles of software engineering"}, {"link": "", "title": "Teaching in a Software Design Studio: Implications for Modeling Education"}, {"link": "", "title": "Educating the Reflective Practitioner"}, {"link": "", "title": "Exploring studiobased instructional models for computing education"}, {"link": "", "title": "Teaching software development in a studio environment"}, {"link": "", "title": "A review of studio-based learning in computer science"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202989"}
{"ref": [{"link": "", "title": "Emotional Design: Why We Love (or Hate) Everyday Things"}, {"link": "", "title": "Benefits of emotional design in multimedia instruction"}, {"link": "", "title": "Emotional design in multimedia learning"}, {"link": "", "title": "Emotional design in multimedia learning: Effects of shape and color on affect and learning"}, {"link": "", "title": "Multimedia Learning"}, {"link": "", "title": "Interactive multimodal learning environments"}, {"link": "", "title": "Incorporating motivation into multimedia learning"}, {"link": "/document/1510539", "title": "JHAVE: Supporting algorithm visualization"}, {"link": "", "title": "A Meta-study of algorithm visualization effectiveness"}, {"link": "", "title": "Exploring the role of visualization and engagement in computer science education"}, {"link": "", "title": "A review of generic program visualization systems for introductory programming education"}, {"link": "", "title": "Principles of educational multimedia user interface design"}, {"link": "", "title": "Should there be a three-strikes rule against pure discovery learning?"}, {"link": "", "title": "Notional machines and introductory programming education"}, {"link": "", "title": "A principled approach to teaching OO first"}, {"link": "", "title": "The locker metaphor to teach dynamic memory"}, {"link": "", "title": "Animation metaphors for object-oriented concepts"}, {"link": "", "title": "Role-play virtual environments: Recreational learning of software design"}, {"link": "", "title": "Exploring the effect of graphical metaphors on the performance of learning computer programming concepts in adult learners: A pilot study"}, {"link": "", "title": "A study of the development of students' visualizations of program state during an elementary object-oriented programming course"}, {"link": "", "title": "An empirical evaluation of visual metaphors in the animation of roles of variables"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202993"}
{"ref": [{"link": "", "title": "GitHub repository hosting service"}, {"link": "", "title": "BitBucket repository hosting service"}, {"link": "", "title": "SourceForge source code repository"}, {"link": "", "title": "PARSEWeb: a programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "On synthesizing code from free-form queries"}, {"link": "", "title": "Smartsynth: Synthesizing smartphone automation scripts from natural language"}, {"link": "", "title": "Complete completion using types and weights"}, {"link": "", "title": "Speech and Language Processing, 2nd ed"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "Generating typed dependency parses from phrase structure parses"}, {"link": "", "title": "Feature-rich part-of-speech tagging with a cyclic dependency network"}, {"link": "", "title": "The hungarian method for the assignment problem"}, {"link": "", "title": "Assignment Problems"}, {"link": "", "title": "WordNet: An Electronic Lexical Database. Bradford Books"}, {"link": "", "title": "Codehint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Xsnippet: mining for sample code"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "", "title": ""}, {"link": "", "title": "Jungloid mining: helping to navigate the api jungle"}, {"link": "", "title": "Macho: Writing programs with natural language and examples"}, {"link": "", "title": "Keyword programming in Java"}, {"link": "", "title": "NaturalJava: A natural language interface for programming in Java"}, {"link": "", "title": "SNIFF: A search engine for java using free-form queries"}, {"link": "", "title": "Semantics-based code search"}, {"link": "", "title": "Solving the search for source code"}, {"link": "", "title": "Babel pidgin: SBSE can grow and graft entirely new functionality into a real world system"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203044"}
{"ref": [{"link": "", "title": "AddressSanitizer Team. AddressSanitizer"}, {"link": "/document/6392098", "title": "Building useful program analysis tools using an extensible compiler"}, {"link": "/document/4602670", "title": "Using static analysis to find bugs"}, {"link": "", "title": "The Google FindBugs fixit"}, {"link": "", "title": "Evaluating static analysis defect warnings on production software"}, {"link": "/document/6648198", "title": "Fix-it: An extensible code auto-fix component in review bot"}, {"link": "", "title": "Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation"}, {"link": "", "title": "A few billion lines of code later"}, {"link": "", "title": "Checkstyle Java Linter"}, {"link": "", "title": "Clang compiler"}, {"link": "", "title": "ClangTidy"}, {"link": "", "title": "Coverity"}, {"link": "", "title": "Coverity 2012 scan report"}, {"link": "", "title": "QL: Object-Oriented Queries Made Easy"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "A comparative study of industrial static analysis tools. Electronic Notes in Theoretical Computer Science"}, {"link": "", "title": "error-prone: Catch common Java mistakes as compile-time errors"}, {"link": "", "title": "FindBugs"}, {"link": "", "title": "Gerrit code review"}, {"link": "", "title": "Google. Build in the cloud: How the build system works"}, {"link": "", "title": "Understanding the value of program analysis tools"}, {"link": "", "title": "Jetbrains. IntelliJ IDEA"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Klocwork"}, {"link": "/document/1293079", "title": "Righting software"}, {"link": "", "title": "Maintaining mental models: A study of developer work habits"}, {"link": "/document/4343745", "title": "Toward reducing fault fix time: Understanding developer behavior for the design of automated fault detection tools"}, {"link": "", "title": "Does bug prediction support human developers? findings from a google case study"}, {"link": "", "title": "Microservices"}, {"link": "", "title": "Making defect-finding tools work for you"}, {"link": "", "title": "Protocol Buffers"}, {"link": "", "title": "Pylint python linter"}, {"link": "", "title": "Predicting accurate and actionable static analysis warnings: An experimental approach"}, {"link": "", "title": "Thread-safety annotation checking"}, {"link": "", "title": "Shipshape program analysis platform"}, {"link": "", "title": "How developers use data race detection tools"}, {"link": "", "title": "Semmle"}, {"link": "", "title": "Programmers' build errors: a case study (at google)"}, {"link": "", "title": "ThreadSanitizer: Data race detection in practice"}, {"link": "", "title": "Dynamic race detection with LLVM compiler"}, {"link": "", "title": "The Eclipse Foundation. The Eclipse Software Development Kit"}, {"link": "", "title": "Scalable, example-based refactorings with refaster"}, {"link": "", "title": "How Google Tests Software. Always learning"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194609"}
{"ref": [{"link": "", "title": "ESP: Path-sensitive program verification in polynomial time"}, {"link": "", "title": "Practical memory leak detection using guarded value-flow analysis"}, {"link": "", "title": "Finite state description of communication protocols"}, {"link": "", "title": "The art of software testing"}, {"link": "", "title": "Effective typestate verification in the presence of aliasing"}, {"link": "", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "", "title": "Checking system rules using system-specific, programmer-written compiler extensions"}, {"link": "", "title": "Adding trace matching with free variables to AspectJ"}, {"link": "", "title": "MOP: an efficient and generic runtime verification framework"}, {"link": "", "title": "Combining test case generation and runtime verification"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "jFuzz: A concolic whitebox fuzzer for java"}, {"link": "", "title": "T.J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "Principles of program analysis"}, {"link": "", "title": "Efficient hybrid typestate analysis by determining continuation-equivalent states"}, {"link": "", "title": "A brief account of runtime verification"}, {"link": "", "title": "Introduction to automata theory"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Glazed Lists Library"}, {"link": "", "title": "Automatic handling of native methods in java pathfinder"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of java bytecode"}, {"link": "", "title": "Combining unit-level symbolic execution and system-level concrete execution for testing nasa software"}, {"link": "", "title": "Metrics"}, {"link": "", "title": "Tellurium UID Description Language (UDL)"}, {"link": "", "title": "The dacapo benchmarks: java benchmarking development and analysis"}, {"link": "", "title": "Java agent for memory measurements"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "How we get there: A context-guided search strategy in concolic testing"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "Snugglebug: a powerful approach to weakest preconditions"}, {"link": "", "title": "Verifying systems rules using rule-directed symbolic execution"}, {"link": "", "title": "Checking properties described by state machines: On synergy of instrumentation, slicing, and symbolic execution"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "/document/6227146", "title": "make test-zesti: A symbolic execution solution for improving regression testing"}, {"link": "", "title": "Path optimization in programs and its application to debugging"}, {"link": "", "title": "MOPS: an infrastructure for examining security properties of software"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "Scalable error detection using boolean satisfia-bility"}, {"link": "", "title": "Calysto: scalable and precise extended static checking"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "", "title": "Synergy: a new algorithm for property checking"}, {"link": "", "title": "Proofs from tests"}, {"link": "", "title": "Compositional may-must program analysis: unleashing the power of alternation"}, {"link": "", "title": "An empirical study of optimizations in YOGI"}, {"link": "", "title": "Fast algorithms for Dyck-CFL-reachability with applications to alias analysis"}, {"link": "", "title": "An incremental points-to analysis with CFL-reachability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194613"}
{"ref": [{"link": "", "title": "Cascade"}, {"link": "", "title": "JSR 308: Annotations on Java Types"}, {"link": "", "title": "Type Qualifier Inference Study Artifacts"}, {"link": "", "title": "A Framework for Implementing Pluggable Type Systems"}, {"link": "", "title": "Parameter reference immutability: Formal definition, inference tool, and comparison"}, {"link": "/document/6520859", "title": "Early Detection of Collaboration Conflicts and Risks"}, {"link": "", "title": "Beyond Assertions: Advanced Specification and Verification with JML and ESC/Java2"}, {"link": "", "title": "Semantic Type Qualifiers"}, {"link": "", "title": "Inference of User-Defined Type Qualifiers and Qualifier Rules"}, {"link": "", "title": "Propagation of JML Non-null Annotations in Java Programs"}, {"link": "", "title": "Tunable Static Inference for Generic Universe Types"}, {"link": "", "title": "Pluggable checking and inferencing of nonnull types for Java"}, {"link": "/document/908957", "title": "Dynamically Discovering Likely Program Invariants to Support Program Evolution"}, {"link": "", "title": "Houdini, an Annotation Assistant for ESC/Java"}, {"link": "", "title": "Extended Static Checking for Java"}, {"link": "", "title": "Flow-insensitive Type Qualifiers"}, {"link": "", "title": "JavaUI: Effects for Controlling UI Object Access"}, {"link": "", "title": "Type Qualifier Inference for Java"}, {"link": "", "title": "Analysis-Based Verification: A Programmer-Oriented Approach to the Assurance of Mechanical Program Properties"}, {"link": "", "title": "Inference and Checking of Object Ownership"}, {"link": "", "title": "ReIm & ReImInfer: Checking and Inference of Reference Immutability and Method Purity"}, {"link": "", "title": "A Non-Null Annotation Inferencer for Java Bytecode"}, {"link": "", "title": "Semantic Foundations and Inference of Non-null Annotations"}, {"link": "", "title": "Path Projection for User-Centered Static Analysis Tools"}, {"link": "", "title": "Searching for Type-Error Messages"}, {"link": "", "title": "Verifying Dereference Safety via Expanding-Scope Analysis"}, {"link": "", "title": "How We Refactor, and How We Know It"}, {"link": "", "title": "Making Offline Analyses Continuous"}, {"link": "", "title": "Speculative Analysis of Integrated Development Environment Recommendations"}, {"link": "", "title": "Accurate Interprocedural Null-Dereference Analysis for Java"}, {"link": "", "title": "A Comparative Study of Manual and Automated Refactorings"}, {"link": "", "title": "Refactoring Object-Oriented Frameworks"}, {"link": "", "title": "Practical Pluggable Types for Java"}, {"link": "", "title": "Inference of Reference Immutability"}, {"link": "", "title": "Detecting Format String Vulnerabilities with Type Qualifiers"}, {"link": "", "title": "A type system for regular expressions"}, {"link": "", "title": "The Nullness Analyser of Julia"}, {"link": "", "title": "Inference of Field Initialization"}, {"link": "", "title": "Kilim: Isolation-Typed Actors for Java"}, {"link": "", "title": "Javari: Adding Reference Immutability to Java"}, {"link": "", "title": "Less Is Sometimes More in the Automation of Software Evolution Tasks"}, {"link": "", "title": "A Compositional Paradigm of Automating Refactorings"}, {"link": "/document/6227190", "title": "Use, Disuse, and Misuse of Automated Refactorings"}, {"link": "", "title": "A Type System for Format Strings"}, {"link": "", "title": "Toward General Diagnosis of Static Errors"}, {"link": "", "title": "Ownership and immutability in generic Java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194577"}
{"ref": [{"link": "", "title": "Android (operating system)"}, {"link": "", "title": "Droidbenchbenchmarks"}, {"link": "", "title": "Ibm security appscan source"}, {"link": "", "title": "Intents and intent filters"}, {"link": "", "title": "libraries for analysis"}, {"link": "", "title": "Instrumenting android and java applications as easy as abc"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Appguard: enforcing user requirements on android apps"}, {"link": "", "title": "Automatically securing permission-based software by reducing the attack surface: an application to android"}, {"link": "", "title": "Improving privacy on android smartphones through in-vivo bytecode instrumentation"}, {"link": "", "title": "Dexpler: Converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "/document/6813664", "title": "Static analysis for extracting permission checks of a large scale framework: The challenges and solutions for analyzing android"}, {"link": "", "title": "Inter-procedural data-flow analysis with ifds/ide and soot"}, {"link": "", "title": "Analyzing interapplication communication in android"}, {"link": "", "title": "Analysis of offloading as an approach for energy-aware applications on android os: A case study on image processing"}, {"link": "", "title": "Pios: Detecting privacy leaks in ios applications"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "A study of android application security"}, {"link": "", "title": "Why eve and mallory love android: An analysis of android ssl (in) security"}, {"link": "", "title": "A survey of mobile malware in the wild"}, {"link": "", "title": "Scandroid: Automated security certification of android applications"}, {"link": "", "title": "Androidleaks: automatically detecting potential privacy leaks in android applications on a large scale"}, {"link": "", "title": "Privacy leakage in mobile computing: Tools, methods, and characteristics"}, {"link": "", "title": "These aren't the droids you're looking for: retrofitting android to protect data from imperious applications"}, {"link": "", "title": "AsDroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction"}, {"link": "", "title": "ScanDal: Static analyzer for detecting privacy leaks in android applications"}, {"link": "", "title": "Android taint flow analysis for app sets"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "Automatically exploiting potential component leaks in android applications"}, {"link": "", "title": "Detecting privacy leaks in android apps"}, {"link": "", "title": "I know what leaked in your pocket: uncovering privacy leaks on Android Apps with Static Taint Analysis. Technical Report 978\u20132-87971-129-4_TR-SNT-2014-9"}, {"link": "", "title": "Mining energy-greedy api usage patterns in android apps: an empirical study"}, {"link": "", "title": "Chex: statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Automated detection and mitigation of inter-application security vulnerabilities in android (invited talk)"}, {"link": "", "title": "A framework for static detection of privacy leaks in android applications"}, {"link": "", "title": "Composite constant propagation: Application to android inter-component communication analysis"}, {"link": "", "title": "Effective inter-component communication mapping in android with epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing android sources and sinks"}, {"link": "", "title": "A system call-centric analysis and stimulation technique to automatically reconstruct android malware behaviors"}, {"link": "", "title": "On the effectiveness of dynamic taint analysis for protecting against private information leaks on android-based devices"}, {"link": "", "title": "Smvhunter: Large scale, automated detection of ssl/tls man-in-the-middle vulnerabilities in android apps"}, {"link": "", "title": "Andromeda: Accurate and scalable security analysis of web applications"}, {"link": "", "title": "Taj: effective taint analysis of web applications"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of android apps"}, {"link": "", "title": "The impact of vendor customizations on android security"}, {"link": "", "title": "Aurasium: practical policy enforcement for android applications"}, {"link": "", "title": "Leakminer: Detect information leakage on android with static taint analysis"}, {"link": "", "title": "Appintent: Analyzing sensitive data transmission in android for privacy leakage detection"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Detecting passive content leaks and pollution in android applications"}, {"link": "", "title": "Hey, you, get off of my market: Detecting malicious apps in official and alternative android markets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194581"}
{"ref": [{"link": "/document/6156", "title": "The TAME project. Towards improvement-oriented software environments"}, {"link": "", "title": "Aligning organizations through measurement The GQM+Strategies approach"}, {"link": "/document/5445168", "title": "Linking software development and business strategy through measurement"}, {"link": "", "title": "On the modeling and generation of service-oriented tool chains"}, {"link": "", "title": "Model-based testing user survey: Results and analysis"}, {"link": "/document/4343726", "title": "A Critical Analysis of Empirical Research in Software Testing"}, {"link": "", "title": "Challenges in automotive software engineering"}, {"link": "", "title": "An Approach for quantitative aggregation of evidence from controlled experiments in software engineering"}, {"link": "", "title": "A Bayesian justification for the linear pooling of opinions"}, {"link": "", "title": "Radio Technical Commission for Aeronautics Soft-ware, DO-178C:2011 Considerations in airborne systems and equipment certification"}, {"link": "", "title": "Optimizing quality assurance strategies through an integrated quality assurance approach"}, {"link": "", "title": "Analyzing the relationships between inspections and testing to provide a software testing focus"}, {"link": "", "title": "Towards an integrated methodology for the development and testing of complex systems-with example"}, {"link": "", "title": "Expressing best practices in (risk) analysis and testing of safety-critical systems using patterns"}, {"link": "", "title": "International Standardization Organization, ISO 26262:2011-Road vehicles-Functional safety"}, {"link": "", "title": "Reviewing 25 years of testing technique experiments"}, {"link": "/document/6200089", "title": "Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects"}, {"link": "", "title": "Creating a reference technology platform-Performing model-based safety analysis in a heterogeneous development environment"}, {"link": "", "title": "Combining model-based analysis and testing"}, {"link": "", "title": "Systematic literature reviews in software engineering-A tertiary study"}, {"link": "", "title": "Case studies for method and tool evaluation"}, {"link": "", "title": "The use of simulation techniques for hybrid software cost estimation and risk analysis"}, {"link": "", "title": "Beyond herding cats: aligning quantitative technology evaluation in large-scale research projects"}, {"link": "", "title": "Intuitions about combining opinions: Misappreciation of the averaging principle"}, {"link": "/document/4814954", "title": "Trends in Embedded Software Engineering"}, {"link": "/document/6928787", "title": "A model-based testing framework for automotive embedded systems"}, {"link": "", "title": ""}, {"link": "", "title": "Uncertainty a guide to dealing with uncertainty in quantitative risk and policy analysis"}, {"link": "/document/4497754", "title": "Improving evidence about software technologies: A look at model-based testing"}, {"link": "", "title": "Towards a method for combined model-based testing and analysis"}, {"link": "", "title": "Official website of the AUTOSAR partnership"}, {"link": "", "title": "Open Services for Lifecycle Collaboration (OSLC) web-site"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Practical model-based testing: A tools approach"}, {"link": "", "title": "The software quality challenge"}, {"link": "", "title": "Model-based testing for embedded systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202956"}
{"ref": [{"link": "", "title": "Puppet labs: It automation software for system administrators"}, {"link": "", "title": "Load testing software using deterministic state testing"}, {"link": "/document/464549", "title": "The automatic generation of load test suites and the assessment of the resulting software"}, {"link": "/document/1377198", "title": "The role of modeling in the performance testing of e-commerce applications"}, {"link": "", "title": "Causal inference for statistical fault localization"}, {"link": "", "title": "An empirical comparison of voting classification algorithms: Bagging, boosting, and variants. Machine Learning"}, {"link": "", "title": "ibatis jpetstore"}, {"link": "", "title": "Hilighter: Automatically building robust signatures of performance behavior for small-and large-scale systems"}, {"link": "", "title": "Bagging predictors"}, {"link": "/document/5188810", "title": "Performance management via adaptive thresholds with separate control of false positive and false negative errors"}, {"link": "", "title": "arules: Mining association rules and frequent itemsets"}, {"link": "", "title": "Repeated results analysis for middleware regression benchmarking"}, {"link": "", "title": "Correlating instrumentation data to system states: a building block for automated diagnosis and control"}, {"link": "", "title": "Capturing, indexing, clustering, and retrieving system history"}, {"link": "", "title": "Supervised and unsupervised discretization of continuous features"}, {"link": "", "title": "Dell dvd store"}, {"link": "", "title": "Mining performance regression testing repositories for automated performance analysis"}, {"link": "/document/5306347", "title": "Reduce, reuse, recycle, recover: Techniques for improved regression testing"}, {"link": "", "title": "Five common php database problems"}, {"link": "", "title": "Experiments of the effectiveness of dataflow-and controlftow-based test adequacy criteria"}, {"link": "", "title": "System monitoring with metric-correlation models: problems and solutions"}, {"link": "", "title": "Automatic fault detection and diagnosis in complex software systems by information-theoretic monitoring"}, {"link": "/document/4658079", "title": "Automatic identification of load testing problems"}, {"link": "/document/5306331", "title": "Automated performance analysis of load tests"}, {"link": "", "title": "Using load tests to automatically compare the subsystems of a large enterprise system"}, {"link": "", "title": "Automatic detection of performance deviations in the load testing of large scale systems"}, {"link": "", "title": "Neoload"}, {"link": "", "title": "Ultra-large-scale systems - the software challenge of the future"}, {"link": "/document/1036037", "title": "Architecture and dependability of large-scale internet services"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "Bagging, boosting, and c4.5"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "Rpe2 relative server performance"}, {"link": "", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "/document/4221619", "title": "The future of software performance engineering"}, {"link": "/document/1553572", "title": "Main effects screening: a distributed continuous quality assurance process for monitoring performance degradation in evolving software systems"}, {"link": "/document/1467838", "title": "Ensembles of models for automated diagnosis of system performance problems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202960"}
{"ref": [{"link": "", "title": "Cognitive revolution, virtuality and good life"}, {"link": "", "title": "Market Outlook"}, {"link": "", "title": "Video Shakes \u2013 A Bell Labs Study on Rising Video Demand and its Impact on Broadband IP Networks"}, {"link": "", "title": "Neocortex size as a constraint size in primates on group ecologically"}, {"link": "", "title": "Discrete hierarchical organization of social group sizes"}, {"link": "", "title": "Social network size in humans"}, {"link": "", "title": "Violent video game effects on aggression, empathy, and prosocial behavior in eastern and western countries: a meta-analytic review"}, {"link": "", "title": "On Killing: The Psychological Cost of Learning to Kill in War and Society"}, {"link": "", "title": "The relationship between cell phone use, physical and sedentary activity, and cardiorespiratory fitness in a sample of U.S. college students"}, {"link": "", "title": "Generation M: Media in the Lives of 8-to 18-Year-Olds"}, {"link": "", "title": "The relationship between cell phone use, academic performance, anxiety, and Satisfaction with Life in college students"}, {"link": "", "title": "The effects of prosocial video games on prosocial behaviors: International evidence from correlational, lon-gitudinal, and experimental studies"}, {"link": "", "title": "User-Centered Design and Evauation of Affective Interfaces. Chapter 1 in From Brows to Trust: Evaluating Embodied Conversational Agents"}, {"link": "", "title": "21st Century workforce"}, {"link": "", "title": "\u201cIf I Want to I Can Always Turn It Off\u201d: A Study on the Social Impacts of Mobile Phones"}, {"link": "", "title": "Psychology."}, {"link": "", "title": "Origins of shared attention in human infants. Chapter 16 in Diversity of Cognition: Evolution, Development, Domestication and Pathology"}, {"link": "", "title": "The need to belong: desire for interpersonal attachments as a fundamental human motivation"}, {"link": "", "title": "Our Common Future"}, {"link": "", "title": "Sustainability: Human, Social, Economic and Environmental"}, {"link": "", "title": "Reframing social sustainability reporting: towards an engaged approach"}, {"link": "", "title": "Thinking, fast and slow"}, {"link": "", "title": "Affect is a form of cognition: A neurobiological analysis"}, {"link": "", "title": "Affect: from information to intaraction"}, {"link": "", "title": "A brief history of Mobile Telecommunication in Europe"}, {"link": "", "title": "Falling asleep with Angry Birds, Facebook and Kindle: a large scale study on mobile application usage"}, {"link": "", "title": "How expensive are free smartphone apps?"}, {"link": "", "title": "Children's use of mobile phones, an international comparison 2012"}, {"link": "", "title": "A very modern milestone: One in three kids use a mobile phone or tablet before they can talk (online)"}, {"link": "", "title": "Children's screen viewing is related to psychological difficulties irrespective of physical activity"}, {"link": "", "title": "Swedish children complain their parents spend too long on phones"}, {"link": "", "title": "If telecommunication is such a good substitute for travel, why does congestion continue to get worse?"}, {"link": "", "title": "The hard truth about telecommuting"}, {"link": "", "title": "6 Apps and Gadgets to Keep Track of Your Child, Some Controversial (online)"}, {"link": "", "title": "Ethics and Privacy of Communications in the e-Polis, Encyclopedia of Digital Government"}, {"link": "", "title": "Statistic analysis of data access behavior in the mobile Internet"}, {"link": "", "title": "In the best families: tracking and relationships"}, {"link": "", "title": "Context-awareness, the missing block of social networking"}, {"link": "", "title": "Social networking on smartphones: When mobile phones become addictive"}, {"link": "", "title": "Problematic use of the mobile phone: a literature review and a pathways model"}, {"link": "", "title": "Magic in the air: Mobile communication and the transformation of social life"}, {"link": "", "title": "10 Reasons Why Handheld Devices Should Be Banned for Children Under the Age of 12"}, {"link": "", "title": "Vlildsamma datorspel och aggression"}, {"link": "", "title": "Just consequentialism and computing"}, {"link": "", "title": "iPad apps and screen time for kids: learning or babysitting?"}, {"link": "", "title": "Stress and glucocorticoids promote oligodendrogenesis in the adult hippocampus"}, {"link": "", "title": "The end of privacy: How total surveillance is becoming a reality"}, {"link": "", "title": "How computers change the way we think"}, {"link": "", "title": "Sense of Community: A Definition and Theory"}, {"link": "", "title": "Encyclopaedia Britannica, Information Theory"}, {"link": "", "title": "The Handbook of Information and Computer Ethics: Value sensitive design and information systems"}, {"link": "", "title": "Exploring initial challenges for green software engineering"}, {"link": "", "title": "Design for Privacy in Ubiquitous Computing Environment"}, {"link": "", "title": "Distilling Privacy Requirements for Mobile Applications Conference Item Distilling Privacy Requirements for Mobile Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203007"}
{"ref": [{"link": "", "title": "A project approach for teaching software architecture and web services in a software engineering course"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "Lectures abandoned: Active learning by active seminars"}, {"link": "", "title": "Teaching software architectures and aspect-oriented software development using open-source projects"}, {"link": "", "title": "The case of the soft software proposal"}, {"link": "", "title": "Cooperative learning"}, {"link": "", "title": "An effective learning environment for teaching problem solving in software architecture"}, {"link": "", "title": "An introduction to software architecture"}, {"link": "", "title": "Applying a distributed cscl activity for teaching software architecture"}, {"link": "", "title": "Statistics for the behavioral sciences"}, {"link": "", "title": "A model for swe course \u201csoftware architecture and design"}, {"link": "", "title": "Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development"}, {"link": "", "title": "How to solve it, a new aspect of mathematical method"}, {"link": "", "title": "Employing unas technology for software architecture education at the university of southern california"}, {"link": "/document/1620104", "title": "Software architecture education session report"}, {"link": "", "title": "Experiences in teaching quality attribute scenarios"}, {"link": "/document/1276534", "title": "Key considerations in teaching software architecture"}, {"link": "", "title": "Post-mortem analysis of student game projects in a software architecture course"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202995"}
{"ref": [{"link": "", "title": "Using students as experiment subjects-an analysis on graduate and freshmen student data"}, {"link": "/document/1166921", "title": "Conducting realistic experiments in software engineering"}, {"link": "/document/1514443", "title": "A survey of controlled experiments in software engineering"}, {"link": "", "title": "Status of Empirical Research in Software Engineering"}, {"link": "", "title": "Using Students as Subjects \u2013 A Comparative Study of Students and Professionals in Lead-Time Impact Assessment"}, {"link": "", "title": "Comparing Detection Methods For Software Requirements Inspections: A Replication Using Professional Subjects"}, {"link": "", "title": "MEReq: A Tool to Capture and Validate Multi \u2013 Lingual Requirements"}, {"link": "/document/1334904", "title": "Using students as subjects in requirements prioritization"}, {"link": "", "title": "Using students as subjects \u2013 an empirical evaluation"}, {"link": "/document/5076642", "title": "The Significance of Participant Experience when Evaluating Software Inspection Techniques"}, {"link": "", "title": "Using students as subjects in experiments on decision support systems"}, {"link": "", "title": "Factors Limiting Industrial Adoption of Test Driven Development: A Systematic Review"}, {"link": "/document/6197200", "title": "The Effects of Test-Driven Development on External Quality and Productivity: A Meta Analysis"}, {"link": "", "title": "8th Annual State of Agile Survey"}, {"link": "", "title": "How effective is test-driven development"}, {"link": "", "title": "The impact of Test-First programming on branch coverage and mutation score indicator of unit tests: An experiment"}, {"link": "", "title": "Considering rigor and relevance when evaluating test driven development: A systematic review"}, {"link": "", "title": "A structured experiment of test-driven development"}, {"link": "", "title": "Implications of test-driven development: a pilot study"}, {"link": "/document/4027145", "title": "Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "", "title": "Experimental and Quasi Experimental Designs for Generalized Causal Inference"}, {"link": "", "title": "Experimentation in software engineering: an introduction"}, {"link": "", "title": "Basics of Software Engineering Experimentation"}, {"link": "/document/1027796", "title": "Preliminary Guidelines for Empirical Research in Software Engineering"}, {"link": "", "title": "Task descriptions used in our experiment"}, {"link": "", "title": "Prest: An Intelligent Software Metrics Extraction, Analysis and Defect Prediction Tool"}, {"link": "", "title": "The Kolmogorov-Smirnov test of goodness of fit"}, {"link": "", "title": "Hypotheses test results and descriptive statistics of our experiment"}, {"link": "", "title": "It's the Effect Size, Stupid What effect size is and why it is important"}, {"link": "/document/5604358", "title": "What Do We Know about Test-Driven Development?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194615"}
{"ref": [{"link": "", "title": "Yesterday, my program worked. today, it does not. why?"}, {"link": "", "title": "Practical isolation of failure-inducing changes for debugging regression faults"}, {"link": "", "title": "What went wrong: explaining counterexamples"}, {"link": "", "title": "From symptom to cause: localizing errors in counterexample traces"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "Error explanation with distance metrics"}, {"link": "", "title": "LLVM: An infrastructure for multi-stage optimization"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "A Discipline of Programming"}, {"link": "", "title": "A fast linear-arithmetic solver for DPLL(T)"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "An efficient relevant slicing method for debugging"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Darwin: an approach for debugging evolving programs"}, {"link": "", "title": "Golden implementation driven software debugging"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}, {"link": "", "title": "Observation-based slicing"}, {"link": "", "title": "Comparative causality: Explaining the differences between executions"}, {"link": "", "title": "HDD: hierarchical delta debugging"}, {"link": "/document/6606576", "title": "Partition-based regression verification"}, {"link": "", "title": "Verification-aided regression testing"}, {"link": "", "title": "Towards locating execution omission errors"}, {"link": "", "title": "Cause clue clauses: error localization using maximum satisfiability"}, {"link": "", "title": "Error invariants"}, {"link": "", "title": "Flow-sensitive fault localization"}, {"link": "", "title": "Three uses of the herbrand-gentzen theorem in relating model theory and proof theory"}, {"link": "", "title": "Whodunit? causal analysis for counterexamples"}, {"link": "", "title": "Locating faults through automated predicate switching"}, {"link": "", "title": "Explaining software failures by cascade fault localization"}, {"link": "", "title": "What gives? A hybrid algorithm for error trace explanation"}, {"link": "", "title": "A dynamic code coverage approach to maximize fault localization efficiency"}, {"link": "", "title": "Abstraction and mining of traces to explain concurrency bugs"}, {"link": "", "title": "Using likely invariants for automated software fault localization"}, {"link": "/document/4700316", "title": "Automated identification of failure causes in system logs"}, {"link": "", "title": "Dynamic analysis of upgrades in C/C++ software"}, {"link": "", "title": "RADAR: a tool for debugging regression problems in C/C++ software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194579"}
{"ref": [{"link": "", "title": "Android and security"}, {"link": "", "title": "App review \u2013 Apple App Store"}, {"link": "", "title": "RiskRanker: Scalable and accurate zero-day Android malware detection"}, {"link": "/document/6234407", "title": "Dissecting Android malware: Characterization and evolution"}, {"link": "", "title": "Hey, you, get off of my market: Detecting malicious apps in official and alternative Android markets"}, {"link": "", "title": "Systematic detection of capability leaks in stock Android smartphones"}, {"link": "", "title": "TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "AppIntent: Analyzing sensitive data transmission in Android for privacy leakage detection"}, {"link": "", "title": "Vetting undesirable behaviors in Android apps with permission use analysis"}, {"link": "", "title": "Malware goes mobile"}, {"link": "", "title": "Camouflage in malware: From encryption to metamorphism"}, {"link": "", "title": "Android sensors overview"}, {"link": "", "title": "DroidDream becomes Android market nightmare"}, {"link": "", "title": "Reverse engineering of mobile application lifecycles"}, {"link": "", "title": "Analyzing interapplication communication in Android"}, {"link": "", "title": "Computation of interpro-cedural control dependence"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Least squares support vector machine classifiers"}, {"link": "", "title": "PScout: Analyzing the Android permission specification"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing Android sources and sinks"}, {"link": "", "title": "Load-time structural reflection in Java"}, {"link": "", "title": "Execute this! analyzing unsafe and malicious dynamic code loading in Android applications"}, {"link": "", "title": "Reflection analysis for Java"}, {"link": "", "title": "AppContext"}, {"link": "", "title": "Scaling Java points-to analysis using Spark"}, {"link": "", "title": "Soot: A Java bytecode optimization framework"}, {"link": "", "title": "Dexpler: Converting Android Dalvik bytecode to Jimple for static analysis with Soot"}, {"link": "", "title": "VirusShare"}, {"link": "", "title": "Contagio mobile \u2013 mobile marewale mini dump"}, {"link": "", "title": "VirusTotal \u2013 free online virus, malware and URL scanner"}, {"link": "", "title": "FOSS apps for Android"}, {"link": "", "title": "Apposcopy: Semantics-based detection of Android malware through static analysis"}, {"link": "", "title": "Androguard"}, {"link": "", "title": "A study of cross-validation and bootstrap for accuracy estimation and model selection"}, {"link": "", "title": "Contextual policy enforcement for Android applications with permission event graphs"}, {"link": "", "title": "AsDroid: Detecting stealthy behaviors in Android applications by user interface and program behavior contradiction"}, {"link": "", "title": "DroidAPIMiner: Mining API-level features for robust malware detection in Android"}, {"link": "", "title": "WHYPER: Towards automating risk assessment of mobile applications"}, {"link": "", "title": "Using probabilistic generative models for ranking risks of Android apps"}, {"link": "", "title": "MAST: Triage for market-scale mobile malware analysis"}, {"link": "", "title": "On lightweight mobile phone application certification"}, {"link": "", "title": "TaintEraser: Protecting sensitive data leaks using application-level taint tracking"}, {"link": "", "title": "Language-based information-flow secu-rity"}, {"link": "", "title": "Protecting privacy using the decentralized label model"}, {"link": "", "title": "JFlow: Practical mostly-static information flow control"}, {"link": "", "title": "Laminar: Practical fine-grained decentralized information flow control"}, {"link": "", "title": "User-aware privacy control via extended static-information-flow analy-sis"}, {"link": "", "title": "Semantics-aware Android malware classification using weighted contextual API dependency graphs"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of Android apps"}, {"link": "", "title": "A Bayesian approach to privacy enforcement in smartphones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194583"}
{"ref": [{"link": "", "title": "SCADE"}, {"link": "", "title": "SIMULINK"}, {"link": "", "title": "The Coq Development Team, Coq, version 8.4, INRIA"}, {"link": "", "title": "Isabelle/HOL - A Proof Assistant for Higher-Order Logic, University of Cam-bridge/Technische Universit\u00e4t Munchen/Universite Paris-Sud"}, {"link": "", "title": "The B Book, Assigning Programs to Meanings"}, {"link": "", "title": "SIMULINK Design Verifier"}, {"link": "", "title": "Checking safety properties using induction and a sat-solver"}, {"link": "", "title": "Prover Technologies"}, {"link": "", "title": "Bounded model checking"}, {"link": "", "title": "Verifying safety properties of a PowerPC - microprocessor using symbolic model checking without bdds"}, {"link": "", "title": "EN 50128, Railway applications - Communications, signalling and processing systems - Software for railway control and protection systems, CENELEC"}, {"link": "", "title": "DO-178C, Software Considerations in Airborne Systems and Equipment Certification, RTCA, Inc"}, {"link": "", "title": "Stimulus"}, {"link": "", "title": "IEC 62279, Railway applications - Communications, signalling and processing systems - Software for railway control and protection systems, International Electrotechnical Commission"}, {"link": "", "title": "Efficiently checking propositional refutations in HOL theorem provers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202958"}
{"ref": [{"link": "", "title": "Design Rules"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "Modularity analysis of logical design models"}, {"link": "", "title": "Leveraging design rules to improve software architecture recovery"}, {"link": "/document/5166450", "title": "Software dependencies, work dependencies, and their impact on failures"}, {"link": "", "title": "Decision-making techniques for software architecture design: A comparative survey"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "/document/4812762", "title": "Identifying architectural bad smells"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "", "title": "Locating faulty code using failure-inducing chops"}, {"link": "", "title": "Refactoring support based on code clone analysis"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "/document/296768", "title": "Saam: A method for analyzing the properties of software architectures"}, {"link": "", "title": "Quantifying the costs and benefits of architectural decisions"}, {"link": "", "title": "Experience with performing architecture tradeoff analysis"}, {"link": "", "title": "Patterns and antipatterns"}, {"link": "/document/469759", "title": "The 4+1 view model of architecture"}, {"link": "", "title": "Sober: statistical model-based bug localization"}, {"link": "/document/1407824", "title": "Architecture reviews: Practice and experience"}, {"link": "", "title": "Hotspot patterns: The formal definition and automatic detection of recurring high-maintenance architecture issues"}, {"link": "", "title": "A domain analysis to specify design defects and generate detection algorithms"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Integrating the archi-tecture tradeoff analysis method (atam) with the cost benefit analysis method (cbam)"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "/document/67595", "title": "Analyzing error-prone system structure"}, {"link": "/document/4752842", "title": "Identification of move method refactoring opportunities"}, {"link": "", "title": "Improving the efficiency of dependency analysis in logical models"}, {"link": "", "title": "Design rule hierarchies and parallelism in software development tasks"}, {"link": "", "title": "Design rule spaces: A new form of architecture insight"}, {"link": "", "title": "Titan: A toolset that connects software architecture with quality analysis"}, {"link": "", "title": "Investigating the evolutionary consequences of architecture roots of error-proneness"}, {"link": "", "title": "Comparing four approaches for technical debt identification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202962"}
{"ref": [{"link": "", "title": "Keepin'it real: pushing the desktop metaphor with physics, piles and the pen"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Code bubbles: Rethinking the user interface paradigm of integrated development environments"}, {"link": "", "title": "Implementing level 4 liveness in declarative visual programming languages"}, {"link": "", "title": "Enabling integrated development environments with natural user interface interactions"}, {"link": "", "title": "Code canvas: zooming towards better development environments"}, {"link": "", "title": "Cellular networks underlying human spatial navigation"}, {"link": "", "title": "Movement-produced stimulation in the development of visually guided behavior"}, {"link": "", "title": "The patchworks code editor: Toward faster navigation with less code arranging and fewer navigation mistakes"}, {"link": "", "title": "Six learning barriers in end-user programming systems"}, {"link": "/document/4016573", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Embedding spatial software visualization in the ide: An exploratory study"}, {"link": "", "title": "ACM Transactions in Software Engineering and Methodology"}, {"link": "", "title": "The psychology of everyday things"}, {"link": "", "title": "Computer-vs. paper-based tasks: are they equivalent?"}, {"link": "", "title": "Give your ideas some legs: The positive effect of walking on creative thinking"}, {"link": "", "title": "Programmer information needs after memory failure"}, {"link": "", "title": "Data mountain: Using spatial memory for document management"}, {"link": "", "title": "The eyes have it: A task by data type taxonomy for information visualizations"}, {"link": "", "title": "Place illusion and plausibility can lead to realistic behaviour in immersive virtual environments"}, {"link": "/document/4564449", "title": "An overview of 3d software visualization"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203009"}
{"ref": [{"link": "", "title": "Designing games with a purpose"}, {"link": "", "title": "Duolingo: learn a language for free while helping to translate the web"}, {"link": "", "title": "Design Rules: The Power of Modularity"}, {"link": "", "title": "Soylent: a word processor with a crowd inside"}, {"link": "/document/5166450", "title": "Software dependencies, work dependencies, and their impact on failures"}, {"link": "", "title": "Verification games: making verification fun"}, {"link": "", "title": "Socialization in an open source software community: a socio-technical analysis"}, {"link": "", "title": "Collabode: collaborative coding in the browser"}, {"link": "", "title": "What would other programmers do: suggesting solutions to error messages"}, {"link": "", "title": "Algorithm discovery by protein folding game players"}, {"link": "", "title": "Aspect-oriented programming"}, {"link": "", "title": "CrowdForge: crowdsourcing complex work"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: a case study"}, {"link": "/document/6226337", "title": "MobileWorks: designing for quality in a managed crowdsourcing architecture"}, {"link": "", "title": "Program comprehension as fact finding"}, {"link": "", "title": "Microtask programming: building software with a crowd"}, {"link": "/document/6614737", "title": "Crowd development"}, {"link": "", "title": "Towards crowdsourced human-assisted verification"}, {"link": "", "title": "The structure and value of modularity in software design"}, {"link": "", "title": "The Wisdom of Crowds"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203013"}
{"ref": [{"link": "", "title": "Software Engineering: Report of a conference sponsored by the NATO Science Committee"}, {"link": "/document/6336722", "title": "Technical Debt: From Metaphor to Theory and Practice"}, {"link": "", "title": "The Foresight Saga, Redux"}, {"link": "", "title": "The digital dark ages? Challenges in the preservation of electronic information"}, {"link": "", "title": "ICT for Sustainability: An Emerging Research Field"}, {"link": "", "title": "Sustainability and Longevity: Two Sides of the Same Quality?"}, {"link": "", "title": "The Karlskrona manifesto for sustainability design"}, {"link": "", "title": "The Oxford Dictionary of English"}, {"link": "", "title": "Software sustainability: The modern tower of Babel"}, {"link": "", "title": "Social complexity and sustainability"}, {"link": "/document/1456074", "title": "Programs, life cycles, and laws of software evolution"}, {"link": "", "title": "Laws of software evolution revisited"}, {"link": "", "title": "Software maintenance and evolution: A roadmap"}, {"link": "", "title": "Software Maintenance Workshop"}, {"link": "/document/6405316", "title": "Sustainability guidelines for long-living software systems"}, {"link": "", "title": "World Commission on Environment and Development, Our common future"}, {"link": "", "title": "Our Ecological Footprint: Reducing Human Impact on the Earth"}, {"link": "", "title": "Sustainability: Can our society endure?"}, {"link": "", "title": "Sylvicultura Oeconomica, oder hau\u03b2wirthliche Nachricht und Naturma\u03b2ige Anweisung zur wilden Baum-Zucht"}, {"link": "", "title": "The Four System Conditions of a Sustainable Society"}, {"link": "", "title": "Peak everything: Waking up to the century of declines"}, {"link": "", "title": "Understanding the Social Dimension of Sustainability"}, {"link": "", "title": "The social sustainability of cities: diversity and the management of change"}, {"link": "", "title": "Volume Introduction"}, {"link": "", "title": "The relevance of information and communication technologies for environmental sustainability \u2013 a prospective simulation study"}, {"link": "", "title": "Engineering for sustainable development: Guiding principles"}, {"link": "", "title": "Enter the triple bottom line"}, {"link": "", "title": "Weak Versus Strong Sustainability: Exploring the Limits of Two Opposing Paradigms"}, {"link": "", "title": "Steady-State Economics"}, {"link": "", "title": "The relevance of information and communication technologies for environmental sustainability \u2013 A prospective simulation study"}, {"link": "", "title": "Geographies of the World's Knowledge. Convoco! Edition"}, {"link": "", "title": "Environmental effects of information and communications technologies"}, {"link": "", "title": "The impact of ICT on sustainable development"}, {"link": "", "title": "Sustainability: Human, social, economic and environmental"}, {"link": "", "title": "A generic model for sustainability with process-and product-specific instances"}, {"link": "", "title": "Leverage Points: Places to Intervene in a System"}, {"link": "/document/6055662", "title": "Guest Editors' Introduction: Climate Change \u2013 Science and Software"}, {"link": "", "title": "Smart energy in everyday life: Are you designing for resource man?"}, {"link": "", "title": "Poetry of the revolution: Marx, manifestos, and the avantgardes"}, {"link": "", "title": "Manifestos for the Future"}, {"link": "", "title": "ISO/IEC/IEEE 42010:2011 \u2013 Systems and software engineering \u2013 Architecture description"}, {"link": "/document/6576748", "title": "Measuring architecture sustainability"}, {"link": "", "title": "Infusing Green: Requirements Engineering for Green in and through software systems"}, {"link": "", "title": "Sustainability Indicators \u2013 Measuring the Immeasurable?"}, {"link": "", "title": "From Computational Thinking to Systems Thinking"}, {"link": "", "title": "The theory and practice of boundary critique: developing housing services for older people"}, {"link": "", "title": "ICT4S reaching out: Making sustainability relevant in higher education"}, {"link": "", "title": "leach sustainability in sortware engineering?"}, {"link": "", "title": "SWEBOK: Guide to the software engineering Body of Knowledge"}, {"link": "", "title": "ACM Code of Ethics"}, {"link": "", "title": "UK Standard for Professional Engineering Competence (UK-SPEC). The Engineering Council"}, {"link": "", "title": "The Engineering Council"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202997"}
{"ref": [{"link": "", "title": "Emotions in the software development process"}, {"link": "", "title": "Organizational behavior: affect in the workplace"}, {"link": "", "title": "Affective agents: Sustaining motivation to learn through failure and a state of stuck"}, {"link": "", "title": "Frustration: The Development of a Scientitifc Concept"}, {"link": "/document/954607", "title": "Toward machine emotional intelligence: Analysis of affective physiological state"}, {"link": "", "title": "Affective pacman: A frustrating game for brain-computer interface experiments"}, {"link": "", "title": "Yes!: using tutor and sensor data to predict moments of delight during instructional activities"}, {"link": "", "title": "The emotions of systems developers: An empirical study of affective events theory"}, {"link": "", "title": "Are happy developers more productive? the correlation of affective states of software developers ane their-self-assessed productivity"}, {"link": "", "title": "Do moods affect programmers' debug performance?"}, {"link": "", "title": "Design, implementation, and evaluation of an approach for determining when programmers are having difficulty"}, {"link": "", "title": "Towards estimating computer users' mood from interaction behaviour with keyboard and mouse"}, {"link": "", "title": "An eye-tracking methodology for characterizing program comprehension processes"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "An eye tracking study on camelcase and under_score identifier styles"}, {"link": "", "title": "Using psycho-physiological measures to assess task difficulty in software development"}, {"link": "", "title": "ch. Affect, Mood, and Emotion"}, {"link": "", "title": "A circumplex model of affect"}, {"link": "", "title": "Core affect and the psychological construction of emotion"}, {"link": "", "title": "Appraising valence"}, {"link": "", "title": "Frustrating the user on purpose: Using biosignals in a pilot study to detect the user's emotional state"}, {"link": "", "title": "Valence, arousal and dominance in the eeg during game play"}, {"link": "", "title": "Frustrating the user on purpose: a step toward building an affective computer"}, {"link": "", "title": "Automatic prediction of frustration"}, {"link": "", "title": "Measurement of user frustration: A biologic approach"}, {"link": "", "title": "Autonomic nervous system activity distinguishes among emotions"}, {"link": "", "title": "Boredom, engagement and anxiety as indicators for adaptation to difficulty in games"}, {"link": "", "title": "Eeg feature extraction for classifying emotions using fcm and fkm"}, {"link": "", "title": "Using psychophysiological techniques to measure user experience with entertainment technologies"}, {"link": "", "title": "Sensors in the wild: Exploring electrodermal activity in child-robot interaction"}, {"link": "", "title": "Investigating the utility of eye-tracking information on affect and reasoning for user modeling"}, {"link": "", "title": "Correlation between heart rate, electrodermal activity and player experience in first-person shooter games"}, {"link": "/document/48797", "title": "How do we read algorithms? a case study"}, {"link": "", "title": "Subvocalization-toward hearing the inner thoughts of developers"}, {"link": "", "title": "Happy software developers solve problems better: psychological measurements in empirical software engineering"}, {"link": "", "title": "Software developers' perceptions of productivity"}, {"link": "", "title": "Bored mondays and focused afternoons: The rhythm of attention and online activity in the workplace"}, {"link": "", "title": "The geneva affective picture database (gaped): a new 730-picture database focusing on valence and normative significance"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "The influence of emotional picture thematic content on exploratory eye movements"}, {"link": "", "title": "The relation between manifest anxiety and rate of eyeblink in a stress situation"}, {"link": "", "title": "Music and emotion: electrophysiological correlates of the processing of pleasant and unpleasant music"}, {"link": "", "title": "Emotion classification based on gamma-band EEG"}, {"link": "", "title": "Modified energy based time-frequency features for classifying human emotions using eeg"}, {"link": "/document/5458075", "title": "Eeg-based emotion recognition in music listening"}, {"link": "", "title": "Emotion recognition of serious game players using a simple brain computer interface"}, {"link": "", "title": "Emotion recognition using bio-sensors: First steps towards an automatic system"}, {"link": "", "title": "Affectaura: An intelligent system for emotional memory"}, {"link": "", "title": "A method of inducing frustration in human subjects and its influence upon palmar skin resistance"}, {"link": "/document/1521579", "title": "From physiological signals to emotions: Implementing and comparing selected methods for feature extraction and classification"}, {"link": "", "title": "Anxiety detecting robotic system \u2013 towards implicit human-robot collaboration"}, {"link": "", "title": "Stress in Health and Deseases. Wiley-VCH, 2006, ch. Emotional Stress, Positive Emotions, and Psychophysiological Coherence"}, {"link": "", "title": "Positive affect and healthrelated neuroendocrine, cardiovascular, and inflammatory processes"}, {"link": "", "title": "Move over anova: Progress in analyzing repeated-measures data andits reflection in papers published in the archives of general psychiatry"}, {"link": "", "title": "Likert scales, levels of measurement and the \u201claws\u201d of statistics"}, {"link": "", "title": "Grounded theory and organizational research"}, {"link": "", "title": "ch. Moods, emotions, and traits"}, {"link": "", "title": "Event-related potentials: a methods handbook"}, {"link": "", "title": "Eye-blinking artefacts analysis"}, {"link": "", "title": "Electrodermal activity (EDA) \u2013 state-of-the-art measurements and techniques for parapsychological purposes"}, {"link": "", "title": "Is there more to blood volume pulse than heart rate variability respiratory sinus arrhythmia, and cardiorespiratory synchrony?"}, {"link": "", "title": "The pnnx files: re-examining a widely used heart rate variability measure"}, {"link": "", "title": "Heart rate variability"}, {"link": "", "title": "The weka data mining software: An update"}, {"link": "", "title": "A probabilistic approach to feature selection \u2013 a filter solution"}, {"link": "", "title": "C4.5: Programs for Machine Learning"}, {"link": "", "title": "Data Mining and Knowledge Discovery Handbook"}, {"link": "", "title": "Game Usability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194617"}
{"ref": [{"link": "", "title": "Reactive Systems: Modelling, Specification and Verification"}, {"link": "", "title": "A really temporal logic, J. ACM"}, {"link": "", "title": "Modifiability tactics"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "Run-Time Monitoring of Instances and Classes of Web Service Compositions"}, {"link": "", "title": "Validation of web service compositions, in Software, IET"}, {"link": "", "title": "The Tale of SOLOIST: A Specification Language for Service Compositions Interactions"}, {"link": "", "title": "Model Checking"}, {"link": "", "title": "Counting Fluent Linear Time Temporal Logic Experimental Results ICSE"}, {"link": "", "title": "Formal Refinement Patterns for Goal-Driven Requirements Elaboration"}, {"link": "", "title": "First-order definable languages"}, {"link": "", "title": "Patterns in Property Specifications for Finite-state Verification"}, {"link": "", "title": "Representing Action Domains with Numeric-Valued Fluents"}, {"link": "", "title": "Fluent Model Checking for Event-based Systems"}, {"link": "", "title": "The succinctness of first-order logic on linear orders"}, {"link": "", "title": "Communicating sequential processes"}, {"link": "/document/5341654", "title": "Specifying and Monitoring Temporal Properties in Web Services Compositions"}, {"link": "", "title": "Tense Logic and the Theory of Linear Order"}, {"link": "", "title": "Labelled Transition System Analyser with Counting Fluents Support"}, {"link": "", "title": "The KAOS Project: Knowledge Acquisition in Automated Specification of Software"}, {"link": "/document/5601855", "title": "Counting LTL"}, {"link": "", "title": "Counting CTL"}, {"link": "", "title": "Describing additive fluents in action language C+"}, {"link": "", "title": "Fluent Temporal Logic for Discrete-Time Event-Based Models"}, {"link": "", "title": "Pattern-Based Specification and Validation of Web Services Interaction Properties"}, {"link": "", "title": "Concurrency: State Models and Java Programs"}, {"link": "", "title": "The Temporal Logic of Reactive and Concurrent Systems \u2013 Specification"}, {"link": "", "title": "Temporal Verification of Reactive Systems \u2013 Safety"}, {"link": "", "title": "A classification and comparison frame-work for software architecture description languages"}, {"link": "", "title": "The Event Calculus in Classical Logic \u2013 Alternative Axiomatisations"}, {"link": "", "title": "Communication and Concurrency"}, {"link": "", "title": "The Symmetry of the Past and of the Future: Bi-infinite Time in the Verification of Temporal Properties"}, {"link": "", "title": "Computer Networks"}, {"link": "/document/1178048", "title": "Synthesis of Behavioral Models from Scenarios"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194621"}
{"ref": [{"link": "", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "Angular JS"}, {"link": "", "title": "Backbone JS"}, {"link": "", "title": "Ember JS"}, {"link": "", "title": "Why you should not use An-gularJS"}, {"link": "", "title": "Angular JS vs. Backbone JS vs. Ember JS"}, {"link": "", "title": "A simple MVC framework for widget development"}, {"link": "", "title": "The update version development of \u201cwiki message linking\u201d system-integrated Ajax with MVC model"}, {"link": "", "title": "Building a me me media platform with a JavaScript MVC framework and HTML 5"}, {"link": "", "title": "An evaluation of reactive programming and promises for structuring collaborative web applications"}, {"link": "", "title": "Twitter bootstrap and Angular JS: Frontend frameworks to expedite science gateway development"}, {"link": "", "title": "Scope variable not accessible (undefined) - Angular JS"}, {"link": "", "title": "Angular JS: If you don't have a dot, you're doing it wrong!"}, {"link": "/document/6200094", "title": "AutoFLox: an automatic fault localizer for client-side JavaScript"}, {"link": "", "title": "Vejovis: suggesting fixes for JavaScript faults"}, {"link": "", "title": "What is Angular JS?"}, {"link": "", "title": "Ace"}, {"link": "", "title": "Aurebesh"}, {"link": "", "title": "Built with Angular JS"}, {"link": "", "title": "CSC485B: Startup Programming"}, {"link": "", "title": "A cookbook for using the model-view controller user interface paradigm in Smalltalk-80"}, {"link": "", "title": "Web-application development using the model/view/controller design pattern"}, {"link": "", "title": "Comparative evaluation of javascript frameworks"}, {"link": "", "title": "Web applications based on AJAX technology and its framework"}, {"link": "", "title": "Making sense out of a jungle of JavaScript frameworks"}, {"link": "", "title": "An overview of multimedia support into JavaScript-based frameworks for developing rias"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "JSMe-ter: Measuring JavaScript behavior in the wild"}, {"link": "", "title": "Checking correctness of TypeScript interfaces for JavaScript libraries"}, {"link": "", "title": "JavaScript errors in the wild: an empirical study"}, {"link": "", "title": "Verily: a web framework for creating more reasonable web applications"}, {"link": "", "title": "Eliminating navigation errors in web applications via model checking and runtime enforcement of navigation state machines"}, {"link": "", "title": "Bounded verification of Ruby on Rails data models"}, {"link": "", "title": "MVC web design patterns and rich internet applications"}, {"link": "", "title": "MVC model, struts framework and file upload issues in web applications based on J2EE platform"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194585"}
{"ref": [{"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "", "title": "The Security Development Lifecycle"}, {"link": "", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "", "title": "Can developer-module networks predict failures?"}, {"link": "", "title": "The Influence of Organizational Structure on Software Quality: An Empirical Case Study"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "/document/6698911", "title": "Predicting Defects Using Change Genealogies"}, {"link": "", "title": "Using Pre-Release Test Failures to Build Early Post-Release Defect Prediction Models"}, {"link": "/document/6035727", "title": "A Systematic Literature Review on Fault Prediction Performance in Software Engineering"}, {"link": "", "title": "Searching for a Needle in a Haystack: Predicting Security Vulnerabilities for Windows Vista"}, {"link": "", "title": "Can traditional fault prediction models be used for vulnerability prediction?"}, {"link": "", "title": "Prioritizing software security fortification throughcode-level metrics"}, {"link": "/document/5560680", "title": "Evaluating Complexity, Code Churn, and Developer Activity Metrics as Indicators of Software Vulnerabilities"}, {"link": "", "title": "Using complexity, coupling, and cohesion metrics as early indicators of vulnerabilities"}, {"link": "", "title": "Predicting vulnerable software components"}, {"link": "", "title": "Measuring Relative Attack Surfaces"}, {"link": "/document/5482589", "title": "An Attack Surface Metric"}, {"link": "", "title": "Description of the Dr. Watson for Windows"}, {"link": "", "title": "Building a Better Backtrace: Techniques for Postmortem Program Analysis"}, {"link": "", "title": "PSE: Explaining Program Failures via Postmortem Static Analysis"}, {"link": "", "title": "F3: Fault Localization for Field Failures"}, {"link": "", "title": "CrashLocator: Locating Crashing Faults Based on Crash Stacks"}, {"link": "", "title": "Improving bug localization using correlations in crash reports"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "/document/6227111", "title": "ReBucket: A Method for Clustering Duplicate Crash Reports Based on Call Stack Similarity"}, {"link": "", "title": "Crash graphs: An aggregated view of multiple crashes to improve crash triage"}, {"link": "", "title": "Characterizing and Predicting Which Bugs Get Fixed: An Empirical Study of Microsoft Windows"}, {"link": "", "title": "What makes a good bug report?"}, {"link": "/document/6717039", "title": "Software Crash Analysis for Automatic Exploit Generation on Binary Programs"}, {"link": "", "title": "Fuzzing with Code Fragments"}, {"link": "/document/5711013", "title": "Which Crashes Should I Fix First?: Predicting Top Crashes at an Early Stage to Prioritize Debugging Efforts"}, {"link": "/document/6509369", "title": "CODEMINE: Building a Software Development Data Analytics Platform at Microsoft"}, {"link": "", "title": "Four Grand Challenges in Trustworthy Computing"}, {"link": "", "title": "R: A Language and Environment for Statistical Computing"}, {"link": "", "title": "LIII. On lines and planes of closest fit to systems of points in space"}, {"link": "", "title": "caret: Classification and Regression Training"}, {"link": "", "title": "The prediction of faulty classes using object-oriented design metrics"}, {"link": "", "title": "Modern Applied Statistics with S"}, {"link": "", "title": "Random Forests"}, {"link": "", "title": "Can Fault Prediction Models and Metrics be Used for Vulnerability Prediction"}, {"link": "", "title": "Building Security In Maturity Model (BSIMM)"}, {"link": "", "title": "Measuring the attack surfaces of two FTP daemons"}, {"link": "", "title": "Using Attack Surface Entry Points and Reachability Analysis to Assess the Risk of Software Vulnerability Exploitability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202964"}
{"ref": [{"link": "", "title": "Software Engineering for ' x2018;Social Good\u2019: Integrating Action Research, Participatory Design, and Agile Development"}, {"link": "", "title": "From Computational Thinking to Systems Thinking: A conceptual toolkit for sustainability computing"}, {"link": "", "title": "Prototyping' x2018;clasp\u2019: implications for designing digital technology for and with adults with autism"}, {"link": "", "title": "Imaginative labour and relationships of care: Co-designing prototypes with vulnerable communities"}, {"link": "/document/4222624", "title": "Can requirements be creative? experiences with an enhanced air space management system"}, {"link": "", "title": "Dilemmas in a General Theory of Planning"}, {"link": "", "title": "Future of End-user Software Engineering: Beyond the Silos"}, {"link": "", "title": "Seeding the Design Process for Future Problems"}, {"link": "", "title": "Costs and Benefits of User Involvement in Design: Practitioners Views"}, {"link": "", "title": "Uncovering design attitude: Inside the culture of designers"}, {"link": "/document/6648584", "title": "Does involving users in software development really influence system success?"}, {"link": "", "title": "Manifesto for Agile Software Development"}, {"link": "", "title": "Designing Exploratory Design Games: A Framework for Participation in Participatory Design?"}, {"link": "", "title": "Towards a Framework for Integrating Agile Development and User-centred Design"}, {"link": "", "title": "Participatory Design Activities and Agile Software Development"}, {"link": "", "title": "How to Include Users in the Development of Off-the-Shelf Software: A Case for Complementing Participatory Design with Agile Development"}, {"link": "", "title": "The Methodology of Participatory Design"}, {"link": "", "title": "Co-creation and the New Landscapes of Design"}, {"link": "", "title": "User involvement in software evolution practice: A case study"}, {"link": "", "title": "User participation in software development projects"}, {"link": "", "title": "Wicked Problems in Design Thinking"}, {"link": "", "title": "Wicked Problems Revisited"}, {"link": "", "title": "The Relationship of Action Research to Human-computer Interaction"}, {"link": "", "title": "Building and Maintaining Trust in a Community-based Participatory Research Partnership"}, {"link": "", "title": "The Role of Physical Artefacts in Agile Software Development: Two Complementary Perspectives"}, {"link": "", "title": "Experiential learning: experience as the source of learning and development"}, {"link": "", "title": "Collaborative Communication Tools for Designing: Physical-Cyber Environments"}, {"link": "", "title": "On the Edge of Supply: Designing Renewable Energy Supply into Everyday Life"}, {"link": "", "title": "Energy Storage and Management Study"}, {"link": "", "title": "Designing Eco-feedback Systems for Everyday Life"}, {"link": "", "title": "Tiree Energy Pulse: Exploring Renewable Energy Forecasts on the Edge of the Grid"}, {"link": "", "title": "The State of Psychological Ownership: Integrating and Extending a Century of Research"}, {"link": "", "title": "Improving the User Story Agile Technique Using the INVEST Criteria"}, {"link": "", "title": "Race, Space and Place: Examining Identity and Cultures of Exclusion in Rural England"}, {"link": "", "title": "Adapting Participatory and Agile Software Methods to Participatory Rural Development"}, {"link": "", "title": "Integrating Creativity Workshops into Structured Requirements Processes"}, {"link": "", "title": "Using a creativity workshop to generate requirements for an event database application"}, {"link": "/document/4797445", "title": "Articulating software requirements comic book style"}, {"link": "", "title": "A Participatory Design Approach to the Wicked Problem of Designing Sustainable Communities"}, {"link": "", "title": "Experiential Role of Artefacts in Cooperative Design"}, {"link": "", "title": "At Home with Agents: Exploring Attitudes Towards Future Smart Energy Infrastructures"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202999"}
{"ref": [{"link": "", "title": "The temporal logic of programs"}, {"link": "", "title": "Linear temporal logic symbolic model checking"}, {"link": "", "title": "Specification-based testing with linear temporal logic"}, {"link": "", "title": "Runtime verification for LTL and TLTL"}, {"link": "", "title": "Temporal logic motion planning for mobile robots"}, {"link": "/document/4026656", "title": "Linear time logic control of discrete-time linear systems"}, {"link": "", "title": "Flexible Modular Formalization of UML Sequence Diagrams"}, {"link": "", "title": "LTL satisfiability checking"}, {"link": "", "title": "Bounded Satisfiability Checking of Metric Temporal Logic Specifications"}, {"link": "", "title": "Symbolic Model Checking without BDDs"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "The Zot bounded model/satisfiability checker"}, {"link": "", "title": "NuSMV 2: An OpenSource Tool for Symbolic Model Checking"}, {"link": "", "title": "The Glory of the Past"}, {"link": "", "title": "Temporal logic with forgettable past"}, {"link": "", "title": "Linear encodings of bounded LTL model checking"}, {"link": "", "title": "TRIO: A Logic Language for Executable Specifications of Real-time Systems"}, {"link": "", "title": "An extensible sat-solver"}, {"link": "", "title": "Simple bounded LTL model checking"}, {"link": "", "title": "Simple is better: Efficient bounded model checking for past LTL"}, {"link": "", "title": "Incremental and complete bounded model checking for full PLTL"}, {"link": "", "title": "Formal Methods for Real-Time Computing"}, {"link": "", "title": "LTL satisfiability checking"}, {"link": "", "title": "A multi-encoding approach for LTL symbolic satisfiability checking"}, {"link": "", "title": "From states to transitions: Improving translation of LTL formulae to b\u00fcchi automata"}, {"link": "", "title": "Spot: an extensible model checking library using transition-based generalized b\u00fcchi automata"}, {"link": "", "title": "LTL satisfiability checking revisited"}, {"link": "", "title": "Evaluating LTL satisfiability solvers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194619"}
{"ref": [{"link": "", "title": "Betweenness centrality in large complex networks"}, {"link": "", "title": "Robustness and diagnosability of oo systems designed by contracts"}, {"link": "", "title": "Fair and balanced?: Bias in bug-fix datasets"}, {"link": "", "title": "Donf touch my code!: Examining the effects of ownership on software quality"}, {"link": "", "title": "Network science"}, {"link": "", "title": "Investigating the use of analysis contracts to support fault isolation in object oriented code"}, {"link": "", "title": "Regression analysis of count data"}, {"link": "/document/1575928", "title": "Logical foundations of program assertions: What do practitioners want?"}, {"link": "", "title": "Beyond assertions: Advanced specification and verification with jml and esc/java2"}, {"link": "", "title": "A historical perspective on runtime assertion checking in software development"}, {"link": "", "title": "Applied multiple regression/correlation analysis for the behavioral sciences"}, {"link": "", "title": "Graph-based tools for re-engineering"}, {"link": "/document/935855", "title": "The confounding effect of class size on the validity of object-oriented metrics"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Contracts in practice"}, {"link": "", "title": "Do time of day and developer experience affect commit bugginess?"}, {"link": "", "title": "Software metrics: a rigorous and practical approach"}, {"link": "", "title": "Assigning meanings to programs"}, {"link": "/document/5726935", "title": "Finding components in a hierarchy of modules: A step towards architectural understanding"}, {"link": "", "title": "The evaluation of software systems' structure using quantitative software metrics"}, {"link": "/document/1045044", "title": "Assertions in modern software engineering practice"}, {"link": "", "title": "Exploring the relationship of a file's history and its fault-proneness: An empirical method and its application to open source programs"}, {"link": "", "title": "JContract. Using design by contract to automate java software and component testing"}, {"link": "", "title": "Lethality and centrality in protein networks"}, {"link": "", "title": "Authoritative sources in a hyperlinked environment"}, {"link": "/document/4021986", "title": "Assessing the relationship between software assertions and faults: An empirical investigation"}, {"link": "", "title": "Preliminary design of jml: A behavioral interface specification language for java"}, {"link": "/document/54295", "title": "The use of self checks and voting in software error detection: An empirical study"}, {"link": "/document/693283", "title": "Using automatic clustering to produce high-level system organizations of source code"}, {"link": "", "title": "Code complete"}, {"link": "/document/161279", "title": "Applying \u201cDesign by contract"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "", "title": "Understanding software systems using reverse engineering technology perspectives from the rigi project"}, {"link": "/document/1167755", "title": "Two controlled experiments concerning the usefulness of assertions as a means for programming"}, {"link": "", "title": "An empirical study of static call graph extractors"}, {"link": "", "title": "Software reflexion models: Bridging the gap between source and high-level models"}, {"link": "", "title": "A comparative study of programmer-written and automatically inferred contracts"}, {"link": "", "title": "R Development Core Team. R: A language and environment for statistical computing"}, {"link": "", "title": "Ownership, experience and defects: A fine-grained study of authorship"}, {"link": "", "title": "A large scale study of programming languages and code quality in github"}, {"link": "/document/341844", "title": "A practical approach to programming with assertions"}, {"link": "", "title": "Recommending random walks"}, {"link": "", "title": "Case studies and tools for contract specifications"}, {"link": "", "title": "An empirical evaluation of assertions as oracles"}, {"link": "", "title": "Validation of network measures as indicators of defective modules in software systems"}, {"link": "/document/341367", "title": "Putting assertions in their place"}, {"link": "", "title": "Why should i share? examining social capital and knowledge contribution in electronic networks of practice"}, {"link": "", "title": "Design of self-checking software"}, {"link": "", "title": "Improving software testability with assertion insertion"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194623"}
{"ref": [{"link": "/document/1605175", "title": "The past, present, and future for software architecture"}, {"link": "/document/4497757", "title": "Architectural organizational patterns"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "/document/1204373", "title": "Agile software development: it's about feedback and change"}, {"link": "", "title": "Agility and architecture: an oxymoron?"}, {"link": "/document/5420791", "title": "Agility and architecture: Can they coexist?"}, {"link": "/document/1628932", "title": "The accidental architecture"}, {"link": "", "title": "Architecting: How much and when?"}, {"link": "/document/6470592", "title": "Architecture and agility: Married, divorced, or just good friends?"}, {"link": "/document/5452153", "title": "An architectural oxymoron"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "/document/4163017", "title": "The irrelevance of architecture"}, {"link": "", "title": "Just Enough Software Architecture: A Risk Driven Approach"}, {"link": "", "title": "What does research say about agile and architecture?"}, {"link": "/document/5551011", "title": "The top 10 burning research questions from practitioners"}, {"link": "", "title": "The legitimacy of Grounded Theory"}, {"link": "", "title": "Business Research Methods"}, {"link": "", "title": "Essentials of Accessible Grounded Theory"}, {"link": "", "title": "Remodeling grounded theory"}, {"link": "", "title": "The Grounded Theory Perspective III: Theoretical Coding"}, {"link": "", "title": "Reconciling agility and architecture: a theory of agile architecture"}, {"link": "", "title": "The Rational Unified process - an Introduction"}, {"link": "", "title": "The Process of Software Architecting"}, {"link": "", "title": "Agility from first principles: Reconstructing the concept of agility in information systems development"}, {"link": "", "title": "What lessons can the agile community learn from a maverick fighter pilot?"}, {"link": "", "title": "The Discovery of Grounded Theory: Strategies for Qualitative Research"}, {"link": "", "title": "A critique of using grounded theory as a research method"}, {"link": "", "title": "A critique of using grounded theory as a research method"}, {"link": "", "title": "Social Research Methods"}, {"link": "/document/6170014", "title": "How much architecture? Reducing the up-front effort"}, {"link": "", "title": "Constructing Grounded Theory: A Practical Guide Through Qualitative Analysis"}, {"link": "", "title": "Agile manifesto"}, {"link": "/document/6470589", "title": "The twin peaks of requirements and architecture"}, {"link": "/document/1456074", "title": "Programs, life cycles, and laws of software evolution"}, {"link": "", "title": "What is legacy code?"}, {"link": "", "title": "The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses"}, {"link": "", "title": "Software Architecture: Perspectives on an Emerging Discipline"}, {"link": "", "title": "Complexity made simple"}, {"link": "/document/1204376", "title": "Using Risk to Balance Agile and Plan-Driven Methods"}, {"link": "/document/6470590", "title": "Traversing the twin peaks"}, {"link": "", "title": "The effect of complexity and value on architecture planning in agile software development"}, {"link": "/document/963450", "title": "Agile software development: the people factor"}, {"link": "/document/4293573", "title": "The social nature of agile teams"}, {"link": "", "title": "Understanding the importance of trust in distributed agile projects: A practical perspective"}, {"link": "", "title": "Adaptive Software Development: a Collaborative Approach to Managing Complex Systems"}, {"link": "", "title": "The fifth discipline: the art and practice of the learning organization"}, {"link": "", "title": "Agile undercover: When customers don't collaborate"}, {"link": "", "title": "Agile Software Development: The Cooperative Game"}, {"link": "", "title": "A five-stage model of the mental activities involved in directed skill acquisition"}, {"link": "/document/5984801", "title": "Agility Drivers"}, {"link": "/document/6365644", "title": "A principled way to use frameworks in architecture design"}, {"link": "", "title": "But is it rigorous? Trustworthiness and authenticity in naturalistic evaluation"}, {"link": "", "title": "Qualitative Data Analysis: An Expanded Sourcebook"}, {"link": "", "title": "Research Design: Qualitative, Quantitative, and Mixed Methods Approaches"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194587"}
{"ref": [{"link": "/document/4145027", "title": "How clones are maintained: An empirical study"}, {"link": "", "title": "Measuring clone based reengineering opportunities"}, {"link": "/document/806971", "title": "Partial redesign of java software systems based on clone analysis"}, {"link": "/document/6227233", "title": "Supporting extract class refactoring in eclipse: The aries project"}, {"link": "/document/5328705", "title": "An empirical study on inconsistent changes to code clones at release level"}, {"link": "/document/4222578", "title": "Tracking code clones in evolving software"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Clone removal: Fact or fiction?"}, {"link": "", "title": "How to extract differences from similar programs? a cohesion metric approach"}, {"link": "", "title": "Identifying clone removal opportunities based on co-evolution analysis"}, {"link": "", "title": "A metric-based approach to identifying refactoring opportunities for merging code clones in a java software system"}, {"link": "/document/6178876", "title": "Identifying, tailoring, and suggesting form template method refactoring opportunities with program dependence graph"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Toward an implementation of the \u201cform template method\u201d refactoring"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "/document/4023973", "title": "cloning considered harmful\u201d considered harmful"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "Semantics-preserving procedure extraction"}, {"link": "", "title": "Effective, automatic procedure extraction"}, {"link": "/document/957835", "title": "Identifying similar code with program dependence graphs"}, {"link": "", "title": "Refactoring clones: An optimization problem"}, {"link": "/document/4159683", "title": "Improving usability of software refactoring tools"}, {"link": "", "title": "Lase: Locating and applying systematic edits"}, {"link": "", "title": "Systematic editing: Generating program transformations from an example"}, {"link": "", "title": "Interactive simultaneous editing of multiple text regions"}, {"link": "/document/5661792", "title": "Aspect-oriented refactoring of legacy applications: An evaluation"}, {"link": "", "title": "Clone-aware configuration management"}, {"link": "", "title": "Recommending automated extract method refactorings"}, {"link": "", "title": "Increasing clone maintenance support by unifying clone detection and refactoring activities"}, {"link": "", "title": "Managing duplicated code with linked editing"}, {"link": "", "title": "Identification of extract method refactoring opportunities for the decomposition of methods"}, {"link": "", "title": "Ranking refactoring suggestions based on historical volatility"}, {"link": "", "title": "Toward automated refactoring of crosscutting concerns into aspects"}, {"link": "", "title": "Prioritizing design debt investment opportunities"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194591"}
{"ref": [{"link": "", "title": "The (R)Evolution of social media in software engineering"}, {"link": "/document/4620089", "title": "Services Mashups: The New Generation of Web Applications"}, {"link": "", "title": ""}, {"link": "", "title": "M4N. Is it okay to use Stack Overflow as the support forum for a product or project? In Stack Exchange Meta"}, {"link": "", "title": "Encyclopedia Stack Exchange vs. commercial products. In Stack Exchange Meta"}, {"link": "", "title": "Product support redirects to Stack Overflow"}, {"link": "", "title": "Community tools. On Apache Wicket mailing list"}, {"link": "", "title": "StackExchange for web2py community"}, {"link": "", "title": "Sources of dissatisfaction in end-user support: An empirical study"}, {"link": "", "title": "Automatically measuring the quality of user generated content in forums"}, {"link": "", "title": "A multidimensional model for assessing the quality of answers in social Q&A sites"}, {"link": "", "title": "Responsiveness as a measure for assessing the health of OSS ecosystems"}, {"link": "", "title": "Measuring API documentation on the web"}, {"link": "", "title": "How do programmers ask and answer questions on the web? (NIER track)"}, {"link": "", "title": "Design lessons from the fastest Q&A site in the west"}, {"link": "", "title": "How social Q&A sites are changing knowledge sharing in open source software communities"}, {"link": "", "title": "Docusign Scraper"}, {"link": "", "title": "The Cathedral and the Bazaar"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202966"}
{"ref": [{"link": "", "title": "Is design dead?"}, {"link": "/document/6595260", "title": "Toward infusing modular and reflective design learning throughout the curriculum"}, {"link": "", "title": "Mind In Society: The Development of Higher Psychological Processes"}, {"link": "", "title": "Experiential learning theory: Previous research and new directions"}, {"link": "", "title": "Digital Game-Based Learning"}, {"link": "", "title": "On Knowing: Essays for the Left Hand"}, {"link": "", "title": "Educating the Reflective Practitioner"}, {"link": "", "title": "Improving design processes through structured reflection: A domain-independent approach"}, {"link": "", "title": "The elaboration theory of instruction: Prescriptions for task analysis and design"}, {"link": "", "title": "The structure of ill structured problems"}, {"link": "/document/5007593", "title": "The decisions of engineering design"}, {"link": "", "title": "The Timeless Way of Building"}, {"link": "", "title": "Design Methods"}, {"link": "", "title": "Design Rationale: Concepts, Techniques, and Use"}, {"link": "/document/592267", "title": "Design rationale systems: Understanding the issues"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202970"}
{"ref": [{"link": "/document/57887", "title": "Seven myths of formal methods"}, {"link": "", "title": "Lessons from the JML project"}, {"link": "", "title": "Meteor: A successful application of B in a large project"}, {"link": "/document/287250", "title": "Formal methods in a real air traffic control project"}, {"link": "", "title": "seL4: Formal verification of an operating-system kernel"}, {"link": "", "title": "Boa website"}, {"link": "", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Task fusion: Improving utilization of multi-user clusters"}, {"link": "", "title": "Bringing ultra-large-scale software repository mining to the masses with Boa"}, {"link": "", "title": "Mining billions of AST nodes to study actual and potential usage of Java language features"}, {"link": "", "title": "ch. Boa: an Enabling Language and Infrastructure for Ultra-large Scale MSR Studies"}, {"link": "", "title": "Mining preconditions of APIs in large-scale code corpus"}, {"link": "", "title": "Declarative visitors to ease fine-grained source code mining with full history on billions of AST nodes"}, {"link": "", "title": "Specification matching of software components"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariant-constrained models"}, {"link": "", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "/document/4700316", "title": "Automated identification of failure causes in system logs"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "", "title": "jStar: towards practical verification for Java"}, {"link": "", "title": "Bugs as deviant behavior: a general approach to inferring errors in systems code"}, {"link": "", "title": "Static contract checking with abstract interpretation"}, {"link": "", "title": "Houdini, an annotation assistant for ESC/Java"}, {"link": "", "title": "From uncertainty to belief: inferring the specification within"}, {"link": "", "title": "Static specification inference using predicate mining"}, {"link": "", "title": "Inferring better contracts"}, {"link": "", "title": "On the complexity of static analysis"}, {"link": "", "title": "Dynamine: finding common error patterns by mining software revision histories"}, {"link": "", "title": "PR-Miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Javert: fully automatic mining of general temporal properties from dynamic traces"}, {"link": "", "title": "Perracotta: mining temporal API rules from imperfect traces"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "/document/1463230", "title": "Automatic mining of source code repositories to improve bug finding techniques"}, {"link": "", "title": "Alattin: Mining alternative patterns for detecting neglected conditions"}, {"link": "", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "", "title": "Automatic mining of specifications from invocation traces and method invariants"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203017"}
{"ref": [{"link": "", "title": "Self-adaptive software: Landscape and research challenges"}, {"link": "", "title": "Modelling adaptation policies as domain-specific constraints"}, {"link": "", "title": "A framework for evaluating quality-driven self-adaptive software systems"}, {"link": "", "title": "A goal-based modeling approach to develop requirements of an adaptive system with environmental uncertainty"}, {"link": "/document/6956570", "title": "Sok: Automated software diversity"}, {"link": "", "title": "Would diversity really increase the robustness of the routing infrastructure against software defects?"}, {"link": "", "title": "Using diversity in cloud-based deployment environment to avoid intrusions"}, {"link": "", "title": "Multi-tier diversification in internet-based software applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203021"}
{"ref": [{"link": "", "title": "Always-available static and dynamic feedback"}, {"link": "", "title": "Assessing programming language impact on development and maintenance: A study on C and C++"}, {"link": "", "title": "Popularity, interoperability, and impact of programming languages in 100,000 open source projects"}, {"link": "", "title": "Productivity analysis of the UPC language"}, {"link": "", "title": "An experiment in measuring the productivity of three parallel programming languages"}, {"link": "", "title": "Contracts in practice"}, {"link": "/document/815326", "title": "A critique of software defect prediction models"}, {"link": "", "title": "Programming language concepts"}, {"link": "", "title": "An experiment about static and dynamic type systems: Doubts about the positive impact of static type systems on development time"}, {"link": "/document/511273", "title": "Comparing programming paradigms: An evaluation of functional and object-oriented programs"}, {"link": "", "title": "Computer programming languages and safety-related systems"}, {"link": "", "title": "A pilot study to compare programming effort for two parallel programming models"}, {"link": "/document/1559987", "title": "Parallel programmer productivity: A case study of novice parallel programmers"}, {"link": "", "title": "Programming Productivity"}, {"link": "", "title": "Code Complete"}, {"link": "", "title": "Empirical analysis of programming language adoption"}, {"link": "", "title": "An empirical study of software reuse vs. defect-density and stability"}, {"link": "", "title": "A comparative study of programming languages in Rosetta Code"}, {"link": "/document/6092581", "title": "Design of an empirical study for comparing the usability of concurrent programming languages"}, {"link": "", "title": "Examining the expert gap in parallel programming"}, {"link": "", "title": "Benchmarking usability and performance of multicore languages"}, {"link": "", "title": "How do developers use parallel libraries?"}, {"link": "/document/6227200", "title": "Combining functional and imperative programming for multicore software: An empirical study evaluating Scala and Java"}, {"link": "/document/876288", "title": "An empirical comparison of seven programming languages"}, {"link": "", "title": "A large scale study of programming languages and code quality in GitHub"}, {"link": "", "title": "The Art of UNIX Programming"}, {"link": "", "title": "Rosetta Code"}, {"link": "", "title": "Is transactional programming actually easier?"}, {"link": "", "title": "Case studies and tools for contract specifications"}, {"link": "", "title": "An empirical investigation into programming language syntax"}, {"link": "", "title": "An experiment to measure the usability of parallel programming systems"}, {"link": "", "title": "TIOBE Programming Community Index"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194625"}
{"ref": [{"link": "", "title": "Codeflow"}, {"link": "", "title": "Appendix to Do It Yourself! Homegrown Tools in a Large Software Company"}, {"link": "/document/6614738", "title": "Improving Developer Participation Rates in Surveys"}, {"link": "", "title": "Qualitative communication research methods"}, {"link": "", "title": "Gifts differing: Understanding personality type"}, {"link": "", "title": "Revised neo personality inventory (neo pi-r) and neo five-factor inventory (neo-ffi)"}, {"link": "", "title": "Measuring the MBTI\u2026 and coming up short"}, {"link": "", "title": "Personality structure: Emergence of the five-factor model"}, {"link": "", "title": "An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model"}, {"link": "/document/5315997", "title": "An empirical study of the effects of personality in pair programming using the five-factor model"}, {"link": "", "title": "The International Personality Item Pool and the future of public-domain personality measures"}, {"link": "", "title": "Personality trait structure as a human universal"}, {"link": "", "title": "Card Sorting: Designing Usable Categories"}, {"link": "", "title": "Broken windows"}, {"link": "", "title": "What's your idea?: a case study of a grassroots innovation pipeline within a large software company"}, {"link": "", "title": "Knowledge management and innovation at 3M"}, {"link": "", "title": "Determinants of organisational creativity: a literature review"}, {"link": "", "title": "now that's definitely a proper hack: self-made tools in hackerspaces"}, {"link": "/document/5089333", "title": "Effects of personality on pair programming"}, {"link": "", "title": "Personality profiles of global software developers"}, {"link": "", "title": "On understanding compatibility of student pair programmers"}, {"link": "", "title": "The Myers-Briggs personality type and its relationship to computer programming"}, {"link": "", "title": "Diffusion of innovations"}, {"link": "", "title": "Social influences on secure development tool adoption: why security tools spread"}, {"link": "", "title": "Socio-PLT: Principles for programming language adoption"}, {"link": "", "title": "Empirical Analysis of Programming Language Adoption"}, {"link": "", "title": "Software engineering economics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194589"}
{"ref": [{"link": "", "title": "10 best practices with exceptions"}, {"link": "", "title": "7 good rules to log exceptions"}, {"link": "", "title": "7 more good tips on logging"}, {"link": "", "title": "The art of logging"}, {"link": "", "title": "Code to logging ratio?"}, {"link": "", "title": "Exception logging in javascript"}, {"link": "", "title": "Exception logging: Why not log all exceptions?"}, {"link": "", "title": "Learning to log: Helping developers make informed logging decisions (supplementary report)"}, {"link": "", "title": "Logging best practices"}, {"link": "", "title": "Microsoft \u201cRoslyn\u201d CTP"}, {"link": "", "title": "Optimal logging (Google) testing blog"}, {"link": "", "title": "Overview of Unified Logging System (ULS)"}, {"link": "", "title": "The problem with logging"}, {"link": "", "title": "Why not log all exceptions in MonoDevelop?"}, {"link": "", "title": "Why not log all exceptions in SharpDevelop?"}, {"link": "", "title": "A survey of text classification algorithms"}, {"link": "", "title": "Leveraging usage similarity for effective retrieval of examples in code repositories"}, {"link": "", "title": "Structural information based term weighting in text retrieval for feature location"}, {"link": "", "title": "The balanced accuracy and its posterior distribution"}, {"link": "", "title": "Trading robustness for maintainability: an empirical study of evolving C# programs"}, {"link": "", "title": "Smote: Synthetic minority over-sampling technique"}, {"link": "", "title": "Correlating instrumentation data to system states: A building block for automated diagnosis and control"}, {"link": "", "title": "Striking a new balance between program instrumentation and debugging time"}, {"link": "/document/6685834", "title": "Classification in the presence of label noise: A survey"}, {"link": "", "title": "Execution anomaly detection in distributed systems through unstructured log analysis"}, {"link": "", "title": "Where do developers log? an empirical study on logging practices in industry"}, {"link": "", "title": "Exception handling: Issues and a proposed notation"}, {"link": "", "title": "An introduction to variable and feature selection"}, {"link": "", "title": "The weka data mining software: An update"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "The unified logging infrastructure for data analytics at twitter"}, {"link": "", "title": "Evidence of log integrity in policy-based security monitoring"}, {"link": "", "title": "Structured comparative analysis of systems logs to diagnose performance problems"}, {"link": "", "title": "Transfer defect learning"}, {"link": "/document/6693096", "title": "Lightweight control-flow instrumentation and postmortem analysis in support of debugging"}, {"link": "", "title": "Advances and challenges in log analysis"}, {"link": "", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "", "title": "Studying the relationship between logging characteristics and the code quality of platform software"}, {"link": "", "title": "Understanding log lines using development knowledge"}, {"link": "", "title": "Mining exception-handling rules as sequence association rules"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "", "title": "Be conservative: enhancing failure diagnosis with proactive logging"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Improving software diagnosability via log enhancement"}, {"link": "/document/1467838", "title": "Ensembles of models for automated diagnosis of system performance problems"}, {"link": "", "title": "Cross-library api recommendation using web search engines"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194593"}
{"ref": [{"link": "", "title": "Selenium"}, {"link": "", "title": "Capture-replay vs. programmable web testing: An empirical assessment during test case evolution"}, {"link": "", "title": "Efficient and change-resilient test automation: An industrial case study"}, {"link": "", "title": "Robust test automation using contextual clues"}, {"link": "", "title": "Automatically repairing event sequence-based GUI test suites for regression testing"}, {"link": "", "title": "Maintaining and evolving GUI-directed test scripts"}, {"link": "", "title": "WATER: Web application test repair"}, {"link": "", "title": "Automatically repairing broken workflows for evolving GUI applications"}, {"link": "", "title": "Improving test suites maintainability with the page object pattern: An industrial case study"}, {"link": "", "title": "Page Objects"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "/document/4539539", "title": "State-based testing of Ajax web applications"}, {"link": "/document/5728834", "title": "Invariant-based automatic testing of modern web applications"}, {"link": "", "title": "Rich internet application testing using execution trace data"}, {"link": "/document/6606562", "title": "Guided test generation for web applications"}, {"link": "", "title": "Crawling Ajax-based web applications through dynamic analysis of user interface state changes"}, {"link": "", "title": "GUITAR: An innovative tool for automated testing of GUI-driven software"}, {"link": "/document/6227232", "title": "EXSYST: Search-based GUI testing"}, {"link": "", "title": "Feedback-directed exploration of web applications to derive test models"}, {"link": "", "title": "Automated cross-browser compatibility testing"}, {"link": "", "title": "Event listener analysis and symbolic execution for testing GUI applications"}, {"link": "", "title": "Lowering the barriers to website testing with CoTester"}, {"link": "", "title": "Coscripter: Automating and sharing how-to knowledge in the enterprise"}, {"link": "", "title": "Efficiently scripting change-resilient tests"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "A survey of named entity recognition and classification"}, {"link": "/document/6200099", "title": "AutoBlackTest: Automatic black-box testing of interactive applications"}, {"link": "", "title": "Repairing gui test suites using a genetic algorithm"}, {"link": "", "title": "Regression testing Ajax applications: Coping with dynamism"}, {"link": "", "title": "Koala: capture, share, automate, personalize business processes on the web"}, {"link": "", "title": "Efficient and flexible GUI test execution via test merging"}, {"link": "/document/4812745", "title": "Identification of extract method refactoring opportunities"}, {"link": "", "title": "Effective, automatic procedure extraction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194560"}
{"ref": [{"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Do too many cooks spoil the broth? using the number of developers to enhance defect prediction models"}, {"link": "", "title": "The business case for automated software engineering"}, {"link": "/document/6227194", "title": "Privacy and utility for defect prediction: Experiments with morph"}, {"link": "/document/6419712", "title": "Balancing privacy and utility in cross-company defect prediction"}, {"link": "", "title": "Is data privacy always good for software testing?"}, {"link": "", "title": "The cost of privacy: destruction of data-mining utility in anonymized data publishing"}, {"link": "", "title": "The promise repository of empirical software engineering data"}, {"link": "/document/1366115", "title": "Privacy-preserving data mining: why, how, and when"}, {"link": "/document/1463232", "title": "Enabling reuse-based software development of large-scale systems"}, {"link": "/document/4160970", "title": "Cross versus within-company cost estimation studies: A systematic review"}, {"link": "", "title": "Recalling the \u201cimprecision\u201d of cross-project defect prediction"}, {"link": "", "title": "Transfer learning for cross-company software defect prediction"}, {"link": "", "title": "An investigation on the feasibility of cross-project defect prediction"}, {"link": "/document/6363444", "title": "Local versus global lessons for defect prediction and effort estimation"}, {"link": "", "title": "Transfer defect learning"}, {"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "Privacy-Preserving Data Publishing: A Survey on Recent Developments"}, {"link": "", "title": "Publishing data from electronic health records while preserving privacy: A survey of algorithms"}, {"link": "", "title": "k-anonymity: A model for protecting privacy"}, {"link": "", "title": "A face is exposed for aol searcher no. 4417749"}, {"link": "", "title": "Evaluating prediction systems in software project estimation"}, {"link": "", "title": "Discretization techniques: A recent survey"}, {"link": "", "title": "Optimizing requirements decisions with keys"}, {"link": "", "title": "Pattern Classification"}, {"link": "", "title": "Instance-Based Learning Algorithms"}, {"link": "", "title": "Towards identifying software project clusters with regard to defect prediction"}, {"link": "", "title": "Significance of different software metrics in defect prediction"}, {"link": "/document/1053964", "title": "Nearest neighbor pattern classification"}, {"link": "", "title": "Naive (bayes) at forty: The independence assumption in information retrieval"}, {"link": "", "title": "Neural Networks for Pattern Recognition"}, {"link": "", "title": "Training support vector machines: an application to face detection"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "Techniques for evaluating fault prediction models"}, {"link": "/document/4288197", "title": "Problems with precision: A response to \u201ccomments on \u2018data mining static code attributes to learn defect predictors\u201d\u2019"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "", "title": "Testing software in age of data privacy: A balancing act"}, {"link": "", "title": "Sanitizing and minimizing databases for software application test outsourcing"}, {"link": "", "title": "Better bug reporting with better privacy"}, {"link": "", "title": "Camouflage: Automated anonymization of field data"}, {"link": "", "title": "kb-anonymity: a model for anonymized behaviour-preserving test and debugging data"}, {"link": "/document/6191", "title": "Understanding and controlling software costs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194627"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Making trace monitors feasible"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "A staged static program analysis to improve the performance of runtime monitoring"}, {"link": "", "title": "Mop: An efficient and generic runtime verification framework"}, {"link": "", "title": "Parametric and sliced causality"}, {"link": "", "title": "Jpredictor: A predictive runtime analysis tool for Java"}, {"link": "", "title": "ZB: An efficient SMT solver"}, {"link": "", "title": "Goldilocks: A race and transaction-aware Java runtime"}, {"link": "", "title": "Predicting null-pointer dereferences in concurrent programs"}, {"link": "", "title": "Redcard: Redundant check elimination for dynamic race detectors"}, {"link": "", "title": "PECAN: Persuasive Prediction of Concurrency Access Anomalies"}, {"link": "", "title": "Scaling predictive analysis of concurrent programs by removing trace redundancy"}, {"link": "", "title": "CLAP: Recording Local Executions to Reproduce Concurrency Failures"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Detecting atomicset serializability violations in multithreaded programs through active randomized testing"}, {"link": "", "title": "The soot framework for Java program analysis: A retrospective"}, {"link": "", "title": "CHECK-THEN-ACT Misuse of Java Concurrent Collections"}, {"link": "", "title": "EnforceMOP: A runtime property enforcement system for multithreaded programs"}, {"link": "", "title": "Lam. Finding application errors and security flaws using PQL: A program query language"}, {"link": "", "title": "Hybrid dynamic data race detection"}, {"link": "", "title": "Generating data race witnesses by an SMT-based analysis"}, {"link": "", "title": "Race directed random testing of concurrent programs"}, {"link": "", "title": "Runtime safety analysis of multithreaded programs"}, {"link": "", "title": "Detecting errors in multithreaded programs by generalized predictive analysis of executions"}, {"link": "", "title": "Maximal causal models for sequentially consistent systems"}, {"link": "", "title": "Penelope: Weaving threads to expose atomicity violations"}, {"link": "", "title": "Associating synchronization constraints with data in an object-oriented language"}, {"link": "", "title": "Universal causality graphs: A precise happens-before model for detecting bugs in concurrent programs"}, {"link": "", "title": "Symbolic predictive analysis for concurrent programs"}, {"link": "", "title": "Trace-based symbolic analysis for atomicity violations"}, {"link": "", "title": "Accurate and efficient runtime detection of atomicity errors in concurrent programs"}, {"link": "", "title": "Predictive Typestate Checking of Multithreaded Java Programs"}, {"link": "", "title": "2ndStrike: Toward Manifesting Hidden Concurrency Typestate Bugs"}, {"link": "", "title": "Randomized active atomicity violation detection in concurrent programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194631"}
{"ref": [{"link": "", "title": "Using Static Analysis to Find Bugs"}, {"link": "/document/738528", "title": "Clone Detection Using Abstract Syntax Trees"}, {"link": "", "title": "Evaluating the Relation Between Coding Standard Violations and Faults Within and Across Software Versions"}, {"link": "", "title": "Coverity"}, {"link": "", "title": "Extraction of Java Program Fingerprints for Software Authorship Identification"}, {"link": "", "title": "error-prone"}, {"link": "", "title": "Static Code Analyzer"}, {"link": "", "title": "Apache Foundation. Hadoop"}, {"link": "", "title": "Apache Foundation. Spark"}, {"link": "", "title": "Mozilla Foundation. Gaia"}, {"link": "/document/1572315", "title": "How Developers Drive Software Evolution"}, {"link": "", "title": "Tracking Structural Evolution Using Origin Analysis"}, {"link": "/document/1401931", "title": "Using Origin Analysis to Detect Merging and Splitting of Source Code Entities"}, {"link": "", "title": "Refining Code Ownership with Synchronous Changes"}, {"link": "", "title": "A Fast Algorithm for Computing Longest Common Subsequences"}, {"link": "", "title": "Why Don't Software Developers Use Static Analysis Tools to Find Bugs?"}, {"link": "/document/1019480", "title": "CCFinder: A Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code"}, {"link": "", "title": "Program Element Matching for Multi-Version Program Analyses"}, {"link": "", "title": "An Empirical Study of Code Clone Genealogies"}, {"link": "", "title": "Which Warnings Should I Fix First?"}, {"link": "", "title": "When Functions Change Their Names: Automatic Detection of Origin Relationships"}, {"link": "", "title": "Automatic Identification of Bug-Introducing Changes"}, {"link": "", "title": "Using Slicing to Identify Duplication in Source Code"}, {"link": "", "title": "Authorship Analysis: Identifying The Author of a Program"}, {"link": "", "title": "MongoDB"}, {"link": "", "title": "An O(ND) Difference Algorithm and Its Variations"}, {"link": "", "title": "Static Analysis Tools as Early Indicators of Pre-Release Defect Density"}, {"link": "", "title": "FindBugs"}, {"link": "/document/4181709", "title": "Empirical Validation of Three Software Metrics Suites to Predict Fault-Proneness of Object-Oriented Classes Developed Using Highly Iterative or Agile Software Development Processes"}, {"link": "", "title": "PMD Source Code Analyzer"}, {"link": "", "title": "Project Insight"}, {"link": "", "title": "When Do Changes Induce Fixes?"}, {"link": "", "title": "Tracking Defect Warnings Across Versions"}, {"link": "", "title": "Software Forensics: Can We Track Code to its Authors?"}, {"link": "/document/1191795", "title": "Empirical Analysis of CK Metrics for Object-Oriented Design Complexity: Implications for Software Defects"}, {"link": "/document/6227226", "title": "Using Automatic Static Analysis to Identify Technical Debt"}, {"link": "", "title": "An Empirical Validation of FindBugs Issues Related to Defects"}, {"link": "", "title": "On the Value of Static Analysis for Fault Detection in Software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194595"}
{"ref": [{"link": "", "title": "Using scrum in global soft. development: A systematic literature review"}, {"link": "", "title": "Signs of agile trends in global soft. eng. research: A tertiary study"}, {"link": "", "title": "Using Scrum in a globally distributed project: A case study"}, {"link": "", "title": "Transitioning to distributed development in students' global soft. development projects: The role of agile methodologies and end-to-end tooling"}, {"link": "", "title": "Guiding global software development projects using scrum and agile with quality assurance"}, {"link": "/document/6226946", "title": "On the difficulties for students to adhere to scrum on global soft. development projects: Preliminary results"}, {"link": "/document/6606664", "title": "Teaching students global software engineering skills using distributed scrum"}, {"link": "", "title": "Agile Software development with Scrum"}, {"link": "/document/6226944", "title": "Towards a gse intl. teaching network: Mapping global soft. eng. courses"}, {"link": "", "title": "Challenges of global software development"}, {"link": "", "title": "Preparing students and engineers for global soft. development: A systematic review"}, {"link": "/document/4271591", "title": "Globalizing software development in the local classroom"}, {"link": "", "title": "The challenges of teaching students how to work in global soft. teams"}, {"link": "", "title": "On the development of pedagogical materials for globally distributed software engineering"}, {"link": "", "title": "Splitting the Organization and Integrating the Code: Conway's Law Revisited"}, {"link": "/document/6205767", "title": "Coordination breakdowns and their impact on development productivity and software failures"}, {"link": "/document/4299842", "title": "Awareness in the wild: Why communication breakdowns occur"}, {"link": "", "title": "An empirical study of software developers' management of dependencies and changes"}, {"link": "", "title": "Supporting collaborative software development through the visualization of sociotechnical dependencies"}, {"link": "", "title": "The scrum guide \u2014 the definitive guide to scrum: The rules of the game"}, {"link": "", "title": "Collaboration practices in global inter-organizational soft. development projects"}, {"link": "", "title": "Mixing qualitative and quantitative methods: Triangulation in action"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "", "title": "Giving up control without losing control - Trust and its substitutes' effects on managers' involving employees in decision making"}, {"link": "", "title": "Teamwork quality and the success of innovative projects: A theoretical concept and empirical evidence"}, {"link": "", "title": "Interteam coordination, project commitment, and teamwork in multiteam R&D projects: A longitudinal study"}, {"link": "", "title": "Agile can scale: Inventing and reinventing scrum in five companies"}, {"link": "", "title": "Inter-team coordination in large-scale globally distributed scrum: Do serum-of-serums really work?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202974"}
{"ref": [{"link": "", "title": "Engaged scholarship: a guide for organizational and social research"}, {"link": "", "title": "Explaining development and change in organizations"}, {"link": "", "title": "User acceptance of information technology: Toward a unified view"}, {"link": "", "title": "The Scrum Guide"}, {"link": "", "title": "Lean Software Development: An Agile Toolkit"}, {"link": "", "title": "The Relationship of System Engineering to the Project Cycle"}, {"link": "", "title": "BPMN 2.0-Business Process Model and Notation"}, {"link": "", "title": "Process Modeling"}, {"link": "/document/6276302", "title": "Where's the Theory for Software Engineering?"}, {"link": "", "title": "\n            Report on\n            "}, {"link": "", "title": "\n            Report on\n            "}, {"link": "/document/6613868", "title": "Possible core theories for software engineering"}, {"link": "", "title": "How to Develop a General Theory of Software Engineering: Report on the GTSE 2014 Workshop"}, {"link": "/document/4052585", "title": "A Systematic Review of Theory Use in Software Engineering Experiments"}, {"link": "", "title": "The Design of Design: Essays from a Computer Scientist"}, {"link": "", "title": "Exploring Paradox: Toward a More Comprehensive Guide"}, {"link": "", "title": "The reflective practitioner: how professionals think in action"}, {"link": "", "title": "The Illusion of Requirements in Software Deveolopment"}, {"link": "", "title": "The Sensemaking-Coevolution-Implementation Theory of Software Design"}, {"link": "", "title": "Formalising design exploration as co-evolution: A combined gene approach"}, {"link": "", "title": "An empirical evaluation of system development methodologies"}, {"link": "", "title": "Introducing an Empirical Model of Design"}, {"link": "", "title": "Improving coverage of design in information systems education"}, {"link": "", "title": "Comparing Two Software Design Process Theories"}, {"link": "", "title": "Software process improvement as emergent change: A structurational analysis"}, {"link": "", "title": "Managing the development of large software systems"}, {"link": "", "title": "Causation"}, {"link": "", "title": "Amethodical systems development: the deferred meaning of systems development methods"}, {"link": "", "title": "Multiple Criteria Decision Making, Multiattribute Utility Theory: The Next Ten Years"}, {"link": "", "title": "Notes on the synthesis of form"}, {"link": "", "title": "The Coding Manual for Qualitative Researchers"}, {"link": "", "title": "Cognitive bias in software engineering"}, {"link": "", "title": "Toward a Theory of Debiasing Software Development"}, {"link": "", "title": "Cognitive biases and decision support systems development: a design science approach"}, {"link": "/document/1377186", "title": "Cognitive Heuristics in Software Engineering: Applying and Extending Anchoring and Adjustment to Artifact Reuse"}, {"link": "", "title": "The Discovery of grounded theory: Strategies for qualitative research"}, {"link": "", "title": "The Development of Constructivist Grounded Theory"}, {"link": "", "title": "Fundamentals of Software Design Science"}, {"link": "", "title": "On the Conceptual Framework of John Gero's FBS-Model and the Prescriptive Aims of Design Methodology"}, {"link": "", "title": "Debiasing"}, {"link": "", "title": "Cognitive Illusions"}, {"link": "", "title": "System Justification Theory"}, {"link": "", "title": "A Decade of System Justification Theory: Accumulated Evidence of Conscious and Unconscious Bolstering of the Status Quo"}, {"link": "", "title": "SDLC 3.0: Beyond a Tacit Understanding of Agile"}, {"link": "/document/59", "title": "A spiral model of software development and enhancement"}, {"link": "", "title": "How to Solve It: A New Aspect of Mathematical Method"}, {"link": "", "title": "Human-machine reconfigurations: Plans and situated actions"}, {"link": "", "title": "Systems Thinking, Systems Practice"}, {"link": "", "title": "Manifesto for agile software development"}, {"link": "", "title": "The Rational Unified Process: An Introduction"}, {"link": "", "title": "Organizational innovation: review, critique and suggested research directions"}, {"link": "", "title": "Organizational change and innovation processes theory and methods for research"}, {"link": "", "title": "On the Study of Process in Communication Research"}, {"link": "", "title": "Empirical Methods for Research on Organizational Decision-Making Processes"}, {"link": "", "title": "Confirmation Bias"}, {"link": "", "title": "Perceived Usefulness, Perceived Ease of Use, and User Acceptance of Information Technology"}, {"link": "", "title": "Strong inference"}, {"link": "", "title": "Rigor in information systems positivist case research: Current practices, trends and recommendations"}, {"link": "", "title": "Testability"}, {"link": "", "title": "Design prototypes: A knowledge representation schema for design"}, {"link": "", "title": "Case study research: Design and methods"}, {"link": "", "title": "A Description of Think Aloud Method and Protocol Analysis"}, {"link": "", "title": "Comparing Paradigms for Describing Design Activity"}, {"link": "", "title": "Respondent-Driven Sampling: A New Approach to the Study of Hidden Populations"}, {"link": "", "title": "Convergent and discriminant validation by the multitrait-multimethod matrix"}, {"link": "", "title": "Software Engineering Process Theory: A Multi-Method Comparison of Sensemaking-Coevolution-Implementation Theory and Function-Behavior-Structure Theory"}, {"link": "", "title": "The Situated Function-Behaviour-Structure Framework"}, {"link": "", "title": "A question of class"}, {"link": "", "title": "Creativity in the design process: co-evolution of problem-solution"}, {"link": "", "title": "Agility from First Principles: Reconstructing the Concept of Agility in Information Systems Development"}, {"link": "", "title": "Understanding Free/Open Source Software Development Processes"}, {"link": "", "title": "Research Methods Knowledge Base"}, {"link": "", "title": "Naturalistic Inquiry"}, {"link": "", "title": "Validity, trustworthiness and rigour: quality and the idea of qualitative research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194558"}
{"ref": [{"link": "", "title": "Pex: white box test generation for. NET"}, {"link": "", "title": "EvoSuite: automatic test suite generation for object-oriented software"}, {"link": "", "title": "Randoop: feedback-directed random testing for Java"}, {"link": "", "title": "Generating effective integration test cases from unit ones"}, {"link": "/document/1542069", "title": "Studying the fault-detection effectiveness of GUI test cases for rapidly evolving software"}, {"link": "/document/6200099", "title": "AutoBlackTest: Automatic black-box testing of interactive applications"}, {"link": "", "title": "Search-based system testing: High coverage, no false alarms"}, {"link": "", "title": "A comprehensive survey of trends in oracles for software testing"}, {"link": "", "title": "Commons math"}, {"link": "", "title": "Crowdoracles: Can the crowd solve the oracle problem?"}, {"link": "", "title": "Automated oracles: An empirical study on cost and effectiveness"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "/document/5611554", "title": "Dynamic analysis for diagnosing integration faults"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "The distribution of the flora of the alpine zone"}, {"link": "/document/1702622", "title": "Detection of data flow anomaly through program instrumentation"}, {"link": "", "title": "TPTP probe kit"}, {"link": "", "title": "JaCoCo library"}, {"link": "", "title": "Java development tools (JDT)"}, {"link": "", "title": "Test selection for result inspection via mining predicate rules"}, {"link": "", "title": "Semantic anomaly detection in online data sources"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "", "title": "Mining object behavior with ADABU"}, {"link": "/document/6606571", "title": "Unifying FSM-inference algorithms through declarative specification"}, {"link": "/document/4700316", "title": "Automated identification of failure causes in system logs"}, {"link": "", "title": "Combining hardware and software instrumentation to classify program executions"}, {"link": "", "title": "Classification of software behaviors for failure detection: A discriminative pattern mining approach"}, {"link": "/document/919107", "title": "Finding failures by cluster analysis of execution profiles"}, {"link": "", "title": "Crosschecking oracles from intrinsic software redundancy"}, {"link": "", "title": "ARTOO: Adaptive random testing for object-oriented software"}, {"link": "/document/6227132", "title": "Automated oracle creation support, or: How I learned to stop worrying about fault propagation and love mutation testing"}, {"link": "", "title": "Dodona: automated oracle data set selection"}, {"link": "", "title": "Eclat: Automatic generation and classification of test inputs"}, {"link": "", "title": "Dsd-crasher: A hybrid analysis tool for bug finding"}, {"link": "", "title": "Understanding user understanding: determining correctness of generated program invariants"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194562"}
{"ref": [{"link": "", "title": "Learning from mistakes a comprehensive study of real world concurrency bug characteristics"}, {"link": "", "title": "An investigation of the therac-25 accidents"}, {"link": "", "title": "SecurityFocus. Software bug contributed to blackout"}, {"link": "", "title": "CLAP: Recording Local Executions to Reproduce Concurrency Failures"}, {"link": "", "title": "Intel 64 and IA-32 Architectures Software Developers Manual"}, {"link": "", "title": "MIPS Architecture For Programmers. Revision 3.12"}, {"link": "", "title": "Power ISA Version 2.07"}, {"link": "", "title": "Oracle SPARC Architecture"}, {"link": "", "title": "MESIF: A Two-Hop Cache Coherence Protocol for Point-to-Point Interconnects"}, {"link": "/document/1676929", "title": "Debugging parallel programs with instant replay"}, {"link": "", "title": "Automatic logging of operating system effects to guide application-level architecture simulation"}, {"link": "", "title": "Execution replay of multiprocessor virtual machines"}, {"link": "", "title": "Transparent, Lightweight Application Execution Replay on Commodity Multiprocessor Operating Systems"}, {"link": "", "title": "PRES: Probabilistic Replay with Execution Sketching on Multiprocessors"}, {"link": "", "title": "LReplay: A Pending Period Based Deterministic Replay Scheme"}, {"link": "", "title": "Respec: efficient online multiprocessor replay via speculation and external determinism"}, {"link": "", "title": "ODR: Output-Deterministic Replay for Multicore Debugging"}, {"link": "", "title": "Delorean: Recording and deterministically replaying shared-memory multi-processor execution efficiently"}, {"link": "", "title": "Analyzing Multicore Dumps to Facilitate Concurrency Bug Reproduction"}, {"link": "", "title": "A flight data recorder for full-system multiprocessor deterministic replay"}, {"link": "", "title": "Double-Play: Parallelizing Sequential Logging and Replay"}, {"link": "", "title": "Rerun: Exploiting episodes for lightweight memory race recording"}, {"link": "", "title": "LEAP: Lightweight deterministic multi-processor replay of concurrent Java programs"}, {"link": "", "title": "Z3: an efficient SMT solver"}, {"link": "", "title": "The SPLASH-2 programs: characterization and methodological considerations"}, {"link": "", "title": "Apache HTTPD"}, {"link": "", "title": "Cherokee Web Server"}, {"link": "", "title": "Chimera: hybrid program analysis for determinism"}, {"link": "", "title": "The Yices SMT solver"}, {"link": "", "title": "do computers stop and what can be done about it? In Buroautomation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194629"}
{"ref": [{"link": "/document/6473801", "title": "Patterns of knowledge in API reference documentation"}, {"link": "/document/4497212", "title": "Asking and answering questions during a programming change task"}, {"link": "", "title": "Two studies of opportunistic programming: Interleaving web foraging, learning, and writing code"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Using maximum entropy for text classification"}, {"link": "/document/6227207", "title": "Recovering traceability links between an API and its learning resources"}, {"link": "", "title": "Discovering information relevant to API elements using text classification"}, {"link": "", "title": "The stanford CoreNLP natural language processing toolkit"}, {"link": "", "title": "The C-value/NC-value Method of Automatic Recognition for Multi-Word Terms"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "A survey on automatic text summarization"}, {"link": "", "title": "Summarizing software artifacts: A case study of bug reports"}, {"link": "", "title": "Chapter 17: Recommendation systems in requirements discovery"}, {"link": "", "title": "Scenarios: Identifying missing objects and actions by means of computational linguistics"}, {"link": "/document/1244535", "title": "Uncovering hidden contracts: The. net example"}, {"link": "", "title": "In-ferring method specifications from natural language API descriptions"}, {"link": "", "title": "Automated Extraction of Security Policies from Natural-Language Software Doc-uments"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}, {"link": "", "title": "/*icomment: Bugs or bad comments?*/"}, {"link": "", "title": "Semi-automatically extracting FAQs to improve accessibility of software development knowledge"}, {"link": "", "title": "Content categorization of API discussions"}, {"link": "", "title": "Automating test automation"}, {"link": "/document/1041053", "title": "Recovering traceability links between code and documentation"}, {"link": "/document/1201194", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "", "title": "Combining formal concept analysis with information retrieval for concept location in source code"}, {"link": "", "title": "Feature location in source code: A taxonomy and survey"}, {"link": "/document/1463229", "title": "Hipikat: A project memory for software development"}, {"link": "", "title": "Mining source code descriptions from developer communications"}, {"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "", "title": "En-hancing software traceability by automatically expanding corpora with relevant documentation"}, {"link": "", "title": "Live API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194633"}
{"ref": [{"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "A novel co-evolutionary approach to automatic software bug fixing"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "More efficient automatic repair of large-scale programs using weak recompilation"}, {"link": "", "title": "Range fixes: Interactive error resolution for software configuration"}, {"link": "", "title": "Supporting automatic model inconsistency fixing"}, {"link": "", "title": "A practical flow-sensitive and context-sensitive c and c++ memory leak detector"}, {"link": "", "title": "Context- and path-sensitive memory leak detection"}, {"link": "", "title": "Practical memory leak detection using guarded value-flow analysis"}, {"link": "", "title": "Practical memory leak detector based on parameterized procedural summaries"}, {"link": "", "title": "Effective interprocedural resource leak detection"}, {"link": "", "title": "Static memory leak detection using full-sparse value-flow analysis"}, {"link": "", "title": "Demand-driven memory leak detection based on flow- and context-sensitive pointer analysis"}, {"link": "", "title": "Leakpoint: pinpointing the causes of memory leaks"}, {"link": "", "title": "Leakchaser: helping programmers narrow down causes of memory leaks"}, {"link": "", "title": "Making context-sensitive points-to analysis with heap cloning practical for the real world"}, {"link": "", "title": "Boosting the performance of flow-sensitive points-to analysis using value flow"}, {"link": "", "title": "Semi-sparse flow-sensitive pointer analysis"}, {"link": "", "title": "Flow-sensitive pointer analysis for millions of lines of code"}, {"link": "", "title": "An efficient method of computing static single assignment form"}, {"link": "", "title": "On abstraction refinement for program analyses in datalog"}, {"link": "", "title": "Memory leak analysis by contradiction"}, {"link": "", "title": "Free-me: a static analysis for automatic individual object reclamation"}, {"link": "", "title": "Monotone data flow analysis frameworks"}, {"link": "", "title": "Summary-based context-sensitive data-dependence analysis in presence of callbacks"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Has the bug really been fixed?"}, {"link": "", "title": "Region-based shape analysis with tracked locations"}, {"link": "", "title": "Melton: a practical and precise memory leak detection tool for c programs"}, {"link": "", "title": "Uniqueness inference for compile-time object deallocation"}, {"link": "", "title": "Compile-time deallocation of individual objects"}, {"link": "", "title": "The closer: Automating resource management in java"}, {"link": "", "title": "Facade: A compiler and runtime for (almost) object-bounded big data applications"}, {"link": "", "title": "Garbage collection: algorithms for automatic dynamic memory management"}, {"link": "", "title": "Garbage collection in an uncooperative environment"}, {"link": "", "title": "Uniprocessor garbage collection techniques"}, {"link": "", "title": "Bounding space usage of conservative garbage collectors"}, {"link": "", "title": "Bell: bit-encoding online memory leak detection"}, {"link": "", "title": "Visualizing reference patterns for solving memory leaks in java"}, {"link": "", "title": "Low-overhead memory leak detection using adaptive statistical profiling"}, {"link": "", "title": "Cork: dynamic memory leak detection for garbage-collected languages"}, {"link": "", "title": "Execution patterns in object-oriented visualization"}, {"link": "", "title": "Precise memory leak detection for java software using container profiling"}, {"link": "", "title": "Leakbot: An automated and lightweight tool for diagnosing memory leaks in large java applications"}, {"link": "", "title": "Exterminator: Automatically correcting memory errors with high probability"}, {"link": "", "title": "Detecting and eliminating memory leaks using cyclic memory allocation"}, {"link": "", "title": "Object ownership profiling: a technique for finding and fixing memory leaks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194597"}
{"ref": [{"link": "", "title": "Undergraduate software engineering"}, {"link": "", "title": "Critical success factors in online education"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Using Patterns to Teach Software Subsystem Design"}, {"link": "", "title": "Version Control with GIT"}, {"link": "", "title": "Make - A program for maintaining computer programs"}, {"link": "", "title": "Programming Ruby 1.9 & 2.0, Pragmatic Programmers"}, {"link": "", "title": "Hangouts"}, {"link": "", "title": "HD Video Conferencing & Telepresence Systems"}, {"link": "", "title": "Apple Remote Desktop"}, {"link": "", "title": "The Wallace Center and the Innovative Learning Institute at RIT (2014). myCourses Help and Resources"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202976"}
{"ref": [{"link": "", "title": "Amazon Cloud Watch"}, {"link": "", "title": "Amazon Auto Scaling"}, {"link": "", "title": "Efficient path profiling"}, {"link": "", "title": "The chubby lock service for loosely-coupled distributed systems"}, {"link": "", "title": "Hyperdex: A distributed, searchable key-value store"}, {"link": "", "title": "Apache Thrift"}, {"link": "", "title": "Adaptive, model-driven autoscaling for cloud applications"}, {"link": "", "title": "Hadoop"}, {"link": "", "title": "Dryad: Distributed data-parallel programs from sequential building blocks"}, {"link": "", "title": "Paxos for Systems Builders"}, {"link": "", "title": "Elastic remote methods"}, {"link": "", "title": "Memcached"}, {"link": "", "title": "The ACME Air Travel Reservation System"}, {"link": "", "title": "Agile: Elastic distributed resource scaling for infrastructure-as-a-service"}, {"link": "", "title": "Report on Cloud Computing to the OSG Steering Committee"}, {"link": "", "title": "Franklin, Scott Shenker, and Ion Stoica. Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203027"}
{"ref": [{"link": "", "title": "Black Duck Software, Inc."}, {"link": "", "title": "Declarative Visitors to Ease Fine-grained Source Code Mining with Full History on Billions of AST Nodes"}, {"link": "", "title": "A Programming Language Independent Framework for Metrics-based Software Evolution and Analysis"}, {"link": "", "title": "SOFAS: A Lightweight Architecture for Software Analysis as a Service"}, {"link": "", "title": "Evolution in Open Source Software: A Case Study"}, {"link": "", "title": "Sentiment Analysis of Commit Comments in Gitllub: An Empirical Study"}, {"link": "", "title": "Comparison between SLOCs and number of files as size metrics for software evolution analysis"}, {"link": "", "title": "inFusion, Intooitus s.r.l"}, {"link": "", "title": "Object-Oriented Metrics in Practice"}, {"link": "/document/1456074", "title": "Programs, life cycles, and laws of software evolution"}, {"link": "", "title": "Triaging incoming change requests: Bug or commit history, or code authorship?"}, {"link": "/document/6676896", "title": "Mining Software Repositories for Accurate Authorship"}, {"link": "", "title": "An Experience Report on Scaling Tools for Mining Software Repositories Using MapReduce"}, {"link": "", "title": "Signal/Collect: Graph Algorithms for the (Semantic) Web"}, {"link": "", "title": "FAMIX and XMI"}, {"link": "", "title": "Towards a better understanding of software evolution: An empirical study on open source software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203031"}
{"ref": [{"link": "/document/595959", "title": "Predicting How Badly \u201cGood\u201d Software Can Behave"}, {"link": "/document/4015509", "title": "Emulation of Software faults: A Field Data Study and a Practical Approach"}, {"link": "", "title": "Fault Injection for Software Certification"}, {"link": "", "title": "The Exception Handling Effectiveness of POSIX Operating Systems"}, {"link": "/document/980005", "title": "Dependability of COTS Microkernel-Based Systems"}, {"link": "", "title": "On the Impact of Hardware Faults-An Investigation of the Relationship between Workload Inputs and Failure Mode Distributions"}, {"link": "/document/6122035", "title": "On Fault Representativeness of Software Fault Injection"}, {"link": "", "title": "FATE and DESTINI: A Framework for Cloud Recovery Testing"}, {"link": "", "title": "PREFAIL: A Programmable Tool for Multiple-failure Injection"}, {"link": "", "title": "An Empirical Study of Injected versus Actual Interface Errors"}, {"link": "", "title": "simFI: From single to simultaneous software fault injections"}, {"link": "", "title": "Higher Order Mutation Testing"}, {"link": "", "title": "An empirical evaluation of the first and second order mutation testing strategies"}, {"link": "/document/4637557", "title": "Constructing Subtle Faults Using Higher Order Mutation Testing"}, {"link": "", "title": "Sufficient Mutation Operators for Measuring Test Effectiveness"}, {"link": "", "title": "Parallel testing of distributed software"}, {"link": "", "title": "GridUnit: Software Testing on the Grid"}, {"link": "", "title": "YETI on the Cloud"}, {"link": "", "title": "Fault Triggers in Open-Source Software: An Experience Report"}, {"link": "/document/919278", "title": "The design and verification of the rio file cache"}, {"link": "", "title": "Improving the reliability of commodity operating systems"}, {"link": "", "title": "Multidimensional characterization of the impact of faulty drivers on the operating systems behavior"}, {"link": "", "title": "Dependability Benchmarking of Web-Servers"}, {"link": "", "title": "A dependability benchmark for OLTP application environments"}, {"link": "/document/1311957", "title": "Characterization of the impact of faulty drivers on the robustness of the linux kernel"}, {"link": "/document/1388281", "title": "Effective fault treatment for improving the dependability of COTS and legacy-based applications"}, {"link": "", "title": "Foundations of measurement theory applied to the evaluation of dependability attributes"}, {"link": "/document/666826", "title": "Xception: a technique for the experimental evaluation of dependability in modern computers"}, {"link": "", "title": "GOOFI: Generic Object-Oriented Fault Injection Tool"}, {"link": "", "title": "A Framework for Assessing Dependability in Distributed Systems with Lightweight Fault Injectors"}, {"link": "", "title": "Comparing and validating measurements of dependability attributes"}, {"link": "", "title": "Evaluating Distortion in Fault Injection Experiments"}, {"link": "/document/1302100", "title": "A global-state-triggered fault injector for distributed system evaluation"}, {"link": "", "title": "State-Driven Testing of Distributed Systems"}, {"link": "", "title": "Assessing the Impact of Virtualization on the Generation of Failure Prediction Data"}, {"link": "", "title": "Designing a parallel, distributed test system"}, {"link": "", "title": "Automatically and Transparently Distributing the Execution of Regression Test Suites"}, {"link": "", "title": "Using the Computational Grid to Speed up Software Testing"}, {"link": "", "title": "Multienvironment Software Testing on the Grid"}, {"link": "/document/5306292", "title": "Towards a distributed execution framework for JUnit test cases"}, {"link": "", "title": "A Framework of Testing as a Service"}, {"link": "", "title": "Testing as a Service over Cloud"}, {"link": "", "title": "Parallel Symbolic Execution for Structural Test Generation"}, {"link": "", "title": "Automated Software Testing as a Service"}, {"link": "", "title": "Cloud9: A Software Testing Service"}, {"link": "/document/6228986", "title": "A whitebox approach for automated security testing of Android applications on the cloud"}, {"link": "", "title": "Why do computers stop and what can be done about it?"}, {"link": "/document/4085640", "title": "Fighting Bugs: Remove, Retry, Replicate, and Rejuvenate"}, {"link": "", "title": "D-Cloud: Design of a Software Testing Environment for Reliable Distributed Systems Using Cloud Computing Technology"}, {"link": "", "title": "Large-Scale Software Testing Environment Using Cloud Computing Technology for Dependable Parallel and Distributed Systems"}, {"link": "", "title": "Fast black-box testing of system recovery code"}, {"link": "", "title": "Enforcing performance isolation across virtual machines in xen"}, {"link": "", "title": "Application performance isolation in virtualization"}, {"link": "", "title": "An experimental study of cascading performance interference in a virtualized environment"}, {"link": "", "title": "DeepDive: Transparently Identifying and Managing Performance Interference in Virtualized Environments"}, {"link": "", "title": "An Empirical Study of Operating Systems Errors"}, {"link": "", "title": "Faults in linux: ten years later"}, {"link": "", "title": "Windows XP Embedded with Service Pack 1 Reliability"}, {"link": "", "title": "Windows XP Kernel Crash Analysis"}, {"link": "", "title": "Assessment and Improvement of Hang Detection in the Linux Operating System"}, {"link": "", "title": "OS-Level Hang Detection in Complex Software Systems"}, {"link": "", "title": "What Is System Hang and How to Handle It"}, {"link": "", "title": "DEEDS/TUD and Mobilab/UniNa, PAIN Software Framework"}, {"link": "", "title": "Generation of an Error Set that Emulates Software Faults based on Field Data"}, {"link": "", "title": "Android \u2013 Discover Android"}, {"link": "", "title": "android Git repositories"}, {"link": "", "title": "Android Emulator"}, {"link": "", "title": "Qemu"}, {"link": "", "title": "Roy Longbottom' s Android Benchmark Apps"}, {"link": "", "title": "Controlling the False Discovery Rate: A Practical and Powerful Approach to Multiple Testing"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "On the use of mutation faults in empirical assessments of test case prioritization techniques"}, {"link": "/document/4015509", "title": "Emulation of Software faults: A Field Data Study and a Practical Approach"}, {"link": "/document/6122035", "title": "On Fault Representativeness of Software Fault Injection"}, {"link": "", "title": "Dependability Benchmarking for Computer Systems"}, {"link": "/document/811108", "title": "Stress-based and path-based fault injection"}, {"link": "/document/1335465", "title": "Basic Concepts and Taxonomy of Dependable and Secure Computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194600"}
{"ref": [{"link": "", "title": "Worldwide traditional PC, tablet, ultramobile and mobile phone shipments"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "SCanDroid: Automated security certification of Android applications"}, {"link": "", "title": "Analyzing interapplication communication in Android"}, {"link": "", "title": "Systematic detection of capability leaks in stock Android smartphones"}, {"link": "", "title": "SmartDroid: An automatic system for revealing UI-based trigger conditions in Android applications"}, {"link": "", "title": "Effective inter-component communication mapping in Android with Epicc"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "What is keeping my phone awake?"}, {"link": "", "title": "Stopping and restarting an activity"}, {"link": "", "title": "Memory management for Android applications"}, {"link": "", "title": "CHEX: Statically vetting Android apps for component hijacking vulnerabilities"}, {"link": "", "title": "AsDroid: Detecting stealthy behaviors in Android applications by user interface and program behavior contradiction"}, {"link": "", "title": "Apposcopy: Semanticsbased detection of Android malware through static analysis"}, {"link": "", "title": "Finding errors in multithreaded GUI applications"}, {"link": "", "title": "Static analysis of Android programs"}, {"link": "", "title": "Experiences of system-level modelbased GUI testing of an Android application"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Systematic testing for resource leaks in Android applications"}, {"link": "/document/6614215", "title": "Testing for poor responsiveness in Android applications"}, {"link": "", "title": "Using GUI ripping for automated testing of Android applications"}, {"link": "", "title": "GATOR: Program Analysis Toolkit For Android"}, {"link": "", "title": "OpenManager: File manager for Android"}, {"link": "", "title": "A framework for call graph construction algorithms"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for Java"}, {"link": "", "title": "Pick your contexts well: Understanding object-sensitivity"}, {"link": "", "title": "Static reference analysis for GUI objects in Android software"}, {"link": "", "title": "Program analyses for understanding the behavior and performance of traditional and mobile object-oriented software"}, {"link": "", "title": "Interprocedural dataflow analysis in the presence of large libraries"}, {"link": "", "title": "SCanDroid: Security Certifier for anDroid"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of Android apps"}, {"link": "", "title": "Intents and intent filters"}, {"link": "", "title": "Precise interprocedural dataflow analysis with applications to constant propagation"}, {"link": "", "title": "An event-flow model of GUI-based applications for testing"}, {"link": "", "title": "A grey-box approach for automated GUI-model generation of mobile applications"}, {"link": "/document/6227157", "title": "Amplifying tests to validate exception handling code"}, {"link": "", "title": "Personal communication"}, {"link": "", "title": "Android GUI Ripper"}, {"link": "", "title": "Sound and precise malware analysis for Android via pushdown reachability and entry-point saturation"}, {"link": "", "title": "An operational semantics for Android activities"}, {"link": "/document/1287256", "title": "GUI ripping: Reverse engineering of graphical user interfaces for testing"}, {"link": "/document/1542069", "title": "Studying the fault-detection effectiveness of GUI test cases for rapidly evolving software"}, {"link": "", "title": "Search-based system testing: High coverage, no false alarms"}, {"link": "", "title": "Automatic Android GUI traversal with high coverage"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194564"}
{"ref": [{"link": "", "title": "S2E: A platform for in-vivo multi-path analysis of software systems"}, {"link": "", "title": "Loop-extended symbolic execution on binary programs"}, {"link": "", "title": "Statistical models: theory and practice"}, {"link": "", "title": "Segmented symbolic analysis"}, {"link": "/document/6693084", "title": "Characteristic studies of loop problems for structural test generation via symbolic execution"}, {"link": "", "title": "Creating vulnerability signatures using weakest preconditions"}, {"link": "", "title": "BAP: A binary analysis platform"}, {"link": "", "title": "R Core Team"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "/document/6227168", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Katch: High-coverage testing of software patches"}, {"link": "", "title": "MACE: Model-inference-Assisted Concolic Exploration for Protocol and Vulnerability Discovery"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Boosting concolic testing via interpolation"}, {"link": "", "title": "Dowsing for overflows: A guided fuzzer to find buffer boundary violations"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "Hi-cfg: Construction by binary analysis and application to attack polymorphism"}, {"link": "", "title": "Automated Whitebox Fuzz Testing"}, {"link": "", "title": "Grammar-based whitebox fuzzing"}, {"link": "", "title": "Taint-based directed whitebox fuzzing"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Automatic patch-based exploit generation is possible: Techniques and implications"}, {"link": "", "title": "Blitz: Compositional bounded model checking for real-world programs"}, {"link": "", "title": "Unleashing Mayhem on binary code"}, {"link": "", "title": "Efficient state merging in symbolic execution"}, {"link": "", "title": "Enhancing symbolic execution with veritesting"}, {"link": "", "title": "Recrash: Making software failures reproducible by preserving object states"}, {"link": "", "title": "High coverage detection of input-related security faults"}, {"link": "", "title": "Testing for buffer overflows with length abstraction"}, {"link": "", "title": "Z3-str: A z3-based string solver for web application analysis"}, {"link": "", "title": "Prototyping Symbolic Execution Engines for Interpreted Languages"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194635"}
{"ref": [{"link": "", "title": "Automated Decomposition of Build Targets"}, {"link": "", "title": "Assessing the Value of Branches with What-if Analysis"}, {"link": "", "title": "Branching Taxonomy"}, {"link": "", "title": "Enterprise Resource Planning: Componentizing the Enterprise Application Packages"}, {"link": "", "title": "The Impact of Test Ownership and Team Structure on the Reliability and Effectiveness of Quality Test Runs"}, {"link": "", "title": "What we have learned about fighting defects"}, {"link": "/document/263796", "title": "Can we measure software testing effectiveness?"}, {"link": "/document/1702179", "title": "Comparing the Effectiveness of Software Testing Strategies"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}, {"link": "/document/988497", "title": "Test Case Prioritization: A Family of Empirical Studies"}, {"link": "", "title": "Test-Suite Reduction and Prioritization for Modified Condition/Decision Coverage"}, {"link": "", "title": "Improving the Effectiveness of Test Suite Through Mining Historical Data"}, {"link": "", "title": "Black-box test reduction using input-output analysis"}, {"link": "", "title": "Dynamic impact analysis: a cost-effective technique to enforce error-propagation"}, {"link": "", "title": "Test effectiveness index: Integrating product metrics with process metrics"}, {"link": "", "title": "Mitigating the Impact of Software Test Constraints on Software Testing Effectiveness"}, {"link": "", "title": "Test case prioritization: an empirical study"}, {"link": "/document/6228990", "title": "An industrial case study of the effectiveness of test generators"}, {"link": "", "title": "Effectiveness and Cost of Verification Techniques: Preliminary Conclusions on Five Techniques"}, {"link": "", "title": "Pareto efficient multi-objective test case selection"}, {"link": "", "title": "Efficient time-aware prioritization with knapsack solvers"}, {"link": "", "title": "An empirical study of the effect of time constraints on the cost-benefits of regression testing"}, {"link": "", "title": "On test suite composition and cost-effective regression testing"}, {"link": "", "title": "Improving scenario testing process by adding value-based prioritization: an industrial case study"}, {"link": "", "title": "Guidance for Test Selection Based on the Cost of Errors"}, {"link": "/document/4402199", "title": "Prioritization of Regression Tests using Singular Value Decomposition with Empirical Change Records"}, {"link": "", "title": "A case study of the class firewall regression test selection technique on a large scale distributed software system"}, {"link": "", "title": "Testing highly complex system of systems: an industrial case study"}, {"link": "/document/4228648", "title": "Mining Workspace Updates in CVS"}, {"link": "", "title": "Proactive detection of collaboration conflicts"}, {"link": "", "title": "Parallel changes in large-scale software development: an observational case study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194599"}
{"ref": [{"link": "/document/4012622", "title": "Learning software engineering at a distance"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge, Version 3.0. IEEE"}, {"link": "", "title": "The story of socio-technical design: reflections on its successes, failures and potential"}, {"link": "", "title": "Problem Frames for Socio-Technical Systems"}, {"link": "", "title": "Socio-technical systems: From design methods to systems engineering"}, {"link": "", "title": "Expanding the concept of model: the transfer from technological to human domains within systems thinking"}, {"link": "", "title": "Information systems: achieving success by avoiding failure"}, {"link": "", "title": "Masters-level Software Engineering education and the enriched student context"}, {"link": "", "title": "Steps in developing an advanced software engineering course using problem based learning"}, {"link": "/document/6685145", "title": "Simulating industry: An innovative software engineering capstone design course"}, {"link": "", "title": "Educating software engineers of the future: Software quality research through problem-based learning"}, {"link": "", "title": "Managing the Software Enterprise: Software Engineering and Information Systems in Context. Cengage Learning"}, {"link": "", "title": "Mastering the requirements process"}, {"link": "", "title": "A CBT module with integrated simulation component for software project management education and training"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202978"}
{"ref": [{"link": "", "title": "The Institute of Electrical and Eletronics Engineers"}, {"link": "", "title": "The Association for Computing Machinery(ACM); The Association for Information Systems (AIS); The Computer Society (IEEE-CS)"}, {"link": "", "title": "A mature profession of software engineering"}, {"link": "/document/6018960", "title": "Software engineering-missing in action: A personal perspective"}, {"link": "/document/5287012", "title": "Continuing prospects for an engineering discipline of software"}, {"link": "", "title": "Software engineering 2004: Curriculum guidelines for undergraduate degree programs in software engineering"}, {"link": "/document/5590235", "title": "Advancing software engineering professional education"}, {"link": "", "title": "Graduate Software Engineering 2009 (GSwE2009) Curriculum Guidelines for Graduate Degree Programs in Software Engineering"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge (SWEBOK)"}, {"link": "", "title": "Taxonomy of Educational Objectives: The Classification of Educational Goals, Handbook 1: Cognitive Domain."}, {"link": "", "title": "Computer science 2008: Curriculum guidelines for undergraduate degree programs in computer science"}, {"link": "", "title": "The Rational Unified Process: An Introduction"}, {"link": "", "title": "Construcci\u00f3n de un banco de pruebas de modelos de proceso"}, {"link": "", "title": "Statistical method from the viewpoint of quality control."}, {"link": "/document/4012621", "title": "Creating an accreditable software engineering bachelor's program"}, {"link": "", "title": "An assessment of the software engineering curriculum in Turkish universities IEEE/ACM guidelines perspective"}, {"link": "", "title": "Accreditation of Monash University software engineering (MUSE) program"}, {"link": "", "title": "Using GSwE2009 in the creation and modification of graduate software engineering programs and related curricula"}, {"link": "", "title": "Use of GSwE2009 curriculum at the University of the Republic"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202982"}
{"ref": [{"link": "", "title": "Software product line engineering and variability management: Achievements and challenges"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Quantifying product line benefits"}, {"link": "", "title": "Search based software engineering for software product line engineering: a survey and directions for future work (keynote paper)"}, {"link": "", "title": "Filtered cartesian flattening: An approximation technique for optimally selecting features while adhering to resource constraints"}, {"link": "", "title": "Formalizing feature selection problem in software product lines using 0\u20131 programming"}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "", "title": "An optimization model for reuse scenario selection considering reliability and cost in software product line development"}, {"link": "/document/6664735", "title": "On parameter tuning in search-based software engineering: A replicated empirical study"}, {"link": "", "title": "Optimum feature selection in software product lines: Let your model and values guide your search"}, {"link": "", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "/document/6693104", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "/document/4339264", "title": "Optimization of variability in software product lines"}, {"link": "/document/6823132", "title": "Bypassing the combinatorial explosion: Using similarity to generate and prioritize t-wise test configurations for software product lines"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "/document/730836", "title": "Commonality and variability in software engineering"}, {"link": "/document/1020288", "title": "Feature-oriented product line engineering"}, {"link": "/document/5070526", "title": "Reasoning about edits to feature models"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "A survey of variability modeling in industrial practice"}, {"link": "", "title": "Survey of multi-objective optimization methods for engineering"}, {"link": "", "title": "Indicator-based selection in multiobjective search"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Optimization of variability in software product lines"}, {"link": "", "title": "Reverse engineering feature models"}, {"link": "", "title": "Variability modeling in the systems software domain"}, {"link": "", "title": "Variability modeling in the real: A perspective from the operating systems domain"}, {"link": "", "title": "The sat4j library, release 2.2"}, {"link": "", "title": "jmetal: A java framework for multiobjective optimization"}, {"link": "", "title": "A Tutorial on the Performance Assessment of Stochastic Multiobjective Optimizers"}, {"link": "", "title": "Analyzing hypervolume indicator based algorithms"}, {"link": "", "title": "Lebesgue's theory of integration: its origins and development"}, {"link": "/document/1197687", "title": "Performance assessment of multiobjective optimizers: an analysis and review"}, {"link": "", "title": "Multiobjective evolutionary algorithm research: A history and analysis"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: Nsga-ii"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "A Critique and Improvement of the CL Common Language Effect Size Statistics of McGraw and Wong"}, {"link": "", "title": "Selecting highly optimal architectural feature sets with filtered cartesian flattening"}, {"link": "", "title": "Assessing software product line testing via model-based mutation: An application to similarity testing"}, {"link": "", "title": "The hypervolume indicator revisited: On the design of pareto-compliant indicators via weighted integration"}, {"link": "", "title": "Modelling and multi-objective optimization of quality attributes in variability-rich software"}, {"link": "", "title": "Multiobjective test generation for software product lines"}, {"link": "", "title": "How to handle constraints with evolutionary algorithms"}, {"link": "", "title": "Genetic algorithms in constrained optimization"}, {"link": "", "title": "Automated reasoning on feature models"}, {"link": "", "title": "Evolving feature model configurations in software product lines"}, {"link": "", "title": "Automated and scalable t-wise test case generation strategies for software product lines"}, {"link": "", "title": "Towards automated testing and fixing of re-engineered feature models"}, {"link": "", "title": "An algorithm for generating t-wise covering arrays from large feature models"}, {"link": "/document/6100068", "title": "A performance comparison of contemporary algorithmic approaches for automated analysis operations on feature models"}, {"link": "", "title": "Sat-based analysis of feature models is easy"}, {"link": "", "title": "Using knowledge-based systems to manage quality attributes in software product lines"}, {"link": "", "title": "Parameter tuning or default values? an empirical investigation in search-based software engineering"}, {"link": "", "title": "Learning combinatorial interaction testing strategies using hyperheuristic search"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194602"}
{"ref": [{"link": "/document/28121", "title": "Software inspections: An effective verification process"}, {"link": "/document/1207450", "title": "Practical code inspection techniques for object-oriented systems: an experimental comparison"}, {"link": "/document/5387093", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "Peer reviews in software: a practical guide"}, {"link": "", "title": "How do software engineers understand code changes?: an exploratory study in industry"}, {"link": "", "title": "Object-oriented inspection in the face of delocalisation"}, {"link": "", "title": "How do APIs evolve? a story of refactoring"}, {"link": "", "title": "N degrees of separation: multi-dimensional separation of concerns"}, {"link": "", "title": "CP-Miner: A tool for finding copy-paste and related bugs in operating system code"}, {"link": "/document/1019480", "title": "CCFinder: A multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Matching dependence-related queries in the system dependence graph"}, {"link": "", "title": "Finding application errors and security flaws using pql: a program query language"}, {"link": "", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "RTED: a robust algorithm for the tree edit distance"}, {"link": "", "title": "Simple fast algorithms for the editing distance between trees and related problems"}, {"link": "", "title": "An optimal decomposition algorithm for tree edit distance"}, {"link": "/document/4339230", "title": "Change distilling-tree differencing for fine-grained source code change extraction"}, {"link": "/document/799955", "title": "Qualitative methods in empirical studies of software engineering"}, {"link": "", "title": "Lase: Locating and applying systematic edits by learning from examples"}, {"link": "", "title": "An empirical study of supplementary bug fixes"}, {"link": "", "title": "Open source software peer review practices: a case study of the apache server"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Helping developers help themselves: Automatic decomposition of code review changesets"}, {"link": "/document/4492791", "title": "Discovering neglected conditions in software by mining dependence graphs"}, {"link": "", "title": "Code search via topic-enriched dependence graph matching"}, {"link": "", "title": "Instant code clone search"}, {"link": "", "title": "CBCD: Cloned buggy code detector"}, {"link": "/document/6234404", "title": "Redebug: Finding unpatched code clones in entire os distributions"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Closegraph: mining closed frequent graph patterns"}, {"link": "", "title": "Detection of recurring software vulnerabilities"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "/document/6693095", "title": "Detecting and characterizing semantic inconsistencies in ported code"}, {"link": "", "title": "Active refinement of clone anomaly reports"}, {"link": "", "title": "Detecting differences across multiple instances of code clones"}, {"link": "/document/5609577", "title": "Template-based reconstruction of complex refactorings"}, {"link": "", "title": "Chianti: a tool for change impact analysis of Java programs"}, {"link": "", "title": "Semantic patch inference"}, {"link": "", "title": "A graph-based approach to API usage adaptation"}, {"link": "", "title": "Systematic editing: generating program transformations from an example"}, {"link": "", "title": "Critics: An interactive code review tool for searching and inspecting systematic changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194566"}
{"ref": [{"link": "", "title": "A novel co-evolutionary approach to automatic software bug fixing"}, {"link": "/document/1701972", "title": "The N-version approach to fault-tolerant software"}, {"link": "/document/1335465", "title": "Basic concepts and taxonomy of dependable and secure computing"}, {"link": "", "title": "Crosschecking oracles from intrinsic software redundancy"}, {"link": "", "title": "Automatic recovery from runtime failures"}, {"link": "", "title": "Automatic workarounds for Web applications"}, {"link": "", "title": "A survey of binary similarity and distance measures"}, {"link": "", "title": "A comparison of string metrics for matching names and records"}, {"link": "", "title": "Automatic performance management in component based software systems"}, {"link": "/document/1690133", "title": "Using WS-BPEL to implement software fault tolerance for web services"}, {"link": "", "title": "The ASTOOT approach to testing object-oriented programs"}, {"link": "", "title": "Biological Sequence Analysis"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "On designing dependable services with diverse off-the-shelf SQL servers"}, {"link": "", "title": "Search-based synthesis of equivalent method sequences"}, {"link": "/document/1251058", "title": "Exploiting symmetries to test programs"}, {"link": "", "title": "On observing nondeterminism and concurrency"}, {"link": "", "title": "How Should We Measure Functional Sameness from Program Source Code? An Exploratory Study on Java Methods"}, {"link": "", "title": "Probabilistic linkage of large public health data files"}, {"link": "", "title": "Automatic mining of functionally equivalent code fragments via random testing"}, {"link": "/document/6312924", "title": "An experimental evaluation of the assumption of independence in multi-version programming"}, {"link": "", "title": "Increasing web service dependability through consensus voting"}, {"link": "", "title": "Disl: A domain-specific language for bytecode instrumentation"}, {"link": "", "title": "Transparent runtime adaptability for BPEL processes"}, {"link": "", "title": "A self-healing framework for web services"}, {"link": "", "title": "A guided tour to approximate string matching"}, {"link": "", "title": "Testing equivalences for processes"}, {"link": "", "title": "The category-partition method for specifying and generating functional tests"}, {"link": "", "title": "Randoop: feedback-directed random testing for java"}, {"link": "", "title": "System structure for software fault tolerance"}, {"link": "", "title": "Using transparent shaping and Web services to support self-management of composite systems"}, {"link": "", "title": "On the theory and computation of evolutionary distances"}, {"link": "/document/4604540", "title": "On the enhancement of BPEL engines for self-healing composite web services"}, {"link": "", "title": "Towards an approach for Web services substitution"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Design of self-checking software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194570"}
{"ref": [{"link": "", "title": "Reining in the outliers in map-reduce clusters using mantri"}, {"link": "/document/4160967", "title": "A replicated quantitative analysis of fault distributions in complex software systems"}, {"link": "", "title": "Apache. Hadoop"}, {"link": "", "title": "Apache. Hadoop distributed file system"}, {"link": "", "title": "A first look at problems in the cloud"}, {"link": "", "title": "SCOPE: Easy and efficient parallel processing of massive data sets"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "MapReduce: simplified data processing on large clusters"}, {"link": "", "title": "Ng. Understanding the effects and implications of compute node related failures in hadoop"}, {"link": "", "title": "Quantitative analysis of faults and failures in a complex software system"}, {"link": "", "title": "Availability in globally distributed storage systems"}, {"link": "", "title": "The Google file system"}, {"link": "", "title": "Understanding network failures in data centers: measurement, analysis, and implications"}, {"link": "", "title": "Why do computers stop and what can be done about it?"}, {"link": "", "title": "Autopilot: automatic data center management"}, {"link": "", "title": "Dryad: distributed data-parallel programs from sequential building blocks"}, {"link": "", "title": "Performance under failures of mapreduce applications"}, {"link": "", "title": "An analysis of traces from a production mapreduce cluster"}, {"link": "", "title": "A characteristic study on failures of production distributed data-parallel programs"}, {"link": "", "title": "Have things changed now?: an empirical study of bug characteristics in modern open source software"}, {"link": "", "title": "Recovery oriented computing (roc): Motivation, definition, techniques"}, {"link": "", "title": "Failure trends in a large disk drive population"}, {"link": "", "title": "Disk failures in the real world: What does an MTTF of 1, 000, 000 hours mean to you?"}, {"link": "", "title": "Defect categorization: making use of a decade of widely varying historical data"}, {"link": "", "title": "Characterizing cloud computing hardware reliability"}, {"link": "", "title": "Nondeterminism in mapreduce considered harmful? An empirical study on non-commutative aggregators in mapreduce programs"}, {"link": "", "title": "An empirical study on configuration errors in commercial and open source systems"}, {"link": "", "title": "Distributed aggregation for data-parallel computing: interfaces and implementations"}, {"link": "/document/4407730", "title": "On the distribution of software faults"}, {"link": "", "title": "Predicting bug-fixing time: an empirical study of commercial software projects"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202945"}
{"ref": [{"link": "", "title": "Backgammon computer program beats world champion"}, {"link": "", "title": "Fair and balanced?: bias in bug-fix datasets"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "", "title": "Enabling static analysis for partial Java programs"}, {"link": "", "title": "On the influence of multiple faults on coverage-based fault localization"}, {"link": "", "title": "Correlations between bugginess and time-based commit characteristics"}, {"link": "/document/4339230", "title": "Change distilling: Tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "On similarity-awareness in testing-based fault localization"}, {"link": "", "title": "On the nature of commits"}, {"link": "", "title": "It's not a bug, it's a feature: How misclassification impacts bug prediction"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "", "title": "How long did it take to fix bugs?"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Inferring project-specific bug patterns for detecting sibling bugs"}, {"link": "", "title": "Failure proximity: a fault localization-based approach"}, {"link": "", "title": "An empirical analysis of flaky tests"}, {"link": "", "title": "Mining software repair models for reasoning on the search space of automated program fixing"}, {"link": "", "title": "A critical review of \u201cautomatic patch generation learned from human-written patches\u201d: Essay on the problem statement and the evaluation of automatic software repair"}, {"link": "", "title": "The design of bug fixes"}, {"link": "/document/6693078", "title": "A study of repetitiveness of code changes in software evolution"}, {"link": "", "title": "Toward an understanding of bug fix patterns"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "/document/6311409", "title": "Automated API property inference techniques"}, {"link": "", "title": "/* iComment: Bugs or Bad Comments?*/"}, {"link": "", "title": "Are faults localizable?"}, {"link": "/document/6227176", "title": "Identifying linux bug fixing patches"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "A survey of software fault localization"}, {"link": "", "title": "Relink: recovering links between bugs and changes"}, {"link": "/document/6227206", "title": "Generating range fixes for software configuration"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "", "title": "An empirical study on configuration errors in commercial and open source systems"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "/document/4812166", "title": "The real cost of software errors"}, {"link": "", "title": "Detecting API documentation errors"}, {"link": "", "title": "Mining API mapping for language migration"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194637"}
{"ref": [{"link": "", "title": "World Commission on environment and development: our common future"}, {"link": "", "title": "Social sustainability: towards some definitions. Hawke Research Institute, University of South Australia"}, {"link": "", "title": "Sustainable development and ict interpreted in a natural science context: The resulting research questions for the social sciences"}, {"link": "", "title": "Computing Research for Sustainability"}, {"link": "", "title": "Human values and corporate actions propensity: Examining the behavioural roots of societal sustainability"}, {"link": "", "title": "The motivation sequence, the motivation hub, and the motivation core"}, {"link": "", "title": "Do categories have politics? the language/action perspective reconsidered"}, {"link": "", "title": "The mechanisms of value transfer in design meetings"}, {"link": "", "title": "Value-sensitive design"}, {"link": "", "title": "Bias in computer systems"}, {"link": "", "title": "Computers and democracy: A Scandinavian challenge. Gower Pub Co"}, {"link": "", "title": "A value sensitive action-reflection model: evolving a co-design space with stakeholder and designer prompts"}, {"link": "", "title": "Participatory design: the third space in hci"}, {"link": "", "title": "Value sensitive design and information systems"}, {"link": "", "title": "Semiotics, compassion and value-centered design"}, {"link": "", "title": "Value-based software engineering: reinventing"}, {"link": "", "title": "A case study on value-based requirements tracing"}, {"link": "", "title": "Conceptual modelling and telos 1"}, {"link": "", "title": "A domain specific language for contextual design"}, {"link": "", "title": "Contextual design: defining customer-centered systems"}, {"link": "", "title": "An approach to early evaluation of informational privacy requirements"}, {"link": "", "title": "The architecture tradeoff analysis method"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203000"}
{"ref": [{"link": "/document/1201245", "title": "Problems and Programmers: an educational software engineering card game"}, {"link": "/document/4685671", "title": "Games-Based Requirements Engineering Training: An: Initial Experience Report"}, {"link": "", "title": "Teaching Modeling Workshop on Software Process Simulation and Modeling St"}, {"link": "", "title": "A cultura da educacdo"}, {"link": "", "title": "implementation from civil engineering"}, {"link": "", "title": "Um Jogo para o Ensino de Engenharia de Software Centrado na Perspectiva de Evolucdo"}, {"link": "", "title": "Pedagogia da autonomia: saberes necessarios a pratica docente"}, {"link": "", "title": "Organization of mental activity and effectiveness of Soviet Psychology"}, {"link": "", "title": "GTS. Wiki of Software Transparency Group"}, {"link": "", "title": "SimVBSE: Developing a Game for Value-Based Software Engineering"}, {"link": "", "title": "Software Transparency"}, {"link": "", "title": "Exploring i* Characteristics that Support Software Transparency"}, {"link": "", "title": "A Case Study to Evaluate Use of i*\u2019 for Transparent Pedagogy"}, {"link": "", "title": "Incorporando Transparencia na Pedagogia atraves do Uso de Jogos para Ensino"}, {"link": "", "title": "Escola e didatica desenvolvimental: seu campo conceitual na tradicao da teoria historico-cultural"}, {"link": "", "title": "Galperin: implicacoes educacionais da teoria de formacao das acoes mentais por estagios"}, {"link": "", "title": "Teaching Software Engineering with SimulES-W"}, {"link": "", "title": "PnP Problems and Programmers"}, {"link": "/document/4685657", "title": "Requriments Engineering Education in the 21st Century, an Experimental Learning Apporach"}, {"link": "", "title": "Using a Game ti introduce Lghtweiht Reuriments Engineering"}, {"link": "", "title": "Gameplay to Introduce and Reinforce Requriments Engineering Practices"}, {"link": "", "title": "Software Engineering Simulation by Animated Models (SESAM) - Stuttgart-Germany"}, {"link": "", "title": "Uma Abordagam para Transparencia Pedagogica usando Aprendizagem Baseda em Jogos"}, {"link": "", "title": "Chapter: Software Engineering Teaching Through Collaborative Game"}, {"link": "", "title": "Retroalimentacdo Evolutiva num Jogo para Ensino na Engenharia de Software"}, {"link": "", "title": "Software Transparency"}, {"link": "", "title": "Modeling Strategic Relationship for Process Reengineering"}, {"link": "", "title": "Fun and games: a new software engineering course"}, {"link": "", "title": "Ensinando Construcao de Software Aplicada a Sistemas de Informacao do Mundo Real"}, {"link": "", "title": "Using game-oriented projects for teaching and learning software engineering"}, {"link": "", "title": "Teaching Softwe Project Management using Simulations"}, {"link": "", "title": "SimVBSE: Developing a game for value-based software engineering"}, {"link": "", "title": "Application and Appreciation: Changing Course Structtu-e to Change Student Attitudes"}, {"link": "", "title": "Making Winner for Both Education and search: Verification and Validation Process Improvment Pratice in a Software Engineering Course"}, {"link": "", "title": "Teaching software engineering using globally distributed projects: the DOSE course"}, {"link": "/document/6595234", "title": "Teaching advanced software design in team-based project course"}, {"link": "/document/6816775", "title": "Industrial case studin graduate requirements engineering courses: The impact on student motivation"}, {"link": "", "title": "An experimentalard gamer teaching are enging processes"}, {"link": "", "title": "A systematic literature review of empirical evidence on computer games and serious games"}, {"link": "", "title": "Uma Abordagem para Transparencia Pedagogica usando Aperndizagem Baseada em Jogos"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202984"}
{"ref": [{"link": "/document/4221631", "title": "The current state and future of search based software engineering"}, {"link": "", "title": "Evaluating improvements to a meta-heuristic search for constrained interaction testing"}, {"link": "", "title": "Dynamic adaptive search based software engineering"}, {"link": "", "title": "Hyper-heuristics: A survey of the state of the art"}, {"link": "/document/5210118", "title": "A systematic review of the application and empirical investigation of search-based test-case generation"}, {"link": "", "title": "Search based software engineering: Trends, techniques and applications"}, {"link": "", "title": "A survey on search-based software design"}, {"link": "/document/6823132", "title": "Bypassing the combinatorial explosion: Using similarity to generate and prioritize t-wise test configurations for software product lines"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "/document/1201186", "title": "Constructing test suites for interaction testing"}, {"link": "", "title": "Metaheuristics and the Search for Covering and Packing Arrays"}, {"link": "", "title": "New optimization heuristics \u2013 the great deluge algorithm and the record-to-record travel"}, {"link": "", "title": "Upper bounds for covering arrays by tabu search"}, {"link": "", "title": "One-test-at-a-time heuristic search for interaction test suites"}, {"link": "/document/605761", "title": "The AETG system: an approach to testing based on combinatorial design"}, {"link": "", "title": "IPOG-IPOG-D: efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "Constraint models for the covering test problem"}, {"link": "", "title": "In-parameter-order: a test generation strategy for pairwise testing"}, {"link": "", "title": "A formal logic approach to constrained combinatorial testing"}, {"link": "", "title": "A heuristic approach for constructing ternary covering arrays using trinomial coefficients"}, {"link": "", "title": "Using binary decision diagrams for combinatorial test design"}, {"link": "", "title": "Covering array tables"}, {"link": "", "title": "Combinatorial interaction testing with CITLAB"}, {"link": "", "title": "New bounds for binary covering arrays using simulated annealing"}, {"link": "/document/5033175", "title": "An improved metaheuristic search for constrained interaction testing"}, {"link": "", "title": "Towards a benchmark and a comparison framework for combinatorial interaction testing of software product lines"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": "Efficiency and early fault detection with lower and higher strength combinatorial interaction testing"}, {"link": "", "title": "Pairwise testing in real world"}, {"link": "", "title": "Interaction testing of highly-configurable systems in the presence of constraints"}, {"link": "", "title": "Reinforcement Learning: An Introduction"}, {"link": "", "title": "Automating test case generation for the new generation mission software system"}, {"link": "", "title": "On the state of strength-three covering arrays"}, {"link": "/document/1251061", "title": "Augmenting simulated annealing to build interaction test suites"}, {"link": "/document/4564473", "title": "Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy approach"}, {"link": "", "title": "Pseudo-exhaustive testing for software"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Post-optimization: Necessity analysis for combinatorial ar-rays"}, {"link": "", "title": "T-wise combinatorial interaction test suites construction based on coverage inheritance"}, {"link": "", "title": "EC2 (Elastic Compute Cloud)"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194604"}
{"ref": [{"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "How do software engineers understand code changes?: An exploratory study in industry"}, {"link": "/document/6148202", "title": "Con-temporary peer review in action: Lessons from open source development"}, {"link": "", "title": "Non-essential changes in version histories"}, {"link": "/document/6112738", "title": "How we refactor, and how we know it"}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Two case studies of open source software development: Apache and mozilla"}, {"link": "", "title": "Peer review on open source software projects: Parameters, statistical models, and theory"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": ""}, {"link": "", "title": "C# language specification"}, {"link": "", "title": "Diffusion of innovations"}, {"link": "", "title": "The design of bug fixes"}, {"link": "", "title": "Measuring nominal scale agreement among many raters"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "Extracting and representing cross-language dependencies in diverse software systems"}, {"link": "", "title": "How do software engineers understand code changes?: an exploratory study in industry"}, {"link": "", "title": "Hey! are you committing tangled changes?"}, {"link": "", "title": "Chianti: A tool for change impact analysis of java programs"}, {"link": "", "title": "Lsdiff: A program differencing tool to identify systematic structural differences"}, {"link": "/document/1342719", "title": "A differencing algorithm for object-oriented programs"}, {"link": "", "title": "Interactive code review for systematic changes"}, {"link": "", "title": "Automatically documenting program changes"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Differential static analysis: Opportunities, applications, and challenges"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194568"}
{"ref": [{"link": "", "title": "The relevance of software documentation, tools and technologies: A survey"}, {"link": "", "title": "Six learning barriers in end-user programming systems"}, {"link": "", "title": "A survey of documentation practice within corrective maintenance"}, {"link": "", "title": "A study of the documentation essential to software maintenance"}, {"link": "/document/1241364", "title": "How software engineers use documentation: the state of the practice"}, {"link": "", "title": "On the relationship between comment update practices and software bugs"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Improving topic model source code summarization"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "", "title": "Code fragment summarization"}, {"link": "", "title": "Automatic quality assessment of source code comments: The javadocminer"}, {"link": "/document/6613836", "title": "Quality analysis of source code comments"}, {"link": "", "title": "An empirical study of the textual similarity between source code and source code summaries"}, {"link": "/document/6227187", "title": "Asking and answering questions about unfamiliar apis: An exploratory study"}, {"link": "/document/4497212", "title": "Asking and answering questions during a programming change task"}, {"link": "", "title": "Archetypal source code searches: a survey of software developers and maintainers"}, {"link": "/document/6651309", "title": "A fast and efficient semantic short text similarity metric"}, {"link": "/document/1209005", "title": "An approach for measuring semantic similarity between words using multiple information sources"}, {"link": "", "title": "Wordnet: A lexical database for english"}, {"link": "", "title": "Integrating natural language and program structure information to improve software search and exploration"}, {"link": "", "title": "Automatically capturing source code context of nl-queries for software maintenance and reuse"}, {"link": "", "title": "Software reflexion models: Bridging the gap between source and high-level models"}, {"link": "", "title": "Document-topic hierarchies from document graphs"}, {"link": "", "title": "Similarity flooding: a versatile graph matching algorithm and its application to schema matching"}, {"link": "", "title": "Graph similarity scoring and matching"}, {"link": "/document/6613829", "title": "Evaluating source code summarization techniques: Replication and expansion"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203110"}
{"ref": [{"link": "", "title": "Managing Multiple Feature Models: Foundations, Language and Applications"}, {"link": "", "title": "FORCE: A Fast and Easy-to-Implement Variable-Ordering Heuristic"}, {"link": "", "title": "Type Safety for Feature-Oriented Product Lines"}, {"link": "", "title": "Strategies for Product-Line Verification: Case Studies and Experiments"}, {"link": "", "title": "Automated Analysis of Feature Models 20 Years Later: A Literature Review"}, {"link": "", "title": "Feature-to-Code Mapping in Two Large Product Lines"}, {"link": "", "title": "Feature-to-Code Mapping in Two Large Product Lines"}, {"link": "/document/6572787", "title": "A Study of Variability Models and Languages in the Systems Software Domain"}, {"link": "", "title": "Logic Minimization Algorithms for VLSI Synthesis"}, {"link": "", "title": "Symbolic Boolean Manipulation with Ordered Binary-Decision Diagrams"}, {"link": "", "title": "The Complexity of Boolean Formula Minimization"}, {"link": "/document/6389685", "title": "Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and their Application to LTL Model Checking"}, {"link": "", "title": "Symbolic Model Checking of Software Product Lines"}, {"link": "", "title": "Verification of Synchronous Sequential Machines Based on Symbolic Execution"}, {"link": "", "title": "Two-level Logic Minimization"}, {"link": "", "title": "Mapping Features to Models: A Template Approach Based on Superimposed Variants"}, {"link": "/document/4339252", "title": "Feature Diagrams and Logics: There and Back Again"}, {"link": "", "title": "Tableau Methods for Classical Propositional Logic"}, {"link": "", "title": "A knowledge compilation map"}, {"link": "", "title": "Fitting the Pieces Together: A Machine-Checked Model of Safe Composition"}, {"link": "", "title": "A Robust Approach for Variability Extraction from the Linux Build System"}, {"link": "", "title": "Minimization of Boolean functions"}, {"link": "", "title": "Fundamental Nonmodularity in Electronic Mail"}, {"link": "", "title": "Minimization for Generalized Boolean Formulas"}, {"link": "", "title": "On Compiling System Models for Faster and More Scalable Diagnosis"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "Type Checking Annotation-based Product Lines"}, {"link": "", "title": "Variability-aware Parsing in the Presence of Lexical Macros and Conditional Compilation"}, {"link": "", "title": "Toward Variability-Aware Testing"}, {"link": "", "title": "Model Checking of Domain Artifacts in Product Line Engineering"}, {"link": "", "title": "Redundancy in logic i: {CNF} propositional formulae"}, {"link": "", "title": "Scalable Analysis of Variable Software"}, {"link": "", "title": "Efficient Reasoning Techniques for Large Scale Feature Models"}, {"link": "", "title": "S.P.L.O.T.: Software Product Lines Online Tools"}, {"link": "", "title": "SAT-based Analysis of Feature Models is Easy"}, {"link": "", "title": "Efficient Compilation Techniques for Large Scale Feature Models"}, {"link": "", "title": "Mining Configuration Constraints: Static Analyses and Empirical Results"}, {"link": "", "title": "The Linux Kernel: A Case Study of Build System Variability"}, {"link": "/document/6693103", "title": "Measuring the Structural Complexity of Feature Models"}, {"link": "", "title": "The Problem of Simplifying Truth Functions"}, {"link": "", "title": "A Comparison of Decision Modeling Approaches in Product Lines"}, {"link": "", "title": "Reverse Engineering Feature Models"}, {"link": "/document/6227196", "title": "Predicting Performance via Automated Feature-Interaction Detection"}, {"link": "", "title": "Scalable Prediction of Non-functional Properties in Software Product Lines: Footprint and Memory Consumption"}, {"link": "", "title": "Family-Based Performance Measurement"}, {"link": "", "title": "Static analysis of variability in system software: The 90,000 #ifdefs issue"}, {"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "/document/5070526", "title": "Reasoning About Edits to Feature Models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194572"}
{"ref": [{"link": "", "title": "CREST-automatic test generation tool for C"}, {"link": "", "title": "Software model checking in practice: An industrial case study"}, {"link": "", "title": "Multithreaded Java program test generation"}, {"link": "", "title": "Verisoft: A tool for the automatic analysis of concurrent reactive software"}, {"link": "", "title": "Dynamic detection of atomic-set serializability violations"}, {"link": "", "title": "The Spin Model Checker"}, {"link": "", "title": "A practical method for verifying event-driven software"}, {"link": "", "title": "Concolic testing of the multi-sector read operation for flash storage platform software"}, {"link": "", "title": "Industrial application of concolic testing on embedded software: Case studies"}, {"link": "", "title": "Industrial application of concolic testing approach: A case study on libexif by using CREST-BV and KLE E"}, {"link": "", "title": "Automated unit testing of large industrial embedded software using concolic testing"}, {"link": "", "title": "Timing analysis of interrupt-driven programs under context-bounds"}, {"link": "", "title": "A platform for search-based testing of concurrent software"}, {"link": "", "title": "KISS: Keep It Simple and Sequential"}, {"link": "", "title": "Random testing of interrupt-driven software"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Electronics Purchasing Strategies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202947"}
{"ref": [{"link": "", "title": "Obtaining Ground-truth Software Architectures"}, {"link": "/document/1401930", "title": "Information-Theoretic Software Clustering"}, {"link": "", "title": "Investigating the use of lexical information for software system clustering"}, {"link": "/document/6100123", "title": "Enhancing Architectural Recovery Using Concerns"}, {"link": "", "title": "Feature-gathering Dependency-based Software Clustering using Dedication and Modularity"}, {"link": "", "title": "Bunch: A Clustering Tool for the Recovery and Maintenance of Software System Structures"}, {"link": "", "title": "ACDC: An Algorithm for Comprehension-Driven Clustering"}, {"link": "/document/4339232", "title": "Hierarchical Clustering for Software Architecture Recovery"}, {"link": "/document/1510147", "title": "Comparison of Clustering Algorithms in the Context of Software Evolution"}, {"link": "", "title": "A comparative analysis of software architecture recovery techniques"}, {"link": "", "title": "The Effect of Call Graph Construction Algorithms for Object-Oriented Programs on Automatic Clustering"}, {"link": "", "title": "Focus: A Light-Weight, Incremental Approach to Software Architecture Recovery and Evolution"}, {"link": "", "title": "Comparative Study of Clustering Algorithms and Abstract Representations for Software Remodularization"}, {"link": "", "title": "LIMBO: Scalable Clustering of Categorical Data"}, {"link": "/document/1281402", "title": "The Weighted Combined Algorithm: A Linkage Algorithm for Software Clustering"}, {"link": "", "title": "ART: an Architectural Reverse Engineering Environment"}, {"link": "", "title": "A Clich-Based Environment to Support Architectural Reverse Engineering"}, {"link": "/document/558904", "title": "Augmenting Pattern-Based Architectural Recovery with Flow Analysis: Mosaic-A Case Study"}, {"link": "", "title": "Linux As a Case Study: Its Extracted Software Architecture"}, {"link": "", "title": "Software Clustering Based on Dynamic Dependencies"}, {"link": "", "title": "A Case Study in Architectural Analysis: The Evolution of the Modern Web Browser"}, {"link": "", "title": "Lattix LDM"}, {"link": "", "title": "Structure101"}, {"link": "/document/6608678", "title": "Generating Precise Dependencies For Large Software"}, {"link": "", "title": "Extracting Java Library Subsets for Deployment on Embedded Systems"}, {"link": "/document/693283", "title": "Using Automatic Clustering to Produce High-Level System Organizations of Source Code"}, {"link": "", "title": "An Effectiveness Measure for Software Clustering Algorithms"}, {"link": "", "title": "An Empirical Study of Architectural Change in Open-Source Software Systems"}, {"link": "", "title": "Architecture-based Runtime Software Evolution"}, {"link": "", "title": "ADLs and Dynamic Architecture Changes"}, {"link": "", "title": "An empirical study of architectural change and decay in open-source software systems"}, {"link": "/document/1235432", "title": "A Heuristic Approach to Solving the Software Clustering Problem"}, {"link": "", "title": "Universal Principles of Design"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202951"}
{"ref": [{"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Is Mutation an Appropriate Tool for Testing Experiments?"}, {"link": "", "title": "Software error analysis: A real case study involving real faults and mutations"}, {"link": "/document/6298894", "title": "An empirical evaluation of mutation testing for improving the test quality of safety-critical software"}, {"link": "", "title": "On guiding the augmentation of an automated test suite via mutation analysis"}, {"link": "", "title": "An Experimental Evaluation of Data Flow and Mutation Testing"}, {"link": "", "title": "All-Uses Versus Mutation Testing: An Experimental Comparison of Effectiveness"}, {"link": "", "title": "Coverage is not strongly correlated with test suite effectiveness"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "/document/5487526", "title": "An Analysis and Survey of the Development of Mutation Testing"}, {"link": "", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "", "title": "Automatic mutation test case generation via dynamic symbolic execution"}, {"link": "", "title": "Strong higher order mutation-based test data generation"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}, {"link": "", "title": "Reducing the Cost of Mutation Testing: An Empirical Study"}, {"link": "", "title": "An Empirical Evaluation of the First and Second Order Mutation Testing Strategies"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}, {"link": "", "title": "Efficient mutation analysis by propagating and partitioning infected execution states"}, {"link": "", "title": "Two Notions of Correctness and Their Relation to Testing"}, {"link": "", "title": "A Study of Equivalent and Stubborn Mutation Operators Using Human Analysis of Equivalence"}, {"link": "", "title": "Using Compiler Optimization Techniques to Detect Equivalent Mutants"}, {"link": "", "title": "Heuristics for Determining Equivalence of Program Mutations"}, {"link": "", "title": "On Mutation"}, {"link": "", "title": "Detecting Equivalent Mutants and the Feasible Path Problem"}, {"link": "", "title": "Automatically Detecting Equivalent Mutants and Infeasible Paths"}, {"link": "", "title": "Software Fault Injection: Inoculating Programs Against Errors"}, {"link": "", "title": "Using Program Slicing to Assist in the Detection of Equivalent Mutants"}, {"link": "", "title": "The relationship between program dependence and mutation analysis"}, {"link": "", "title": "How to Overcome the Equivalent Mutant Problem and Achieve Tailored Selective Mutation Using Co-evolution"}, {"link": "/document/4976386", "title": "The Impact of Equivalent Mutants"}, {"link": "", "title": "Efficient Mutation Testing by Checking Invariant Violations"}, {"link": "", "title": "Covering and uncovering equivalent mutants"}, {"link": "", "title": "(Un-)Covering Equivalent Mutants"}, {"link": "", "title": "Using constraints for equivalent mutant detection"}, {"link": "/document/6200172", "title": "Isolating first order equivalent mutants via second order mutation"}, {"link": "", "title": "Employing second-order mutation for isolating first-order equivalent mutants"}, {"link": "/document/6825658", "title": "Using data flow patterns for equivalent mutant detection"}, {"link": "", "title": "Mitigating the effects of equivalent mutants with mutant classification strategies"}, {"link": "", "title": "An Experimental Determination of Sufficient Mutant Operators"}, {"link": "", "title": "Sufficient Mutation Operators for Measuring Test Effectiveness"}, {"link": "", "title": "Mutation Analysis Using Mutant Schemata"}, {"link": "", "title": "MuJava: An Automated Class Mutation System"}, {"link": "", "title": "Evaluating mutation testing alternatives: A collateral experiment"}, {"link": "", "title": "Establishing theoretical minimal sets of mutants"}, {"link": "", "title": "Better predicate testing"}, {"link": "", "title": "Improving logic-based testing"}, {"link": "/document/6405400", "title": "Using non-redundant mutation operators and test suite prioritization to achieve efficient and scalable mutation analysis"}, {"link": "/document/536956", "title": "Theory of fault-based predicate testing for computer programs"}, {"link": "/document/6613487", "title": "Overcoming the equivalent mutant problem: A systematic literature review and a comparative experiment of second order mutation"}, {"link": "/document/4637557", "title": "Constructing Subtle Faults Using Higher Order Mutation Testing"}, {"link": "", "title": "Efficient multi-objective higher order mutation testing with genetic programming"}, {"link": "", "title": "Angels and monsters: An empirical investigation of potential test effectiveness and efficiency improvement from strongly subsuming higher order mutation"}, {"link": "/document/1703390", "title": "Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria"}, {"link": "/document/4670308", "title": "MILU: A Customizable, Runtime-Optimized Higher Order Mutation Testing Tool for the Full C Language"}, {"link": "", "title": "Fast location of similar code fragments using semantic \u2018juice\u2019"}, {"link": "/document/6823882", "title": "Experimental evaluation of sdl and one-op mutation for c"}, {"link": "/document/6825640", "title": "An empirical comparison of combinatorial and random testing"}, {"link": "", "title": "Experimentation in Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194639"}
{"ref": [{"link": "", "title": "The Secret Life of Bugs: Going Past the Errors and Omissions in Software Repositories"}, {"link": "", "title": "Two Case Studies of Open Source Software Development: Apache and Mozilla"}, {"link": "/document/5071352", "title": "Understanding the Process of Participating in Open Source Communities"}, {"link": "", "title": "Users of Open Source Software: How do They Get Help?"}, {"link": "", "title": "A Case Study of Open Source Software Development: the Apache Server"}, {"link": "", "title": "Communication, Collaboration, and Bugs: the Social Nature of Issue Tracking in Small, Collocated Teams"}, {"link": "", "title": "Software Language Engineering: Creating Domain-Specific Languages Using Metamodels"}, {"link": "", "title": "Model-Driven Software Engineering in Practice"}, {"link": "", "title": "Governance Tool"}, {"link": "", "title": "Splitting the Organization and Integrating the Code: Conway's Law Revisited"}, {"link": "", "title": "Coordination in Software Development"}, {"link": "", "title": "On the Criteria to be Used in Decomposing Systems into Modules"}, {"link": "", "title": "Coordination of Free/Libre Open Source Software Development"}, {"link": "", "title": "The Governance of Free/Open Source Software Projects: Monolithic, Multidimensional, or Configurational?"}, {"link": "", "title": "Software Development Governance and Its Concerns"}, {"link": "", "title": "Towards Governance Schemes for Distributed Software Development Projects"}, {"link": "", "title": "Strategies for Information Technology Governance. IGI Publishing"}, {"link": "", "title": "Attempting to Define IT Governance: Wisdom or Folly?"}, {"link": "", "title": "Understanding Broadcast Based Peer Review on Open Source Software Projects"}, {"link": "", "title": "Communication in Open Source Software Development Mailing Lists"}, {"link": "", "title": "Latent Social Structure in Open Source Projects Categories and Subject Descriptors"}, {"link": "", "title": "Visualizing Collaboration and Influence in the Open-Source Software Community"}, {"link": "", "title": "CrowdWeaver: Visually Managing Complex Crowd Work"}, {"link": "", "title": "Business Process Model and Notation (BPMN) Version 2.0"}, {"link": "", "title": "Using Little-JIL to Coordinate Agents in Software Engineering"}, {"link": "", "title": "Integration of Collaboration and Interaction Analysis Mechanisms in a Concern-based Architecture for Groupware Systems"}, {"link": "", "title": "Redistributing Leadership in Online Creative Collaboration"}, {"link": "", "title": "Modeling Collaboration Protocols for Collaborative Modeling Tools: Experiences and Applications"}, {"link": "", "title": "Enabling the Collaborative Definition of DSMLs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203002"}
{"ref": [{"link": "/document/1185953", "title": "Netpro: An Innovative Approach to Network Project Based Learning"}, {"link": "/document/6182725", "title": "Enhancing Project-Based Learning in Software Engineering Lab Teaching Through an E-Portfolio Approach"}, {"link": "/document/6606655", "title": "Authentic assessment in Software Engineering education based on PBL principles a case study in the telecom market"}, {"link": "/document/6816789", "title": "The impacts of personal characteristic on educational effectiveness in controlled-project based learning on software intensive systems development"}, {"link": "", "title": "Competition-Based Learning"}, {"link": "/document/4084626", "title": "Crazy Car Race Contest: Multicourse Design Curricula in Embedded System Design"}, {"link": "", "title": "Using game theory and Competition-based Learning to stimulate student motivation and performance"}, {"link": "", "title": "Competition Based Online Social Learning"}, {"link": "/document/6595235", "title": "A competitive-collaborative approach for introducing software engineering in a CS2 class"}, {"link": "/document/1356098", "title": "Theory and practice behind the course designing enterprise wide IT systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202986"}
{"ref": [{"link": "", "title": "Advanced Placement Computer Science A Course Home Page"}, {"link": "", "title": "Catcher: A System for Software Testing Competitions"}, {"link": "", "title": "Programming Trainings and Informatics Teaching Through Online Contests"}, {"link": "", "title": "Facebook Hacker Cup website"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Google Code Jam website"}, {"link": "", "title": "Imagine Cup website"}, {"link": "", "title": "Using Storytelling to Motivate Programming"}, {"link": "", "title": "Official ACM-ICPC website"}, {"link": "", "title": "Secondary School Students Programming Using Distance Learning: a Case Study"}, {"link": "", "title": "White Box Test Generation for. NET"}, {"link": "", "title": "Teaching and Learning Programming and Software Engineering via Interactive Gaming"}, {"link": "/document/6693144", "title": "Pex4Fun: A Web-Based Environment for Educational Gaming via Automated Test Generation"}, {"link": "", "title": "Constructing Coding Duels in Pex4Fun and Code Hunt"}, {"link": "", "title": "Code Hunt: Searching for Secret Code for Fun"}, {"link": "", "title": "TopCoder\u2122 website"}, {"link": "", "title": "Competition-Style Programming Problems for Computer Science Unplugged Activities"}, {"link": "", "title": "Fitness-Guided Path Exploration in Dynamic Symbolic Execution"}, {"link": "", "title": "Educational Software Engineering: Where Software Engineering, Education, and Gaming Meet"}, {"link": "", "title": "Computing Degree and Enrollment Trends from the 2011-2012 CRA Taulbee Survey"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202990"}
{"ref": [{"link": "", "title": "Harnessing cloud computing with Galaxy Cloud"}, {"link": "", "title": "Federated repositories of X-ray diffraction images"}, {"link": "", "title": "A view of cloud computing"}, {"link": "", "title": "Nimrod/G: An Architecture for a Resource Management and Scheduling System in a Global Computational Grid"}, {"link": "", "title": "Chorus"}, {"link": "", "title": "VIVO: Enabling National Networking of Scientists"}, {"link": "", "title": "Scientific workflow management and the Kepler system"}, {"link": "", "title": "Operation of the Australian Store. Synchrotron for macromolecular crystallography"}, {"link": "", "title": "Taverna: Lessons in Creating a Workflow Environment for the Life Sciences"}, {"link": "", "title": "HRMC: Hybrid Reverse Monte Carlo method with silicon and carbon potentials"}, {"link": "", "title": ""}, {"link": "", "title": "The National eResearch Collaboration Tools and Resources (NeCTAR) Project"}, {"link": "", "title": "Parameterised architectural patterns for providing cloud service fault tolerance with accurate costings"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203041"}
{"ref": [{"link": "", "title": "Is there a best quality metric for graph clusters?"}, {"link": "", "title": "Group formation in large social networks: membership, growth, and evolution"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "", "title": "Latent social structure in open source projects"}, {"link": "/document/5069475", "title": "The promises and perils of mining git"}, {"link": "", "title": "Experiments on graph clustering algorithms"}, {"link": "/document/6205767", "title": "Coordination Breakdowns and Their Impact on Development Productivity and Software Failures"}, {"link": "", "title": "Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity"}, {"link": "", "title": "How a good software practice thwarts collaboration: the multiple roles of apis in software development"}, {"link": "/document/1231220", "title": "Process-centric analytical processing of version control data"}, {"link": "", "title": "A Spin-Glass Model for Semi-Supervised Community Detection"}, {"link": "", "title": "A model-based method for organizing tasks in product development"}, {"link": "", "title": "Community detection in graphs"}, {"link": "", "title": "Resolution limit in community detection"}, {"link": "", "title": "The Markov Chain Simulation Method for Generating Connected Power Law Random Graphs"}, {"link": "", "title": "Architecting in software ecosystems: interface translucence as an enabler for scalable collaboration"}, {"link": "", "title": "Mining version histories to verify the learning process of Legitimate Peripheral Participants"}, {"link": "", "title": "Mining and visualizing developer networks from version control systems"}, {"link": "", "title": "On clusterings: Good, bad and spectral"}, {"link": "", "title": "Finding Statistically Significant Communities in Networks"}, {"link": "", "title": "Empirical Comparison of Algorithms for Network Community Detection"}, {"link": "", "title": "A technique for the measurement of attitudes"}, {"link": "", "title": "Applying Social Network Analysis Techniques to Community-driven Libre Software Projects"}, {"link": "", "title": "Applying Social Network Analysis to the Information in CVS Repositories"}, {"link": "", "title": "What is coordination theory and how can it help design cooperative work systems?"}, {"link": "", "title": "Socio-technical developer networks: should we trust our measurements?"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "The influence of organizational structure on software quality: an empirical case study"}, {"link": "", "title": "Finding and evaluating community structure in networks"}, {"link": "", "title": "How the evolution of emerging collaborations relates to code changes: an empirical study"}, {"link": "", "title": "Can developer-module networks predict failures?"}, {"link": "", "title": "Developer belief vs. reality: The case of the commit size distribution"}, {"link": "", "title": "Analysis of virtual communities supporting oss projects using social network analysis"}, {"link": "", "title": "Do too many cooks spoil the broth? using the number of developers to enhance defect prediction models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194606"}
{"ref": [{"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "Software Abstractions: Logic, language, and analysis"}, {"link": "", "title": "Kodkod: A relational model finder"}, {"link": "", "title": "Syntax-guided synthesis"}, {"link": "", "title": "Alloy* Home Page"}, {"link": "", "title": "Analysis of invariants for efficient bounded verification"}, {"link": "", "title": "A relational framework for bounded program verification"}, {"link": "/document/989787", "title": "Testera: A novel framework for automated testing of java programs"}, {"link": "", "title": "Parallel bounded analysis in code with rich invariants by refinement of field bounds"}, {"link": "", "title": "Unifying execution of imperative and declarative code"}, {"link": "", "title": "Falling back on executable specifications"}, {"link": "", "title": "Logic training through algorithmic problem solving"}, {"link": "", "title": "Turan's graph theorem"}, {"link": "", "title": "A Constraint Solver for Software Engineering: Finding Models and Cores of Large Relational Specifications"}, {"link": "", "title": "Verification and change-impact analysis of access-control pelicies"}, {"link": "", "title": "Alloy*: A Higher-Order Relational Constraint Solver"}, {"link": "", "title": "On the evolution of random graphs"}, {"link": "", "title": "aRby-An Embedding of Alloy in Ruby"}, {"link": "", "title": "Growing solver-aided languages with rosette"}, {"link": "", "title": "SyGuS github repository"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Syntax-guided synthesis competition report"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Efficient e-matching for smt solvers"}, {"link": "", "title": "Program verification as satisfiability modulo theories"}, {"link": "", "title": "Complete instantiation for quantified formulas in satisfiabiliby modulo theories"}, {"link": "", "title": "Boogie: A modular reusable verifier for object-oriented programs"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": "Synthesizing data structure manipulations from storyboards"}, {"link": "", "title": "Program extrapolation with Jennisys"}, {"link": "", "title": "Comfusy: A tool for complete functional synthesis"}, {"link": "", "title": "Path-based inductive synthesis for program inversion"}, {"link": "", "title": "Automated feedback generation for introductory programming assignments"}, {"link": "", "title": "Spreadsheet data manipulation using examples"}, {"link": "", "title": "Liquid types"}, {"link": "", "title": "Hmc: Verifying functional programs using abstract interpreters"}, {"link": "", "title": "Co-induction simply: Automatic co-inductive proofs in a program verifier"}, {"link": "", "title": "Constraints as control"}, {"link": "", "title": "A language for automatically enforcing privacy policies"}, {"link": "/document/6606569", "title": "Aluminum: principled scenario exploration through minimality"}, {"link": "", "title": "Staged evaluation of partial instances in a relational model finder"}, {"link": "", "title": "Synthesizing iterators from abstraction functions"}, {"link": "", "title": "On the simplicity of synthesizing linked data structure operations"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194610"}
{"ref": [{"link": "", "title": "Model-checking continuous-time markov chains"}, {"link": "", "title": "Approximate symbolic model checking of continuous-time markov chains"}, {"link": "/document/1205180", "title": "Model-checking algorithms for continuous-time markov chains"}, {"link": "", "title": "Model checking of probabilistic and nondeterministic systems"}, {"link": "", "title": "A tool for model-checking Markov chains"}, {"link": "", "title": "Probabilistic symbolic model checking with prism: a hybrid approach"}, {"link": "", "title": "Specification patterns for probabilistic quality properties"}, {"link": "", "title": "Towards open-world soft-ware: Issues and challenges"}, {"link": "", "title": "Software engineering for self-adaptive systems: A research roadmap"}, {"link": "", "title": "Continual verification of non-functional properties in cloud-based systems"}, {"link": "/document/5280648", "title": "Models@ run.time"}, {"link": "", "title": "Model evolution by runtime parameter adaptation"}, {"link": "", "title": "A formal approach to adaptive software: continuous assurance of non-functional requirements"}, {"link": "", "title": "Adaptive model learning for continual verification of non-functional properties"}, {"link": "/document/4515874", "title": "Performance model estimation and tracking using optimal filters"}, {"link": "", "title": "Change-point detection for black-box services"}, {"link": "", "title": "Using observation ageing to improve markovian model learning in qos engineering"}, {"link": "", "title": "Lightweight adaptive filtering for dtmc learning: supplementary material"}, {"link": "", "title": "Worldcup98 web logs"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "Mathematical Statistics"}, {"link": "", "title": "Stochastic processes"}, {"link": "", "title": "Statistical inference about markov chains"}, {"link": "", "title": "Statistical inference regarding markov chain models"}, {"link": "", "title": "Survey of reliability and availability prediction methods from the viewpoint of software architecture"}, {"link": "/document/1702709", "title": "A user-oriented software reliability model"}, {"link": "", "title": "Reliability analysis of component-based systems with multiple failure modes"}, {"link": "", "title": "Quantitative verification: models techniques and tools"}, {"link": "", "title": "Runtime efficient probabilistic model checking"}, {"link": "", "title": "Dynamic qos management and optimization in service-based systems"}, {"link": "/document/6100064", "title": "Self-adaptive software meets control theory: A preliminary approach supporting reliability requirements"}, {"link": "", "title": "Reliability-driven dynamic binding via feedback control"}, {"link": "/document/6229785", "title": "Further steps towards efficient runtime verifi-cation: Handling probabilistic cost models"}, {"link": "", "title": "An efficient method for architecture-based reliability evaluation for evolving systems with changing pa-rameters"}, {"link": "", "title": "The Bayesian Choice: From Decision-Theoretic Foundations to Computational Implementation"}, {"link": "", "title": "Simulation Modeling and Analysis"}, {"link": "", "title": "Computer-Controlled Systems: Theory and Design"}, {"link": "", "title": "The Control Handbook"}, {"link": "", "title": "Continuous System Simulation"}, {"link": "", "title": "Lagrange Multiplier Approach to Variational Problems and Applications"}, {"link": "", "title": "Nonlinear programming"}, {"link": "", "title": "The Art of Computer Programming: Seminumerical algorithms"}, {"link": "", "title": "Monte Carlo Statistical Methods"}, {"link": "", "title": "The Analysis of Time Series: An Introduction"}, {"link": "", "title": "Automated design of self-adaptive software with control-theoretical formal guarantees"}, {"link": "", "title": "An automated approach to forecasting qos attributes based on linear and non-linear time series modeling"}, {"link": "", "title": "Mining behavior models from user-intensive web applications"}, {"link": "", "title": "An approach to forecasting qos attributes of web services based on arima and garch models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194574"}
{"ref": [{"link": "", "title": "Testing Object-Oriented Systems"}, {"link": "/document/815326", "title": "A critique of software defect prediction models"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "/document/4343764", "title": "Using software dependencies and churn metrics to predict field failures: An empirical case study"}, {"link": "", "title": "Where the bugs are"}, {"link": "", "title": "Predicting regression test failures using genetic algorithm-selected dynamic performance analysis metrics"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}, {"link": "", "title": "Crane: Failure prediction, change analysis and test prioritization in practice-experiences from windows"}, {"link": "/document/6497441", "title": "Assessing the cost effectiveness of fault prediction in acceptance testing"}, {"link": "", "title": "Improving the effectiveness of test suite through mining historical data"}, {"link": "", "title": "In defense of nearest-neighbor based image classification"}, {"link": "", "title": "Capturing whole-genome characteristics in short sequences using a naive bayesian classifier"}, {"link": "", "title": "Not my bug! and other reasons for software bug report reassignments"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "", "title": "Machine learning techniques for mobile intelligent systems: A study"}, {"link": "", "title": "Supervised machine learning algorithms for protein structure classification"}, {"link": "", "title": "Analysis and visualization of classifier performance: Comparison under imprecise class and cost distributions"}, {"link": "", "title": "Comparison of classifier methods: A case study in handwritten digit recognition"}, {"link": "", "title": "Approximate statistical tests for comparing supervised classification learning algorithms"}, {"link": "", "title": ""}, {"link": "", "title": "An empirical study of the naive bayes classifier"}, {"link": "", "title": "New feature list for Microsoft Dynamics AX 2012 R2"}, {"link": "/document/5128907", "title": "Learning from imbalanced data"}, {"link": "/document/5316024", "title": "Predicting defects with program dependencies"}, {"link": "", "title": "Mining versions histories to guide software changes"}, {"link": "/document/5645566", "title": "Predicting re-opened bugs: A case study on the eclipse project"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202949"}
{"ref": [{"link": "", "title": "Do more people make the code more defect prone?: Social network analysis in oss projects"}, {"link": "/document/799939", "title": "Building knowledge through families of experiments"}, {"link": "", "title": "Studying the impact of social interactions on software quality"}, {"link": "", "title": "Does distributed development affect software quality?: an empirical case study of windows vista"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "", "title": "Replication of experimental results in software engineering"}, {"link": "/document/6614729", "title": "Emergence of developer teams in the collaboration network"}, {"link": "", "title": "Towards reporting guidelines for experimental replications: A proposal"}, {"link": "", "title": "On the relationship between process maturity and geographic distribution: an empirical analysis of their impact on software quality"}, {"link": "", "title": "How do committees invent"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "/document/1205177", "title": "An empirical study of speed and communication in globally distributed software development"}, {"link": "/document/1553590", "title": "Experimental context classification: incentives and experience of subjects"}, {"link": "", "title": "Challenges and improvements in distributed software development: A systematic review"}, {"link": "", "title": "Reviewing 25 years of testing technique experiments"}, {"link": "", "title": "Evidence-based software engineering"}, {"link": "", "title": "redicting failures with developer networks and social network analysis"}, {"link": "", "title": "The promise repository of empirical software engineering data"}, {"link": "", "title": "The influence of organizational structure on software quality: an empirical case study"}, {"link": "/document/799955", "title": "Qualitative methods in empirical studies of software engineering"}, {"link": "", "title": "The effect of branching strategies on software quality"}, {"link": "/document/6336718", "title": "Research 2.0? Software, IEEE"}, {"link": "/document/1166920", "title": "Replicating software engineering experiments: addressing the tacit knowledge problem"}, {"link": "/document/4221632", "title": "The future of empirical methods in software engineering research"}, {"link": "", "title": "Experimentation in software engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202953"}
{"ref": [{"link": "", "title": "Command and control"}, {"link": "", "title": "Information diffusion among agents: implications for humanitarian operations"}, {"link": "", "title": "Using data against disasters: overview and synthesis of lessons learned"}, {"link": "", "title": "An adaptive virtual simulation and real-time emergency response system"}, {"link": "/document/5068819", "title": "Dynamic composition of web applications in human-centered processes"}, {"link": "", "title": "Impact of service orientation at the business level"}, {"link": "", "title": "Case study in disaster relief: a descriptive analysis of agency partnerships in the aftermath of the January 12th, 2010 Haitian earthquake"}, {"link": "", "title": "Introduction to International Disaster Management"}, {"link": "", "title": "Information gaps in relief, recovery, and reconstruction in the aftermath of natural disasters"}, {"link": "", "title": "SOA: Principles of Service Design"}, {"link": "", "title": "Information sharing across multiple humanitarian organizations-a web-based information exchange platform for project reporting"}, {"link": "", "title": "Inter-Agency Standing Committee (IASC), Guidance Note on Using the Cluster Approach to Strengthen Humanitarian Response"}, {"link": "", "title": "Inter-Agency Standing Committee (IASC), Response to the humanitarian crisis in Haiti: Following the 12 January 2010 earthquake"}, {"link": "", "title": "The metropolis model: a new logic for development of crowdsourced systems"}, {"link": "", "title": "Catastrophes in Haiti and Japan"}, {"link": "", "title": "Achieving flexible and compliant processes in disaster management"}, {"link": "", "title": "A research agenda for service-oriented architecture (SOA): Maintenance and evolution of service-oriented systems"}, {"link": "", "title": "Scrambling for contact: the determinants of inter-NGO cooperation in non-Western countries"}, {"link": "", "title": "Fashion openness: applying an open source philosophy to the paradigm of fashion"}, {"link": "", "title": "Disaster management and mitigation: the telecommunications infrastructure"}, {"link": "", "title": "The GitHub revolution: why we're all in open source now"}, {"link": "", "title": "Using a workflow management system to manage emergency plans"}, {"link": "", "title": "Distributed service recovery for real-time pub/sub services on disaster management"}, {"link": "", "title": "A blackboard architecture for workflows"}, {"link": "", "title": "Visualization for software analytics"}, {"link": "", "title": "Tweetflows: flexible workflows with twitter"}, {"link": "", "title": "Integrating GI with non-GI services-showcasing interoperability in a heterogeneous service-oriented architecture"}, {"link": "/document/5068816", "title": "Software service engineering: Tenets and challenges"}, {"link": "", "title": "Using OR to adapt supply chain management best practices to humanitarian logistics"}, {"link": "", "title": "\u2018All hazards approach\u2019 to disaster management: the role of information and knowledge management, Boyd's OODA Loop, and network-centricity"}, {"link": "", "title": "Emergent organizations and networks in catastrophic environments"}, {"link": "/document/6193083", "title": "Using service-based GIS to support earthquake research and disaster response"}, {"link": "", "title": "Towards a classification of web service feature interactions"}, {"link": "", "title": "WHO, Risk Reduction and Emergency Preparedness: WHO Six-year Strategy for the Health Sector and Community Capacity Development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203004"}
{"ref": [{"link": "", "title": "Graduate employability: what do employers think and want?"}, {"link": "", "title": "Risks and risk mitigation in global software development: A tertiary study"}, {"link": "", "title": "Software Project Management: Setting the Context"}, {"link": "", "title": "Executive perceptions of the top 10 soft skills needed in today's workplace"}, {"link": "", "title": "Novice software developers, all over again"}, {"link": "", "title": "Struggles of new college graduates in their first software development job"}, {"link": "", "title": "Gaps between industry expectations and the abilities of graduates"}, {"link": "", "title": "Communication learning outcomes from software engineering professionals: a basis for teaching communication in the engineering curriculum"}, {"link": "", "title": "Supporting and structuring \u201cContributing Student Pedagogy\u201d in computer science curricula"}, {"link": "", "title": "Teaching teamwork in engineering and computer science"}, {"link": "", "title": "Analysing computer science students' teamwork role adoption in an online self-organised teamwork activity"}, {"link": "", "title": "Virtual teams: a review of current literature and directions for future research"}, {"link": "", "title": "Developing and assessing college student teamwork skills"}, {"link": "", "title": "Group learning strategies for online course"}, {"link": "", "title": "Evaluating agile principles in CS Education"}, {"link": "", "title": "The psychology of computer programming"}, {"link": "", "title": "Functional versus spontaneous roles during CSCL"}, {"link": "", "title": "Contributing student pedagogy"}, {"link": "", "title": "Can graduating students design: revisited"}, {"link": "", "title": "Collaborative Learning and Anxiety: A Phenomenographic Study of Collaborative Learning Activities"}, {"link": "/document/4287121", "title": "Best practices involving teamwork in the classroom: results from a survey of 6435 Engineering student respondents"}, {"link": "", "title": "Tools used in Global Software Engineering: A systematic mapping review"}, {"link": "/document/5420797", "title": "Collaboration tools for Global Software Engineering"}, {"link": "", "title": "SPARK, a confidential web-based template for self and peer assessment of student teamwork: benefits of evaluating across different subjects"}, {"link": "", "title": "SNAPP: A Bird'S-eye View of Temporal Participant Interaction"}, {"link": "", "title": "Social Network Analysis Used for Modelling Collaboration in Distance Learning Groups"}, {"link": "", "title": "Discourse-centric Learning Analytics"}, {"link": "", "title": "A general psychoevolutionary theory of emotion"}, {"link": "", "title": "Crowdsourcing a Word-Emotion Association Lexicon"}, {"link": "", "title": "Exploiting Sentiment Analysis to Track Emotions in Students Learning Diaries"}, {"link": "", "title": "LOCO-Analyst: A Tool for Raising Teachers' Awareness in Online Learning Environments"}, {"link": "", "title": "Using LiMS (the Learner Interaction Monitoring System) to track online learner engagement and evaluate course design"}, {"link": "", "title": "Work in progress-e-TAT: Online tool for teamwork and \u201csoft skills\u201d assessment in software engineering education"}, {"link": "", "title": "Qualitative analysis of content"}, {"link": "", "title": "A conceptual framework for teamwork measurement"}, {"link": "", "title": "Becoming a self-regulated learner: which are the key subprocesses?"}, {"link": "", "title": "Development of a structured interview for assessing student use of self-regulated learning strategies"}, {"link": "", "title": "Self-regulated, co-regulated, and socially shared regulation"}, {"link": "", "title": "Analyzing collaborative knowledge construction: multiple methods for integrated understanding"}, {"link": "", "title": "Understanding collaborative learning processes in new learning environments"}, {"link": "", "title": "Mining and Summarizing Customer Reviews"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202988"}
{"ref": [{"link": "", "title": "Inductive Teaching and Learning Methods: Definitions, Comparisons, and Research Bases"}, {"link": "", "title": "Software Engineering Body of Skills"}, {"link": "", "title": "Practicing Soft Skills in Software Engineering"}, {"link": "", "title": "Lehreranpassung: \u2018Reading\u2019 und \u2018Flexing\u2019"}, {"link": "", "title": "Freedom to learn: A view of what education might become"}, {"link": "", "title": "Radical constructivism and teaching"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge Version 3.0 - SWEBOK"}, {"link": "", "title": "CMMI for Development, Version 1.3"}, {"link": "", "title": "Best Practice Software-Engineering: Eine praxiserprobte Zusammenstellung von komponentenorientierten Konzepten, Methoden und Werkzeugen"}, {"link": "", "title": "Agility kompakt: Tipps f\u00fcr erfolgreiche Systementwicklung"}, {"link": "", "title": "Learning By Teaching: The Didactic Model LdL in University Classes"}, {"link": "", "title": "The didactic model LdL (Lernen durch Lehren) as a way of preparing students for communication in a knowledge society"}, {"link": "", "title": "Problem-based learning: An approach to medical education"}, {"link": "", "title": "Problem-based learning in higher education: Untold stories"}, {"link": "", "title": "Peer Instruction: Ten years of experience and results"}, {"link": "", "title": "Uben und Wiederholen - neu betrachtet"}, {"link": "", "title": "Uber das Ged\u00e4chtnis"}, {"link": "", "title": "Teilnehmerorientierung als didaktisches Prinzip der Erwachsenenbildung - aktuelle Bedeutungsfacetten"}, {"link": "", "title": "Didaktisches Handeln in der Erwachsenenbildung: Didaktik aus konstruktivistischer Sicht"}, {"link": "", "title": "A Multi-Perspective Framework for Evaluating Software Engineering Education by Assessing Students' Competencies: SECAT - A Software Engineering Competency Assessment Tool"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202992"}
{"ref": [{"link": "", "title": "The ant and the grasshopper: fast and accurate pointer analysis for millions of lines of code"}, {"link": "", "title": "Sound, complete and scalable path-sensitive analysis"}, {"link": "", "title": "Large-scale analysis of format string vulnerabilities in Debian Linux"}, {"link": "", "title": "Design and implementation of sparse global analyses for C-like languages"}, {"link": "", "title": "Boosting the performance of flow-sensitive points-to analysis using value flow"}, {"link": "", "title": "Static deep error checking in large system applications using Parfait"}, {"link": "", "title": "Semi-sparse flow-sensitive pointer analysis"}, {"link": "", "title": "Points-to analysis with efficient strong updates"}, {"link": "", "title": "Level by level: making flow and context-sensitive pointer analysis scalable for millions of lines of code"}, {"link": "", "title": "Flow-sensitive pointer analysis for millions of lines of code"}, {"link": "", "title": "Strictly declarative specification of sophisticated points-to analyses"}, {"link": "", "title": "CodeQuest: Querying source code with DataLog"}, {"link": "", "title": "CodeQuest: Scalable source code queries with Datalog"}, {"link": "", "title": "Pick your contexts well: understanding object-sensitivity"}, {"link": "", "title": "EIO: Error handling is occasionally correct"}, {"link": "", "title": "Error propagation analysis for file systems"}, {"link": "", "title": "Exception handling"}, {"link": "", "title": "A study on exception detection and handling using aspect-oriented programming"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Issues with exception handling in object-oriented systems"}, {"link": "", "title": "Regaining control of exception handling"}, {"link": "", "title": "GCC coding conventions"}, {"link": "", "title": "LLVM coding standards"}, {"link": "", "title": "Exceptions: just say no"}, {"link": "", "title": "Google C++ style guide"}, {"link": "/document/1210298", "title": "Automatic failure-path inference: A generic introspection technique for Internet applications"}, {"link": "", "title": "System and method for dynamically detecting unchecked error condition values in computer programs"}, {"link": "", "title": "Dynamic impact analysis: A cost-effective technique to enforce error-propagation"}, {"link": "", "title": "An approach for analysing the propagation of data errors in software"}, {"link": "", "title": "Propane: an environment for examining the propagation of errors in software"}, {"link": "/document/1275294", "title": "Epic: Profiling the propagation and effect of data errors in software"}, {"link": "/document/969769", "title": "Assessing inter-modular error propagation in distributed software"}, {"link": "/document/1467783", "title": "Error propagation profiling of operating systems"}, {"link": "/document/2256", "title": "Modeling and measurement of error propagation in a multimodule computing system"}, {"link": "", "title": "The set-check-use methodology for detecting error propagation failures in I/O routines"}, {"link": "", "title": "Expect the unexpected: error code mismatches between documentation and the real world"}, {"link": "", "title": "Defective error/pointer interactions in the Linux kernel"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Hexastore: sextuple indexing for Semantic Web data management"}, {"link": "", "title": "On-disk storage techniques for Semantic Web data \u2013 Are B-trees always the optimal solution?"}, {"link": "", "title": "CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "clang: a C language family frontend for LLVM"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Finding error-propagation bugs in large software systems using static analysis"}, {"link": "", "title": "LLVMLinux"}, {"link": "", "title": "WALi: A C++ library for weighted pushdown systems"}, {"link": "", "title": "Binary decision diagrams and beyond: enabling technologies for formal verification"}, {"link": "", "title": "BuDDy: A BDD package"}, {"link": "", "title": "Operating system support for data management"}, {"link": "", "title": "Amazon best sellers: Best sellers in laptop computers"}, {"link": "", "title": "A static analyzer for finding dynamic programming errors"}, {"link": "", "title": "Modular static program analysis"}, {"link": "", "title": "An overview of the Saturn project"}, {"link": "", "title": "Precise and compact modular procedure summaries for heap manipulating programs"}, {"link": "", "title": "Automatic construction of sparse data flow evaluation graphs"}, {"link": "", "title": "On sparse evaluation representations"}, {"link": "", "title": "Model checking one million lines of C code"}, {"link": "", "title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams"}, {"link": "", "title": "Context-sensitive program analysis as database queries"}, {"link": "", "title": "Using Datalog for fast and easy program analysis"}, {"link": "", "title": "Hybrid context-sensitivity for points-to analysis"}, {"link": "", "title": "Demand interprocedural program analysis using logic databases"}, {"link": "", "title": "Using Datalog with binary decision diagrams for program analysis"}, {"link": "", "title": "Defining and continuous checking of structural program dependencies"}, {"link": "", "title": "RDF-3X: a RISC-style engine for RDF"}, {"link": "", "title": "Solving demand versions of interprocedural analysis prob-lems"}, {"link": "", "title": "The Alexander method \u2013 a technique for the processing of recursive axioms in deductive databases"}, {"link": "", "title": "On the power of magic"}, {"link": "", "title": "Magic sets and other strange ways to implement logic programs"}, {"link": "", "title": "The Semantic Web \u2013 ISWC 2013\u201312th International Semantic Web Conference, Sydney, NSW, Australia, October 21\u201325, 2013, Proceedings"}, {"link": "/document/6227963", "title": "Clone detection meets semantic web-based transitive closure computation"}, {"link": "", "title": "Virtuoso, a hybrid RDBMS/graph column store"}, {"link": "", "title": "Scalable semantic web data management using vertical partitioning"}, {"link": "", "title": "Massive semantic web data compression with MapReduce"}, {"link": "", "title": "OWL reasoning with WebPIE: Calculating the closure of 100 billion triples"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194608"}
{"ref": [{"link": "", "title": "SMT-COMP"}, {"link": "", "title": "Compositional clp-based test data generation for imperative languages"}, {"link": "", "title": "Demand-driven compositional symbolic execution"}, {"link": "", "title": "Towards automatic discovery of deviations in binary implementations with applications to error detection and fingerprint generation"}, {"link": "/document/4639362", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Compositional shape analysis by means of bi-abduction"}, {"link": "", "title": "Blitz: Compositional bounded model checking for real-world programs"}, {"link": "", "title": "A program testing system"}, {"link": "", "title": "Precise and compact modular procedure summaries for heap manipulating programs"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Dart: directed automated random testing"}, {"link": "", "title": "Compositional may-must program analysis: unleashing the power of alternation"}, {"link": "", "title": "Demand interprocedural dataflow analysis"}, {"link": "", "title": "Improving structural testing of object-oriented programs via integrating evolutionary testing and symbolic execution"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Symbolic PathFinder: symbolic execution of Java bytecode"}, {"link": "", "title": "Compositional symbolic execution through program specialization"}, {"link": "", "title": "CORAL: solving complex constraints for Symbolic PathFinder"}, {"link": "", "title": "Fite: future integrated testing environment"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "Property differencing for incremental checking"}, {"link": "", "title": "Memoized symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194612"}
{"ref": [{"link": "/document/6223012", "title": "An Exploratory Study of Backtracking Strategies Used by Developers"}, {"link": "", "title": "A Longitudinal Study of Programmers' Backtracking"}, {"link": "", "title": "Smalltalk and Exploratory Programming"}, {"link": "", "title": "Exploratory Software Development with Class Libraries"}, {"link": "", "title": "Design as Exploration: Creating Interface Alternatives through Parallel Authoring and Runtime Tuning"}, {"link": "", "title": "Variation in Element and Action: Supporting Simultaneous Development of Alternative Solutions"}, {"link": "", "title": "A Selective Undo Mechanism for Graphical User Interfaces Based on Command Objects"}, {"link": "", "title": "Reusable Hierarchical Command Objects"}, {"link": "", "title": "Scripting Graphical Applications by Demonstration"}, {"link": "/document/18020", "title": "Editable Graphical Histories"}, {"link": "", "title": "Where Do Web Sites Come From?: Capturing and Interacting with Design History"}, {"link": "", "title": "A Visual Language for Browsing, Undoing, and Redoing Graphical Interface Commands"}, {"link": "", "title": "Visualizing Histories for Selective Undo and Redo"}, {"link": "", "title": "Visualization of Fine-Grained Code Change History"}, {"link": "", "title": "Tracking Source Locations"}, {"link": "", "title": "Giving Undo Attention"}, {"link": "", "title": "A Regional Undo Mechanism for Text Editing"}, {"link": "", "title": "Test-Driven Development: By Example"}, {"link": "", "title": "Capturing and Analyzing Low-Level Events from the Code Editor"}, {"link": "", "title": "Eclipse Local History"}, {"link": "", "title": "US&R: A New Framework for Redoing (Extended Abstract)"}, {"link": "", "title": "Gundo \u2013 Visualize your Vim Undo Tree"}, {"link": "", "title": "undo-tree.el version 0.3.1 \u2013\u2013\u2013 Treat undo history as a tree"}, {"link": "", "title": "Programmer Information Needs after Memory Failure"}, {"link": "", "title": "A Change-based Approach to Software Evolution"}, {"link": "", "title": "A change-aware development environment by recording editing operations of source code"}, {"link": "", "title": "Mining fine-grained code changes to detect unknown change patterns"}, {"link": "/document/1000449", "title": "A State-of-the-Art Survey on Software Merging"}, {"link": "", "title": "Regional Undo for Spreadsheets"}, {"link": "", "title": "Dwell-and-Spring: Undo for Direct Manipulation"}, {"link": "", "title": "Undo Support Models"}, {"link": "", "title": "A Framework for Undoing Actions in Collaborative Systems"}, {"link": "", "title": "Eclipse \u2013 The Eclipse Foundation open source community website"}, {"link": "", "title": "Net Beans IDE"}, {"link": "", "title": "Auto History Extension in Visual Studio 2013"}, {"link": "", "title": "Comparing Versions of a File with the Timeline"}, {"link": "", "title": "Google Docs"}, {"link": "", "title": "The Choice Calculus: A Representation for Software Variation"}, {"link": "", "title": "Barista: An Implementation Framework for Enabling New Tools, Interaction Techniques and Views in Code Editors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194576"}
{"ref": [{"link": "", "title": "Test case prioritization using requirements-based clustering"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "On the limit of control flow analysis for regression test selection"}, {"link": "", "title": "A two-step technique for extract class refactoring"}, {"link": "", "title": "Software Testing Techniques"}, {"link": "", "title": "Increasing diver-sity: Natural language measures for software fault prediction"}, {"link": "", "title": "Applications of information retrieval to software development"}, {"link": "", "title": "Applications of information retrieval to software maintenance and evolution"}, {"link": "", "title": "Vocabulary normalization improves ir-based concept location"}, {"link": "", "title": "Impact analysis by mining software and change request repositories"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "A controlled experiment assessing test case prioritization techniques via mutation faults"}, {"link": "", "title": "Empirical studies of test case prioritization in a JUnit testing environment"}, {"link": "", "title": "Prioritizing test cases for regression testing"}, {"link": "/document/919106", "title": "Incorporating varying test costs and fault severities into test case prioritization"}, {"link": "/document/988497", "title": "Test case prioritization: A family of empirical studies"}, {"link": "", "title": "A formal study of information retrieval heuristics"}, {"link": "", "title": "A case study of a reusable component collection in the information retrieval domain"}, {"link": "", "title": "An empirical evaluation and comparison of manual and automated test selection"}, {"link": "", "title": "On the use of stemming for concern location and bug localization in java"}, {"link": "", "title": "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation"}, {"link": "", "title": "Test case prioritization using relevant slices"}, {"link": "", "title": "Bypassing code coverage approximation limitations via effective input-based randomized test case prioritization"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "Leveraged quality assessment using information retrieval techniques"}, {"link": "", "title": "Regression Rank: Learning to Meet the Opportunity of Descriptive Queries"}, {"link": "", "title": "Insights into regression testing"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "", "title": "Feature location via information retrieval based filtering of a single scenario execution trace"}, {"link": "", "title": "Incremental approach and user feedbacks: a silver bullet for traceability recovery"}, {"link": "", "title": "Bug localization using latent dirichlet allocation"}, {"link": "", "title": "Test case prioritization based on analysis of program structure"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "/document/989796", "title": "Identification of high-level concept clones in source code"}, {"link": "/document/1201194", "title": "Recovering documentation-to-source-code traceability links using latent semantic indexing"}, {"link": "", "title": "Using data fusion and web mining to support feature location in software"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "/document/6009447", "title": "Test case prioritization for audit testing of evolving web services using information retrieval techniques"}, {"link": "", "title": "A language modeling approach to information retrieval"}, {"link": "", "title": "Retrieval from software libraries for bug localization: A comparative study of generic and composite text models"}, {"link": "", "title": "Experimentation as a way of life: Okapi at trec"}, {"link": "/document/738487", "title": "An empirical study of the effects of minimization on the fault detection capabilities of test suites"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "", "title": "Test case prioritization: an empirical study"}, {"link": "", "title": "On the effectiveness of information retrieval based bug localization for c programs"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Term-weighting approaches in automatic text retrieval"}, {"link": "", "title": "Javalanche: efficient mutation testing for java"}, {"link": "", "title": "Modern information retrieval: A brief overview"}, {"link": "", "title": "System test case prioritization of new and regression test cases"}, {"link": "", "title": "Indri: A language model-based search engine for complex queries"}, {"link": "", "title": "Towards more accurate retrieval of duplicate bug reports"}, {"link": "", "title": "Static test case prioritization using topic models"}, {"link": "/document/4021329", "title": "Using the case-based ranking methodology for test case prioritization"}, {"link": "", "title": "Lda-based document models for ad-hoc retrieval"}, {"link": "", "title": "A study of effective regression testing in practice"}, {"link": "", "title": "Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge"}, {"link": "", "title": "Notes on the lemur tfidf model (unpublished work)"}, {"link": "", "title": "Bridging the gap between the total and additional test-case prioritization strategies"}, {"link": "", "title": "Localizing failure-inducing program edits based on spectrum information"}, {"link": "", "title": "Faulttracer: A change impact and regression fault analysis tool for evolving java programs"}, {"link": "", "title": "Faulttracer: a spectrum-based approach to localizing failure-inducing program edits"}, {"link": "", "title": "Injecting mechanical faults to localize developer faults for evolving software"}, {"link": "/document/5306350", "title": "Prioritizing JUnit test cases in absence of coverage information"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? \u2013 more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194580"}
{"ref": [{"link": "", "title": "On the criteria to be used in decomposing systems into modules"}, {"link": "/document/920618", "title": "COTS-based systems top 10 list"}, {"link": "/document/1231161", "title": "Eight lessons learned during COTS-based systems maintenance"}, {"link": "", "title": "Programmers' build errors: a case study (at Google)"}, {"link": "/document/6405296", "title": "Measuring software library stability through historical version analysis"}, {"link": "/document/6975655", "title": "Semantic versioning versus breaking changes: A study of the Maven repository"}, {"link": "", "title": "An empirical study of the evolution of Eclipse third-party plug-ins"}, {"link": "", "title": "Large-scale, AST-based API-usage analysis of open-source Java projects"}, {"link": "", "title": "A study of library migration in Java software"}, {"link": "", "title": "Mining trends of library usage"}, {"link": "", "title": "The goal question metric approach"}, {"link": "/document/4335232", "title": "A practical model for measuring maintainability"}, {"link": "/document/5609747", "title": "Deriving metric thresholds from benchmark data"}, {"link": "/document/6113040", "title": "Benchmark-based aggregation of metrics to ratings"}, {"link": "", "title": "Tracking vulnerable components in software systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202955"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Mortality Statistics: Deaths Registered in England and Wales (Series DR)"}, {"link": "", "title": "AS Alzheimer's Society"}, {"link": "", "title": "G8 dementia summit communique"}, {"link": "", "title": "Ecological Momentary Assessment"}, {"link": "", "title": "Differences in stress-related ratings between research center and home environments in dementia caregivers using ecological momentary assessment"}, {"link": "/document/1624801", "title": "Monitoring computer interactions to detect early cognitive impairment in elders"}, {"link": "", "title": "Intelligent systems for assessing aging changes: Home-based, unobtrusive, and continuous assessment of aging"}, {"link": "", "title": "People, sensors, decisions: Customizable and adaptive technologies for assistance in healthcare"}, {"link": "", "title": "Internet use in households and by individuals in 2012"}, {"link": "", "title": "Designing game-based cognitive assessments for elderly adults"}, {"link": "/document/6732879", "title": "Assessing executive function using a computer game: Computational modeling of cognitive processes"}, {"link": "", "title": "Unobtrusive monitoring of divided attention in a cognitive health coaching intervention for the elderly"}, {"link": "/document/5626277", "title": "Models of cognitive performance based on home monitoring data"}, {"link": "", "title": "Linguistic ability in early life and the neuropathology of Alzheimer's disease and cerebrovascular disease: Findings from the Nun Study"}, {"link": "", "title": "Inhibitory Control of Saccadic Eye Movements and Cognitive Impairment in Alzheimer's Disease"}, {"link": "", "title": "Awareness requirements for adaptive systems"}, {"link": "", "title": "Perceived usefulness, perceived ease of use, and user acceptance of information technology"}, {"link": "", "title": "To play or not to play\u2019: A cross-temporal investigation using hedonic and instrumental perspectives to explain user intentions to explore a technology"}, {"link": "", "title": "Requirements engineering in health care: the example of chemotherapy planning in paediatric oncology"}, {"link": "", "title": "Requirements engineering in the health care domain"}, {"link": "", "title": "User engagement by user-centred design in e-Health"}, {"link": "/document/6912259", "title": "Discovering affect-laden requirements to achieve system acceptance"}, {"link": "/document/4685653", "title": "Investigating the role of soft issues in the RE process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203006"}
{"ref": [{"link": "", "title": "Continuous test generation: Enhancing continuous integration with automated test generation"}, {"link": "", "title": "Improving your software using static analysis to find bugs"}, {"link": "/document/5196928", "title": "How technological support can enable advantages of agile software development in a GSE setting"}, {"link": "", "title": "Continuous Integration"}, {"link": "", "title": "Customized awareness: Recommending relevant external change events"}, {"link": "", "title": "Practical automated process and product metric collection and analysis in a classroom setting: Lessons learned from Hackystat-U H"}, {"link": "", "title": "Analyzed: a shared tool for analyzing virtual team collaboration in classroom software engineering projects"}, {"link": "", "title": "Adinda: a knowledgeable, browser-based IDE"}, {"link": "/document/4221629", "title": "The future of programming environments: Integration, synergy, and assistance"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203010"}
{"ref": [{"link": "/document/841783", "title": "What knowledge is important to a software professional?"}, {"link": "", "title": "Software engineering education: A roadmap"}, {"link": "", "title": "Continuing prospects for an engineering discipline of software"}, {"link": "/document/1617337", "title": "Developing a software engineering curriculum for the emerging software industry in China"}, {"link": "/document/4271586", "title": "Software engineering education in Russia: A comparative study of people, process and technology: A four year pespective"}, {"link": "/document/4556956", "title": "Software engineering education in India: Issues and challenges"}, {"link": "", "title": "Imparting effective software engineering education"}, {"link": "", "title": "Software engineering education: How far we've come and how far we have to go"}, {"link": "", "title": "Software engineering education (SEEd): Is software engineering ready for MOOCs?"}, {"link": "", "title": "Can industry and academia collaborate to meet the need for software engineers?"}, {"link": "", "title": "Meeting the challenge of software engineering education for working professionals in the 21st century"}, {"link": "/document/1644090", "title": "Position paper: The importance of experience with industry in software engineering education"}, {"link": "/document/4812705", "title": "A dynamic framework for software engineering education curriculum to reduce the gap between the software organizations and software educational institutions"}, {"link": "", "title": "Software engineering education: The gap between industry's requirements and graduates' readiness"}, {"link": "/document/1201247", "title": "On the supervision and assessment of part-time postgraduate software engineering projects"}, {"link": "", "title": "Teaching formal methods in context"}, {"link": "", "title": "The Z Notation: A Reference Manual"}, {"link": "", "title": "Using Z: Specification, Refinement, and Proof"}, {"link": "", "title": "Communicating Sequential Processes"}, {"link": "", "title": "Understanding Concurrent Systems"}, {"link": "", "title": "The B-Book: Assigning Programs to Meanings"}, {"link": "", "title": "The B-Method: An Introduction. Palgrave Cornerstones in Computer Science"}, {"link": "", "title": "System Engineering Management"}, {"link": "", "title": "Full-spectrum information security education: Integrating B.Sc., M. Sc., and Ph.D. programs"}, {"link": "", "title": "Security, Privacy, and Trust in Modern Data Management"}, {"link": "", "title": "The Spy In The Coffee Machine: The End of Privacy As We Know It. Oneworld Publications"}, {"link": "", "title": "Introduction to Computer Security"}, {"link": "/document/6234890", "title": "A comparison of commercial and military computer security policies"}, {"link": "", "title": "Public information: Cause for celebration or concern?"}, {"link": "", "title": "On privacy and public data: A study of data.gov.uk"}, {"link": "", "title": "Ten years of information security masters programmes: Reflections and new challenges"}, {"link": "", "title": "Development of a master of software assurance reference curriculum"}, {"link": "", "title": "Software assurance curriculum project volume I: Master of software assurance reference curriculum"}, {"link": "", "title": "Software assurance curriculum project volume II: Undergraduate course outlines"}, {"link": "", "title": "Software assurance curriculum project volume III: Master of software assurance course syllabi"}, {"link": "", "title": "A shortage of privacy engineers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202994"}
{"ref": [{"link": "", "title": "Software Testing \u2013 Techniques and Applications"}, {"link": "/document/1251034", "title": "Coverage criteria for logical expressions"}, {"link": "", "title": "Do-178b: Software considerations in airborne systems and equipment certification"}, {"link": "", "title": "A data flow analysis approach to program testing"}, {"link": "", "title": "Selecting software test data using data flow information"}, {"link": "", "title": "A formal evaluation of data flow path selection criteria"}, {"link": "", "title": "Performing data flow testing on classes"}, {"link": "/document/238581", "title": "An experimental comparison of the effectiveness of branch testing and data flow testing"}, {"link": "/document/296778", "title": "Experiments of the effectiveness of dataflow and controlflow-based test adequacy criteria"}, {"link": "", "title": "Data flow coverage and the c language"}, {"link": "/document/205829", "title": "Atac: A data flow coverage testing tool for c"}, {"link": "/document/44376", "title": "The cost of data flow testing: An empirical study"}, {"link": "", "title": "Quantifying the complexity of dataflow testing"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "The SLAM project: debugging system software via static analysis"}, {"link": "", "title": "Lazy abstraction"}, {"link": "/document/1201217", "title": "Modular verification of software components in C"}, {"link": "", "title": "The software model checker BLAST: Applications to software engineering"}, {"link": "", "title": "Cpachecker: A tool for configurable software verification"}, {"link": "", "title": "Generating tests from counterexamples"}, {"link": "", "title": "Automated test data generation for coverage: Haven't we solved this problem yet?"}, {"link": "/document/5609565", "title": "Guided test generation for coverage criteria"}, {"link": "", "title": "Automated coverage-driven test data generation using dynamic symbolic execution"}, {"link": "", "title": "Augmented dynamic symbolic execution"}, {"link": "/document/5609672", "title": "Test generation via dynamic symbolic execution for mutation testing"}, {"link": "/document/5198498", "title": "Test data generation for derived types in C program"}, {"link": "", "title": "Towards scalable compositional test generation"}, {"link": "", "title": "A parallel approach to concolic testing with low-cost synchronization"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "/document/4639362", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Efficient computation of interprocedural definition-use chains"}, {"link": "/document/286418", "title": "Interprocedural def-use associations for C systems with single level pointers"}, {"link": "", "title": "Compilers: Principles, techniques, and tools"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Using symbolic execution and data flow criteria to aid test data selection"}, {"link": "", "title": "Search-based data-flow test generation"}, {"link": "/document/6823867", "title": "On the right objectives of data flow testing"}, {"link": "/document/366924", "title": "Interprocedural dynamic slicing applied to interprocedural data how testing"}, {"link": "", "title": "KATCH: high-coverage testing of software patches"}, {"link": "/document/1245299", "title": "Using spanning sets for coverage testing"}, {"link": "", "title": "ORIENTAlS: formal verified OSEK/VDX real-time operating system"}, {"link": "/document/6597875", "title": "Modeling and verification of AUTOSAR OS and EMS application"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "The collateral coverage of data flow criteria when branch testing"}, {"link": "", "title": "Efficiently monitoring data-flow test coverage"}, {"link": "/document/4425835", "title": "Using genetic algorithms to aid test-data generation for data-flow coverage"}, {"link": "", "title": "Automatic test data generation for data flow testing using particle swarm optimization"}, {"link": "", "title": "A new software data-flow testing approach via ant colony algorithms"}, {"link": "", "title": "Evolutionary test environment for automatic structural testing"}, {"link": "", "title": "Automated testing of classes"}, {"link": "", "title": "Data flow testing as model checking"}, {"link": "", "title": "Stcuctural coverage of feasible code"}, {"link": "/document/5444886", "title": "Proofs from tests"}, {"link": "/document/6823879", "title": "Efficient leveraging of symbolic execution to advanced coverage criteria"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "Precise guidance to dynamic test generation"}, {"link": "", "title": "The chaining approach for software test data generation"}, {"link": "", "title": "Improving program testing and understanding via symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194614"}
{"ref": [{"link": "", "title": "EnergyPlus: Creating a New-Generation Building Energy Simulation Program"}, {"link": "", "title": "Experiences from Real-World Deployment of Context-Aware Technologies in a Hospital Environment"}, {"link": "", "title": "A-3: An Architectural Style for Coordinating Distributed Components"}, {"link": "", "title": "SeSaMe: Towards a Semantic Self Adaptive Middleware for Smart Spaces"}, {"link": "/document/6803157", "title": "Short paper: Harmonizing Heterogeneous Components in SeSaMe"}, {"link": "", "title": "Dynamix: An Open Plug-and-Play Context Framework for Android"}, {"link": "/document/6051438", "title": "Toward a Tool-Based Development Methodology for Pervasive Computing Applications"}, {"link": "/document/6114827", "title": "Pervasive Middleware Goes Social: The SAPERE Approach"}, {"link": "", "title": "A Framework for Evaluating Pervasive Systems"}, {"link": "", "title": "UbiSim: Multiple Sensors Mounted Smart House Simulator Development"}, {"link": "", "title": "A Generic Large Scale Simulator for Ubiquitous Computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203116"}
{"ref": [{"link": "", "title": "Efficient and Precise Dynamic Impact Analysis Using Execute-After Sequences"}, {"link": "", "title": "Regression Verification Using Impact Summaries"}, {"link": "", "title": "Precision Reuse for Efficient Regression Verication"}, {"link": "", "title": "Software Change Impact Analysis"}, {"link": "", "title": "MagicFuzzer: Scalable Deadlock Detection for Large-Scale Applications"}, {"link": "", "title": "Efficient Concurrency-Bug Detection Across Inputs"}, {"link": "", "title": "Understanding the Interleaving-Space Overlap across Inputs and Software Versions"}, {"link": "/document/5482587", "title": "The Effects of Time Constraints on Test Case Prioritization: A Series of Controlled Experiments"}, {"link": "", "title": "Concurrent Bug Patterns and How to Test Them"}, {"link": "", "title": "Prioritizing Test Cases for Regression Testing"}, {"link": "", "title": "The Complexity of Predicting Atomicity Violations"}, {"link": "", "title": "Partial-Order Reduction for Model Checking Software"}, {"link": "", "title": "Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction. IEEE TSE"}, {"link": "", "title": "Regression Test Selection for Java Software"}, {"link": "", "title": "Model checking JAVA programs using JAVA PathFinder"}, {"link": "", "title": "MINTS:A General Framework and Tool for Supporting Test-Suite Minimization"}, {"link": "", "title": "Prediction of Concurrency Access Anomalies"}, {"link": "", "title": "Predictive Analysis of Concurrent Programs by Removing Trace Redundancy"}, {"link": "", "title": "Change-Aware Preemption Prioritization"}, {"link": "", "title": "CalFuzzer: An Extensible Active Testing Framework for Concurrent Programs"}, {"link": "", "title": "Dynamic Program Analysis Technique for Detecting Real Deadlocks"}, {"link": "", "title": "Detecting Atomic-Set Se-rializability Violations in Multithreaded Programs through Active Randomized Testing"}, {"link": "", "title": "Clocks, and the Ordering of Events in a Distributed System"}, {"link": "", "title": "Incremental State-Space Exploration for Programs with Dynamically Allocated Data"}, {"link": "", "title": "A Survey of Code-Based Change Impact Analysis Techniques"}, {"link": "", "title": "Dynamic Evaluation of the Precision of Static Heap Abstractions"}, {"link": "", "title": "Study of Interleaving Coverage Criteria"}, {"link": "", "title": "from Mistakes: A Comprehensive Study on Real World Concurrency Bug Characteris-tics"}, {"link": "", "title": "Virtual Time and Global States of Distributed Systems"}, {"link": "", "title": "Finding and Reproducing Heisenbugs in Concurrent Programs"}, {"link": "", "title": "CTrigger: Exposing Atomicity Violation Bugs from Their Hiding Places"}, {"link": "", "title": "Directed Incremental Symbolic Execution"}, {"link": "/document/536955", "title": "Analyzing Regression Test Selection Techniques"}, {"link": "", "title": "A safe, Efficient Regression Test Selection Technique"}, {"link": "", "title": "Eraser: A Dynamic Data Dace Detector for Multithreaded Programs"}, {"link": "", "title": "Race Directed Random Testing of Concurrent Programs"}, {"link": "", "title": "Detecting errors in multithreaded programs by generalized predictive analysis of executions"}, {"link": "", "title": "Control Flow Analysis in Scheme"}, {"link": "", "title": "PENELOPE: Weaving Threads to Expose Atomicity Violations"}, {"link": "", "title": "Marathon: Detecting Atomic-Set Serializability Violations with Conflict Graphs"}, {"link": "/document/6693069", "title": "Identifying Execution Points for Dynamic Analyses"}, {"link": "", "title": "Dynamic Recognition of Synchronization Operations for Improved Data Race Detection"}, {"link": "", "title": "Synchronization Constraints with Data in an Object-Oriented Language"}, {"link": "", "title": "Efficient Program Execution Indexing"}, {"link": "", "title": "Ad Hoc Synchronization Considered Harmful"}, {"link": "", "title": "Regression Model Checking"}, {"link": "", "title": "Regression Testing Minimization, Selection and Prioritization: A Survey"}, {"link": "", "title": "\n            Maple:\n            "}, {"link": "", "title": "SimRT: An Automated Framework to Support Regression Testing for Data Races"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194578"}
{"ref": [{"link": "", "title": "Security Patterns: Integrating Security and Systems Engineering"}, {"link": "", "title": "Security Patterns in Practice: Designing Secure Architectures Using Software Patterns"}, {"link": "", "title": "A survey on security patterns"}, {"link": "", "title": "Securing distributed systems using patterns: A survey"}, {"link": "", "title": "Core Security Patterns: Best Practices and Strategies for J2EE, Web Services, and Identity Management"}, {"link": "/document/6227155", "title": "Does organizing security patterns focus architectural choices?"}, {"link": "", "title": "Design patterns: elements of reusable object-oriented software"}, {"link": "/document/1377188", "title": "Defect frequency and design patterns: an empirical study of industrial code"}, {"link": "/document/5316015", "title": "Impact of the visitor pattern on program comprehension and maintenance"}, {"link": "/document/5975176", "title": "What do we know about the effectiveness of software design patterns?"}, {"link": "", "title": "A survey of experienced user perceptions about software design patterns"}, {"link": "", "title": "Secure systems development with UML"}, {"link": "", "title": "Model driven security: From uml models to access control infrastructures"}, {"link": "", "title": "A systematic review of model-driven security"}, {"link": "", "title": "Security in model driven development: A survey"}, {"link": "", "title": "Companion website"}, {"link": "", "title": "Eliciting security requirements with misuse cases"}, {"link": "", "title": "The R Project for Statistical Computing"}, {"link": "", "title": "Security patterns repository version 1.0"}, {"link": "", "title": "An analysis of the security patterns landscape"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194582"}
{"ref": [{"link": "/document/6613484", "title": "How effectively does metamorphic testing alleviate the oracle problem?"}, {"link": "/document/5999647", "title": "Software testing and verification in climate model development"}, {"link": "", "title": "Exploratory automation"}, {"link": "/document/1377040", "title": "Agile software development in large organizations"}, {"link": "", "title": "An introduction to agile methods"}, {"link": "", "title": "Data Access Toolkit (DAT) User's Guide,2014, version 0.8"}, {"link": "", "title": "Assessing model-based testing: An empirical study conducted in industry"}, {"link": "/document/6698883", "title": "Model-based testing of nasa's osal api-an experience report"}, {"link": "/document/6688853", "title": "An initial evaluation of model-based testing"}, {"link": "", "title": "Leap second-wikipedia, the free encyclopedia"}, {"link": "/document/4222623", "title": "Randomized differential testing as a prelude to formal verification"}, {"link": "", "title": "Model-based testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202957"}
{"ref": [{"link": "", "title": "Measurement-Based Analysis of Networked System Availability"}, {"link": "", "title": "What Supercomputers Say: A Study of Five System Logs"}, {"link": "", "title": "Measurement and Modeling of Computer Reliability as Affected by System Activity"}, {"link": "", "title": "Why Do Internet Services Fail, and What Can Be Done About It"}, {"link": "/document/1633514", "title": "A Large-Scale Study of Failures in High-Performance Computing Systems"}, {"link": "", "title": "Windows 2000 Dependability. In MSR-TR-2000\u201356 Technical Report"}, {"link": "", "title": "Identifying compromised users in shared computing infrastructures: A data-driven bayesian network approach"}, {"link": "", "title": "Failure data analysis of a LAN of windows NT based computers"}, {"link": "", "title": "A log mining approach to failure analysis of enterprise telephony systems"}, {"link": "", "title": "Availability assessment of sunOS/solaris unix systems based on syslogd and wtmpx log files: A case study"}, {"link": "", "title": "VAX/VMS event monitoring and analysis"}, {"link": "", "title": "Assessing direct monitoring techniques to analyze failures of critical industrial systems"}, {"link": "", "title": "U. S. Department of Defense. MIL-STD-498. Overview and Tailoring Guidebook"}, {"link": "", "title": "Runtime Reflection: Dynamic model-based analyis of component-based distributed embedded systems"}, {"link": "", "title": "Formal Analysis of Log Files"}, {"link": "", "title": "Mars Science Laboratory"}, {"link": "", "title": "IBM. Common Event Infrastructure"}, {"link": "", "title": "The Apache Software Foundation. Logging services project"}, {"link": "", "title": "Microsoft Corporation. Windows Event Log"}, {"link": "", "title": "The bsd syslog protocol"}, {"link": "", "title": "A Graphical Representation for Identifier Structure in Logs"}, {"link": "", "title": "Improving Software Diagnosability via Log Enhancement"}, {"link": "", "title": "Aspect-oriented programming: Introduction"}, {"link": "", "title": "Can aspect-oriented programming lead to more reliable software"}, {"link": "/document/6320555", "title": "Event logs for the analysis of software failures: A rule-based approach"}, {"link": "", "title": "Comprehensive Logfiles for Autonomic Systems"}, {"link": "/document/6405402", "title": "Detection of software failures through event logs: An experimental study"}, {"link": "/document/6227202", "title": "Characterizing logging practices in open-source software"}, {"link": "", "title": "Where do developers log? An empirical study on logging practices in industry"}, {"link": "/document/4534301", "title": "Bad words: Finding faults in spirit's syslogs"}, {"link": "", "title": "Filtering security alerts for the analysis of a production saas cloud"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202961"}
{"ref": [{"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Mining source code repositories at massive scale using language modelling"}, {"link": "", "title": "Sourcerer: a search engine for open source code supporting structure-based search"}, {"link": "", "title": "An empirical study of smoothing techniques for language modeling"}, {"link": "", "title": "Brown corpus manual"}, {"link": "", "title": "Cacheca: A cache language model based code suggestion tool"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "/document/6227135", "title": "On the Naturalness of Software"}, {"link": "/document/6227135", "title": "On the Naturalness of Software"}, {"link": "", "title": "Phrase-based statistical translation of programming languages"}, {"link": "", "title": "Literate programming"}, {"link": "", "title": "Building a large annotated corpus of english: The penn treebank"}, {"link": "", "title": "Improving text classification by shrinkage in a hierarchy of classes"}, {"link": "", "title": "Tbcnn: A tree-based convolutional neural network for programming language processing"}, {"link": "", "title": "Statistical learning approach for mining api usage mappings for code migration"}, {"link": "", "title": "Lexical statistical machine translation for language migration"}, {"link": "", "title": "Migrating code with statistical machine translation"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "The Language Instinct: The New Science of Language and Mind"}, {"link": "", "title": "Predicting Program Properties from \u201cBig Code"}, {"link": "", "title": "Incorporating linguistic structure into statistical language models"}, {"link": "", "title": "The qualitas corpus: A curated collection of java code for empirical studies"}, {"link": "", "title": "On the localness of software"}, {"link": "/document/1642779", "title": "Dasher-an efficient writing system for brain-computer interfaces?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203008"}
{"ref": [{"link": "", "title": "The mythical man-month"}, {"link": "", "title": "The art of software testing"}, {"link": "/document/4455636", "title": "Does test-driven development really improve software design quality?"}, {"link": "", "title": "Design structure matrix"}, {"link": "", "title": "Test processes in software product evolutiona qualitative survey on the state of practice"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "XUnit Test Patterns: Refactoring Test Code"}, {"link": "", "title": "Teaching and training developer-testing techniques and tool support"}, {"link": "", "title": "Context-sensitive detection of information exposure bugs with symbolic execution"}, {"link": "", "title": "The hawthorne effect: A reconsideration of the methodological artifact"}, {"link": "/document/6862882", "title": "Test code quality and its relation to issue handling performance"}, {"link": "", "title": "Syde: a tool for collaborative software development"}, {"link": "", "title": "Spyware: a change-aware development toolset"}, {"link": "", "title": "Understanding myths and realities of test-suite evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203012"}
{"ref": [{"link": "", "title": "Engaging Ideas: The Professor's Guide to Integrating Writing, Critical Thinking, and Active Learning in the Classroom"}, {"link": "", "title": "Novice software developers, all over again"}, {"link": "", "title": "Engaging in the Scholarship of Teaching and Learning"}, {"link": "", "title": "Standard for software component testing"}, {"link": "/document/6462496", "title": "Characterizing communication instruction in computer science and engineering programs: methods and applications"}, {"link": "", "title": "Developing CS/SE students' communication abilities through a program-wide framework"}, {"link": "", "title": "Ways of knowing, doing, and writing in the disciplines"}, {"link": "", "title": "Creating a progression of writing, speaking, & teaming learning Outcomes in undergraduate computer science/software engineering curricula"}, {"link": "", "title": "Communication genres: integrating communication into the software engineering curriculum"}, {"link": "", "title": "Guidelines, criteria, and rules of thumb for evaluating normed and standardized assessment instruments in psychology"}, {"link": "", "title": "Writing for computer science: a taxonomy of writing tasks and general advice"}, {"link": "", "title": "Integrating communication skills into the computer science curriculum"}, {"link": "", "title": "Computer Science Education Research"}, {"link": "", "title": "CSC 216: Lecture 3"}, {"link": "", "title": "Software testing (CS1 & CS2)"}, {"link": "", "title": "Software testing"}, {"link": "", "title": "Workplace scenarios to integrate communication skills and content: a case study"}, {"link": "", "title": "The official (and unofficial) rules for norming rubrics successfully"}, {"link": "", "title": "Big Java"}, {"link": "", "title": "Getting CS undergraduates to communicate effectively"}, {"link": "", "title": "Situated Learning: Legitimate Peripheral Participation"}, {"link": "", "title": "Confidence in Altman-Bland Plots: A Critical Review of the Method of Differences"}, {"link": "", "title": "Technical communication instruction in engineering schools: A Survey of top ranked U.S. and Canadian programs"}, {"link": "", "title": "Evaluation of CPATH II: Incorporating Communication Outcomes into the Computer Science Curriculum, Final Technical Report"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202996"}
{"ref": [{"link": "", "title": "The relationship of organisational culture with productivity and quality. A study of Indian software organisations"}, {"link": "", "title": "Organizational factors for successful management of software development"}, {"link": "/document/730908", "title": "The influence of organisational factors on the success and quality of a product-line architecture"}, {"link": "", "title": "Studying software engineers: data collection techniques for software field studies"}, {"link": "", "title": "Maintaining mental models: A study of developer work habits"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Pair Programming Illuminated"}, {"link": "", "title": "Organizational factors shaping software process improvement in small-medium sized software teams: A multi-case analysis"}, {"link": "", "title": "Software engineering using RATionale"}, {"link": "", "title": "Sharing and reusing architectural knowledge \u2013 Architecture, rationale, and design intent"}, {"link": "", "title": "Supporting software development as knowledge-intensive and collaborative activity"}, {"link": "", "title": "Just talk to me: A field study of expertise location"}, {"link": "", "title": "Interoperability among independently evolving Web services"}, {"link": "", "title": "PHP: Downloads"}, {"link": "", "title": "Negotiation support systems and team negotiations: the coalition formation perspective"}, {"link": "", "title": "CMMI for Acquisition, Version 1.3"}, {"link": "", "title": "ISO 12207:2008 \u2013 Systems and software engineering \u2013 Software life cycle processes"}, {"link": "", "title": "An Analysis of the Contracting Process for an ERP System"}, {"link": "", "title": "Missed Alarms and 40 Million Stolen Credit Card Numbers: How Target Blew It"}, {"link": "", "title": "CMMI for Development, Version 1.3"}, {"link": "", "title": "ISO/IEC 15504:2004 \u2013 Software Process Improvement and Capability Determination (SPICE)"}, {"link": "/document/6227201", "title": "The impacts of software process improvement on developers: A systematic review"}, {"link": "", "title": "Software aging"}, {"link": "", "title": "Managing Technical Debt"}, {"link": "", "title": "The Mythical Man Month: Essays on Software Engineering"}, {"link": "", "title": "Exploring the human and organizational aspects of software cost estimation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194616"}
{"ref": [{"link": "", "title": "Comprehensive experimental analyses of automotive attack surfaces"}, {"link": "/document/4531149", "title": "Pacemakers and implantable cardiac defibrillators: Software radio attacks and zero-power defenses"}, {"link": "", "title": "HACMS: High assurance cyber military systems"}, {"link": "", "title": "Common criteria for information technology security evaluation, version 3.1 revision 4"}, {"link": "", "title": "DO-178C, software considerations in airborne systems and equipment certification"}, {"link": "", "title": "Formal verification of a realistic compiler"}, {"link": "", "title": "Comprehensive formal verification of an OS microkernel"}, {"link": "/document/6606692", "title": "Formal specifications better than function points for code sizing"}, {"link": "", "title": "An empirical research agenda or understanding formal methods productivity"}, {"link": "", "title": "Managerial issues for the consideration and use of formal methods"}, {"link": "", "title": "Productivity for proof engineering"}, {"link": "", "title": "Isabelle/HOL \u2013 A Proof Assistant for Higher-Order Logic"}, {"link": "", "title": "The archive of formal proofs"}, {"link": "", "title": "Specification metrics for Event-B developments"}, {"link": "", "title": "Elements of Software Science (Operating and Programming Systems Series)"}, {"link": "", "title": "Deploy: Industrial deployment of system engineering methods providing high dependability and productivity"}, {"link": "", "title": "Predictive software metrics based on a formal specification"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Predictive Software Measures Based on Formal Z Speci-fications"}, {"link": "", "title": "Metrics for quantifying evolutionary changes in Z specifications"}, {"link": "/document/879807", "title": "Is proof more cost-effective than testing?"}, {"link": "", "title": "Proof terms for simply typed higher order logic"}, {"link": "", "title": "Inductive datatypes in HOL \u2013 lessons learned in formal-logic engineering"}, {"link": "", "title": "Translation validation for a verified OS kernel"}, {"link": "", "title": "seL4 enforces integrity"}, {"link": "", "title": "seL4: from general purpose to a proof of information flow enforcement"}, {"link": "", "title": "seL4 proofs for API 1.03, release 2014\u201308-10"}, {"link": "", "title": "Jinja with threads"}, {"link": "", "title": "Formal verification of modern SAT solvers"}, {"link": "", "title": "Extensible specifications for automatic re-use of specifications and proofs"}, {"link": "", "title": "A tactic language for the system Coq"}, {"link": "", "title": "An isabelle proof method language"}, {"link": "", "title": "Interactive Theorem Proving and Program Development"}, {"link": "", "title": "A statistical relational learning challenge \u2013 extracting proof strategies from exemplar proofs"}, {"link": "", "title": "Machine learning in proof general: Interfacing interfaces"}, {"link": "", "title": "Proof general: A generic tool for proof development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7194620"}
{"ref": [{"link": "", "title": "Linux Variability Analysis Tools (LVAT) Repository"}, {"link": "", "title": "The Impact of Goals On Software Project Management: An Experimental Investigation"}, {"link": "", "title": "Anonymous"}, {"link": "", "title": "Feature Models, Grammars, and Propositional Formulas"}, {"link": "", "title": "Automated Reasoning on Feature Models"}, {"link": "", "title": "Variability Modeling in the Systems Software Domain"}, {"link": "", "title": "Some results and experiments in programming techniques for propositional logic"}, {"link": "", "title": "Release Planning in Market-Driven Software Product Development: Provoking an Understanding"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "", "title": "Generative programming-methods, tools and applications"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "", "title": "On the Effect of the Steady-State Selection Scheme in Multi-Objective Genetic Algorithms"}, {"link": "", "title": "Automated configuration support for infrastructure migration to the cloud"}, {"link": "", "title": "SMTIBEA: a hybrid multiobjective optimization algorithm for configuring large constrained software product lines"}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "", "title": "Scaling exact multi-objective combinatorial optimization by parallelization"}, {"link": "", "title": "On a Bicriterion Formulation of the Problems of Integrated System Identification and System Optimization"}, {"link": "", "title": "Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines"}, {"link": "", "title": "SIP: Optimal Product Selection from Feature Models Using Many-Objective Evolutionary Optimization"}, {"link": "", "title": "Generalized Resolution and Cutting Planes"}, {"link": "", "title": "IBM"}, {"link": "", "title": "Evolutionary Many-Objective Optimization: A Short Review"}, {"link": "", "title": "Software reuse-architecture, process and organization for business"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "Multiobjective combinatorial optimization: some approaches"}, {"link": "/document/7105950", "title": "GALE: Geometric Active Learning for Search-Based Software Engineering"}, {"link": "", "title": "Combining Convergence and Diversity in Evolutionary Multiobjective Optimization"}, {"link": "", "title": "Integrated Requirement Selection and Scheduling for the Release Planning of a Software Product"}, {"link": "", "title": "Theorem Proving for Product Line Model Verification"}, {"link": "", "title": "Decision-making coordination in collaborative product configuration"}, {"link": "", "title": "S. P. L. O. T.: software product lines online tools"}, {"link": "", "title": "Normal Constraint Method with Guarantee of Even Representation of Complete Pareto Frontier"}, {"link": "", "title": "A robust multi-objective approach to balance severity and importance of refactoring opportunities"}, {"link": "", "title": "An (Accidental) Exploration of Alternatives to Evolutionary Algorithms for SBSE"}, {"link": "", "title": "MOCell: A cellular genetic algorithm for multiobjective optimization"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Multi-objective integer programming: A general approach for generating all non-dominated solutions"}, {"link": "/document/1524914", "title": "The Art and Science of Software Release Planning"}, {"link": "", "title": "Variability testing in the wild: the Drupal case study"}, {"link": "", "title": "Optimum Feature Selection in Software Product Lines: Let Your Model and ValuesGuide Your Search"}, {"link": "", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "", "title": "On the value of user preferences in search-based software engineering: a case study in softwareproduct lines"}, {"link": "", "title": "Reverse engineering feature models"}, {"link": "", "title": "Efficient Monte Carlo Procedures for Generating Points Uniformly Distributed over Bounded Regions"}, {"link": "", "title": "Optimizing selection of competing features via feedback-directed evolutionary algorithms"}, {"link": "", "title": "Determination of the Next Release of a Software Product: an Approach using Integer Linear Programming"}, {"link": "", "title": "Optimization of Product Instantiation using Integer Programming"}, {"link": "", "title": "Selecting highly optimal architectural feature sets with Filtered Cartesian Flattening"}, {"link": "", "title": "Understanding Feature Evolution in a Family of Product Variants"}, {"link": "", "title": "IBED: Combining IBEA and DE for optimal feature selection in software product line engineering"}, {"link": "", "title": "Time-aware test-case prioritization using integer linear programming"}, {"link": "", "title": "Indicator-Based Selection in Multiobjective Search"}, {"link": "", "title": "SPEA2: Improving the Strength Pareto Evolutionary Algorithm"}, {"link": "/document/797969", "title": "Multiobjective evolutionary algorithms: a comparative case study and the strength Pareto approach"}, {"link": "", "title": "e-PAL: An Active Learning Approach to the Multi-Objective Optimization Problem"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453205"}
{"ref": [{"link": "", "title": "Lexicon bad smells in software. In WCRE"}, {"link": "", "title": "Learning natural coding conventions. In FSE"}, {"link": "", "title": "Suggesting accurate method and class names. In ESEC/FSE"}, {"link": "", "title": "Assessing the relevance of identifier names in a legacy software system. In CASCON"}, {"link": "/document/6776542", "title": "IEEE Repent: Analyzing the nature of identifier renamings. IEEE Transactions on Software Engineering"}, {"link": "", "title": "Exploring the influence of identifier names on code quality An empirical study"}, {"link": "", "title": "Improving the tokenisation of identifier names"}, {"link": "", "title": "Mining Java class naming conventions. In ICSM"}, {"link": "", "title": "Nomen est omen: Analyzing the language of function identifiers. In WCRE"}, {"link": "", "title": "Restructuring program identifier names. In ICSM"}, {"link": "", "title": "A comparison of string distance metrics for name-matching tasks"}, {"link": "", "title": "Concise and consistent naming. Software QualityJournal"}, {"link": "", "title": "Mining source code to automatically split identifiers for software analysis. In MSR"}, {"link": "", "title": "An empirical comparison of techniques for extracting concept abbreviations from identifiers"}, {"link": "", "title": "IEEE Change distilling: Tree differencing for fine-grained source code change extraction. IEEE Transactions on Software Engineering"}, {"link": "", "title": "Debugging method names. In ECOOP"}, {"link": "", "title": "CReN: A tool for tracking copy-and-paste code clones and renaming identifiers consistently in the ID"}, {"link": "", "title": "Renaming parts of identifiers consistently within code clones. In ICPC"}, {"link": "", "title": "Expanding identifiers to normalize source code vocabulary. In ICSM"}, {"link": "", "title": "Normalizing source code vocabulary. In WCRE"}, {"link": "", "title": "What's in a name? a study of identifiers. In ICPC"}, {"link": "", "title": "IEEE Identifying renaming opportunities by expanding conducted rename refactorings. IEEE Transactions on Software Engineering"}, {"link": "", "title": "Wordnet: a lexical database for english. Communications of the ACM"}, {"link": "", "title": "An efficient domain-independent algorithm for detecting approximately duplicate database records"}, {"link": "", "title": "Inferring method specifications from natural language API descriptions. In ICSE"}, {"link": "", "title": "Detecting anomalies in the order of equally-typed method arguments. In ISSTA"}, {"link": "", "title": "IEEE Name-based analysis of equally typed method arguments. IEEE Transactions on Software Engineering"}, {"link": "", "title": "Predicting program properties from \u201cbig code\u201d. In POPL"}, {"link": "", "title": "Code completion with statistical language models. In PLDI"}, {"link": "", "title": "Automated detection of API refactorings in libraries. In ASE"}, {"link": "", "title": ""}, {"link": "", "title": "Automatic parameter recommendation for practical API usage. In ICSE"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation. In ASE"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886980"}
{"ref": [{"link": "", "title": "Clang Compiler User's Manual 3.5"}, {"link": "", "title": "Clang Static Analyzer"}, {"link": "", "title": "GCC Bug #28901"}, {"link": "", "title": "GDB Bug"}, {"link": "", "title": "Options to Request or Suppress Warnings \u2014 GCC"}, {"link": "", "title": ""}, {"link": "", "title": "SuperTest compiler test and validation suite"}, {"link": "", "title": "Why Bother with Compiler Warnings"}, {"link": "", "title": "Introduction to Software Testing"}, {"link": "", "title": "Evaluating static analysis defect warnings on production software"}, {"link": "", "title": "CCG: A random C code generator"}, {"link": "", "title": "Error messages: The neglected area of the man/machine interface"}, {"link": "", "title": "Taming Compiler Fuzzers"}, {"link": "", "title": "SNOOPIE: development of a learning support tool for novice programmers within a conceptual framework"}, {"link": "", "title": "Testing Static Analyzers with Randomly Generated Programs"}, {"link": "", "title": "Empowering students and building confidence in novice programmers through gauntlet"}, {"link": "", "title": "What Would Other Programmers Do: Suggesting Solutions to Error Messages"}, {"link": "/document/1668009", "title": "A Process for Performing Security Code Reviews"}, {"link": "", "title": "Programming Languages-C"}, {"link": "/document/5487526", "title": "An Analysis and Survey of the Development of Mutation Testing"}, {"link": "", "title": "Compiler Validation via Equivalence Modulo Inputs"}, {"link": "", "title": "Finding Deep Compiler Bugs via Guided Stochastic Program Mutation"}, {"link": "", "title": "Randomized Stress-testing of Link-time Optimizers"}, {"link": "", "title": "Searching for Type-error Messages"}, {"link": "", "title": "Testing System Virtual Machines"}, {"link": "", "title": "A methodology for testing cpu emulators"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Berkeley Delta"}, {"link": "", "title": "Scaling up size and number of expressions in random testing of arithmetic optimization of C compilers"}, {"link": "", "title": "Learning Programming (by Humans, by Machine)"}, {"link": "", "title": "Maintainability measurements on industrial source code maintenance activities"}, {"link": "", "title": "The Plum Hall Validation Suite for C"}, {"link": "", "title": "Test-Case Reduction for C Compiler Bugs"}, {"link": "", "title": "Designing computer system messages"}, {"link": "", "title": "On compiler error messages: What they say and what they mean"}, {"link": "", "title": "Finding the Source of Type Errors"}, {"link": "", "title": "Finding and Understanding Bugs in C Compilers"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "Automated Test Program Generation for an Industrial Optimizing Compiler"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886904"}
{"ref": [{"link": "", "title": "Exposing the susceptibility of off-nominal behaviors in reactive system requirements"}, {"link": "", "title": "Validation and Verification (V&V) of Safety-Critical Systems Operating under Off-Nominal Conditions"}, {"link": "", "title": "Ambiguity in natural language requirements documents"}, {"link": "", "title": "PACEMAKER system specification"}, {"link": "", "title": "The COMPASS approach: Correctness, modelling and performability of aerospace systems"}, {"link": "", "title": "Failure Mode, Effects and Criticality Analysis (FMECA)"}, {"link": "", "title": "Modeling Off-Nominal Behavior in SysML"}, {"link": "", "title": "State machine flattening, a mapping study and tools assessment"}, {"link": "", "title": "Failure mode and effects analysis (FMEA) and model-checking of software for embedded systems by sequential scheduling of vectors of logic-labelled finite-state machines"}, {"link": "", "title": "Decision Support Software for Probabilistic Risk Assessment Using Bayesian Networks"}, {"link": "", "title": "Odd-botics"}, {"link": "", "title": "The Need to Specify Requirements for Off-Nominal Behaviors"}, {"link": "", "title": "Improving evaluation and system design through the use of off-nominal testing: A methodology for scenario development"}, {"link": "", "title": "Novel air traffic procedures: investigation of off-nominal scenarios and potential hazards"}, {"link": "", "title": "Formal Development of a Cardiac Pacemaker: From Specification to Code"}, {"link": "", "title": "Inductive system health monitoring"}, {"link": "", "title": "DigitalHome Software Requirements Specification"}, {"link": "", "title": "Assurance Cases in Model-Driven Development of the Pacemaker Software"}, {"link": "", "title": "Modeling and Analysis of Safety in Early Design. Procedia Computer Science"}, {"link": "", "title": "Model-Based Closed-Loop Testing of Implantable Pacemakers"}, {"link": "", "title": "Multi-criteria failure mode effects and criticality analysis method: a comparative case study on aircraft braking system"}, {"link": "", "title": "Deriving Data Dependence from/for UML State Machine Diagrams"}, {"link": "", "title": "Risk-Based Testing of Safety-Critical Embedded Systems Driven by Fault Tree Analysis"}, {"link": "", "title": "Estimating t-Way Fault Profile Evolution During Testing"}, {"link": "", "title": "A graph-based fault identification and propagation framework for functional design of complex systems"}, {"link": "", "title": "A functional failure reasoning methodology for evaluation of conceptual system architectures"}, {"link": "", "title": "Slicing of UML state machines"}, {"link": "", "title": "IPOG/IPOG-D: efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": "Role of software in spacecraft accidents"}, {"link": "", "title": "Automatic Delivery System"}, {"link": "", "title": "Reliability and Sensitivity Analysis of Embedded Systems with Modular Dynamic Fault Trees"}, {"link": "", "title": "Market Research for Requirements Analysis Using Linguistic Tools"}, {"link": "", "title": "Hierarchical Model Exploration for Exposing Off-Nominal Behaviors"}, {"link": "", "title": "Easy approach to requirements syntax (EARS)"}, {"link": "/document/6155138", "title": "Listen, Then Use EARS"}, {"link": "/document/5636542", "title": "Big Ears (The Return of \u201cEasy Approach to Requirements Engineering\u201d)"}, {"link": "", "title": "Pacemaker Formal Methods Challenge"}, {"link": "", "title": "Requirements Specification AB Mail Robot"}, {"link": "", "title": "Requirements Specification AB Mail Robot"}, {"link": "", "title": "Failure mode and effects analysis: an integrated approach for product design and process control"}, {"link": "", "title": "Modeling and Verification of Safety Critical Systems: A Case Study on Pacemaker"}, {"link": "", "title": "The state explosion problem"}, {"link": "/document/681254", "title": "Neural network based fault detection in robotic manipulators"}, {"link": "", "title": "Procedures for Off-Nominal Cases: Very Closely Spaced Parallel Runway Operations"}, {"link": "", "title": "Slicing Hierarchical Automata for Model Checking UML Statecharts"}, {"link": "", "title": "Slicing behavior tree models for verification"}, {"link": "", "title": "Acts: A combinatorial test generation tool"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453169"}
{"ref": [{"link": "", "title": "A simulation tool for efficient analogy based cost estimation"}, {"link": "", "title": "Building A software cost estimation model based on categorical data"}, {"link": "", "title": "A hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering"}, {"link": "", "title": "A comparative study for estimating software development effort intervals"}, {"link": "", "title": "An analysis of the effects of composite objectives in multiobjective software module clustering"}, {"link": "", "title": "Software Cost Prediction with Predefined Interval Estimates"}, {"link": "", "title": "Software effort estimation using machine learning techniques with robust confidence intervals"}, {"link": "", "title": "Classification and Regression Trees"}, {"link": "", "title": "Software resource estimation"}, {"link": "/document/965338", "title": "Modeling development effort in object-oriented systems using design properties"}, {"link": "", "title": "Can genetic programming improve software effort estimation? a comparative evaluation"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences"}, {"link": "", "title": "Search based software engineering: Review and analysis of the field in Brazil"}, {"link": "", "title": "Software engineering metrics and models"}, {"link": "", "title": "How effective is tabu search to configure support vector regression for effort estimation?"}, {"link": "", "title": "Using tabu search to configure support vector regression for effort estimation"}, {"link": "/document/996017", "title": "A fast and elitist multiobjective genetic algorithm: NSGA-II"}, {"link": "/document/879821", "title": "A validation of the component-based method for software size estimation"}, {"link": "", "title": "Using tabu search to estimate software development effort"}, {"link": "", "title": "Genetic programming for effort estimation: An analysis of the impact of different fitness functions"}, {"link": "", "title": "Investigating tabu search for web effort estimation"}, {"link": "", "title": "How multi-objective genetic programming is effective for software development effort estimation?"}, {"link": "", "title": "Not going to take this anymore: Multi-objective overtime planning for software engineering projects"}, {"link": "", "title": "Search-based software project management"}, {"link": "/document/1245300", "title": "A simulation study of the model evaluation criterion MMRE"}, {"link": "", "title": "Ten years of search based software engineering: A bibliometric analysis"}, {"link": "/document/4221631", "title": "The current state and future of search based software engineering"}, {"link": "", "title": "Achievements, open problems and challenges for search based software testing (keynote)"}, {"link": "", "title": "Search based software engineering"}, {"link": "", "title": "Search based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Search based software engineering: Techniques, taxonomy, tutorial"}, {"link": "", "title": "Algorithm 396: Student's t-quantiles"}, {"link": "", "title": "Optimization of analogy weights by genetic algorithm for software effort estimation"}, {"link": "", "title": "A comparative study of cost modelling techniques using public domain multi-organisational and company-specific data"}, {"link": "", "title": "Comments on 'A simulation tool for efficient analogy based cost estimation'"}, {"link": "", "title": "The ignorance of confidence levels in minimum-maximum software development effort interval"}, {"link": "", "title": "A review of studies on expert estimation of software development effort"}, {"link": "", "title": "Combination of software development effort prediction intervals: Why, when and how?"}, {"link": "/document/4027147", "title": "A systematic review of software development cost estimation studies"}, {"link": "", "title": "An effort prediction interval approach based on the empirical distribution of previous estimation accuracy"}, {"link": "", "title": "Better sure than safe? over-confidence in judgement based software development effort prediction intervals"}, {"link": "", "title": "Issues on the effective use of cbr technology for software project prediction"}, {"link": "", "title": "Using simulation to evaluate predictions techniques"}, {"link": "/document/391832", "title": "Case studies for method and tool evaluation"}, {"link": "/document/942859", "title": "What accuracy statistics really measure"}, {"link": "", "title": "A tutorial on the performance assessment of stochastic multiobjective optimizers"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "Size doesn't matter?: On the value of software size features for effort estimation"}, {"link": "/document/6392173", "title": "Active learning and effort estimation: Finding the essential content of software effort estimation data"}, {"link": "/document/6081882", "title": "On the value of ensemble effort estimation"}, {"link": "", "title": ""}, {"link": "/document/5598114", "title": "Ai-based models for software effort estimation"}, {"link": "", "title": "Confidence in software cost estimation results based on mmre and pred"}, {"link": "", "title": "Genetic Programming"}, {"link": "", "title": "Exact mean absolute error of baseline predictor, MARPO"}, {"link": "", "title": "Using genetic programming to improve software effort estimation based on general data sets"}, {"link": "", "title": "What should you optimize when building an estimation model?"}, {"link": "", "title": "An investigation of machine learning based prediction systems"}, {"link": "", "title": "Software Estimation: Demystifying the Black Art"}, {"link": "", "title": "A comparative study of cost estimation models for web hypermedia applications"}, {"link": "", "title": ""}, {"link": "/document/1166928", "title": "Further investigation into the use of cbr and stepwise regression to predict development effort for web hypermedia applications"}, {"link": "", "title": "IEEE TSE"}, {"link": "", "title": ""}, {"link": "", "title": "Special issue on repeatable results in software engineering prediction"}, {"link": "", "title": "ACM TOSEM"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Transformed vargha-delaney effect size"}, {"link": "", "title": ""}, {"link": "", "title": "Comparative studies of the model evaluation criterions mmre and pred in software cost estimation research"}, {"link": "", "title": "IEEE TSE"}, {"link": "", "title": "Applied Statistics"}, {"link": "", "title": "Single and multi objective genetic programming for software development effort estimation"}, {"link": "", "title": "Multinomial logistic regression applied on software productivity prediction"}, {"link": "", "title": "IST"}, {"link": "", "title": "Software project effort estimation using genetic programming"}, {"link": "", "title": "Case-based reasoning and software engineering"}, {"link": "", "title": "On building prediction systems for software engineers"}, {"link": "", "title": "IEEE TSE"}, {"link": "", "title": "IEEE TSE"}, {"link": "", "title": "Evaluating prediction systems in software project estimation"}, {"link": "", "title": "Machine learning approaches for estimation of prediction interval for the model output"}, {"link": "", "title": "Software Engineering"}, {"link": "", "title": "IST"}, {"link": "", "title": "On the use of bayesian belief networks for the prediction of software productivity"}, {"link": "", "title": "EMSE"}, {"link": "", "title": "Software Project Effort Estimation: Foundations and Best Practice Guidelines for Success"}, {"link": "", "title": ""}, {"link": "", "title": "ACM TOSEM"}, {"link": "", "title": "IEEE TEC"}, {"link": "", "title": "IEEE TEC"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886939"}
{"ref": [{"link": "", "title": "The CVM Framework -A Prototype Tool for Compositional Variability Management"}, {"link": "", "title": "Extraction and Evolution of Architectural Variability Models in Plugin-Based Systems"}, {"link": "", "title": "Comparing Approaches to Implement Feature Model Composition"}, {"link": "/document/6100089", "title": "Slicing Feature Models"}, {"link": "", "title": "FAMILIAR: A Domain-Specific Language for Large Scale Management of Feature Models"}, {"link": "", "title": "Composing Your Compositions of Variability Models"}, {"link": "", "title": "Feature-Oriented Software Product Lines: Concepts and Implementation"}, {"link": "", "title": "Feature Models, Grammars, and Propositional Formulas"}, {"link": "", "title": "Automated Analysis of Feature Models 20 Years Later: A Literature Review"}, {"link": "", "title": "FAMA: Tooling a Framework for the Automated Analysis of Feature Models"}, {"link": "", "title": "A Survey of Variability Modeling in Industrial Practice"}, {"link": "", "title": "Aspect-Oriented Feature Models"}, {"link": "", "title": "A Text-based Approach to Feature Modelling: Syntax and Semantics of TVL"}, {"link": "", "title": "Model Checking Lots of Systems: Efficient Verification of Temporal Properties in Software Product Lines"}, {"link": "", "title": "A Relational Model of Data for Large Shared Data Banks"}, {"link": "", "title": "Verifying Feature-Based Model Templates Against Well-Formedness OCL Constraints"}, {"link": "", "title": "Structuring the Modeling Space and Supporting Evolution in Software Product Line Engineering"}, {"link": "", "title": "FLAME: A Formal Framework for the Automated Analysis of Software Product Lines Validated by Automated Specification Testing"}, {"link": "", "title": "A Systematic Analysis of Textual Variability Modeling Languages"}, {"link": "", "title": ""}, {"link": "", "title": "Finding Contradictions in Feature Models"}, {"link": "", "title": "A Systematic Review and an Expert Survey on Capabilities Supporting Multi Product Lines"}, {"link": "", "title": "Towards Multi-View Feature-Based Configuration"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "A Variability-Aware Module System"}, {"link": "", "title": "An Efficient Algorithm for Feature-Model Slicing"}, {"link": "/document/1691581", "title": "New Methods in Software Product Line Development"}, {"link": "", "title": "Model Checking of Domain Artifacts in Product Line Engineering"}, {"link": "", "title": "Interfaces for Modular Feature Verification"}, {"link": "", "title": "Evolution of the Linux Kernel Variability Model"}, {"link": "", "title": "Viewpoint-Oriented Variability Modeling"}, {"link": "", "title": "S.P.L.O.T.: Software Product Lines Online Tools"}, {"link": "", "title": "SAT-Based Analysis of Feature Models is Easy"}, {"link": "", "title": "Automating the Configuration of Multi Software Product Lines"}, {"link": "", "title": "Multi-Dimensional Variability Modeling"}, {"link": "", "title": "Modeling Dependent Software Product Lines"}, {"link": "", "title": "Multi-Perspectives on Feature Models"}, {"link": "", "title": "Feature-Model Interfaces for Compositional Analyses"}, {"link": "", "title": "Towards Modular Analysis of Multi Product Lines"}, {"link": "", "title": "Feature-Context Interfaces: Tailored Programming Interfaces for Software Product Lines"}, {"link": "", "title": "Automated Analysis of Dependent Feature Models"}, {"link": "", "title": "Automated Analysis of Feature Models Using Atomic Sets"}, {"link": "", "title": "BeTTy: Benchmarking and Testing on the Automated Analysis of Feature Models"}, {"link": "", "title": "Configuration Coverage in the Analysis of Large-Scale System Software"}, {"link": "", "title": "Safe Composition of Product Lines"}, {"link": "", "title": "A Classification and Survey of Analysis Strategies for Software Product Lines"}, {"link": "", "title": "FeatureIDE: An Extensible Framework for Feature-Oriented Software Development"}, {"link": "/document/6030061", "title": "Abstract Features in Feature Modeling"}, {"link": "", "title": "Variability Hiding in Contracts for Dependent Software Product Lines"}, {"link": "", "title": "Automated Error Analysis for the Agilization of Feature Modeling"}, {"link": "", "title": "Improving decision making in software product lines product plan management"}, {"link": "", "title": "Abductive Reasoning and Automated Analysis of Feature Models: How are They Connected?"}, {"link": "", "title": "A Propositional Logic-Based Method for Verification of Feature Models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886943"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453136"}
{"ref": [{"link": "", "title": "Expectations, Outcomes and Challenges Of Modern Code Review"}, {"link": "", "title": "Linking E-Mails and Source Code Artifacts"}, {"link": "", "title": "Investigating Technical and Non-Technical Factors Influencing Modern Code Review"}, {"link": "", "title": "Modern Code Reviews in Open-Source Projects: Which Problems Do They Fix?"}, {"link": "", "title": "Fair and Balanced? Bias in Bug-Fix Datasets"}, {"link": "/document/4228663", "title": "Detecting Patch Submission and Acceptance in OSS Projects"}, {"link": "", "title": "Don't Touch My Code! Examining the Effects of Ownership on Software Quality"}, {"link": "", "title": "Characteristics of Useful Code Reviews: An Empirical Study at Microsoft"}, {"link": "", "title": "Merits of Organizational Metrics in Defect Prediction: An Industrial Replication"}, {"link": "/document/5166450", "title": "Software Dependencies, Work Dependencies, and Their Impact on Failures"}, {"link": "", "title": "How Biased is the Apparent Error Rate of a Prediction Rule?"}, {"link": "", "title": "Does a Pro-grammer\u2018s Activity Indicate Knowledge of Code?"}, {"link": "", "title": "A Degree-of-Knowledge Model to Capture Source Code Familiarity"}, {"link": "/document/7180062", "title": "Code Ownership and Software Quality: A Replication Study"}, {"link": "", "title": "Communication in Open Source Software Development Mailing Lists"}, {"link": "", "title": "Who does what during a Code Review? An extraction of an OSS Peer Review Repository"}, {"link": "", "title": "The Meaning and Use of the Area under a Receiver Operating Characteristic Curve"}, {"link": "", "title": "Regression Modeling Strategies: With Application to Liniear Models, Logistic Regression, and Survival Analysis"}, {"link": "", "title": ""}, {"link": "/document/5070510", "title": "Predicting Faults Using the Complexity of Code Changes"}, {"link": "", "title": "Refining code ownership with synchronous changes"}, {"link": "/document/6341763", "title": "A Large-Scale Empirical Study of Just-in-Time Quality Assurance"}, {"link": "", "title": "Beanplot: A Boxplot Alternative for Visual Comparison of Distributions"}, {"link": "", "title": "Classifying Software Changes: Clean or Buggy?"}, {"link": "", "title": "Investigating Code Review Quality: Do People and Participation Matter?"}, {"link": "", "title": "Measures of Clinical Significance"}, {"link": "", "title": "Cliff's Delta Calculator: A Non-parametric Effect Size Program for Two Groups of Observations"}, {"link": "", "title": "An Analysis of Developer Metrics for Fault Prediction"}, {"link": "", "title": "The Impact of Code Review Coverage and Code Review Participation on Software Quality"}, {"link": "", "title": ""}, {"link": "", "title": "An Empirical Investigation of Socio-technical Code Review Metrics and Security Vulnerabilities"}, {"link": "", "title": "Secure Open Source Collaboration: An Empirical Study of Linus' Law"}, {"link": "/document/1007994", "title": "Expertise Browser: A Quantitative Approach to Identify Expertise"}, {"link": "/document/7081827", "title": "Do Code Review Practices Impact Design Quality? A Case Study of the Qt, VTK, and ITK Projects"}, {"link": "", "title": "The Influence of Organizational Structure on Software Quality: An Empirical Case Study"}, {"link": "/document/6976022", "title": "Assessing MCR Discussion Usefulness using Semantic Similarity"}, {"link": "", "title": "Can Developer-Module Networks Predict Failures?"}, {"link": "", "title": "Ownership, Experience and Defects: A Fine-Grained Study of Authorship"}, {"link": "", "title": "Convergent Contemporary Software Peer Review Practices"}, {"link": "", "title": "Peer Review on Open-Source Software Projects: Parameters, Statistical Models, and Theory"}, {"link": "", "title": "Understanding Broadcast Based Peer Review on Open Source Software Projects"}, {"link": "", "title": "Using developer interaction data to compare expertise metrics"}, {"link": "", "title": "Appropriate Statistics for Ordinal Level Data: Should We Really Be Using T-Test and Cohen's d for Evaluating Group Differences on the NSSE and Other Surveys?"}, {"link": "", "title": "The VARCLUS Procedure"}, {"link": "", "title": "Mining Usage Expertise from Version Archives"}, {"link": "/document/5306333", "title": "Studying the Use of Developer IRC Meetings in Open Source Projects"}, {"link": "", "title": "High-Impact Defects: A Study of Breakage and Surprise Defects"}, {"link": "", "title": "What We Have Learned About Fighting Defects"}, {"link": "", "title": "Writing Acceptable Patches: An Empirical Study of Open Source Project Patches"}, {"link": "/document/7180077", "title": "Investigating Code Review Practices in Defective Files: An Empirical Study of the Qt System"}, {"link": "", "title": ""}, {"link": "", "title": "Let's Talk About It: Evaluating Contributions through Discussion in GitHub"}, {"link": "", "title": "Who Should Review This Change? Putting Text and File Location Analyses Together for More Accurate Recommendations"}, {"link": "", "title": "Automatically Recommending Peer Reviewers in Modern Code Review"}, {"link": "/document/6227112", "title": "Characterizing and Predicting Which Bugs Get Reopened"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886978"}
{"ref": [{"link": "", "title": "Enhancing Symbolic Execution with Veritesting"}, {"link": "", "title": "RWset: Attacking path explosion in constraint-based test generation"}, {"link": "", "title": "Heuristics for Scalable Dynamic Test Generation"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "Symbolic Execution for Software Testing: Three Decades Later"}, {"link": "", "title": "Guiding Dynamic Symbolic Execution Toward Unverified Program Executions"}, {"link": "", "title": "Yet another local search method for constraint solving"}, {"link": "", "title": "A concolic test generation tool for C. 2008"}, {"link": "", "title": "Abstraction-driven Concolic Testing"}, {"link": "", "title": "Solving Complex Path Conditions Through Heuristic Search on Induced Polytopes"}, {"link": "", "title": "Feedback-directed Unit Test Generation for C/C++ Using Concolic Execution"}, {"link": "", "title": "Gnu Bug Report (gawk)"}, {"link": "", "title": "Compositional Dynamic Test Generation"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Automated White-box Fuzz Testing"}, {"link": "", "title": "Compositional May-must Program Analysis: Unleashing the Power of Alternation"}, {"link": "", "title": "GNU Bug Report (grep)"}, {"link": "", "title": "Improving Structural Testing of Object-Oriented Programs via Integrating Evolutionary Testing and Symbolic Execution"}, {"link": "", "title": "Boosting Concolic Testing via Interpolation"}, {"link": "", "title": "CAB-Fuzz: Practical Concolic Testing Techniques for COTS Operating Systems"}, {"link": "", "title": "SCORE: A Scalable Concolic Testing Tool for Reliable Embedded Software"}, {"link": "", "title": "Industrial Application of Concolic Testing Approach: A Case Study on Libexif by Using CREST-BV and KLEE"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "Symbolic Execution of Complex Program Driven by Machine Learning Based Constraint Solving"}, {"link": "/document/4222603", "title": "Hybrid Concolic Testing"}, {"link": "", "title": "CarFast: Achieving Higher Statement Coverage Faster"}, {"link": "", "title": "CUTE: A Concolic Unit Testing Engine for C"}, {"link": "", "title": "How We Get There: A Context-guided Search Strategy in Concolic Testing"}, {"link": "", "title": "Driller: Augmenting Fuzzing Through Selective Symbolic Execution"}, {"link": "", "title": "Search-driven String Constraint Solving for Vulnerability Detection"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "Regular Property Guided Dynamic Symbolic Execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453207"}
{"ref": [{"link": "", "title": "Methods for engaging and evaluating users of human computation systems"}, {"link": "", "title": "Counterexample-guided abstraction refinement for symbolic model checking"}, {"link": "", "title": "Using symbolic execution for verifying safety-critical systems"}, {"link": "", "title": "Predicting protein structures with a multiplayer online game"}, {"link": "", "title": "Lessons learned in game development for crowdsourced software formal verification"}, {"link": "", "title": "Using game-design elements in non-gaming contexts"}, {"link": "", "title": "Verification games: Making verification fun"}, {"link": "", "title": "Inductive invariant generation via abductive inference"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Dynamically discovering pointer-based program invariants. Technical Report UW-CSE-99-11-02, Computer Science, Univ. of Washington"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Gamifying program analysis"}, {"link": "", "title": "Ice: A robust framework for learning invariants"}, {"link": "", "title": "Tcas software verification using constraint programming"}, {"link": "", "title": "Phylo: A citizen science approach for improving multiple sequence alignment"}, {"link": "", "title": "Learning invariants using decision trees"}, {"link": "", "title": "CBMC-C bounded model checker"}, {"link": "", "title": "Software verification games: Designing Xylem, The Code of Plants"}, {"link": "", "title": "the formal verification of the tcas conflict resolution algorithms"}, {"link": "", "title": "A survey of the use of crowdsourcing in software engineering"}, {"link": "", "title": "Applications of Craig interpolants in model checking"}, {"link": "", "title": "Dig: a dynamic invariant generator for polynomial and array invariants"}, {"link": "", "title": "Software-artifact infrastructure repository"}, {"link": "", "title": "Gaining wisdom from crowds"}, {"link": "", "title": "From invariant checking to invariant inference using randomized search"}, {"link": "", "title": "Interpolants as classifiers"}, {"link": "", "title": "Using the GNU compiler collection"}, {"link": "", "title": "Photocity: training experts at large-scale image acquisition through a competitive game"}, {"link": "", "title": "Designing games with a purpose"}, {"link": "", "title": "Feedback-driven dynamic invariant discovery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886982"}
{"ref": [{"link": "", "title": "How green are cloud patterns?"}, {"link": "", "title": "Apache commons collections"}, {"link": "", "title": "Apache commons configuration"}, {"link": "", "title": "Commons math: The apache commons mathematics library"}, {"link": "", "title": "The power of system call traces: Predicting the software energy consumption impact of changes"}, {"link": "", "title": "Green tracker: a tool for estimating the energy consumption of software"}, {"link": "", "title": "Wattch: A framework for architectural-level power analysis and optimizations"}, {"link": "/document/5089010", "title": "Exploring the energy consumption of data sorting algorithms in embedded and mobile environments"}, {"link": "", "title": "Choosing the \u201cbest\u201d sorting algorithm for optimal energy consumption"}, {"link": "", "title": "On the energy consumption of design patterns"}, {"link": "", "title": "Power Modeling of Graphical User Interfaces on OLED Displays"}, {"link": "", "title": "Self-constructive high-rate system energy modeling for battery-powered mobile systems"}, {"link": "/document/6224264", "title": "Approximating quality contracts for energy auto-tuning software"}, {"link": "", "title": "Towards energy auto tuning"}, {"link": "", "title": "Google gson"}, {"link": "", "title": "Truth in advertising: The hidden cost of mobile ads for software developers"}, {"link": "", "title": "Detecting Energy Patterns in Software Development"}, {"link": "/document/995705", "title": "Using complete machine simulation for software power estimation: The softwatt approach"}, {"link": "", "title": "Estimating android applications' cpu energy usage via bytecode profiling"}, {"link": "", "title": "Green mining: A methodology of relating software change and configuration to power consumption"}, {"link": "", "title": "Greenminer: a hardware based mining software repositories software energy consumption framework"}, {"link": "", "title": "Characterizing the performance and energy efficiency of lock-free data structures"}, {"link": "", "title": "Optimizing user experience in choosing android applications"}, {"link": "", "title": "Java collections framework"}, {"link": "", "title": "Java parser"}, {"link": "", "title": "K-9 mail"}, {"link": "", "title": "Calculating source line level energy information for android applications"}, {"link": "", "title": "Mining energy-greedy api usage patterns in android apps: an empirical study"}, {"link": "", "title": "Energy consumption analysis of design patterns"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "/document/6606417", "title": "Investigating the impacts of web servers on web application energy usage"}, {"link": "", "title": "The reference manual for the sim-panalyzer version 2.0"}, {"link": "", "title": "Unit testing of energy consumption of software libraries"}, {"link": "", "title": "What do programmers know about the energy consumption of software?"}, {"link": "", "title": "Investigation for software power consumption of code refactoring techniques"}, {"link": "", "title": "Bootstrapping energy debugging on smartphones: a first look at energy bugs in mobile devices"}, {"link": "", "title": "Portable performance on heterogeneous architectures"}, {"link": "", "title": "Mining questions about software energy consumption"}, {"link": "", "title": "Green mining: energy consumption of advertisement blocking methods"}, {"link": "/document/6224257", "title": "Initial explorations on design pattern energy usage"}, {"link": "", "title": "How do code refactorings affect energy usage?"}, {"link": "", "title": "How does code obfuscation impact energy usage?"}, {"link": "/document/6926828", "title": "Instance generator and problem representation to improve object oriented code coverage"}, {"link": "", "title": "Chameleon: Adaptive selection of collections"}, {"link": "", "title": "The atom leap platform for energy-efficient embedded computing"}, {"link": "/document/335012", "title": "Power analysis of embedded software: a first step towards software power minimization"}, {"link": "", "title": ""}, {"link": "", "title": "T.j. watson libraries for analysis (wala)"}, {"link": "", "title": ""}, {"link": "", "title": "Energy consumption and efficiency in mobile applications: A user feedback study"}, {"link": "", "title": ""}, {"link": "", "title": "The design and use of simplepower: a cycle-accurate energy estimation tool"}, {"link": "", "title": "The impact of user choice on energy consumption"}, {"link": "", "title": "Accurate Online Power Estimation and Automatic Battery Behavior Based Power Model Generation for Smartphones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886906"}
{"ref": [{"link": "", "title": "A Diary Study of Work-related Reading: Design Implications for Digital Reading Devices"}, {"link": "/document/4343771", "title": "Evaluating the Usefulness and Ease of Use of a Groupware Tool for the Software Architecture Evaluation Process"}, {"link": "", "title": "Social foundations of thought and action: a social cognitive theory"}, {"link": "", "title": "Novice Software Developers, All over Again"}, {"link": "", "title": "Who is Going to Mentor Newcomers in Open Source Projects?"}, {"link": "", "title": "Reliability and Validity Assessment"}, {"link": "", "title": "Developing the computer user self-efficacy (CUSE) scale: investigating the relationship between computer self-efficacy, gender and experience with computers"}, {"link": "/document/1463229", "title": "Hipikat: a project memory for software development"}, {"link": "", "title": "A Diary Study of Task Switching and Interruptions"}, {"link": "", "title": "Moving into a new software project landscape"}, {"link": "", "title": "Older Adults and Free/Open Source Software: A Diary Study of First-Time Contributors"}, {"link": "", "title": "Perceived Usefulness, Perceived Ease of Use, and User Acceptance of Information Technology"}, {"link": "", "title": "Belief, attitude, intention and behavior: An introduction to theory and research"}, {"link": "", "title": "Producing Open Source Software: How to Run a Successful Free Software Project"}, {"link": "", "title": "Don't Bite the Newbies: How Reverts Affect the Quantity and Quality of Wikipedia Work"}, {"link": "/document/927045", "title": "Working for free? Motivations of participating in open source projects"}, {"link": "", "title": "Explore Social Behavior Around Rich-media: A Structured Diary Study"}, {"link": "", "title": "Using Students as Subjects \u2014 A Comparative Study of Students and Professionals in Lead-Time Impact Assessment"}, {"link": "", "title": "Joining Free/Open Source Software Communities: An Analysis of Newbies' First Interactions on Project Mailing Lists"}, {"link": "", "title": "The Onion Patch: Migration in Open Source Ecosystems"}, {"link": "", "title": "Mylar: A Degree-of-interest Model for IDEs"}, {"link": "", "title": "A meta-analysis of the technology acceptance model"}, {"link": "", "title": "The Challenges of Dealing with Newcomers"}, {"link": "", "title": "Editorial: Special issue on open source software development"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: A case study"}, {"link": "/document/731237", "title": "Evaluating the usefulness and the ease of use of a Web-based inspection data collection tool"}, {"link": "", "title": "A Source Code Recommender System to Support Newcomers"}, {"link": "", "title": "Evolution Patterns of Open-source Software Systems and Communities"}, {"link": "", "title": "Psychology of Computer Use"}, {"link": "", "title": "Supporting the learning process of open source novices: an evaluation of code and project history visualization tools"}, {"link": "/document/5336433", "title": "Beyond pretty pictures: Examining the benefits of code visualization for open source newcomers"}, {"link": "/document/7476635", "title": "More Common Than You Think: An In-Depth Study of Casual Contributors"}, {"link": "", "title": "Socialization in Open Source Software Projects: A Growth Mixture Modeling Approach"}, {"link": "", "title": "The Diary Study: A Workplace-oriented Research Tool to Guide Laboratory Efforts"}, {"link": "", "title": "Using students as experiment subjects-an analysis on graduate and freshmen student data"}, {"link": "", "title": "Are Students Representatives of Professionals in Software Engineering Experiments?"}, {"link": "/document/999088", "title": "Understanding the requirements for developing open source software systems"}, {"link": "", "title": "Who Will Remain? An Evaluation of Actual Person-Job and Person-Team Fit to Predict Developer Retention in FLOSS Projects"}, {"link": "", "title": "If at first you don't succeed: Effects of failure on general and task-specific self-efficacy and performance"}, {"link": "", "title": "Supporting newcomers to overcome the barriers to contribute to open source software projects"}, {"link": "/document/6943482", "title": "Preliminary empirical identification of barriers faced by newcomers to Open Source Software projects"}, {"link": "", "title": "Social Barriers Faced by Newcomers Placing Their First Contribution in Open Source Software Projects"}, {"link": "", "title": "Social Barriers Faced by Newcomers Placing Their First Contribution in Open Source Software Projects"}, {"link": "", "title": "A systematic literature review on the barriers faced by newcomers to open source software projects"}, {"link": "", "title": "Why do newcomers abandon open source software projects?"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Qualitative research diaries"}, {"link": "", "title": "Empirical Assessments of a tool to support Web usability inspection"}, {"link": "", "title": "The n00b Wikipedia Editing Experience"}, {"link": "", "title": "Which bug should I fix: helping new developers onboard a new project"}, {"link": "", "title": "Toward an Understanding of the Motivation Open Source Software Developers"}, {"link": "/document/6227164", "title": "What make long term contributors: Willingness and opportunity in OSS community"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886910"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453175"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453067"}
{"ref": [{"link": "", "title": "Syntax-Guided Synthesis"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "Automated Software Transplantation"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "Angelic debugging"}, {"link": "", "title": "Z3: An Efficient SMT Solver"}, {"link": "", "title": "Automatic Repair of Real Bugs: An Experience Report on the Defects4J Dataset"}, {"link": "", "title": "Babel Pidgin: SBSE Can Grow and Graft Entirely New Functionality into a Real World System"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "Conditional equivalence"}, {"link": "", "title": "Repairing Programs with Semantic Code Search"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "SYMDIFF: A Language-Agnostic Semantic Diff Tool for Imperative Programs"}, {"link": "", "title": "Automatic Root-causing for Program Equivalence Failures in Binaries"}, {"link": "", "title": "JFIX: semantics-based repair of Java programs via symbolic PathFinder"}, {"link": "", "title": "A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for $8 Each"}, {"link": "", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "", "title": "GenProg: A generic method for automatic software repair"}, {"link": "", "title": "Code optimization techniques for embedded processors: Methods, algorithms, and tools"}, {"link": "", "title": "IPv6 Core Protocols Implementation"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "/document/6227146", "title": "Make test-zesti: A symbolic execution solution for improving regression testing"}, {"link": "", "title": "Mining software repair models for reasoning on the search space of automated program fixing"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "SemFix: Program Repair via Semantic Analysis"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Using Genetic Improvement and Code Transplants to Specialise a C++ Program to a Problem Class"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "CodeCarbonCopy"}, {"link": "", "title": "Automatic Error Elimination by Horizontal Code Transfer Across Multiple Applications"}, {"link": "", "title": "Solving the Search for Source Code"}, {"link": "", "title": "Code search with input/output queries: Generalizing, ranking, and assessment"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "Codeflaws: a programming competition benchmark for evaluating automated program repair tools"}, {"link": "", "title": "Anti-patterns in search-based program repair"}, {"link": "", "title": "Parameterized unit tests"}, {"link": "", "title": "Busybox Website"}, {"link": "", "title": "GNU Coreutils Website"}, {"link": "", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Automatically Finding Patches Using Genetic Programming"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs"}, {"link": "", "title": "Better test cases for better automated program repair"}, {"link": "", "title": "Correlation of Test-suite Metrics with Patch Quality in Program Repair"}, {"link": "", "title": "Yesterday, My Program Worked. Today, It Does Not. Why?"}, {"link": "", "title": "Automated transplantation and differential testing for clones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453071"}
{"ref": [{"link": "", "title": "The heartbleed bug"}, {"link": "", "title": ""}, {"link": "", "title": "Corebench: Studying complexity of regression errors"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Detecting and escaping infinite loops with Jolt"}, {"link": "", "title": "Angelic debugging"}, {"link": "/document/1029005", "title": "Pinpoint: Problem determination in large, dynamic internet services"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with SMT"}, {"link": "", "title": "Inference and enforcement of data structure consistency specifications"}, {"link": "", "title": "Juzi: a tool for repairing complex data structures"}, {"link": "", "title": "Fixing recurring crash bugs via analyzing Q&A sites"}, {"link": "", "title": "Specification-based program repair using SAT"}, {"link": "", "title": "GenProg ICSE2012 benchmark"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "", "title": "Automated debugging using path-based weakest preconditions"}, {"link": "", "title": "ICSE"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Program repair as a game"}, {"link": "", "title": "Minthint: Automated synthesis of repair hints"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Automated error localization and correction for imperative programs"}, {"link": "", "title": "ESEC-FSE"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "A critical review of \u201cAutomatic Patch Generation Learned from Human-written Patches\u201d: Essay on the problem statement and the evaluation of automatic software repair"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Exterminator: Automatically correcting memory errors with high probability. Commun."}, {"link": "", "title": "Software testing: A research travelogue (2000\u20132014)"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Falling back on executable specifications"}, {"link": "/document/6227186", "title": "Automated repair of HTML generation errors in PHP applications using string constraint solving"}, {"link": "/document/1556535", "title": "IEEE Security and Privacy"}, {"link": "", "title": "DIRA: automatic detection, identification and repair of control-hijacking attacks"}, {"link": "", "title": "Is the cure worse than the disease? Overfitting in automated program repair"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886945"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/5571951", "title": "Detection of deadlock potentials in multithreaded programs"}, {"link": "", "title": "Scalable dynamic deadlock analysis of multi-threaded programs"}, {"link": "", "title": "Confirmation of deadlock potential detected by runtime analysis"}, {"link": "/document/6747310", "title": "ASN: A Dynamic barrier-based approach to confirmation of deadlocks from warnings for large-scale multithreaded programs"}, {"link": "/document/6718069", "title": "Magiclock: scalable detection of potential deadlocks in large-scale multithreaded programs"}, {"link": "/document/6227156", "title": "MagicFuzzer: scalable deadlock detection for large-scale applications"}, {"link": "", "title": "ConLock: A constraint-based approach to dynamic checking on deadlocks in multithreaded programs"}, {"link": "", "title": "BIFER: a biphasic trace filter approach to scalable prediction of concurrency errors. Frontiers of Computer Science (FCS)"}, {"link": "/document/5431749", "title": "Symbolic deadlock analysis in concurrent libraries and their clients"}, {"link": "", "title": "Sherlock: scalable deadlock detection for concurrent programs"}, {"link": "", "title": "A type and effect system for deadlock avoidance in low-level languages"}, {"link": "", "title": "Dynamic deadlock avoidance in systems code using statically inferred effects"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "/document/6227211", "title": "A systematic study of automated program repair: fixing 55 out of 105 bugs for $8 each"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automated software repair"}, {"link": "", "title": "Preventing database deadlocks in applications"}, {"link": "", "title": "Testing database-centric applications for causes of database deadlocks"}, {"link": "", "title": "Using runtime analysis to guide model checking of java programs"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Automated concurrency-bug fixing"}, {"link": "", "title": "An effective dynamic analysis for detecting generalized deadlocks"}, {"link": "", "title": "A randomized dynamic program analysis technique for detecting real deadlocks"}, {"link": "", "title": "Deadlock immunity: enabling systems to defend against deadlocks"}, {"link": "", "title": "Reasoning about threads communicating via locks"}, {"link": "", "title": "Eliminating concurrency bugs with control engineering. Computer"}, {"link": "", "title": "ConcBugAssist: Constraint solving for diagnosis and repair of concurrency bugs"}, {"link": "", "title": "Deadlock detection in distributed database systems"}, {"link": "", "title": "Automatic repair for multithreaded programs with Deadlock/Livelock using maximum satisfiability"}, {"link": "/document/6227184", "title": "Axis: automatically fixing atomicity violations through solving control constraints"}, {"link": "", "title": "Grail: context-aware fixing of concurrency bugs"}, {"link": "/document/1281665", "title": "LLVM: a compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Learning from mistakes: a comprehensive study on real world concurrency bug characteristics"}, {"link": "", "title": "MulticoreSDK: a practical and efficient deadlock detector for real-world applications"}, {"link": "", "title": ""}, {"link": "", "title": "Deadlocks: from exhibiting to healing"}, {"link": "", "title": "Debugging non-deadlock concurrency bugs"}, {"link": "", "title": "Automatic program repair by fixing contracts"}, {"link": "", "title": "Fully automatic and precise detection of thread safety violations"}, {"link": "", "title": "Avoiding deadlock avoidance"}, {"link": "", "title": "Rx: treating bugs as allergies a safe method to survive software failures"}, {"link": "", "title": "Scalable and precise dynamic datarace detection for structured parallelism"}, {"link": "", "title": "Trace driven dynamic deadlock detection and reproduction"}, {"link": "", "title": "Multithreaded test synthesis for deadlock detection"}, {"link": "", "title": "CUTE andjCUTE: concolic unit testing and explicit path model-checking tools"}, {"link": "", "title": "Deadlock-detection in java-library using static-analysis"}, {"link": "", "title": "PENELOPE: weaving threads to expose atomicity violations"}, {"link": "", "title": "Test-driven repair of data races in structured parallel programs"}, {"link": "", "title": "Gadara: dynamic deadlock avoidance for multithreaded programs"}, {"link": "", "title": "Accentuating the positive: Atomicity inference and enforcement using correct executions"}, {"link": "", "title": "Automatic program repair with evolutionary computation"}, {"link": "", "title": "Static deadlock detection for java libraries"}, {"link": "", "title": "Ad hoc synchronization considered harmful"}, {"link": "", "title": "How do fixes become bugs"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "ConAir: featherweight concurrency bug recovery via single-threaded idempotent execution"}, {"link": "", "title": "Understanding and identifying latent data races cross-thread interleaving"}, {"link": "/document/6227210", "title": "where should the bugs be fixed? - more accurate information-retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886984"}
{"ref": [{"link": "", "title": "Dex2jar"}, {"link": "", "title": "Google play crawler"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Detecting energy bugs and hotspots in mobile apps"}, {"link": "", "title": "Ecodroid: An approach for energy-based ranking of android apps"}, {"link": "", "title": "Spdy protocol"}, {"link": "", "title": "Reducing energy consumption using genetic improvement"}, {"link": "", "title": "Is http/2 more energy efficient than http/1.1 for mobile users?"}, {"link": "", "title": "Power Modeling of Graphical User Interfaces on OLED Displays"}, {"link": "/document/6148235", "title": "Chameleon: A Color-Adaptive Web Browser for Mobile OLED Displays"}, {"link": "", "title": "Detecting energy leaks in android app with poem"}, {"link": "/document/6606553", "title": "Reran: Timing- and touch-sensitive record and replay for android"}, {"link": "", "title": "Making the web faster with http 2.0"}, {"link": "", "title": "Lightweight measurement and estimation of mobile ad energy consumption"}, {"link": "", "title": "Truth in advertising: The hidden cost of mobile ads for software developers"}, {"link": "", "title": "Characterizing and detecting resource leaks in android applications"}, {"link": "/document/6606555", "title": "Estimating Mobile Application Energy Consumption Using Program Analysis"}, {"link": "/document/6224303", "title": "Green mining: A methodology of relating software change to power consumption"}, {"link": "", "title": "Towards understanding modern web traffic"}, {"link": "/document/6605939", "title": "Energy efficiency in testing and regression testing - a comparison of dvfs techniques"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "An Investigation Into Energy-Saving Programming Practices for Android Smartphone App Development"}, {"link": "", "title": "Optimizing Energy of HTTP Requests in Android Applications"}, {"link": "", "title": "An Empirical Study of the Energy Consumption of Android Applications"}, {"link": "", "title": "Calculating Source Line Level Energy Information for Android Applications"}, {"link": "", "title": "String Analysis for Java and Android Applications"}, {"link": "", "title": "Making Web Applications More Energy Efficient for OLED Smartphones"}, {"link": "", "title": "On the energy overhead of mobile storage systems"}, {"link": "", "title": "Optimizing energy consumption of guis in android apps: A multi-objective approach"}, {"link": "", "title": "Mining energy-greedy api usage patterns in android apps: an empirical study"}, {"link": "", "title": "Where has my battery gone? finding sensor related energy black holes in smartphone applications"}, {"link": "/document/6815752", "title": "Greendroid Automated diagnosis of energy inefficiency for smartphone applications"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "", "title": "Empowering developers to estimate app energy consumption"}, {"link": "", "title": "Advanced compiler design implementation"}, {"link": "", "title": "Network performance effects of http/1.1, css 1, and png"}, {"link": "", "title": "Ape: An annotation language and middleware for energy-efficient mobile application development"}, {"link": "", "title": "What is keeping my phone awake?: characterizing and detecting no-sleep energy bugs in smartphone apps"}, {"link": "", "title": "How does code obfuscation impact energy usage?"}, {"link": "", "title": "Detecting display energy hotspots in android apps"}, {"link": "/document/7448479", "title": "Comparative evaluation of spin-transfer-torque and magnetoelectric random access memory"}, {"link": "/document/6529130", "title": "Evaluation of digital circuit-level variability in inversion-mode and junctionless finfet technologies"}, {"link": "/document/6742991", "title": "Proceed: A pareto optimization-based circuit-level evaluator for emerging devices"}, {"link": "", "title": "Proceed: A pareto optimization-based circuit-level evaluator for emerging devices"}, {"link": "", "title": "Android-apktool: A tool for reverse engineering android apk files"}, {"link": "", "title": "Symbolic String Verification: An Automata-Based Approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886908"}
{"ref": [{"link": "/document/1251044", "title": "A Bayesian Belief Network for Assessing the Likelihood of Fault Content"}, {"link": "", "title": "Learning Deep Architectures for AI"}, {"link": "", "title": "Latent dirichlet allocation"}, {"link": "", "title": "Explaining software defects using topic models"}, {"link": "/document/295895", "title": "A Metrics Suite for Object Oriented Design"}, {"link": "", "title": "Multi-column deep neural networks for image classification"}, {"link": "", "title": "Candidate metrics for object-oriented software within a taxonomy framework"}, {"link": "", "title": "Predicting defect-prone software modules using support vector machines"}, {"link": "", "title": "Feature selection using decision tree induction in class level metrics dataset for software defect predictions"}, {"link": "", "title": "Elements of Software Science (Operating and programming systems series)"}, {"link": "/document/689404", "title": "An evaluation of the mood set of object-oriented software metrics"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "It's not a bug, it's a feature: how misclassification impacts bug prediction"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "A fast learning algorithm for deep belief nets"}, {"link": "", "title": "Reducing the dimensionality of data with neural networks"}, {"link": "", "title": "Personalized defect prediction"}, {"link": "", "title": "Heterogeneous cross-company defect prediction by unified metric representation and cca-based transfer learning"}, {"link": "", "title": "Dictionary learning based software defect prediction"}, {"link": "/document/1011339", "title": "Tree-based software quality estimation models for fault prediction"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "Recurrent neural network based language modeling in meeting recognition"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "", "title": "Combining deep learning with information retrieval to localize buggy files for bug reports"}, {"link": "", "title": "Micro interactionmetrics for defect prediction"}, {"link": "", "title": "Pr-miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "Modeling class cohesion as mixtures of latent topics"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Predicting failures with developer networks and social network analysis"}, {"link": "", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "Defect prediction from static code features: current results, limitations, new approaches"}, {"link": "", "title": "A scalable hierarchical distributed language model"}, {"link": "", "title": "Investigation of full-sequence training of deep belief networks for speech recognition"}, {"link": "", "title": "Acoustic modeling using deep belief networks"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "", "title": "TBCNN: A tree-based convolutional neural network for programming language processing"}, {"link": "/document/4343764", "title": "Using software dependencies and churn metrics to predict field failures: An empirical case study"}, {"link": "", "title": "Heterogeneous defect prediction"}, {"link": "/document/6606584", "title": "Transfer defect learning"}, {"link": "", "title": "A guided tour to approximate string matching"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Duplicate bug report detection with a combination of information retrieval and topic modeling"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Topic-based defect prediction"}, {"link": "", "title": "Programmer-based fault prediction"}, {"link": "/document/5640675", "title": "Domain adaptation via transfer component analysis"}, {"link": "", "title": "Malware classification with recurrent networks"}, {"link": "", "title": "Can developer-module networks predict failures?"}, {"link": "", "title": "How, and why, process metrics are better"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Semantic hashing"}, {"link": "/document/6737243", "title": "Application of deep belief networks for natural language understanding"}, {"link": "", "title": "Fuzzy set and cache-based approach for bug triaging"}, {"link": "", "title": "Online defect prediction for imbalanced data"}, {"link": "", "title": "The impact of mislabelling on the performance and interpretation of defect prediction models"}, {"link": "", "title": "Naive bayes software defect prediction model"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "/document/6319220", "title": "Compressed c4.5 models for software defect prediction"}, {"link": "", "title": "Adapting a fault prediction model to allow inter languagereuse"}, {"link": "", "title": "Using developer information as a factor for fault prediction"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}, {"link": "", "title": "Dretom: Developer recommendation based on topic models for bug resolution"}, {"link": "", "title": "Deep learning for just-in-time defect prediction"}, {"link": "", "title": "Droid-sec: Deep learning in android malware detection"}, {"link": "", "title": "Predicting defects for eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886912"}
{"ref": [{"link": "", "title": "Analysis of Safety-Critical Computer Failures in Medical Devices"}, {"link": "", "title": "Formal verification of hybrid systems"}, {"link": "", "title": "Symbolic analysis for improving simulation coverage of Simulink/Stateflow models"}, {"link": "", "title": "HYST: A Source Transformation and Translation Tool for Hybrid Automaton Models"}, {"link": "", "title": "Software testing techniques"}, {"link": "", "title": "An Operational Semantics for Simulink's Simulation Engine"}, {"link": "", "title": "Mutation-Based Test Case Generation for Simulink Models"}, {"link": "", "title": "An Empirical Comparison of Compiler Testing Techniques"}, {"link": "", "title": "Static Profile and Dynamic Behavior of Cobol Programs"}, {"link": "", "title": "Project Homepage"}, {"link": "", "title": "CyFuzz: A differential testing framework for cyber-physical systems development environments"}, {"link": "", "title": "An empirical study of Java bytecode programs"}, {"link": "", "title": "Introduction To Algorithms"}, {"link": "", "title": "JCrasher: An automatic robustness tester for Java"}, {"link": "", "title": "Simulink Models Are Also Software: Modularity Assessment"}, {"link": "", "title": "Model Clone Detection in Practice"}, {"link": "", "title": "Fuzzing the Rust Type-checker Using CLP"}, {"link": "/document/4544862", "title": "A Survey of Automated Techniques for Formal Software Verification"}, {"link": "", "title": "Data Type Propagation in Simulink Models with Graph Transformation"}, {"link": "", "title": "Comparing algorithms for search-based test data generation of Matlab Simulink models"}, {"link": "", "title": "Approximate Simulation Relations for Hybrid Systems"}, {"link": "", "title": "An Empirical Investigation into a Large-scale Java Open Source Code Repository"}, {"link": "/document/918276", "title": "Rapid prototyping of an EEG-based brain-computer interface (BCI)"}, {"link": "", "title": "An operational semantics for Stateflow"}, {"link": "", "title": "Fuzzing with Code Fragments"}, {"link": "", "title": "RUGRAT: Evaluating program analysis and testing tools and compilers with large generated random benchmark applications"}, {"link": "", "title": "Benchmarks for Model Transformations and Conformance Checking"}, {"link": "", "title": "Generating and Analyzing Symbolic Traces of Simulink/Stateflow Models"}, {"link": "", "title": "An Empirical Study of FORTRAN Programs"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Many-core Compiler Fuzzing"}, {"link": "", "title": "Improving fault localization for Simulink models using search-based testing and prediction models"}, {"link": "", "title": "SimCoTest: A test suite generation tool for Simulink/Stateflow controllers"}, {"link": "", "title": "Differential Testing for Software"}, {"link": "", "title": "An Empirical Study of the Reliability of Unix Utilities"}, {"link": "", "title": "Sound Test-Suites for Cyber-Physical Systems"}, {"link": "", "title": "Cyber-Physical Specification Mismatches"}, {"link": "", "title": "Runtime Verification of Model-based Development Environments"}, {"link": "", "title": "Tailoring complexity metrics for Simulink models"}, {"link": "", "title": "Software engineering practices and Simulink: bridging the gap"}, {"link": "", "title": "Complete and accurate clone detection in graph-based models"}, {"link": "", "title": "Grid-Connected PV Array-File Exchange-Matlab Central"}, {"link": "", "title": "CoGenTe: A tool for code generator testing"}, {"link": "", "title": "A multiple UAV simulation for researchers"}, {"link": "", "title": "Introducing jsfunfuzz"}, {"link": "", "title": "Testing Model-Processing Tools for Embedded Systems"}, {"link": "", "title": "Automated validation of software models"}, {"link": "", "title": "Model-based test-case generation for Simulink/Stateflow using dependency graph approach"}, {"link": "", "title": "Test suite design for code generation tools"}, {"link": "", "title": "Systematic Testing of Model-Based Code Generators"}, {"link": "", "title": "An Empirical Exploration of the Distributions of the Chidamber and Kemerer Object-Oriented Metrics Suite"}, {"link": "", "title": "The Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies"}, {"link": "", "title": "NASA HL-20 Lifting Body Airframe-Matlab & Simulink"}, {"link": "", "title": "Simulink Documentation"}, {"link": "", "title": "Recall 11-702: Fire Alarm Control Panels Recalled by Fire-Lite Alarms Due to Alert Failure"}, {"link": "", "title": "Defect Information Report 14V-053"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing: Planning report 02-3"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "/document/4425860", "title": "An Empirical Study of Class Sizes for Large Java Systems"}, {"link": "", "title": "Formal Verification of Simulink/Stateflow Diagrams"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453177"}
{"ref": [{"link": "/document/6311410", "title": "Software architecture optimization methods: A Systematic literature review"}, {"link": "", "title": "Analysing the fitness landscape of search-based software testing problems"}, {"link": "/document/5210118", "title": "A systematic review of the application and empirical investigation of search-based test case generation"}, {"link": "", "title": "Feature-oriented software product lines-Concepts and implementation"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "Feature models, grammars, and propositional formulas"}, {"link": "", "title": "Search based software maintenance: Methods and tools"}, {"link": "", "title": "Automated analysis of feature models 20 years later: A literature review"}, {"link": "", "title": "What is a feature?: a qualitative study of features in industrial software product lines"}, {"link": "/document/6572787", "title": "A study of variability models and languages in the systems software domain"}, {"link": "", "title": "The Sat4j library, release 2. 2"}, {"link": "", "title": "Analyzing hypervolume indicator based algorithms"}, {"link": "", "title": "Software product lines: Practices and patterns"}, {"link": "", "title": "The evolutionary landscape of SBST: A 10 year perspective"}, {"link": "", "title": "Generative programming: Methods, tools, and applications"}, {"link": "", "title": "Towards a quick computation of well-spread Pareto-optimal solutions"}, {"link": "", "title": "Featured model-based mutation analysis"}, {"link": "", "title": "jMetal: A Java framework for multiobjective optimization"}, {"link": "", "title": "The jMetal framework for multi-objective optimization: Design and architecture"}, {"link": "", "title": "Automated configuration support for infrastructure migration to the cloud"}, {"link": "", "title": "Evaluating improvements to a meta-heuristic search for constrained interaction testing"}, {"link": "", "title": "A worst-case analysis of constraint-based algorithms for exact multi-objective combinatorial optimization"}, {"link": "", "title": "SMTIBEA: a hybrid multiobjective optimization algorithm for configuring large constrained software product lines"}, {"link": "", "title": "A genetic algorithm for optimized feature selection with resource constraints in software product lines"}, {"link": "", "title": "Scaling exact multi-objective combinatorial optimization by parallelization"}, {"link": "/document/4221631", "title": "The current state and future of search based software engineering"}, {"link": "", "title": "Search based software engineering for software product line engineering: A survey and directions for future work"}, {"link": "", "title": "Search-based software engineering"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Investigating the effect of \u201cdefect co-fix\u201d on quality assurance resource allocation: A search-based approach"}, {"link": "", "title": "Comparing white-box and black-box test prioritization"}, {"link": "", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "Multi-objective test generation for software product lines"}, {"link": "", "title": "SIP: Optimal product selection from feature models using many-objective evolutionaryoptimization"}, {"link": "", "title": "Modified distance calculation in generational distance and inverted generational distance"}, {"link": "", "title": "Learning combinatorial interaction test generation strategies using hyperheuristic search"}, {"link": "", "title": "Feature-oriented domain analysis (FODA) feasibility study"}, {"link": "", "title": "An empirical investigation of single-objective and multiobjective evolutionary algorithms for developer's assignment to bugs"}, {"link": "", "title": "Search-based detection of model level changes"}, {"link": "", "title": "Towards multi-decision-maker requirements prioritisation via multi-objective optimisation"}, {"link": "", "title": "On metrics for comparing nondominated sets"}, {"link": "", "title": "Is there a mismatch between real-world feature models and product-line research?"}, {"link": "/document/7582553", "title": "The value of exact analysis in requirements selection"}, {"link": "", "title": "Stochastic optimization of program obfuscation"}, {"link": "", "title": "Nonconformity resolving recommendations for product line configuration"}, {"link": "", "title": "An exploratory study for software change prediction in object-oriented systems using hybridized techniques"}, {"link": "", "title": "Using exploration focused techniques to augment search-based software testing: An experimental evaluation"}, {"link": "", "title": "Automated search for good coverage criteria: moving from code coverage to fault coverage through search-based software engineering"}, {"link": "", "title": "On essential configuration complexity: measuring interactions in highly-configurable systems"}, {"link": "/document/7065312", "title": "Where do configuration constraints stem from? An extraction approach and an empirical study"}, {"link": "", "title": "Comparison of exact and approximate multi-objective optimization for software product lines"}, {"link": "", "title": "Improved crossover operators for genetic programming for program repair"}, {"link": "", "title": "MORE: A multi-objective refactoring recommendation approach to introducing design patterns and fixing code smells"}, {"link": "", "title": "Coevolution of variability models and related artifacts: A case study from the Linux kernel"}, {"link": "", "title": "Co-evolution of variability models and related software artifacts-A fresh look at evolution patterns in the Linux kernel"}, {"link": "/document/7081752", "title": "Practical combinatorial interaction testing: Empirical findings on efficiency and early fault detection"}, {"link": "", "title": "Minimizing the stakeholder dissatisfaction risk in requirement selection for next release planning"}, {"link": "", "title": "Software product line engineering: Foundations, principles, and techniques"}, {"link": "", "title": "A survey on search-based software design"}, {"link": "", "title": "Variability testing in the wild: the Drupal case study"}, {"link": "", "title": "Multi-objective software effort estimation"}, {"link": "", "title": "Optimum feature selection in software product lines: Let your model and values guide your search"}, {"link": "/document/6693104", "title": "Scalable product line configuration: A straw to break the camel's back"}, {"link": "", "title": "On the value of user preferences in search-based software engineering: A case study in software product lines"}, {"link": "", "title": "Automated metamorphic testing of variability analysis tools"}, {"link": "", "title": "A guided genetic algorithm for automated crash reproduction"}, {"link": "", "title": "Optimizing selection of competing features via feedback-directed evolutionary algorithms"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "Twenty-eight years of component-based software engineering"}, {"link": "", "title": "A critique and improvement of the CL common language effect size statistics of McGraw and Wong"}, {"link": "", "title": "Filtered cartesian flattening: An approximation technique for optimally selecting features while adhering to resource constraints"}, {"link": "", "title": "An optimization model for reuse scenario selection considering reliability and cost in software product line development"}, {"link": "", "title": "Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software"}, {"link": "", "title": "IBED: Combining IBEA and DE for optimal feature selection in software product line engineering"}, {"link": "", "title": "Pareto efficient multi-objective test case selection"}, {"link": "", "title": "Search based requirements optimisation: Existing work and challenges"}, {"link": "", "title": "Indicator-based selection in multiobjective search"}, {"link": "/document/1197687", "title": "Performance assessment of multiobjective optimizers: An analysis and review"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453181"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453073"}
{"ref": [{"link": "", "title": "Software verification competition 2015"}, {"link": "", "title": "Dana Angluin. Learning regular sets from queries and counterexamples"}, {"link": "", "title": "Dana Angluin. Queries and concept learning"}, {"link": "", "title": "CPAchecker: A tool for configurable software verification"}, {"link": "", "title": "Angluin-style learning of NFA"}, {"link": "", "title": "Piegdon. libalf: The automata learning framework"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "Learning the language of error"}, {"link": "", "title": "Learning minimal separating DFA's for compositional verification"}, {"link": "", "title": "A tool for checking ANSI-C programs"}, {"link": "", "title": "Learning assumptions for compositional verification"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "Property testing and its connection to learning and approximation"}, {"link": "", "title": "An introduction to computational learning theory"}, {"link": "", "title": "Statistical model checking: An overview"}, {"link": "", "title": "Report on the program AMoRE"}, {"link": "", "title": "Scott McPeak Shree Prakash Rahul, and West Weimer. CIL: Intermediate language and tools for analysis and transformation of C programs"}, {"link": "", "title": "Inference of finite automata using homing sequences"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "Statistical model checking of black-box probabilistic systems"}, {"link": "", "title": "A theory of the learnable"}, {"link": "", "title": "Neil Walkinshaw. Assessing test adequacy for black-box systems without specifications"}, {"link": "", "title": "Clarke. Bayesian statistical model checking with application to Stateflow/Simulink verification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886947"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453144"}
{"ref": [{"link": "", "title": "Types for safe locking: Static race detection for Java"}, {"link": "", "title": "Type discovery for Parameterized Race-Free Java"}, {"link": "", "title": "Checking and inferring local non-aliasing"}, {"link": "/document/7372054", "title": "Static analysis of implicit control flow: Resolving Java reflection and Android intents"}, {"link": "", "title": "K-Java: A complete semantics of Java"}, {"link": "", "title": "Ownership types for safe programming: Preventing data races and deadlocks"}, {"link": "", "title": "A parameterized type system for race-free Java programs"}, {"link": "", "title": "The Checker Framework Manual: Custom pluggable types for Java"}, {"link": "", "title": "Ownership types for flexible alias protection"}, {"link": "", "title": "Expressing checkable properties of dynamic systems: the Bandera Specification Language"}, {"link": "", "title": "Universes for race safety"}, {"link": "", "title": "Extended static checking"}, {"link": "", "title": "Generic Universe Types"}, {"link": "", "title": "Semantics for locking specifications"}, {"link": "", "title": "Type-based race detection for Java"}, {"link": "", "title": "Type inference against races"}, {"link": "", "title": "Thread-modular verification for shared-memory programs"}, {"link": "", "title": "Extended static checking for Java"}, {"link": "", "title": "A type and effect system for atomicity"}, {"link": "", "title": "Design Patterns"}, {"link": "", "title": "A type and effect system for deadlock avoidance in low-level languages"}, {"link": "", "title": "Java Concurrency in Practice"}, {"link": "", "title": "Efficient Android Threading"}, {"link": "", "title": "Static lock capabilities for deadlock freedom"}, {"link": "", "title": "The Java Language Specification"}, {"link": "", "title": "Type-safe multithreading in Cyclone"}, {"link": "", "title": "JSR305 @GuardedBy specification"}, {"link": "", "title": "GPredict: Generic predictive concurrency analysis"}, {"link": "", "title": "JSR 308 Expert Group. Annotations on Java types"}, {"link": "", "title": "The Julia static analyzer"}, {"link": "", "title": "JML Reference Manual"}, {"link": "", "title": "A behavioral notion of subtyping"}, {"link": "", "title": "Formal specification of Java concurrency to assist software verification"}, {"link": "", "title": "Structural lock correlation with ownership types"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "NASA. Java PathFinder"}, {"link": "", "title": "Definite expression aliasing analysis for Java bytecode"}, {"link": "", "title": "Object-oriented type inference"}, {"link": "", "title": "Practical pluggable types for Java"}, {"link": "", "title": "Concurrency is hot, try the JCIP annotations"}, {"link": "", "title": "A structural approach to operational semantics"}, {"link": "", "title": "Extending JML for modular specification and verification of multi-threaded programs"}, {"link": "", "title": "Dynamic inference of polymorphic lock types"}, {"link": "", "title": "Automatic Information Organization and Retrieval"}, {"link": "", "title": "Class analyses as abstract interpretations of trace semantics"}, {"link": "", "title": "Warlock: A static data race analysis tool"}, {"link": "", "title": "Scalable propagation-based call graph construction algorithms"}, {"link": "", "title": "Static deadlock detection for Java libraries"}, {"link": "/document/5076650", "title": "Assuring lock usage in multithreaded programs with fractional permissions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886986"}
{"ref": [{"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "/document/6606576", "title": "Partition-based regression verification"}, {"link": "", "title": "Regression tests to expose change interaction errors"}, {"link": "", "title": "Corebench: Studying complexity of regression errors"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Shadow symbolic execution for better testing of evolving software"}, {"link": "", "title": "Symbolic execution for software testing: three decades later"}, {"link": "", "title": "Delta execution for efficient state-space exploration of object-oriented programs"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Program slicing-based regression testing techniques"}, {"link": "", "title": "A practical tutorial on modified condition/decision coverage"}, {"link": "", "title": "Safe software updates via multi-version execution"}, {"link": "", "title": "Varan the Unbelievable: An efficient N-version execution framework"}, {"link": "", "title": "Shared execution for efficiently testing product lines"}, {"link": "", "title": "Program element matching for multi-version program analyses"}, {"link": "", "title": "Patch verification via multiversion interprocedural control flow graphs"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "High-coverage symbolic patch testing"}, {"link": "/document/6227146", "title": "make test-zesti: A symbolic execution solution for improving regression testing"}, {"link": "", "title": "KATCH: High-coverage testing of software patches"}, {"link": "", "title": "Covrig: A framework for the analysis of code, test, and coverage evolution in real software"}, {"link": "", "title": "TACHYON: Tandem execution for efficient live patch testing"}, {"link": "", "title": "Abstract semantic differencing via speculative correlation"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Test-suite augmentation for evolving software"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "AddressSanitizer: A fast address sanity checker"}, {"link": "", "title": "eXpress: guided path exploration for efficient regression test generation"}, {"link": "", "title": "Efficient online validation with delta execution"}, {"link": "", "title": "Directed test suite augmentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886990"}
{"ref": [{"link": "", "title": "Random search for hyperparameter optimization"}, {"link": "/document/1618375", "title": "Software Defect Prediction Using Regression via Classification"}, {"link": "", "title": "Is cross-validation valid for small-sample microarray classification?"}, {"link": "", "title": "Statistical Power Analysis for the Behavioral Sciences"}, {"link": "", "title": "A power primer"}, {"link": "", "title": "An Extensive Comparison of Bug Prediction Approaches"}, {"link": "", "title": "Evaluating Defect Prediction Approaches: A Benchmark and an Extensive Comparison"}, {"link": "", "title": "Estimating the Error Rate of a Prediction Rule: Improvement on Cross-Validation"}, {"link": "", "title": "An Introduction to the Bootstrap"}, {"link": "", "title": "Do we Need Hundreds of Classifiers to Solve Real World Classification Problems?"}, {"link": "", "title": "Neuralnet: Training of neural networks"}, {"link": "", "title": "Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models"}, {"link": "", "title": "An investigation of the effect of module size on defect prediction using static measures"}, {"link": "", "title": "The WEKA data mining software: an update"}, {"link": "/document/6035727", "title": "A Systematic Literature Review on Fault Prediction Performance in Software Engineering"}, {"link": "", "title": "Search based software engineering: Techniques, taxonomy, tutorial"}, {"link": "", "title": "Regression Modeling Strategies"}, {"link": "/document/5128907", "title": "Learning from Imbalanced Data"}, {"link": "", "title": "The ScottKnott Clustering Algorithm"}, {"link": "", "title": "Learning Combinatorial Interaction Test Generation Strategies using Hyperheuristic Search"}, {"link": "", "title": "Techniques for evaluating fault prediction models"}, {"link": "", "title": "Can Data Transformation Help in the Detection of Fault-prone Modules?"}, {"link": "/document/4027147", "title": "A Systematic Review of Software Development Cost Estimation Studies"}, {"link": "", "title": "Towards identifying software project clusters with regard to defect prediction"}, {"link": "", "title": "Finding conclusion stability for selecting the best effort predictor in software effort estimation"}, {"link": "", "title": "Dealing with Noise in Defect Prediction"}, {"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "Building Predictive Models in R Using caret Package"}, {"link": "", "title": "\n            "}, {"link": "", "title": "caret: Classification and regression training"}, {"link": "", "title": "Software defect prediction using ensemble learning on selected features"}, {"link": "/document/4527256", "title": "Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings"}, {"link": "", "title": "randomforest: Breiman and cutler's random forests for classification and regression"}, {"link": "", "title": "bigrf: Big random forests: Classification and regression forests for large data sets"}, {"link": "", "title": "version 8.5.0 (R2015a)"}, {"link": "", "title": "Replication of Defect Prediction Studies: Problems, Pitfalls and Recommendations"}, {"link": "", "title": "Revisiting the evaluation of defect prediction models"}, {"link": "/document/4812760", "title": "Evaluating Defect Prediction Models for a Large Evolving Software System"}, {"link": "", "title": "The Promise Repository of Empirical Software Engineering Data"}, {"link": "", "title": "Special issue on repeatable results in software engineering prediction"}, {"link": "/document/6235961", "title": "Ranking and Clustering Software Cost Estimation Models through a Multiple Comparisons Algorithm"}, {"link": "/document/1438374", "title": "Reliability and Validity in Comparative Studies of Software Prediction Models"}, {"link": "", "title": "Distribution-free multiple comparisons"}, {"link": "", "title": "Scikit-learn: Machine learning in python"}, {"link": "", "title": "A Simulation Study of the Number of Events per Variable in Logistic Regression Analysis"}, {"link": "", "title": "R: A language and environment for statistical computing"}, {"link": "", "title": "How, and why, process metrics are better"}, {"link": "", "title": "nnet: Feed-forward neural networks and multinomial log-linear models"}, {"link": "/document/6824804", "title": "Researcher Bias: the Use of Machine Learning in Software Defect Prediction"}, {"link": "/document/6464273", "title": "Data quality Some comments on the NASA software defect datasets"}, {"link": "", "title": "The Impact of Parameter Tuning on Software Effort Estimation Using Learning Machines"}, {"link": "/document/5611551", "title": "A General Software Defect-Proneness Prediction Framework"}, {"link": "", "title": "Towards a Better Understanding of the Impact of Experimental Components on Defect Prediction Modelling"}, {"link": "", "title": "The Impact of Mislabelling on the Performance and Interpretation of Defect Prediction Models"}, {"link": "", "title": "An Empirical Comparison of Model Validation Techniques for Defect Prediction Model"}, {"link": "", "title": "Comments on \u201cResearcher Bias: the Use of Machine Learning in Software Defect Prediction\u201d"}, {"link": "", "title": "effsize: Efficient effect size computation"}, {"link": "/document/5316006", "title": "Reducing false alarms in software defect prediction by decision threshold optimization"}, {"link": "", "title": "On the dataset shift problem in software engineering prediction models"}, {"link": "", "title": "Comparing negative binomial and recursive partitioning models for fault prediction"}, {"link": "", "title": "ReLink: Recovering Links between Bugs and Changes"}, {"link": "/document/4402214", "title": "Predicting Subsystem Failures using Dependency Graph Complexities"}, {"link": "", "title": "Cross-project defect prediction"}, {"link": "", "title": "Predicting Defects for Eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886914"}
{"ref": [{"link": "", "title": "On the surprising behavior of distance metrics in high dimensional space"}, {"link": "", "title": "What is wrong with topic modeling? (and how to fix it using search-based se)"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "MAHAKIL: Diversity based Oversampling Approach to Alleviate the Class Imbalance Issue in Software Defect Prediction"}, {"link": "", "title": "Putting it all together: Using socio-technical networks to predict failures"}, {"link": "", "title": "A systematic review of software fault prediction studies"}, {"link": "", "title": "SMOTE: synthetic minority over-sampling technique"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "Tuning PID controller with multiobjective differential evolution"}, {"link": "", "title": "An extensive comparison of bug prediction approaches"}, {"link": "", "title": "Pattern classification"}, {"link": "", "title": "An introduction to the bootstrap"}, {"link": "", "title": "Predicting defect-prone software modules using support vector machines"}, {"link": "", "title": "Easy over Hard: A Case Study on Deep Learning"}, {"link": "", "title": "Revisiting unsupervised learning for defect prediction"}, {"link": "", "title": "Tuning for software analytics: Is it really necessary?"}, {"link": "", "title": "Revisiting the impact of classification techniques on the performance of defect prediction models"}, {"link": "", "title": "Applying machine learning to software fault-proneness prediction"}, {"link": "", "title": "Using the support vector machine as a classification method for software defect prediction with static code metrics"}, {"link": "", "title": "Not my bug! and other reasons for software bug report reassignments"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "Predicting faults using the complexity of code changes"}, {"link": "/document/5128907", "title": "Learning from imbalanced data"}, {"link": "", "title": "An investigation on the feasibility of cross-project defect prediction"}, {"link": "", "title": "Techniques for evaluating fault prediction models"}, {"link": "", "title": "Can data transformation help in the detection of fault-prone modules?"}, {"link": "", "title": "Variance analysis in software fault prediction models"}, {"link": "", "title": "The effects of over and under sampling on fault-prone module detection"}, {"link": "", "title": "Attribute selection and imbalanced data: Problems in software defect prediction"}, {"link": "", "title": "Dealing with noise in defect prediction"}, {"link": "", "title": "Less is More: Minimizing Code Reorganization using XTREE"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "", "title": "Sample-based software defect prediction with active and semi-supervised learning"}, {"link": "", "title": "Towards a theory for integration of mathematical verification and empirical testing"}, {"link": "", "title": "Revisiting the evaluation of defect prediction models"}, {"link": "", "title": "Problems with Precision: A Response to comments on'data mining static code attributes to learn defect predictors'"}, {"link": "", "title": "How Good is Your Blind Spot Sampling Policy"}, {"link": "/document/4027145", "title": "Data mining static code attributes to learn defect predictors"}, {"link": "", "title": "Sharing data and models in software engineering"}, {"link": "", "title": "Defect prediction from static code features: current results, limitations, new approaches"}, {"link": "", "title": "Practical large scale what-if queries: Case studies with software risk assessment"}, {"link": "", "title": "Implications of ceiling effects in defect predictors"}, {"link": "/document/6235961", "title": "Ranking and clustering software cost estimation models through a multiple comparisons algorithm"}, {"link": "", "title": "Static analysis tools as early indicators of pre-release defect density"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Differential evolution methods for unsupervised image classification"}, {"link": "", "title": "Synthetic Minority oversampling technique (SMOTE) for predicting software build outcomes"}, {"link": "", "title": "Scikit-learn: Machine learning in Python"}, {"link": "/document/4271036", "title": "Applying novel resampling strategies to software defect prediction"}, {"link": "/document/6156808", "title": "Evaluating stratification alternatives to improve software defect prediction"}, {"link": "/document/6419712", "title": "Balancing privacy and utility in cross-company defect prediction"}, {"link": "", "title": "Better cross company defect prediction"}, {"link": "", "title": "Software fault prediction metrics: A systematic literature review"}, {"link": "", "title": "Comparing Static Bug Finders and Statistical Prediction (ICSE)"}, {"link": "", "title": "Better Predictors for Issue Lifetime"}, {"link": "", "title": "Cross-validation"}, {"link": "", "title": "Finding defective modules from highly unbalanced datasets"}, {"link": "/document/6824804", "title": "Researcher bias: The use of machine learning in software defect prediction"}, {"link": "", "title": "Differential evolution-a simple and efficient heuristic for global optimization over continuous spaces"}, {"link": "", "title": "Measuring the accuracy of diagnostic systems"}, {"link": "", "title": "Online defect prediction for imbalanced data"}, {"link": "", "title": "Automated parameter optimization of classification techniques for defect prediction models"}, {"link": "", "title": "Empirical evaluation of the effects of mixed project data on learning defect predictors"}, {"link": "", "title": "Experimental perspectives on learning from imbalanced data"}, {"link": "", "title": "A comparative study of differential evolution, particle swarm optimization, and evolutionary algorithms on numerical benchmark problems"}, {"link": "/document/382180", "title": "Software testability: The new verification"}, {"link": "/document/6509481", "title": "Using class imbalance learning for software defect prediction"}, {"link": "", "title": "Software defect prediction using fuzzy support vector regression"}, {"link": "", "title": "The Performance Stability of Defect Prediction Models with Class Imbalance: An Empirical Study"}, {"link": "/document/4288196", "title": "Comments on Data Mining Static Code Attributes to Learn Defect Predictors"}, {"link": "", "title": "Predicting defects using network analysis on dependency graphs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453183"}
{"ref": [{"link": "", "title": "RefDistiller: A Refactoring Aware Code Review Tool for Inspecting Manual Refactoring Edits"}, {"link": "", "title": "Deriving Metric Thresholds from Benchmark Data"}, {"link": "", "title": "SATT: Tailoring Code Metric Thresholds for Different Software Architectures"}, {"link": "", "title": "An Automatic Approach to identify Class Evolution Discontinuities"}, {"link": "", "title": "Refactoring support for class library migration"}, {"link": "", "title": "When Does a Refactoring Induce Bugs? An Empirical Study"}, {"link": "", "title": "An Experimental Investigation on the Innate Relationship Between Quality and Refactoring"}, {"link": "", "title": "Comparison of Similarity Metrics for Refactoring Detection"}, {"link": "", "title": "Towards a Taxonomy of Software Change"}, {"link": "", "title": "Mirror of Apache Cassandra"}, {"link": "", "title": "On the Impact of Refactoring Operations on Code Quality Metrics"}, {"link": "/document/7588121", "title": "A Framework for Evaluating the Results of the SZZ Approach for Identifying Bug-Introducing Changes"}, {"link": "", "title": "Comparing text-based and dependence-based approaches for determining the origins of bugs"}, {"link": "", "title": "Deep Learning for Java, Scala & Clojure on Hadoop & Spark"}, {"link": "", "title": "Finding Refactorings via Change Metrics"}, {"link": "", "title": "Untangling fine-grained code changes"}, {"link": "", "title": "Automated Upgrading of Component-based Applications"}, {"link": "", "title": "Automated Detection of Refactorings in Evolving Components"}, {"link": "", "title": "The Future of Refactoring (Dagstuhl Seminar 14211)"}, {"link": "", "title": "How Do APIs Evolve? A Story of Refactoring"}, {"link": "/document/4509441", "title": "Effective Software Merging in the Presence of Object-Oriented Refactorings"}, {"link": "", "title": "Identifying thresholds for object-oriented software metrics"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "/document/6178890", "title": "DPB: A Benchmark for Design Pattern Detection Tools"}, {"link": "", "title": "Automatic Metric Thresholds Derivation for Code Smell Detection"}, {"link": "", "title": "Comparing and Experimenting Machine Learning Techniques for Code Smell Detection"}, {"link": "", "title": "WitchDoctor: IDE support for real-time auto-completion of refactorings"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Fluent Interface"}, {"link": "/document/4493309", "title": "Towards a Benchmark for Evaluating Design Pattern Miner Tools"}, {"link": "/document/6227192", "title": "Reconciling Manual and Automatic Refactoring"}, {"link": "", "title": "Manual Refactoring Changes with Automated Refactoring Validation"}, {"link": "", "title": "Towards Refactoring-aware Code Review"}, {"link": "", "title": "Refactoring-Aware Code Review"}, {"link": "/document/1401931", "title": "Using Origin Analysis to Detect Merging and Splitting of Source Code Entities"}, {"link": "/document/1421036", "title": "Detecting and visualizing refactorings from software archives"}, {"link": "", "title": "Program Restructuring As an Aid to Software Maintenance"}, {"link": "", "title": "Open Source In-Memory Data Grid"}, {"link": "", "title": "Empirical Evaluation of Software Maintainability Based on a Manually Validated Refactoring Dataset"}, {"link": "", "title": "CatchUp!: capturing and replaying refactorings to support API evolution"}, {"link": "", "title": "Web Container & Clients"}, {"link": "", "title": "A Manually Validated Code Refactoring Dataset and Its Assessment Regarding Software Maintainability"}, {"link": "/document/1019480", "title": "CCFinder: A Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code"}, {"link": "", "title": "Non-essential Changes in Version Histories"}, {"link": "", "title": "An Empirical Investigation into the Role of API-level Refactorings During Software Evolution"}, {"link": "", "title": "Ref-Finder: A Refactoring Reconstruction Tool Based on Logic Query Templates"}, {"link": "", "title": "Automatic Identification of Bug-Introducing Changes"}, {"link": "", "title": "Standing on the shoulders of giants-A data fusion approach to design pattern detection"}, {"link": "", "title": "N-gram Similarity and Distance"}, {"link": "", "title": "Binary codes capable of correcting deletions, insertions, and reversals"}, {"link": "", "title": "Supporting requirements traceability through refactoring"}, {"link": "", "title": "Supporting Requirements to Code Traceability Through Refactoring"}, {"link": "", "title": "Refactoring Benchmark"}, {"link": "/document/7513412", "title": "ARENA: An Approach for the Automated Generation of Release Notes"}, {"link": "/document/6112738", "title": "How We Refactor, and How We Know It"}, {"link": "", "title": "A Comparative Study of Manual and Automated Refactorings"}, {"link": "", "title": "Is It Dangerous to Use Version Control Histories to Study Source Code Evolution?"}, {"link": "", "title": "Graphs for Everyone"}, {"link": "", "title": "Extracting relative thresholds for source code metrics"}, {"link": "", "title": "Refactoring Object-oriented Frameworks"}, {"link": "/document/7956962", "title": "An Exploratory Study on the Relationship Between Changes and Refactoring"}, {"link": "", "title": "Template-based reconstruction of complex refactorings"}, {"link": "", "title": "An empirical investigation into the impact of refactoring on regression testing"}, {"link": "", "title": "Why We Refactor? Confessions of GitHub Contributors"}, {"link": "/document/7957951", "title": "RefDiff: Detecting Refactorings in Version Histories"}, {"link": "", "title": "When Do Changes Induce Fixes?"}, {"link": "", "title": "Comparing Approaches to Analyze Refactoring Activity on Software Repositories"}, {"link": "", "title": "Circumventing Refactoring Masking Using Fine-grained Change Recording"}, {"link": "", "title": "RefactoringMiner"}, {"link": "", "title": "Refactoring Oracle"}, {"link": "", "title": "There and back again: Can you compile that snapshot?"}, {"link": "", "title": "Refacto ring Test Code"}, {"link": "", "title": "Are Refactorings Less Error-prone Than Other Changes?"}, {"link": "", "title": "Identifying Refactorings from Source-Code Changes"}, {"link": "", "title": "Cascading"}, {"link": "", "title": "SZZ Revisited: Verifying when Changes Induce Fixes"}, {"link": "", "title": "UMLDiff: An Algorithm for Object-oriented Design Differencing"}, {"link": "/document/4023996", "title": "Refactoring Detection Based on UMLD-iff Change-Facts Queries"}, {"link": "", "title": "API-Evolution Support with Diff-CatchUp"}, {"link": "", "title": "The JDEvAn Tool Suite in Support of Object-oriented Evolutionary Development"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453111"}
{"ref": [{"link": "/document/4812752", "title": "Analyzing the evolution of the source code vocabulary"}, {"link": "", "title": "American National Standard for Information Systems - programming language - C: ANSI X3"}, {"link": "", "title": "The commenting practice of open source"}, {"link": "", "title": "Programmers are people, too"}, {"link": "/document/6606617", "title": "Expectations outcomes, and challenges of modern code review"}, {"link": "", "title": "Software maintenance and evolution: A roadmap"}, {"link": "/document/5332232", "title": "Learning a metric for code readability"}, {"link": "", "title": "Exploring the influence of identifier names on code quality An empirical study"}, {"link": "", "title": "Recommended C style and coding standards"}, {"link": "", "title": "Models for the evolution of OS projects"}, {"link": "", "title": "Characteristics of open source projects"}, {"link": "", "title": "Register allocation & spilling via graph coloring"}, {"link": "", "title": "Go to statement considered harmful"}, {"link": "/document/895984", "title": "Does code decay? Assessing the evidence from change management data"}, {"link": "/document/1158288", "title": "An empirical analysis of C preprocessor use"}, {"link": "/document/4400153", "title": "Do code and comments co-evolve? On the relation between source code and comment changes"}, {"link": "", "title": "Style\u2014Kernel Source File Style Guide"}, {"link": "", "title": "SuperC: Parsing all of C by taming the preprocessor"}, {"link": "", "title": "Evolution in open source software: A case study"}, {"link": "", "title": "Conducting quantitative software engineering studies with Alitheia Core"}, {"link": "", "title": "The evolution of the laws of software evolution: A discussion based on a systematic literature review"}, {"link": "/document/1642624", "title": "The power of 10: rules for developing safety-critical code"}, {"link": "", "title": "International Organization for Standardization Programming Languages \u2014 C. ISO, Geneva, Switzerland"}, {"link": "", "title": "Examining the evolution of code comments in PostgreSQL"}, {"link": "", "title": "Metrics and Models in Software Quality Engineering"}, {"link": "", "title": "The Elements of Programming Style"}, {"link": "", "title": "On understanding laws, evolution, and conservation in the large-program life cycle"}, {"link": "", "title": "Program Evolution: Processes of Software Change"}, {"link": "", "title": "Rules and tools for software evolution planning and management"}, {"link": "/document/637156", "title": "Metrics and laws of software evolution - the nineties view"}, {"link": "", "title": "Software life cycle management based on a phase distinction method"}, {"link": "", "title": "When flexible routines meet flexible technologies: Affordance, constraint, and the imbrication of human and material agencies"}, {"link": "", "title": "Analyzing the discipline of preprocessor annotations in 30 million lines of C code"}, {"link": "", "title": "Understanding code containing preprocessor constructs"}, {"link": "/document/5696765", "title": "Fifty years of Moore's law"}, {"link": "", "title": "Code Complete: A Practical Handbook of Software Construction"}, {"link": "", "title": "Program indentation and comprehensibility"}, {"link": "", "title": "The Elements of C++ Style"}, {"link": "/document/5069476", "title": "Amassing and indexing a large sample of version control systems: Towards the census of public source code history"}, {"link": "/document/296790", "title": "Software aging"}, {"link": "", "title": "Java generics adoption: How new features are introduced, championed, or ignored"}, {"link": "", "title": "A simpler model of software readability"}, {"link": "", "title": "The Art of Unix programming"}, {"link": "", "title": "noalias comments to X3J11. Usenet Newsgroup comp.lang.c"}, {"link": "", "title": "The development of the C language"}, {"link": "/document/6312866", "title": "The source code control system"}, {"link": "", "title": "Code convention adherence in evolving software"}, {"link": "", "title": "#ifdef considered harmful or portability experience with C news"}, {"link": "/document/1245303", "title": "Global analysis and transformations in preprocessed languages"}, {"link": "", "title": "Code Quality: The Open Source Perspective"}, {"link": "", "title": "tale of four kernels. In W. Sch\u00e4fer M. B. Dwyer, and V. Gruhn, editors"}, {"link": "/document/7180118", "title": "A repository with 44 years of Unix evolution"}, {"link": "", "title": "Tools and techniques for analyzing product and process data. In T. Menzies, C. Bird, and T. Zimmermann, editors"}, {"link": "", "title": "An exploratory study on the evolution of C programming in the Unix operating system. In Q. Wang and G. Rube editors"}, {"link": "", "title": ""}, {"link": "", "title": "Sun Microsystems, Inc. Java code conventions"}, {"link": "", "title": "GNU parallel: The command-line power tool"}, {"link": "/document/6178856", "title": "Understanding structural complexity evolution: A quantitative analysis"}, {"link": "/document/6407467", "title": "Quantifying software's impact"}, {"link": "", "title": "The documentary structure of source code"}, {"link": "", "title": "The Elements of Java Style"}, {"link": "", "title": "Generalized Additive Models: An Introduction with R"}, {"link": "", "title": "Fast stable restricted maximum likelihood and marginal likelihood estimation of semiparametric generalized linear models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886953"}
{"ref": [{"link": "", "title": "Software clone detection: A systematic review"}, {"link": "", "title": "Cloc: Count lines of code"}, {"link": "", "title": "Ambient Software Evoluton Group. IJaDataset 2.0"}, {"link": "", "title": "A program for identifying duplicated code"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "", "title": "An empirical assessment of bellon's clone benchmark"}, {"link": "/document/1617373", "title": "A primitive operator for similarity joins in data cleaning"}, {"link": "", "title": "Achieving accuracy and scalability simultaneously in detecting application clones on android markets"}, {"link": "", "title": "The txl programming language"}, {"link": "", "title": "The nicad clone detector"}, {"link": "", "title": ""}, {"link": "/document/5069483", "title": "Code siblings: technical and legal implications of copying code between applications"}, {"link": "/document/4812755", "title": "Incremental clone detection"}, {"link": "", "title": "Reverse engineering variability in source code using clone detection: A case study for linux variants of consumer electronic devices"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Index-based code clone detection:incremental, distributed, scalable"}, {"link": "/document/6385134", "title": "Inter-project functional clone detection toward building libraries - an empirical study on 13,000 projects"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "/document/1019480", "title": "Ccfinder: a multilinguistic token-based code clone detection system for large scale source code"}, {"link": "", "title": "Shinobi: A tool for automatic code clone detection in the ide"}, {"link": "", "title": "Internet-scale real-time code clone search via multi-level indexing"}, {"link": "/document/6178897", "title": "Large-scale inter-system clone detection using suffix trees"}, {"link": "", "title": "Instant code clone search"}, {"link": "/document/4222573", "title": "Very-large scale code clone analysis and visualization of open source programs using distributed ccfinder: D-ccfinder"}, {"link": "", "title": "Software clone detection: A systematic review"}, {"link": "/document/4976382", "title": "A mutation/injection-based automatic framework for evaluating code clone detection tools"}, {"link": "", "title": "The vision of software clone management: Past, present, and future (keynote paper)"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "Near-miss function clones in open source software: An empirical study"}, {"link": "", "title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach"}, {"link": "", "title": "A parallel and efficient approach to large scale code clone detection"}, {"link": "/document/6976121", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "/document/6613037", "title": "Scaling classical clone detection tools for ultra-large datasets: An exploratory study"}, {"link": "", "title": "Big data clone detection using classical detectors: an exploratory study"}, {"link": "", "title": "Evaluating modern clone detection tools"}, {"link": "", "title": "Evaluating clone detection tools with bigclonebench"}, {"link": "/document/6613033", "title": "A mutation analysis based benchmarking framework for clone detectors"}, {"link": "/document/1287259", "title": "Problems creating task-relevant clone detection reference data"}, {"link": "", "title": "Searching for better configurations: A rigorous approach to clone evaluation"}, {"link": "", "title": "Efficient similarity joins for near duplicate detection"}, {"link": "", "title": "Understanding bag-of-words model: a statistical framework"}, {"link": "", "title": "Selective Studies and the Principle of Relative Frequency in Language"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886988"}
{"ref": [{"link": "", "title": "Automated grading of DFA constructions"}, {"link": "", "title": "Natural language interfaces to databases \u2014 an introduction"}, {"link": "", "title": "Learning regular sets from queries and counterexamples"}, {"link": "", "title": "Programming in natural language: \u201cNLC\u201d as a prototype"}, {"link": "", "title": "Nonlinear Programming"}, {"link": "", "title": "Pattern recognition and machine learning"}, {"link": "", "title": "Watch What I Do: Programming by Demonstration"}, {"link": "", "title": "Expanding the scope of the atis task: The atis-3 corpus"}, {"link": "", "title": "Benchmarks for program synthesis using natural language"}, {"link": "", "title": "An efficient boosting algorithm for combining preferences"}, {"link": "", "title": "A statistical semantic parser that integrates syntax and semantics"}, {"link": "", "title": "Dimensions in program synthesis"}, {"link": "", "title": "Automating string processing in spreadsheets using input-output examples"}, {"link": "", "title": "Synthesis from examples: Interaction models and algorithms"}, {"link": "", "title": "Flash Fill: Excel 2013 Feature"}, {"link": "", "title": "Example-based learning in computer-aided stem education"}, {"link": "", "title": "Spreadsheet data manipulation using examples"}, {"link": "", "title": "Synthesis of loop-free programs"}, {"link": "", "title": "Synthesizing geometry constructions"}, {"link": "", "title": "NLyze: Interactive programming by natural language for spreadsheet data analysis and manipulation"}, {"link": "", "title": "Spreadsheet table transformations from examples"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Wrangler: Interactive visual specification of data transformation scripts"}, {"link": "", "title": "Using string-kernels for learning semantic parsers"}, {"link": "", "title": "Learning to transform natural to formal languages"}, {"link": "", "title": "Accurate unlexicalized parsing"}, {"link": "", "title": "Lexical generalization in CCG grammar induction for semantic parsing"}, {"link": "", "title": "Programming by demonstration using version space algebra"}, {"link": "", "title": "Smartsynth: Synthesizing smartphone automation scripts from natural language"}, {"link": "", "title": "Learning dependency-based compositional semantics"}, {"link": "", "title": "Your Wish Is My Command: Programming by Example"}, {"link": "", "title": "Koala: Capture, share, automate, personalize business processes on the web"}, {"link": "", "title": "Translating keyword commands into executable code"}, {"link": "", "title": "Keyword programming in Java"}, {"link": "", "title": "A deductive approach to program synthesis"}, {"link": "", "title": "A corpus of scope-disambiguated english text"}, {"link": "", "title": "User interaction models for disambiguation in programming by example"}, {"link": "", "title": "Wordnet: A lexical database for english"}, {"link": "", "title": "Learning for semantic parsing"}, {"link": "", "title": "Natural language interfce for database: A brief review"}, {"link": "", "title": "Type-directed completion of partial expressions"}, {"link": "", "title": "Grounded unsupervised semantic parsing"}, {"link": "", "title": "Modern natural language interfaces to databases: Composing statistical parsing with semantic tractability"}, {"link": "", "title": "Towards a theory of natural language interfaces to databases"}, {"link": "", "title": "NaturalJava: A natural language interface for programming in Java"}, {"link": "", "title": "Ranking. Modified competition ranking (\u201c1334\u201d ranking)"}, {"link": "", "title": "Compositional program synthesis from natural language and examples"}, {"link": "", "title": "Learning semantic string transformations from examples"}, {"link": "", "title": "Synthesizing number transformations from input-output examples"}, {"link": "", "title": "Program synthesis by sketching"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "From program verification to program synthesis"}, {"link": "", "title": "Stanford parser \u2014 2.0.2"}, {"link": "", "title": "Jungloid mining: Helping to navigate the API jungle"}, {"link": "", "title": "A colorful approach to text processing by example"}, {"link": "", "title": "Learning to map sentences to logical form: Structured classification with probabilistic categorial grammars"}, {"link": "", "title": "Online learning of relaxed CCG grammars for parsing to logical form"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886916"}
{"ref": [{"link": "", "title": "Instance-based learning algorithms"}, {"link": "/document/6233404", "title": "Harnessing Stack Overflow for the IDE"}, {"link": "/document/6676925", "title": "Task-driven software summarization"}, {"link": "", "title": "A scalable MMR approach to sentence scoring for multi-document update summarization"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "Who asked what: Integrating crowdsourced FAQs into API documentation"}, {"link": "", "title": "Recommending reference API documentation"}, {"link": "/document/6233418", "title": "Context-based recommendation to support problem solving in software development"}, {"link": "/document/6878435", "title": "Using traceability links to recommend adaptive changes for documentation evolution"}, {"link": "", "title": "Ranking crowd knowledge to assist software development"}, {"link": "", "title": "Improving API documentation usability with knowledge pushing"}, {"link": "", "title": "Apatite: A new interface for exploring APIs"}, {"link": "", "title": "Lexrank: Graph-based lexical centrality as salience in text summarization"}, {"link": "", "title": "An extensive empirical study of feature selection metrics for text classification"}, {"link": "", "title": "The WEKA data mining software: An update"}, {"link": "", "title": "Estimating continuous distributions in bayesian classifiers"}, {"link": "", "title": "Enriching documents with examples: A corpus mining approach"}, {"link": "/document/6473801", "title": "Patterns of knowledge in API reference documentation"}, {"link": "", "title": "The Stanford CoreNLP natural language processing toolkit"}, {"link": "/document/6227137", "title": "Inferring method specifications from natural language API descriptions"}, {"link": "", "title": "Measuring API documentation on the web"}, {"link": "", "title": "Discovering information explaining API types using text classification"}, {"link": "", "title": "Fast training of support vector machines using sequential minimal optimization"}, {"link": "", "title": "Evaluating the use of different positional strategies for sentence selection in biomedical literature summarization"}, {"link": "", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming prompter"}, {"link": "", "title": "Snowball: A language for stemming algorithms"}, {"link": "", "title": "C4.5: Programs for Machine Learning"}, {"link": "", "title": "Towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "/document/5287006", "title": "What makes APIs hard to learn? Answers from developers"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "", "title": "Jadeite: Improving API documentation using usage information"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "How do programmers ask and answer questions on the web? (NIER track)"}, {"link": "/document/7000568", "title": "Extracting development tasks to navigate software documentation"}, {"link": "", "title": "TaskNav: Task-based navigation of software documentation"}, {"link": "", "title": "Effective communication of software development knowledge through community portals"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "A comparative study on feature selection in text categorization"}, {"link": "", "title": "Detecting API documentation errors"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886920"}
{"ref": [{"link": "", "title": "Test Case Prioritization Using Requirements-Based Clustering"}, {"link": "", "title": "Learning for Test Prioritization: An Industrial Case Study"}, {"link": "", "title": "On the use of a similarity function for test case selection in the context of model-based testing"}, {"link": "", "title": "Test Case Prioritization: A Systematic Mapping Study"}, {"link": "", "title": "Adaptive Random Testing: The ART of Test Case Diversity"}, {"link": "/document/6967789", "title": "Normalized Compression Distance of Multisets with Applications"}, {"link": "", "title": "Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact"}, {"link": "", "title": "Techniques for Improving Regression Testing in Continuous Integration Development Environments"}, {"link": "/document/988497", "title": "Test Case Prioritization: A Family of Empirical Studies"}, {"link": "", "title": "Similarity-based test case prioritization using ordered sequences of program entities"}, {"link": "/document/7515474", "title": "Test Set Diameter: Quantifying the Diversity of Sets of Test Cases"}, {"link": "", "title": "Test-case Prioritization: Achievements and Challenges"}, {"link": "", "title": "Empirical Investigation of the Effects of Test Suite Properties on Similarity-Based Test Case Selection"}, {"link": "", "title": "Achieving Scalable Model-based Testing Through Test Case Diversity"}, {"link": "", "title": "Comparing White-box and Black-box Test Prioritization"}, {"link": "", "title": "Let's assume we had to pay for testing"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Defects4J: A Database of Existing Faults to Enable ControlledTesting Studies for Java Programs"}, {"link": "", "title": "Prioritizing Test Cases with String Distances"}, {"link": "", "title": "Mining of Massive Datasets"}, {"link": "", "title": "A Large-scale Empirical Comparison of Static and Dynamic Test Case Prioritization Techniques"}, {"link": "", "title": "Finding similar files in a large file system"}, {"link": "", "title": "On rapid releases and software testing: a case study and a semi-systematic literature review"}, {"link": "", "title": "Big data: The next frontier for innovation, competition, and productivity"}, {"link": "/document/6676952", "title": "Test Case Prioritization for Continuous Regression Testing: An Industrial Case Study"}, {"link": "/document/1245299", "title": "Using Spanning Sets for Coverage Testing"}, {"link": "", "title": "Taming Google-scale Continuous Testing"}, {"link": "/document/7381799", "title": "A similarity-based approach for test case prioritization using historical failure data"}, {"link": "", "title": "Test case prioritization: An empirical study"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Regression test suite prioritization using system models"}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "Regression Testing Minimization, Selection and Prioritization: A Survey"}, {"link": "", "title": "On the Fault-Detection Capabilities of Adaptive Random Test Case Prioritization: Case Studies with Large Test Suites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453081"}
{"ref": [{"link": "", "title": "The Fortran 2003 handbook: the complete syntax, features and procedures"}, {"link": "", "title": "Checking and inferring local non-aliasing"}, {"link": "", "title": "CFFI User Manual"}, {"link": "", "title": "Phrack"}, {"link": "", "title": "New frontiers of reverse engineering"}, {"link": "", "title": "The Haskell 98 Foreign Function Interface 1.0: An Addendum to the Haskell 98 Report, 2003"}, {"link": "", "title": "Toward refactoring in a polyglot world: Extending automated refactoring support across java and xml"}, {"link": "", "title": "Compiler support for the Fortran 2003 standard"}, {"link": "", "title": "Lightweight, adaptable dependency analysis"}, {"link": "", "title": "The language toolkit: An API for automated refactorings in Eclipse-based IDEs"}, {"link": "", "title": "Design Patterns"}, {"link": "", "title": "Type qualifier inference for java"}, {"link": "", "title": "OpenRefactory / C: An infrastructure for building correct and complex C transformations"}, {"link": "", "title": "Joint Technical Committee ISO/IEC/JTC1"}, {"link": "", "title": "Cross language refactoring for eclipse plug-ins"}, {"link": "", "title": "Finding bugs in exceptional situations of jni programs"}, {"link": "", "title": "The Java Native Interface: Programmer's Guide and Specification"}, {"link": "", "title": "PolyCARE: A tool for re-engineering multi-language program integrations"}, {"link": "/document/1199190", "title": "A tool for understanding multi-language program dependencies"}, {"link": "", "title": "A metrics tool for multi-language software"}, {"link": "", "title": "Magma /FHC. Exploiting memory corruptions in Fortran programs under UNIX/VMS"}, {"link": "/document/6392106", "title": "Cross-language code analysis and refactoring"}, {"link": "/document/7017326", "title": "Climate models: challenges for fortran development tools"}, {"link": "", "title": "Extracting and representing cross-language dependencies in diverse software systems"}, {"link": "/document/1572302", "title": "Challenges in software evolution"}, {"link": "", "title": "National Oceanic and Atmospheric Administration (NOAA)"}, {"link": "", "title": "Photran -An Integrated Development Environment and Refactoring Tool for Fortran"}, {"link": "/document/1451869", "title": "The protection of information in computer systems"}, {"link": "/document/6648199", "title": "sql-schema-comparer: Support of multi-language refactoring with relational databases"}, {"link": "", "title": "Hurdles in multilanguage refactoring of hibernate applications"}, {"link": "", "title": "Writing c functions callable by fortran and vice versa"}, {"link": "/document/4026870", "title": "Cross-language program analysis and refactoring"}, {"link": "/document/4288193", "title": "An extensible meta-model for program analysis"}, {"link": "", "title": "Sun Microsystems Inc"}, {"link": "", "title": "An empirical security study of the native code in the jdk"}, {"link": "", "title": "A meta-model for language-independent"}, {"link": "", "title": "An empirical assessment of polyglot-ism in GitHub"}, {"link": "", "title": "Classification of language interactions"}, {"link": "", "title": "Language interaction and quality issues: An exploratory study"}, {"link": "", "title": "World Climate Research Programme"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886955"}
{"ref": [{"link": "", "title": "Mozilla Developer Network"}, {"link": "", "title": "O'Reilly Safari Books Online"}, {"link": "", "title": "RxJS 4 Documentation"}, {"link": "", "title": "RxFiddle, release 1. 0. 4"}, {"link": "", "title": "On the Dichotomy of Debugging Behavior Among Programmers"}, {"link": "", "title": "Real time programming: special purpose or general purpose languages"}, {"link": "", "title": "Functional Reactive Programming"}, {"link": "", "title": "The reactive manifesto"}, {"link": "", "title": "Akka Library"}, {"link": "", "title": "Introduction to Rx"}, {"link": "", "title": "Execution trace analysis through massive sequence and circular bundle views"}, {"link": "/document/4815280", "title": "A systematic survey of program comprehension through dynamic analysis"}, {"link": "", "title": "Research design: Qualitative, quantitative, and mixed methods approaches"}, {"link": "", "title": "Elm: Concurrent FRP for functional GUI"}, {"link": "", "title": "Asynchronous Functional Reactive Programming for GUIs"}, {"link": "", "title": "Gam-ification in education: A systematic mapping study"}, {"link": "", "title": "Coherent Reaction"}, {"link": "", "title": "Functional Reactive Animation"}, {"link": "", "title": "Push-pull Functional Reactive Programming"}, {"link": "", "title": "Reactive Programming for. NET Developers"}, {"link": "/document/6240511", "title": "Measuring programming experience"}, {"link": "", "title": "Don't Call Us, We'll Call You: Characterizing Callbacks in Javascript"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "/document/221135", "title": "A technique for drawing directed graphs"}, {"link": "", "title": "Models of debugging"}, {"link": "", "title": "BigDebug: Debugging Primitives for Interactive Big Data Processing in Spark"}, {"link": "", "title": "Reactive Messaging"}, {"link": "", "title": "Mixed methods research designs in counseling psychology"}, {"link": "", "title": "Debugging: An analysis of bug-location strategies"}, {"link": "", "title": "How to Rate Programming Skills in Programming Experiments?: A Preliminary, Exploratory, Study Based on University Marks, Pretests, and Self-estimation"}, {"link": "", "title": "A practical guide to controlled experiments of software engineering tools with human participants"}, {"link": "", "title": "\n            Program Explorer: A Program Visualizer for C\n            "}, {"link": "/document/6634164", "title": "Storyflow: Tracking the evolution of stories"}, {"link": "", "title": "On the comprehension of program comprehension"}, {"link": "", "title": "Deprecating the observer pattern"}, {"link": "", "title": "RxMarbles"}, {"link": "", "title": "How to debug RxJS code"}, {"link": "", "title": "Subject/Observer is dual to iterator"}, {"link": "", "title": "Flapjax: A Programming Language for Ajax Applications"}, {"link": "", "title": "I Know What You Did Last Summer: An Investigation of How Developers Spend Their Time"}, {"link": "", "title": "RxViz: Animated playground for Rx Observables"}, {"link": "", "title": "Reactive Programming with RxJava"}, {"link": "/document/5287015", "title": "Back to the future: Omniscient debugging"}, {"link": "", "title": "ReactiveX. io"}, {"link": "", "title": "Visualizing Program Execution Using User Abstractions"}, {"link": "", "title": "An Empirical Study on Program Comprehension with Reactive Programming"}, {"link": "", "title": "REScala: Bridging Between Object-oriented and Functional Style in Reactive Applications"}, {"link": "", "title": "Debugging for reactive programming"}, {"link": "", "title": "Measuring and Modeling Programming Experience"}, {"link": "", "title": "An Examination of Software Engineering Work Practices"}, {"link": "", "title": "Effective Debugging: 66 Specific Ways to Debug Software and Systems"}, {"link": "", "title": "Resilient Distributed Datasets: A Fault-tolerant Abstraction for In-memory Cluster Computing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453148"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453152"}
{"ref": [{"link": "", "title": "Semantic deep web: automatic attribute extraction from the deep web data sources"}, {"link": "", "title": "Extracting structured data from web pages"}, {"link": "", "title": "Iepad: Information extraction based on pattern discovery"}, {"link": "", "title": "Armadillo: harvesting information for the semantic web"}, {"link": "", "title": "Tree-structured template generation for web pages"}, {"link": "", "title": "Learning to harvest information for the semantic web"}, {"link": "", "title": "Xml path language (xpath)"}, {"link": "", "title": "Roadrunner: Towards automatic data extraction from large web sites"}, {"link": "", "title": "Robust web extraction: An approach based on a probabilistic tree-edit model"}, {"link": "", "title": "Automatic wrappers for large scale web extraction"}, {"link": "", "title": "Semtag and seeker: Bootstrapping the semantic web via automated semantic annotation"}, {"link": "", "title": "Computing semantic relatedness using wikipedia-based explicit semantic analysis"}, {"link": "", "title": "Codehint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Unsupervised wrapper induction using linked data"}, {"link": "", "title": "Towards web-scale structured web data extraction"}, {"link": "", "title": "Web-scale information extraction with vertex"}, {"link": "", "title": "Synthesis of loop-free programs"}, {"link": "", "title": "From one tree to a forest: a unified solution for structured web data extraction"}, {"link": "", "title": "Data structure fusion"}, {"link": "/document/5661858", "title": "Data extraction for deep web using wordnet"}, {"link": "", "title": "The distribution of the flora in the alpine zone"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Efficient deep web crawling using reinforcement learning"}, {"link": "", "title": "Wrapper induction for information extraction"}, {"link": "", "title": "Flashextract: a framework for data extraction by examples"}, {"link": "/document/6983884", "title": "Reducing web test cases aging by means of robust xpath locators"}, {"link": "", "title": "Mining data records in web pages"}, {"link": "", "title": "Robust web data extraction: a novel approach based on minimum cost script edit model"}, {"link": "", "title": "Xwrap: An xml-enabled wrapper construction system for web information sources"}, {"link": "/document/4840351", "title": "Vide: A vision-based approach for deep web data extraction"}, {"link": "", "title": "Extracting data records from the web using tag path clustering"}, {"link": "", "title": "Unsupervised information extraction from unstructured, ungrammatical data sources on the world wide web"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Automatic web news extraction using tree edit distance"}, {"link": "", "title": "Using reinforcement learning to spider the web efficiently"}, {"link": "", "title": "Tex: An efficient and effective unsupervised web information extractor"}, {"link": "", "title": "Information extraction for deep web using repetitive subject pattern"}, {"link": "", "title": "Information extraction for deep web using repetitive subject pattern"}, {"link": "", "title": "Learning to extract information from large websites using sequential models"}, {"link": "", "title": "Web data extraction based on partial tree alignment"}, {"link": "", "title": "Simultaneous record detection and attribute labeling in web data extraction"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886918"}
{"ref": [{"link": "", "title": "Mining api patterns as partial orders from source code: From usage scenarios to specifications"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "/document/6624029", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Mining idioms from source code"}, {"link": "/document/6976073", "title": "CSCC: simple, efficient, context sensitive code completion"}, {"link": "", "title": "Learning from examples to improve code completion systems"}, {"link": "/document/6227140", "title": "Synthesizing api usage examples"}, {"link": "/document/6648197", "title": "A hidden markov model to detect coded information islands in free text"}, {"link": "/document/4492791", "title": "Discovering neglected conditions in software by mining dependence graphs"}, {"link": "", "title": "Boa: A language and infrastructure for analyzing ultra-large-scale software repositories"}, {"link": "", "title": "Code completion from abbreviated input"}, {"link": "/document/6547637", "title": "Roundtable: What's next in software analytics"}, {"link": "", "title": "Automatic method completion"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Using structural context to recommend source code examples"}, {"link": "", "title": "An evaluation of the strategies of sorting, filtering, and grouping api methods for code completion"}, {"link": "", "title": "Using web corpus statistics for program analysis"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Code template inference using language models"}, {"link": "", "title": "Towards an intelligent code search engine"}, {"link": "", "title": "Api change and fault proneness: A threat to the success of android apps"}, {"link": "/document/4639314", "title": "Mining scenario-based triggers and effects"}, {"link": "", "title": "Structured generative models of natural source code"}, {"link": "", "title": "Recommending source code examples via api call usages and documentation"}, {"link": "/document/6693127", "title": "Export: Detecting and visualizing api usages in large source code repositories"}, {"link": "/document/6227205", "title": "Graph-based pattern-oriented, context-sensitive source code completion"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "A statistical semantic language model for source code"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "/document/7372069", "title": "Recommending api usages for mobile apps with hidden markov model"}, {"link": "/document/6227133", "title": "Active code completion"}, {"link": "/document/1165342", "title": "An introduction to hidden markov models"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/4639335", "title": "How program history can improve code completion"}, {"link": "", "title": "Live api documentation"}, {"link": "", "title": "Revisiting prior empirical findings for mobile apps: An empirical case study on the 15 most popular open-source android apps"}, {"link": "", "title": "On the localness of software"}, {"link": "/document/6624045", "title": "Mining succinct and high-coverage api usage patterns from source code"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "/document/7180092", "title": "Toward deep learning software repositories"}, {"link": "/document/87000", "title": "The zero-frequency problem: estimating the probabilities of novel events in adaptive text compression"}, {"link": "/document/6227136", "title": "Automatic parameter recommendation for practical api usage"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886922"}
{"ref": [{"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "Bug introducing changes: A case study with Android"}, {"link": "", "title": "A novel approach for estimating truck factors"}, {"link": "", "title": "Using static analysis to find bugs"}, {"link": "", "title": "The Google FindBugs fixit"}, {"link": "", "title": "How the Apache community upgrades dependencies: an evolutionary study"}, {"link": "/document/6945855", "title": "The impact of API change-and fault-proneness on the user ratings of Android apps"}, {"link": "", "title": "Fair and balanced?: bias in bug-fix datasets"}, {"link": "/document/5069479", "title": "Evaluating the relation between coding standard violations and faults within and across software versions"}, {"link": "", "title": "Checkstyle"}, {"link": "", "title": "Assessing the value of coding standards: an empirical study"}, {"link": "", "title": "An empirical study of dormant bugs"}, {"link": "", "title": "PMD applied"}, {"link": "", "title": "Static correspondence and correlation between field defects and warnings reported by a bug finding tool"}, {"link": "", "title": "Untangling fine-grained code changes"}, {"link": "", "title": "Automated detection of refactorings in evolving components"}, {"link": "/document/4339230", "title": "Change distilling: tree differencing for fine-grained source code change extraction"}, {"link": "", "title": "Degree-of-knowledge: modeling a developer's knowledge of code"}, {"link": "", "title": "A degree-of-knowledge model to capture source code familiarity"}, {"link": "/document/1401931", "title": "Using origin analysis to detect merging and splitting of source code entities"}, {"link": "", "title": "Visually supporting source code changes integration: the Torch dashboard"}, {"link": "", "title": "Visually characterizing source code changes"}, {"link": "", "title": "Mining the history of synchronous changes to refine code ownership"}, {"link": "", "title": "The impact of tangled code changes on defect prediction models"}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "", "title": "Domain specific warnings: are they any better?"}, {"link": "", "title": "How do developers react to API evolution? The Pharo ecosystem case"}, {"link": "", "title": "How do Developers React to API Evolution? A Large-Scale Empirical Study"}, {"link": "", "title": "apiwave: Keeping Track of API Popularity and Migration"}, {"link": "", "title": "Non-essential changes in version histories"}, {"link": "", "title": "Attribute selection and imbalanced data: problems in software defect prediction"}, {"link": "", "title": "Ref-Finder: a refactoring reconstruction tool based on logic query templates"}, {"link": "", "title": "Discovering and representing systematic code changes"}, {"link": "", "title": "Prioritizing warning categories by analyzing software history"}, {"link": "", "title": "Which warnings should I fix first?"}, {"link": "", "title": "Memories of bug fixes"}, {"link": "", "title": "How long did it take to fix bugs?"}, {"link": "", "title": "Classifying software changes: Clean or buggy?"}, {"link": "", "title": "Automatic identification of bug-introducing changes"}, {"link": "/document/7725218", "title": "The tragedy of defect prediction, prince of empirical software engineering research"}, {"link": "", "title": "Data sets and data quality in software engineering"}, {"link": "", "title": "API change and fault proneness: a threat to the success of Android apps"}, {"link": "", "title": "DynaMine: finding common error patterns by mining software revision histories"}, {"link": "", "title": "Interactive churn metrics: sociotechnical variants of code churn"}, {"link": "", "title": "A history-based matching approach to identification of framework evolution"}, {"link": "", "title": "Mining evolution of object usage"}, {"link": "/document/4228642", "title": "Recommending emergent teams"}, {"link": "", "title": "Evaluating the lifespan of code smells using software repository mining"}, {"link": "", "title": "Ecological inference in empirical software engineering"}, {"link": "", "title": "Measuring software library stability through historical version analysis"}, {"link": "", "title": "Ownership, experience and defects: a fine-grained study of authorship"}, {"link": "", "title": "Sample size vs. bias in defect prediction"}, {"link": "", "title": "BugCache for inspections: hit or miss?"}, {"link": "", "title": "On the naturalness of buggy code"}, {"link": "", "title": "Of change and software"}, {"link": "", "title": "Mining usage expertise from version archives"}, {"link": "", "title": "Why we refactor? confessions of GitHub contributors"}, {"link": "", "title": "RefDiff: detecting refactorings in version histories"}, {"link": "/document/5440166", "title": "Making program refactoring safer"}, {"link": "", "title": "Changes as first-class citizens: a research perspective on modern software tooling"}, {"link": "", "title": "A repository with 44 years of Unix evolution"}, {"link": "", "title": "A repository of Unix history and evolution"}, {"link": "", "title": "Elementary statistics"}, {"link": "", "title": "A multidimensional empirical study on refactoring activity"}, {"link": "", "title": "An approach to prioritize code smells for refactoring"}, {"link": "", "title": "AURA: a hybrid approach to identify framework evolution"}, {"link": "", "title": "How do fixes become bugs?"}, {"link": "", "title": "Mining version archives for co-changed lines"}, {"link": "/document/1463228", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453191"}
{"ref": [{"link": "", "title": "Android 6 permission system"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps"}, {"link": "", "title": "Short paper: A look at smartphone permission models"}, {"link": "", "title": "PScout: Analyzing the Android permission specification"}, {"link": "", "title": "Boxify: Full-fledged app sandboxing for stock android"}, {"link": "", "title": "AppGuard-fine-grained policy enforcement for untrusted Android applications"}, {"link": "", "title": "Automatic inference and enforcement of kernel data structure invariants"}, {"link": "", "title": "Automatically securing permission-based software by reducing the attack surface: An application to Android"}, {"link": "", "title": "Brahmastra: Driving apps to test the security of third-party components"}, {"link": "", "title": "Andlantis: Large-scale Android dynamic analysis"}, {"link": "/document/5665792", "title": "An Android application sandbox system for suspicious software detection"}, {"link": "", "title": "Crowdroid: Behavior-based malware detection system for Android"}, {"link": "", "title": "Anomaly detection: A survey"}, {"link": "", "title": "TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "", "title": "Android permissions demystified"}, {"link": "", "title": "Android permissions: User attention, comprehension, and behavior"}, {"link": "/document/502675", "title": "A sense of self for Unix processes"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Sage: Whitebox fuzzing for security testing"}, {"link": "", "title": "Checking app behavior against app descriptions"}, {"link": "", "title": "Puma: Programmable UI-automation for large-scale dynamic analysis of mobile apps"}, {"link": "", "title": "Automating GUI testing for Android applications"}, {"link": "", "title": "Andrubis - 1, 000,000 apps later: A view on current Android malware behaviors"}, {"link": "", "title": "Chex: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Dynodroid: An input generation system for Android apps"}, {"link": "/document/6228986", "title": "A whitebox approach for automated security testing of Android applications on the cloud"}, {"link": "", "title": "An empirical study of the reliability of UNIX utilities"}, {"link": "", "title": "Monkey: UI/Application exerciser"}, {"link": "", "title": "Enter sandbox: Android sandbox comparison"}, {"link": "", "title": "Improving host security with system call policies"}, {"link": "/document/6234415", "title": "User-driven access control: Rethinking permission granting in modern operating systems"}, {"link": "/document/1451869", "title": "The protection of information in computer systems"}, {"link": "", "title": "\u201cAndromaly\u201d: a behavioral malware detection framework for android devices"}, {"link": "", "title": "The user is not the enemy: Fighting malware by tracking user intentions"}, {"link": "", "title": "Outside the closed world: On using machine learning for network intrusion detection"}, {"link": "/document/7181426", "title": "Test complement exclusion: Guarantees from dynamic analysis"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886890"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "A survey on reactive programming"}, {"link": "", "title": "Stateful breakpoints: A practical approach to defining parameterized runtime monitors"}, {"link": "", "title": "It's alive! continuous feedback in UI programming"}, {"link": "", "title": "Debugging with control-flow breakpoints"}, {"link": "", "title": "Embedding dynamic dataflow in a call-by-value language"}, {"link": "", "title": "Asynchronous functional reactive programming for GUIs"}, {"link": "", "title": "Visual debugging for stream processing applications"}, {"link": "", "title": "Distributed REScala: An update algorithm for distributed reactive programming"}, {"link": "", "title": "Functional implementations of continuous modeled animation"}, {"link": "", "title": "Functional reactive animation"}, {"link": "", "title": "Push-pull functional reactive programming"}, {"link": "", "title": ""}, {"link": "", "title": "A study of student strategies for the corrective maintenance of concurrent software"}, {"link": "", "title": "Tools and strategies for debugging distributed stream processing applications"}, {"link": "", "title": "Introducing Microsoft StreamInsight"}, {"link": "", "title": "An experiment about static and dynamic type systems: Doubts about the positive impact of static type systems on development time"}, {"link": "", "title": "Arrows, robots, and functional reactive programming"}, {"link": "", "title": "A productive programming environment for stream computing"}, {"link": "", "title": ""}, {"link": "", "title": "Program comprehension as fact finding"}, {"link": "", "title": "Developers ask reachability questions"}, {"link": "", "title": "Practical object-oriented back-in-time debugging"}, {"link": "", "title": ""}, {"link": "", "title": "Higher-order reactive programming with incremental lists"}, {"link": "", "title": "Deprecating the Observer Pattern"}, {"link": "", "title": "The design and implementation of a dataflow language for scriptable debugging"}, {"link": "", "title": "We have a DREAM: Distributed reactive programming with consistency guarantees"}, {"link": "", "title": "An empirical study of the influence of static type systems on the usability of undocumented software"}, {"link": "", "title": "Living it up with a live programming language"}, {"link": "", "title": "Programming with managed time"}, {"link": "", "title": "Flapjax: a programming language for Ajax applications"}, {"link": "", "title": "The Regiment Macroprogramming System"}, {"link": "", "title": "Algorithmic debugging for lazy functional languages"}, {"link": "", "title": "A data flow approach to event-based debugging. Softw. Pract. Exper."}, {"link": "/document/5287015", "title": "Back to the future: Omniscient debugging"}, {"link": "", "title": "Summarized trace indexing and querying for scalable back-in-time debugging"}, {"link": "", "title": "Scalable omniscient debugging"}, {"link": "", "title": "Do dynamic object process graphs support program understanding? -a controlled experiment"}, {"link": "", "title": ""}, {"link": "", "title": "Dependency graph visualization in the Unreal Engine 4, Tools Demonstration GDC"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6227167", "title": "Object-centric debugging"}, {"link": "", "title": "An empirical study on program comprehension with reactive programming"}, {"link": "", "title": "REScala: Bridging between object-oriented and functional style in reactive applications"}, {"link": "", "title": "Reactive behavior in object-oriented applications: An analysis and a research roadmap"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886957"}
{"ref": [{"link": "", "title": "Engineering a Method for Wide Audience Requirements Elicitation and Integrating It to Software Development"}, {"link": "/document/7184705", "title": "Identifying Architecturally Significant Functional Requirements"}, {"link": "/document/7320411", "title": "What You Ask Is What You Get: Understanding Architecturally Significant Functional Requirements"}, {"link": "", "title": "A Glossary of Requirements Engineering Terminology"}, {"link": "/document/6490331", "title": "Analysis of Architecturally Significant Requirements for Enterprise Systems"}, {"link": "", "title": "Architecture-driven Quality Requirements Prioritization"}, {"link": "", "title": "Non-functional Requirements in Software Architecture Practice"}, {"link": "", "title": "How Architects see Non-Functional Requirements: Beware of Modifiability"}, {"link": "", "title": "A persona-based approach for exploring architecturally significant requirements in agile projects"}, {"link": "", "title": "Evidence in Software Architecture"}, {"link": "", "title": "Views on Software Engineering from the Twin Peaks of Requirements and Architecture"}, {"link": "/document/6470589", "title": "2013. The Twin Peaks of Requirements and Architecture"}, {"link": "", "title": "Application of Knowledge-based Approaches in Software Architecture: A Systematic Mapping Study"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-oriented Software"}, {"link": "", "title": "Design Science Methodology for Information Systems and Software Engineering"}, {"link": "", "title": "Tailored Design Method Hardcover"}, {"link": "", "title": "Qualitative Data Analysis"}, {"link": "", "title": "Constructing Grounded Theory: A Practical Guide through Qualitative Analysis"}, {"link": "", "title": "Estimating Continuous Distributions in Bayesian Classifiers"}, {"link": "", "title": "Data Mining for Imbalanced Datasets: An Overview. In. Maimon O."}, {"link": "", "title": "Development of a Stemming Algorithm. Mechanical Translation and Computational Linguistics"}, {"link": "/document/1245283", "title": "Benchmarking Attribute Selection Techniques for Discrete Class Data Mining"}, {"link": "", "title": "Random k-labelsets for Multilabel Classification. Knowledge and Data Engineering"}, {"link": "", "title": "ML-KNN: A lazy learning approach to multi-label learning"}, {"link": "", "title": "Mulan: A Java Library for Multi-label Learning"}, {"link": "", "title": "Information Retrieval: Data Structures and Algorithms"}, {"link": "", "title": "(1994) Statistics notes: diagnostic tests 1"}, {"link": "", "title": "Automated Classification of Non-functional Requirements"}, {"link": "", "title": "A vector space model for automatic indexing"}, {"link": "", "title": "Case study research"}, {"link": "", "title": "Six strategies for generalizing software engineering theories"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "", "title": "Software Architecture: Organizational Principles and Patterns"}, {"link": "", "title": "Applied Software Architecture"}, {"link": "", "title": "ARES Conceptual Framework for Software Architecture"}, {"link": "", "title": "Agile Software Architecture"}, {"link": "", "title": "Design and Use of Software Architecture"}, {"link": "", "title": "Documenting Software Architectures: Views and Beyond"}, {"link": "", "title": "Software Product Lines"}, {"link": "", "title": "Large-Scale Software Architecture"}, {"link": "", "title": "Weaving Together Requirements and Architectures. Computer"}, {"link": "", "title": "Views on Software Engineering from the Twin Peaks of Requirements and Architecture"}, {"link": "/document/6470589", "title": "2013. The Twin Peaks of Requirements and Architecture"}, {"link": "/document/6344560", "title": "What do software architects expect from requirements specifications? Results of initial explorative studies"}, {"link": "/document/6588522", "title": "about Quoins: Strategic Traceability of Architecturally Significant Requirements"}, {"link": "", "title": "Generation and validation of traces between requirements and architecture based on formal trace semantics"}, {"link": "", "title": "(2014, August). From architecture to requirements: Relating requirements and architecture for better Requirements Engineering"}, {"link": "/document/6365165", "title": "Characterizing Architecturally Significant Requirements"}, {"link": "", "title": "Towards mining replacement queries for hard-to-retrieve traces"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "On the optimality of the simple Bayesian classifier under zero-one loss"}, {"link": "", "title": "The good subject effect: Investigating participant demand characteristics"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886961"}
{"ref": [{"link": "", "title": "JPROFILER"}, {"link": "", "title": "Understand"}, {"link": "", "title": "YourKit"}, {"link": "", "title": "Finding and Removing Performance Bottlenecks in Large Systems"}, {"link": "", "title": "Design Rules: The Power of Modularity"}, {"link": "", "title": "Efficient Path Profiling"}, {"link": "", "title": "Navigate, Understand, Communicate: How Developers Locate Performance Bugs"}, {"link": "", "title": "Reuse, Recycle to De-bloat Software"}, {"link": "", "title": "Mining Performance Specifications"}, {"link": "", "title": "Modularity Analysis of Logical Design Models"}, {"link": "", "title": "Generating Performance Distributions via Probabilistic Symbolic Execution"}, {"link": "", "title": "Detecting Performance Anti-patterns for Applications Developed Using Object-relational Mapping"}, {"link": "", "title": "Dominance statistics: Ordinal analyses to answer ordinal questions"}, {"link": "", "title": "Input-sensitive Profiling"}, {"link": "", "title": "Performance Problems You Can Fix: A Dynamic Analysis of Memoization Opportunities"}, {"link": "", "title": "Directed Test Generation to Detect Loop Inefficiencies"}, {"link": "", "title": "Software Profiling for Hot Path Prediction: Less is More"}, {"link": "", "title": "A Scalable Technique for Characterizing the Usage of Temporaries in Framework-intensive Java Applications"}, {"link": "", "title": "EvoSuite: Automatic Test Suite Generation for Object-Oriented Software"}, {"link": "", "title": "Measuring Empirical Computational Complexity"}, {"link": "/document/6227197", "title": "Automatically Finding Performance Problems with Feedback-directed Learning Software Testing"}, {"link": "", "title": "Performance Debugging in the Large via Mining Millions of Stack Traces"}, {"link": "", "title": "Understanding and Detecting Real-world Performance Bugs"}, {"link": "", "title": "Catch Me if You Can: Performance Bug Detection in the Wild"}, {"link": "", "title": "Brainy: Effective Selection of Data Structures"}, {"link": "", "title": "Finding Latent Performance Bugs in Systems Implementations"}, {"link": "", "title": "Whole Program Paths"}, {"link": "", "title": "Perflint: A Context Sensitive Performance Advisor for C++ Programs"}, {"link": "", "title": "Characterizing and Detecting Performance Bugs for Smartphone Applications"}, {"link": "", "title": "Efficient Flow Profiling for Detecting Performance Bugs"}, {"link": "", "title": "Cachetor: Detecting Cacheable Data to Remove Bloat"}, {"link": "", "title": "CARAMEL: Detecting and Fixing Performance Problems That Have Non-Intrusive Fixes"}, {"link": "", "title": "Discovering, Reporting, and Fixing Performance Bugs"}, {"link": "", "title": "Toddler: Detecting Performance Problems via Similar Memory-access Patterns"}, {"link": "", "title": "Static Detection of Asymptotic Performance Bugs in Collection Traversals"}, {"link": "", "title": "Performance Regression Testing of Concurrent Classes"}, {"link": "", "title": "EventBreak: Analyzing the Responsiveness of User Interfaces Through Performance-guided Test Generation"}, {"link": "", "title": "An Actionable Performance Profiler for Optimizing the Order of Evaluations"}, {"link": "", "title": "Performance Issues and Optimizations in JavaScript: An Empirical Study"}, {"link": "", "title": "Chameleon: Adaptive Selection of Collections"}, {"link": "", "title": "Automating Performance Bottleneck Detection Using Search-based Application Profiling"}, {"link": "", "title": "New Software Performance AntiPat-terns: More Ways to Shoot Yourself in the Foot"}, {"link": "", "title": "Statistical Debugging for Real-world Performance Problems"}, {"link": "", "title": "Performance Diagnosis for Inefficient Loops"}, {"link": "", "title": "Supporting Swift Reaction: Automatically Uncovering Performance Problems by Systematic Experiments"}, {"link": "", "title": "Individual Comparisons by Ranking Methods"}, {"link": "", "title": "Design Rule Hierarchies and Parallelism in Software Development Tasks"}, {"link": "", "title": "Titan: A Toolset That Connects Software Architecture With Quality Analysis"}, {"link": "", "title": "Context-sensitive Delta Inference for Identifying Workload-dependent Performance Bottlenecks"}, {"link": "", "title": "Finding Reusable Data Structures"}, {"link": "", "title": "Go with the Flow: Profiling Copies to Find Runtime Bloat"}, {"link": "", "title": "Finding Low-utility Data Structures"}, {"link": "", "title": "Detecting Inefficiently-used Containers to Avoid Bloat"}, {"link": "", "title": "static Detection of Loop-invariant Data Structures"}, {"link": "", "title": "Uncovering Performance Problems in Java Applications with Reference Propagation Profiling"}, {"link": "", "title": "An Empirical Study on Dependence Clusters for Effort-Aware Fault-Proneness Prediction"}, {"link": "", "title": "SyncProf: Detecting, Localizing, and Optimizing Synchronization Bottlenecks"}, {"link": "", "title": "Comprehending Performance from Real-world Execution Traces: A Device-driver Case"}, {"link": "", "title": "A Qualitative Study on Performance Bugs"}, {"link": "", "title": "Algorithmic Profiling"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453154"}
{"ref": [{"link": "", "title": "An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension"}, {"link": "", "title": "On the Detection of Architecturally-Relevant Code Anomalies in Software Systems"}, {"link": "", "title": "Using R for Numerical Analysis in Scienceand Engineering"}, {"link": "", "title": "A method of estimating comparative rates from clinical data; applications to cancer of the lung, breast, and cervix"}, {"link": "/document/5562941", "title": "On the impact of design flaws on software defects"}, {"link": "", "title": "On the interpretation of \u03c72 from contingency tables, and the calculation of p"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Towards a principle-based classification of structural design smells"}, {"link": "/document/6693106", "title": "A comparative analysis of software architecture recovery techniques"}, {"link": "", "title": "Identifying architecturalbad smells. In Software Maintenance and Reengineering"}, {"link": "", "title": "Using concept analysis to detect co-change patterns"}, {"link": "", "title": "Secrets from the monster: Extracting Mozilla's software architecture"}, {"link": "", "title": "Do code clones matter? In Software Engineering, 2009"}, {"link": "", "title": "Cloning considered harmful\u201d considered harmful: Patterns of cloning in software"}, {"link": "", "title": "A case study in locating the architectural roots of technical debt"}, {"link": "/document/5328703", "title": "An exploratory study of the impact of code smells on software change-proneness"}, {"link": "", "title": "An exploratory study of the impact of antipatterns on class change- and fault-proneness"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "", "title": "Object-Oriented Metrics in Practice"}, {"link": "", "title": "An empirical study of the bad smells and class error probability in the post-release object-oriented system evolution"}, {"link": "/document/4658071", "title": "Assessing the effect of clones on changeability"}, {"link": "", "title": "Exploring the structure of complex software designs: An empirical study of open source and proprietary code"}, {"link": "", "title": "Supporting the identification of architecturally-relevant code anomalies"}, {"link": "/document/6178894", "title": "On the relevance of code anomalies for identifying architecture degradation symptoms"}, {"link": "", "title": "Are automatically-detected code anomalies relevant to architectural modularity?: An exploratory analysis of evolving systems"}, {"link": "", "title": "Agile Software Development: Principles, Patterns, and Practices"}, {"link": "", "title": "A software architecture-based framework for highly distributed and data intensive scientific applications"}, {"link": "", "title": "Mallet: A machine learning for language toolkit"}, {"link": "", "title": "Hotspot patterns: The formal definition and automatic detection of architecture smells"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "", "title": "Opus research group: Supplementary material"}, {"link": "/document/5609564", "title": "Are all code smells harmful? a study of god classes and brain classes in the evolution of three open source systems"}, {"link": "", "title": "Foundations for the study of software architecture"}, {"link": "/document/999087", "title": "Maintainability of the linux kernel"}, {"link": "/document/6606638", "title": "Measuring architecture quality by structure plus history analysis"}, {"link": "/document/6392174", "title": "Quantifying the effect of code smells on maintenance effort"}, {"link": "", "title": "Implementing distribution and persistence aspects with aspectj"}, {"link": "", "title": "Refactoring for Software Design Smells: Managing Technical Debt"}, {"link": "", "title": "When and why your code starts to smell bad"}, {"link": "", "title": "Design erosion: problems and causes"}, {"link": "", "title": "Detecting software modularity violations"}, {"link": "", "title": "Titan: A toolset that connects software architecture with quality analysis"}, {"link": "/document/6405287", "title": "Do code smells reflect important maintainability aspects?"}, {"link": "/document/6606614", "title": "Exploring the impact of inter-smell relations on software maintainability: An empirical study"}, {"link": "", "title": "Using aspectj to build a software product line for mobile devices"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886924"}
{"ref": [{"link": "", "title": "GNU Autoconf-Creating Automatic Configuration Scripts"}, {"link": "", "title": "The Gradle build language"}, {"link": "", "title": "Gradle Build Script Structure"}, {"link": "", "title": "The Evolution of the Linux Build System"}, {"link": "/document/4362624", "title": "Design recovery and maintenance of build systems"}, {"link": "", "title": "Fault Localization for Build Code Errors in Makefiles"}, {"link": "", "title": "Dynamically Evolving Concurrent Information Systems Specification and Validation: A Component-based Petri Nets Proposal"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "TravisTorrent: Synthesizing Travis CI and GitHub for Full-Stack Research on Continuous Integration"}, {"link": "", "title": "Ambient Awareness of Build Status in Collocated Software Teams"}, {"link": "", "title": "Fine-grained and Accurate Source Code Differencing"}, {"link": "", "title": "Designing better fitness functions for automated program repair"}, {"link": "/document/4339230", "title": "Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction"}, {"link": "/document/6035728", "title": "GenProg: A Generic Method for Automatic Software Repair"}, {"link": "/document/8170083", "title": "Automatic Building of Java Projects in Software Repositories: A Study on Feasibility and Challenges"}, {"link": "/document/8170096", "title": "Change-Aware Build Prediction Model for Stall Avoidance in Continuous Integration"}, {"link": "", "title": "Mining readme files to support automatic building of java projects in software repositories: Poster"}, {"link": "", "title": "Gradle Dependency Management"}, {"link": "", "title": "Systematically Refactoring Inheritance to Delegation in Java"}, {"link": "/document/6606626", "title": "Automatic Patch Generation Learned from Human-written Patches"}, {"link": "", "title": "History Driven Program Repair"}, {"link": "/document/6227211", "title": "A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for $8 Each"}, {"link": "", "title": "Staged Program Repair in SPR"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "The Evolution of Java Build Systems"}, {"link": "", "title": "An empirical study of build maintenance effort"}, {"link": "/document/7194596", "title": "DirectFix: Looking for Simple Program Repairs"}, {"link": "", "title": "Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis"}, {"link": "", "title": "Apache Maven"}, {"link": "", "title": "SemFix: Program Repair via Semantic Analysis"}, {"link": "", "title": "Evaluating and Improving Fault Localization"}, {"link": "", "title": "The Strength of Random Search on Automated Program Repair"}, {"link": "", "title": "Using tf-idf to determine word relevance in document queries"}, {"link": "/document/7962384", "title": "An Empirical Analysis of Build Failures in the Continuous Integration Workflows of Java-Based Open-Source Software"}, {"link": "", "title": "Programmers' Build Errors: A Case Study (at Google)"}, {"link": "", "title": "Programmers' Build Errors: A Case Study (at Google)"}, {"link": "/document/1556535", "title": "Countering network worms through automatic patch generation"}, {"link": "", "title": "Is the Cure Worse Than the Disease? Overfitting in Automated Program Repair"}, {"link": "", "title": "JDF: detecting duplicate bug reports in Jazz"}, {"link": "", "title": "A Quantitative Study of Java Software Buildability"}, {"link": "", "title": "SYMake: A Build Code Analysis and Refactoring Tool for Makefiles"}, {"link": "", "title": "Relifix: Automated Repair of Software Regressions"}, {"link": "", "title": "Automatically Generated Patches As Debugging Aids: A Human Study"}, {"link": "", "title": "Ant: The Definitive Guide"}, {"link": "", "title": "Transtrl: An automatic need-to-translate string locator for software internationalization"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "The Porter stemming algorithm: then and now"}, {"link": "", "title": "Predicting Build Failures Using Social Network Analysis on Developer Communication"}, {"link": "/document/7463060", "title": "Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs"}, {"link": "", "title": "Checking enforcement of integrity constraints in database applications based on code patterns"}, {"link": "/document/7965283", "title": "An empirical study on using hints from past fixes: poster"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453189"}
{"ref": [{"link": "", "title": "Credit for 3"}, {"link": "", "title": "English stopwords"}, {"link": "", "title": "Genial apps website"}, {"link": "", "title": "Ideasoftware website"}, {"link": "", "title": "Next website"}, {"link": "", "title": "Sing happy birthday songs"}, {"link": "", "title": "Unlikely quotes"}, {"link": "", "title": ""}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "/document/6945855", "title": "The impact of API change- and fault-proneness on the user ratings of Android Apps"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "Analysis of user comments: An approach for software requirements evolution"}, {"link": "", "title": "Simapp: A framework for detecting similar mobile applications by online kernel learning"}, {"link": "", "title": "AR-miner: Mining informative reviews for developers from mobile app marketplace"}, {"link": "", "title": "Digi-Captial. Mobile internet report q1 2015"}, {"link": "", "title": "On-demand feature recommendations derived from mining public product descriptions"}, {"link": "", "title": "A density-based algorithm for discovering clusters in large spatial databases with noise"}, {"link": "", "title": "Why people hate your app: Making sense of user feedback in a mobile app store"}, {"link": "/document/6224306", "title": "App store mining and analysis: MSR for app stores"}, {"link": "", "title": "Mining and summarizing customer reviews"}, {"link": "", "title": "Retrieving and analyzing mobile apps feature requests from online reviews"}, {"link": "", "title": "What do mobile App users complain about? a study on free iOS Apps"}, {"link": "", "title": "WordNet: A lexical database for English"}, {"link": "", "title": "User feedback in the appstore: An empirical study"}, {"link": "", "title": "User reviews matter! tracking crowdsourced reviews to support evolution of successful apps"}, {"link": "", "title": "How can i improve my app? classifying user reviews for software maintenance and evolution"}, {"link": "", "title": "An algorithm for suffix stripping"}, {"link": "", "title": "Parsing With Compositional Vector Grammars"}, {"link": "", "title": "Replication package"}, {"link": "", "title": "An effectiveness measure for software clustering algorithms"}, {"link": "", "title": "Extracting problematic API features from forum discussions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886888"}
{"ref": [{"link": "", "title": "Jflap"}, {"link": "", "title": "Lamaconv-Iogics and automata converter library"}, {"link": "", "title": "Defining liveness"}, {"link": "", "title": "Generating obstacle conditions for requirements completeness"}, {"link": "", "title": "Automata-based model counting for string constraints"}, {"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "Mapreduce for parallel trace validation of LTL properties"}, {"link": "", "title": "Symbolic causality checking using bounded model checking"}, {"link": "", "title": "Symbolic model checking without bdds"}, {"link": "", "title": "Verifying temporal properties of reactive systems: A step tutorial"}, {"link": "/document/6345805", "title": "A probabilistic framework for goal-oriented risk analysis"}, {"link": "/document/6912246", "title": "Integrating exception handling in goal models"}, {"link": "/document/7320413", "title": "Handling knowledge uncertainty in risk-based requirements engineering"}, {"link": "", "title": "Goal-directed requirements acquisition"}, {"link": "", "title": "Goal-conflict detection based on temporal satisfiability checking"}, {"link": "", "title": "Detecting consistencies and inconsistencies of pattern-based functional requirements"}, {"link": "", "title": "Agile requirements evolution via paraconsistent reasoning"}, {"link": "", "title": "Feature specification and automated conflict detection"}, {"link": "", "title": "Model counting for complex data structures"}, {"link": "", "title": "Counting models of linear-time temporal logic"}, {"link": "/document/501141", "title": "A comedy of errors: The london ambulance service case study"}, {"link": "", "title": "Goal-oriented requirements analysis and reasoning in the tropos methodology"}, {"link": "", "title": "Synthesis revisited: Generating statechart models from scenario-based requirements"}, {"link": "", "title": "Detection of conflicting functional requirements in a use case-driven approach"}, {"link": "", "title": "A conceptual basis for inconsistency management in model-based systems engineering"}, {"link": "", "title": "The SPIN Model Checker-primer and reference manual"}, {"link": "", "title": "Ieee recommended practice for software requirements specifications"}, {"link": "", "title": "Using CSP look-back techniques to solve real-world SAT instances"}, {"link": "", "title": "Automated software tool support for checking the inconsistency of requirements"}, {"link": "", "title": "CONIC: An integrated approach to distributed computer control systems"}, {"link": "/document/1702415", "title": "Proving the correctness of multiprocess programs"}, {"link": "", "title": "Simple bounded LTL model checking"}, {"link": "", "title": "Concurrency-state models and Java programs"}, {"link": "", "title": "The Temporal Logic of Reactive and Concurrent Systems"}, {"link": "/document/142871", "title": "Representing and using nonfunctional requirements: A process-oriented approach"}, {"link": "", "title": "KBRE: a framework for knowledge-based requirements engineering"}, {"link": "", "title": "Combining component caching and clause learning for effective model counting"}, {"link": "", "title": "sharpsat-counting models with advanced component caching and implicit BCP"}, {"link": "/document/1178048", "title": "Synthesis of behavioral models from scenarios"}, {"link": "", "title": "Requirements Engineering-From System Goals to UML Models to Software Specifications"}, {"link": "/document/730542", "title": "Managing conflicts in goal-driven requirements engineering"}, {"link": "/document/671102", "title": "Integrating obstacles in goal-driven requirements engineering"}, {"link": "/document/879820", "title": "Handling obstacles in goal-oriented requirements engineering"}, {"link": "", "title": "What makes killing a mutant hard"}, {"link": "/document/566873", "title": "Towards modeling and reasoning support for early-phase requirements engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453193"}
{"ref": [{"link": "", "title": "Why Do Developers Use Trivial Packages? An Empirical Case Study on npm"}, {"link": "", "title": "Multiple regression: A primer"}, {"link": "", "title": "Proposing a theory of gamification effectiveness"}, {"link": "", "title": "Steering user behavior with badges"}, {"link": "", "title": "How the Apache community upgrades dependencies: An evolutionary study"}, {"link": "/document/6401114", "title": "Social networking meets software development: Perspectives from GitHub, MSDN, Stack Exchange, and TopCoder"}, {"link": "", "title": "Analyzing the state of static analysis: A large-scale evaluation in open source software"}, {"link": "", "title": "Mining email social networks"}, {"link": "", "title": "Open borders? Immigration in open source projects"}, {"link": "", "title": "Understanding the popular users: Following, affiliation influence and leadership on GitHub"}, {"link": "", "title": "How to break an API: Cost negotiation and community values in three software ecosystems"}, {"link": "", "title": "Eclipse API usage: the good and the bad"}, {"link": "/document/6336698", "title": "Assessing technical candidates on the social web"}, {"link": "", "title": "Developer onboarding in GitHub: the role of prior social links and language experience"}, {"link": "", "title": "Can gamification motivate voluntary contributions? The case of Stack Overflow Q&A community"}, {"link": "", "title": "Why Modern Open Source Projects Fail"}, {"link": "", "title": "Signaling theory: A review and assessment"}, {"link": "", "title": "Quasi-experimentation: Design & analysis issues for field settings"}, {"link": "", "title": "Measuring Dependency Freshness in Software Systems"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "/document/6357175", "title": "Leveraging transparency"}, {"link": "", "title": "An empirical comparison of dependency issues in OSS packaging ecosystems"}, {"link": "", "title": "Gamification. using game-design elements in non-gaming contexts"}, {"link": "", "title": "Signals in social supernets"}, {"link": "", "title": "Some from here, some from there: cross-project code reuse in GitHub"}, {"link": "", "title": "Lean GHTorrent: GitHub data on demand"}, {"link": "", "title": "Encouraging user behaviour with achievements: an empirical study"}, {"link": "", "title": "Receiver psychology and the evolution of animal signals"}, {"link": "", "title": "Communication in open source software development mailing lists"}, {"link": "", "title": "dependencies we trust: How vulnerable are dependencies in software modules?"}, {"link": "", "title": "Usage, Costs, and Benefits of Continuous Integration in Open-source Projects"}, {"link": "", "title": "Classifying developers into core and peripheral: An empirical study on count and network metrics"}, {"link": "", "title": "Open source-style collaborative development practices in commercial projects using GitHub"}, {"link": "", "title": "Do developers update their library dependencies?"}, {"link": "", "title": "GitHub developers use rockstars to overcome overflow of news"}, {"link": "", "title": "What makes a virtual organization work?"}, {"link": "", "title": "Activity traces and signals in software developer recruitment and hiring"}, {"link": "", "title": "Impression formation in online peer production: activity traces and personal profiles in GitHub"}, {"link": "", "title": "How GitHub Conquered Google, Microsoft, and Everyone Else"}, {"link": "", "title": "Factors affecting the success of Open Source Software"}, {"link": "", "title": "Can Automated Pull Requests Encourage Software Developers to Upgrade Out-of-Date Dependencies?"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "", "title": "Handbook of statistical distributions"}, {"link": "", "title": "Semantic Versioning versus Breaking Changes: A Study of the Maven Repository"}, {"link": "", "title": "The Cathedral & the Bazaar: Musings on linux and open source by an accidental revolutionary"}, {"link": "", "title": "State of the Cloud Report: DevOps Trends"}, {"link": "", "title": "Alternatives to the median absolute deviation. J"}, {"link": "", "title": "Making sense of strangers' expertise from signals in digital artifacts"}, {"link": "", "title": "Understanding watchers on GitHub"}, {"link": "", "title": "Software engineering at the speed of light: How developers stay current using Twitter"}, {"link": "", "title": "Job market signaling"}, {"link": "", "title": "Signaling in retrospect and the informational structure of markets"}, {"link": "", "title": "Should We Move to Stack Overflow?\u201d Measuring the Utility of Social Media for Developer Support"}, {"link": "", "title": "The (r) evolution of social media in software engineering"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in GitHub"}, {"link": "/document/6614733", "title": "Social media in transparent work environments"}, {"link": "", "title": "Perceptions of diversity on GitHub: A user survey"}, {"link": "", "title": "How social Q&A sites are changing knowledge sharing in open source software communities"}, {"link": "/document/7180131", "title": "A Data Set for Social Diversity Studies of GitHub Teams"}, {"link": "", "title": "Quality and Productivity Outcomes Relating to Continuous Integration in GitHub"}, {"link": "", "title": "A look at the dynamics of the JavaScript package ecosystem"}, {"link": "", "title": "Magnet or sticky? Measuring project characteristics from the perspective of developer attraction and retention"}, {"link": "", "title": "Mate selection-a selection for a handicap"}, {"link": "", "title": "How open source projects use static code analysis tools in continuous integration pipelines"}, {"link": "", "title": "The Impact of Continuous Integration on Other Software Development Practices: A Large-Scale Empirical Study"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453117"}
{"ref": [{"link": "", "title": "Improving JavaScript performance by deconstructing the type system"}, {"link": "", "title": "Hybrid dom-sensitive change impact analysis for javascript"}, {"link": "", "title": "A framework for automated testing of JavaScript web applications"}, {"link": "", "title": "Aligning development tools with the way programmers think about code changes"}, {"link": "/document/6495006", "title": "Just-in-time value specialization"}, {"link": "", "title": "Performance Engineering, State of the Art and Current Trends"}, {"link": "", "title": "Checking correctness of typescript interfaces for javascript libraries"}, {"link": "", "title": "Trace-based just-in-time type specialization for dynamic languages"}, {"link": "/document/7321196", "title": "Don't call us, we'll call you: Characterizing callbacks in JavaScript"}, {"link": "", "title": "Statistically rigorous Java performance evaluation"}, {"link": "", "title": "JITProf: Pinpointing JIT-unfriendly JavaScript code"}, {"link": "", "title": "DLint: Dynamically checking bad coding practices in JavaScript"}, {"link": "", "title": "Fast and precise hybrid type inference for JavaScript"}, {"link": "", "title": "JSFlow: Tracking information flow in JavaScript and its APIs"}, {"link": "", "title": "Type analysis for JavaScript"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Computer programming as an art"}, {"link": "", "title": "Mining energy-greedy api usage patterns in android apps: an empirical study"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "RATA: Rapid atomic type analysis by abstract interpretation-application to JavaScript optimization"}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Seeds: a software engineer's energy-optimization decision support framework"}, {"link": "", "title": "Subsuming methods: Finding new optimisation opportunities in object-oriented software"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Systematic editing: generating program transformations from an example"}, {"link": "", "title": "Lase: locating and applying systematic edits by learning from examples"}, {"link": "/document/4577876", "title": "Crawling Ajax by inferring user interface state changes"}, {"link": "", "title": "You are what you include: large-scale evaluation of remote JavaScript inclusions"}, {"link": "", "title": "Caramel: Detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "JavaScript errors in the wild: An empirical study"}, {"link": "", "title": "Performance regression testing of concurrent classes"}, {"link": "", "title": "EventBreak: Analyzing the responsiveness of user interfaces through performance-guided test generation"}, {"link": "", "title": "TypeDevil: Dynamic type inconsistency analysis for JavaScript"}, {"link": "", "title": "The good, the bad, and the ugly: An empirical study of implicit type conversions in JavaScript"}, {"link": "", "title": "The eval that men do - a large-scale study of the use of eval in JavaScript applications"}, {"link": "", "title": "An analysis of the dynamic behavior of JavaScript programs"}, {"link": "", "title": "Dynamic determinacy analysis"}, {"link": "", "title": "Automatically fixing real-world JavaScript performance bugs"}, {"link": "/document/6606562", "title": "Guided test generation for web applications"}, {"link": "", "title": "Performance problems you can fix: A dynamic analysis of memoization opportunities"}, {"link": "", "title": "Finding low-utility data structures"}, {"link": "/document/6224281", "title": "A qualitative study on performance bugs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886892"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453121"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Fault localization using execution slices and dataflow tests"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "ReCrash: Making software failures reproducible by preserving object states"}, {"link": "", "title": "Framework for instruction-level tracing and analysis of program executions"}, {"link": "", "title": ""}, {"link": "", "title": "SymCrash: Selective recording for reproducing crashes"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Locating causes of program failures"}, {"link": "/document/6227111", "title": "ReBucket: A method for clustering duplicate crash reports based on call stack similarity"}, {"link": "", "title": ""}, {"link": "", "title": "Debugging in the (very) large: ten years of implementation and experience"}, {"link": "", "title": ""}, {"link": "", "title": "Tracking down software bugs using automatic anomaly detection"}, {"link": "", "title": ""}, {"link": "", "title": "Automated duplicate detection for bug tracking systems"}, {"link": "/document/6227168", "title": "BugRedux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Crash Graphs: An aggreated view of multiple crashes to improve crash triage"}, {"link": "", "title": "PSE: Explaining program failures via postmortem static analysis"}, {"link": "", "title": "Microsoft. The analyze extension"}, {"link": "", "title": "Microsoft. Debugging tools for Windows"}, {"link": "", "title": "Microsoft. Visual Studio"}, {"link": "/document/4401026", "title": "Automatically identifying known software problems"}, {"link": "", "title": "Dynamic test generation to find integer bugs in x86 binary linux programs"}, {"link": "", "title": "Mozilla crash reporter"}, {"link": "", "title": "Cycles, cells and platters: An empirical analysis of hardware failures on a million consumer PCs"}, {"link": "/document/1201224", "title": "Automated support for classifying software failure reports"}, {"link": "/document/1240292", "title": "Fault localization with nearest neighbor queries"}, {"link": "", "title": "The use of program profiling for software maintenance with applications to the year 2000 problem"}, {"link": "", "title": "Writing a Debugging Tools for Windows extension"}, {"link": "", "title": "Reconstructing core dumps"}, {"link": "", "title": "Using likely invariants for automated software fault localization"}, {"link": "/document/5463280", "title": "Do stack trace help developer fix bugs?"}, {"link": "", "title": "Thin slicing"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Triage: Diagnosing production run failures at the user's site"}, {"link": "", "title": "Ubuntu. Apport crash duplicates"}, {"link": "", "title": "Ubuntu. Crash reporting"}, {"link": "", "title": "Programmers use slices when debugging"}, {"link": "", "title": "Wikipedia. Call stack"}, {"link": "", "title": "Wikipedia. Calling convention"}, {"link": "", "title": "Wikipedia. Core dump"}, {"link": "", "title": "Wikipeida. Tail Call"}, {"link": "", "title": "Windows Dev Center. Slim reader/writer locks"}, {"link": "", "title": "CrashLocator: Locating crashing faults based on crash stacks"}, {"link": "", "title": "Execution Synthesis: A Technique for Automating the Debugging of Software"}, {"link": "", "title": "Execution synthesis: A technique for automated software debugging"}, {"link": "", "title": "Automated debugging for arbitrarily long executions"}, {"link": "", "title": "Isolating cause-effect chains from computer programs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886959"}
{"ref": [{"link": "", "title": "The critical security controls for effective cyber defense, version 5.1. Council on Cyber Security"}, {"link": "", "title": "Adaptive security management in saas applications"}, {"link": "", "title": "A vulnerability-centric requirements engineering framework: analyzing security attacks, countermeasures, and requirements based on vulnerabilities"}, {"link": "", "title": "Towards agile security risk management in RE and beyond"}, {"link": "", "title": "The Discovery of Grounded Theory"}, {"link": "/document/6357176", "title": "Extending agile processes with creativity techniques"}, {"link": "", "title": "Creativity and goal modeling for software requirements engineering"}, {"link": "", "title": "A Handbook of Incident and Accident Reporting"}, {"link": "", "title": "Mort user's manual for use with the management oversight and risk tree analytical logic diagram"}, {"link": "", "title": "Introducing abuse frames for analysing security requirements"}, {"link": "/document/4222624", "title": "Can requirements be creative? experiences with an enhanced air space management system"}, {"link": "", "title": "Development of the nrc's human performance investigation process (hpip)"}, {"link": "/document/5328931", "title": "Negative database for data security"}, {"link": "", "title": "Using root cause analysis to reduce falls in rural health care facilities"}, {"link": "", "title": "Requirements-driven adaptive security: Protecting variable assets at runtime"}, {"link": "/document/6051683", "title": "Unknown knowns: Tacit knowledge in requirements engineering"}, {"link": "", "title": "Keyboards and covert channels"}, {"link": "", "title": "Eliciting security requirements with misuse cases"}, {"link": "/document/6912262", "title": "Engineering topology aware adaptive security: Preventing requirements violations at runtime"}, {"link": "/document/1317437", "title": "Elaborating security requirements by construction of intentional anti-models"}, {"link": "", "title": "Incident data analysis using data mining techniques"}, {"link": "", "title": "Enforcing a security pattern in stakeholder goal models"}, {"link": "", "title": "Trends in steganography"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886963"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453160"}
{"ref": [{"link": "/document/1372316", "title": "Header and unit inference for spreadsheets through spatial analyses"}, {"link": "", "title": "Inferring templates from spreadsheets"}, {"link": "", "title": "UCheck: A spreadsheet type checker for end users"}, {"link": "/document/4609389", "title": "Mutation operators for spreadsheets"}, {"link": "/document/6976077", "title": "Smelling faults in spreadsheets"}, {"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "", "title": "A comparison of automated and manual spreadsheet error detection"}, {"link": "", "title": "Apache POI: the Java API for Microsoft Documents"}, {"link": "", "title": "Detecting errors in spreadsheets"}, {"link": "", "title": "Refactoring meets spreadsheet formulas"}, {"link": "", "title": "CheckCell: Data Debugging for Spreadsheets"}, {"link": "", "title": "Lof: identifying density-based local outliers"}, {"link": "", "title": "Spreadsheet errors and decision making: evidence from field interviews"}, {"link": "", "title": "Automatic detection of dimension errors in spreadsheets"}, {"link": "", "title": "A toolkit for scalable spreadsheet visualization"}, {"link": "", "title": "Spreadsheet engineering"}, {"link": "", "title": "CUSTODES project"}, {"link": "", "title": "Information-theoretic co-clustering"}, {"link": "", "title": "Is spreadsheet ambiguity harmful? Detecting and repairing spreadsheet smells due to ambiguous computation"}, {"link": "", "title": "VEnron: A Versioned Spreadsheet Corpus and Related Evolution Analsysis"}, {"link": "", "title": "The Euses spreadsheet corpus: a shared resource for supporting experimentation with spreadsheet dependability mechanisms"}, {"link": "", "title": "Scaling a dataflow testing methodology to the multiparadigm world of commercial spreadsheets"}, {"link": "", "title": "Refactoring: improving the design of existing code"}, {"link": "", "title": "An empirical study of spreadsheet error-finding performance"}, {"link": "", "title": "Damn Excel! How the \u2018most important software application of all time\u2019 is ruining the world"}, {"link": "", "title": "Data mining, Southeast Asia edition: Concepts and techniques"}, {"link": "", "title": "Solving the Problem of the K Parameter in the KNN Classifier Using an Ensemble Learning Approach"}, {"link": "", "title": "Automatically extracting class diagrams from spreadsheets"}, {"link": "/document/6227171", "title": "Detecting and visualizing inter-worksheet smells in spreadsheets"}, {"link": "", "title": "Detecting code smells in spreadsheet formulas"}, {"link": "", "title": "Data clone detection and visualization in spreadsheets"}, {"link": "", "title": "Detecting and Repairing Smelly Lookup Functions in Spreadsheets"}, {"link": "", "title": "Using layout information for spreadsheet visualization"}, {"link": "", "title": "Avoiding, finding and fixing spreadsheet errors-a survey of automated approaches for spreadsheet"}, {"link": "", "title": "Using singularity exponent in distance based classifier"}, {"link": "", "title": "Classifiers Based on Inverted Distances"}, {"link": "", "title": "The state of the art in end-user software engineering"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Finding high-level structures in spreadsheet programs"}, {"link": "", "title": "Spreadsheet Auditing Software"}, {"link": "", "title": "What we know about spreadsheet errors"}, {"link": "", "title": "Sarbanes-oxley: What about all the spreadsheets?"}, {"link": "", "title": "Espresso: Leveraging generic patterns for automatically harvesting semantic relations"}, {"link": "", "title": "Rted: a robust algorithm for the tree edit distance"}, {"link": "", "title": "A critical review of the literature on spreadsheet errors"}, {"link": "", "title": "Modeling spreadsheet audit: A rigorous approach to automatic visualization"}, {"link": "/document/1509505", "title": "Estimating the numbers of end users and end user programmers"}, {"link": "", "title": "Microsoft Excel 2000 power programming with VBA"}, {"link": "", "title": "Person name disambiguation by bootstrapping"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886926"}
{"ref": [{"link": "", "title": "On Mutation"}, {"link": "", "title": "Transforming mutation testing from the technology of the future into the technology of the present"}, {"link": "", "title": "Establishing theoretical minimal sets of mutants"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "/document/1703390", "title": "Using mutation analysis for assessing and comparing testing coverage criteria"}, {"link": "", "title": "Apache commons"}, {"link": "", "title": "Apache maven project"}, {"link": "", "title": "Toward the determination of sufficient mutant operators for c"}, {"link": "", "title": "Mutation Analysis of Program Test Data"}, {"link": "", "title": "Theoretical and empirical studies on using program mutation to test the functional correctness of programs"}, {"link": "", "title": "Mutation analysis"}, {"link": "", "title": "A greedy heuristic for the set-covering problem"}, {"link": "", "title": "Pit mutation testing"}, {"link": "", "title": "Pit mutation testing: Mutators"}, {"link": "", "title": "Software error analysis: A real case study involving real faults and mutations"}, {"link": "", "title": "An extended overview of the mothra software testing environment"}, {"link": "/document/1646911", "title": "Hints on test data selection: Help for the practicing programmer"}, {"link": "", "title": "Empirical evaluation of the statement deletion mutation operator"}, {"link": "", "title": "A quality estimation of mutation clustering in c# programs"}, {"link": "", "title": "Toward generalization of mutant clustering results in mutation testing"}, {"link": "", "title": "A threshold of ln n for approximating set cover"}, {"link": "", "title": "Software repository"}, {"link": "", "title": "Replication: Limits of mutation reduction strategies"}, {"link": "", "title": "Do mutation reduction strategies matter?"}, {"link": "/document/7381815", "title": "How hard does mutation analysis have to be, anyway?"}, {"link": "", "title": "What is the reverse of greedy algorithm for setcover? Theoretical Computer Science Stack Exchange"}, {"link": "", "title": "Mutation clustering"}, {"link": "", "title": "A novel method of mutation clustering based on domain analysis"}, {"link": "/document/4637557", "title": "Constructing subtle faults using higher order mutation testing"}, {"link": "", "title": "Higher Order Mutation Testing"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Reducibility among combinatorial problems"}, {"link": "/document/7107454", "title": "Static analysis of mutant subsumption"}, {"link": "/document/6825656", "title": "Mutant subsumption graphs"}, {"link": "", "title": "Fault diagnosis of computer programs"}, {"link": "", "title": "Mutation testing cost reduction by clustering overlapped mutants"}, {"link": "", "title": "Performance, effectiveness, and reliability issues in software testing"}, {"link": "", "title": "Foundations of Software Testing"}, {"link": "", "title": "An empirical comparison of data flow and mutation-based test adequacy criteria"}, {"link": "", "title": "Efficiency of mutation operators and selective mutation strategies: An empirical study"}, {"link": "/document/4144724", "title": "Finding sufficient mutation operators via variable reduction"}, {"link": "/document/346062", "title": "An experimental evaluation of selective mutation"}, {"link": "", "title": "Mutation 2000: Uniting the orthogonal"}, {"link": "", "title": "Subsumption of condition coverage techniques by mutation testing"}, {"link": "", "title": "Javalanche: Efficient mutation testing for java"}, {"link": "", "title": "Sufficient mutation operators for measuring test effectiveness"}, {"link": "", "title": "Machine learning approach in mutation testing"}, {"link": "", "title": "On reduced neighborhood mutation analysis using a single mutagenic operator"}, {"link": "", "title": "Reducing the cost of mutation testing: An empirical study"}, {"link": "", "title": "On Mutation and Data Flow"}, {"link": "", "title": "An empirical study on the scalability of selective mutation testing"}, {"link": "/document/6693070", "title": "Operator-based and random mutant selection: Better together"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886930"}
{"ref": [{"link": "", "title": "Behavioral Types in prograMING Languages"}, {"link": "", "title": "SSA is Functional Programming"}, {"link": "", "title": "Software model checking for distributed systems with selector-based, non-blocking communication"}, {"link": "", "title": "package ssa"}, {"link": "", "title": "go 1. 5. 1linux/amd64 deadlock detection failed"}, {"link": "", "title": "Core Erlang 1. 0 language specification"}, {"link": "", "title": "Types as models: model checking message-passing programs"}, {"link": "", "title": "Finite-Control Mobile Ambients"}, {"link": "", "title": "CoreOS"}, {"link": "", "title": "An Overview of the mCRL2 Toolset and Its Recent Advances"}, {"link": "", "title": "Model Checking Mobile Processes"}, {"link": "", "title": "Multiparty Session Types Meet Communicating Automata"}, {"link": "", "title": "Cooperating sequential process"}, {"link": "", "title": "Docker"}, {"link": "", "title": "Open Sourcing our Go Libraries"}, {"link": "", "title": "Termination Analysis of C Programs Using Compiler Intermediate Languages"}, {"link": "", "title": "Termination Analysis of Imperative Programs Using Bitvector Arithmetic"}, {"link": "", "title": "FDR3-A Modern Refinement Checker for CSP"}, {"link": "", "title": "Modeling and Analysis of Communicating Systems"}, {"link": "", "title": "The OpenCL Specification Version 2. 0"}, {"link": "", "title": "Model Checking JAVA Programs using JAVA PathFinder"}, {"link": "", "title": "Communicating Sequential Processes"}, {"link": "", "title": "Multiparty Asynchronous Session Types"}, {"link": "", "title": "Foundations of Session Types and Behavioural Contracts"}, {"link": "", "title": "A generic type system for the Pi-calculus"}, {"link": "", "title": "AstraNet"}, {"link": "", "title": "Kubernetes: Production-Grade Container Orchestration"}, {"link": "", "title": "Results on the Propositional mu-Calculus"}, {"link": "", "title": "Sound static deadlock analysis for C/Pthreads"}, {"link": "", "title": "Fencing off Go: Liveness and Safety for Channel-based Programming"}, {"link": "", "title": "Godel Checker"}, {"link": "", "title": "From Communicating Machines to Graphical Choreographies"}, {"link": "", "title": "Concurrency: State Models & Java Programs"}, {"link": "", "title": "A Calculus of Communicating Systems"}, {"link": "", "title": "Communication and Concurrency"}, {"link": "", "title": "Static deadlock detection for concurrent go by global session graph synthesis"}, {"link": "", "title": "Deadlock and Lock Freedom in the Linear zr-Calculus"}, {"link": "", "title": "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Go Concurrency Patterns: Pipelines and cancellation"}, {"link": "", "title": "Static Trace-Based Deadlock Analysis for Synchronous Mini-Go"}, {"link": "", "title": "Building a new router for GOV. UK"}, {"link": "", "title": "Collection of Golang concurrency patterns"}, {"link": "", "title": "Effective Go"}, {"link": "/document/873645", "title": "Model Checking Programs"}, {"link": "", "title": "How we built Uber engineering's highest query per second service using Go"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453195"}
{"ref": [{"link": "", "title": "Amazon EC2 service level agreement"}, {"link": "", "title": "Amazon Elastic Compute Cloud (Amazon EC2)"}, {"link": "", "title": "Microservices"}, {"link": "", "title": "The QWS dataset"}, {"link": "", "title": "Discovering the best Web service"}, {"link": "", "title": "QoS-based discovery and ranking of Web services"}, {"link": "", "title": "Combining global optimization with local selection for efficient qos-aware service composition"}, {"link": "", "title": "A hybrid approach for efficient web service composition with end-to-end qos constraints"}, {"link": "", "title": "Selecting skyline services for QoS-based web service composition"}, {"link": "", "title": "Global and local qos guarantee in Web service selection"}, {"link": "/document/4181707", "title": "Adaptive service composition in flexible processes"}, {"link": "", "title": "Service selection for happy users: making user-intuitive qualityabstractions"}, {"link": "", "title": "Open source (mixed-integer) linear programming system"}, {"link": "", "title": "The skyline operator"}, {"link": "", "title": "Qos-driven runtime adaptation of service oriented architectures"}, {"link": "", "title": "VeriWS: a tool for verification of combined functional and non-functional requirements of web service composition"}, {"link": "", "title": "Verification of functional and non-functional requirements of web service composition"}, {"link": "", "title": "Web services description language (wsdl) version 2.0"}, {"link": "", "title": "Simple Object Access Protocol (SOAP) Version 1.2"}, {"link": "", "title": "Optimization. Gurobi optimizer reference manual"}, {"link": "", "title": "Search-based software engineering"}, {"link": "", "title": "An enhanced PROMETHEE model for QoS-based Web service selection"}, {"link": "", "title": "On finding the maxima of a set of vectors"}, {"link": "", "title": "Management of time requirements in component-based systems"}, {"link": "", "title": "Nonlinear multiobjective optimization"}, {"link": "", "title": "Algorithms for knapsack problems"}, {"link": "", "title": "Prediction of atomic web services reliability based on k-means clustering"}, {"link": "", "title": "Towards verification of a service orchestration language"}, {"link": "/document/6606600", "title": "Dynamic synthesis of local time requirement for service composition"}, {"link": "", "title": "Automated runtime recovery for QoS-based service composition"}, {"link": "", "title": "Optimizing selection of competing features via feedback-directed evolutionary algorithms"}, {"link": "", "title": "Mixed integer programming"}, {"link": "", "title": "QoS-based service ranking and selection for service-based systems"}, {"link": "", "title": "Multiple attribute decision making: an introduction"}, {"link": "", "title": "Efficient algorithms for Web services selection with end-to-end QoS constraints"}, {"link": "", "title": "Qualitydriven Web services composition"}, {"link": "/document/1291834", "title": "QoS-aware middleware for Web services composition"}, {"link": "", "title": "Wspred: A time-aware personalized qos prediction framework for web services"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886894"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453087"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453091"}
{"ref": [{"link": "", "title": "A theory of timed automata"}, {"link": "", "title": "Apache Software Foundation"}, {"link": "", "title": "MapReduce for parallel trace validation of LTL properties"}, {"link": "", "title": "First internationalcompetition on software for runtime verification"}, {"link": "", "title": "Scalable offline monitoring"}, {"link": "", "title": "Monpoly: Monitoring usage-control policies"}, {"link": "/document/6493331", "title": "Monitoring data usage in distributed systems"}, {"link": "", "title": "Decentralised LTL monitoring"}, {"link": "", "title": "Efficient large-scale trace checking using MapReduce"}, {"link": "", "title": "Trace checking of metric temporal logic with aggregating modalities using MapReduce"}, {"link": "", "title": "The tale of SOLOIST: a specification language for service compositions interactions"}, {"link": "", "title": "On the expressiveness of TPTL and MTL"}, {"link": "", "title": "A finite-domain semantics for testing temporal logic specifications"}, {"link": "", "title": "MapReduce: Simplified data processing on large clusters"}, {"link": "", "title": "On the expressiveness of MTL in the pointwise and continuous semantics"}, {"link": "", "title": "Monitoring parametric temporal logic"}, {"link": "", "title": "Validating real-time systems by history-checking TRIO specifications"}, {"link": "", "title": "Online monitoring of metric temporal logic"}, {"link": "", "title": "Specifying real-time properties with metric temporal logic"}, {"link": "", "title": "MTL-MapReduce"}, {"link": "", "title": "Parallelized runtime verification of first-order LTL specifications"}, {"link": "", "title": "A model parametric real-time logic"}, {"link": "", "title": "Babeltrace: A collection of transducers for trace validation"}, {"link": "", "title": "Health Insurance Portability and Accountability Act of"}, {"link": "", "title": "Semantics and algorithms for parametric monitoring"}, {"link": "", "title": "Monitoring algorithms for metric temporal logic specifications"}, {"link": "", "title": "Wikipedia. Wikipedia page traffic statistics"}, {"link": "", "title": "Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing"}, {"link": "", "title": "Spark: Cluster computing with working sets"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886965"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453158"}
{"ref": [{"link": "/document/6974882", "title": "Towards an ontology of terms on technical debt"}, {"link": "", "title": "Design Rules"}, {"link": "", "title": "Software Architecture in Practice"}, {"link": "/document/5645451", "title": "Evaluating the impact of software evolution on software clustering"}, {"link": "/document/6226003", "title": "Visualising architectural dependencies"}, {"link": "", "title": "Managing technical debt in software-reliant systems"}, {"link": "", "title": "The WyCash portfolio management system"}, {"link": "/document/6336724", "title": "Estimating the principal of an application's technical debt"}, {"link": "/document/7332619", "title": "Detecting and quantifying different types of self-admitted technical debt"}, {"link": "", "title": "Technical debt at the crossroads of research and practice"}, {"link": "/document/6227172", "title": "Integrated impact analysis for managing software changes"}, {"link": "", "title": "Using concept analysis to detect co-change patterns"}, {"link": "", "title": "Design pattern decay: The case for class grime"}, {"link": "/document/5645449", "title": "Blending conceptual and evolutionary couplings to support change impact analysis in source code"}, {"link": "", "title": "A case study in locating the architectural roots of technical debt"}, {"link": "", "title": "Playing detective: Reconstructing software architecture from available evidence"}, {"link": "/document/6606741", "title": "Studying the effect of co-change dispersion on software quality"}, {"link": "/document/7180084", "title": "A study on the role of software architecture in the evolution and quality of software"}, {"link": "", "title": "A systematic mapping study on technical debt and its management"}, {"link": "/document/7158498", "title": "The danger of architectural technical debt: Contagious debt and vicious circles"}, {"link": "", "title": "Hotspot patterns: The formal definition and automatic detection of architecture smells"}, {"link": "", "title": "Mapping architectural decay instances to dependency models"}, {"link": "", "title": "Manufacturing execution systems: A vision for managing software development"}, {"link": "", "title": "Technical debt: The ultimate antipattern \u2014 the biggest costs may be hidden"}, {"link": "", "title": "Technical debt: Showing the way for better transfer of empirical results"}, {"link": "", "title": "Design rule spaces: A new form of architecture insight"}, {"link": "", "title": "Comparing four approaches for technical debt identification"}, {"link": "", "title": "Mining version histories to guide software changes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886928"}
{"ref": [{"link": "", "title": "Improving the maintainability of automated test suites"}, {"link": "/document/4760153", "title": "Recomputing coverage information to assist regression testing"}, {"link": "", "title": "Test case prioritization: an empirical study"}, {"link": "", "title": "A study of effective regression testing in practice"}, {"link": "", "title": "Testing evolving software"}, {"link": "", "title": "A safe, efficient regression test selection technique"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "", "title": "Search algorithms for regression test case prioritisation"}, {"link": "/document/6606565", "title": "Bridging the gap between the total and additional test-case prioritization strategies"}, {"link": "", "title": "A unified test case prioritization approach"}, {"link": "/document/6189361", "title": "Using dependency structures for prioritization of functional test suites"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "", "title": "Using test case reduction and prioritization to improve symbolic execution"}, {"link": "", "title": "Faster mutation testing inspired by test prioritization and reduction"}, {"link": "/document/5482587", "title": "The effects of time constraints on test case prioritization: A series of controlled experiments"}, {"link": "", "title": "Time-aware test-case prioritization using integer linear programming"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "Search based software engineering"}, {"link": "", "title": "Time aware test suite prioritization"}, {"link": "", "title": "Efficient time-aware prioritization with knapsack solvers"}, {"link": "", "title": "Localizing failure-inducing program edits based on spectrum information"}, {"link": "", "title": "Faulttracer: a change impact and regression fault analysis tool for evolving java programs"}, {"link": "", "title": "Balancing trade-offs in test-suite reduction"}, {"link": "", "title": "Comparing and combining test-suite reduction and regression test selection"}, {"link": "", "title": "Reliable testing: Detecting state-polluting tests to prevent test dependency"}, {"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "A controlled experiment assessing test case prioritization techniques via mutation faults"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing"}, {"link": "", "title": "On the use of mutation faults in empirical assessments of test case prioritization techniques"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "An information retrieval approach for regression test prioritization based on program changes"}, {"link": "", "title": "Defects4j: A database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": "Introductory statistics"}, {"link": "", "title": "Is operator-based mutant selection superior to random mutant selection?"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Individual comparisons by ranking methods"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: a survey"}, {"link": "/document/1317433", "title": "Bi-criteria models for all-uses test suite reduction"}, {"link": "", "title": "Empirical studies of test-suite reduction"}, {"link": "", "title": "An empirical study of junit test-suite reduction"}, {"link": "", "title": "On the limit of control flow analysis for regression test selection"}, {"link": "/document/7515478", "title": "A text-vector based approach to test case prioritization"}, {"link": "", "title": "Mutation-based test-case prioritization in software evolution"}, {"link": "", "title": "To be optimal or not in test-case prioritization"}, {"link": "", "title": "Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge"}, {"link": "/document/988497", "title": "Test case prioritization: A family of empirical studies"}, {"link": "", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "Using the case-based ranking methodology for test case prioritization"}, {"link": "/document/6009447", "title": "Test case prioritization for audit testing of evolving web services using information retrieval techniques"}, {"link": "", "title": "An information retrieval approach for regression test prioritization based on program changes"}, {"link": "", "title": "Empirical studies of test case prioritization in a JUnit testing environment"}, {"link": "", "title": "Test-suite reduction and prioritization for modified condition/decision coverage"}, {"link": "/document/5306350", "title": "Prioritizing JUnit test cases in absence of coverage information"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "", "title": "Data flow testing of service-oriented workflow applications"}, {"link": "", "title": "Test case prioritization for regression testing of service-oriented business applications"}, {"link": "", "title": "Prioritizing state-based aspect tests"}, {"link": "", "title": "Static test case prioritization using topic models"}, {"link": "/document/919106", "title": "Incorporating varying test costs and fault severities into test case prioritization"}, {"link": "/document/4579792", "title": "Historical value-based approach for cost-cognizant test case prioritization to improve the effectiveness of regression testing"}, {"link": "", "title": "Quota-constrained test-case prioritization for regression testing of service-centric systems"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "An empirical study of the effect of time constraints on the cost-benefits of regression testing"}, {"link": "", "title": "Cost-cognizant test case prioritization"}, {"link": "", "title": "Using sensitivity analysis to create simplified economic models for regression testing"}, {"link": "", "title": "An empirical study of regression testing techniques incorporating context and lifecycle factors and improved cost-benefit models"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886932"}
{"ref": [{"link": "", "title": "Learning I/O automata"}, {"link": "", "title": "Mining interface specifications for generating checkable robustness properties"}, {"link": "", "title": "Synthesis of interface specifications for Java classes"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Learning regular sets from queries and counterexamples"}, {"link": "", "title": "FlowDroid: Precise context, flow, field, object-sensitive and lifccyclc-aware taint analysis for Android apps"}, {"link": "", "title": "An empirical study of object protocols in the wild"}, {"link": "", "title": "Scalable race detection for android applications"}, {"link": "", "title": "Selective control-flow abstraction via jumping"}, {"link": "", "title": "Edgeminer: Automatically detecting implicit control flow transitions through the android framework"}, {"link": "", "title": "Enabledness-based program abstractions for behavior validation"}, {"link": "/document/1702519", "title": "Testing software design modeled by finite-state machines"}, {"link": "", "title": "Mining object behavior with adabu"}, {"link": "", "title": "Interface automata"}, {"link": "", "title": "Apposcopy: Semantics-based detection of Android malware through static analysis"}, {"link": "/document/87284", "title": "Test selection based on finite state models"}, {"link": "", "title": "Javert: Fully automatic mining of general temporal properties from dynamic traces"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Symbolic learning of component interfaces"}, {"link": "/document/1671568", "title": "A method for the design of fault detection experiments"}, {"link": "", "title": "Information-flow analysis of Android applications in Droid-Safe"}, {"link": "", "title": "Fault detecting experiments for sequential circuits"}, {"link": "", "title": "Permissive interfaces"}, {"link": "", "title": "Race detection for event-driven mobile applications"}, {"link": "", "title": "Domain-specific optimization in automata learning"}, {"link": "", "title": "Static analysis of event-driven node. js javascript applications"}, {"link": "", "title": "Race detection for android applications"}, {"link": "", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "", "title": "Learning asynchronous typestates for android classes"}, {"link": "", "title": "Inference of finite automata using homing sequences"}, {"link": "", "title": "A new technique for generating protocol test"}, {"link": "", "title": "Inferring mealy machines"}, {"link": "", "title": "A Second Course in Formal Languages and Automata Theory"}, {"link": "", "title": "Static specification mining using automata-based abstractions"}, {"link": "", "title": "Fail fast [software debugging]"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "/document/151662", "title": "On the relationship between process algebra and in-put/output automata"}, {"link": "/document/4639328", "title": "Inferring finite-state models with temporal constraints"}, {"link": "", "title": "Amandroid: A precise and general inter-component data flow analysis framework for security vetting of android apps"}, {"link": "", "title": "Automatic extraction of object-oriented component interfaces"}, {"link": "", "title": "Perracotta: Mining temporal api rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453197"}
{"ref": [{"link": "/document/865899", "title": "A field study of the adoptxion of software process innovations by information systems professionals"}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "/document/6498460", "title": "What do the asserts in a unit test tell us about code quality? a study on open source and industrial projects"}, {"link": "", "title": "Robustness and diagnosability of oo systems designed by contracts"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "Does distributed development affect software quality?: an empirical case study of windows vista"}, {"link": "", "title": "Don't touch my code!: examining the effects of ownership on software quality"}, {"link": "/document/5069479", "title": "Evaluating the relation between coding standard violations and faultswithin and across software versions"}, {"link": "", "title": "Social ties and word-of-mouth referral behavior"}, {"link": "", "title": "Remembering emotional events"}, {"link": "", "title": "Bayesian experimental design: A review"}, {"link": "", "title": "Evidence based medicine"}, {"link": "/document/1377125", "title": "Evidence-based software engineering for practitioners"}, {"link": "/document/935855", "title": "The confounding effect of class size on the validity of object-oriented metrics"}, {"link": "", "title": "An experiment about static and dynamic type systems: Doubts about the positive impact of static type systems on development time"}, {"link": "", "title": "Investigating determinants of software developers' intentions to follow methodologies"}, {"link": "/document/7180076", "title": "Will they like this? evaluating code contributions with language models"}, {"link": "/document/1205177", "title": "An empirical study of speed and communication in globally distributed software development"}, {"link": "", "title": "Motivation of software developers in open source projects: an internet-based survey of contributors to the linux kernel"}, {"link": "", "title": "Effect of the statistical significance of results on the time to completion and publication of randomized efficacy trials"}, {"link": "", "title": "Why most published research findings are false"}, {"link": "", "title": "Software architecture improvement through test-driven development"}, {"link": "", "title": "Believing is seeing: Confirmation bias studies in software engineering"}, {"link": "", "title": "Guidelines for performing systematic literature reviews in software engineering"}, {"link": "", "title": "Software complexity and software maintenance: A survey of empirical research"}, {"link": "", "title": "Systematic literature reviews in software engineering-a systematic literature review"}, {"link": "", "title": "Evidence-based software engineering"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "/document/6606637", "title": "Distributed development considered harmful?"}, {"link": "", "title": "Maintaining mental models: a study of developer work habits"}, {"link": "", "title": "How practitioners perceive the relevance of software engineering research"}, {"link": "", "title": "Secure open source collaboration: an empirical study of linus' law"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "/document/6772130", "title": "Predicting risk of software changes"}, {"link": "/document/1553571", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Confirmation bias: A ubiquitous phenomenon in many guises"}, {"link": "/document/6681374", "title": "Recommendations to the adoption of new software practices: A case study of team intention and behavior in three software companies"}, {"link": "/document/601071", "title": "An experiment to assess the cost-benefits of code inspections in large scale software development"}, {"link": "", "title": "Ownership, experience and defects: a fine-grained study of authorship"}, {"link": "", "title": "How, and why, process metrics are better"}, {"link": "", "title": "Comparing static bug finders and statistical prediction"}, {"link": "", "title": "Recalling the imprecision of cross-project defect prediction"}, {"link": "/document/1237993", "title": "Persuading developers to \u201cbuy into\u201d software process improvement: a local opinion and empirical evidence"}, {"link": "", "title": "Globally distributed software development project performance: an empirical analysis"}, {"link": "", "title": "Configuring global software teams: a multi-company analysis of project productivity quality, and profits"}, {"link": "", "title": "A large scale study of programming languages and code quality in github"}, {"link": "/document/707699", "title": "Factors that impact implementing a system development methodology"}, {"link": "", "title": "An industrial study on the risk of software changes"}, {"link": "", "title": "Archetypal source code searches: A survey of software developers and maintainers"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "/document/820730", "title": "The adoption of new technology: the case of object-oriented computing in software companies"}, {"link": "/document/6171", "title": "Program readability: Procedures versus comments"}, {"link": "", "title": "To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools"}, {"link": "", "title": "What educated citizens should know about statistics and probability"}, {"link": "", "title": "Assessing the probability that a positive report is false: an approach for molecular epidemiology studies"}, {"link": "", "title": "Comparing bug finding tools with reviews and tests"}, {"link": "", "title": "Do too many cooks spoil the broth? using the number of developers to enhance defect prediction models"}, {"link": "/document/1628970", "title": "On the value of static analysis for fault detection in software"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886896"}
{"ref": [{"link": "", "title": "Add Dramatic Rain to a Photo in Photoshop"}, {"link": "", "title": "How to create mist: Photoshop effects for atmospheric landscapes"}, {"link": "", "title": "The OpenCV Reference Manual"}, {"link": "", "title": "This Is How Bad Self-Driving Cars Suck In The Rain"}, {"link": "", "title": "Affine Transformation"}, {"link": "", "title": "Affine Transformations"}, {"link": "", "title": "Open Source Computer Vision Library"}, {"link": "", "title": "Chauffeur model"}, {"link": "", "title": "comma. ai's steering model"}, {"link": "", "title": "Epoch model"}, {"link": "", "title": "Google Auto Waymo Disengagement Report for Autonomous Driving"}, {"link": "", "title": "Google's Self-Driving Car Caused Its First Crash"}, {"link": "", "title": "Rambo model"}, {"link": "", "title": "Tesla Autopilot"}, {"link": "", "title": "Udacity self driving car challenge 2"}, {"link": "", "title": "Udacity self driving car challenge 2 dataset"}, {"link": "", "title": "Who's responsible when an autonomous car crashes?"}, {"link": "", "title": "Autonomous Vehicles Enacted Legislation"}, {"link": "", "title": "Baidu Apollo"}, {"link": "", "title": "Inside Waymo's Secret World for Training Self-Driving Cars"}, {"link": "", "title": "The Numbers Don't Lie: Self-Driving Cars Are Getting Good"}, {"link": "", "title": "Software 2. 0"}, {"link": "", "title": "Tesla's Self-Driving System Cleared in Deadly Crash"}, {"link": "", "title": "Tensorflow: Large-scale machine learning on heterogeneous distributed systems"}, {"link": "", "title": "Testing advanced driver assistance systems using multi-objective search and neural networks"}, {"link": "", "title": "The challenge of verification and testing of machine learning"}, {"link": "", "title": "An orchestrated survey of methodologies for automated software test case generation"}, {"link": "", "title": "Evading Next-Gen AV using A. I"}, {"link": "", "title": "Measuring neural net robustness with constraints"}, {"link": "", "title": "Greedy layer-wise training of deep networks"}, {"link": "", "title": "End to end learning for self-driving cars"}, {"link": "/document/7958570", "title": "Towards evaluating the robustness of neural networks"}, {"link": "", "title": "Metamorphic testing: a new approach for generating next test cases"}, {"link": "", "title": "Keras"}, {"link": "", "title": "Parseval networks: Improving robustness to adversarial examples"}, {"link": "", "title": "Autonomous Vehicle Disengagement Reports"}, {"link": "", "title": "Robust Physical-World Attacks on Machine Learning Models"}, {"link": "", "title": "Detecting Adversarial Samples from Artifacts"}, {"link": "", "title": "Deep Learning"}, {"link": "", "title": "Explaining and harnessing adversarial examples"}, {"link": "", "title": "On the (statistical) detection of adversarial examples"}, {"link": "", "title": "Adversarial Perturbations Against Deep Neural Networks for Malware Classification"}, {"link": "", "title": "Towards deep neural network architectures robust to adversarial examples"}, {"link": "", "title": "Comparison of values of Pearson's and Spearman's correlation coefficients on the same sets of data"}, {"link": "", "title": "Using convolutional neural networks for image recognition"}, {"link": "", "title": "Gradient flow in recurrent nets: the difficulty of learning long-term dependencies"}, {"link": "", "title": "Long short-term memory"}, {"link": "", "title": "Safety verification of deep neural networks"}, {"link": "", "title": "Recurrent Neural Networks: Design and Applications"}, {"link": "", "title": "Convolutional neural networks"}, {"link": "", "title": "Reluplex: An Efficient SMT Solver for Verifying Deep Neural Networks"}, {"link": "", "title": "Adversarial examples for generative models"}, {"link": "", "title": "Imagenet classification with deep convolutional neural networks"}, {"link": "", "title": "Practical evasion of a learning-based classifier: A case study"}, {"link": "", "title": "Delving into Transferable Adversarial Examples and Black-box Attacks"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "On detecting adversarial perturbations"}, {"link": "", "title": "Machine Learning"}, {"link": "", "title": "Adversarial Training Methods for Semi-Supervised Text Classification"}, {"link": "", "title": "Properties of Machine Learning Applications for Use in Metamorphic Testing"}, {"link": "", "title": "Rectified linear units improve restricted boltzmann machines"}, {"link": "", "title": "Simple black-box adversarial perturbations for deep networks"}, {"link": "", "title": "Deep neural networks are easily fooled: High confidence predictions for unrecognizable images"}, {"link": "", "title": "Extending Defensive Distillation"}, {"link": "", "title": "Practical black-box attacks against machine learning"}, {"link": "/document/7467366", "title": "The limitations of deep learning in adversarial settings"}, {"link": "", "title": "Crafting adversarial input sequences for recurrent neural networks"}, {"link": "/document/7546524", "title": "Distillation as a defense to adversarial perturbations against deep neural networks"}, {"link": "", "title": "A survey of new trends in symbolic execution for software testing and analysis"}, {"link": "", "title": "DeepXplore: Automated Whitebox Testing of Deep Learning Systems"}, {"link": "", "title": "An abstraction-refinement approach to verification of artificial neural networks"}, {"link": "", "title": "Learning representations by back-propagating errors"}, {"link": "", "title": "Machine Learning: The High Interest Credit Card of Technical Debt"}, {"link": "", "title": "Understanding adversarial training: Increasing local stability of neural nets through robust optimization"}, {"link": "", "title": "Accessorize to a crime: Real and stealthy attacks on state-of-the-art face recognition"}, {"link": "", "title": "The proof and measurement of association between two things"}, {"link": "", "title": "Certified Defenses for Data Poisoning Attacks"}, {"link": "", "title": "Intriguing properties of neural networks"}, {"link": "", "title": "Theano Development Team. 2016"}, {"link": "", "title": "Man vs. Machine: Practical Adversarial Detection of Malicious Crowdsourcing Workers"}, {"link": "", "title": "Can we still avoid automatic face detection?"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}, {"link": "", "title": "Application of metamorphic testing to supervised classifiers"}, {"link": "", "title": "Feature Squeezing: Detecting Adversarial Examples in Deep Neural Networks"}, {"link": "", "title": "Automatically evading classifiers"}, {"link": "", "title": "Improving the robustness of deep neural networks via stability training"}, {"link": "", "title": "Metamorphic testing and its applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453089"}
{"ref": [{"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": "Demand-driven compositional symbolic execution"}, {"link": "", "title": "JPF-SE: A Symbolic Execution Extension to Java PathFinder"}, {"link": "", "title": "Program Analysis and Specialization for the C Programming Language"}, {"link": "", "title": "Reusing constraint proofs in program analysis"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "A survey of empirical results on program slicing"}, {"link": "", "title": "RWset: Attacking path explosion in constraint-based test generation"}, {"link": "", "title": "Redundant state detection for dynamic symbolic execution"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs"}, {"link": "", "title": "EXE: Automatically Generating Inputs of Death"}, {"link": "", "title": "Symbolic Execution for Software Testing in Practice-Preliminary Assessment"}, {"link": "", "title": "Symbolic Execution for Software Testing: Three Decades Later"}, {"link": "", "title": "Unleashing Mayhem on binary code"}, {"link": "", "title": "Reverse engineering of binary device drivers with revnic"}, {"link": "", "title": "Symbolic crosschecking of floating-point and SIMD code"}, {"link": "/document/6698391", "title": "Symbolic crosschecking of data-parallel floating-point code"}, {"link": "", "title": "Satisfiability modulo theories: introduction and applications"}, {"link": "", "title": "DG website"}, {"link": "", "title": "Optimizing constraint solving to better support symbolic execution"}, {"link": "", "title": "A decision procedure for bit-vectors and arrays"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Pointer analysis: Haven't we solved this problem yet?"}, {"link": "", "title": "Enhancing reuse of constraint solutions to improve symbolic execution"}, {"link": "", "title": "Efficient state merging in symbolic execution"}, {"link": "", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "A comparative study of incremental constraint solving approaches in symbolic execution"}, {"link": "", "title": "Valgrind: A program supervision framework"}, {"link": "", "title": "SemFix: Program repair via semantic analysis"}, {"link": "", "title": "Multi-solver support in symbolic execution"}, {"link": "", "title": "Accelerating array constraints in symbolic execution"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "Multise: Multi-path symbolic execution using value summaries"}, {"link": "", "title": "Pointer analysis"}, {"link": "", "title": "SVF: Interprocedural static value-flow analysis in LLVM"}, {"link": "", "title": "Pex: white box test generation for. NET"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "", "title": "Green: reducing, reusing and recycling constraints in program analysis"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "A brief survey of program slicing"}, {"link": "", "title": "Memoized symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453093"}
{"ref": [{"link": "", "title": "Baggy bounds checking: an efficient and backwards-compatible defense against out-of-bounds errors"}, {"link": "", "title": "ODR: Output-deterministic replay for multicore debugging"}, {"link": "", "title": "DUMA- Detect Unintended Memory Access"}, {"link": "", "title": "Composing high-performance memory allocators"}, {"link": "", "title": "Bell: Bit-encoding online memory leak detection"}, {"link": "", "title": "Hypervisor-based fault tolerance"}, {"link": "/document/1191551", "title": "An infrastructure for adaptive dynamic optimization"}, {"link": "", "title": "Practical memory checking with dr. memory"}, {"link": "", "title": "Undangle: early detection of dangling pointers in use-after-free and double-free vulnerabilities"}, {"link": "", "title": "Decoupling dynamic program analysis from execution in virtual environments"}, {"link": "", "title": "Stackguard: Automatic adaptive detection and prevention of buffer-overflow attacks"}, {"link": "", "title": "Mudflap: pointer use checking for C/C++. Red Hat Inc."}, {"link": "", "title": "Light-weight bounds checking"}, {"link": "", "title": "Purify: Fast detection of memory leaks and access errors"}, {"link": "", "title": "Low-overhead memory leak detection using adaptive statistical profiling"}, {"link": "", "title": "vim: heap buffer overflow"}, {"link": "", "title": "Information Technology Laboratory, Software and Systems Division. Nist samate reference dataset project"}, {"link": "", "title": "Intel Corporation. Intel inspector xe 2013"}, {"link": "", "title": "Debugging operating systems with time-traveling virtual machines"}, {"link": "", "title": "Buffer overflow in bzip2's bzip2recover"}, {"link": "", "title": "The GNU C library"}, {"link": "", "title": "Respec: efficient online multiprocessor replay via speculation and external determinism"}, {"link": "", "title": "Bugbench: Benchmarks for evaluating bug detection tools"}, {"link": "", "title": "Pin: Building customized program analysis tools with dynamic instrumentation"}, {"link": "", "title": "Mac OS X Develper Library. Enabling the malloc debugging features"}, {"link": "", "title": "Microfocus. Micro focus devpartner boundschecker"}, {"link": "", "title": "Ccured: Type-safe retrofitting of legacy code"}, {"link": "", "title": "Valgrind: a framework for heavyweight dynamic binary instrumentation"}, {"link": "", "title": "Parallelizing security checks on commodity hardware"}, {"link": "", "title": "Exterminator: automatically correcting memory errors with high probability"}, {"link": "", "title": "Efficiently and precisely locating memory leaks and bloat"}, {"link": "", "title": "Oracle Corporation. Sun memory error discovery tool (discover)"}, {"link": "", "title": "Runtime Analysis and Memory Error Detection for C and C++"}, {"link": "", "title": "PRES: probabilistic replay with execution sketching on multiprocessors"}, {"link": "", "title": "Electric Fence"}, {"link": "", "title": "Rx: Treating bugs as allergies\u2014a safe method to survive software failures"}, {"link": "", "title": "RecPlay: a fully integrated practical record/replay system"}, {"link": "", "title": "AddressSanitizer: a fast address sanity checker"}, {"link": "", "title": "Flashback: a lightweight extension for rollback and deterministic replay for software debugging"}, {"link": "", "title": "Triage: Diagnosing production run failures at the user's site"}, {"link": "", "title": "DoublePlay: parallelizing sequential logging and replay"}, {"link": "", "title": "Uniprocessor garbage collection techniques"}, {"link": "", "title": "Cruiser: concurrent heap buffer overflow monitoring using lock-free data structures"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886967"}
{"ref": [{"link": "", "title": "Android Malware Genome Project"}, {"link": "", "title": "Android Source Code Tree"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Patch for FakeID"}, {"link": "", "title": "Patch for Heartbleed"}, {"link": "", "title": ""}, {"link": "", "title": "PoC for Heartbleed"}, {"link": "", "title": "Proportion of devices running vulnerable versions of Android"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Bluebox. Android Fake ID Vulnerability Lets Malware Impersonate Trusted Applications"}, {"link": "", "title": "CNET. M is for Marshmallow: Google names its next Android update"}, {"link": "", "title": "ExtremeTech. Google Throws Nearly a Billion Android Users Under the Bus, Refuses to Patch OS Vulnerability"}, {"link": "", "title": "Forbes. Report: 97% Of Mobile Malware Is On Android"}, {"link": "", "title": "Inquirer. Outdated Android Devices Are Exposing 400 Million Users to Security Threats"}, {"link": "", "title": "International Data Corporation. Smartphone OS Market Share"}, {"link": "", "title": "ISPRAS. Static ARM Binary Code Instrumentation"}, {"link": "", "title": "Neowin. HTC Officially Stops One S Updates, Barely a Year after Launch"}, {"link": "", "title": "OpenSSL. The Heartbleed Bug"}, {"link": "", "title": "TechTarget. Rooted Android Device Risks Include Network Access, Data Theft"}, {"link": "", "title": "Wikipedia. Android Version History"}, {"link": "", "title": "Xda-Developers. List of Devices Able to Run Xposed on Lollipop"}, {"link": "", "title": "FlowDroid: Precise Context, Flow, Field, object-Sensitive and Lifecycle-Aware Taint Analysis for Android Apps"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Flexible and Fine-Grained Mandatory Access Control on Android for Diverse Security and Privacy Policies"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Security-by-Contract on the. NET Platform. Technical Report"}, {"link": "", "title": ""}, {"link": "", "title": "QUIRE: Lightweight Provenance for Smart Phone Operating Systems"}, {"link": "", "title": ""}, {"link": "", "title": "The Inlined Reference Monitor Approach to Security Policy Enforcement"}, {"link": "", "title": "AndroidLeaks: Automatically Detecting Potential Privacy Leaks in Android Applications on a Large Scale"}, {"link": "", "title": "These Aren't the Droids You're Looking For"}, {"link": "", "title": "Dr. Android and Mr. Hide: Fi- ne-Grained Security Policies on Unmodified Android"}, {"link": "", "title": "PatchDroid: Scalable Third-party Security Patches for Android Devices"}, {"link": "", "title": "Semantically Rich Application-Centric Security in Android"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Evading Android Runtime Analysis via Sandbox Detection"}, {"link": "", "title": "Vulnerability Detection and Mitigation in Commodity Android Devices"}, {"link": "", "title": ""}, {"link": "", "title": "DroidScope: Seamlessly Reconstructing the OS and Dalvik Semantic Views for Dynamic Android Malware Analysis"}, {"link": "", "title": ""}, {"link": "", "title": "Taming In-formation-Stealing Smartphone Applications (on Android)"}, {"link": "/document/6234407", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886971"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453060"}
{"ref": [{"link": "", "title": "Android monkey"}, {"link": "", "title": "Android testing framework"}, {"link": "", "title": ""}, {"link": "", "title": "F-droid"}, {"link": "", "title": "Robolectric"}, {"link": "", "title": "Robotium"}, {"link": "", "title": "Trimdroid"}, {"link": "", "title": "A gui crawling-based technique for android mobile application testing"}, {"link": "", "title": "Using gui ripping for automated testing of android applications"}, {"link": "", "title": "Introduction to software testing"}, {"link": "", "title": "Automated concolic testing of smartphone apps"}, {"link": "", "title": "Targeted and depth-first exploration for systematic testing of android apps"}, {"link": "", "title": "Dexpler:converting android dalvik bytecode to jimple for static analysis with soot"}, {"link": "", "title": "Guided gui testing of android apps with minimal restart and approximate learning"}, {"link": "/document/7372031", "title": "Automated test input generation for android: Are we there yet"}, {"link": "", "title": "Market Share: Ultramobiles by Region, OS and Form Factor, 4Q13 and 2013"}, {"link": "/document/7107450", "title": "Towards mutation analysis of android apps"}, {"link": "", "title": "Pwisegen: Generating test cases for pairwise testing using genetic algorithms"}, {"link": "", "title": "Event listener analysis and symbolic execution for testing gui applications"}, {"link": "", "title": "Combination testing strategies: a survey"}, {"link": "", "title": "Automating gui testing for android applications"}, {"link": "", "title": "Alloy: a lightweight object modelling notation"}, {"link": "", "title": "Automated testing with targeted event sequence generation"}, {"link": "", "title": "Troyd: Integration testing for android"}, {"link": "", "title": "Reducing combinatorics in testing product lines"}, {"link": "", "title": "In-parameter-order: A test generation strategy for pairwise testing"}, {"link": "", "title": "Dynodroid: An input generation system for android apps"}, {"link": "/document/6228986", "title": "A whitebox approach for automated security testing of android applications on the cloud"}, {"link": "", "title": "Evodroid: Segmented evolutionary testing of android apps"}, {"link": "/document/7381839", "title": "Sig-droid: Automated system input generation for android applications"}, {"link": "", "title": "Testing android apps through symbolic execution"}, {"link": "", "title": "Combining model-based and combinatorial testing for effective test case generation"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Efficiency and early fault detection with lower and higher strength combinatorial interaction testing"}, {"link": "/document/1702019", "title": "Selecting software test data using data flow information"}, {"link": "", "title": "Comparing the fault detection effectiveness of n-way and random test suites"}, {"link": "", "title": "Soot - a java bytecode optimization framework"}, {"link": "", "title": "A grey-box approach for automated gui-model generation of mobile applications"}, {"link": "", "title": "Covering array sampling of input event sequences for automated gui testing"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886934"}
{"ref": [{"link": "", "title": "CAUT project"}, {"link": "", "title": "CIVL project"}, {"link": "", "title": "CREST project"}, {"link": "", "title": "The dacapo benchmark suite"}, {"link": "", "title": "Google scholar"}, {"link": "", "title": "Google summer of code"}, {"link": "", "title": "JCUTE project"}, {"link": "", "title": "KLEE LLVM execution engine website"}, {"link": "", "title": "KLEE project"}, {"link": "", "title": ""}, {"link": "", "title": "Soot project"}, {"link": "", "title": "SPF project"}, {"link": "", "title": "Modeling firmware as service functions and its application to test generation"}, {"link": "", "title": "Sahara: Guiding the debugging of failed software upgrades"}, {"link": "/document/6728886", "title": "Static analysis driven cache performance testing"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "Design and results of the satisfiability modulo theories competition"}, {"link": "", "title": "Unit testing tool competitions-lessons learned"}, {"link": "", "title": "Status report on software verification"}, {"link": "", "title": "Scholarship reconsidered: Priorities of the professoriate"}, {"link": "", "title": "Replication's role in software engineering"}, {"link": "", "title": "Prototyping symbolic execution engines for interpreted languages"}, {"link": "", "title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Scalable testing of file system checkers"}, {"link": "", "title": "Automated software testing of memory performance in embedded GPUs"}, {"link": "", "title": "Automatic concolic test generation with virtual prototypes for post-silicon validation"}, {"link": "", "title": "Bogor/kiasan: A k-bounded symbolic execution for checking strong heap properties of open systems"}, {"link": "", "title": "Solving complex path conditions through heuristic search on induced polytopes"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "Software dataplane verification"}, {"link": "", "title": "An extensible SAT-solver"}, {"link": "", "title": "The daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Large-scale evaluation of a vulnerability analysis framework"}, {"link": "", "title": "Extending the theory of arrays: memset, memcpy, and beyond"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "", "title": "HAMPI: A string solver for testing, analysis and vulnerability detection"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "", "title": "SAGE: whitebox fuzzing for security testing"}, {"link": "", "title": "Assessing open source software as a scholarly contribution"}, {"link": "", "title": "How is software visible in the scientific literature?"}, {"link": "", "title": "Incentives and integration in scientific software production"}, {"link": "", "title": "Craxweb: Automatic web application testing and attack generation"}, {"link": "", "title": "Why most published research findings are false"}, {"link": "/document/6227168", "title": "BugRedux: reproducing field failures for in-house debugging"}, {"link": "", "title": "Replication of software engineering experiments"}, {"link": "", "title": "MintHint: automated synthesis of repair hints"}, {"link": "", "title": "Citation and attribution of digital products: Social and technological concerns"}, {"link": "", "title": "Summary of the first workshop on sustainable software for science (WSSSPE): Practice and experiences"}, {"link": "/document/6823878", "title": "Reproducing field failures for programs with complex grammar-based input"}, {"link": "", "title": "Finding latent performance bugs in systems implementations"}, {"link": "", "title": "A scalable distributed concolic testing approach: An empirical evaluation"}, {"link": "/document/6227105", "title": "Industrial application of concolic testing approach: A case study on libexif by using CREST-BV and KLEE"}, {"link": "", "title": "Accurately citing software and algorithms used in publications"}, {"link": "", "title": "The real software crisis: repeatability as a core value"}, {"link": "", "title": "Docovery: toward generic automatic document recovery"}, {"link": "", "title": "A soft way for openflow switch interoperability testing"}, {"link": "", "title": "GKLEE: Concolic verification and test generation for gpus"}, {"link": "", "title": "Detecting problematic message sequences and frequencies in distributed systems"}, {"link": "", "title": "Control flow obfuscation using neural network to fight concolic testing"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "", "title": "Reproducible research-what, why and how"}, {"link": "", "title": "Path-exploration lifting: Hi-fi tests for lo-fi emulators"}, {"link": "", "title": "Performance and participation in open source software on GitHub"}, {"link": "", "title": "Evaluating computer scientists and engineers for promotion and tenure"}, {"link": "", "title": "Reproducible research in computational science"}, {"link": "/document/6975644", "title": "Instrumentation of annotated c programs for test generation"}, {"link": "", "title": "Repeatability and benefaction in computer systems research"}, {"link": "", "title": "Discovery over application: A case study of misaligned incentives in software engineering"}, {"link": "", "title": "Safely reducing the cost of unit level symbolic execution through read/write analysis"}, {"link": "", "title": "KleeNet: discovering insidious interaction bugs in wireless sensor networks before deployment"}, {"link": "", "title": "Chaining test cases for reactive system testing"}, {"link": "", "title": "How we get there: a context-guided search strategy in concolic testing"}, {"link": "/document/6824804", "title": "Researcher bias: The use of machine learning in software defect prediction"}, {"link": "", "title": "Views on internal and external validity in empirical software engineering"}, {"link": "", "title": "Body armor for binaries: Preventing buffer overflows without recompilation"}, {"link": "/document/6671585", "title": "itree: efficiently discovering high-coverage configurations using interaction trees"}, {"link": "", "title": "Symbolic software model validation"}, {"link": "", "title": "Combining symbolic execution and model checking for data flow testing"}, {"link": "", "title": "Selecting peers for execution comparison"}, {"link": "", "title": "Revealing and repairing configuration inconsistencies in large-scale system software"}, {"link": "", "title": "Pex-white box test generation for. net"}, {"link": "", "title": "Green: reducing, reusing and recycling constraints in program analysis"}, {"link": "", "title": "Jitk: a trustworthy in-kernel interpreter infrastructure"}, {"link": "", "title": "Postconditioned symbolic execution"}, {"link": "", "title": "A synergistic analysis method for explaining failed regression tests"}, {"link": "", "title": "Regular property guided dynamic symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886898"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453131"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Security engineering"}, {"link": "", "title": "Towards secure integration of cryptographic software"}, {"link": "", "title": "Qualitative inquiry and researchdesign: Choosing among five approaches"}, {"link": "", "title": "Multi-dimensional exploration of API usage"}, {"link": "", "title": "An empirical study of cryptographic misuse in Android applications"}, {"link": "", "title": "Why Eve and Mallory love Android: An analysis of android SSL (in)security"}, {"link": "", "title": "The most dangerous code in the world: Validating SSL certificates in non-browser software"}, {"link": "", "title": "Snowball sampling"}, {"link": "", "title": "Obstacles in using frameworks and APIs: An exploratory study of programmers' newsgroup discussions"}, {"link": "", "title": "Designing an effective survey"}, {"link": "", "title": "Why does cryptographic software fail? A case study and open problems"}, {"link": "/document/6473801", "title": "Patterns of knowledge in API reference documentation"}, {"link": "", "title": "How can I use this method?"}, {"link": "", "title": "Crowd documentation: Exploring the coverage and the dynamics of API discussions on Stack Overflow"}, {"link": "", "title": "Mining stackoverflow to turn the IDE into a self-confident programming prompter"}, {"link": "/document/5287006", "title": "What makes APIs hard to learn? Answers from developers"}, {"link": "/document/6311409", "title": "Automated API property inference techniques"}, {"link": "", "title": "Recommending reference API documentation"}, {"link": "", "title": "A field study of API learning obstacles"}, {"link": "", "title": "An observational study on API usage constraints and their documentation"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "Searching the state space: A qualitative study of API protocol usability"}, {"link": "", "title": "Automated library recommendation"}, {"link": "/document/7000568", "title": "Extracting development tasks to navigate software documentation"}, {"link": "", "title": "How API documentation fails"}, {"link": "", "title": "Understanding interobserver agreement: The kappa statistic"}, {"link": "/document/7180082", "title": "Recommending posts concerning API issues in developer Q&A sites"}, {"link": "", "title": "Useful, but usable? factors affecting the usability of APIs"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886969"}
{"ref": [{"link": "", "title": "Helping Developers Help Themselves: Automatic Decomposition of Code Review Changesets"}, {"link": "", "title": "No Issue Left behind: Reducing Information Overload in Issue Tracking"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "", "title": "Manifesto for Agile Software Development"}, {"link": "", "title": "Novice Software Developers, All over Again"}, {"link": "/document/59", "title": "A Spiral Model of Software Development and Enhancement"}, {"link": "", "title": "SocialCDE: a Social Awareness Tool for Global Software Teams"}, {"link": "", "title": "Combining Rule-based and Information Retrieval Techniques to Assign Software Change Requests"}, {"link": "", "title": "How Do Committees Invent?"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "/document/4299842", "title": "Awareness in the Wild: Why Communication Breakdowns Occur"}, {"link": "/document/1698756", "title": "Code Thumbnails: Using Spatial Memory to Navigate Source Code"}, {"link": "", "title": "Supply Chain Perspectives to Knowledge Management: Research Propositions"}, {"link": "", "title": "Bridging the Gap: SE Technology Transfer into Practice: Study Design and Preliminary Results"}, {"link": "", "title": "The Discovery of Grounded Theory: Strategies for Qualitative Research"}, {"link": "", "title": "The ToxicFarm Integrated Cooperation Framework for Virtual Teams"}, {"link": "", "title": "Group Awareness in Distributed Software Development"}, {"link": "", "title": "Perceived Productivity Threats in Large Agile Development Projects"}, {"link": "", "title": "The Search-transfer Problem: the Role of Weak Ties in Sharing Knowledge across Organization Subunits"}, {"link": "/document/4221620", "title": "Global Software Engineering: the Future of Socio-technical Coordination"}, {"link": "/document/795103", "title": "Architectures, Coordination, and Distance: Conway's Law and beyond"}, {"link": "", "title": "Splitting the Organization and Integrating the Code: Conway's Law Revisited"}, {"link": "", "title": "What Game Developers Look for in a New Graduate: Interviews and Surveys at One Game Company"}, {"link": "", "title": "Agile Practices in Global Software Engineering - A Systematic Map"}, {"link": "", "title": "Virtual Team Awareness and Groupware Support: an Evaluation of the TeamSCOPE System"}, {"link": "/document/4343730", "title": "Relevant Information Sources for Successful Technology Transfer: a Survey Using Inspections as an Example"}, {"link": "", "title": "Non-essential Changes in Version Histories"}, {"link": "/document/6111370", "title": "Conway's Law Revisited: The Evidence for a Task-Based Perspective"}, {"link": "", "title": "Why Good Developers Write Bad Code: an Observational Case Study of the Impacts of Organizational Factors on Software Quality"}, {"link": "", "title": "Essential Communication Practices for Extreme Programming in a Global Software Development Team"}, {"link": "/document/841783", "title": "What Knowledge Is Important to a Software Professional?"}, {"link": "/document/7372056", "title": "Semantic Slicing of Software Version Histories"}, {"link": "", "title": "The Cost of Interrupted Work: More Speed and Stress"}, {"link": "/document/7371992", "title": "CodeExchange: Supporting Reformulation of Internet-Scale Code Queries in Context (T)"}, {"link": "", "title": "Cataldo"}, {"link": "", "title": "Query-based Configuration of Text Retrieval Solutions for Software Engineering Tasks"}, {"link": "/document/7372057", "title": "Development History Granularity Transformations"}, {"link": "", "title": "Detecting Semantic Merge Conflicts with Variability-aware Execution"}, {"link": "/document/7372069", "title": "Recommending API Usages for Mobile Apps with Hidden Markov Model"}, {"link": "", "title": "Global Software Development and Collaboration: Barriers and Solutions"}, {"link": "", "title": "NeedFeed: Taming Change Notifications by Modeling Code Relevance"}, {"link": "", "title": "Discovering Information Explaining API Types Using Text Classification"}, {"link": "", "title": "Generating Natural Language Summaries for Crosscutting Source Code Concerns"}, {"link": "", "title": "A Field Study of API Learning Obstacles"}, {"link": "", "title": "An Introduction to Recommendation Systems in Software Engineering"}, {"link": "/document/1003450", "title": "Guest Editors' Introduction: Knowledge Management in Software Engineering"}, {"link": "", "title": "Palant\u00edr: Raising Awareness among Configuration Management Workspaces"}, {"link": "", "title": "Agile Software Development with Scrum"}, {"link": "/document/7371991", "title": "Development Emails Content Analyzer: Intention Mining in Developer Discussions (T)"}, {"link": "", "title": "Awareness Support in Global Software Development: Systematic Review Based on the 3C Collaboration Model"}, {"link": "", "title": "The (R) Evolution of Social Media in Software Engineering"}, {"link": "", "title": "Life on the Mississipi"}, {"link": "/document/4221622", "title": "Collaboration in Software Engineering: a Roadmap"}, {"link": "", "title": "Wikipedia"}, {"link": "", "title": "Wikipedia"}, {"link": "", "title": "Wikipedia"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886973"}
{"ref": [{"link": "", "title": "Software Analytics to Software Practice: A Systematic Literature Review"}, {"link": "", "title": "Comparative Narratives: Some Rules for the Study of Action"}, {"link": "", "title": "A systematic review of comparative evidence of aspect-oriented programming"}, {"link": "", "title": "Dispersion, coordination and performance in global software teams: A systematic review"}, {"link": "", "title": "The impact of global dispersion on coordination, team performance and software quality-A systematic literature review"}, {"link": "", "title": "Systematic Review in Software Engineering"}, {"link": "", "title": "Using thematic analysis in psychology"}, {"link": "", "title": "Content analysis: concepts, methods and applications"}, {"link": "/document/6092576", "title": "Recommended steps for thematic synthesis in software engineering"}, {"link": "", "title": "Research synthesis in software engineering: A tertiary study"}, {"link": "", "title": "Six years of systematic literature reviews in software engineering: An updated tertiary study"}, {"link": "", "title": "Agile software product lines: a systematic mapping study"}, {"link": "/document/1704061", "title": "Effectiveness of requirements elicitation techniques: empirical results derived from a systematic review"}, {"link": "", "title": "In search of \u2018architectural knowledge\u2019"}, {"link": "", "title": "Synthesising qualitative and quantitative evidence: a review of possible methods"}, {"link": "", "title": "What do we know about high performance teams in software engineering? Results from a systematic literature review"}, {"link": "", "title": "Software process improvement implementation risks: A qualitative study based on software development maturity models implementations in Brazil"}, {"link": "", "title": "Empirical studies of agile software development: A systematic review"}, {"link": "", "title": "Strength of evidence in systematic reviews in software engineering"}, {"link": "", "title": "Evidence-Based Software Engineering for Practitioners"}, {"link": "", "title": "Special issue on qualitative research methods in software engineering"}, {"link": "", "title": "Lean Software Development Measures and Indicators-A Systematic Mapping Study"}, {"link": "", "title": "Metasynthesis: the state of the art-so far"}, {"link": "", "title": "Survey Research Methods"}, {"link": "", "title": "Women's Views of Pregnancy Ultrasound: A Systematic Review"}, {"link": "", "title": "The Discovery of Grounded Theory; Strategies for Qualitative Research"}, {"link": "", "title": "Systematic Research Synthesis to Inform Policy, Practice and Democratic Debate"}, {"link": "", "title": "Providing a Consensus Definition for the Term \u201cSmart Product"}, {"link": "", "title": "Survey on Research Synthesis in Software Engineering"}, {"link": "/document/4453833", "title": "The role of deliberate artificial design elements in software engineering experiments"}, {"link": "", "title": "Synthesizing qualitative research: Choosing the right approach"}, {"link": "", "title": "Applying systematic review methods to studies of people's views: an example from public health research"}, {"link": "", "title": "Analogy-based software development effort estimation: A systematic mapping and review"}, {"link": "", "title": "Technology transfer decision support in requirements engineering research: A systematic review of REj"}, {"link": "", "title": "Empirical evidence on the link between object-oriented measures and external quality attributes: a systematic literature review"}, {"link": "", "title": "Children and healthy eating: a systematic review of barriers and facilitators"}, {"link": "", "title": "Agile methods for embedded systems development-a literature review and a mapping study"}, {"link": "", "title": "Ready-to-wear: Discovering grounded formal theory"}, {"link": "", "title": "Factors influencing clients in the selection of offshore software outsourcing vendors: An exploratory study using a systematic literature review"}, {"link": "", "title": "A systematic review on the impact of CK metrics on the functional correctness of object-oriented classes"}, {"link": "", "title": "Handbook for Synthesizing Qualitative Research"}, {"link": "", "title": "Procedures for Undertaking Systematic Reviews"}, {"link": "", "title": "Systematic literature reviews in software engineering: A systematic literature review"}, {"link": "", "title": "Guidelines for Performing Systematic Literature Reviews in Software Engineering (version 2. 3)"}, {"link": "", "title": "Evidence-based Software Engineering"}, {"link": "", "title": "Systematic literature reviews in software engineering-A tertiary study"}, {"link": "", "title": "Quality, productivity and economic benefits of software reuse: A review of industrial studies"}, {"link": "", "title": "Beyond method"}, {"link": "", "title": "Critical issues in qualitative research methods"}, {"link": "", "title": "Knowledge transfer challenges and mitigation strategies in global software development?A systematic literature review and industrial validation"}, {"link": "", "title": "Meta-Ethnography: Synthesizing Qualitative Studies"}, {"link": "", "title": "Redefinition of fault classes in logic expressions"}, {"link": "", "title": "Systematic reviews in the social sciences: A practical guide"}, {"link": "", "title": "Developing methods for the narrative synthesis of quantitative and qualitative data in systematic reviews of effects"}, {"link": "", "title": "Summing Up: The Science of Reviewing Research"}, {"link": "", "title": "Testing Methodological Guidance On The Conduct Of Narrative Synthesis In Systematic Reviews"}, {"link": "", "title": "Using CMMI together with agile software development: A systematic review"}, {"link": "/document/4221632", "title": "The future of empirical methods in software engineering research"}, {"link": "", "title": "Quality in Qualitative Evaluation: A framework for assessing research evidence"}, {"link": "", "title": "Grounded theory in software engineering research: a critical review and guidelines"}, {"link": "", "title": "Does the technology acceptance model predict actual use? A systematic literature review"}, {"link": "", "title": "\n            Empirical evidence in global software engineering: a\n            "}, {"link": "", "title": "Social metrics included in prediction models on software engineering: a mapping study"}, {"link": "", "title": "Smart homes and their users: a systematic analysis and key challenges"}, {"link": "", "title": "Using the case survey method to analyze policy studies"}, {"link": "", "title": "Identifying Relevant Studies in Software Engineering"}, {"link": "", "title": "Systematic reviews in software engineering: An empirical investigation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453202"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Improving javascript performance by deconstructing the type system"}, {"link": "", "title": "Dynamic typing and subtype inference"}, {"link": "", "title": "Towards type inference for javascript"}, {"link": "", "title": "A framework for automated testing of javascript web applications"}, {"link": "", "title": "Proceedings, chapter Understanding TypeScript"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Checking correctness of typescript interfaces for javascript libraries"}, {"link": "", "title": "Efficient construction of approximate call graphs for javascript ide services"}, {"link": "/document/7321196", "title": "Don't call us, we'll call you: Characterizing callbacks in JavaScript"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "Dart: Directed automated random testing"}, {"link": "", "title": "Fast and precise hybrid type inference for javascript"}, {"link": "", "title": "Type analysis for javascript"}, {"link": "", "title": "Jsai: A static analysis platform for javascript"}, {"link": "", "title": "An empirical investigation into branch coverage for c programs using cute and austin"}, {"link": "", "title": "Symjs: Automatic symbolic testing of javascript web applications"}, {"link": "", "title": "Practical static analysis of javascript applications in the presence of frameworks and libraries"}, {"link": "", "title": "A case study-based comparison of web testing techniques applied to ajax web applications"}, {"link": "", "title": "Jseft: automated javascript unit test generation"}, {"link": "", "title": "Typedevil: Dynamic type inconsistency analysis for javascript"}, {"link": "", "title": "Path exploration based on symbolic output"}, {"link": "", "title": "A case study of concolic testing tools and their limitations"}, {"link": "", "title": "Safe & efficient gradual typing for typescript"}, {"link": "", "title": "Enhancing server availability and security through failure-oblivious computing"}, {"link": "", "title": "Synthesizing tests for detecting atomicity violations"}, {"link": "", "title": "Synthesizing racy tests"}, {"link": "", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "Jalangi: A selective record-replay and dynamic analysis framework for javascript"}, {"link": "", "title": "Cute: A concolic unit testing engine for c"}, {"link": "", "title": "Multise: Multi-path symbolic execution using value summaries"}, {"link": "", "title": "Dynamic test input generation for web applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886901"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453166"}
{"ref": [{"link": "", "title": "ACTS"}, {"link": "", "title": "Buffer Overrun on Invalid State Load"}, {"link": "", "title": "CVE-2015-3456"}, {"link": "", "title": "VGA Driver Bug"}, {"link": "", "title": "QEMU: A fast and portable dynamic translator"}, {"link": "", "title": "The gem5 simulator"}, {"link": "", "title": "S2e: A platform for in-vivo multi-path analysis of software systems"}, {"link": "", "title": "A design for testability scheme with applications to data path synthesis"}, {"link": "", "title": "Understanding data lifetime via whole system simulation"}, {"link": "", "title": "Grammar tech static analysis"}, {"link": "/document/605761", "title": "The AETG system: an approach to testing based on combinatorial design"}, {"link": "", "title": "Symbolic execution of virtual devices"}, {"link": "", "title": "Feedback driven adaptive combinatorial testing"}, {"link": "", "title": "Full-system simulation from embedded to high-performance systems"}, {"link": "", "title": "Incremental covering array failure characterization in large configuration spaces"}, {"link": "/document/4222623", "title": "Randomized differential testing as a prelude to formal verification"}, {"link": "", "title": "Formal methods and testing"}, {"link": "", "title": "An effective method to control interrupt handler for data race detection"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "Environment modeling and simulation for automated testing of soft real-time embedded software"}, {"link": "", "title": "Android 4.4 emulator does not support orientation changes"}, {"link": "", "title": "Understanding modern device drivers"}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "", "title": "Testing closed-source binary device drivers with ddt"}, {"link": "", "title": "An empirical study of injected versus actual interface errors"}, {"link": "", "title": "Post-silicon conformance checking with virtual prototypes"}, {"link": "", "title": "The p1031 model doesn't seem to raise alarm interrupts"}, {"link": "", "title": "Testing system virtual machines"}, {"link": "", "title": "A methodology for testing CPU emulators"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Combinatorial testing, random testing, and adaptive random testing for detecting interaction triggered failures"}, {"link": "", "title": "An Empirical Study into the Security Exposure to Hosts of Hostile Virtualized Environments"}, {"link": "", "title": "Open virtual platforms"}, {"link": "", "title": "Random testing of interrupt-driven software"}, {"link": "", "title": "Avrora: Scalable sensor network simulation with precise timing"}, {"link": "", "title": "Virtual device technologies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886936"}
{"ref": [{"link": "", "title": "Search Based Software Engineering: A Comprehensive Analysis and Review of Trends Techniques and Applications"}, {"link": "", "title": "Making the Case for MORTO: Multi Objective Regression Test Optimization"}, {"link": "/document/5210118", "title": "A Systematic Review of the Application and Empirical Investigation of Search-Based Test Case Generation"}, {"link": "", "title": "Pareto Efficient Multi-Objective Test Case Selection"}, {"link": "", "title": "Search Based Requirements Optimization: Existing Work and Challenges"}, {"link": "", "title": "Cost-effective test suite minimization in product lines using search techniques"}, {"link": "", "title": "Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines"}, {"link": "", "title": "UPMOA: An improved search algorithm to support user-preference multi-objective optimization"}, {"link": "", "title": "jMetal: A Java framework for multiobjective optimization"}, {"link": "", "title": "A Systematic Test Case Selection Methodology for Product Lines: Results and Insights From an Industrial Case Study"}, {"link": "", "title": "Zen-ReqOptimizer: A Search-based Approach for Requirements Assignment Optimization"}, {"link": "", "title": "On the value of user preferences in search-based software engineering: a case study in software product lines"}, {"link": "", "title": "Pareto-Optimal Search-Based Software Engineering (POSBSE): A literature Survey"}, {"link": "", "title": "The SBSE Repository: A repository and analysis of authors and research articles on Search Based Software Engineering"}, {"link": "", "title": "Multi-objective test prioritization in software product line testing: an industrial case study"}, {"link": "", "title": "Minimizing Test Suites in Software Product Lines Using Weighted-based Genetic Algorithms"}, {"link": "", "title": "Clever Algorithms: Nature-Inspired Programming Recipes"}, {"link": "/document/996017", "title": "A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II"}, {"link": "", "title": "Design Issues in a Multiobjective Cellular Genetic Algorithm"}, {"link": "", "title": "SPEA2: Improving the Strength Pareto Evolutionary Algorithm"}, {"link": "", "title": "Approximating the Nondominated Front Using the Pareto Archived Evolution Strategy"}, {"link": "", "title": "SMPSO: A new PSO-based Metaheuristic for Multi-objective Optimization"}, {"link": "", "title": "Solving Three-objective Optimization Problems using a New Hybrid Cellular Genetic Algorithm"}, {"link": "", "title": "Enhancing Test Case Prioritization in an Industrial Setting with Resource Awareness and Multi-Objective Search"}, {"link": "", "title": "Applying Search Algorithms for Optimizing Stakeholders Familiarity and Balancing Workload in Requirements Assignment"}, {"link": "", "title": "A Tutorial on the Performance Assessment of Stochastic Multiobjective Optimizers"}, {"link": "", "title": "Multi-objective optimization using evolutionary algorithms"}, {"link": "/document/797969", "title": "Multiobjective evolutionary algorithms: a comparative case study and the strength pareto approach"}, {"link": "", "title": "Multiobjective evolutionary algorithm research: A history and analysis, Tech. Rep. TR-98 03, Dept. Elec. Comput. Eng"}, {"link": "", "title": "Cyber-physical system product line engineering: comprehensive domain analysis and experience report"}, {"link": "", "title": "Research-based innovation: A tale of three projects in model-driven engineering"}, {"link": "", "title": "Multiple Criteria Decision Making"}, {"link": "/document/650320", "title": "Multiobjective optimization and multiple constraint handling with evolutionary algorithms-part ii: application example"}, {"link": "", "title": "GA-based decision support system for multicriteria optimization"}, {"link": "/document/4455350", "title": "AbYSS: Adapting Scatter Search to Multiobjective Optimization"}, {"link": "", "title": "Combining model-based and genetics-based offspring generation for multiobjective optimization using a convergence criterion"}, {"link": "", "title": "Establishing Integration Test Orders of Classes with Several Coupling Measures"}, {"link": "", "title": "The human competitiveness of search based software engineering"}, {"link": "/document/6782674", "title": "Diversity comparison of Pareto front approximations in many-objective optimization"}, {"link": "", "title": "Differential Evolution with Pareto Tournament for the Multi-objective Next Release Problem"}, {"link": "", "title": "An Empirical Study of the Sensitivity of Quality Indicator for Software Module Clustering"}, {"link": "", "title": "A multi-objective optimization approach for the integration and test order problem"}, {"link": "", "title": "A Pattern-Driven Mutation Operator for Search-Based Product Line Architecture Design"}, {"link": "", "title": "Search Based Software Engineering for Software Product Line Engineering: A Survey and Directions for Future Work"}, {"link": "", "title": "Multi-objective Genetic Optimization for Noise-Based Testing of Concurrent Software"}, {"link": "", "title": "Bi-Objective Genetic Search for Release Planning in Support of Themes"}, {"link": "", "title": "Robust Next Release Problem: Handling Uncertainty During Optimization"}, {"link": "", "title": "Comparative Analysis of Classical Multi-Objective Evolutionary Algorithms and Seeding Strategies for Pairwise Testing of Software Product Lines"}, {"link": "", "title": "The Software Project Scheduling Problem: A Scalability Analysis of Multi-objective Metaheuristics"}, {"link": "", "title": "High Dimensional Search-based Software Engineering: Finding Tradeoffs among 15 Objectives for Automating Software Refactoring using NSGA-III"}, {"link": "", "title": "A Robust Multi-objective Approach for Software Refactoring under Uncertainty"}, {"link": "", "title": "Identifying Optimal Trade-offs between CPU Time Usage and Temporal Constraints using Search"}, {"link": "", "title": "On the Performance of Multiple Objective Evolutionary Algorithms for Software Architecture Discovery"}, {"link": "", "title": "A Comparison Study of Binary Multi-Objective Particle Swarm Optimization Approaches for Test Case Selection"}, {"link": "/document/6824116", "title": "Requirements Prioritization and Next-Release Problem under Non-Additive Value Conditions"}, {"link": "", "title": "On the Application of the Multi-Evolutionary and Coupling-Based Approach with Different Aspect-Class Integration Testing Strategies"}, {"link": "", "title": "Cost-aware Pareto Optimal Test Suite Minimisation for Service-centric Systems"}, {"link": "", "title": "A Multi-Objective Genetic Algorithm to Rank State-Based Test Cases"}, {"link": "", "title": "Preference-based Multi-Objective Software Modelling"}, {"link": "", "title": "The Use of Development History in Software Refactoring using A Multiobjective Evolutionary Algorithm"}, {"link": "", "title": "A Practical Guide for Using Statistical Tests to Assess Randomized Algorithms in Software Engineering"}, {"link": "", "title": "Threats to Validity in Search-based Software Engineering Empirical Studies"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "", "title": "A New Measure of Rank Correlation"}, {"link": "", "title": "Quality Assessment of Pareto Set Approximations Multiobjective Optimization Lecture Notes in Computer Science"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886940"}
{"ref": [{"link": "", "title": "Flow-Droid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps"}, {"link": "", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps"}, {"link": "", "title": "Automated Model-based Android GUI Testing Using Multi-level GUI Comparison Criteria"}, {"link": "", "title": "Brahmastra: Driving Apps to Test the Security of Third-Party Components"}, {"link": "", "title": "Peeking into Your App without Actually Seeing It: UI State Inference and Novel Android Attacks"}, {"link": "", "title": "Just-in-time Static Analysis"}, {"link": "", "title": "Apposcopy: Semantics-based Detection of Android Malware Through Static Analysis"}, {"link": "", "title": "Automated Synthesis of Semantic Malware Signatures using Maximum Satisfiability"}, {"link": "", "title": "Information Flow Analysis of Android Applications in DroidSafe"}, {"link": "", "title": "Scalable and Precise Taint Analysis for Android"}, {"link": "", "title": "Tasks and Back Stack"}, {"link": "", "title": "Hybrid Context-sensitivity for Points-to Analysis"}, {"link": "", "title": "Context-sensitive points-to analysis: is it worth it?"}, {"link": "", "title": "IccTA: Detecting Inter-component Privacy Leaks in Android Apps"}, {"link": "", "title": "Self-inferencing Reflection Resolution for Java"}, {"link": "", "title": "Effective Soundness-Guided Reflection Analysis"}, {"link": "", "title": "Program Tailoring: Slicing by Sequential Criteria"}, {"link": "", "title": "Reflection Analysis for Java: Uncovering More Reflective Targets Precisely"}, {"link": "", "title": "CHEX: Statically Vetting Android Apps for Component Hijacking Vulnerabilities"}, {"link": "", "title": "EvoDroid: Segmented Evolutionary Testing of Android Apps"}, {"link": "", "title": "Parameterized Object Sensitivity for Points-to and Side-effect Analyses for Java"}, {"link": "", "title": "Parameterized Object Sensitivity for Points-to Analysis for Java"}, {"link": "", "title": "Reducing Combinatorics in GUI Testing of Android Applications"}, {"link": "", "title": "Combining Static Analysis with Probabilistic Models to Enable Market-scale Android Inter-component Analysis"}, {"link": "", "title": "Composite Constant Propagation: Application to Android Inter-component Communication Analysis"}, {"link": "", "title": "Effective inter-component communication mapping in android with epicc: An essential step towards holistic security analysis"}, {"link": "", "title": "Towards a Scalable Resource-driven Approach for Detecting Repackaged Android Applications"}, {"link": "", "title": "Pick Your Contexts Well: Understanding Object-sensitivity"}, {"link": "", "title": "Making k-object-sensitive pointer analysis more precise with still k-limiting"}, {"link": "", "title": "Efficient and Precise Points-to Analysis: Modeling the Heap by Merging Equivalent Automata"}, {"link": "", "title": "Amandroid: A Precise and General Inter-component Data Flow Analysis Framework for Security Vetting of Android Apps"}, {"link": "", "title": "Static Control-Flow Analysis of User-Driven Callbacks in Android Applications"}, {"link": "", "title": "Static Window Transition Graphs for Android (T)"}, {"link": "", "title": "Ripple: Reflection Analysis for Android Apps in Incomplete Information Environments"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453129"}
{"ref": [{"link": "", "title": "Structure and Interpretation of ComputerPrograms"}, {"link": "", "title": "Balloon types: Controlling sharing of state in data types"}, {"link": "", "title": "Military Standard Ada Programming Language"}, {"link": "", "title": "The Pascal Programming Language"}, {"link": "", "title": "Contextual Design: Defining Customer-Centered Systems"}, {"link": "", "title": "Effective Java"}, {"link": "", "title": "Ownership types for safe programming: preventing data races and deadlocks"}, {"link": "", "title": "Capabilities for sharing: A generalisation of uniqueness and Read-Only"}, {"link": "", "title": "Modula-3 language definition"}, {"link": "", "title": "Ownership types for flexible alias protection"}, {"link": "", "title": "Exploring language support for immutability"}, {"link": "", "title": "Generic universe types"}, {"link": "/document/1214329", "title": "An empirical investigation of the influence of a type of side effects on program comprehension"}, {"link": "", "title": "Uniqueness and reference immutability for safe parallelism"}, {"link": "", "title": "Usability analysis of visual programming environments: a \u2018cognitive dimensions\u2019 framework"}, {"link": "", "title": "Type-based Object Immutability with Flexible Initialization"}, {"link": "", "title": "Immutable objects for a java-like language"}, {"link": "", "title": "Islands: Aliasing Protection in Object-Oriented Languages"}, {"link": "", "title": "The turing programming language"}, {"link": "", "title": "JAC\u2014Access right based encapsulation for Java"}, {"link": "", "title": "Undecidability of static analysis"}, {"link": "", "title": "Securing Java"}, {"link": "", "title": "Freezable objects overview"}, {"link": "", "title": "Mozilla Developer Network. Object.freeze()"}, {"link": "", "title": "Natural programming languages and environments"}, {"link": "", "title": "Usability engineering"}, {"link": "", "title": "Heuristic evaluation of user interfaces"}, {"link": "", "title": "Flexible Alias Protection"}, {"link": "", "title": "Immutability"}, {"link": "", "title": "The Foundation Framework"}, {"link": "", "title": "Framework design guidelines"}, {"link": "", "title": "The Rust programming language"}, {"link": "", "title": "Secure coding guidelines for the Java SE, version 4.0"}, {"link": "", "title": "IGJ immutability checker"}, {"link": "", "title": "The Checker Framework"}, {"link": "", "title": "The Cert C Secure Coding Standard"}, {"link": "", "title": "Secure Coding in C and C++"}, {"link": "", "title": "A mode system for read-only references in Java"}, {"link": "/document/4222614", "title": "Usability Implications of Requiring Parameters in Objects' Constructors"}, {"link": "", "title": "Javari: Adding Reference Immutability to Java"}, {"link": "", "title": "Automatic inference of stationary fields: A generalization of java's final fields"}, {"link": "", "title": "Cascade: A universal programmer-assisted type qualifier inference tool"}, {"link": "", "title": "A conversation with anders hejlsberg"}, {"link": "", "title": "Object and reference immutability using Java generics"}, {"link": "", "title": "Ownership and immutability in generic Java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886832"}
{"ref": [{"link": "", "title": "Coping with downsizing: A comparison of executive-level and middle managers"}, {"link": "", "title": "Using social psychology to motivate contributions to online communities"}, {"link": "/document/4228643", "title": "Open borders? immigration in open source projects"}, {"link": "", "title": "Don't touch my code!: Examining the effects of ownership on software quality"}, {"link": "", "title": "Software risk management: Principles and practices. IEEE Softw"}, {"link": "", "title": "Characterizing and assessing a large-scale software maintenance organization"}, {"link": "", "title": "Who is going to mentor newcomers in open source projects"}, {"link": "", "title": "Identification of coordination requirements: implications for the design of collaboration and awareness tools"}, {"link": "", "title": "Sampling Techniques"}, {"link": "/document/7081864", "title": "Assessing the bus factor of git repositories"}, {"link": "", "title": "The impact of knowledge loss on software projects: turnover, customer found defects, and dormant files"}, {"link": "", "title": "Impact of developer turnover on quality in open-source software"}, {"link": "", "title": "Degree-of-knowledge: Modeling a developer's knowledge of code"}, {"link": "", "title": "What do large commits tell us?: a taxonomical study of large commits"}, {"link": "/document/4755634", "title": "Using software archaeology to measure knowledge loss in software projects due to developer turnover"}, {"link": "", "title": "Value at risk: the new benchmark for managing financial risk"}, {"link": "", "title": "Turnover of information technology professionals: A narrative review, meta-analytic structural equation modeling, and model development"}, {"link": "", "title": "Quantitative risk management"}, {"link": "", "title": "Succession: Measuring transfer of code and developer productivity"}, {"link": "", "title": "Organizational volatility and its effects on software defects"}, {"link": "", "title": "Challenges of global software development"}, {"link": "/document/1007994", "title": "Expertise browser: a quantitative approach to identifying expertise"}, {"link": "", "title": "PayScale. Companies with the Most & Least Loyal Employees"}, {"link": "", "title": "On the difficulty of computing the truck factor"}, {"link": "", "title": "How offshoring affects it workers"}, {"link": "", "title": "Is my project's truck factor low?: theoretical and empirical considerations about the truck factor threshold"}, {"link": "", "title": "The babel of software development: Linguistic diversity in open source"}, {"link": "", "title": "Risk Management"}, {"link": "", "title": "Are developers complying with the process: An xp study"}, {"link": "", "title": "Developer fluency: Achieving true mastery in software projects"}, {"link": "", "title": "Does the initial environment impact the future of developers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886975"}
{"ref": [{"link": "", "title": "LLVM PatternMatch"}, {"link": "", "title": "CCG: A random C code generator"}, {"link": "", "title": "Automatic generation of peephole superoptimizers"}, {"link": "", "title": "Optgen: A generator for local optimizations"}, {"link": "", "title": "Looper: Lightweight detection of infinite loops at runtime"}, {"link": "", "title": "Detecting and escaping infinite loops with Jolt"}, {"link": "", "title": "Termination proofs for systems code"}, {"link": "", "title": "The Coq Proof Assistant Reference Manual"}, {"link": "", "title": "Z3: An efficient SMT solver"}, {"link": "", "title": "Mining hot calling contexts in small space"}, {"link": "", "title": "Termination of rewriting"}, {"link": "", "title": "AProVE 1.2: Automatic termination proofs in the dependency pair framework"}, {"link": "", "title": "Proving non-termination"}, {"link": "/document/1386656", "title": "Broadway A compiler for exploiting the domain-specific semantics of software libraries"}, {"link": "/document/6227198", "title": "Performance debugging in the large via mining millions of stack traces"}, {"link": "", "title": "Denali: A practical algorithm for generating optimal code"}, {"link": "", "title": "Life, death, and the critical transition: Detecting liveness bugs in systems code"}, {"link": "", "title": "Proving optimizations correct using parameterized program equivalence"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Automatically proving the correctness of compiler optimizations"}, {"link": "", "title": "Automated soundness proofs for dataflow analyses and transformations via local rules"}, {"link": "", "title": "Formal verification of a realistic compiler"}, {"link": "", "title": "T-check: Bug finding for sensor networks"}, {"link": "", "title": "Manycore compiler fuzzing"}, {"link": "", "title": "Alive: Automatic LLVM InstCombine Verifier"}, {"link": "", "title": "Provably correct peephole optimizations with Alive"}, {"link": "", "title": "Superoptimizer: A look at the smallest program"}, {"link": "", "title": "Compiler testing via a theory of sound optimisations in the C11/C++11 memory model"}, {"link": "", "title": "Translation validation for an optimizing compiler"}, {"link": "", "title": "CARAMEL: Detecting and fixing performance problems that have nonintrusive fixes"}, {"link": "", "title": "Credible compilation"}, {"link": "", "title": "Proving the correctness of heuristically optimized code"}, {"link": "", "title": "Stochastic superoptimization"}, {"link": "", "title": "A termination analyzer for Java bytecode based on path-length"}, {"link": "", "title": "Simplification orderings: History of results"}, {"link": "", "title": "An approach for exploring code improving transformations"}, {"link": "", "title": "Towards automated termination proofs through \u201cfreezing\u201d"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "", "title": "Formalizing the LLVM intermediate representation for verified program transformations"}, {"link": "", "title": "VOC: A methodology for the translation validation of optimizing compilers"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886903"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453168"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453172"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453064"}
{"ref": [{"link": "/document/5728833", "title": "Exploiting the essential assumptions of analogy-based effort estimation"}, {"link": "", "title": "Artificial neural networks based analysis of software cost estimation models"}, {"link": "", "title": "Design of radial basis function neural networks for software effort estimation"}, {"link": "", "title": "Handling missing data in software effort prediction with naive Bayes and EM algorithm"}, {"link": "", "title": "Software development effort estimation: Formal models or expert judgment?"}, {"link": "", "title": "Using Bayesian regression and EM algorithm with missing handling for software effort prediction"}, {"link": "", "title": "Systematic literature review of machine learning based software development effort estimation models"}, {"link": "/document/6235961", "title": "Ranking and clustering software cost estimation models through a multiple comparisons algorithm"}, {"link": "", "title": "A Baseline Model for Software Effort Estimation"}, {"link": "", "title": "How to make best use of cross-company data in software effort estimation?"}, {"link": "/document/5928350", "title": "Data mining techniques for software effort estimation: a comparative study"}, {"link": "", "title": "Neural network based models for software effort estimation: a review"}, {"link": "/document/4015511", "title": "Selecting best practices for effort estimation"}, {"link": "/document/4027147", "title": "A systematic review of software development cost estimation studies"}, {"link": "", "title": "Reasoning with Noisy Software Effort Data"}, {"link": "/document/6464273", "title": "Data Quality: Some Comments on the NASA Software Defect Data Sets"}, {"link": "", "title": "Effect of data preprocessing on software effort estimation"}, {"link": "/document/962560", "title": "Software cost estimation with incomplete data"}, {"link": "", "title": "Effort estimation based on collaborative filtering"}, {"link": "", "title": "A comprehensive empirical evaluation of missing value imputation in noisy software measurement data"}, {"link": "", "title": "Missing data: our view of the state of the art"}, {"link": "", "title": "Missing data"}, {"link": "", "title": "An empirical analysis of data preprocessing for machine learning-based software cost estimation"}, {"link": "", "title": "Multiple imputation for nonresponse in surveys"}, {"link": "", "title": "Pattern-mixture models for multivariate incomplete data"}, {"link": "", "title": "Dealing with missing software project data"}, {"link": "", "title": "Incomplete-case nearest neighbor imputation in software measurement data"}, {"link": "/document/965340", "title": "Analyzing data sets with missing data: An empirical evaluation of imputation methods and likelihood-based methods"}, {"link": "", "title": "Ensemble of missing data techniques to improve software prediction accuracy"}, {"link": "", "title": "A new imputation method for small software project data sets"}, {"link": "", "title": "LSEbA: least squares regression and estimation by analogy in a semi-parametric model for software cost estimation"}, {"link": "", "title": "Analysis of attribute weighting heuristics for analogy-based software effort estimation method AQUA+"}, {"link": "", "title": "An empirical study of analogy-based software effort estimation"}, {"link": "", "title": "The adjusted analogy-based software effort estimation based on similarity distances"}, {"link": "/document/6081882", "title": "On the value of ensemble effort estimation"}, {"link": "", "title": "Robust regression for developing software estimation models"}, {"link": "", "title": "Effort estimation using analogy"}, {"link": "", "title": "Can k-NN imputation improve the performance of C4.5 with small software project data sets? A comparative evaluation"}, {"link": "", "title": "Applying statistical methodology to optimize and simplify software metric models with missing data"}, {"link": "", "title": "Robust L1 norm factorization in the presence of outliers and missing data by alternative convex programming"}, {"link": "", "title": "A Cyclic Weighted Median Method for L1 Low-Rank Matrix Factorization with Missing Entries"}, {"link": "", "title": "Efficient co-regularised least squares regression"}, {"link": "", "title": "On transductive regression"}, {"link": "", "title": "Semi-Supervised Regression with Co-Training"}, {"link": "", "title": "Applied statistics for software managers"}, {"link": "/document/6858011", "title": "Co-Extracting Opinion Targets and Opinion Words from Online Reviews Based on the Word Alignment Model"}, {"link": "", "title": "Semi-supervised elastic net for pedestrian counting"}, {"link": "", "title": "Introduction to graph theory"}, {"link": "", "title": "Semi-supervised learning literature survey. Department of Computer Sciences, University of Wisconsin at Madison, Madison, WI Tech. Rep. 1530"}, {"link": "", "title": "A co-regularization approach to semi-supervised learning with multiple views"}, {"link": "", "title": "Software function, source lines of code, and development effort prediction: a software science validation"}, {"link": "", "title": "Maximum likelihood from incomplete data via the EM algorithm"}, {"link": "", "title": "An empirical validation of software cost estimation models"}, {"link": "", "title": "An empirical study of maintenance and development estimation accuracy"}, {"link": "", "title": "PROMISE Repository of empirical software engineering data"}, {"link": "", "title": "Data preprocessing for supervised leaning"}, {"link": "", "title": "Finding conclusion stability for selecting the best effort predictor in software effort estimation"}, {"link": "", "title": "Nonparametric statistical methods"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "A practical guide for using statistical te sts to assess randomized algorithms in software engineering"}, {"link": "", "title": "Ensemble missing data techniques for software effort prediction"}, {"link": "", "title": "Dominance statistics: Ordinal analyses to answer ordinal questions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886938"}
{"ref": [{"link": "", "title": "Model-based mutation testing of an industrial measurement device"}, {"link": "", "title": "Killing strategies for model-based mutation testing"}, {"link": "", "title": "Model-based mutation testing via symbolic refinement checking"}, {"link": "", "title": "Using model checking to generate tests from specifications"}, {"link": "/document/1703390", "title": "Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria"}, {"link": "", "title": "Principles of model checking"}, {"link": "/document/6298894", "title": "An empirical evaluation of mutation testing for improving the test quality of safety-critical software"}, {"link": "", "title": "Event-Based Mutation Testing vs. State-Based Mutation Testing - An Experimental Comparison"}, {"link": "", "title": "Basic Operations for Generating Behavioral Mutants"}, {"link": "", "title": "Mutation operators for specifications"}, {"link": "/document/1359770", "title": "Assessing and improving state-based class testing: A series of experiments"}, {"link": "", "title": "Mutation Analysis of Program Test Data"}, {"link": "", "title": "Program testing by specification mutation"}, {"link": "", "title": "Modelling with FTS: a Collection of Illustrative Examples"}, {"link": "/document/6389685", "title": "Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking"}, {"link": "", "title": "Proteum/im 2.0: An integrated mutation testing environment"}, {"link": "", "title": "Variability Intensive system Behavioural teSting (VIBeS) v. 1.0.1"}, {"link": "", "title": "A Variability Perspective of Mutation Analysis"}, {"link": "", "title": "Software & Systems Modeling"}, {"link": "", "title": "Coverage Criteria for Behavioural Testing of Software Product Lines"}, {"link": "", "title": "Proteum/FSM: a tool to support finite state machine validation based on mutation testing"}, {"link": "", "title": "Mutation testing applied to validate specifications based on statecharts"}, {"link": "", "title": "Achieving scalable mutation-based generation of whole test suites"}, {"link": "", "title": "Comparing non-adequate test suites using coverage criteria"}, {"link": "", "title": "Angels and monsters: An empirical investigation of potential test effectiveness and efficiency improvement from strongly subsuming higher order mutation"}, {"link": "", "title": "Assessing software product line testing via model-based mutation: An application to similarity testing"}, {"link": "", "title": "Mutation testing from probabilistic and stochastic finite state machines"}, {"link": "/document/1702367", "title": "Reliability of the path analysis testing strategy"}, {"link": "", "title": "Parallel firm mutation of java programs"}, {"link": "", "title": "Higher order mutation testing"}, {"link": "/document/5487526", "title": "An Analysis and Survey of the Development of Mutation Testing"}, {"link": "", "title": "Efficient mutation analysis by propagating and partitioning infected execution states"}, {"link": "", "title": "Are Mutants a Valid Substitute for Real Faults in Software Testing?"}, {"link": "", "title": "Feature-Oriented Domain Analysis (FODA) Feasibility Study"}, {"link": "", "title": "Ordering mutants to minimise test effort in mutation testing"}, {"link": "", "title": "Shared execution for efficiently testing product lines"}, {"link": "", "title": "Splat: lightweight dynamic analysis for reducing combinatorics in testing configurable systems"}, {"link": "", "title": "Mutation-driven Test Case Generation Using Short-lived Concurrent Mutants - First Results"}, {"link": "", "title": "MoMut::UML Model-Based Mutation Testing for UML"}, {"link": "", "title": "Towards the assessment of software product line tests: A mutation system for variable systems"}, {"link": "/document/6823865", "title": "Model-based test design of product lines: Raising test design to the product line level"}, {"link": "/document/6733370", "title": "IEEE Transactions on Evolutionary Computation"}, {"link": "/document/6035728", "title": "GenProg: A generic method for automatic software repair"}, {"link": "", "title": "A test automation language framework for behavioral models"}, {"link": "", "title": "Mujava: an automated class mutation system"}, {"link": "", "title": "Reducing mutation costs through uncovered mutants"}, {"link": "", "title": "Mutation analysis testing for model transformations"}, {"link": "", "title": "Exploring variability-aware execution for testing plugin-based web applications"}, {"link": "", "title": "Generating test data from state-based specifications"}, {"link": "", "title": "A mutation carol: Past, present and future"}, {"link": "", "title": "Sampling program inputs with mutation analysis: Going beyond combinatorial interaction testing"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of a simple fast and effective equivalent mutant detection technique"}, {"link": "", "title": "Metallaxis-FL: mutation-based fault localization"}, {"link": "", "title": "Automatic mutation test case generation via dynamic symbolic execution"}, {"link": "", "title": "Automatically performing weak mutation with the aid of symbolic execution, concolic testing and search-based testing"}, {"link": "", "title": "Typical Structural Properties of State Spaces"}, {"link": "", "title": "Properties of state spaces and their applications"}, {"link": "", "title": "Generic semantics of feature diagrams"}, {"link": "", "title": "Configuring effective navigation models and abstract test cases for web applications by analysing user behaviour"}, {"link": "", "title": "Mutation analysis using mutant schemata"}, {"link": "", "title": "Practical Model-Based Testing: A Tools Approach"}, {"link": "", "title": "Software Fault Injection: Inoculating Programs Against Errors"}, {"link": "/document/225548", "title": "Errors in algebraic specifications and an experimental mutation testing tool"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886942"}
{"ref": [{"link": "", "title": "Internet-based Workplace Communications: Industry &Academic Applications"}, {"link": "", "title": "Automating bug report assignment"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "No issue left behind: Reducing information overload in issue tracking"}, {"link": "", "title": "The secret life of patches: A firefox case study"}, {"link": "", "title": "The influence of non-technical factors on code review"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "Design and code inspections to reduce errors in program development"}, {"link": "", "title": "ReCal2: Reliability for 2 coders"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "Work practices and challenges in pull-based development: The integrator's perspective"}, {"link": "/document/4548412", "title": "Testing the value of checklists in code inspections"}, {"link": "", "title": "Towards a simplification of the bug report form in eclipse"}, {"link": "", "title": "Will my patch make it? and how fast?: Case study on the linux kernel"}, {"link": "/document/4815279", "title": "The impact of design and code reviews on software quality An empirical study based on psp data"}, {"link": "", "title": "A Qualitative Exploratory Study of How OSS Developers Define Code Review Quality"}, {"link": "", "title": "Investigating code review quality: Do people and participation matter?"}, {"link": "", "title": "Impression formation in online peer production: Activity traces and personal profiles in github"}, {"link": "", "title": "Qualitative Data Analysis"}, {"link": "", "title": "Two case studies of open source software development"}, {"link": "/document/1007994", "title": "Expertise browser: a quantitative approach to identifying expertise"}, {"link": "", "title": "Mozilla. BMO /ElasticSearch"}, {"link": "", "title": "Mozilla. Code-Review Policy"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "A preliminary examination of code review processes in open source projects"}, {"link": "", "title": "Understanding broadcast based peer review on open source software projects"}, {"link": "", "title": "Software engineering at the speed of light: How developers stay current using twitter"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in github"}, {"link": "/document/4228638", "title": "How long will it take to fix this bug?"}, {"link": "", "title": "Small patches get in!"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886977"}
{"ref": [{"link": "", "title": "Floating point error analysis using dyninst"}, {"link": "", "title": ""}, {"link": "", "title": "Accelerating scientific computations with mixed precision algorithms"}, {"link": "/document/1425396", "title": "High-precision floating-point arithmetic in scientific computation"}, {"link": "", "title": "High-precision arithmetic: Progress and challenges"}, {"link": "", "title": "On-the-fly detection of instability problems in floating-point program execution"}, {"link": "", "title": "Automatic detection of floating-point exceptions"}, {"link": "", "title": "A dynamic program analysis to find floating-point accuracy problems"}, {"link": "", "title": ""}, {"link": "", "title": "Probability Type Inference for Flexible Approximate Programming. To appear in OOPSLA"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Using mixed precision for sparse matrix computations to enhance the performance while achieving 64-bit accuracy"}, {"link": "", "title": "Mixed precision iterative refinement techniques for the solution of dense linear systems"}, {"link": "", "title": "Verifying quantitative reliability for programs that execute on unreliable hardware"}, {"link": "", "title": ""}, {"link": "", "title": "GSL - GNU scientific library - GNU project - free software foundation (FSF)"}, {"link": "", "title": "Trustworthy numerical computation in scala"}, {"link": "", "title": "Sound compilation of reals"}, {"link": "", "title": ""}, {"link": "", "title": "Towards an industrial use of FLUCTUAT on safety-critical avionics software"}, {"link": "", "title": ""}, {"link": "", "title": "Using accurate arithmetics to improve numerical reproducibility and stability in parallel applications"}, {"link": "", "title": "Algorithms for quad-double precision floating point arithmetic. In ARITH'01"}, {"link": "", "title": "programs for mixed-precision floating-point computation"}, {"link": "", "title": "Dynamic floating-point cancellation detection"}, {"link": "/document/1281665", "title": "LLVM: A compilation framework for lifelong program analysis & transformation"}, {"link": "", "title": "Design, implementation and testing of extended and mixed precision BLAS"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Automatically improving accuracy for floating point expressions"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "LLVM Whole-Program Wrapper"}, {"link": "", "title": "Precimonious: tuning assistant for floating-point precision. In SC'13"}, {"link": "", "title": "ACCEPT: A Programmer-Guided Compiler Framework for Practical Approximate Computing"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Jalangi: a selective record-replay and dynamic analysis framework for javascript. In ESEC/FSE'13"}, {"link": "", "title": "Managing performance vs. accuracy trade-offs with loop perforation"}, {"link": "", "title": "Rigorous estimation of floating-point round-off errors with symbolic taylor expansions"}, {"link": "", "title": "OSKI: A library of automatically tuned sparse matrix kernels"}, {"link": "", "title": "Automatically Tuned Linear Algebra Software (ATLAS)"}, {"link": "", "title": "Mixed-precision orthogonalization scheme and adaptive step size for ca-gmres on gpus"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "A genetic algorithm for detecting significant floating-point inaccuracies"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886981"}
{"ref": [{"link": "", "title": "Information Measures: Information and its Description in Science and Engineering"}, {"link": "", "title": "Fast algorithms for mining emerging patterns"}, {"link": "", "title": "Detection of abrupt changes: theory and application"}, {"link": "", "title": "Extrinsic influence factors in software reliability: A study of 200,000 windows machines"}, {"link": "", "title": "An empirical study of operating systems errors"}, {"link": "", "title": "Evaluating defect prediction approaches: A benchmark and an extensive comparison"}, {"link": "", "title": "Mining historical issue repositories to heal large-scale online service systems"}, {"link": "", "title": "Efficient mining of emerging patterns: Discovering trends and differences"}, {"link": "", "title": "Change-point detection for black-box services"}, {"link": "", "title": "Data Mining: Concepts and Techniques"}, {"link": "", "title": "Mining frequent patterns without candidate generation"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "A variability-aware module system"}, {"link": "/document/4493302", "title": "Trend analysis and issue prediction in large-scale open source systems"}, {"link": "/document/5711013", "title": "Which crashes should i fix first?: Predicting top crashes at an early stage to prioritize debugging efforts"}, {"link": "", "title": "Mining statistically important equivalence classes and delta-discriminative emerging patterns"}, {"link": "", "title": "Characterizing the differences between pre- and post-release versions of software"}, {"link": "", "title": "Have things changed now?: an empirical study of bug characteristics in modern open source software"}, {"link": "", "title": "Dynamine: Finding common error patterns by mining software revision histories"}, {"link": "", "title": "Software analytics for incident management of online services: An experience report"}, {"link": "/document/6363444", "title": "Local versus global lessons for defect prediction and effort estimation"}, {"link": "", "title": "Defect prediction from static code features: Current results, limitations, new approaches"}, {"link": "", "title": "Automated detection of performance regressions using statistical process control techniques"}, {"link": "/document/6226427", "title": "Reducing features to improve code change-based bug prediction"}, {"link": "/document/6624045", "title": "Mining succinct and high-coverage API usage patterns from source code"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "/document/5306304", "title": "An investigation of the relationships between lines of code and defects"}, {"link": "/document/5453334", "title": "Monitoring software quality evolution for defects"}, {"link": "", "title": "Exploring constraints to efficiently mine emerging patterns from large high-dimensional datasets"}, {"link": "", "title": "MAPO: Mining and recommending API usage patterns"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886905"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453174"}
{"ref": [{"link": "", "title": "Apktool"}, {"link": "", "title": "Androguard: Reverse engineering and malware analysis of Android apps by BlackHat"}, {"link": "", "title": "Allatori Obfuscator"}, {"link": "", "title": "VirusTotal-Free virus, malware and URL scanner"}, {"link": "", "title": "VirusShare"}, {"link": "", "title": "Contagio Malware Repository"}, {"link": "", "title": "Brain Test Lookout Report"}, {"link": "", "title": "DressCode Android malware"}, {"link": "", "title": "Kaspersky Security Bulletin"}, {"link": "", "title": "McAfee mobile threats report"}, {"link": "", "title": "Smartphone OS Market Share, 2017 Q1"}, {"link": "", "title": "VikingHorde Android malware"}, {"link": "", "title": "Android Open Source Project"}, {"link": "", "title": "Android Studio"}, {"link": "", "title": "DashO"}, {"link": "", "title": "Dex2jar: Tools to work with android. dex and java. class files"}, {"link": "", "title": "DexGuard"}, {"link": "", "title": "FalseGuide Android malware"}, {"link": "", "title": "Google Play App Store"}, {"link": "", "title": "jarsigner-JAR Signing and Verification Tool"}, {"link": "", "title": "Obfuscation Study Framework"}, {"link": "", "title": "ProGuard"}, {"link": "", "title": "Smali/Backsmali"}, {"link": "", "title": "UI/ Application Exerciser Monkey"}, {"link": "", "title": "Are your training datasets yet relevant"}, {"link": "", "title": "Androzoo: Collecting millions of android apps for the research community"}, {"link": "", "title": "Drebin: Effective and explainable detection of android malware in your pocket"}, {"link": "", "title": "Testing malware detectors"}, {"link": "/document/1425057", "title": "Semantics-aware malware detection"}, {"link": "/document/1219058", "title": "Sandmark-a tool for software protection research"}, {"link": "", "title": "A taxonomy of obfuscating transformations"}, {"link": "", "title": "Evaluation of android anti-malware techniques against dalvik bytecode obfuscation"}, {"link": "", "title": "AndroSimilar: Robust signature for detecting variants of Android malware"}, {"link": "", "title": "A framework for evaluating mobile app repackaging detection algorithms"}, {"link": "", "title": "Staticanalysis of android apps: A systematic literature review"}, {"link": "/document/7957853", "title": "Automatically locating malicious packages in piggybacked android apps"}, {"link": "/document/7828100", "title": "Understanding android app piggybacking: A systematic study of malicious code grafting"}, {"link": "", "title": "Understanding Android app piggybacking"}, {"link": "", "title": "AndroTotal: a flexible, scalable toolbox and service for testing mobile malware detectors"}, {"link": "", "title": "Stealth attacks: An extended insight into the obfuscation effects on android malware"}, {"link": "", "title": "Testing and evaluating virus detectors for handheld devices"}, {"link": "", "title": "Retargeting Android applications to Java bytecode"}, {"link": "", "title": "A Study on Obfuscation Techniques for Android Malware"}, {"link": "/document/6661334", "title": "Catch me if you can: Evaluating android anti-malware against transformation attacks"}, {"link": "", "title": "Soot-a Java Bytecode Optimization Framework"}, {"link": "/document/7972730", "title": "Who Changed You? Obfuscator Identification for Android"}, {"link": "", "title": "ADAM: an automatic and extensible platform to stress test android anti-virus systems"}, {"link": "", "title": "Fast, scalable detection of piggybacked mobile applications"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453102"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Design of comparative experiment. Cambridge University Press"}, {"link": "", "title": ""}, {"link": "", "title": "A survey of variability modeling in industrial practice"}, {"link": "/document/6572787", "title": "A study of variability models and languages in the systems software domain"}, {"link": "", "title": "Statistics for Experimenters: design, innovation, and discovery"}, {"link": "", "title": "Benefits and barriers of user evaluation in software engineering research ACM SIGPLAN Notices"}, {"link": "", "title": "Software Product Lines: Practices and Patterns"}, {"link": "/document/1158288", "title": "An empirical analysis of C preprocessor use"}, {"link": "", "title": ""}, {"link": "", "title": "Do background colors improve program comprehension in the #ifdef hell? Empirical Softw. Engg."}, {"link": "", "title": "Domain-specific runtime variability in product line architecture"}, {"link": "", "title": "Sensation and Perception Cengage Learning Services"}, {"link": "", "title": "Becoming a Better Programmer"}, {"link": "", "title": "On the rate of gain of information"}, {"link": "", "title": "Virtual separation of concerns: Toward preprocessors 2.0"}, {"link": "", "title": "Granularity in Software Product Lines"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Scalable analysis of variable software"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "The love/hate relationship with the C preprocessor: An interview study"}, {"link": "", "title": ""}, {"link": "", "title": "Design and Analysis of Experiments"}, {"link": "", "title": "Effects of programming experience in debugging semantic errors. J. Syst. Softw."}, {"link": "", "title": "Software Product Line Engineering"}, {"link": "", "title": "Feature maintenance with emergent interfaces"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Does the discipline of preprocessor annotations matter?: A controlled experiment"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/6608664", "title": "Recovar: A solution framework towards reverse engineering variability"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886944"}
{"ref": [{"link": "", "title": "CWE-190: Integer overflow or wraparound"}, {"link": "", "title": "CWE-2011 CWE/SANS top 25 most dangerours software errors"}, {"link": "", "title": "CWE-680: IO2BO vulnerabilities"}, {"link": "", "title": "GCC, the GNU Compiler Collection"}, {"link": "", "title": "Overflow-inducing input for CVE-2005-0199"}, {"link": "", "title": "Overflow-inducing input for CVE-2005-1141"}, {"link": "", "title": "Overflow-inducing input for CVE-2006-2971"}, {"link": "", "title": "Overflow-inducing input for CVE-2006-4812"}, {"link": "", "title": "Overflow-inducing input for CVE-2008-1384"}, {"link": "", "title": "Overflow-inducing input for CVE-2008-1801"}, {"link": "", "title": "Overflow-inducing input for CVE-2008-3732"}, {"link": "", "title": ""}, {"link": "", "title": "Spec cpu 2000 benchmark"}, {"link": "", "title": "Spec cpu 2006 benchmarks"}, {"link": "", "title": "The Z3 Constraint Solver"}, {"link": "", "title": "Vulnerability Type Distributions in CVE (2001-2006)"}, {"link": "", "title": "Partial orders for efficient bounded model checking of concurrent software"}, {"link": "", "title": "Vex: Vetting browser extensions for security vulnerabilities"}, {"link": "", "title": "RICH: Automatically protecting against integer-based vulnerabilities"}, {"link": "", "title": "CERT. Integerlib, a secure integer library"}, {"link": "", "title": "BRICK: A binary tool for run-time detecting and locating integer-based vulnerability"}, {"link": "", "title": "Eliminating static analysis false positives using loop abstraction and bounded model checking"}, {"link": "", "title": "Program transformations to fix C integers"}, {"link": "/document/5928354", "title": "SMT-based bounded model checking for embedded ansi-c software"}, {"link": "", "title": "As-if infinitely ranged integer model"}, {"link": "", "title": "Understanding integer overflow in C/C++"}, {"link": "", "title": "A decision procedure for bit-vectors and arrays"}, {"link": "", "title": "Ranged integers for the c programming language. Technical Note CMU/SEI-2007-TN-027, Carnegie Mellon University"}, {"link": "", "title": "Regression verification"}, {"link": "", "title": "HAMPI: a solver for string constraints"}, {"link": "", "title": "SYMDIFF: A language-agnostic semantic diff tool for imperative programs"}, {"link": "", "title": "Compilers: Principles, techniques and tools"}, {"link": "", "title": "Safeint"}, {"link": "", "title": "Boosting the performance of flow-sensitive points-to analysis using value flow"}, {"link": "", "title": "Sound input filter generation for integer overflow errors"}, {"link": "", "title": "Semantics- based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection"}, {"link": "", "title": "Dynamic test generation to find integer bugs in x86 binary linux programs"}, {"link": "", "title": "National Vulnerability Database. CVE-2006-2971"}, {"link": "", "title": "National Vulnerability Database. CVE-2008-1722"}, {"link": "", "title": "National Vulnerability Database. CVE-2008-1801"}, {"link": "", "title": "National Vulnerability Database. CVE-2012-4405"}, {"link": "", "title": "National Vulnerability Database. CVE-2014-0150"}, {"link": "", "title": "Differential symbolic execution"}, {"link": "", "title": "IntFlow: improving the accuracy of arithmetic error detection using information flow tracking"}, {"link": "", "title": "A fast and low-over head technique to secure programs against integer overflows"}, {"link": "", "title": "On-demand dynamic summary-based points-to analysis"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Targeted automatic integer overflow discovery using goal-directed conditional branch enforcement"}, {"link": "", "title": "Efficient dynamic tracking technique for detecting integer-overflow- to- buffer-overflow vulnerability"}, {"link": "", "title": "Diagnose and emergency patch generation for integer overflow exploits"}, {"link": "", "title": "IntScope: Automatically detecting integer overflow vulnerability in x86 binary using symbolic execution"}, {"link": "", "title": "Improving integer security for systems with KIN T"}, {"link": "", "title": "Static detection of security vulnerabilities in scripting languages"}, {"link": "", "title": "Generating precise and concise procedure summaries"}, {"link": "", "title": "IntPatch: Automatically fix integer-overflow- to- buffer-overflow vulnerability at compile-time"}, {"link": "/document/6227158", "title": "Static detection of resource contention problems in server-side scripts"}, {"link": "/document/6606611", "title": "Path sensitive static analysis of web applications for remote code execution vulnerability detection"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886979"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Program analysis and specialization for the c programming language"}, {"link": "", "title": "Doublechecker: efficient sound and precise atomicity checking"}, {"link": "", "title": "A type and effect system for deterministic parallel Java"}, {"link": "", "title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders"}, {"link": "", "title": "Removing unnecessary synchronization in java"}, {"link": "", "title": "Escape analysis for java"}, {"link": "", "title": "Data race detection for Java"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "A parametric segmentation functor for fully automatic and scalable array content analysis"}, {"link": "", "title": "Exploiting object escape and locking information in partial-order reductions for concurrent object-oriented programs"}, {"link": "", "title": "a dynamic atomicity checker for multithreaded programs"}, {"link": "", "title": "efficient and precise dynamic race detection"}, {"link": "", "title": "Dynamic partial-order reduction for model checking software"}, {"link": "", "title": "A framework for numeric analysis of array operations"}, {"link": "", "title": "Discovering properties about arrays in simple programs"}, {"link": "", "title": "Component-based lock allocation"}, {"link": "", "title": "Flow-sensitive pointer analysis for millions of lines of code"}, {"link": "", "title": "Lightweight deterministic multi-processor replay of concurrent Java programs"}, {"link": "", "title": "Maximal sound predictive race detection with control flow abstraction"}, {"link": "", "title": "Finding schedule-sensitive branches"}, {"link": "", "title": "Verifying concurrent programs with chalice"}, {"link": "", "title": "The soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Scaling java nrlintc_tn nnnkraia nnnkraia unincr annrk In DC"}, {"link": "", "title": "LCPC"}, {"link": "", "title": "Parameterized object sensitivity for points-to analysis for Java"}, {"link": "", "title": "Effective static race detection for Java"}, {"link": "", "title": "Effective Static Race Detection for Java"}, {"link": "", "title": "An efficient algorithm for computing mhp information for concurrent java programs"}, {"link": "", "title": "Detecting data races usingdynamic escape analysis based on read barrier"}, {"link": "", "title": "The LRPD Test: Speculative Run-time Parallelization of Loops with Privatization and Reduction Parallelization"}, {"link": "", "title": "Effective synchronization removal for java"}, {"link": "", "title": "Two approaches to interprocedural data flow analysis"}, {"link": "", "title": "Enforcing isolation and ordering in stm"}, {"link": "", "title": "Pick your contexts well: Understanding object-sensitivity"}, {"link": "", "title": "Introspective analysis: Context-sensitivity, across the board"}, {"link": "", "title": "Associating synchronization constraints with data in an object-oriented language"}, {"link": "", "title": "Object race detection"}, {"link": "", "title": "Static conflict analysis for multi-threaded object-oriented programs"}, {"link": "", "title": "Compositional pointer and escape analysis for java programs"}, {"link": "", "title": "Cooperative types for controlling thread interference in java"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886983"}
{"ref": [{"link": "", "title": "Green it-available data and guidelines for reducing energy consumption in it systems"}, {"link": "", "title": "Snowball sampling"}, {"link": "/document/4602670", "title": "Using static analysis to find bugs"}, {"link": "", "title": "The practice of social research"}, {"link": "", "title": "Detecting energy bugs and hotspots in mobile apps"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge, Version 3.0"}, {"link": "/document/6171963", "title": "Measuring application software energy efficiency"}, {"link": "", "title": "Let's go to the whiteboard: How and why software developers use drawings"}, {"link": "", "title": "Moving into a new software project landscape"}, {"link": "", "title": "An empirical study of software developers' management of dependencies and changes"}, {"link": "", "title": ""}, {"link": "", "title": "Case studies in just-in-time requirements analysis"}, {"link": "/document/6912272", "title": "Quality requirements elicitation based on inquiry of quality-impact relationships"}, {"link": "", "title": "Gartner says worldwide traditional PC, tablet, ultramobile and mobile phone shipments to grow 4.2 percent in 2014"}, {"link": "", "title": "The discovery of grounded theory: Strategies for qualitative research"}, {"link": "", "title": ""}, {"link": "", "title": "How many interviews are enough? an experiment with data saturation and variability"}, {"link": "", "title": "Mining energy traces to aid in software development: An empirical case study"}, {"link": "/document/6606555", "title": "Estimating mobile application energy consumption using program analysis"}, {"link": "/document/6224303", "title": "Green mining: A methodology of relating software change to power consumption"}, {"link": "", "title": "Greenminer: A hardware based mining software repositories software energy consumption framework"}, {"link": "", "title": "Experiences from conducting semistructured interviews in empirical software engineering research"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Green software and green it: An end users perspective"}, {"link": "", "title": "Personal opinion surveys"}, {"link": "/document/4343745", "title": "Toward reducing fault fix time: Understanding developer behavior for the design of automated fault detection tools"}, {"link": "", "title": "An investigation into energy-saving programming practices for Android smartphone app development"}, {"link": "", "title": "Calculating source line level energy information for Android applications"}, {"link": "", "title": "Making web applications more energy efficient for OLED smartphones"}, {"link": "", "title": "Mining energy-greedy API usage patterns in Android apps: An empirical study"}, {"link": "/document/6815752", "title": "Greendroid: Automated diagnosis of energy inefficiency for smartphone applications"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "/document/6606417", "title": "Investigating the impacts of web servers on web application energy usage"}, {"link": "", "title": "Seeds: A software engineer's energy-optimization decision support framework"}, {"link": "", "title": ""}, {"link": "", "title": "Snowball sampling"}, {"link": "", "title": "Cowboys, ankle sprains, and keepers of quality: How is video game development different from software development?"}, {"link": "/document/199724", "title": "Operational profiles in software-reliability engineering"}, {"link": "", "title": "The greensoft model: A reference model for green and sustainable software and its engineering"}, {"link": "", "title": "APE: An annotation language and middleware for energy-efficient mobile application development"}, {"link": "", "title": "What do programmers know about software energy consumption?"}, {"link": "", "title": "Bootstrapping energy debugging on smartphones: A first look at energy bugs in mobile devices"}, {"link": "", "title": "Qualitative evaluation and researchmethods"}, {"link": "", "title": "Mining questions about software energy consumption"}, {"link": "", "title": "Conducting on-line surveys in software engineering"}, {"link": "", "title": "Sensitivity analysis for a scenario-based reliability prediction model"}, {"link": "/document/6224257", "title": "Initial explorations on design pattern energy usage"}, {"link": "", "title": "How do code refactorings affect energy usage?"}, {"link": "", "title": "How does code obfuscation impact energy usage?"}, {"link": "", "title": "Contexto: Leveraging energy awareness in the development of context-aware applications"}, {"link": "/document/1158289", "title": "Ethical issues in empirical studies of software engineering"}, {"link": "/document/6614738", "title": "Improving developer participation rates in surveys"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Detecting display energy hotspots in Android apps"}, {"link": "", "title": "Experimentation in Software Engineering: An Introduction"}, {"link": "", "title": "Special issue: Trade-off analysis of software quality attributes"}, {"link": "", "title": "The impact of user choice on energy consumption"}, {"link": "", "title": "A programming model for sustainable software"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886907"}
{"ref": [{"link": "", "title": "GitHub is your new resume"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "/document/6385140", "title": "The secret life of patches: A firefox case study"}, {"link": "/document/4228663", "title": "Detecting patch submission and acceptance in oss projects"}, {"link": "", "title": "Assessing the value of branches with what-if analysis"}, {"link": "", "title": ""}, {"link": "", "title": "How we use pull requests to build GitHub"}, {"link": "", "title": "Coglan. Why GitHub is not your cv"}, {"link": "", "title": "Grounded theory research Procedures, canons, and evaluative criteria"}, {"link": "", "title": "Research design: Qualitative, quantitative, and mixed methods approaches"}, {"link": "", "title": "Social coding in Github: transparency and collaboration in an open software repository"}, {"link": "/document/6357175", "title": "Leveraging transparency"}, {"link": "/document/7081844", "title": "Untangling fine-grained code changes"}, {"link": "", "title": "Awareness and coordination in shared workspaces"}, {"link": "", "title": "Socialization in an open source software community: A socio-technical analysis"}, {"link": "", "title": "An introduction to qualitative research"}, {"link": "", "title": "Producing Open Source Software"}, {"link": "", "title": "Response bias, social desirability and dissimulation"}, {"link": "", "title": "Predicting the fix time of bugs"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "The GHTorrent dataset and tool suite"}, {"link": "", "title": "An exploratory study of the pull-based software development model"}, {"link": "", "title": "Pull request contributors analysis dataset"}, {"link": "", "title": "Work practices and challenges in pull-based development: The integrator's perspective"}, {"link": "", "title": "Communication in open source software development mailing lists"}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "", "title": "Will my patch make it? and how fast?: case study on the linux kernel"}, {"link": "", "title": "The promises and perils of mining github"}, {"link": "", "title": ""}, {"link": "", "title": "Some simple economics of open source"}, {"link": "", "title": "Impression formation in online peer production: activity traces and personal profiles in GitHub"}, {"link": "", "title": "Performance and participation in open source software on GitHub"}, {"link": "", "title": "Two case studies of open source software development: Apache and Mozilla"}, {"link": "", "title": "10 usability heuristics for user interface design"}, {"link": "", "title": "Creating a shared understanding of testing culture on a social coding site"}, {"link": "", "title": "Conducting on-line surveys in software engineering"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Understanding broadcast based peer review on open source software projects"}, {"link": "", "title": "There is no now"}, {"link": "", "title": "Question-order effects on presidential popularity"}, {"link": "", "title": "Social barriers faced by newcomers placing their first contribution in open source software projects"}, {"link": "", "title": "Influence of social and technical factors for evaluating contribution in GitHub"}, {"link": "", "title": "Let's talk about it: Evaluating contributions through discussion in github"}, {"link": "/document/7180094", "title": "Automatically prioritizing pull requests"}, {"link": "", "title": "Quality and productivity outcomes relating to continuous integration in GitHub"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: a case study"}, {"link": "", "title": "GitHub is your resume now"}, {"link": "", "title": "Small patches get in!"}, {"link": "", "title": "Toward an understanding of the motivation of open source software developers"}, {"link": "/document/6606654", "title": "Predicting bug-fixing time: an empirical study of commercial software projects"}, {"link": "/document/6880395", "title": "Who will stay in the FLOSS community? modeling participant's initial behavior"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886911"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453176"}
{"ref": [{"link": "", "title": "Introduction to Machine Learning"}, {"link": "", "title": "A hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering"}, {"link": "", "title": "On Parameter Tuning in Search Based Software Engineering"}, {"link": "", "title": "Simulation-driven validation of advanced driving-assistance systems"}, {"link": "", "title": "Testing advanced driver assistance systems using multi-objective search and neural networks"}, {"link": "/document/930314", "title": "On self-adaptive features in real-parameter evolutionary algorithms"}, {"link": "", "title": "Driving safety systems for passenger cars"}, {"link": "", "title": "Classification and Regression Trees"}, {"link": "", "title": "Evolutionary functional testing of a vehicle brake assistant system"}, {"link": "", "title": "Automatic testing of an autonomous parking system using evolutionary computation"}, {"link": "", "title": "Evolutionary functional testing"}, {"link": "", "title": "Elementary Statistics for the Social Sciences: Study Guide"}, {"link": "", "title": "Experiments data"}, {"link": "", "title": "Simulated binary crossover for continuous search space"}, {"link": "", "title": "Self-Adaptive Genetic Algorithms with Simulated Binary Crossover"}, {"link": "/document/996017", "title": "A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II"}, {"link": "", "title": "Object Constraint Language (OCL)"}, {"link": "", "title": "Search-based software engineering: Trends, techniques and applications"}, {"link": "", "title": "PLEDGE: a product line editor and test generation tool"}, {"link": "", "title": "International Electronics & Engineering"}, {"link": "", "title": "PreScan simulation of ADAS and active safety"}, {"link": "", "title": "A Tutorial on the Performance Assessment of Stochastic Multiobjective Optimizers"}, {"link": "", "title": "Challenges in autonomous vehicle testing and validation"}, {"link": "/document/1321063", "title": "Software Fault Interactions and Implications for Software Testing"}, {"link": "", "title": "Essentials of Metaheuristics"}, {"link": "", "title": "Search-based software test data generation: a survey"}, {"link": "", "title": "Learnable evolution model: Evolutionary processes guided by machine learning"}, {"link": "", "title": "A Survey of Multiobjective Evolutionary Algorithms for Data Mining: Part I"}, {"link": "/document/898368", "title": "Pedestrian tracking from a moving vehicle"}, {"link": "", "title": "Test and Validation of Advanced Driver Assistance Systems Automated Search for Critical Scenarios"}, {"link": "", "title": "Time-to-collision and collision avoidance systems"}, {"link": "", "title": "Multiobjective evolutionary algorithm research: A history and analysis"}, {"link": "", "title": "A critique and improvement of the CL common language effect size statistics of McGraw and Wong"}, {"link": "", "title": "A Practical Guide to Select Quality Indicators for Assessing Pareto-Based Search Algorithms in Search-Based Software Engineering"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "Experimentation in software engineering"}, {"link": "", "title": "The LEM3 implementation of learnable evolution model: user's guide"}, {"link": "", "title": "Search-Based Testing and System Testing: A Marriage in Heaven"}, {"link": "/document/797969", "title": "Multiobjective evolutionary algorithms: a comparative case study and the strength Pareto approach"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453180"}
{"ref": [{"link": "", "title": "The Plastic Surgery Hypothesis"}, {"link": "", "title": "Detecting and escaping infinite loops with jolt"}, {"link": "", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with smt"}, {"link": "", "title": "Automatic detection and repair of errors in data structures"}, {"link": "/document/4016571", "title": "Goal-directed reasoning for specification-based data structure repair"}, {"link": "", "title": "Automatic repair of real bugs: An experience report on the defects4j dataset. CoRR"}, {"link": "", "title": "Assertion-based repair of complex data structures"}, {"link": "", "title": "Fixing recurring crash bugs via analyzing q&a sites (T)"}, {"link": "", "title": "Data-guided repair of selection statements"}, {"link": "", "title": "Defects4j: a database of existing faults to enable controlled testing studies for java programs"}, {"link": "", "title": ""}, {"link": "", "title": "Repairing programs with semantic code search (T)"}, {"link": "/document/6606626", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Bolt: on-demand infinite loop escape in unmodified binaries"}, {"link": "", "title": "Deductive program repair"}, {"link": "", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each"}, {"link": "", "title": ""}, {"link": "", "title": "An Analysis of the Search Spaces for Generate and Validate Patch Generation Systems"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "Automatic runtime error repair and containment via recovery shepherding"}, {"link": "", "title": "Do the fix ingredients already exist? an empirical inquiry into the redundancy assumptions of program repair approaches"}, {"link": "/document/6606623", "title": "Semfix: Program repair via semantic analysis"}, {"link": "", "title": "Detecting and eliminating memory leaks using cyclic memory allocation"}, {"link": "", "title": "Vejovis: Suggesting fixes for javascript faults"}, {"link": "/document/6776507", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Probabilistic accuracy bounds for fault-tolerant computations that discard tasks"}, {"link": "", "title": "Using early phase termination to eliminate load imbalances at barrier synchronization points"}, {"link": "", "title": "Enhancing server availability and security through failure-oblivious computing"}, {"link": "", "title": "Cost-aware automatic program repair"}, {"link": "/document/6227186", "title": "Automated repair of html generation errors in php applications using string constraint solving"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Managing performance vs. accuracy trade-offs with loop perforation"}, {"link": "", "title": "Is the Cure Worse than the Disease? Overfitting in Automated Program Repair"}, {"link": "", "title": "Fix me up: Repairing access-control bugs in web applications"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "/document/6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "An empirical study on real bug fixes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886946"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Finding the Needles in the Haystack: Generating Legal Test Inputs for Object-oriented Programs"}, {"link": "", "title": "Korat: Automated Testing Based on Java Predicates"}, {"link": "", "title": "Line-up: A Complete and Automatic Linearizability Checker"}, {"link": "", "title": "Cross-checking Oracles from Intrinsic Software Redundanev"}, {"link": "", "title": "Jcrasher: An Automatic Robustness Tester for Java"}, {"link": "", "title": "Con2colic Testing"}, {"link": "", "title": "Atomizer: A Dynamic Atomicity Checker for Multithreaded Programs"}, {"link": "", "title": "Fasttrack: Efficient and Precise Dynamic Race Detection"}, {"link": "/document/6152257", "title": "Whole Test Suite Generation"}, {"link": "", "title": "Does Automated White-box Test Generation Really Help Software Testers?"}, {"link": "", "title": "Redundancy Based Test-suite Reduction"}, {"link": "", "title": "Evosuite: Automatic Test Suite Generation for Object-oriented Software"}, {"link": "", "title": "DART: Directed Automated Random Testing"}, {"link": "", "title": "Java Concurrency in Practice"}, {"link": "/document/1201188", "title": "Improving Test Suites via Operational Abstraction"}, {"link": "", "title": "Testing Concurrent Programs to Achieve High Synchronization Coverage"}, {"link": "", "title": "Persuasive Prediction of Concurrency Access Anomalies"}, {"link": "", "title": "Symbolic Execution and Program Testing"}, {"link": "", "title": "Detecting Atomic-set Serializability Violations in Multithreaded Programs Through Active Randomized Testing"}, {"link": "", "title": "Have Things Changed Now?: An Empirical Study of Bug Characteristics in Modern Open Source Software"}, {"link": "", "title": "Check-then-act Misuse of Java Concurrent Collections"}, {"link": "", "title": "Finding Incorrect Compositions of Atomicity"}, {"link": "", "title": "A Study of Interleaving Coverage Criteria"}, {"link": "", "title": "Learning from Mistakes: A Comprehensive Study on Real World Concurrency Bug Characteristics"}, {"link": "/document/5740930", "title": "Finding Atomicity-violation Bugs Through Unserializable Interleaving Testing"}, {"link": "/document/4222603", "title": "Hybrid Concolic Testing"}, {"link": "/document/989787", "title": "Testera: A Novel Framework for Automated Testing of Java Programs"}, {"link": "", "title": "Finding and Reproducing Heisenbugs in Concurrent Programs"}, {"link": "/document/6227145", "title": "BALLERINA: Automatic Generation and Clustering of Efficient Random Unit Tests for Multithreaded Code"}, {"link": "", "title": "How Do Developers Use Parallel Libraries?"}, {"link": "/document/4222570", "title": "Feedback-directed Random Test Generation"}, {"link": "", "title": "CTrigger: Exposing Atomicity Violation Bugs from Their Hiding Places"}, {"link": "", "title": "Crowdoracles: Can the Crowd Solve the Oracle Problem?"}, {"link": "", "title": "Fully Automatic and Precise Detection of Thread Safety Violations"}, {"link": "", "title": "Context-sensitive Synchronization-sensitive Analysis Is Undecidable"}, {"link": "", "title": "Concurrent Test Generation Using Concolic Multi-trace Analysis"}, {"link": "", "title": "Multithreaded Test Synthesis for Deadlock Detection"}, {"link": "", "title": "Omen: A Precise Dynamic Deadlock Detector for Multithreaded Java Libraries"}, {"link": "", "title": "Omen: A Tool for Synthesizing Tests for Deadlock Detection"}, {"link": "", "title": "Synthesizing Racy Tests"}, {"link": "", "title": "Eraser: A Dynamic Data Race Detector for Multithreaded Programs"}, {"link": "", "title": "Cute and Jcute: Concolic Unit Testing and Explicit Path Model-checking Tools"}, {"link": "", "title": "A Race-detection and Flipping Algorithm for Automated Testing of Multi-threaded Programs"}, {"link": "", "title": "Detecting Errors in Multithreaded Programs by Generalized Predictive Analysis of Executions"}, {"link": "", "title": "Saturation-basedTesting of Concurrent Programs"}, {"link": "", "title": "PENELOPE: Weaving Threads to Expose Atomicity violations"}, {"link": "", "title": "Generating Unit Tests for Concurrent Classes"}, {"link": "", "title": "Bug Characteristics in Open Source Software"}, {"link": "", "title": "Location Pairs: A Test Coverage Metric for Shared-memory Concurrent Programs"}, {"link": "", "title": "Pex\u2014white Box Test Generation for Net"}, {"link": "", "title": "Evolutionary Testing of Classes"}, {"link": "", "title": "Associating Synchronization Constraints with Data in an Object-oriented Language"}, {"link": "", "title": "Test Input Generation for Java Containers Using State Matching"}, {"link": "", "title": "Predicting Concurrency Failures in the Generalized Execution Traces of x86 Executables"}, {"link": "", "title": "Coverage Guided Systematic Concurrency Testing"}, {"link": "", "title": "Rostra: A Framework for Detecting Redundant Object-oriented Unit Tests"}, {"link": "", "title": "All-du-path Coverage for Parallel Programs"}, {"link": "", "title": "Maple: A Coverage-driven Testing Tool for Multithreaded Programs"}, {"link": "", "title": "An Empirical Comparison of the Fault-detection Capabilities of Internal Oracles"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886985"}
{"ref": [{"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "", "title": "Information retrieval models for recovering traceability links between code and documentation"}, {"link": "/document/6100103", "title": "Extracting structured data from natural language documents with island parsing"}, {"link": "", "title": "Modern Information Retrieval"}, {"link": "", "title": "Sourcerer: A search engine for open source code supporting structure-based search"}, {"link": "/document/6227140", "title": "Synthesizing API usage examples"}, {"link": "/document/6233418", "title": "Context-based recommendation to support problem solving in software development"}, {"link": "/document/1463229", "title": "Hipikat: A project memory for software development"}, {"link": "", "title": "Video event detection: From subvolume localization to spatiotemporal path search"}, {"link": "", "title": "Engaging the youtube google-eyed generation: Strategies for using web 2.0 in teaching and learning"}, {"link": "", "title": "Experiments with segmentation strategies for passage retrieval in audio-visual documents"}, {"link": "", "title": "Codetrail: Connecting source code and web resources"}, {"link": "", "title": "Deep intellisense: A tool for rehydrating evaporated information"}, {"link": "/document/1553554", "title": "Using structural context to recommend source code examples"}, {"link": "/document/4016572", "title": "Approximate structural context matching: An approach to recommend relevant examples"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "/document/6344497", "title": "Automatically locating relevant programming help online"}, {"link": "/document/7181437", "title": "Code, camera, action: How software developers document and share program knowledge using YouTube"}, {"link": "", "title": "Jungloid mining: Helping to navigate the api jungle"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "Multimedia Learning"}, {"link": "", "title": "Bag-of-fragments: Selecting and encoding video fragments for event detection and recounting"}, {"link": "/document/957806", "title": "Generating robust parsers using island grammars"}, {"link": "", "title": "How can I use this method?"}, {"link": "", "title": "To screencast or not to screencast"}, {"link": "", "title": "Questionnaire Design, Interviewing and Attitude Measurement"}, {"link": "", "title": "Discovering information explaining api types using text classification"}, {"link": "", "title": "Holistic recommender systems for software engineering"}, {"link": "/document/6498455", "title": "Leveraging crowd knowledge for software comprehension and development"}, {"link": "", "title": "Seahawk: Stack overflow in the ide"}, {"link": "", "title": "Mining StackOverflow to turn the IDE into a self-confident programming Prompter"}, {"link": "", "title": "CodeTube: extracting relevant fragments from software development video tutorials"}, {"link": "/document/7180121", "title": "StORMeD: Stack Overflow ready made data"}, {"link": "", "title": "Semantics-based code search"}, {"link": "/document/6606629", "title": "Discovering essential code elements in informal documentation"}, {"link": "", "title": "Recommending reference API documentation"}, {"link": "", "title": "Fishtail: From task context to source code examples"}, {"link": "/document/1698785", "title": "Mica: A web-search tool for finding API components and examples"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "A spontaneous code recommendation tool based on associative search"}, {"link": "", "title": "Parseweb: A programmer assistant for reusing open source code on the web"}, {"link": "", "title": "Archetypal Internet-Scale source code searching"}, {"link": "", "title": "An effectiveness measure for software clustering algorithms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886909"}
{"ref": [{"link": "", "title": "Fault prediction by utilizing self-organizing Map and Threshold"}, {"link": "", "title": "Data Classification: Algorithms and Applications"}, {"link": "", "title": "Software defect prediction using cost-sensitive neural network"}, {"link": "/document/6224300", "title": "Think locally, act globally: Improving defect and effort prediction models"}, {"link": "/document/5963674", "title": "Software fault prediction using quad tree-based k-means clustering algorithm"}, {"link": "", "title": "Mathematical Analysis of Urban Spatial Networks"}, {"link": "", "title": "Models of core/periphery structures"}, {"link": "/document/1019484", "title": "Assessing the applicability of fault-proneness models across object-oriented software projects"}, {"link": "", "title": "Metrics-driven software quality prediction without prior fault data"}, {"link": "", "title": "Practical development of an Eclipse-based software fault prediction tool using Naive Bayes algorithm"}, {"link": "/document/1690146", "title": "Software Defect Identification Using Machine Learning Techniques"}, {"link": "", "title": "Negative samples reduction in cross-company software defects prediction"}, {"link": "/document/5316002", "title": "Towards logistic regression models for predicting fault-prone code across software projects"}, {"link": "", "title": "An extensive comparison of bug prediction approaches"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "", "title": "Indexing by latent semantic analysis"}, {"link": "", "title": "Kernel k-means: Spectral clustering and normalized cuts"}, {"link": "/document/5387093", "title": "Design and code inspections to reduce errors in program development"}, {"link": "/document/5010260", "title": "Estimating the number of faults in code"}, {"link": "", "title": "Revisiting the impact of classification techniques on the performance of defect prediction models"}, {"link": "", "title": "Data mining concepts, models and techniques"}, {"link": "", "title": "The misuse of the nasa metrics data program data sets for automated software defect prediction"}, {"link": "/document/6035727", "title": "A systematic literature review on fault prediction performance in software engineering"}, {"link": "", "title": "Data Mining: concepts and techniques"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "Learning from open-source projects: An empirical study on defect prediction"}, {"link": "", "title": "An investigation on the feasibility of cross-project defect prediction"}, {"link": "", "title": "Scot-tknott: A package for performing the scott-knott clustering algorithm in r"}, {"link": "", "title": "Towards identifying software project clusters with regard to defect prediction"}, {"link": "/document/42974", "title": "An evaluation of some design metrics"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "", "title": "Sample-based software defect prediction with active and semi-supervised learning"}, {"link": "", "title": "A tutorial on spectral clustering"}, {"link": "", "title": "Transfer learning for cross-company software defect prediction"}, {"link": "/document/6100072", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "", "title": "The laplacian spectrum of graphs"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "", "title": "Software Defect Rediscoveries: A Discrete Lognormal Model"}, {"link": "", "title": "Clami: Defect prediction on unlabeled datasets"}, {"link": "", "title": "Heterogeneous defect prediction"}, {"link": "/document/6606584", "title": "Transfer defect learning"}, {"link": "", "title": "Metrics Data Program"}, {"link": "", "title": "On spectral clustering: Analysis and an algorithm"}, {"link": "", "title": "Experience from replicating empirical studies on prediction models"}, {"link": "/document/1691668", "title": "On the automation of software fault prediction"}, {"link": "/document/4271036", "title": "Applying novel resampling strategies to software defect prediction"}, {"link": "", "title": "Can developer-module networks predict failures?"}, {"link": "/document/6092570", "title": "Network versus code metrics to predict defects: A replication study"}, {"link": "", "title": "The Adoption of Machine Learning Techniques for Software Defect Prediction: An Initial Industrial Validation"}, {"link": "", "title": "Appropriate statistics for ordinal level data: Should we really be using t-test and cohen's d for evaluating group differences on the nsse and other surveys?"}, {"link": "/document/6464273", "title": "Data quality: Some comments on the nasa software defect datasets"}, {"link": "", "title": "Handbook of Parametric and Nonparametric Statistical Procedures"}, {"link": "/document/868688", "title": "Normalized cuts and image segmentation"}, {"link": "", "title": "What we have learned about fighting defects"}, {"link": "", "title": "The economic impacts of inadequate infrastructure for software testing"}, {"link": "", "title": "Practical considerations in deploying statistical methods for defect prediction: A case study within the Turkish telecommunications industry"}, {"link": "", "title": "On the relative value of cross-company and within-company data for defect prediction"}, {"link": "", "title": "Adapting a fault prediction model to allow inter languagereuse"}, {"link": "", "title": "Statistical Pattern Recognition"}, {"link": "", "title": "Software quality prediction using affinity propagation algorithm"}, {"link": "", "title": "Case Study Research Design and Methods \u2014 Third Edition"}, {"link": "", "title": "Towards building a universal defect prediction model"}, {"link": "", "title": "Towards building a universal defect prediction model with rank transformed predictors"}, {"link": "/document/6676906", "title": "How does context affect the distribution of software maintainability metrics?"}, {"link": "", "title": "Unsupervised learning for expert-based software quality estimation"}, {"link": "", "title": "Cross-project defect prediction: a large scale experiment on data vs. domain vs. process"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886913"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453182"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453106"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Tom: Piggybacking Rewriting on Java"}, {"link": "", "title": "Teaching Model Driven Engineering from a Relational Database Perspective"}, {"link": "/document/1321059", "title": "Scaling Step-Wise Refinement"}, {"link": "", "title": "The Influence of Scientific Research and Evaluation on Publishing Educational Curriculum"}, {"link": "", "title": "When Does a Refactoring Induce Bugs? An Empirical Study"}, {"link": "", "title": "DMS: Program Transformations for Practical Scalable Software Evolution"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change (2nd Ed.)"}, {"link": "", "title": "iXj: Interactive Source-to-Source Transformations for Java"}, {"link": "", "title": "The SmaCC Transformation Engine: How to Convert Your Entire Code Base into a different Programming Language"}, {"link": "", "title": "Stratego/XT 0.17. A Language and Toolset for Program Transformation"}, {"link": "", "title": "Christerson. Intentional Software"}, {"link": "", "title": "The TXL Source Transformation Language"}, {"link": "", "title": "Automated Testing of Refactoring Engines"}, {"link": "/document/5672516", "title": "A Refactoring Approach to Parallelism"}, {"link": "", "title": "Automated Detection of Refactorings in Evolving Components"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "How to Design and Evaluate Research in Education"}, {"link": "", "title": "The Language Toolkit: An API for Automated Refactorings in Eclipse-based IDEs"}, {"link": "", "title": "Design patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Systematic Testing of Refactoring Engines on Real Software Projects"}, {"link": "", "title": "Program Restructuring as an Aid to Software Maintenance"}, {"link": "", "title": "Scripting a Refactoring with Rascal and Eclipse"}, {"link": "", "title": "EclEmma 2.3.2"}, {"link": "", "title": ""}, {"link": "", "title": "Automated Behavioral Regression Testing"}, {"link": "", "title": ""}, {"link": "", "title": "Refactoring to Patterns"}, {"link": "", "title": "Refactoring by Pretty-Printing"}, {"link": "", "title": "Scripting Parametric Refactorings in Java to Retrofit Design Patterns"}, {"link": "", "title": "Implementation and Application of Functional Languages"}, {"link": "", "title": "A Domain-Specific Language for Scripting Refactorings in Erlang"}, {"link": "", "title": "Agile Software Development: Principles, Patterns, and Practices"}, {"link": "", "title": "A Declarative Evolution Framework for Object-Oriented Design Patterns"}, {"link": "", "title": ""}, {"link": "", "title": "How We Refactor, and How We Know It"}, {"link": "", "title": ""}, {"link": "", "title": "Refactoring Object-Oriented Frameworks"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Practical Analysis for Refactoring"}, {"link": "/document/6152131", "title": "A Comprehensive Approach to Naming and Accessibility in Refactoring Java Programs"}, {"link": "/document/6175911", "title": "Automated Behavioral Testing of Refactoring Engines"}, {"link": "", "title": ""}, {"link": "", "title": "A Refactoring Constraint Language and its Application to Eiffel"}, {"link": "", "title": "Constraint-Based Refactoring with Foresight"}, {"link": "", "title": "Evolving Object-Oriented Designs with Refactorings"}, {"link": "", "title": "Managing Duplicated Code with Linked Editing"}, {"link": "/document/6227190", "title": "Use Disuse, and Misuse of Automated Refactorings"}, {"link": "", "title": "The ASF+SDF Meta-environment: A Component-Based Language Development Environment"}, {"link": "", "title": "JunGL: a Scripting Language for Refactoring"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886987"}
{"ref": [{"link": "", "title": "Bugzilla for kernel"}, {"link": "", "title": "Common Weakness Enumeration"}, {"link": "", "title": "Coverity"}, {"link": "", "title": "Klocwork"}, {"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "/document/497652", "title": "Fault localization using execution slices and dataflow tests"}, {"link": "", "title": "Compilers: principles, techniques, and tools"}, {"link": "", "title": "Mining specifications"}, {"link": "", "title": "Effective and precise dynamic detection of hidden races for Java programs"}, {"link": "/document/6718069", "title": "Magiclock: Scalable Detection of Potential Deadlocks in Large-Scale Multithreaded Programs [J]"}, {"link": "", "title": "Finding what's not there: a new approach to revealing neglected conditions in software"}, {"link": "/document/366925", "title": "Dynamic program dicing"}, {"link": "/document/1366126", "title": "Static analysis for security [J]"}, {"link": "", "title": "CWE/SANS Top 25 Most Dangerous Software Errors"}, {"link": "", "title": "Bugs as deviant behavior: a general approach to inferring errors in systems code"}, {"link": "", "title": "The program dependence graph and its use in optimization"}, {"link": "", "title": "Mining security-sensitive operations in legacy code using concept analysis"}, {"link": "", "title": "Efficiently using prefix-trees in mining frequent itemsets"}, {"link": "", "title": "EIO: Error handling is oc-casionally correct"}, {"link": "", "title": "A system and language for building system-specific, static analysis"}, {"link": "", "title": "Using program slicing to simplify testing [J]"}, {"link": "", "title": "Interprocedural slicing using dependence graphs"}, {"link": "", "title": "From uncertainty to belief: inferring the specification within"}, {"link": "", "title": "CP-Miner: a tool for finding copy-paste and related bugs in operating system code"}, {"link": "", "title": "PR-Miner: automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "", "title": "DynaMine: finding common error patterns by mining software revision histories"}, {"link": "", "title": "Mining past-time temporal rules from execution traces"}, {"link": "", "title": "MUVI: Automatically inferring multi-variable access correlations and detecting related semantic and concurrency bugs"}, {"link": "", "title": "The program dependence graph in a software develop environment"}, {"link": "/document/6227127", "title": "Statically checking API protocol conformance with mined multi-object specifications"}, {"link": "", "title": "Static specification inference using predicate mining"}, {"link": "", "title": "Defective error/pointer interactions in the linux kernel"}, {"link": "", "title": "GNU compiler collection internals (for GCC version 4.5.0)"}, {"link": "/document/6227114", "title": "Extending static analysis by mining project-specific rules"}, {"link": "", "title": "iComment: Bugs or bad comments?*"}, {"link": "", "title": "AutoISES: automatically inferring security specifications and detecting violations"}, {"link": "", "title": "aComment: mining annotations from comments and code to detect interrupt related concurrency bugs"}, {"link": "", "title": "Alattin: mining alternative patterns for detecting neglected conditions"}, {"link": "", "title": "Green: reducing, reusing and recycling constraints in program analysis"}, {"link": "", "title": "Detection of semantically similar code [J]"}, {"link": "", "title": "Mining temporal specifications from object usage"}, {"link": "", "title": "Mining temporal specifications for error detection"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "Automated extraction of security policies from natural-language software documents"}, {"link": "/document/1191799", "title": "Transformation-based diagnosis of student programs for programming tutoring systems"}, {"link": "", "title": "Melton: a practical and precise memory leak detection tool for C programs [J]"}, {"link": "", "title": "Modeling and discovering vulnerabilities with code property graphs"}, {"link": "", "title": "Automatic inference of search patterns for taint-style vulnerabilities"}, {"link": "", "title": "Chucky: Exposing missing checks in source code for vulnerability discovery"}, {"link": "", "title": "Inferring resource specifications from natural language API documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886915"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453076"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453080"}
{"ref": [{"link": "", "title": "37 million compilations: Investigating novice programming mistakes in large-scale student data"}, {"link": "", "title": "The javaone 2013 technical keynote"}, {"link": "", "title": "Typechecking smalltalk in a production environment"}, {"link": "", "title": "A set of postulates for the foundation of logic"}, {"link": "", "title": "Experience report: Growing programming languages for beginning students"}, {"link": "", "title": "Understanding programming expertise: An empirical study of phasic brain wave changes"}, {"link": "", "title": "All syntax errors are not equal"}, {"link": "", "title": "Understanding the syntax barrier for novices"}, {"link": "", "title": "How do api documentation and static typing affect api usability"}, {"link": "", "title": "Measuring programming experience"}, {"link": "", "title": "The pros and cons of lambda"}, {"link": "", "title": "An empirical investigation of the effects of type systems and code completion on api usability using typescript and javascript in ms visual studio"}, {"link": "", "title": "Smalltalk-80: The Language and Its Implementation"}, {"link": "", "title": "Doubts about the positive impact of static type systems on programming tasks in single developer projects -an empirical study"}, {"link": "", "title": "An experiment about static and dynamic type systems: doubts about the positive impact of static type systems on development time"}, {"link": "", "title": "an essay on software science's neglect of human factors"}, {"link": "", "title": "An empirical study on the impact of static typing on software maintainability"}, {"link": "", "title": "no ceiling to scratch: can one language serve kids and computer scientists"}, {"link": "", "title": "Do developers benefit from generic types?: an empirical comparison of generic and raw types in java"}, {"link": "", "title": "Using students as subjects-a comparative study of students and professionals in lead-time impact assessment"}, {"link": "", "title": "Lambda expressions and closures: Wording for monomorphic lambdas (revision 4). Tech. rep., Tech. Rep"}, {"link": "", "title": "A user centred approach to functions in excel"}, {"link": "", "title": "Evidence-based programming language design: a philosophical and methodological exploration"}, {"link": "", "title": "The extent of empirical evidence that could inform evidence-based design of programming languages: A systematic mapping study"}, {"link": "", "title": "Intentional ignorance: A history of blind assessment and placebo controls in medicine"}, {"link": "", "title": "Systematic literature reviews in software engineering-e systematic literature review"}, {"link": "/document/6240483", "title": "Do static type systems improve the maintainability of software systems? an empirical study"}, {"link": "", "title": "A practical guide to controlled experiments of software engineering tools with human participants"}, {"link": "", "title": "Finding causes of program output with the java whyline"}, {"link": "", "title": "Staking claims: a history of programming language design claims and evidence: A positional work in progress"}, {"link": "", "title": "An empirical study of the influence of static type systems on the usability of undocumented software"}, {"link": "", "title": "Empirical analysis of programming language adoption"}, {"link": "", "title": "A comparative study of programming languages in rosetta code"}, {"link": "", "title": "Software is discrete mathematics"}, {"link": "", "title": "Java generics adoption: how new features are introduced, championed, or ignored"}, {"link": "", "title": "Adoption and use of java generics"}, {"link": "", "title": "An empirical comparison of static and dynamic type systems on api usage in the presence of an ide: Java vs. groovy with eclipse"}, {"link": "", "title": "Types and programming languages"}, {"link": "", "title": "Experience report: Haskell as a reagent: Results and observations on the use of haskell in a python project"}, {"link": "", "title": "A large scale study of programming languages and code quality in github"}, {"link": "", "title": "Is transactional programming actually easier?"}, {"link": "", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "A proposal to add lambda functions to the c++ standard. Tech. rep."}, {"link": "", "title": "Programmers' build errors: A case study (at google)"}, {"link": "", "title": "Software Psychology: Human Factors in Computer and Information Systems"}, {"link": "", "title": "Guide to Advanced Empirical Software Engineering"}, {"link": "", "title": "Measuring and modeling programming experience"}, {"link": "", "title": "Empirical studies on programming language stimuli"}, {"link": "", "title": "The programming language wars: Questions and responsibilities for the programming language community"}, {"link": "", "title": "What is the foundation of evidence of human factors decisions in language design? an empirical study on programming language workshops"}, {"link": "", "title": "An empirical investigation into programming language syntax"}, {"link": "", "title": "B. C++ 11 -the new iso c++ standard"}, {"link": "/document/675631", "title": "Should computerscientists experiment more"}, {"link": "", "title": "U.S. Department Of Education Institute Of Edu-cation Sciences"}, {"link": "", "title": "Quantitative Research Methods for Professionals in Education and Other Fields"}, {"link": "", "title": "The dark side of lambda expressions in java 8"}, {"link": "", "title": "Lambda functions and closures for c++. Tech. Rep."}, {"link": "", "title": "Experimentation in Software Engineering"}, {"link": "", "title": "Identifying relevant studies in software engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886954"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453147"}
{"ref": [{"link": "", "title": "Visualizing time-oriented data - a systematic view"}, {"link": "", "title": "Hybrid DOM-sensitive change impact analysis for JavaScript"}, {"link": "", "title": "Understanding JavaScript event-based interactions"}, {"link": "", "title": "The DynaRIA tool for the comprehension of Ajax web applications by dynamic analysis"}, {"link": "", "title": "WaRR: A tool for high-fidelity web application record and replay"}, {"link": "", "title": "Interactive record/replay for web application debugging"}, {"link": "", "title": "Explaining visual changes in web interfaces"}, {"link": "", "title": "Callback hell, a guide to writing asynchronous JavaScript programs"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Efficient construction of approximate call graphs for JavaScript IDE services"}, {"link": "/document/7321196", "title": "Don't call us, we'll call you: Characterizing callbacks in JavaScript"}, {"link": "", "title": ""}, {"link": "", "title": "Unravel: Rapid web application reverse engineering via interaction recording, source tracing, and library detection"}, {"link": "", "title": "Detecting concurrency errors in client-side java script web applications"}, {"link": "", "title": "Modeling the HTML DOM and browser API in static analysis of JavaScript web applications"}, {"link": "", "title": "Jsai: A static analysis platform for JavaScript"}, {"link": "", "title": "Directing JavaScript with arrows"}, {"link": "", "title": "Language trends on GitHub"}, {"link": "", "title": "Imagen: Runtime migration of browser sessions for JavaScript web applications"}, {"link": "", "title": ""}, {"link": "", "title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries"}, {"link": "", "title": "Static analysis of event-driven node.js JavaScript applications"}, {"link": "", "title": "Extracting client-side web application code"}, {"link": "", "title": "Generating feature usage scenarios in client-side web applications"}, {"link": "", "title": "Mugshot: Deterministic capture and replay for Javascript applications"}, {"link": "", "title": "Automating navigation sequences in Ajax websites"}, {"link": "", "title": "Building call graphs for embedded client-side code in dynamic web applications"}, {"link": "", "title": "Mining interprocedural, data-oriented usage patterns in JavaScript web applications"}, {"link": "", "title": ""}, {"link": "/document/5295287", "title": "FireCrystal: Understanding interactive behaviors in dynamic web pages"}, {"link": "/document/1374307", "title": "A novel software visualisation model to support software comprehension"}, {"link": "", "title": "Lifelines: Visualizing personal histories"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Jalangi: a selective record-replay and dynamic analysis framework for JavaScript"}, {"link": "", "title": "Correlation tracking for points-to analysis of JavaScript"}, {"link": "", "title": "Stack Overflow"}, {"link": "", "title": "W3C. Document Object Model (DOM) level 2 events specification"}, {"link": "", "title": ""}, {"link": "", "title": "State-sensitive points-to analysis for the dynamic behavior of JavaScript objects"}, {"link": "", "title": "Experimentation in software engineering"}, {"link": "", "title": "Understanding Ajax applications by connecting client and server-side execution traces"}, {"link": "", "title": "Statically locating web application bugs caused by asynchronous calls"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886989"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Bimodal modelling of source code and natural language"}, {"link": "", "title": "Mining source code repositories at massive scale using language modeling"}, {"link": "", "title": "Synthesis of interface specifications for Java classes"}, {"link": "", "title": "The mathematics of statistical machine translation: Parameter estimation"}, {"link": "", "title": "SNIFF: A search engine for Java using free-form queries"}, {"link": "", "title": "Mining and understanding software enclaves (MUSE)"}, {"link": "", "title": "CodeHint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Towards concept-based translation models using search logs for query expansion"}, {"link": "", "title": "Learning from 6,000 projects: Lightweight cross-project anomaly detection"}, {"link": "", "title": "Interactive synthesis using freeform queries"}, {"link": "", "title": "Complete completion using types and weights"}, {"link": "", "title": "Interactive synthesis of code snippets"}, {"link": "/document/2023", "title": "Intelligent assistance for software development and maintenance"}, {"link": "", "title": "Spotting working code examples"}, {"link": "", "title": "SmartSynth: Synthesizing smartphone automation scripts from natural language"}, {"link": "", "title": "Jun-gloid mining: Helping to navigate the API jungle"}, {"link": "", "title": "Typestate-based semantic code search over partial programs"}, {"link": "", "title": "Detecting missing method calls as violations of the majority rule"}, {"link": "", "title": "The Roslyn project: Exposing the C# and VB compiler's code analysis"}, {"link": "", "title": "Graph-based statistical language model for code"}, {"link": "", "title": "Graph-based mining of multiple object usage patterns"}, {"link": "", "title": "Type-directed completion of partial expressions"}, {"link": "", "title": "Predicting program properties from \u201cBig Code\u201d"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "/document/6312929", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Inhabitation in typed lambda-calculi (a syntactic approach)"}, {"link": "", "title": "Building Bing Developer Assistant"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886917"}
{"ref": [{"link": "", "title": "Linking e-mails and source code artifacts"}, {"link": "", "title": "Leveraging usage similarity for effective retrieval of examples in code repositories"}, {"link": "", "title": "Don't count, predict! A systematic comparison of context-counting vs. context-predicting semantic vectors"}, {"link": "", "title": "A neural probabilistic language model"}, {"link": "", "title": "Sniff: A search engine for java using free-form queries"}, {"link": "", "title": "Who asked what: Integrating crowdsourced FAQs into API documentation"}, {"link": "", "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning"}, {"link": "", "title": "Natural language processing (almost) from scratch"}, {"link": "/document/6227207", "title": "Recovering traceability links between an API and its learning resources"}, {"link": "/document/6676903", "title": "Enhancing software traceability by automatically expanding corpora with relevant documentation"}, {"link": "", "title": "Automatic query reformulations for text retrieval in software engineering"}, {"link": "", "title": "Distributional structure"}, {"link": "", "title": "Automatically mining software-based, semantically-similar words from comment-code mappings"}, {"link": "", "title": "Optimizing search engines using clickthrough data"}, {"link": "", "title": "Training linear SVMs in linear time"}, {"link": "/document/1371919", "title": "MUDABlue: an automatic categorization system for open source repositories"}, {"link": "", "title": "Potential biases in bug localization: Do they matter?"}, {"link": "", "title": "From word embeddings to document distances"}, {"link": "", "title": "A solution to Plato's problem: The latent semantic analysis theory of acquisition, induction, and representation of knowledge"}, {"link": "", "title": "Distributed representations of sentences and documents"}, {"link": "", "title": "Neural word embedding as implicit matrixfactorization"}, {"link": "", "title": "Bug localization using Latent Dirichlet Allocation"}, {"link": "", "title": "Introduction to Information Retrieval"}, {"link": "", "title": "On the use of text retrieval techniques in software engineering"}, {"link": "/document/1374321", "title": "An information retrieval approach to concept location in source code"}, {"link": "/document/6227178", "title": "Detecting similar software applications"}, {"link": "/document/5989838", "title": "Exemplar: A source code search engine for finding highly relevant applications"}, {"link": "", "title": "Corpus-based and knowledge-based measures of text semantic similarity"}, {"link": "", "title": "Efficient estimation of word representations in vector space"}, {"link": "", "title": "Distributed representations of words and phrases and their compositionality"}, {"link": "", "title": "Linguistic regularities in continuous space word representations"}, {"link": "/document/6100062", "title": "A topic-based approach for narrowing the search space of buggy files from a bug report"}, {"link": "", "title": "Discovering word senses from text"}, {"link": "", "title": "Crowd documentation: Exploring the coverage and the dynamics of API discussions on stack overflow"}, {"link": "/document/4181710", "title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval"}, {"link": "", "title": "Combining probabilistic ranking and Latent Semantic Indexing for feature identification"}, {"link": "", "title": "Retrieval from software libraries for bug localization: A comparative study of generic and composite text models"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "/document/1698785", "title": "Mica: A Web-search tool for finding API components and examples"}, {"link": "", "title": "Live API documentation"}, {"link": "", "title": "Automated construction of a software-specific word similarity database"}, {"link": "", "title": "SEWordSim: Software-specific word similarity database"}, {"link": "", "title": "The TREC-8 question answering track report"}, {"link": "", "title": "Inferring semantically related software terms and their taxonomy by leveraging collaborative tagging"}, {"link": "", "title": "Inferring semantically related words from software context"}, {"link": "", "title": "Learning to rank relevant files for bug reports using domain knowledge"}, {"link": "/document/6227210", "title": "Where should the bugs be fixed? - more accurate information retrieval-based bug localization based on bug reports"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886921"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453190"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453078"}
{"ref": [{"link": "", "title": "Prioritizing Test Cases for Early Detection of Refactoring Faults"}, {"link": "", "title": "RefDistiller: A Refactoring Aware Code Review Tool for Inspecting Manual Refactoring Edits"}, {"link": "", "title": "Apache Camel-Building"}, {"link": "", "title": "Tom: Piggybacking Rewriting on Java"}, {"link": "", "title": "DMS: Program Transformations for Practical Scalable Software Evolution"}, {"link": "", "title": "Regression Test Selection Techniques: A Survey"}, {"link": "", "title": "Algebraic Reasoning for Object-oriented Programming"}, {"link": "", "title": "iXj: Interactive Source-to-Source Transformations for Java"}, {"link": "", "title": "Stratego/XT 0. 17. A Language and Toolset for Program Transformation"}, {"link": "", "title": "Build in the Cloud"}, {"link": "", "title": "Byte Buddy"}, {"link": "", "title": "Continuous Delivery: Huge Benefits, but Challenges Too"}, {"link": "", "title": "TestTube: A System for Selective Regression Testing"}, {"link": "", "title": "Renaming Global Variables in C Mechanically Proved Correct"}, {"link": "", "title": "The TXL Source Transformation Language"}, {"link": "", "title": "Automated Testing of Refactoring Engines"}, {"link": "", "title": "EclipseJDTWebPage"}, {"link": "", "title": "EclipseWebPage"}, {"link": "", "title": "Ekstazi: Lightweight Test Selection"}, {"link": "", "title": "Techniques for Improving Regression Testing in Continuous Integration Development Environments"}, {"link": "", "title": "A Qualitative Survey of Regression Testing Practices"}, {"link": "", "title": "A Systematic Review on Regression Test Selection Techniques"}, {"link": "", "title": "Empirical Evaluations of Regression Test Selection Techniques: A Systematic Review"}, {"link": "", "title": "Refactoring: Improving the Design of Existing Code"}, {"link": "", "title": "Making System User Interactive Tests Repeatable: When and What Should We Control?"}, {"link": "", "title": "Manual Refactoring Changes with Automated Refactoring Validation"}, {"link": "", "title": "Systematic Testing of Refactoring Engines on Real Software Projects"}, {"link": "", "title": "Practical Regression Test Selection with Dynamic file Dependencies"}, {"link": "", "title": "An Empirical Evaluation and Comparison of Manual and Automated Test Selection"}, {"link": "", "title": "Applying Selective Revalidation Techniques at Microsoft"}, {"link": "", "title": "The Art of Testing Less without Sacrificing Quality"}, {"link": "", "title": "Scripting a Refactoring with Rascal and Eclipse"}, {"link": "", "title": "Usage, Costs, and Benefits of Continuous Integration in Open-Source Projects"}, {"link": "", "title": "IntelliJIdeaWebPage"}, {"link": "", "title": "JaCoCoWebPage"}, {"link": "", "title": "Eclipse JDT Refactorings Menu"}, {"link": "", "title": "Eclipse JDT Refactoring Support"}, {"link": "", "title": "Scripting Parametric Refactorings in Java to Retrofit Design Patterns"}, {"link": "", "title": "Improving Refactoring Speed by 10X"}, {"link": "", "title": "Ref-finder: a Refactoring Reconstruction Tool Based on Logic Query Templates"}, {"link": "", "title": "Class Firewall, Test Order, and Regression Testing of Object-Oriented Programs"}, {"link": "", "title": "An Extensive Study of Static Regression Test Selection in Modern Software Evolution"}, {"link": "", "title": "A Domain-Specific Language for Scripting Refactorings in Erlang"}, {"link": "", "title": "How Does Regression Test Prioritization Perform in Real-World Software Evolution?"}, {"link": "", "title": "A Declarative Evolution Framework for Object-Oriented Design Patterns"}, {"link": "", "title": "Making Refactoring Safer Through Impact Analysis"}, {"link": "", "title": "Testing During Refactoring: Adding Aspects to Legacy Systems"}, {"link": "", "title": "How We Refac-tor, and How We Know It"}, {"link": "", "title": "Coverage-based Regression Test Case Selection, Minimization and Prioritization: A Case Study on an Industrial System"}, {"link": "", "title": "NetBeansWebPage"}, {"link": "", "title": "Refactoring Object-Oriented Frameworks"}, {"link": "", "title": "Refactoring: An Aid In Designing Application Frameworks and Evolving Object-Oriented Systems"}, {"link": "", "title": "OracleJDeveloperWebPage"}, {"link": "", "title": "Software Testing: A Research Travelogue (2000-2014)"}, {"link": "", "title": "Scaling Regression Testing to Large Software Systems"}, {"link": "", "title": "Feedback-Directed Random Test Generation"}, {"link": "", "title": "An Empirical Investigation into the Impact of Refactoring on Regression Testing"}, {"link": "", "title": "RefactoringCatalogWebPage"}, {"link": "", "title": "Chianti: A Tool for Change Impact Analysis of Java Programs"}, {"link": "/document/536955", "title": "Analyzing Regression Test Selection Techniques"}, {"link": "", "title": "An Experimental Evaluation of Continuous Testing During Development"}, {"link": "", "title": "Challenge Proposal: Verification of Refactorings"}, {"link": "", "title": "Why We Refac-tor? Confessions of GitHub Contributors"}, {"link": "", "title": "Improving Class Firewall Regression Test Selection by Removing the Class Firewall"}, {"link": "", "title": "SLOCCount"}, {"link": "/document/6175911", "title": "Automated Behavioral Testing of Refactoring Engines"}, {"link": "", "title": "Live Feedback on Behavioral Changes"}, {"link": "", "title": "Effectively Prioritizing Tests in Development Environment"}, {"link": "", "title": "A Refactoring Constraint Language and its Application to Eiffel"}, {"link": "", "title": "TestingAtSpeedAndScaleOfGoogleWeb"}, {"link": "", "title": "Refactoring using type constraints"}, {"link": "", "title": "Refactoring for Generalization using Type Constraints"}, {"link": "", "title": "Evolving Object-Oriented Designs with Refactorings"}, {"link": "", "title": "ToolsForContinuousIntegrationAtGoogleScaleWeb"}, {"link": "", "title": "There and Back Again: Can you Compile that Snapshot?"}, {"link": "", "title": "The ASF+SDF Meta-environment: A Component-Based Language Development Environment"}, {"link": "/document/4815362", "title": "Dynamic Regression Test Selection Based on a File Cache-An Industrial Evaluation"}, {"link": "", "title": "Regression Test selection for AspectJ Software"}, {"link": "", "title": "Regression Testing Minimization, Selection and Prioritization: A Survey"}, {"link": "", "title": "Localizing Failure-Inducing program Edits Based on Spectrum Information"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453082"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Performance debugging for distributed systems of black boxes"}, {"link": "", "title": "Dcr: Replay debugging for the datacenter. Technical Report UCB/EECS-2010\u201374, EECS Department"}, {"link": "", "title": "Spark sql: Relational data processing in spark"}, {"link": "/document/4497516", "title": "Querying and managing provenance through user views in scientific workflows"}, {"link": "", "title": "Chukwa, a large-scale monitoring system"}, {"link": "", "title": "Live debugging of distributed systems. In Compiler Construction"}, {"link": "", "title": "Arthur: Rich post-facto debugging for production analytics applications"}, {"link": "", "title": "Mapreduce: Simplified data processing on large clusters"}, {"link": "", "title": "Interactions with big data analytics"}, {"link": "", "title": "Execution anomaly detection in distributed systems through unstructured log analysis"}, {"link": "", "title": "Friday: Global comprehension for distributed replay"}, {"link": "", "title": "The google file system"}, {"link": "", "title": "Graphx: Graph processing in a distributed dataflow framework"}, {"link": "", "title": "R2: An application-level kernel for record and replay"}, {"link": "", "title": "Provenance for generalized map and reduce workflows"}, {"link": "", "title": "Titian: Data provenance support in spark"}, {"link": "", "title": "Monitoring and debugging dryadlinq applications with daphne"}, {"link": "/document/1676929", "title": "Debugging parallel programs with instant replay"}, {"link": "", "title": "Unified debugging of distributed systems with recon"}, {"link": "", "title": "D3s: Debugging deployed distributed systems"}, {"link": "", "title": "Scalable lineage capture for debugging disc analytics"}, {"link": "", "title": "Mllib: Machine learning in apache spark"}, {"link": "", "title": "Optimal tracing and replay for debugging message-passing parallel programs"}, {"link": "", "title": "Inspector gadget: A framework for custom monitoring and debugging of distributed dataflows"}, {"link": "", "title": "Pig latin: a not-so-foreign language for data processing"}, {"link": "", "title": "Graft: A debugging tool for apache giraph"}, {"link": "", "title": "The hadoop distributed filesystem: Balancing portability and performance"}, {"link": "", "title": "Assisting developers of big data analytics applications when deploying on hadoop clouds"}, {"link": "", "title": "Salsa: Analyzing logs as state machines"}, {"link": "", "title": "Hive-a petabyte scale data warehouse using hadoop"}, {"link": "", "title": "Detecting large-scale system problems by mining console logs"}, {"link": "", "title": "Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing"}, {"link": "/document/988498", "title": "Simplifying and isolating failure-inducing input"}, {"link": "", "title": "An empirical study on quality issues of production big data platform"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886956"}
{"ref": [{"link": "", "title": "How do software architects consider non-functional requirements: An exploratory study"}, {"link": "/document/5636894", "title": "Dealing with non- functional requirements in model-driven development"}, {"link": "", "title": "The bad conscience of requirements engineering: an investigation in real-world treatment of non-functional requirements"}, {"link": "", "title": "Multifunctional software systems: Structured modeling and specification of functional requirements"}, {"link": "", "title": "Rethinking nonfunctional software requirements"}, {"link": "", "title": "Rethinking nonfunctional software requirements: A novel approach categorizing system and software requirements"}, {"link": "/document/6365165", "title": "Characterizing architecturally significant requirements"}, {"link": "", "title": "non- functional requirements in software engineering"}, {"link": "", "title": "Dealing with non-functional requirements: three experimental studies of a process-oriented approach"}, {"link": "", "title": "Non-functional requirements in software engineering"}, {"link": "", "title": "Boosting re-use of embedded automotive applications through rich components"}, {"link": "/document/7321200", "title": "How to specify non-functional requirements to support seamless modeling? A study design and preliminary results"}, {"link": "/document/4724807", "title": "Analysis, specification and modeling of non-functional requirements for translative model-driven development"}, {"link": "/document/4384163", "title": "non-functional requirements"}, {"link": "", "title": "Model transformations for performability analysis of service configurations"}, {"link": "", "title": "Software engineering - Product quality"}, {"link": "/document/6226009", "title": "A rigorous approach to availability modeling"}, {"link": "", "title": "Optimizing automatic deployment using non-functional requirement annotations"}, {"link": "", "title": "An investigation into the notion of non-functional requirements"}, {"link": "", "title": "Code complete"}, {"link": "", "title": "Integrating usability requirements that can be evaluated in design time into model driven engineering of web information systems"}, {"link": "/document/142871", "title": "Representing and using nonfunctional requirements: a process-oriented approach"}, {"link": "", "title": "Requirements Engineering: Fundamentals, Principles, and Techniques"}, {"link": "", "title": "Mastering the requirements process: Getting requirements right"}, {"link": "", "title": "Requirements engineering: a good practice guide"}, {"link": "", "title": "Quality requirements in practice: An interview study in requirements engineering for embedded systems"}, {"link": "/document/7320447", "title": "Systematic elicitation of mode models for multifunctional systems"}, {"link": "", "title": "A model-driven development framework for non-functional aspects in service oriented architecture"}, {"link": "/document/6227106", "title": "The quamoco product quality modelling and assessment approach"}, {"link": "", "title": ""}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886960"}
{"ref": [{"link": "", "title": "Dacapo"}, {"link": "", "title": "Funkyjfilter benchmark"}, {"link": "", "title": "J2SE's javadoc"}, {"link": "", "title": "Javaslicer"}, {"link": "", "title": "Jtreg"}, {"link": "", "title": "Listappend benchmark"}, {"link": "", "title": "Specjbb"}, {"link": "", "title": "The stanford natural language processing group"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Modern compiler implementation in java"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Automated generation of model classes for java pathfinder"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Discovering documentation for java container classes. Software Engineering"}, {"link": "", "title": "Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition"}, {"link": "", "title": "Accurate unlexicalized parsing"}, {"link": "", "title": "Foundations of statistical natural language processing"}, {"link": "", "title": "Jflow: Practical mostly-static information flow control"}, {"link": "", "title": "Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software"}, {"link": "", "title": "Feedback-directed random test generation"}, {"link": "/document/6693066", "title": "Improving efficiency of dynamic analysis with dynamic dependence summaries"}, {"link": "/document/6227137", "title": "Inferring method specifications from natural language api descriptions"}, {"link": "", "title": "Modeling software execution environment"}, {"link": "", "title": "Parsing three german treebanks: Lexicalized and unlexicalized baselines"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "Text2test: Automated inspection of natural language use cases"}, {"link": "", "title": "Bitblaze: A new approach to computer security via binary analysis"}, {"link": "", "title": "A discriminative model approach for accurate duplicate bug report retrieval"}, {"link": "", "title": "icomment: Bugs or bad comments?"}, {"link": "", "title": "@tcomment: Testing javadoc comments to detect comment-code inconsistencies"}, {"link": "", "title": "Ocsegen: Open components and systems environment generator"}, {"link": "", "title": "Automated environment generation for software model checking"}, {"link": "", "title": "Generation of library models for verification of android applications"}, {"link": "", "title": "Model checking programs"}, {"link": "", "title": "Appintent: Analyzing sensitive data transmission in android for privacy leakage detection"}, {"link": "", "title": "Mapo: Mining and recommending api usage patterns"}, {"link": "", "title": "Inferring resource specifications from natural language api documentation"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886919"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Learning natural coding conventions"}, {"link": "", "title": "Mining idioms from source code"}, {"link": "", "title": "A systematic and comprehensive investigation of methods to build and evaluate fault prediction models"}, {"link": "/document/4602670", "title": "Using static analysis to find bugs"}, {"link": "/document/544352", "title": "A validation of object-oriented design metrics as quality indicators"}, {"link": "", "title": "Syntax errors just aren't natural: improving error reporting with language models"}, {"link": "", "title": "A systematic review of software fault prediction studies"}, {"link": "", "title": "How to write system-specific, static checkers in metal"}, {"link": "", "title": "PMD applied"}, {"link": "", "title": "An extensive comparison of bug prediction approaches"}, {"link": "/document/7081844", "title": "Untangling fine-grained code changes"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "FindBugs"}, {"link": "", "title": "Cacheca: A cache language model based code suggestion tool"}, {"link": "", "title": "Method-level bug prediction"}, {"link": "/document/5070510", "title": "Predicting faults using the complexity of code changes"}, {"link": "", "title": "On establishing a benchmark for evaluating static analysis alert prioritization and classification techniques"}, {"link": "", "title": "Adaptively ranking alerts generated from automated static analysis"}, {"link": "", "title": "Untangling changes"}, {"link": "", "title": "The impact of tangled code changes"}, {"link": "/document/6227135", "title": "On the naturalness of software"}, {"link": "", "title": "Why don't software developers use static analysis tools to find bugs?"}, {"link": "", "title": "Phrase-based statistical translation of programming languages"}, {"link": "/document/1165125", "title": "Estimation of probabilities from sparse data for the language model component of a speech recognizer"}, {"link": "", "title": "Which warnings should i fix first?"}, {"link": "", "title": "Predicting faults from cached history"}, {"link": "", "title": "Correlation exploitation in error ranking"}, {"link": "", "title": "Z-ranking: Using statistical analysis to counter the impact of static analysis approximations"}, {"link": "", "title": "From uncertainty to belief: Inferring the specification within"}, {"link": "/document/910572", "title": "Factor graphs and the sum-product algorithm"}, {"link": "", "title": "Pr-miner: Automatically extracting implicit programming rules and detecting violations in large software code"}, {"link": "/document/883028", "title": "Identifying reasons for software changes using historic databases"}, {"link": "", "title": "A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction"}, {"link": "/document/1553571", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "Statistical learning of api mappings for language migration"}, {"link": "", "title": "Lexical statistical machine translation for language migration"}, {"link": "", "title": "Migrating code with statistical machine translation"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "/document/6100074", "title": "Ecological inference in empirical software engineering"}, {"link": "", "title": "How, and why, process metrics are better"}, {"link": "", "title": "Comparing static bug finders and statistical prediction"}, {"link": "", "title": "Recalling the imprecision of cross-project defect prediction"}, {"link": "/document/6693095", "title": "Detecting and characterizing semantic inconsistencies in ported code"}, {"link": "", "title": "A large scale study of programming languages and code quality in github"}, {"link": "", "title": "Predicting program properties from \u201cbig code\u201d"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "Predicting accurate and actionable static analysis warnings: an experimental approach"}, {"link": "", "title": "When do changes induce fixes?"}, {"link": "", "title": "Alattin: Mining alternative patterns for detecting neglected conditions"}, {"link": "", "title": "To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "Detecting object usage anomalies"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}, {"link": "", "title": "A cost-effectiveness criterion for applying software defect prediction models"}, {"link": "", "title": "Predicting defects for eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886923"}
{"ref": [{"link": "", "title": "Is mutation an appropriate tool for testing experiments?"}, {"link": "", "title": "Murmurhash hash functions"}, {"link": "", "title": "Modern information retrieval"}, {"link": "/document/4288194", "title": "Finding clones with dup: Analysis of an experiment"}, {"link": "", "title": "Clone smells in software evolution"}, {"link": "/document/738528", "title": "Clone detection using abstract syntax trees"}, {"link": "/document/4288192", "title": "Comparison and evaluation of clone detection tools"}, {"link": "", "title": "On the feasibility of detecting cross-platform code clones via identifier similarity"}, {"link": "", "title": "Count lines of code"}, {"link": "", "title": "The TXL Programming Language"}, {"link": "", "title": "XIAO: Tuning code clones at hands of engineers in practice"}, {"link": "", "title": "A language independent approach for detecting duplicated code"}, {"link": "", "title": "Apache Hadoop"}, {"link": "", "title": "Incremental clone detection"}, {"link": "", "title": "KClone: a proposed approach to fast precise code clone detection"}, {"link": "", "title": "Deckard: Scalable and accurate tree-based detection of code clones"}, {"link": "", "title": "Context-based detection of clone-related bugs"}, {"link": "", "title": "Substring Matching for Clone Detection and Change Tracking"}, {"link": "", "title": "Do code clones matter?"}, {"link": "", "title": "The official CCFinderX website"}, {"link": "", "title": "MeCC: memory comparison-based clone detector"}, {"link": "", "title": "An empirical study of code clone genealogies"}, {"link": "/document/5460547", "title": "Detection of type-1 and type-2 code clones using textual analysis and metrics"}, {"link": "", "title": "Using slicing to identify duplication in source code"}, {"link": "", "title": "Pattern matching for clone and concept detection"}, {"link": "/document/957835", "title": "Identifying similar code with program dependence graphs"}, {"link": "/document/1610609", "title": "CP-Miner: Finding copy-paste and related bugs in large-scale software code"}, {"link": "", "title": "GPLAG: detection of software plagiarism by program dependence graph analysis"}, {"link": "", "title": "Assessing the effect of clones on changeability"}, {"link": "", "title": "Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics"}, {"link": "", "title": "Collecting and leveraging a benchmark of build system clones to aid in quality assessments"}, {"link": "", "title": "An empirical study of the impacts of clones in software maintenance"}, {"link": "", "title": "A guided tour to approximate string matching"}, {"link": "/document/6007141", "title": "Clone management for evolving software"}, {"link": "", "title": "Flex-fast lexical analyzer generator"}, {"link": "", "title": "Extracting the similarity in detected software clones using metrics"}, {"link": "", "title": "Clones: What is that smell?"}, {"link": "", "title": "Software clone detection: A systematic review"}, {"link": "", "title": "A survey on software clone detection research"}, {"link": "", "title": "NICAD: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization"}, {"link": "", "title": "A mutation/injection-based automatic framework for evaluating code clone detection tools"}, {"link": "", "title": "Near-miss function clones in open source software: an empirical study"}, {"link": "", "title": "The vision of software clone management: Past, present, and future (keynote paper)"}, {"link": "", "title": "A framework for managing cloned product variants"}, {"link": "", "title": "SourcererCC: scaling code clone detection to big-code"}, {"link": "", "title": "Towards a big data curated benchmark of inter-project code clones"}, {"link": "", "title": "Evaluating Modern Clone Detection Tools"}, {"link": "", "title": "Evaluating clone detection tools with bigclonebench"}, {"link": "", "title": "BigCloneEval: A Clone Detection Tool Evaluation Framework with BigCloneBench"}, {"link": "", "title": "A mutation analysis based benchmarking framework for clone detectors"}, {"link": "", "title": "An empirical study on the maintenance of source code clones"}, {"link": "", "title": "Clone refactoring with lambda expressions"}, {"link": "", "title": "On the localness of software"}, {"link": "", "title": "On detection of gapped code clones using gap locations"}, {"link": "", "title": "Searching for better configurations: a rigorous approach to clone evaluation"}, {"link": "", "title": "Deep learning code fragments for code clone detection"}, {"link": "", "title": "Automated transplantation and differential testing for clones"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453188"}
{"ref": [{"link": "", "title": "Android fragementation problem"}, {"link": "", "title": "AppBrain"}, {"link": "", "title": "AppThwack"}, {"link": "", "title": "Facebook: How do I run ads only on specific types of phones?"}, {"link": "", "title": "Mean average precision"}, {"link": "", "title": "OpenSignal"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "/document/1291833", "title": "Model-based performance prediction in software development: A survey"}, {"link": "", "title": "Rescaling reliability bounds for a new operational profile"}, {"link": "", "title": "Falling asleep with Angry Birds, Facebook and Kindle: a large scale study on mobile application usage"}, {"link": "", "title": "A study on icon arrangement by smartphone users"}, {"link": "", "title": "SimApp: A framework for detecting similar mobile applications by online kernel learning"}, {"link": "", "title": "Mining large-scale smartphone data for personality studies"}, {"link": "", "title": "On reducing the sensitivity of software reliability to variations in the operational profile"}, {"link": "", "title": "A first look at traffic on smartphones"}, {"link": "", "title": "Truth in advertising: The hidden cost of mobile ads for software developers"}, {"link": "", "title": "Mosaic: cross-platform user-interaction record and replay for the fragmented Android ecosystem"}, {"link": "", "title": "Understanding Android fragmentation with topic analysis of vendor-specific bugs"}, {"link": "", "title": "Short paper: enhancing mobile application permissions with runtime feedback and constraints"}, {"link": "", "title": "Prioritizing the devices to test your app on: A case study of Android game apps"}, {"link": "", "title": "A study of cross-validation and bootstrap for accuracy estimation and model selection"}, {"link": "", "title": "Characterizing smartphone usage patterns from millions of Android users"}, {"link": "/document/6913003", "title": "Investigating country differences in mobile app user behavior and challenges for software engineering"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "Discovery and evaluation of aggregate usage profiles for web personalization"}, {"link": "/document/199724", "title": "Operational profiles in software-reliability engineering"}, {"link": "", "title": "Madscope: Characterizing mobile in-app targeted ads"}, {"link": "", "title": "Power laws, Pareto distributions and Zipf's law"}, {"link": "/document/6579465", "title": "Fragmentation problem in Android"}, {"link": "", "title": "Rise of the planet of the apps: a systematic study of the mobile app ecosystem"}, {"link": "", "title": "Exploring iPhone usage: the influence of socioeconomic differences on smartphone adoption, usage and usability"}, {"link": "/document/6212504", "title": "Studying smartphone usage: Lessons from a four-month field study"}, {"link": "", "title": "AppInsight: Mobile app performance monitoring in the wild"}, {"link": "", "title": "GroupLens: an open architecture for collaborative filtering of netnews"}, {"link": "", "title": "Recommender systems"}, {"link": "", "title": "What are the characteristics of high-rated apps? A case study on free Android applications"}, {"link": "", "title": "Characterizing web use on smartphones"}, {"link": "", "title": "Identifying diverse usage behaviors of smartphone apps"}, {"link": "", "title": "AppJoy: personalized mobile application discovery"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886887"}
{"ref": [{"link": "", "title": "Recursive program synthesis"}, {"link": "", "title": "Syntax-guided synthesis"}, {"link": "", "title": "SyGuS-Comp 2016: Results and Analysis"}, {"link": "", "title": "Scaling Enumerative Program Synthesis via Divide and Conquer"}, {"link": "", "title": "XPath-Wrapper Induction by generalizing tree traversal patterns"}, {"link": "", "title": "Toward tool support for interactive synthesis"}, {"link": "", "title": "Planware-Domain-Specific Synthesis of High-Performance Schedulers"}, {"link": "", "title": "Programming with angelic nondeterminism"}, {"link": "", "title": "AUTOGEN: Automatic Discovery of Cache-oblivious Parallel Recursive Algorithms for Solving Dynamic Programs"}, {"link": "", "title": "Component-Based Synthesis for Complex APIs"}, {"link": "", "title": "Synthesizing data structure transformations from input-output examples"}, {"link": "", "title": "Codehint: Dynamic and interactive synthesis of code snippets"}, {"link": "", "title": "Automating String Processing in Spreadsheets Using Input-output Examples"}, {"link": "", "title": "Synthesis from examples: Interaction models and algorithms"}, {"link": "", "title": "Complete completion using types and weights"}, {"link": "", "title": "An evaluation of the strategies of sorting, filtering, and grouping api methods for code completion"}, {"link": "", "title": "Deriving Divide-and-Conquer Dynamic Programming Algorithms using Solver-Aided Transformations"}, {"link": "", "title": "A Simple Inductive Synthesis Methodology and Its Applications"}, {"link": "", "title": "Deriving divide-and-conquer dynamic programming algorithms using solver-aided transformations"}, {"link": "", "title": "Visual AWK: A Model for Text Processing by Demonstration"}, {"link": "", "title": "Learning repetitive text-editing procedures with SMARTedit"}, {"link": "", "title": "FlashExtract: a framework for data extraction by examples"}, {"link": "", "title": "Dynamic synthesis for relaxed memory models"}, {"link": "", "title": "Cross-supervised synthesis of web-crawlers"}, {"link": "", "title": "Type-and-example-directed program synthesis"}, {"link": "", "title": "Symbolic finite differencing-part i"}, {"link": "", "title": "Type-directed completion of partial expressions"}, {"link": "", "title": "Program synthesis from polymorphic refinement types"}, {"link": "", "title": "Flashmeta: A framework for inductive program synthesis"}, {"link": "", "title": "Code completion with statistical language models"}, {"link": "", "title": "MapReduce program synthesis"}, {"link": "", "title": "Program synthesis by sketching"}, {"link": "", "title": "Sketching concurrent data structures"}, {"link": "", "title": "Combinatorial sketching for finite programs"}, {"link": "", "title": "TRANSIT: specifying protocols with concolic snippets"}, {"link": "", "title": "Abstraction-Guided Synthesis of Synchronization"}, {"link": "", "title": "Correctness-preserving derivation of concurrent garbage collection algorithms"}, {"link": "", "title": "CGC-Explorer: a semi-automated search procedure for provably correct concurrent collectors"}, {"link": "", "title": "Synthesizing highly expressive SQL queries from input-output examples"}, {"link": "", "title": "TELS: Learning text editing tasks from examples"}, {"link": "", "title": "Automatic Web Content Extraction by Combination of Learning and Grouping"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453192"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453116"}
{"ref": [{"link": "", "title": "Collision Detector"}, {"link": "", "title": "MathWorks"}, {"link": "", "title": "PerfPlotter"}, {"link": "", "title": "Efficient path profiling"}, {"link": "", "title": "Edge profiling versus path profiling: The showdown"}, {"link": "/document/1291833", "title": "Model-based performance prediction in software development: A survey"}, {"link": "", "title": "Critical path analysis of tcp transactions"}, {"link": "/document/6200102", "title": "Symbolic execution with interval solving and meta-heuristic search"}, {"link": "", "title": "Iterative distribution-aware sampling for probabilistic symbolic execution"}, {"link": "", "title": "Compositional solution space quantification for probabilistic software analysis"}, {"link": "", "title": "Korat: Automated testing based on java predicates"}, {"link": "", "title": "Wise: Automated test generation for worst-case complexity"}, {"link": "", "title": "The road not taken: Estimating path execution frequency statically"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Program performance spectrum"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "Input-sensitive profiling"}, {"link": "", "title": "Software for exact integration of polynomials over polyhedra"}, {"link": "", "title": "Software profiling for hot path prediction: Less is more"}, {"link": "/document/7372058", "title": "Quantification of software changes through probabilistic symbolic execution (N)"}, {"link": "/document/6606608", "title": "Reliability analysis in symbolic pathfinder"}, {"link": "", "title": "Statistical symbolic execution with informed sampling"}, {"link": "", "title": "Probabilistic symbolic execution"}, {"link": "", "title": "An extended operational profile model"}, {"link": "", "title": "Measuring empirical computational complexity"}, {"link": "/document/6227197", "title": "Automatically finding performance problems with feedback-directed learning software testing"}, {"link": "", "title": "Speed: Precise and efficient static estimation of program computational complexity"}, {"link": "", "title": "Understanding and detecting real-world performance bugs"}, {"link": "", "title": "Brainy: Effective selection of data structures"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "/document/1677534", "title": "Performance modeling and evaluation of distributed component-based systems using queueing petri nets"}, {"link": "", "title": "Performance evaluation of component-based software systems: A survey"}, {"link": "", "title": "Whole program paths"}, {"link": "", "title": "A dynamically tuned sorting library"}, {"link": "", "title": "Program analysis: From qualitative analysis to quantitative analysis"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Exact and approximate probabilistic symbolic execution for nondeterministic programs"}, {"link": "", "title": "A model counter for constraints over unbounded strings"}, {"link": "", "title": "An o(nd) difference algorithm and its variations"}, {"link": "", "title": "Efficiently extracting operational profiles from execution logs using suffix arrays"}, {"link": "", "title": "Caramel: Detecting and fixing performance problems that have non-intrusive fixes"}, {"link": "", "title": "Toddler: Detecting performance problems via similar memory-access patterns"}, {"link": "/document/5226844", "title": "Model based analysis and test generation for flight software"}, {"link": "", "title": "Mathematical Statistics: An Introduction"}, {"link": "", "title": "Quantifying information leaks using reliability analysis"}, {"link": "", "title": "Choco3 Documentation"}, {"link": "", "title": "Symbolic PathFinder: Integrating symbolic execution with model checking for Java bytecode analysis"}, {"link": "", "title": "Guest editorial: A review of worst-case execution-time analysis"}, {"link": "", "title": "Appinsight: Mobile app performance monitoring in the wild"}, {"link": "", "title": "Static analysis for probabilistic programs: Inferring whole program properties from finitely many paths"}, {"link": "/document/7372023", "title": "Cost-efficient sampling for performance prediction of configurable systems"}, {"link": "", "title": "Chameleon: Adaptive selection of collections"}, {"link": "", "title": "Automating performance bottleneck detection using search-based application profiling"}, {"link": "/document/6227196", "title": "Predicting performance via automated feature-interaction detection"}, {"link": "/document/6030049", "title": "Automatic derivation of a product performance model from a software product line model"}, {"link": "", "title": "The worst-case execution-time problem - Overview of methods and survey of tools"}, {"link": "/document/12538", "title": "Critical path analysis for the execution of parallel and distributed programs"}, {"link": "", "title": "Algorithmic profiling"}, {"link": "", "title": "Performance estimation using symbolic data"}, {"link": "/document/6659020", "title": "Panappticon: Event-based tracing to measure mobile application and platform performance"}, {"link": "", "title": "Automatic generation of load tests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886891"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453084"}
{"ref": [{"link": "", "title": "An evaluation of similarity coefficients for software fault localization"}, {"link": "", "title": "Expertise-dependent visual attention strategies develop over time during debugging with multiple code representations"}, {"link": "", "title": "The impact of identifier style on effort and comprehension"}, {"link": "/document/6571703", "title": "Improving service diagnosis through increased monitoring granularity"}, {"link": "", "title": "Eye gaze and mouse cursor relationship in a debugging task"}, {"link": "/document/48797", "title": "How do we read algorithms? a case study"}, {"link": "", "title": "The value of slicing while debugging"}, {"link": "", "title": "Hand in motion reveals mind in motion"}, {"link": "/document/1658569", "title": "Human factors in software engineering"}, {"link": "", "title": "Using htm15 visualizations in software fault localization"}, {"link": "", "title": "No clicks, no problem: Using cursor movements to understand and improve search"}, {"link": "", "title": "Visualization of test information to assist fault localization"}, {"link": "", "title": "An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks"}, {"link": "", "title": "Designing the whyline: a debugging interface for asking questions about program behavior"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "/document/5674060", "title": "How programmers debug, revisited An information foraging theory perspective"}, {"link": "", "title": "Should i follow this fault localization tool's output? automated prediction of fault localization effectiveness"}, {"link": "", "title": "Does bug prediction support human developers? findings from a google case study"}, {"link": "", "title": "Mooctest"}, {"link": "", "title": "A model for spectra-based software diagnosis"}, {"link": "", "title": "Are automated debugging techniques actually helping programmers?"}, {"link": "", "title": "Modeling programmer navigation: A head-to-head empirical evaluation of predictive models"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Improving bug localization using structured information retrieval"}, {"link": "", "title": "Are students representatives of professionals in software engineering experiments?"}, {"link": "", "title": "An eye-tracking study on the role of scan time in finding source code defects"}, {"link": "", "title": "The effects of layout on detecting the role of design patterns"}, {"link": "", "title": "Combining algorithmic debugging and program slicing"}, {"link": "", "title": "Software Engineering. Pearson, 9 edition"}, {"link": "", "title": "Another person's eye gaze as a cue in solving programming problems"}, {"link": "", "title": "Automatically generated patches as debugging aids: a human study"}, {"link": "", "title": "Are faults localizable"}, {"link": "", "title": "Analyzing individual performance of source code review using reviewers' eye movement"}, {"link": "", "title": "Evaluating the usefulness of ir-based fault localization techniques"}, {"link": "", "title": "Experiments on slicing-based debugging aids"}, {"link": "", "title": "A family of code coverage-based heuristics for effective fault localization"}, {"link": "", "title": "A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization"}, {"link": "", "title": "Learning to combine multiple ranking metrics for fault localization"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "", "title": "Precise dynamic slicing algorithms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886958"}
{"ref": [{"link": "", "title": "Automated error-detection and repair for compositional software specifications"}, {"link": "/document/5070527", "title": "Learning operational requirements from goal models"}, {"link": "", "title": "Deriving non-zeno behaviour models from goal models using ILP"}, {"link": "", "title": "Learning from vacuously satisfiable scenario-based specifications"}, {"link": "", "title": "Automated support for diagnosis and repair"}, {"link": "/document/6227147", "title": "Generating obstacle conditions for requirements completeness"}, {"link": "", "title": "The use of goals to surface requirements for evolving systems"}, {"link": "", "title": "Requirements Engineering"}, {"link": "", "title": "Inductive learning using constraint-driven bias"}, {"link": "", "title": "Learning through hypothesis refinement using answer set programming"}, {"link": "", "title": "Probabilistic risk analysis: foundations and methods"}, {"link": "", "title": "Assessing requirements-related risks through probabilistic goals and obstacles"}, {"link": "/document/6912246", "title": "Integrating exception handling in goal models"}, {"link": "", "title": "Inductive logic programming as abductive search"}, {"link": "", "title": "Inductive logic programming in answer set programming"}, {"link": "", "title": "Quantitative risk-based requirements reasoning"}, {"link": "/document/501141", "title": "A comedy of errors: The london ambulance service case study"}, {"link": "", "title": "Fluent model checking for event-based systems"}, {"link": "", "title": ""}, {"link": "", "title": "A logic-based calculus of events"}, {"link": "", "title": "Specifying Message Passing and Time-Critical Systems with Temporal Logic"}, {"link": "", "title": "Uncertainty, risk, and information value in software requirements and architecture"}, {"link": "", "title": "An approach to designing safe embedded software"}, {"link": "", "title": "Safeware: System Safety and Computers"}, {"link": "", "title": "Foundations of logic programming"}, {"link": "", "title": "Model-Driven Risk Analysis: The CORAS Approach"}, {"link": "", "title": "Using obstacle analysis to identify contingency requirements on an unpiloted aerial vehicle"}, {"link": "", "title": "Logic-based artificial intelligence"}, {"link": "", "title": "Inductive logic programming: Theory and methods"}, {"link": "", "title": "Using schematic scenarios to understand user needs"}, {"link": "", "title": "Combining goal models, expert elicitation, and probabilistic simulation for qualification of new technology"}, {"link": "", "title": "Secrets and Lies: Digital Security in a Networked World"}, {"link": "/document/738340", "title": "Supporting scenario-based requirements engineering"}, {"link": "", "title": "Model checking abstract state machines with answer set programming"}, {"link": "", "title": "Requirements Engineering: From System Goals to UML Models to Software Specifications"}, {"link": "/document/879820", "title": "Handling obstacles in goal-oriented requirement engineering"}, {"link": "", "title": "First order theory refinement"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886962"}
{"ref": [{"link": "", "title": "Software inspections and the industrial production of software"}, {"link": "", "title": "Generic metric extraction framework"}, {"link": "", "title": "Gesture dynamics: Features sensitive to task difficulty and correlated with physiological sensors"}, {"link": "", "title": ""}, {"link": "", "title": "Systematic mathematical errors and cognitive load"}, {"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "An eye-tracking methodology for characterizing program comprehension processes"}, {"link": "", "title": "What do you want to do next: a novel approach for intent prediction in gaze-based interaction"}, {"link": "", "title": "Heart rate variability: origins, methods, and interpretive caveats"}, {"link": "", "title": "Software engineering economics"}, {"link": "", "title": "Quantitative evaluation of software quality"}, {"link": "", "title": "Characteristics of useful code reviews: An empirical study at microsoft"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "On the theory of filter amplifiers"}, {"link": "", "title": "Are you having difficulty?"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Mining software metrics for the jazz repository"}, {"link": "", "title": "The role of serious games in robot exoskeleton-assisted rehabilitation of stroke patients"}, {"link": "/document/48797", "title": "How do we read algorithms? a case study"}, {"link": "", "title": "The wycash portfoliomanagement system"}, {"link": "/document/1702603", "title": "Measuring the psychological complexity of software maintenance tasks with the Halsteadand McCabe metrics"}, {"link": "", "title": "Software Inspection Process"}, {"link": "", "title": "Predicting defect-prone software modules using support vector machines"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "The influence of task demand and learning on the psychophysiological response"}, {"link": "", "title": "Exploring software measures to assess program comprehesion"}, {"link": "", "title": ""}, {"link": "", "title": "Using psycho-physiological measures to assess task difficulty in software development"}, {"link": "", "title": "Method-level bug prediction"}, {"link": "", "title": ""}, {"link": "/document/300084", "title": "Key lessons in achieving widespread inspection use"}, {"link": "", "title": "The weka data mining software: An update"}, {"link": "", "title": "Brain activity measurement during program comprehension with NIRS"}, {"link": "", "title": "Tracing software developers' eyes and interactions for change tasks"}, {"link": "", "title": "A framework and methodology for studying the causes of software errors in programming systems"}, {"link": "", "title": "Effect of precision aiming on respiration and postural-respiratory synergy"}, {"link": "", "title": "The measurement of observer agreement for categorical data"}, {"link": "", "title": "Object-oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems"}, {"link": "", "title": "Micro interaction metrics for defect prediction"}, {"link": "", "title": "On understanding laws, evolution, and conservation in the large-program life cycle"}, {"link": "/document/4527256", "title": "Benchmarking classification models for software defect prediction: A proposed framework and novel findings"}, {"link": "", "title": "Data Mining and Knowledge Discovery Handbook"}, {"link": "/document/1357820", "title": "Detection strategies: Metrics-based rules for detecting design flaws"}, {"link": "", "title": "Code complete"}, {"link": "/document/5196681", "title": "Decor: A method for the specification and detection of code and design smells"}, {"link": "", "title": "Analysis of the reliability of a subset of change metrics for defect prediction"}, {"link": "", "title": "Stuck and frustrated or in flow and happy: Sensing developers' emotions and progress"}, {"link": "/document/1509293", "title": "Product metrics for automatic identification of \u201cbad smell\u201d design problems in java source-code"}, {"link": "/document/1553571", "title": "Use of relative code churn measures to predict system defect density"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "", "title": "The influence of organizational structure on software quality An empirical case study"}, {"link": "", "title": "Quantifying programmers' mental workload during program comprehension based on cerebral blood flow measurement: A controlled experiment"}, {"link": "/document/5446390", "title": "Psychophysiological response to robotic rehabilitation tasks in stroke"}, {"link": "", "title": "Detecting bad smells in source code using change history information"}, {"link": "", "title": "Subvocalization - toward hearing the inner thoughts of developers"}, {"link": "", "title": ""}, {"link": "", "title": "Random forest for bioinformatics"}, {"link": "", "title": "Real-time monitoring of neural state in assessing and improving software developers'productivity"}, {"link": "", "title": ""}, {"link": "", "title": "Psychophysiological analysis of mental load during driving on rural roads \u2014 a quasi-experimental field study"}, {"link": "", "title": "Open source software peer review practices: A case study of the apache server"}, {"link": "", "title": "Improving automated source code summarization via an eye-tracking study of programmers"}, {"link": "", "title": "Electrodermal activity (EDA) - state-of-the-art measurements and techniques for parapsychological purposes"}, {"link": "/document/5325784", "title": "Discriminating stress from cognitive load using a wearable eda device"}, {"link": "", "title": "Understanding understanding source code with functional magnetic resonance imaging"}, {"link": "", "title": "Heart rate as a convergent measure in clinical and developmental research"}, {"link": "", "title": "Cognitive load during problem solving: Effects on learning"}, {"link": "", "title": "Cognitive Load Theory"}, {"link": "/document/1173068", "title": "Java quality assurance by detecting code smells"}, {"link": "", "title": "Physiological workload reactions to increasing levels of task difficulty"}, {"link": "", "title": "Heart rate and respiratory responses as a function of task difficulty: The use of discriminant analysis in the selection of psychologically sensitive physiological responses"}, {"link": "", "title": "The effect of cognitive load and meaning on selective attention"}, {"link": "", "title": "Do too many cooks spoil the broth? using the number of developers to enhance defect prediction models"}, {"link": "", "title": "An analysis of mental workload in pilots during flight using multiple psychphysiological measures"}, {"link": "/document/4459644", "title": "Predicting defective software components from code complexity measures"}, {"link": "", "title": "Predicting defects for eclipse"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886925"}
{"ref": [{"link": "", "title": "FTC report on Credit Karma and Fandango"}, {"link": "", "title": "FTC report on Snapchat"}, {"link": "", "title": "Developer economics q1 2015: State of the developer nation"}, {"link": "", "title": "Permissions"}, {"link": "", "title": "Smartphone os market share, q1 2015"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Pscout: analyzing the android permission specification"}, {"link": "", "title": "Permitme: integrating android permissioning support in the ide"}, {"link": "", "title": "Towards an information type lexicon for privacy policies"}, {"link": "", "title": "Representation and reasoning for daml-based policy and domain services in kaos and nomads"}, {"link": "/document/6912258", "title": "Scaling requirements extraction to the crowd: Experiments on privacy policies"}, {"link": "", "title": "Eddy, a formal language for specifying and analyzing data flow specifications for conflicting privacy requirements"}, {"link": "/document/1331732", "title": "Soupa: Standard ontology for ubiquitous and pervasive applications"}, {"link": "", "title": "A coefficient of agreement for nominal scales"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Android permissions demystified"}, {"link": "", "title": "Scandroid: Automated security certification of android applications"}, {"link": "", "title": "Semantic web technologies to reconcile privacy and context awareness"}, {"link": "", "title": "State of the app economy 2014"}, {"link": "", "title": "Methodology for the design and evaluation of ontologies"}, {"link": "", "title": "Privacy on the Go: Recommendations for the Mobile Ecosystem"}, {"link": "/document/1333035", "title": "Authorization and privacy for semantic web services"}, {"link": "", "title": "Privacy as part of the app decision-making process"}, {"link": "", "title": "Chex: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Introduction to information retrieval"}, {"link": "", "title": "A proposal for the privacy leakage verification tool for android application developers"}, {"link": "", "title": "Privacy awareness and user empowerment in online social networking settings"}, {"link": "", "title": "Analyzing Privacy of Android Apps"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing android sources and sinks"}, {"link": "", "title": "Automated comparisons of ambiguity in privacy policies and the impact of regulation"}, {"link": "", "title": "Disagreeable privacy policies: Mismatches between meaning and userss understanding"}, {"link": "", "title": "Encouraging privacy by design concepts with privacy policy auto-generation in eclipse (page)"}, {"link": "", "title": "The Coding Manual for Qualitative Researchers"}, {"link": "", "title": "Copperdroid: Automatic reconstruction of android malware behaviors"}, {"link": "/document/4556593", "title": "New developments in ontology-based policy management: Increasing the practicality and comprehensiveness of kaos"}, {"link": "", "title": "Curbing android permission creep"}, {"link": "", "title": "Towards an information ontology for personal privacy"}, {"link": "", "title": "Google touts 1 billion active android users per month"}, {"link": "", "title": "Leakminer: Detect information leakage on android with static taint analysis"}, {"link": "", "title": "Case Study Research Design and Methods"}, {"link": "", "title": "Vetting undesirable behaviors in android apps with permission use analysis"}, {"link": "", "title": "Privacy sensitive resource access monitoring for android systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886889"}
{"ref": [{"link": "", "title": "Expectations, outcomes, and challenges of modern code review"}, {"link": "", "title": "Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation"}, {"link": "/document/799939", "title": "Building knowledge through families of experiments"}, {"link": "", "title": "Four eyes are better than two: On the impact of code reviews on software quality"}, {"link": "", "title": "The influence of non-technical factors on code review"}, {"link": "", "title": "Investigating technical and non-technical factors influencing modern code review"}, {"link": "", "title": "Analyze this! 145 questions for data scientists in software engineering"}, {"link": "", "title": "Interactional justice: Communication criteria of fairness"}, {"link": "", "title": "Interactional fairness judgments: The influence of causal accounts"}, {"link": "", "title": "Impact of developer reputation on code review outcomes in OSS projects: An empirical investigation"}, {"link": "", "title": "Characteristics of Useful Code Reviews: An Empirical Study at Microsoft"}, {"link": "", "title": "Linus Torvalds defends his right to shame Linux kernel developers. Ars Technica"}, {"link": "", "title": "Code of Conflict. Online"}, {"link": "", "title": "Weighted kappa: Nominal scale agreement provision for scaled disagreement or partial credit"}, {"link": "", "title": "Distributive justice: Theory and research"}, {"link": "", "title": "On the dimensionality of organizational justice: a construct validation of a measure"}, {"link": "", "title": "Explaining Injustice: The Interactive Effect of Explanation and Outcome on Fairness Perceptions and Task Motivation"}, {"link": "", "title": "Justice at the Millenium: A Meta-Analytic Review of 25 Years of Organizational Justice Research"}, {"link": "", "title": "Code Reviews Do Not Find Bugs: How the Current Code Review Best Practice Slows Us Down"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "", "title": "Psychological safety and learning behavior in work teams"}, {"link": "", "title": "Mood and Emotions while Working: Missing Pieces of Job Satisfaction?"}, {"link": "", "title": "Five misunderstandings about case-study research"}, {"link": "", "title": "Toward a General Theory of Fairness"}, {"link": "", "title": "Fairness Theory: Justice as Accou-tability"}, {"link": "", "title": "Effects of \u2018voice\u2019 and peer opinions on responses to inequity"}, {"link": "", "title": "Anger and its direction in collaborative software development"}, {"link": "", "title": "A taxonomy of organizational justice theories"}, {"link": "", "title": "Unraveling respect in organization studies"}, {"link": "/document/6624003", "title": "Who does what during a code review? Datasets of OSS peer review repositories"}, {"link": "", "title": "All are not equal: An examination of the economic returns to different forms of participation in open source software communities"}, {"link": "", "title": "Fairness and Transaction Costs: The Contribution of Organizational Justice Theory to an Integrative Model of Economic Organization"}, {"link": "", "title": "Characterization of the Xen project code review process: an experience report"}, {"link": "", "title": "Using Metrics to Track Code Review Performance"}, {"link": "", "title": "Node. js Forked Again Over Complaints of Unresponsive Leadership"}, {"link": "", "title": "Will My Patch Make It? And How Fast? Case Study on the Linux Kernel"}, {"link": "", "title": "OpenStack Revenues Approaching $3. 4B: 451 Research"}, {"link": "", "title": "Investigating code review quality: Do people and participation matter?"}, {"link": "", "title": "The Social Science Encyclopedia"}, {"link": "", "title": "Understanding the impressions, motivations, and barriers of one time code contributors to FLOSS projects: a survey"}, {"link": "", "title": "Studying software engineers: Data collection techniques for software field studies"}, {"link": "", "title": "The distribution of rewards and resources in groups and organizations"}, {"link": "", "title": "What should be done with equity theory?"}, {"link": "", "title": "The General Method of Theory-Building Research in Applied Disciplines"}, {"link": "", "title": "An Empirical Study of the Impact of Modern Code Review Practices on Software Quality"}, {"link": "", "title": "An empirical study of the impact of modern code review practices on software quality"}, {"link": "", "title": "Security and Emotion: Sentiment Analysis of Security Discussions on GitHub"}, {"link": "", "title": "Conducting on-line surveys in software engineering"}, {"link": "/document/6127835", "title": "Defining and evaluating a measure of Open Source project survivability"}, {"link": "", "title": "Convergent contemporary software peer review practices"}, {"link": "", "title": "Peer Review on Open-Source Software Projects: Parameters, Statistical Models, and Theory"}, {"link": "", "title": "Open source software peer review practices: a case study of the apache server"}, {"link": "", "title": "Guidelines for conducting and reporting case study research in software engineering"}, {"link": "", "title": "Case Study Research in Software Engineering: Guidelines and Examples"}, {"link": "", "title": "Differentiating Communication Styles of Leaders on the Linux Kernel Mailing List"}, {"link": "/document/799955", "title": "Qualitative methods in empirical studies of software engineering"}, {"link": "", "title": "Closing a door. Online"}, {"link": "", "title": "Software Engineering Data Collection for Field Studies"}, {"link": "", "title": "FLOSS as a Source for Profanity and Insults: Collecting the Data"}, {"link": "", "title": "A systematic literature review on the barriers faced by newcomers to open source software projects"}, {"link": "", "title": "How do software engineers understand code changes?: an exploratory study in industry"}, {"link": "", "title": "Companies Supporting The OpenStack Foundation. Online"}, {"link": "", "title": "The OpenStack Foundation. Online"}, {"link": "", "title": "OpenStack community contribution in all releases I Lines of code. Online"}, {"link": "", "title": "OpenStack comernunity contribution in all releases I Reviews. Online"}, {"link": "", "title": "Procedural justice: A psychological analysis"}, {"link": "", "title": "Revisiting code ownership and its relationship with software quality inthe scope of modern code review"}, {"link": "", "title": "Review participation in modern code review"}, {"link": "/document/7476642", "title": "The Impact of Human Discussions on Just-In-Time Quality Assurance"}, {"link": "/document/7884606", "title": "Code of Conduct in Open Source Projects"}, {"link": "", "title": "Let's talk about it: evaluating contributions through discussion in GitHub"}, {"link": "", "title": "Psychological models of the justice motive: Antecedents of distributive and procedural justice"}, {"link": "", "title": "Community, joining, and specialization in open source software innovation: a case study"}, {"link": "", "title": "Comparative case studies of open source software peer review practices"}, {"link": "", "title": "Affective Events Theory: A theoretical discussion of the structure, causes and consequences of affective experiences at work"}, {"link": "", "title": "Experimentation in software engineering"}, {"link": "", "title": "Who should review this change?: Putting text and file location analyses together for more accurate recommendations"}, {"link": "", "title": "Peer Review Social Network (PeRSoN) in Open Source Projects"}, {"link": "/document/7328331", "title": "Automatically recommending peer reviewers in modern code review"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453118"}
{"ref": [{"link": "", "title": "Principles of Model Checking"}, {"link": "", "title": "QoS-aware management of monotonic service orchestrations"}, {"link": "", "title": "Formal verification with confidence intervals: A new approach to establishing the Quality-of-Service properties of software systems"}, {"link": "/document/5611553", "title": "Dynamic qos management and optimization in service-based systems"}, {"link": "", "title": "Using quantitative analysis to implement autonomic it systems"}, {"link": "/document/6597882", "title": "Model repair for Markov Decision Processes"}, {"link": "", "title": "Architecture-based self-adaptation in the presence of multiple objectives"}, {"link": "", "title": "Symbolic and parametric model checking of discrete-time Markov chains"}, {"link": "/document/7194574", "title": "Lightweight adaptive filtering for efficient learning and updating of probabilistic models"}, {"link": "/document/7083754", "title": "Supporting self-adaptation via quantitative verification and sensitivity analysis at run time"}, {"link": "/document/6606549", "title": "Managing non-functional uncertainty via model-driven adaptivity"}, {"link": "", "title": "Bounded-parameter markov decision processes"}, {"link": "", "title": "Specification patterns for probabilistic quality properties"}, {"link": "", "title": "Probabilistic reachability for parametric Markov models"}, {"link": "", "title": "A logic for reasoning about time and reliability"}, {"link": "", "title": "Approximate probabilistic model checking"}, {"link": "", "title": "Introduction to Mathematical Statistics"}, {"link": "", "title": "A two-phase approximation for model checking probabilistic unbounded until properties of probabilistic systems"}, {"link": "", "title": "A survey on service quality description"}, {"link": "", "title": "PRISM 4.0: Verification of probabilistic real-time systems"}, {"link": "", "title": "Robust control of Markov Decision Processes with uncertain transition matrices"}, {"link": "", "title": "Polynomial-time verification of PCTL properties of MDPs with convex uncertainties"}, {"link": "", "title": "Using scenarios to predict the reliability of concurrent component-based software systems"}, {"link": "", "title": "Model-checking Markov chains in the presence of uncertainties"}, {"link": "", "title": "An iterative decision-making scheme for markov decision processes and its application to self-adaptive systems"}, {"link": "/document/7355393", "title": "Asymptotic perturbation bounds for probabilistic model checking with empirically determined probability parameters"}, {"link": "", "title": "Nested reachability approximation for discrete-time markov chains with univariate parameters"}, {"link": "", "title": "Perturbation analysis of stochastic systems with empirical distribution parameters"}, {"link": "", "title": "Formal modelling and verification of service-oriented systems in probabilistic event-b"}, {"link": "", "title": "Bounded parameter Markov Decision Processes with average reward criterion"}, {"link": "", "title": "Statistical probabilistic model checking with a focus on time-bounded properties"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886893"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453086"}
{"ref": [{"link": "", "title": "Mining API patterns as partial orders from source code: from usage scenarios to specifications"}, {"link": "/document/6606571", "title": "Unifying FSM-inference algorithms through declarative specification"}, {"link": "", "title": "Leveraging existing instrumentation to automatically infer invariant-constrained models"}, {"link": "/document/5009015", "title": "On the synthesis of finite-state machines from samples of their behavior"}, {"link": "", "title": "Interval Estimation for a Binomial Proportion (with discussion)"}, {"link": "", "title": "Behavioral log analysis with statistical guarantees"}, {"link": "", "title": "The Confidence in Our k-Tails"}, {"link": "/document/7371999", "title": "Have we seen enough traces?"}, {"link": "", "title": "Discovering models of software processes from event-based data"}, {"link": "/document/6044587", "title": "Automatically generating test cases for specification mining"}, {"link": "", "title": "Detecting implied scenarios from execution traces"}, {"link": "", "title": "Probability and Statistics"}, {"link": "", "title": "From run-time behavior to usage scenarios: an interaction-pattern mining approach"}, {"link": "/document/908957", "title": "Dynamically discovering likely program invariants to support program evolution"}, {"link": "/document/6693102", "title": "Mining branching-time scenarios"}, {"link": "", "title": "Online inference and enforcement of temporal properties"}, {"link": "", "title": "Mining behavior models from user-intensive web applications"}, {"link": "", "title": "Mining message sequence graphs"}, {"link": "", "title": "Mining parametric specifications"}, {"link": "/document/4023976", "title": "QUARK: Empirical assessment of automaton-based specification miners"}, {"link": "", "title": "Mining scenario-based triggers and effects"}, {"link": "", "title": "Scenario-based and value-based specification mining: better together"}, {"link": "", "title": "Mining modal scenario-based specifications from execution traces of reactive systems"}, {"link": "", "title": "Learning extended FSA from software: An empirical assessment"}, {"link": "", "title": "Automatic generation of software behavioral models"}, {"link": "", "title": "Inferring Software Behavioral Models with MapReduce"}, {"link": "/document/4222571", "title": "Compatibility and regression testing of COTS-component-based software"}, {"link": "", "title": "Behavior capture and test: Automated analysis of component integration"}, {"link": "/document/5609576", "title": "A framework for the evaluation of specification miners based on finite state machines"}, {"link": "", "title": "Automatic generation of object usage specifications from large method traces"}, {"link": "", "title": "Dynamic protocol recovery"}, {"link": "/document/919096", "title": "Encoding program executions"}, {"link": "", "title": "Simulation"}, {"link": "", "title": "Inferring finite-state models with temporal constraints"}, {"link": "", "title": "Scalable Parallelization of Specification Mining"}, {"link": "", "title": "Perracotta: mining temporal API rules from imperfect traces"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886964"}
{"ref": [{"link": "/document/1041053", "title": "Recovering Traceability Links between Code and Documentation"}, {"link": "", "title": "Who should fix this bug?"}, {"link": "", "title": "Software traceability with topic modeling"}, {"link": "", "title": "Software Process Data Quality and Characteristics: A Historical View on Open and Closed Source Projects"}, {"link": "", "title": "Random forests"}, {"link": "", "title": "Impact analysis by mining software and change request repositories"}, {"link": "", "title": "Using an n-gram-based document representation with a vector processing retrieval model"}, {"link": "", "title": "Software traceability: trends and future directions"}, {"link": "", "title": "Trace Queries for Safety Requirements in High Assurance Systems"}, {"link": "/document/6345809", "title": "Breaking the big-bang practice of traceability: Pushing timely trace recommendations to project stakeholders"}, {"link": "", "title": "Evaluating defect prediction approaches: a benchmark and an extensive comparison"}, {"link": "/document/1357816", "title": "Enhancing an Artefact Management System with Traceability Recovery Features"}, {"link": "/document/4384177", "title": "Technique Integration for Requirements Assessment"}, {"link": "", "title": "CERBERUS: Tracing Requirements to Source Code Using Information Retrieval, Dynamic Analysis, and Program Analysis"}, {"link": "/document/1183929", "title": "Locating features in source code"}, {"link": "", "title": "Estimating the number of remaining links in traceability recovery"}, {"link": "", "title": "Measuring nominal scale agreement among many raters"}, {"link": "", "title": "How Should I Apply Patches From A Contributor"}, {"link": "", "title": "On Integrating Orthogonal Information Retrieval Methods to Improve Traceability Link Recovery"}, {"link": "", "title": "Git SCM"}, {"link": "", "title": "Traceability Fundamentals"}, {"link": "", "title": "An analysis of the requirements traceability problem"}, {"link": "", "title": "Semantically enhanced software traceability using deep learning techniques"}, {"link": "", "title": "Foundations for an expert system in domain-specific traceability"}, {"link": "", "title": "Cold-start software analytics"}, {"link": "", "title": "Robust Prediction of Fault-Proneness by Random Forests"}, {"link": "", "title": "The WEKA Data Mining Software: An Update"}, {"link": "", "title": "Correlation-based Feature Subset Selection for Machine Learning"}, {"link": "/document/1583599", "title": "Advancing Candidate Link Generation for Requirements Tracing: The Study of Methods"}, {"link": "", "title": "Jira Issue Tracking Software"}, {"link": "/document/6517844", "title": "Where should we fix this bug? a two-phase recommendation model"}, {"link": "", "title": "Dealing with Noise in Defect Prediction"}, {"link": "", "title": "Can method data dependencies support the assessment of traceability between requirements and source code?"}, {"link": "", "title": "Do data dependencies in source code complement call dependencies for understanding requirements traceability?"}, {"link": "/document/7884610", "title": "Analyzing closeness of code dependencies for improving IR-based Traceability Recovery"}, {"link": "", "title": "Improving trace accuracy through data-driven configuration and composition of tracing features"}, {"link": "", "title": "Improving trace accuracy through data-driven configuration and composition of tracing features"}, {"link": "", "title": "Information Retrieval Methods for Automated Traceability Recovery"}, {"link": "", "title": "A visual language for modeling and executing traceability queries"}, {"link": "", "title": "From Raw Project Data to Business Intelligence"}, {"link": "", "title": "Do developers benefit from requirements traceability when evolving and maintaining a software system?"}, {"link": "/document/6504885", "title": "Strategic Traceability for Safety-Critical Projects"}, {"link": "", "title": "Empirical studies in software and systems traceability"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "Recommending source code for use in rapid software prototypes"}, {"link": "/document/6498468", "title": "When and How Using Structural Information to Improve IR-Based Traceability Recovery"}, {"link": "/document/6224298", "title": "An empirical study of supplementary bug fixes"}, {"link": "/document/895989", "title": "Toward Reference Models of Requirements Traceability"}, {"link": "/document/6100060", "title": "Flexible design pattern detection based on feature types"}, {"link": "", "title": "Replication Data for: Traceability in the Wild: Automatically Augmenting Incomplete Trace Links"}, {"link": "", "title": "A Traceability Process Assessment Model for the Medical Device Domain"}, {"link": "", "title": "A quality model for the systematic assessment of requirements traceability"}, {"link": "/document/7723818", "title": "Preventing Defects: The Impact of Requirements Traceability Completeness on Software Quality"}, {"link": "/document/6620163", "title": "Towards feature-aware retrieval of refinement traces"}, {"link": "", "title": "Mind the gap: assessing the conformance of software traceability to relevant guidelines"}, {"link": "", "title": "Filling the Gaps of Development Logs and Bug Issue Data"}, {"link": "/document/7181428", "title": "Discovering loners and phantoms in commit and issue data"}, {"link": "", "title": "Using Tags to Support Feature Management Across Issue Tracking Systems and Version Control Systems-A Research Preview"}, {"link": "/document/7181530", "title": "Guidelines for Benchmarking Automated Software Traceability Techniques"}, {"link": "", "title": "Rule-based generation of requirements traceability relations"}, {"link": "", "title": "Achieving traceability in large scale continuous integration and delivery deployment, usage and validation of the eiffel framework"}, {"link": "", "title": "Application of swarm techniques to requirements tracing"}, {"link": "", "title": "Data Mining: Practical machine learning tools and techniques"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453157"}
{"ref": [{"link": "", "title": "Compilers: Principles, Techniques, and Tools"}, {"link": "", "title": "Adding trace matching with free variables to AspectJ"}, {"link": "", "title": "Statically-directed dynamic automated test generation"}, {"link": "", "title": "The SLAM project: debugging system software via static analysis"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "", "title": "The DaCapo benchmarks: Java benchmarking development and analysis"}, {"link": "", "title": "Efficient hybrid typestate analysis by determining continuation-equivalent states"}, {"link": "", "title": "RWset: Attacking path explosion in constraint-based test generation"}, {"link": "", "title": "Heuristics for scalable dynamic test generation"}, {"link": "", "title": "\n            KLEE: Unassisted and automatic generation of high-coverage test\n            "}, {"link": "", "title": "Snugglebug: a powerful approach to weakest preconditions"}, {"link": "", "title": "MOP: an efficient and generic runtime verification framework"}, {"link": "", "title": "Guiding dynamic symbolic execution toward unverified program executions"}, {"link": "", "title": "Model checking"}, {"link": "", "title": "JavaSlicer"}, {"link": "", "title": "Verifying systems rules using rule-directed symbolic execution"}, {"link": "", "title": "ESP: path-sensitive program verification in polynomial time"}, {"link": "", "title": "Patterns in property specifications for finite-state verification"}, {"link": "", "title": "Bugs as deviant behavior: A general approach to inferring errors in systems code"}, {"link": "", "title": "Checking system rules using system-specific, programmer-written compiler extensions"}, {"link": "", "title": "Effective typestate verification in the presence of aliasing"}, {"link": "", "title": "Introduction to the theory of finite-state machines"}, {"link": "", "title": "DART: directed automated random testing"}, {"link": "", "title": "T. J. Watson Libraries for Analysis (WALA)"}, {"link": "", "title": "Boosting concolic testing via interpolation"}, {"link": "", "title": "jFuzz: A concolic whitebox fuzzer for Java"}, {"link": "", "title": "Path slicing"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "Data Flow Analysis-Theory and Practice"}, {"link": "", "title": "Symbolic execution and program testing"}, {"link": "", "title": "A brief account of runtime verification"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "Characterizing and detecting performance bugs for smartphone applications"}, {"link": "", "title": "Directed symbolic execution"}, {"link": "/document/6227146", "title": "make test-zesti: A symbolic execution solution for improving regression testing"}, {"link": "", "title": "The art of software testing"}, {"link": "", "title": "Principles of Program Analysis"}, {"link": "", "title": "The YOGI project: Software property checking via static analysis and testing"}, {"link": "", "title": "Directed incremental symbolic execution"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "CUTE: a concolic unit testing engine for C"}, {"link": "", "title": "How we get there: a context-guided search strategy in concolic testing"}, {"link": "", "title": "Typestate: A programming language concept for enhancing software reliability"}, {"link": "", "title": "Pex-white box test generation for. NET"}, {"link": "", "title": "A survey of program slicing techniques"}, {"link": "", "title": "Fitness-guided path exploration in dynamic symbolic execution"}, {"link": "", "title": "RGSE: a regular property guided symbolic executor for java"}, {"link": "", "title": "Execution synthesis: a technique for automated software debugging"}, {"link": "", "title": "Regular property guided dynamic symbolic execution"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453161"}
{"ref": [{"link": "", "title": "Automated Software Architecture Security Risk Analysis using Formalized Signatures"}, {"link": "", "title": "A Theory of Shared Understanding for Software Organizations"}, {"link": "/document/4384165", "title": "Requirements in the wild: How small companies do it"}, {"link": "", "title": "The 2012 ACM computing classification system"}, {"link": "", "title": "Software Architecture Knowledge Management"}, {"link": "", "title": "Sketches and diagrams in practice"}, {"link": "", "title": "Evolution styles: foundations and models for software architecture evolution"}, {"link": "", "title": "The security architecture of the chromium browser"}, {"link": "", "title": "Functional architecture modeling for the software product industry"}, {"link": "", "title": "The Architecture of Open-Source Applications"}, {"link": "", "title": "Pattern-Oriented Software Architecture: On Patterns and Pattern Languages"}, {"link": "/document/5332232", "title": "Learning a metric for code readability"}, {"link": "", "title": "Software architecture definition for on-demand cloud provisioning"}, {"link": "", "title": "Documenting Software Architectures: Views and Beyond"}, {"link": "", "title": "How do committees invent?"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Qualitative Inquiry and Research Design"}, {"link": "", "title": "Creating and Evolving Developer Documentation: Understanding the Decisions of Open Source Contributors"}, {"link": "", "title": "Ontology-based software architecture documentation"}, {"link": "", "title": "Why significant UML change is unlikely"}, {"link": "", "title": "Just Enough Software Architecture: A Risk-Driven Approach"}, {"link": "", "title": "Firefox Team. Firefox OS architecture"}, {"link": "", "title": "The Anatomy of the Grid: Enabling Scalable Virtual Organizations"}, {"link": "", "title": "UML Distilled: A Brief Guide to the Standard Object Modeling Language"}, {"link": "", "title": "Essential Software Architecture"}, {"link": "", "title": "Applied Software Architecture"}, {"link": "", "title": "Empirical assessment of MDE in industry"}, {"link": "", "title": "Model-driven engineering practices in industry"}, {"link": "", "title": "ISO/IEC/IEEE. Iso/iec/ieee 42010:2011, systems and software engineering\u2014architecture description"}, {"link": "", "title": "Enriching software architecture documentation"}, {"link": "/document/469759", "title": "The 4+1 view model of architecture"}, {"link": "/document/1605177", "title": "UML Software Architecture and Design Description"}, {"link": "", "title": "IEEE Transactions on Software Engineering \u2014 Special Issue on Software Architecture"}, {"link": "", "title": "Moving Architectural Description from Under the Technology Lamppost"}, {"link": "", "title": "Modeling software architectures in the Unified Modeling Language"}, {"link": "/document/5677507", "title": "Engineering heterogeneous robotics systems: A software architecture-based approach"}, {"link": "/document/825767", "title": "A classification and comparison framework for software architecture description languages"}, {"link": "/document/6165242", "title": "Iaas cloud architecture: From virtualized datacenters to federated cloud infrastructures"}, {"link": "", "title": "Foundations for the Study of Software Architecture"}, {"link": "", "title": "UML in practice"}, {"link": "", "title": "Software Systems Architecture: Working with Stakeholders Using Viewpoints and Perspectives"}, {"link": "", "title": "Case Study Research in Software Engineering: Guidelines and Examples"}, {"link": "/document/799955", "title": "Qualitative methods in empirical studies of software engineering"}, {"link": "", "title": "Software Architecture: Perspectives on An Emerging Discipline"}, {"link": "", "title": "Beautiful Architecture: Leading Thinkers Reveal the Hidden Beauty in Software Design"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "A study of architectural information foraging in software architecture documents"}, {"link": "", "title": "When software architecture leads to social debt"}, {"link": "/document/1620094", "title": "A survey of the use and documentation of architecture design rationale"}, {"link": "", "title": "Software architecture documentation: The road ahead"}, {"link": "", "title": "Software Architecture: Foundations, Theory, and Practice"}, {"link": "/document/1293067", "title": "MDA: Revenge of the modelers or UML utopia?"}, {"link": "", "title": "DESOSA 2015: Delft students on software architecture"}, {"link": "", "title": "A documentation framework for architecture decisions"}, {"link": "/document/825699", "title": "The Koala component model for consumer electronics software"}, {"link": "", "title": "The Architecture of Open-Source Applications"}, {"link": "", "title": "How much up-front? A grounded theory of agile architecture"}, {"link": "", "title": "Case Study Research"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886927"}
{"ref": [{"link": "", "title": "GNU FTP Server"}, {"link": "", "title": "bzip2: A freely available, patent free, high-quality data compressor"}, {"link": "", "title": "cloc: Count Lines of Code"}, {"link": "", "title": "gcc: The GNU Compiler Collection"}, {"link": "", "title": "gcov - A Test coverage program"}, {"link": "", "title": "R: The R project for statistical computing"}, {"link": "", "title": "time: Run programs and summarize system resource usage"}, {"link": "", "title": "State aware test case regeneration for improving web application test suite coverage and fault detection"}, {"link": "", "title": "Coverage and fault detection of the output-uniqueness test selection criteria"}, {"link": "", "title": "Establishing theoretical minimal sets of mutants"}, {"link": "/document/1703390", "title": "Using mutation analysis for assessing and comparing testing coverage criteria"}, {"link": "", "title": "A practical guide for using statistical tests to assess randomized algorithms in software engineering"}, {"link": "", "title": "On the limit of control flow analysis for regression test selection"}, {"link": "", "title": "Prioritized interaction testing for pair-wise coverage with seeding and constraints"}, {"link": "", "title": "Test suite prioritization by interaction coverage"}, {"link": "", "title": "On the correlation between the effectiveness of metamorphic relations and dissimilarities of test case executions"}, {"link": "", "title": "On the use of a similarity function for test case selection in the context of model-based testing"}, {"link": "", "title": "Adaptive random testing: The ART of test case diversity"}, {"link": "/document/6967789", "title": "Normalized compression distance of multisets with applications"}, {"link": "/document/4564473", "title": "Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy approach"}, {"link": "", "title": "A learning-based method for combining testing techniaues"}, {"link": "", "title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact"}, {"link": "", "title": "An empirical study of regression testing techniques incorporating context and lifetime factors and improved cost-benefit models"}, {"link": "", "title": "Understanding the effects of changes on the cost-effectiveness of regression testing techniques"}, {"link": "", "title": "Techniques for improving regression testing in continuous integration development environments"}, {"link": "", "title": "Prioritizing test cases for regression testing"}, {"link": "/document/919106", "title": "Incorporating varying test costs and fault severities into test case prioritization"}, {"link": "/document/988497", "title": "Test case prioritization: A family of empirical studies"}, {"link": "", "title": "Selecting a cost-effective test case prioritization technique"}, {"link": "", "title": "A systematic review on regression test selection techniques"}, {"link": "", "title": "Empirical evaluations of regression test selection techniques: a systematic review"}, {"link": "", "title": "Test set diameter: Quantifying the diversity of sets of test cases"}, {"link": "", "title": "An empirical evaluation and comparison of manual and automated test selection"}, {"link": "", "title": "Search based software engineering: Techniques, taxonomy, tutorial"}, {"link": "", "title": "Achieving scalable model-based testing through test case diversity"}, {"link": "/document/6823132", "title": "Bypassing the combinatorial explosion: Using similarity to generate and prioritize t-wise test configurations for software product lines"}, {"link": "", "title": "Assessing software product line testing via model-based mutation: An application to similarity testing"}, {"link": "", "title": "Etude comparative de la distribution florale dans une portion des alpes et des jura"}, {"link": "", "title": "Higher order mutation testing"}, {"link": "/document/5487526", "title": "An analysis and survey of the development of mutation testing"}, {"link": "", "title": "Adaptive random test case prioritization"}, {"link": "/document/6227168", "title": "Bugredux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "Are mutants a valid substitute for real faults in software testing?"}, {"link": "", "title": "A history-based test prioritization technique for regression testing in resource constrained environments"}, {"link": "", "title": "Evaluating mutation testing alternatives: A collateral experiment"}, {"link": "", "title": "Prioritizing test cases with string distances"}, {"link": "/document/4123325", "title": "Search algorithms for regression test case prioritization"}, {"link": "/document/1245299", "title": "Using spanning sets for coverage testing"}, {"link": "/document/6363461", "title": "A static approach to prioritizing junit test cases"}, {"link": "", "title": "Combining model-based and combinatorial testing for effective test case generation"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Scaling regression testing to large software systems"}, {"link": "", "title": "Sampling program inputs with mutation analysis: Going beyond combinatorial interaction testing"}, {"link": "", "title": "Trivial compiler equivalence: A large scale empirical study of a simple fast and effective equivalent mutant detection technique"}, {"link": "", "title": "Efficiency and early fault detection with lower and higher strength combinatorial interaction testing"}, {"link": "", "title": "Test case selection for black-box regression testing of database applications"}, {"link": "", "title": "Test case prioritization: An empirical study"}, {"link": "/document/962562", "title": "Prioritizing test cases for regression testing"}, {"link": "", "title": "An information retrieval approach for regression test prioritization based on program changes"}, {"link": "", "title": "Test-suite augmentation for evolving software"}, {"link": "", "title": "Black-box test reduction using input-output analysis"}, {"link": "", "title": "A Critique and Improvement of the CL Common Language Effect Size Statistics of McGraw and Wong"}, {"link": "", "title": "Normalized information distance"}, {"link": "", "title": "Experimentation in Software Enaineerina: An Introduction"}, {"link": "", "title": "Regression testing minimization, selection and prioritization: A survey"}, {"link": "", "title": "Test data regeneration: Generating new test data from existing test data"}, {"link": "", "title": "Using test case reduction and prioritization to improve symbolic execution"}, {"link": "/document/6606565", "title": "Bridging the gap between the total and additional test-case prioritization strategies"}, {"link": "", "title": "On the fault-detection capabilities of adaptive random test case prioritization: Case studies with large test suites"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886931"}
{"ref": [{"link": "/document/89327", "title": "A basic unit of computation in distributed systems"}, {"link": "", "title": "AlDanial, cloc: Count Lines of Code"}, {"link": "", "title": "Specification and Verification of Dynamic Properties in Distributed Computations"}, {"link": "", "title": "Principles of Transaction Processing: For the Systems Professional"}, {"link": "", "title": "Inferring Models of Concurrent Systems from Logs of Their Behavior with CSight"}, {"link": "", "title": "Mining Temporal Invariants from Partially Ordered Logs"}, {"link": "", "title": "Debugging distributed systems: Challenges and options for validation and debugging"}, {"link": "", "title": "DistIA: A Cost-effective Dynamic Impact Analysis for Distributed Programs"}, {"link": "", "title": "Distributed snapshots: determining global states of distributed systems"}, {"link": "", "title": "Discovering Models of Software Processes from Event-based Data"}, {"link": "", "title": "Benchmarking Cloud Serving Systems with YCSB"}, {"link": "", "title": "Consistent Detection of Global Predicates"}, {"link": "", "title": "A Distributed init System"}, {"link": "", "title": "Distributed reliable key-value store for the most critical data of a distributed system"}, {"link": "", "title": "Reboot manager for the CoreOS update engine"}, {"link": "", "title": "Swim: Scalable weakly-consistent infection-style process group membership protocol"}, {"link": "", "title": "Dinv homepage"}, {"link": "", "title": "Fay: Extensible Distributed Tracing from Kernels to Clusters"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Groupcache"}, {"link": "", "title": "Maximal Antichain Lattice Algorithms for Distributed Computations"}, {"link": "", "title": "Friday: Global Comprehension for Distributed Replay"}, {"link": "", "title": "Automatic invariant detection in dynamic web applications"}, {"link": "", "title": "The Accuracy of the Clock Synchronization Achieved by TEMPO in Berkeley UNIX 4. 3BSD"}, {"link": "", "title": "Service orchestration and management tool"}, {"link": "", "title": "IronFleet: Proving Practical Distributed Systems Correct"}, {"link": "", "title": "A (nother) Bittorrent client written in the go programming language"}, {"link": "", "title": "Go Doctor-The Golang Refactoring Engine"}, {"link": "", "title": "Kademlia/Mainline DHT node in Go"}, {"link": "", "title": "VeriFlow: Verifying Network-Wide Invariants in Real Time"}, {"link": "", "title": "Life, death, and the critical transition: finding liveness bugs in systems code"}, {"link": "", "title": "Production-Grade Container Scheduling and Management"}, {"link": "", "title": "Inferring Class Level Specifications for Distributed Systems"}, {"link": "", "title": "Dynamic Generation of Likely Invariants for Multithreaded Programs"}, {"link": "", "title": "D3S: Debugging Deployed Distributed Systems"}, {"link": "", "title": "WiDS Checker: Combating Bugs in Distributed Systems"}, {"link": "", "title": "Mining dependency in distributed systems through unstructured logs analysis"}, {"link": "", "title": "Pivot tracing: Dynamic causal monitoring for distributed systems"}, {"link": "", "title": "Virtual Time and Global States of Distributed Systems"}, {"link": "", "title": "Kademlia: A Peer-to-Peer Information System Based on the XOR Metric"}, {"link": "", "title": "Using simulated execution in verifying distributed algorithms"}, {"link": "", "title": "In Search of an Understandable Consensus Algorithm"}, {"link": "", "title": "The Program Dependence Graph in a Software Development Environment"}, {"link": "", "title": "The Role of Distributed State"}, {"link": "", "title": "Pip: Detecting the Unexpected in Distributed Systems"}, {"link": "", "title": "PDA: Passive distributed assertions for sensor networks"}, {"link": "", "title": "RunLim. RunLim"}, {"link": "", "title": "Diagnosing Performance Changes by Comparing Request Flows"}, {"link": "", "title": "Implementing fault-tolerant services using the state machine approach: a tutorial"}, {"link": "", "title": "Programming and Proving with Distributed Protocols"}, {"link": "", "title": "Dapper, a large-scale distributed systems tracing infrastructure"}, {"link": "/document/1238031", "title": "The Java System Dependence Graph"}, {"link": "", "title": "Discovering specification violations in networked software systems"}, {"link": "", "title": "Verdi: A Framework for Implementing and Formally Verifying Distributed Systems"}, {"link": "", "title": "Detecting Large-Scale System Problems by Mining Console Logs"}, {"link": "", "title": "Finding Almost-Invariants in Distributed Systems"}, {"link": "", "title": "MODIST: Transparent Model Checking of Unmodified Distributed Systems"}, {"link": "", "title": "Using Lightweight Modeling to Understand Chord"}, {"link": "", "title": "Lprof: A Non-intrusive Request Flow Profiler for Distributed Systems"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453196"}
{"ref": [{"link": "/document/6547619", "title": "Software Analytics So What?"}, {"link": "", "title": "Engineering big data solutions"}, {"link": "", "title": "Building Data Science Teams, O'Reilly"}, {"link": "", "title": "Analytics at Work: Smarter Decisions, Better Results"}, {"link": "", "title": "Improvements in Windows Explorer"}, {"link": "", "title": "The Practice and Future of Release Engineering: A Roundtable with Three Release Engineers"}, {"link": "", "title": "Interactions with big data analytics"}, {"link": "/document/6327298", "title": "Enterprise Data Analysis and Visualization: An Interview Study"}, {"link": "", "title": "Data Scientist: The Sexiest Job of the 21st Century"}, {"link": "", "title": "Doing Data Science: Straight Talk from the Frontline, O'Reilly Media"}, {"link": "", "title": "Data Smart: Using Data Science to Transform Information into Insight"}, {"link": "", "title": "The New Know: Innovation Powered by Analytics"}, {"link": "", "title": "Analyzing the Analyzers: An Introspective Survey of Data Scientists and Their Work, O'Reilly"}, {"link": "", "title": "Accenture Most U.S. Companies Say Business Analytics Still Future Goal, Not Present Reality"}, {"link": "", "title": "Software intelligence: the future of mining software engineering data"}, {"link": "", "title": "Software Analytics as a Learning Case in Practice: Approaches and Experiences"}, {"link": "", "title": "Analytics for software development"}, {"link": "", "title": "Software Analyticsfor Incident Management of Online Services: An Experience Report"}, {"link": "", "title": "The Inductive Software Engineering Manifesto: Principles for Industrial Data Mining"}, {"link": "/document/6606753", "title": "Software analytics: achievements and challenges"}, {"link": "", "title": "Software Analytics in Practice"}, {"link": "/document/6559957", "title": "Software Analytics in Practice"}, {"link": "/document/6227122", "title": "Information needs for software development analytics"}, {"link": "", "title": "Analyze This! 145 Questions for Data Scientists in Software Engineering"}, {"link": "", "title": "Scaling Big Data Mining Infrastructure: The Twitter Experience"}, {"link": "", "title": "Data Warehousing and Analytics Infrastructure at Facebook"}, {"link": "", "title": "The Big Data Ecosystem at LinkedIn"}, {"link": "", "title": "Software modeling and measurement: the Goal/Question/Metric paradigm"}, {"link": "/document/5445168", "title": "Linking software development and business strategy through measurement"}, {"link": "", "title": "The balanced scorecard-measures that drive performance"}, {"link": "", "title": "Practical Software Measurement: Objective Information for Decision Makers"}, {"link": "", "title": "The experience factory and its relationship to other"}, {"link": "", "title": "Qualitative Methods"}, {"link": "", "title": "Snowball sampling"}, {"link": "", "title": "Improving Performance Through Statistical Thinking"}, {"link": "", "title": "Card Sorting: Designing Usable Categories, Rosenfeld Media"}, {"link": "", "title": "Appendix to The Emerging Role of Data Scientists on Software Development Teams"}, {"link": "", "title": "Case Study Research: Design and Methods"}, {"link": "", "title": "The SAGE Handbook of Qualitative Research"}, {"link": "", "title": "Debugging in the (Very) Large: Ten Years of Implementation and Experience"}, {"link": "", "title": "Data Science in the Cloud: Analysis of Data from Testing in Production"}, {"link": "", "title": "For Big Data Scientists, \u201cJanitor Work\u201d is Key Hurdle to Insights"}, {"link": "", "title": "Characterizing the differences between pre- and post- release versions of software"}, {"link": "/document/6509371", "title": "Leveraging the Crowd: How 48,000 Users Helped Improve Lync Performance"}, {"link": "", "title": "Controlled experiments on the web: survey and practical guide"}, {"link": "", "title": "Big data: The next frontier for innovation, competition, and productivity"}, {"link": "", "title": "Future of developer testing: building quality in code"}, {"link": "", "title": "Undergraduate conceptions of the field of computer science"}, {"link": "", "title": "Analyzing the strength of undergraduate misconceptions about software engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886895"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453124"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453088"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453092"}
{"ref": [{"link": "", "title": "Debugging with dynamic slicing and backtracking"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Determinacy in static analysis for jQuery"}, {"link": "", "title": "WaRR: A tool for high-fidelity web application record and replay"}, {"link": "", "title": ""}, {"link": "/document/6606582", "title": "Chronicler: lightweight recording to reproduce field failures"}, {"link": "", "title": "Interactive record/replay for web application debugging"}, {"link": "", "title": "SymCrash: selective recording for reproducing crashes"}, {"link": "", "title": "Holmes: effective statistical debugging via efficient path profiling"}, {"link": "/document/4222588", "title": "A technique for enabling and supporting debugging of field failures"}, {"link": "", "title": "DLint: dynamically checking bad coding practices in JavaScript"}, {"link": "/document/6227168", "title": "BugRedux: Reproducing field failures for in-house debugging"}, {"link": "", "title": "F3: fault localization for field failures"}, {"link": "", "title": "Empirical evaluation of the Tarantula automatic fault-localization technique"}, {"link": "", "title": "RaceMob: crowdsourced data race detection"}, {"link": "", "title": "CrowdFlow: Efficient information flow security"}, {"link": "", "title": "Dynamic program slicing"}, {"link": "", "title": "Bug isolation via remote program sampling"}, {"link": "", "title": "Scalable statistical bug isolation"}, {"link": "", "title": "Feedback-directed instrumentation for deployed JavaScript applications"}, {"link": "", "title": "Mugshot: Deterministic capture and replay for J avaScript applications"}, {"link": "", "title": ""}, {"link": "", "title": "BugNet: Continuously recording program execution for deterministic replay debugging"}, {"link": "", "title": "Ccured: type-safe retrofitting of legacy software"}, {"link": "", "title": "Automatic fault localization for client-side JavaScript"}, {"link": "", "title": "An empirical study of client-side JavaScript bugs"}, {"link": "", "title": "DoDOM: Leveraging DOM invariants for web 2.0 application robustness testing"}, {"link": "", "title": "Jalangi: a selective record-replay and dynamic analysis framework for JavaScript"}, {"link": "", "title": "Algorithmic Program Debugging"}, {"link": "", "title": "Ripley: automatically securing web 2.0 applications through repli-cated execution"}, {"link": "", "title": "Using static analysis to reduce dynamic analysis overhead"}, {"link": "", "title": "Precise dynamic slicing algorithms"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886966"}
{"ref": [{"link": "", "title": "Towards a formal foundation of web security"}, {"link": "", "title": "Ernst. Finding bugs in dynamic web applications"}, {"link": "", "title": "Inductive verification of data model invariants for web applications"}, {"link": "", "title": "Mda and analysis of web applications"}, {"link": "", "title": "Prototyping symbolic execution engines for interpreted languages"}, {"link": "", "title": "Guardrails: a data-centric web application security framework"}, {"link": "", "title": "Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "A nice way to test openflow applications"}, {"link": "", "title": "Symbolic security analysis of ruby-on-rails web applications"}, {"link": "", "title": "Static checking of dynamically-varying security policies in database-backed applications"}, {"link": "/document/1702368", "title": "A system to generate test data and symbolically execute programs"}, {"link": "", "title": "The scalable commutativity rule: Designing scalable software for multicore processors"}, {"link": "", "title": "Fast and precise in-browser javascript malware detection"}, {"link": "", "title": "preventing authentication & access control vulnerabilities in web applications"}, {"link": "", "title": "Proposed nist standard for role-based access control"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Software Abstractions: logic, language, and analysis"}, {"link": "", "title": "Generalized symbolic execution for model checking and testing"}, {"link": "", "title": "Automatic creation of sql injection and cross-site scripting attacks"}, {"link": "", "title": "Symbolic execution and program testing. Communications of the ACM"}, {"link": "", "title": "Constraints as control"}, {"link": "", "title": "Verifying interactive web programs. In Automated Software Engineering"}, {"link": "", "title": "Jif: Java information flow. Software release"}, {"link": "", "title": "bounded verification of web applications"}, {"link": "", "title": "interactive security analysis for web applications"}, {"link": "", "title": "Symbolic execution for (almost) free: Hijacking an existing implementation to perform symbolic execution"}, {"link": "", "title": "Bounded verification of ruby on rails data models"}, {"link": "", "title": "Verification of java programs using symbolic execution and invariant generation"}, {"link": "", "title": "Analysis and testing of web applications"}, {"link": "", "title": "Role-based access control models"}, {"link": "", "title": "Finding errors in python programs using dynamic symbolic execution"}, {"link": "", "title": "A symbolic execution framework for javascript"}, {"link": "", "title": "a concolic unit testing engine for c"}, {"link": "", "title": "Dynamic model extraction and statistical analysis of web applications"}, {"link": "", "title": "A lightweight symbolic virtual machine for solver-aided host languages"}, {"link": "", "title": "A language for automatically enforcing privacy policies"}, {"link": "", "title": "Improving application security with data flow assertions"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886970"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Understand"}, {"link": "", "title": "The plastic surgery hypothesis"}, {"link": "", "title": "Where is the Bug and How is it Fixed? An Experiment with Practitioners"}, {"link": "", "title": "Reversible debugging software"}, {"link": "", "title": "Qlose: Program repair with quantitative objectives"}, {"link": "", "title": "Using mutation to automatically suggest fixes for faulty programs"}, {"link": "", "title": "Automatic repair of buggy if conditions and missing preconditions with smt"}, {"link": "", "title": "IntroClassJava: A Benchmark of 297 Small and Buggy Java Programs"}, {"link": "", "title": "A genetic programming approach to automated software repair"}, {"link": "", "title": "A study of the uniqueness of source code"}, {"link": "", "title": "Automated atomicity-violation fixing"}, {"link": "", "title": "Defects4J: A database of existing faults to enable controlled testing studies for Java programs"}, {"link": "", "title": "Repairing programs with semantic code search (T)"}, {"link": "", "title": "Automatic patch generation learned from human-written patches"}, {"link": "", "title": "Towards efficient and effective automatic program repair"}, {"link": "", "title": "JFIX: semantics-based repair of Java programs via symbolic PathFinder"}, {"link": "", "title": "History Driven Program Repair"}, {"link": "", "title": "A systematic study of automated program repair: Fixing 55 out of 105 bugs for 8 each"}, {"link": "", "title": "Current challenges in automatic software repair"}, {"link": "/document/7153570", "title": "The ManyBugs and IntroClass benchmarks for automated repair of C programs"}, {"link": "", "title": "Staged program repair with condition synthesis"}, {"link": "", "title": "An analysis of the search spaces for generate and validate patch generation systems"}, {"link": "", "title": "Automatic patch generation by learning correct code"}, {"link": "", "title": "On a test of whether one of two random variables is stochastically larger than the other"}, {"link": "", "title": "Automatic repair of real bugs in Java: A large-scale experiment on the Defects4J dataset"}, {"link": "", "title": "Mining software repair models for reasoning on the search space of automated program fixing"}, {"link": "", "title": "ASTOR: A Program Repair Library for Java"}, {"link": "", "title": "Do the fix ingredients already exist? an empirical inquiry into the redundancy assumptions of program repair approaches"}, {"link": "", "title": "Directfix: Looking for simple program repairs"}, {"link": "", "title": "Angelix: Scalable multiline program patch synthesis via symbolic analysis"}, {"link": "", "title": "SemFix: program repair via semantic analysis"}, {"link": "", "title": "Spoon: A Library for Implementing Analyses and Transformations of Java Source Code"}, {"link": "", "title": "Automatically patching errors in deployed software"}, {"link": "", "title": "The strength of random search on automated program repair"}, {"link": "", "title": "Using automated program repair for evaluating the effectiveness of fault localization techniques"}, {"link": "", "title": "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems"}, {"link": "", "title": "Understanding the syntactic rule usage in java"}, {"link": "", "title": "Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T)"}, {"link": "", "title": "Automatic error elimination by horizontal code transfer across multiple applications"}, {"link": "", "title": "Is the cure worse than the disease? overfitting in automated program repair"}, {"link": "", "title": "relifix: Automated repair of software regressions"}, {"link": "", "title": "Automated fixing of programs with contracts"}, {"link": "", "title": "Leveraging program equivalence for adaptive program repair: Models and first results"}, {"link": "", "title": "Automatically finding patches using genetic programming"}, {"link": "", "title": "Program slicing"}, {"link": "", "title": "An Empirical Analysis of the Influence of Fault Space on Search-Based Automated Program Repair"}, {"link": "", "title": "Locus: locating bugs from software changes"}, {"link": "", "title": "A survey on software fault localization"}, {"link": "", "title": "Change-Locator: locate crash-inducing changes based on crash reports"}, {"link": "", "title": "Identifying test-suite-overfitted patches through test case generation"}, {"link": "", "title": "Precise condition synthesis for program repair"}, {"link": "", "title": "Nopol: Automatic repair of conditional statement bugs in java programs"}, {"link": "", "title": "S3: Syntax-and Semantic-Guided Repair Synthesis via Programming by Examples"}, {"link": "", "title": "Better test cases for better automated program repair"}, {"link": "/document/7958383", "title": "An analysis of the suitability of test-based patch acceptance criteria"}, {"link": "", "title": "An empirical study on real bug fixes"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453055"}
{"ref": [{"link": "", "title": "Design Rules"}, {"link": "", "title": "Faster issue resolution with higher technical quality of software"}, {"link": "", "title": "Dependency profiles for software architecture evaluations"}, {"link": "", "title": "Quantifying the encapsulation of implemented software architectures"}, {"link": "", "title": "Modularity analysis of logical design models"}, {"link": "", "title": "Leveraging design rules to improve software architecture recovery"}, {"link": "/document/5166450", "title": "Software dependencies, work dependencies, and their impact on failures"}, {"link": "/document/295895", "title": "A metrics suite for object oriented design"}, {"link": "", "title": "The mood metrics set"}, {"link": "/document/738508", "title": "Detection of logical coupling based on product release history"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Chunks in expert memory: evidence for the magical number four \u2026 or is it two?"}, {"link": "/document/859533", "title": "Predicting fault incidence using software change history"}, {"link": "", "title": "Elements of Software Science (Operating and Programming Systems Series)"}, {"link": "", "title": "An investigation into the applicability and validity of object-oriented design metrics"}, {"link": "/document/4335232", "title": "A practical model for measuring maintainability"}, {"link": "", "title": "The distribution of the flora in the alpine zone"}, {"link": "", "title": "A case study in locating the architectural roots of technical debt"}, {"link": "", "title": "Object-oriented metrics that predict maintainability"}, {"link": "", "title": "Refactoring navigator: Interactive and guided refactoring with search-based recommendation"}, {"link": "", "title": "Object-Oriented Software Metrics"}, {"link": "", "title": "Exploring the structure of complex software designs: An empirical study of open source and proprietary code"}, {"link": "/document/1702388", "title": "A complexity measure"}, {"link": "", "title": "Modeling design/coding factors that drive maintainability of software systems"}, {"link": "", "title": "Hotspot patterns: The formal definition and automatic detection of architecture smells"}, {"link": "", "title": "Mining metrics to predict component failures"}, {"link": "/document/242525", "title": "Metrics for assessing a software system's maintainability"}, {"link": "", "title": "Construction and testing of polynomials predicting software maintainability"}, {"link": "/document/1435354", "title": "Predicting the location and number of faults in large software systems"}, {"link": "/document/6606638", "title": "Measuring architecture quality by structure plus history analysis"}, {"link": "/document/5290817", "title": "From retrospect to prospect: Assessing modularity and stability from software architecture"}, {"link": "", "title": "The structure and value of modularity in design"}, {"link": "", "title": "The structure and value of modularity in software design"}, {"link": "", "title": "Local vs. global models for effort estimation and defect prediction"}, {"link": "", "title": "The application of product measures in directing software maintenance activity"}, {"link": "", "title": "Design rule hierarchies and parallelism in software development tasks"}, {"link": "", "title": "Design rule spaces: A new form of architecture insight"}, {"link": "", "title": "Titan: A toolset that connects software architecture with quality analysis"}, {"link": "/document/5523693", "title": "Component co-evolution and component dependency: speculations and verifications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886929"}
{"ref": [{"link": "", "title": "Evolving readable string test inputs using a natural language model to reduce human oracle cost"}, {"link": "", "title": "Parameter tuning or default values? an empirical investigation in search-based software engineering"}, {"link": "/document/6862882", "title": "\n            T\n            "}, {"link": "", "title": "Modern permutation test software"}, {"link": "", "title": "Testful: Automatic unit-test generation for java classes"}, {"link": "", "title": "When, how, and why developers (do not) test in their IDEs"}, {"link": "/document/6676925", "title": "Task-driven software summarization"}, {"link": "", "title": "The Mythical Man-Month"}, {"link": "", "title": "Automatic documentation inference for exceptions"}, {"link": "", "title": "Exe: Automatically generating inputs of death"}, {"link": "", "title": "Using uml for automatic test generation"}, {"link": "", "title": "\n            Do automatically generated\n            "}, {"link": "", "title": "Automatic generating test cases for testing web applications"}, {"link": "/document/4145039", "title": "Visualizing testsuites to aid in software understanding"}, {"link": "/document/6975661", "title": "On automatically generating commit messages via summarization of source code changes"}, {"link": "", "title": "Jcrasher: An automatic robustness tester for java"}, {"link": "/document/6227207", "title": "Recovering traceability links between an api and its learning resources"}, {"link": "", "title": "Modeling readability to improve unit tests"}, {"link": "", "title": "Using IR methods for labeling source code artifacts: Is it worthwhile?"}, {"link": "", "title": "Labeling source code with information retrieval methods: an empirical study"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "1600 faults in 100 projects: automatically finding faults while achieving high coverage with evosuite"}, {"link": "", "title": "Does automated unit test generation really help software testers? a controlled empirical study"}, {"link": "", "title": "Does automated white-box test generation really help software testers?"}, {"link": "", "title": "Mutation-driven generation of unit tests and oracles"}, {"link": "/document/5645482", "title": "On the use of automated text summarization techniques for summarizing source code"}, {"link": "", "title": "Automatic summarising: The state of the art"}, {"link": "/document/5342440", "title": "A theoretical and empirical study of search-based testing: Local, global, and hybrid search"}, {"link": "", "title": "Amap: Automatically mining abbreviation expansions in programs to enhance software maintenance tools"}, {"link": "", "title": "Automatically capturing source code context of nl-queries for software maintenance and reuse"}, {"link": "", "title": "Using students as subjects - comparative study of students and professionals in lead-time impact assessment"}, {"link": "/document/6613851", "title": "Towards generating human-oriented summaries of unit test cases"}, {"link": "", "title": "Reliance on correlation data for complexity metric use and validation"}, {"link": "", "title": "Automatic documentation generation via source code summarization of method context"}, {"link": "", "title": "Automatic testing of object-oriented software"}, {"link": "", "title": "On the interplay between software testing and evolution and its effect on program comprehension"}, {"link": "", "title": "Automatic generation of natural language summaries for java classes"}, {"link": "", "title": "Students as surrogates for practicing accountants: Further evidence"}, {"link": "", "title": "Lightweight Structural Summarization As an Aid to Software Evolution"}, {"link": "", "title": "Randoop: Feedback-directed random testing for java"}, {"link": "", "title": "\n            Reformulating branch coverage a\n            "}, {"link": "", "title": "Mining source code descriptions from developer communications"}, {"link": "/document/919078", "title": "Analysis and testing of web applications"}, {"link": "", "title": "Automated unit test generation during software development: A controlled experiment and think-aloud observations"}, {"link": "/document/4222611", "title": "Detection of duplicate defect reports using natural language processing"}, {"link": "", "title": "Automatic summarising: The state of the art"}, {"link": "", "title": "Automatic Generation of Descriptive Summary Comments for Methods in Object-oriented Programs"}, {"link": "", "title": "Towards automatically generating summary comments for java methods"}, {"link": "", "title": "Automatically detecting and describing high level actions within methods"}, {"link": "", "title": "Generating parameter comments and integrating with method summaries"}, {"link": "", "title": "Evolutionary testing of classes"}, {"link": "", "title": "A critique and improvement of the cl common language effect size statistics of mcgraw and wong"}, {"link": "", "title": "Codes: Mining source code descriptions from developers discussions"}, {"link": "", "title": "Automatic generation of system test cases from use case specifications"}, {"link": "/document/6693113", "title": "Autocomment: Mining question and answer sites for automatic comment generation"}, {"link": "", "title": "Test case purification for improving fault localization"}, {"link": "/document/6100145", "title": "Automated documentation inference to explain failed tests"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886933"}
{"ref": [{"link": "", "title": "Using grounded theory to study the experience of software development"}, {"link": "", "title": "Reconciling perspectives: A grounded theory of how people manage the process of software development"}, {"link": "", "title": "Method slurring: the grounded theory/phenomenology example"}, {"link": "", "title": "Grounded theory and nursing knowledge"}, {"link": "", "title": "Sociology Reinterpreted: An Essay on Method and Vocation"}, {"link": "/document/636682", "title": "Toward a unified field of se researchand practice"}, {"link": "", "title": "Management of community contributions: A case study on the Android and Linux software ecosystems"}, {"link": "", "title": "Grounded Theory: A Practical Guide"}, {"link": "", "title": "Introduction to Qualitative Reseach Methods"}, {"link": "", "title": "Grounded Theory: Reflections on the emergence vs. forcing debate"}, {"link": "", "title": "The SAGE Handbook of Grounded Theory"}, {"link": "", "title": "An exploratory study into the use of qualitative research methods in descriptive process modelling"}, {"link": "", "title": "The Impact of Background and Experience on Software Inspections"}, {"link": "", "title": "Linking symbolic interactionism and grounded theory methods in a research design: From Corbin and Strauss' Assumptions to Action"}, {"link": "", "title": "\u201cDiscovering\u201d illness: using grounded theory"}, {"link": "", "title": "Constructing Grounded Theory"}, {"link": "", "title": "Investigating software process in practice: A grounded theory perspective"}, {"link": "", "title": "Using grounded theory to understand software process improvement: A study of Irish software product companies"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Qualitative Inquiry &Research Design: Choosing Among Five Approaches"}, {"link": "", "title": "Interpretive interactionism"}, {"link": "", "title": "Grounded Theory and the Politics of Interpretation"}, {"link": "", "title": "Editorial: For the Special issue on Qualitative Software Engineering Research"}, {"link": "", "title": "Rigor in information systems positivist case research Current practices, trends and recommendations"}, {"link": "", "title": "Grounded theory: reflections on the emergence vs. forcing debate"}, {"link": "", "title": "Special issue on qualitative research methods in software engineering"}, {"link": "", "title": "Selecting empirical methods for software engineering research"}, {"link": "", "title": "Building theories from case study research"}, {"link": "", "title": "A framework for evaluation and control of the factors that influence the software process improvement in small organizations"}, {"link": "", "title": "Performance Alignment Work: How software developers experience the continuous adaptation of team performance in Lean and Agile environments"}, {"link": "", "title": "Towards dissolution of the IS researchdebate: from polarization to polarity"}, {"link": "", "title": "Scientific communication: Its role in the conduct of research and creation of knowledge"}, {"link": "", "title": "Complex adaptive systems"}, {"link": "", "title": "Theoretical Sensitivity"}, {"link": "", "title": "Basics of Grounded Theory Analysis: Emergence vs Forcing"}, {"link": "", "title": "Doing Grounded Theory: Issues and Discussions"}, {"link": "", "title": "Constructivist Grounded Theory?"}, {"link": "", "title": "The Discovery of Grounded Theory: Strategies for Qualitative Research"}, {"link": "", "title": "Research in software engineering: an analysis of the literature"}, {"link": "", "title": "Grounded Theory: A Practical Guide for Management, Business and Market Researchers"}, {"link": "", "title": "Competing paradigms in qualitative research"}, {"link": "", "title": "Developing a grounded theory approach: a comparison of Glaser and Strauss"}, {"link": "", "title": "Information systems epistemology: an historical perspective"}, {"link": "", "title": "Grounded theory for geeks"}, {"link": "", "title": "The impact of inadequate customer collaboration on self-organizing Agile teams"}, {"link": "", "title": "Developing a grounded theory to explain the practices of self-organizing Agile teams"}, {"link": "/document/6197202", "title": "Self-organizing roles on agile software development teams"}, {"link": "", "title": "Complex Adaptive Systems"}, {"link": "", "title": "Using a grounded theory approach for exploring software product management challenges"}, {"link": "/document/6276302", "title": "Where's the Theory for Software Engineering?"}, {"link": "", "title": "\u201cEmergence\u201d vs. \u201cForcing\u201d of Empirical Data? A crucial problem of \u201cGrounded Theory\u201d Reconsidered"}, {"link": "", "title": "Management Researchand Grounded Theory: A review of grounded theory building approach in organisational and management research"}, {"link": "", "title": "Essential communication practices for Extreme Programming in a global software development team"}, {"link": "", "title": "What are the roles of software product managers? An empirical investigation"}, {"link": "", "title": "Requirements Fixation"}, {"link": "", "title": "Beyond Method"}, {"link": "", "title": "Critical Issues in Qualitative Research Methods"}, {"link": "", "title": "Research Approaches"}, {"link": "", "title": "The search for a researchmethod for studying OSS process innovation"}, {"link": "", "title": "Software engineering process theory: A multi-method comparison of Sensemaking-Coevolution-Implementation Theory and Function-Behavior-Structure Theory"}, {"link": "", "title": "The Dimensions of Software Engineering Success"}, {"link": "/document/799955", "title": "Qualitative methods in empirical studies of software engineering"}, {"link": "", "title": "Programmers' build errors: a case study (at google)"}, {"link": "", "title": "Eroding grounded theory"}, {"link": "", "title": "Theory-Oriented Software Engineering"}, {"link": "", "title": "Introduction to the special section\u2014General Theories of Software Engineering: New advances and implications for research"}, {"link": "", "title": "Appendix to \u201cGrounded Theory Research in Software Engineering\u201d"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Grounded Theory Methodology: An Overview"}, {"link": "", "title": "Basics of Qualitative Research Techniques and Procedures for Developing Grounded Theory"}, {"link": "", "title": "Qualitative analysis for social scientists"}, {"link": "", "title": "From the editors: What grounded theory is not"}, {"link": "", "title": "Research Methods Knowledge Base"}, {"link": "", "title": "Grounded Theory for Qualitative Research A Practical Guide"}, {"link": "", "title": "Putting the \u2018theory\u2019 back into grounded theory: guidelines for grounded theory studies in information systems"}, {"link": "", "title": "Applied Qualitative Research"}, {"link": "", "title": "Empirical research methods in software engineering"}, {"link": "", "title": "Case study research Design and methods"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886897"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453130"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453094"}
{"ref": [{"link": "", "title": "Android ndk toolset"}, {"link": "", "title": "card.io"}, {"link": "", "title": "Global platform device specifications"}, {"link": "", "title": "Google authenticator"}, {"link": "", "title": "Hash it!"}, {"link": "", "title": "Microvison co., ltd. microvision mv4412 board"}, {"link": "", "title": "Openkeychain"}, {"link": "", "title": "Pixelknot"}, {"link": "", "title": "Sierraware: Sierratee trusted execution environment"}, {"link": "", "title": "The MITRE Corporation: List of common vulnerabilities and exposures for all versions of Google Android"}, {"link": "", "title": "GlobalPlatform Device Technology TEE Client API Specification Version 1.0 GPD SPE 007. Technical report"}, {"link": "", "title": "GlobalPlatform Device Technology TEE Internal API Specification Version 1.0 GPD SPE 010. Technical report"}, {"link": "", "title": "GlobalPlatform Device Technology TEE System Architecture Version 1.0 GPD SPE 009. Technical report"}, {"link": "", "title": ""}, {"link": "", "title": "Privilege separation in html5 applications"}, {"link": "", "title": "ARM. Arm security technology \u2014 building a secure system using trustzone technology. arm technical white paper"}, {"link": "", "title": "Hypervision across worlds: Real-time kernel protection from the arm trustzone secure world"}, {"link": "", "title": ""}, {"link": "", "title": "Privtrans: Automatically partitioning programs for privilege separation"}, {"link": "", "title": "RFC 4880: OpenPGP Message Format. Rfc 4880, RFC Editor"}, {"link": "", "title": ""}, {"link": "", "title": "Secure web applications via automatic partitioning"}, {"link": "", "title": "Trusted execution environments on mobile devices"}, {"link": "", "title": "Droidbench test suite"}, {"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Adaptive defenses for commodity software through virtual application partitioning"}, {"link": "", "title": "The Soot framework for Java program analysis: a retrospective"}, {"link": "", "title": "Authentication in distributed systems: Theory and practice. ACM Trans. Comput. Syst"}, {"link": "", "title": "Thwarting memory disclosure with efficient hypervisor-enforced intra-domain isolation"}, {"link": "", "title": "Securibench micro test suite"}, {"link": "", "title": ""}, {"link": "", "title": "Smartphones as practical and secure location verification tokens for payments"}, {"link": "", "title": "A machine-learning approach for classifying and categorizing android sources and sinks"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Using ARM TrustZone to Build a Trusted Language Runtime for Mobile Applications"}, {"link": "", "title": "Andromeda: Accurate and scalable security analysis of web applications"}, {"link": "", "title": "Jimple: Simplifying java bytecode for analyses and transformations. Technical report, Sable Research Group"}, {"link": "", "title": "tigr: a novel take on two-factor authentication"}, {"link": "", "title": "Trustworthy Execution on Mobile Devices"}, {"link": "", "title": "A flexible software development and emulation framework for arm trustzone"}, {"link": "", "title": "IEEE Automatically partition software into least privilege components using dynamic data dependency analysis"}, {"link": "", "title": "Secure program partitioning. ACM Trans. Comput. Syst."}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886968"}
{"ref": [{"link": "", "title": "The relationship between new work practices and employee effort. Journal of industrial relations"}, {"link": "", "title": "evidence-based model of job rotation"}, {"link": "", "title": ""}, {"link": "", "title": "Factors in Software Development: A Systematic Literature Review"}, {"link": "", "title": "of the Relationship between Job Specialization, Job Rotation and Job Burnout: Example of Taiwan's High-technology Industry'"}, {"link": "", "title": "Effect of job rotation on work demands, workload, and recovery of refuse truck drivers and collectors. The journal of human factors and ergonomics society"}, {"link": "", "title": "Critical care staff rotation: outcomes of a survey and pilot study. Nursing in Critical Care"}, {"link": "", "title": "antecedents and outcomes of job rotation. Academy of management journal"}, {"link": "", "title": "The Effects of Job Rotation Practices on Motivation: A Research on Managers in the Automotive Organizations. Business and Economics Research Journal"}, {"link": "", "title": "of job rotation and role stress among nurses on job satisfaction and organizational commitment. BMC Health Services Research"}, {"link": "", "title": "Introducing knowledge redundancy practice in software development: Experiences with job rotation in support work. Information and Software Technology"}, {"link": "", "title": "Improving General Knowledge in Agile Software Organizations Agile Conference. Chicago"}, {"link": "", "title": "Theories From Case Study Research. The Academy of Management Review"}, {"link": "", "title": "Research: a Guide to Design and Implementation"}, {"link": "", "title": "Methods in Empirical Studies of Software Engineering. IEEE Transactions on Software Engineering"}, {"link": "", "title": "to use qualitative methods in evaluation. Newbury Park. CA: Sage"}, {"link": "", "title": "qualitativa: t\u00e9cnicas e procedimentos para o desenvolvimento de teoria fundamentada"}, {"link": "", "title": "Checking: Can Benefits Be Gained Similar to Group Therapy? The Qualitative Report"}, {"link": "", "title": "Qualitative Research: The assessment of trustworthiness. The American Journal of Occupational Therapy"}, {"link": "", "title": "Motivated software engineers are engaged and focused, while satisfied ones are happy"}, {"link": "", "title": "Theory of Motivation andSatisfaction of Software Engineers"}, {"link": "", "title": "Cohesion: Conceptual and Measurement Issues Small Group Research"}, {"link": "", "title": "A multimethod examination of the benefits and detriments of intragroup conflict, Adm. Sci. Q"}, {"link": "", "title": "Theory of Reasoned Action in the Context of International Conference on Evaluation and Assessment in Software Engineering"}, {"link": "", "title": "Conflict in Software Testing. Communications of the ACM"}, {"link": "", "title": "Implementation through The Lens of Organizational Learning: A Case Study of Insuror"}, {"link": "", "title": "the Software Factory Work: Lessons from a Decade of Experience"}, {"link": "", "title": "Line Engineering: The State of the Practice. IEEE Software"}, {"link": "", "title": "Development Process Improvement: A Knowledge Integration Perspective. IEEE Transactions on Engineering Management"}, {"link": "", "title": ""}, {"link": "", "title": "Overcoming barriers to self-management in software teams. IEEE Software"}, {"link": "", "title": "Seeking in an Information Systems Project Team. IEEE Transactions on Professional Communication"}, {"link": "", "title": "Development in a Multicultural Context: Adaptive and Learning Organizations. International Convention on Information and Communication Technology, Electronics and Microelectronics"}, {"link": "", "title": ""}, {"link": "", "title": "an explanatory theory of motivation in software engineering: a qualitative case study of a government organization"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "differences and information systems developer values. Decision Support Systems"}, {"link": "", "title": "FELDT and practices in aligning requirements with verification and validation: a case study of six companies. Empirical Software Engineering"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886972"}
{"ref": [{"link": "", "title": "Meta-Modeling Design Patterns: Application to Pattern Detection and Code Synthesis"}, {"link": "", "title": "Add Logging at Class Load Time"}, {"link": "", "title": "Automatic extraction of framework-specific models from framework-based application code"}, {"link": "", "title": "Droidel: A general approach to android framework modeling"}, {"link": "", "title": "KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Edgeminer: Automatically detecting implicit control flow transitions through the android framework"}, {"link": "", "title": "Automated generation of model classes for java pathfinder"}, {"link": "", "title": "Load-Time Structural Reflection in Java"}, {"link": "", "title": "Modelgen: Mining explicit information flow specifications from concrete executions"}, {"link": "", "title": "TWEAST: A Simple and Effective Technique to Implement Concrete-syntax AST Rewriting Using Partial Parsing"}, {"link": "", "title": "Inversion Of Control"}, {"link": "", "title": "Design Patterns: Elements of Reusable Object-Oriented Software"}, {"link": "", "title": "Automated Synthesis of Symbolic Instruction Encodings from I/O Samples"}, {"link": "", "title": "Synthesis of Loop-free Programs"}, {"link": "", "title": "Mimic: Computing models for opaque code"}, {"link": "", "title": "Framework Synthesis for Symbolic Execution of Event-Driven Frameworks"}, {"link": "", "title": "SymDroid: Symbolic Execution for Dalvik Bytecode"}, {"link": "", "title": "Dr. Android and Mr. Hide: Fine-grained Permissions in Android Applications"}, {"link": "", "title": "Adaptive Concretization for Parallel Program Synthesis"}, {"link": "", "title": "JSKETCH: Sketching for Java"}, {"link": "", "title": "An automated refactoring approach to design pattern-based program transformations in Java programs"}, {"link": "", "title": "Oracle-guided component-based program synthesis"}, {"link": "", "title": "Java swing, 2nd edition: Code examples"}, {"link": "/document/6100131", "title": "JPF-AWT: Model checking GUI applications"}, {"link": "", "title": "Checking Interaction-Based Declassification Policies for Android Using Symbolic Execution"}, {"link": "/document/671108", "title": "Formalizing Design Patterns"}, {"link": "", "title": "Using swing components: Examples"}, {"link": "", "title": "LL(*): The Foundation of the ANTLR Parser Generator"}, {"link": "", "title": "On the Synthesis of an Asynchronous Reactive Module"}, {"link": "", "title": "JPF Tutorial"}, {"link": "", "title": "Declarative mocking"}, {"link": "", "title": "Synthesizing data structure manipulations from storyboards"}, {"link": "", "title": "Automated Feedback Generation for Introductory Programming Assignments"}, {"link": "", "title": "Program sketching"}, {"link": "", "title": "The Sketch Programmers Manual"}, {"link": "", "title": "Programming by sketching for bit-streaming programs"}, {"link": "", "title": "Sketching stencils"}, {"link": "", "title": "Sketching concurrent data structures"}, {"link": "", "title": "TRANSIT: Specifying Protocols with Concolic Snippets"}, {"link": "", "title": "Generation of library models for verification of android applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886900"}
{"ref": [{"link": "", "title": "Abbot Java GUI Test Framework"}, {"link": "", "title": "A gui crawling-based technique for android mobile application testing"}, {"link": "", "title": "Mobiguitar-a tool for automated model-based testing of mobile apps"}, {"link": "", "title": "Android Monkey"}, {"link": "", "title": "Xen and the art of virtualization"}, {"link": "", "title": "Interactive record/replay for web application debugging"}, {"link": "/document/4362647", "title": "Automatic test generation from gui applications for testing web services"}, {"link": "", "title": "Quarter of the world will be using smartphones in 2016"}, {"link": "", "title": "Revirt: Enabling intrusion analysis through virtual-machine logging and replay"}, {"link": "", "title": ""}, {"link": "", "title": "Reran: Timing-and touch-sensitive record and replay for android"}, {"link": "/document/4976392", "title": "Creating gui testing tools using accessibility technologies"}, {"link": "", "title": ""}, {"link": "", "title": "Mosaic: cross-platform user-interaction record and replay for the fragmented android ecosystem"}, {"link": "/document/7524392", "title": "Amil: Localizing neighboring mobile devices through a simple gesture"}, {"link": "", "title": "Facilitating the evolution of products in product line engineering by capturing and replaying configuration decisions"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Automating performance testing of interactive java applications"}, {"link": "", "title": "Tool support for testing complex multi-touch gestures"}, {"link": "", "title": "Kvm: the linux virtual machine monitor"}, {"link": "", "title": ""}, {"link": "/document/6200099", "title": "Autoblacktest: Automatic black-box testing of interactive applications"}, {"link": "", "title": ""}, {"link": "", "title": "Bugnet: Continuously recording program execution for deterministic replay debugging"}, {"link": "", "title": "Near-pri: Private, proximity based location sharing"}, {"link": "", "title": "Physical media covert channels on smart mobile devices"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Secure Virtual Mobile Platform (SVMP)"}, {"link": "", "title": ""}, {"link": "", "title": "Flashback: A lightweight extension for rollback and deterministic replay for software debugging"}, {"link": "", "title": ""}, {"link": "/document/7181432", "title": "Generating reproducible and replayable bug reports from android application crashes"}, {"link": "", "title": "Glassgesture: Exploring head gesture interface of smart glasses"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886935"}
{"ref": [{"link": "", "title": "Demand-driven compositional symbolic execution"}, {"link": "", "title": "Enhancing symbolic execution with veritesting"}, {"link": "", "title": "Towards scalable modular checking of user-defined properties"}, {"link": "", "title": "Automatic predicate abstraction of C programs"}, {"link": "", "title": "Boolean programs: A model and process for software analysis"}, {"link": "", "title": "Specification and verification: The Spec# experience"}, {"link": "", "title": "Conditional model checking: A technique to pass information between verifiers"}, {"link": "", "title": "RWset: Attacking path explosion in constraint-based test generation"}, {"link": "", "title": "Execution generated test cases: How to make systems code crash itself"}, {"link": "", "title": "The SANTE tool: Value analysis, program slicing and test generation for C program debugging"}, {"link": "", "title": "Narrowing the Gap between Verification and Systematic Testing"}, {"link": "", "title": "Collaborative verification and testing with explicit assumptions"}, {"link": "", "title": "An experimental evaluation of deliberate unsoundness in a static program analyzer"}, {"link": "", "title": "Counterexample-guided abstraction refinement"}, {"link": "", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints"}, {"link": "", "title": "JCrasher: An automatic robustness tester for Java"}, {"link": "", "title": "Check \u2018n\u2019 Crash: Combining static checking and testing"}, {"link": "", "title": "DSD-Crasher: A hybrid analysis tool for bug finding"}, {"link": "", "title": "Just test what you cannot verify!"}, {"link": "", "title": "Guarded commands, nondeterminacy and formal derivation of programs"}, {"link": "", "title": "The Daikon system for dynamic detection of likely invariants"}, {"link": "", "title": "Embedded contract languages"}, {"link": "", "title": "Static contract checking with abstract interpretation"}, {"link": "", "title": "Extended static checking for Java"}, {"link": "", "title": "DyTa: Dynamic symbolic execution guided with static verification results"}, {"link": "", "title": "Compositional dynamic test generation"}, {"link": "", "title": "DART: Directed automated random testing"}, {"link": "", "title": "Automated whitebox fuzz testing"}, {"link": "", "title": "Compositional may-must program analysis: Unleashing the power of alternation"}, {"link": "", "title": "Construction of abstract state graphs with PVS"}, {"link": "", "title": "Mars code"}, {"link": "", "title": "Efficient state merging in symbolic execution"}, {"link": "", "title": "Efficient weakest preconditions"}, {"link": "", "title": "Dafny: An automatic program verifier for functional correctness"}, {"link": "", "title": "Steering symbolic execution to less traveled paths"}, {"link": "", "title": "In defense of soundiness: A manifesto"}, {"link": "", "title": "The YOGI project: Software property checking via static analysis and testing"}, {"link": "", "title": "CUTE: A concolic unit testing engine for C"}, {"link": "", "title": "GuideSE: Annotations for guiding concolic testing"}, {"link": "", "title": "Pex-White box test generation for. NET"}, {"link": "", "title": "Partial Verification Results"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886899"}
{"ref": [{"link": "", "title": "Chainsaw: Chained Automated Workflow-based Exploit Generation"}, {"link": "", "title": "Scalability Issues with Using FSMWeb to Test Web Applications"}, {"link": "", "title": "The Apache Velocity Project"}, {"link": "", "title": "Apache FreeMarker"}, {"link": "", "title": "Apache Struts"}, {"link": "", "title": "Inferring Page Models for Web Application Analysis"}, {"link": "", "title": "Testing and Analysis of Web Applications Using Page Models"}, {"link": "", "title": "Phosphor: Illuminating Dynamic Data Flow in Commodity JVMs"}, {"link": "/document/6606571", "title": "Unifying FSM-inference Algorithms Through Declarative Specification"}, {"link": "", "title": "Leveraging Existing Instrumentation to Automatically Infer Invariant-constrained Models"}, {"link": "", "title": "Soot-A framework for analyzing and transforming Java and Android Applications"}, {"link": "", "title": "Strictly Declarative Specification of Sophisticated Points-to Analyses"}, {"link": "", "title": "Automatic Partitioning of Database Applications"}, {"link": "", "title": "Sloth: Being Lazy is a Virtue (when Issuing Database Queries)"}, {"link": "", "title": "Modelgen: Mining Explicit Information Flow Specifications from Concrete Executions"}, {"link": "", "title": "Dytan: A Generic Dynamic Taint Analysis Framework"}, {"link": "", "title": "FlowMiner: Automatic Summarization of Library Data-Flow for Malware Analysis"}, {"link": "", "title": "javert: Fully Automatic Mining of General Temporal Properties from Dynamic Traces"}, {"link": "", "title": "Type-Based Taint Analysis for Java Web Applications"}, {"link": "", "title": "itracker"}, {"link": "", "title": "Understanding and Detecting Real-world Performance Bugs"}, {"link": "", "title": "Automatic Mining of Specifications from Invocation Traces and Method Invariants"}, {"link": "", "title": "Using Dynamic Execution Traces and Program Invariants to Enhance Behavioral Model Inference"}, {"link": "", "title": "SymJS: Automatic Symbolic Testing of JavaScript Web Applications"}, {"link": "", "title": "Self-inferencing Reflection Resolution for Java"}, {"link": "", "title": "Data Flow Analysis and Testing of JSP-based Web Applications"}, {"link": "", "title": "Object-Based Data Flow Testing of Web Applications"}, {"link": "", "title": "Reflection Analysis for Java"}, {"link": "", "title": "Automatic Generation of Software Behavioral Models"}, {"link": "/document/4812494", "title": "Holistic Query Transformations for Dynamic Web Applications"}, {"link": "", "title": "Automatic Generation of XSS and SQL Injection Attacks with Goal-directed Model Checking"}, {"link": "", "title": "Cross-language Program Slicing for Dynamic Web Applications"}, {"link": "", "title": "OpenMRS"}, {"link": "", "title": "JavaServer Pages Technology"}, {"link": "", "title": "JSP Standard Tag Library"}, {"link": "", "title": "Unified Expression Language"}, {"link": "", "title": "Spring Framework"}, {"link": "", "title": "Holistic Optimization by Prefetching Query Results"}, {"link": "", "title": "Hibernate ORM"}, {"link": "", "title": "Precise Interprocedural Dataflow Analysis via Graph Reachability"}, {"link": "", "title": "Interprocedural Dataflow Analysis in the Presence of Large Libraries"}, {"link": "", "title": "IDE Dataflow Analysis in the Presence of Large Object-oriented Libraries"}, {"link": "", "title": "Precise Interprocedural Dataflow Analysis with Applications to Constant Propagation"}, {"link": "", "title": "A Scalable Approach to User-Session Based Testing of Web Applications Through Concept Analysis"}, {"link": "", "title": "Improving Static Resolution of Dynamic Class Loading in Java Using Dynamically Gathered Environment Information"}, {"link": "", "title": "Selenium WebDriver"}, {"link": "", "title": "F4F: Taint Analysis of Framework-based Web Applications"}, {"link": "", "title": "Understanding the Behavior of Database Operations Under Program Control"}, {"link": "", "title": "Framework Benchmarks for Java Web Applications"}, {"link": "", "title": "RefaFlex: Safer Refactorings for Reflective Java Programs"}, {"link": "", "title": "Web Application Slicing in Presence of Dynamic Code Generation"}, {"link": "", "title": "ANDROMEDA: Accurate and Scalable Security Analysis of Web Applications"}, {"link": "", "title": "TAJ: Effective Taint Analysis of Web Applications"}, {"link": "/document/4639354", "title": "An Automated Test Code Generation Method for Web Applications Using Activity Oriented Approach"}, {"link": "", "title": "Sound and Precise Analysis of Web Applications for Injection Vulnerabilities"}, {"link": "", "title": "Byte Buddy"}, {"link": "", "title": "Rethinking Soot for Summary-based Whole-program Analysis"}, {"link": "", "title": "Generating Precise and Concise Procedure Summaries"}, {"link": "", "title": "Virtual DOM Coverage for Effective Testing of Dynamic Web Applications"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453128"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453132"}
{"ref": [{"link": "", "title": "Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps"}, {"link": "", "title": "Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones"}, {"link": "", "title": "Apposcopy: Semantics-based detection of android malware"}, {"link": "", "title": "Scandroid: Automated security certification of android applications"}, {"link": "", "title": "Information-flow analysis of android applications in droidsafe"}, {"link": "", "title": "Scalable and precise taint analysis for android"}, {"link": "", "title": "Worldwide quarterly mobile phone tracker 3q12"}, {"link": "", "title": "ScanDal: Static analyzer for detecting privacy leaks in android applications"}, {"link": "", "title": "Implicit flows: Can't live with 'em, can't live without 'em"}, {"link": "", "title": "The soot framework for java program analysis: a retrospective"}, {"link": "", "title": "Jml: A notation for detailed design"}, {"link": "", "title": "Cassandra: Towards a certifying app store for android"}, {"link": "", "title": "Chex: Statically vetting android apps for component hijacking vulnerabilities"}, {"link": "", "title": "Faster alias set analysis using summaries"}, {"link": "", "title": "Precise interprocedural dataflow analysis via graph reachability"}, {"link": "", "title": "Ide dataflow analysis in the presence of large object-oriented libraries"}, {"link": "", "title": "Precise interprocedural dataflow analysis with applications to constant propagation"}, {"link": "", "title": "F4f: Taint analysis of framework-based web applications"}, {"link": "", "title": "Andromeda: Accurate and scalable security analysis of web applications"}, {"link": "", "title": "Appsealer: Automatic generation of vulnerability-specific patches for preventing component hijacking attacks in android applications"}, {"link": "/document/6234407", "title": "Dissecting android malware: Characterization and evolution"}, {"link": "", "title": "Automated inference of library specifications for source-sink property verification"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886831"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453096"}
{"ref": [{"link": "", "title": "Juggling on a high wire: Multitasking effects on performance"}, {"link": "", "title": "Memory for goals: An activation-based model"}, {"link": "", "title": "Human symbol manipulation within an integrated cognitive architecture"}, {"link": "", "title": "Information, technology, and information worker productivity"}, {"link": "", "title": "Cohesive and isolated development with branches"}, {"link": "", "title": "An entropy index for multitasking behavior"}, {"link": "/document/7180080", "title": "Ecosystems in GitHub and a method for ecosystem identification using reference coupling"}, {"link": "", "title": "The problem state: a cognitive bottleneck in multitasking"}, {"link": "", "title": "What makes interruptions disruptive? a process-model account of the effects of the problem state bottleneck on task interruption and resumption"}, {"link": "", "title": "Developer onboarding in GitHub: The role of prior social links and language experience"}, {"link": "/document/6205767", "title": "Coordination breakdowns and their impact on development productivity and software failures"}, {"link": "", "title": "Basics of qualitative research Techniques and procedures for developing grounded theory"}, {"link": "", "title": "Why do i keep interrupting myself? environment, habit and self-interruption"}, {"link": "", "title": "Social coding in GitHub: transparency and collaboration in an open software repository"}, {"link": "", "title": "Selecting empirical methods for software engineering research"}, {"link": "", "title": "Task switching: A PDP model"}, {"link": "", "title": "Managing currents of work: Multi-tasking among multiple collaborations"}, {"link": "", "title": "What makes an interruption disruptive? Understanding the effects of interruption relevance and timing on performance"}, {"link": "", "title": "Github's data from a firehose"}, {"link": "/document/927045", "title": "Working for free? Motivations of participating in open source projects"}, {"link": "/document/1205177", "title": "An empirical study of speed and communication in globally distributed software development"}, {"link": "/document/4014785", "title": "Concerning interruptions"}, {"link": "", "title": "Extension of nakagawa & schielzeth's r2GLMM to random slopes models"}, {"link": "", "title": "Attention and effort. Prentice-Hall"}, {"link": "", "title": "The promises and perils of mining GitHub"}, {"link": "", "title": "Using task context to improve programmer productivity"}, {"link": "/document/4222596", "title": "Information needs in collocated software development teams"}, {"link": "", "title": "Rank-based multiple test procedures and simultaneous confidence intervals"}, {"link": "", "title": "Multitask learning and the reorganization of work: from Tayloristic to holistic organization"}, {"link": "", "title": "The open source software development phenomenon: An analysis based on social network theory"}, {"link": "", "title": "No task left behind? examining the nature of fragmented work"}, {"link": "", "title": "Activity traces and signals in software developer recruitment and hiring"}, {"link": "", "title": "Impression formation in online peer production: Activity traces and personal profiles in GitHub"}, {"link": "", "title": "Performance and participation in open source software on GitHub"}, {"link": "", "title": "Software developers' perceptions of productivity"}, {"link": "", "title": "A general and simple method for obtaining r2 from generalized linear mixed-effects models"}, {"link": "", "title": "Multiple team membership: A theoretical model of its effects on productivity and learning for individuals and teams"}, {"link": "", "title": "A cognitive neuroscience perspective on memory for programming tasks"}, {"link": "", "title": "Evaluating cues for resuming interrupted programming tasks"}, {"link": "", "title": "Resumption strategies for interrupted programming tasks"}, {"link": "", "title": "Programmer information needs after memory failure"}, {"link": "", "title": "Supporting Interrupted Programming Tasks with Memory-Based Aids"}, {"link": "", "title": "Handbook of statistical distributions"}, {"link": "", "title": "Understanding and improving time usage in software development"}, {"link": "", "title": "Dual ecological measures of focus in software development"}, {"link": "", "title": "The myth of multitasking"}, {"link": "", "title": "Alternatives to the median absolute deviation"}, {"link": "", "title": "Executive control of cognitive processes in task switching"}, {"link": "", "title": "Toward a unified theory of the multitasking continuum: From concurrent performance to task switching, interruption, and resumption"}, {"link": "/document/7081835", "title": "An empirical study of work fragmentation in software evolution tasks"}, {"link": "", "title": "A law for all seasons"}, {"link": "", "title": "Perceptions of diversity on GitHub: A user survey"}, {"link": "", "title": "Gender and tenure diversity in GitHub teams"}, {"link": "/document/7180131", "title": "A data set for social diversity studies of GitHub teams"}, {"link": "", "title": "Quality Software Management, 1: Systems Thinking"}, {"link": "", "title": "Converging work-talk patterns in online task-oriented communities"}, {"link": "", "title": "Focus-shifting patterns of OSS developers and their congruence with call graphs"}, {"link": "", "title": "An empirical study of the effect of file editing patterns on software quality"}, {"link": "", "title": "Project overload: An exploratory study of work and management in multi-project settings"}, {"link": "/document/4023978", "title": "An industrial case study of program artifacts viewed during maintenance tasks"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886974"}
{"ref": [{"link": "", "title": "Compilers: Principles, Techniques and Tools (for Anna University), 2/e"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "/document/1702957", "title": "An automatic generator for compiler testing"}, {"link": "", "title": "Compiler test case generation methods: A survey and assessment"}, {"link": "/document/44642", "title": "Vectorizing compilers: A test suite and results"}, {"link": "/document/7515478", "title": "Test case prioritization for compilers: A text-vector based approach"}, {"link": "", "title": "Taming compiler fuzzers"}, {"link": "", "title": "Design and implementation of java just-in-time compiler"}, {"link": "", "title": "Automatic generation of test cases"}, {"link": "", "title": "Introduction to compiler construction"}, {"link": "", "title": "Coverage-driven automated compiler test suite generation"}, {"link": "", "title": "Survey of compiler testing methods"}, {"link": "", "title": "Compiler validation via equivalence modulo inputs"}, {"link": "", "title": "Finding deep compiler bugs via guided stochastic program mutation"}, {"link": "", "title": "Randomized stress-testing of link-time optimizers"}, {"link": "", "title": "Many-core complier fuzzing"}, {"link": "", "title": "Random testing of C calling conventions"}, {"link": "", "title": "Differential testing for software"}, {"link": "", "title": "Random testing of C compilers targeting arithmetic optimization"}, {"link": "", "title": "Scaling up size and number of expressions in random testing of arithmetic optimization of C compilers"}, {"link": "", "title": "Testing an optimising compiler by generating random lambda terms"}, {"link": "", "title": "Test-case reduction for C compiler bugs"}, {"link": "", "title": "Introduction to algorithms"}, {"link": "", "title": "Compiler testing via symbolic interpretation"}, {"link": "", "title": "A general test data generator for COBOL"}, {"link": "", "title": "Practical testing of a C99 compiler using output comparison"}, {"link": "", "title": "An automatic testing approach for compiler based on metamorphic testing technique"}, {"link": "", "title": "On the diagrammatic and mechanical representation of propositions and reasonings"}, {"link": "", "title": "Finding and understanding bugs in C compilers"}, {"link": "/document/1319081", "title": "Random program generator for Java JIT compiler test system"}, {"link": "", "title": "Automated test program generation for an industrial optimizing compiler"}, {"link": "", "title": "Nuapc: A parallelizing compiler for c++"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886902"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453059"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453063"}
{"ref": [{"link": "/document/6227083", "title": "Augmenting test suites effectiveness by increasing output diversity"}, {"link": "", "title": "Coverage and fault detection of the output-uniqueness test selection criteria"}, {"link": "", "title": "Polyglot: modeling and analysis for multiple statechart formalisms"}, {"link": "", "title": "Structural and functional sequence test of dynamic and state-based software with evolutionary algorithms"}, {"link": "/document/6269653", "title": "Executing model checking counterexamples in Simulink"}, {"link": "/document/6963470", "title": "The oracle problem in software testing: A survey"}, {"link": "", "title": "Mutation operators for Simulink models"}, {"link": "", "title": "SIMOTEST: A tool for automated testing of hybrid real-time Simulink models"}, {"link": "", "title": "Mutation-based test case generation for Simulink models"}, {"link": "", "title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs"}, {"link": "", "title": "Wadsworth Publishing Company"}, {"link": "", "title": "Modeling and simulation of systems using MATLAB and Simulink"}, {"link": "", "title": "Model checking. MIT Press"}, {"link": "", "title": "An instrumentation-based approach to controller model validation"}, {"link": "", "title": "Statistical power analysis for the behavioral sciences (rev)"}, {"link": "", "title": "Generative programming"}, {"link": "/document/4221611", "title": "Model-driven development of complex software: A research roadmap"}, {"link": "/document/6152257", "title": "Whole test suite generation"}, {"link": "", "title": "Automotgen: Automatic model oriented test generator for embedded control systems"}, {"link": "", "title": "Simulink Design Verifier - Applying Automated Formal Methods to Simulink and Stateflow"}, {"link": "/document/6614716", "title": "Modeling and requirements on the physical side of cyber-physical systems"}, {"link": "", "title": "8Cage: lightweight fault-based test generation for Simulink"}, {"link": "", "title": "JPF. Java pathfinder tool-set"}, {"link": "", "title": "Automatic code generation from MATLAB/Simulink for critical applications"}, {"link": "", "title": "Introduction to embedded systems: A cyber-physical systems approach"}, {"link": "", "title": "Integrating model-based testing with evolutionary functional testing"}, {"link": "", "title": "Essentials of metaheuristics"}, {"link": "", "title": "Effective test suites for mixed discrete-continuous stateflow controllers"}, {"link": "", "title": "The paper extra resources (technical reports and the models)"}, {"link": "", "title": "Model-checking based verification approach for advanced industrial automation solutions"}, {"link": "", "title": "Reducing qualitative human oracle costs associated with automatically generated test data"}, {"link": "", "title": "Automatic test case generation from Simulink/Stateflow models using model checking"}, {"link": "", "title": "Specifying automated oracles for Simulink models"}, {"link": "", "title": "On test oracles for Simulink-like models"}, {"link": "", "title": "An integrated test generation tool for enhanced coverage of Simulink/Stateflow models"}, {"link": "", "title": "A course in digital signal processing"}, {"link": "", "title": "One evaluation of model-based testing aNd its automation"}, {"link": "", "title": "Reactive Systems Inc. Reactis Tester"}, {"link": "", "title": "Reactive Systems Inc. Reactis Validator"}, {"link": "", "title": "Specification-based test oracles for reactive systems"}, {"link": "", "title": "Efficient coverage of parallel and hierarchical stateflow models for test case generation"}, {"link": "", "title": "Randomized directed testing (REDIRECT) for Simulink/Stateflow models"}, {"link": "", "title": "Experience report: the Reactis validation tool"}, {"link": "", "title": "The MathWorks Inc. Building a Clutch Lock-Up Model"}, {"link": "", "title": "The MathWorks Inc. C Code Generation from Simulink"}, {"link": "", "title": "The MathWorks Inc. Modeling a Fault-Tolerant Fuel Control System"}, {"link": "", "title": "The MathWorks Inc. Simulink"}, {"link": "", "title": "The MathWorks Inc. Simulink Deign Verifier Cruise Control Test Generation"}, {"link": "", "title": "The MathWorks Inc. Simulink Design Verifier"}, {"link": "", "title": "The MathWorks Inc. Types of Model Coverage"}, {"link": "/document/6210014", "title": "Test generation for large automotive models"}, {"link": "", "title": "Considering signal constraints in search-based testing of continuous systems"}, {"link": "/document/5071030", "title": "Search-based testing of complex simulink models containing stateflow diagrams"}, {"link": "", "title": "Search-based test data generation from statefiow statecharts"}, {"link": "", "title": "Evolutionary functional testing of continuous control systems"}, {"link": "", "title": "Data Mining: Practical Machine Learning Tools and Techniques"}, {"link": "", "title": "Research and improvements on mutation operators for Simulink models"}, {"link": "", "title": "Model-based testing for embedded systems"}, {"link": "", "title": "Model-based testing of real-time embedded systems in the automotive domain"}, {"link": "", "title": "Search-based mutation testing for Simulink models"}, {"link": "", "title": "A search-based framework for automatic testing of MATLAB/Simulink models"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886937"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Design maintenance systems. Communication of the ACM"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "On parallel scalable uniform SAT witness generation"}, {"link": "", "title": "The AETG system: An approach to testing based on combinatorial design. IEEE Transactions on Software Engineering"}, {"link": "/document/1201186", "title": "Constructing test suites for interaction testing"}, {"link": "", "title": "A robust approach for variability extraction from the Linux build system"}, {"link": "", "title": "An empirical analysis of C preprocessor use. IEEE Transactions on Software Engineering"}, {"link": "", "title": "Analyzing multiple configurations of a C program"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "SuperC: Parsing all of C by taming the preprocessor"}, {"link": "", "title": "Handling constraints in the input space when using combination strategies for software testing"}, {"link": "", "title": "Combining multi-objective search and constraint solving for configuring large software product lines"}, {"link": "", "title": "An algorithm for generating t-wise covering arrays from large feature models"}, {"link": "", "title": "Type checking annotation-based product lines. ACM Transactions on Software Engineering and Methodology"}, {"link": "", "title": "Variability-aware parsing in the presence of lexical macros and conditional compilation"}, {"link": "", "title": "A variability-aware module system"}, {"link": "", "title": ""}, {"link": "/document/1321063", "title": "Software fault interactions and implications for software testing"}, {"link": "", "title": "Statically detecting likely buffer overflow vulnerabilities"}, {"link": "", "title": "IPOG/IPOG-D: Efficient test generation for multi-way combinatorial testing"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "A Comparison of 10 Sampling Algorithms for Configurable Systems"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "An empirical study on configuration-related issues: Investigating undeclared and unused identifiers"}, {"link": "", "title": ""}, {"link": "/document/7065312", "title": "IEEE Transactions on Software Engineering"}, {"link": "", "title": "The Linux kernel: A case study of build system variability"}, {"link": "", "title": "A survey of combinatorial testing"}, {"link": "", "title": "Automated incremental pairwise testing of software product lines"}, {"link": "", "title": "Coevolution of variability models and related artifacts: A case study from the linux kernel"}, {"link": "", "title": ""}, {"link": "", "title": ""}, {"link": "", "title": "Presence-condition simplification in highly configurable systems"}, {"link": "", "title": "Feature maintenance with emergent interfaces"}, {"link": "/document/4539541", "title": "Prioritizing user-session- based test cases for web applications testing"}, {"link": "", "title": "Variability testing in the wild: The drupal case study. Software and Systems Modeling"}, {"link": "", "title": "The variability model of the linux kernel"}, {"link": "", "title": ""}, {"link": "", "title": "Views on internal and external validity in empirical software engineering"}, {"link": "", "title": "Ifdef considered harmful, or portability experience with C news"}, {"link": "/document/6227152", "title": "Build code analysis with symbolic evaluation"}, {"link": "", "title": "Static analysis of variability in system software: The 90,000 #ifdefs issue"}, {"link": "", "title": ""}, {"link": "", "title": "Feature consistency in compile- time-configurable system software: Facing the Linux 10,000 feature problem"}, {"link": "", "title": "Revealing and repairing configuration inconsistencies in large-scale system software"}, {"link": "", "title": "A classification and survey of analysis strategies for software product lines"}, {"link": "", "title": "Effective interprocedural resource leak detection"}, {"link": "/document/1583600", "title": "Covering arrays for efficient fault characterization in complex configuration spaces"}, {"link": "", "title": ""}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886941"}
{"ref": [], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453134"}
{"ref": [{"link": "", "title": ""}, {"link": "", "title": "Kanban: Successful Evolutionary Change for Your Technology Business"}, {"link": "", "title": "Extreme Programming Explained: Embrace Change"}, {"link": "", "title": "Priming Kanban"}, {"link": "", "title": "Guide to the Software Engineering Body of Knowledge (SWEBoK V3.0)"}, {"link": "", "title": "Agile testing: A practical guide for testers and agile teams"}, {"link": "/document/6449236", "title": "IEEE Internet Computing"}, {"link": "", "title": "Characterizing and predicting which bugs get fixed: An empirical study of Microsoft Windows"}, {"link": "", "title": "Continuous Delivery"}, {"link": "", "title": "DevOps for Developers"}, {"link": "", "title": ""}, {"link": "", "title": "Int'l. Software Testing Qualifications Board (ISTQB)"}, {"link": "", "title": "J. of Software Testing Verification and Reliability. Wiley"}, {"link": "", "title": ""}, {"link": "", "title": "Your Path through Agile Fluency"}, {"link": "", "title": "Who tested my software? Testing as an organizationally cross-cutting activity"}, {"link": "", "title": "Towards R&D as innovation experiment systems: A framework for moving beyond agile software development"}, {"link": "", "title": "Lean Software Development: An Agile Toolkit"}, {"link": "", "title": "Empirical Software Engineering"}, {"link": "", "title": "A coding scheme development methodology using grounded theory for qualitative analysis of pair programming"}, {"link": "", "title": "The Scrum guide"}, {"link": "", "title": "Organizational behavior and human decision processes"}, {"link": "", "title": "Basics of Qualitative Research Grounded Theory Procedures and Techniques SAGE"}, {"link": "/document/1657936", "title": "IEEE Software"}, {"link": "", "title": "How Google Tests Software"}, {"link": "/document/1251029", "title": "Test-driven development as a defect-reduction practice"}, {"link": "", "title": "Case Study Research Design and Methods"}], "pdf_link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886976"}
