[
{"doi": "10.1109/MOMPES.2009.5069131", "title": "A relationship-based approach to model management", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Software engineering", "Merging", "Conferences", "Software development management", "Engineering management", "Computer science", "Automation", "Software systems", "Coherence", "Robustness"], "abstract": "There is a rapidly growing interest in model-based development as a way to increase the level of abstraction and automation in software engineering. The ultimate goal of model-based development is to improve the software process by promoting the use of models as the primary artifacts of development, and to provide computer-supported technologies to transform models into running systems.", "author": [{"name": "Marsha Chechik", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}], "time": "May 2009", "citationCount": "2", "references": [{"title": " and M. Sabetzadeh. \"A Manifesto for Model Merging\". In Workshop on Global Integrated Model Management (GaMMa '06) co-located with ICSE'06", "authors": ["G. Brunet", " M. Chechik", " S. Easterbrook", " S. Nejati", " N. Niu"]}, {"title": " and A. Gurfinkel. \"Multi-Valued Symbolic Model-Checking\". ACM Transactions on Software Engineering and Methodology", "authors": ["M. Chechik", " B. Devereux", " S. Easterbrook"]}]},
{"doi": "10.1109/MOMPES.2009.5069132", "title": "Applying software product line techniques in model-based embedded systems engineering", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Embedded software", "Embedded system", "Systems engineering and theory", "Control systems", "Product design", "Sensor systems", "Actuators", "Microcontrollers", "Design engineering", "Control system synthesis"], "abstract": "This paper addresses variability in the domain of software-based control systems. When designing product lines of such systems, varying sensors and actuators have to be used and parameterized, which in turn requires adaptations in the behavior of the microcontroller. For efficient engineering these adaptations should be performed in an systematic and straightforward manner. We tackle these challenges by using a Rapid Control Prototyping (RCP) system in combination with model-based development techniques. In particular, we modularize the parametrization of components into a separate configuration, which is isolated from the model that defines the controller behavior. Hence, during adaptations the model can often remain unchanged, which significantly reduces the turnaround time during design iterations. The approach is illustrated and evaluated with a parking assistant application, which is tested on our experimental vehicle, where it performs automatic parking maneuvers.", "author": [{"name": "Andreas Polzer", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Stefan Kowalewski", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Goetz Botterweck", "affiliation": "Lero-The Irish Software Engineering Research Centre, University of Limerick, Limerick, Ireland"}], "time": "May 2009", "citationCount": "11", "references": []},
{"doi": "10.1109/MOMPES.2009.5069133", "title": "Reliable operating modes for distributed embedded systems", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Embedded system", "Mathematical model", "MATLAB", "Distributed computing", "Real time systems", "Humans", "Airplanes", "Processor scheduling", "Ignition", "Hardware"], "abstract": "Hard real-time embedded distributed systems pose huge demands in their implementation which must contain as few faults as possible. Over the past years, model-driven development and automatic code generation have proven to effectively reduce design faults in those systems. Still, models are mainly used for parts of the systems' functionality and most solutions do not address the generation of a whole system. In this paper we will showcase an approach for code generation for entire systems. A crucial step is the semantically correct realization of operating modes defined in the model. If they are not changed synchronously, a distributed system will show unpredictable behavior. We will demonstrate how a reliable transition between operating modes, even for a distributed system, can be achieved. Our approach is exemplified using a case study we carried out recently.", "author": [{"name": "Wolfgang Haberl", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Munchen, Germany"}, {"name": "Stefan Kugele", "affiliation": "Fachbereich Informatik, Technische Universit\u00e4t Darmstadt, Darmstadt, Germany"}, {"name": "Uwe Baumgarten", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Munchen, Germany"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/SECSE.2009.5069155", "title": "How do scientists develop and use scientific software?", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Software testing", "Software engineering", "Knowledge engineering", "Resource management", "Computer science education", "Supercomputers", "Peer to peer computing", "Automatic testing", "Software standards", "Standards development"], "abstract": "New knowledge in science and engineering relies increasingly on results produced by scientific software. Therefore, knowing how scientists develop and use software in their research is critical to assessing the necessity for improving current development practices and to making decisions about the future allocation of resources. To that end, this paper presents the results of a survey conducted online in October-December 2008 which received almost 2000 responses. Our main conclusions are that (1) the knowledge required to develop and use scientific software is primarily acquired from peers and through self-study, rather than from formal education and training; (2) the number of scientists using supercomputers is small compared to the number using desktop or intermediate computers; (3) most scientists rely primarily on software with a large user base; (4) while many scientists believe that software testing is important, a smaller number believe they have sufficient understanding about testing concepts; and (5) that there is a tendency for scientists to rank standard software engineering concepts higher if they work in large software development projects and teams, but that there is no uniform trend of association between rank of importance of software engineering concepts and project/team size.", "author": [{"name": "Jo Erskine Hannay", "affiliation": "Department of Software Engineering Simula Research LaboratoryDepartment of Informatics, University of Oslo, Norway"}, {"name": "Carolyn MacLeod", "affiliation": "Center of Biomedical Computing Simula Research Laboratory Department of Informatics, University of Oslo, Norway"}, {"name": "Janice Singer", "affiliation": "Department of Computer Science, University of Toronto, Canada"}, {"name": "Hans Petter Langtangen", "affiliation": "Department of Software Engineering Simula Research LaboratoryDepartment of Informatics, University of Oslo, Norway"}, {"name": "Dietmar Pfahl", "affiliation": "Software Engineering Group, National Research Council Canada, Canada"}, {"name": "Greg Wilson", "affiliation": "Department of Computer Science, University of Toronto, Canada"}], "time": "May 2009", "citationCount": "80", "references": []},
{"doi": "10.1109/ICSE.2007.62", "title": "Parallel Randomized State-Space Search", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Costs", "Java", "Concurrent computing", "Error correction", "Computer science", "Computer errors", "Parallel processing", "Performance analysis", "Logic", "Data structures"], "abstract": "Model checkers search the space of possible program behaviors to detect errors and to demonstrate their absence. Despite major advances in reduction and optimization techniques, state-space search can still become cost-prohibitive as program size and complexity increase. In this paper, we present a technique for dramatically improving the cost- effectiveness of state-space search techniques for error detection using parallelism. Our approach can be composed with all of the reduction and optimization techniques we are aware of to amplify their benefits. It was developed based on insights gained from performing a large empirical study of the cost-effectiveness of randomization techniques in state-space analysis. We explain those insights and our technique, and then show through a focused empirical study that our technique speeds up analysis by factors ranging from 2 to over 1000 as compared to traditional modes of state-space search, and does so with relatively small numbers of parallel processors.", "author": [{"name": "Matthew B. Dwyer", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}, {"name": "Sebastian Elbaum", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}, {"name": "Suzette Person", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}, {"name": "Rahul Purandare", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}], "time": "May 2007", "citationCount": "32", "references": []},
{"doi": "10.1109/TEFSE.2009.5069574", "title": "Capturing custom link semantics among heterogeneous artifacts and tools", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Programming", "Joining processes", "Software maintenance", "Software tools", "Ontologies", "Software engineering", "Performance evaluation", "Computer simulation", "Data analysis", "Testing"], "abstract": "Automated techniques aid in minimizing the overhead associated with the capture and maintenance of trace links. However, many challenges to automated traceability remain, such as linking heterogeneous artifacts and capturing custom link semantics. In this position paper, we propose a combination of techniques, including prospective link capture, open hypermedia, and rules, in order to address these challenges and complement current automated techniques. Our approach borrows ideas from e-Science, a domain in which tracing data plays a crucial role in the repeatability of experiments.", "author": [{"name": "Hazeline U. Asuncion", "affiliation": "Institute of Software Research, University of California, Irvine, Irvine, CA, USA"}, {"name": "Richard N. Taylor", "affiliation": "Institute of Software Research, University of California, Irvine, Irvine, CA, USA"}], "time": "May 2009", "citationCount": "12", "references": []},
{"doi": "10.1109/ICSE.2009.5070504", "title": "How tagging helps bridge the gap between social and technical aspects in software development", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Tagging", "Bridges", "Programming", "Software tools", "Collaborative software", "Collaborative work", "Social network services", "Software development management", "Computer science", "Humans"], "abstract": "Empirical research on collaborative software development practices indicates that technical and social aspects of software development are often intertwined. The processes followed are tacit and constantly evolving, thus not all of them are amenable to formal tool support. In this paper, we explore how ldquotaggingrdquo, a lightweight social computing mechanism, is used to bridge the gap between technical and social aspects of managing work items. We present the results from an empirical study on how tagging has been adopted and adapted over the past two years of a large project with 175 developers. Our research shows that the tagging mechanism was eagerly adopted by the team, and that it has become a significant part of many informal processes. Our findings indicate that lightweight informal tool support, prevalent in the social computing domain, may play an important role in improving team-based software development practices.", "author": [{"name": "Christoph Treude", "affiliation": "Department of Computer Science, University of Victoria, Canada"}, {"name": "Margaret-Anne Storey", "affiliation": "Department of Computer Science, University of Victoria, Canada"}], "time": "May 2009", "citationCount": "44", "references": [{"title": " \"Why we tag: motivations for annotation in mobile and online media\"", "authors": ["M. Ames ", " M. Naaman"]}, {"title": " \"Who should fix this bug?\"", "authors": ["J. Anvik", " L. Hiew ", " G. C. Murphy"]}, {"title": " \"What makes a good bug report?\"", "authors": ["N. Bettenburg", " S. Just", " A. Schr\u00f6ter", " C. Weiss", " R. Premraj ", " T. Zimmermann"]}, {"title": " \"ICICLE: groupware for code inspection\"", "authors": ["L. Brothers", " V. Sembugamoorthy ", " M. Muller"]}, {"title": " \"On coordination mechanisms in global software development\"", "authors": ["M. Cataldo", " M. Bass", " J. D. Herbsleb ", " L. Bass"]}, {"title": " \"It's all in the words: supporting work activities with lightweight tools\"", "authors": ["E. F. Churchill ", " S. Bly"]}, {"title": " \"Seeking the source: Software source code as a social and technical artifact\"", "authors": ["C. de Souza", " J. Froehlich ", " P. Dourish"]}, {"title": " \"Breaking the code\u201d moving between private and public work in collaborative software development\"", "authors": ["C. R. B. de Souza", " D. Redmiles ", " P. Dourish"]}, {"title": " \"Task and social visualization in software development: evaluation of a prototype\"", "authors": ["J. B. Ellis", " S. Wahid", " C. Danis ", " W. A. Kellogg"]}, {"title": " \"Coordinating expertise in software development teams\"", "authors": ["S. Faraj ", " L. Sproull"]}, {"title": " \"Jazz and the Eclipse way of collaboration\"", "authors": ["R. Frost"]}, {"title": " \"The vocabulary problem in human-system communication\"", "authors": ["G. W. Furnas", " T. K. L", "auer", " L. M. Gomez ", " S. T. Dumais"]}, {"title": " \"Analyzing due process in the workplace\"", "authors": ["E. M. Gerson ", " S. L. Star"]}, {"title": " \"Usage patterns of collaborative tagging systems\"", "authors": ["S. Golder ", " B. A. Huberman"]}, {"title": " \"Supporting articulation work using software configuration management systems\"", "authors": ["R. E. Grinter"]}, {"title": " \"Groupware and social dynamics: eight challenges for developers\"", "authors": ["J. Grudin"]}, {"title": " \"Group awareness in distributed software development\"", "authors": ["C. Gutwin", " R. Penner ", " K. Schneider"]}, {"title": " \"Social bookmarking tools (I): A general review\"", "authors": ["T. Hammond", " T. Hannay", " B. Lund ", " J. Scott"]}, {"title": " \"An empirical study of global software development: Distance and speed\"", "authors": ["J. D. Herbsleb", " A. Mockus", " T. A. Finholt ", " R. E. Grinter"]}, {"title": " \"Guest editors' introduction: Global software development\"", "authors": ["J. D. Herbsleb ", " D. Moitra"]}, {"title": " \"Mining software repositories for traceability links\"", "authors": ["H. Kagdi", " J. I. Maletic ", " B. Sharif"]}, {"title": " \"Coordination in software development\"", "authors": ["R. E. Kraut ", " L. A. Streeter"]}, {"title": " \"Maintaining mental models: A study of developer work habits\"", "authors": ["T. D. LaToza", " G. Venolia ", " R. DeLine"]}, {"title": " \"Modeling articulation work in software engineering processes\"", "authors": ["P. Mi ", " W. Scacchi"]}, {"title": " \"Keeping it going: The everyday practices of open source software\" in ", "authors": ["E. Monteiro", " T. Osterlie", " K. Roll", " "]}, {"title": " \"Teamwork coordination in a distributed software development environment\"", "authors": ["A. Oberweis", " T. Wendel ", " W. Stucky"]}, {"title": " \"A tool for mining defecttracking systems to predict fault-prone files\"", "authors": ["T. J. Ostr", " "]}, {"title": " \"Concern graphs: finding and describing concerns using structural program dependencies\"", "authors": ["M. P. Robillard ", " G. C. Murphy"]}, {"title": " \"Concernmapper: simple view-based separation of scattered concerns\"", "authors": ["M. P. Robillard ", " F. Weig"]}, {"title": " \"When plans do not work out: How plans are used in software development projects\"", "authors": ["K. R\u00f6nkk\u00f6", " Y. Dittrich ", " D. R"]}, {"title": " \"Negotiation and the coordination of information and activity in distributed software problem management\"", "authors": ["R. J. S", "usky "]}, {"title": " \"Shared waypoints and social tagging to support collaboration in software development\"", "authors": ["M.-A. Storey", " L.- T. Cheng", " I. Bull ", " P. Rigby"]}, {"title": " \"How programmers can turn comments into waypoints for code navigation\"", "authors": ["M.-A. Storey", " L.-T. Cheng", " J. Singer", " M. Muller", " D. Myers ", " J. Ryall"]}, {"title": " \"Todo or to bug: Exploring how task annotations play a role in the work practices of software developers\"", "authors": ["M.-A. Storey", " J. Ryall", " R. I. Bull", " D. Myers ", " J. Singer"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070958", "title": "10 most powerful ideas in software engineering", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software engineering", "Programming profession", "Computer industry", "Books", "Software measurement", "Software testing", "Biographies", "Art"], "abstract": "Summary form only given. At software engineering's 40th birthday, do we know which software engineering ideas matter most? In this talk, award-winning author Steve McConnell identifies 10 of the most powerful ideas in software engineering. McConnell explains how the 10 ideas form the foundation for effective software development, and he shows how practices ranging from the waterfall model to extreme programming measure up. He uses these key ideas to explain which currently popular software engineering practices will withstand the test of time, and which are fleeting fads.", "author": [{"name": "Steve McConnell", "affiliation": "Construx Software, USA"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/MOMPES.2009.5069134", "title": "On practical Service-Based Computing in distributed embedded automotive systems", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Distributed computing", "Embedded computing", "Automotive engineering", "Application software", "Embedded system", "Vehicles", "Software engineering", "Computer industry", "Embedded software", "Software maintenance"], "abstract": "The automotive industry is, like several other domains, a source of both challenging problems and innovative technologies of various kinds. One interesting phenomenon in this domain is the extensive interdependencies between the constituent nodes, or ECUs, of its networked embedded system. This in turn leads to extensive interactions between ECUs over the network infrastructure of an automobile.", "author": [{"name": "Hesham Shokry", "affiliation": "Lero-the Irish Software Engineering Research Centre, University of Limerick, Ireland"}, {"name": "Mike Hinchey", "affiliation": "Lero-the Irish Software Engineering Research Centre, University of Limerick, Ireland"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/SECSE.2009.5069156", "title": "Some challenges facing software engineers developing software for scientists", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Programming", "Context modeling", "Software quality", "Design engineering", "Pressing", "Software prototyping", "Production", "Biological information theory", "High performance computing", "Biological system modeling"], "abstract": "In this paper, the author discusses two types of challenges facing software engineers as they develop software for scientists. The first type is those challenges that arise from the experience that scientists might have of developing their own software. From this experience, they internalise a model of software development but may not realise the contextual factors which make such a model successful. They thus have expectations and assumptions which prove challenging to software engineers. The second type is those challenges which, while not unique to the development of software for scientists, have especial significance in the context of such development. These include the challenges of ensuring effective user engagement and of developing software for a community.", "author": [{"name": "Judith Segal", "affiliation": "Empirical Studies of Software Development group Centre of Research in Computing, Open University, Milton Keynes, UK"}], "time": "May 2009", "citationCount": "13", "references": []},
{"doi": "10.1109/ICSE.2007.75", "title": "Sequential Circuits for Relational Analysis", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Sequential circuits", "Circuit analysis", "Circuit testing", "Logic design", "Performance analysis", "Encoding", "Manuals", "System testing", "Sequential analysis", "Software systems"], "abstract": "The alloy tool-set has been gaining popularity as an alternative to traditional manual testing and checking for design correctness. Alloy uses a first-order relational logic for modeling designs. The alloy analyzer translates alloy formulas for a given scope, i.e., a bound on the universe of discourse, to Boolean formulas in conjunctive normal form (CNF), which are subsequently checked using prepositional satisfiability solvers. We present SERA, a novel algorithm that compiles a relational logic formula for a given scope to a sequential circuit. There are two key advantages of sequential circuits: they form a more succinct representation than CNF formulas, sometimes by several orders of magnitude. Also sequential circuits are amenable to a range of powerful automatic analysis techniques that have no counterparts for CNF formulas. Our experiments show that SERA, used in conjunction with a sequential circuit analyzer, can check formulas for scopes that are an order of magnitude higher than those feasible with the alloy analyzer.", "author": [{"name": "Fadi Zaraket", "affiliation": "IBM Systems and Technology Group, USA"}, {"name": "Adnan Aziz", "affiliation": "University of Texas, Austin, USA"}, {"name": "Sarfraz Khurshid", "affiliation": "University of Texas, Austin, USA"}], "time": "May 2007", "citationCount": "3", "references": []},
{"doi": "10.1109/TEFSE.2009.5069575", "title": "Model-based traceability", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Software engineering", "Testing", "Computer science", "Costs", "Performance analysis", "XML", "Traffic control", "Unified modeling language", "Process planning", "Strategic planning"], "abstract": "Many organizations invest considerable cost and effort in building traceability matrices in order to comply with regulatory requirements or process improvement initiatives. Unfortunately, these matrices are frequently left un-used and project stakeholders continue to perform critical software engineering activities such as change impact analysis or requirements satisfaction assessment without benefit of the established traces. A major reason for this is the lack of a process framework and associated tools to support the use of these trace matrices in a strategic way. In this position paper, we present a model-based approach designed to help organizations gain full benefit from the traces they develop and to allow project stakeholders to plan, generate, and execute trace strategies in a graphical modeling environment. The approach includes a standard notation for capturing strategic traceability decisions in the form of a graph, and also notation for modeling reusable trace queries using augmented sequence diagrams. All of the model elements, including project specific data, are represented using XML. The approach is demonstrated through examples from a traffic simulator project composed of requirements, UML class diagrams, code, test cases, and test case results.", "author": [{"name": "Jane Cleland-Huang", "affiliation": "School of Computing, De Paul University, USA"}, {"name": "Jane Huffman Hayes", "affiliation": "Department of Computer Science, University of Kentucky, USA"}, {"name": "J. M. Domel", "affiliation": "School of Computing, De Paul University, USA"}], "time": "May 2009", "citationCount": "12", "references": [{"title": " and E. Romanova. \"Best Practices for Automated Traceability", "authors": ["J. Clel", "-Huang", " B. Berenbach", " S. Clark", " R. Settimi"]}, {"title": " \"Supporting Document and Data Views of Source Code", "authors": ["M.L.Collard", " J.I. Maletic", " ", " A. Marcus", " (2002)"]}, {"title": " \"Poirot: A Distributed Tool Supporting Enterprise-Wide Traceability", "authors": ["J. Lin", " J. Clel", "-Huang", " R. Settimi", " J. Amaya", " G. Bedford", " B. Berenbach", " O.B.Khadra", " C.Duan", " ", " X. Zou", " (2006)"]}, {"title": " \"Software Artefact Traceability: the Never-Ending Challenge.\" ICSM 2007: 485-488", "authors": ["R. Oliveto", " A. Marcus", " J. Huffman Hayes"]}, {"title": " \"Towards Reference Models for Requirements Traceability", "authors": ["B. Ramesh", " ", " M. Jarke", " (2001)"]}, {"title": "D.C.Schmidt. \"Model-driven engineering", "authors": []}, {"title": " \"A Model-Driven Traceability Framework to Software Product Line Development", "authors": ["Sousa "]}]},
{"doi": "10.1109/ICSE.2009.5070505", "title": "Tesseract: Interactive visual exploration of socio-technical relationships in software development", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming", "Social network services", "Displays", "Computer bugs", "Collaborative software", "Robustness", "Couplings", "Information analysis", "Data visualization", "Usability"], "abstract": "Software developers have long known that project success requires a robust understanding of both technical and social linkages. However, research has largely considered these independently. Research on networks of technical artifacts focuses on techniques like code analysis or mining project archives. Social network analysis has been used to capture information about relations among people. Yet, each type of information is often far more useful when combined, as when the ldquogoodnessrdquo of social networks is judged by the patterns of dependencies in the technical artifacts. To bring such information together, we have developed Tesseract, an interactive exploratory environment that utilizes cross-linked displays to visualize the myriad relationships between artifacts, developers, bugs, and communications. We evaluated Tesseract by (1) demonstrating its feasibility with GNOME project data (2) assessing its usability via informal user evaluations, and (3) verifying its suitability for the open source community via semi-structured interviews.", "author": [{"name": "Anita Sarma", "affiliation": "Institute of Software Research, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Larry Maccherone", "affiliation": "Institute of Software Research, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Patrick Wagstrom", "affiliation": "Institute of Software Research, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "James Herbsleb", "affiliation": "Institute of Software Research, Carnegie Mellon University, Pittsburgh, PA, USA"}], "time": "May 2009", "citationCount": "65", "references": [{"title": " \"The Year 2000 problem: Impact Strategies and Tools\"", "authors": ["R. S. Arnold"]}, {"title": " \"FASTDash: A Visual Dashboard for Fostering Awareness in Software Teams\"", "authors": ["J. Biehl", " M. Czerwinski", " G. Smith ."]}, {"title": " \"Chapels in the Bazaar? Latent Social Structure in OSS\"", "authors": ["C. Bird", " D. Pattison", " R. D'Souza ."]}, {"title": " \"Communication Networks in Geographically Distributed Software Development\"", "authors": ["M. Cataldo ", " J. Herbsleb"]}, {"title": " \"Identification of Coordination Requirements: Implications for the Design of Collaboration and Awareness Tools\"", "authors": ["M. Cataldo", " P. Wagstrom", " J. D. Herbsleb ."]}, {"title": " \"Hipikat: A Project Memory for Software Development\"", "authors": ["D. Cubranic", " G. C. Murphy", " J. Singer ."]}, {"title": " \"Supporting Collaborative Software Development through the Visualization of Socio-Technical Dependencies\"", "authors": ["C. R. B. de Souza", " S. Quirk", " E. Trainer ."]}, {"title": " \"An Empirical Study of Software Developers' Management of Dependencies and Changes\"", "authors": ["C. R. B. de ", " D. Redmiles"]}, {"title": " \"Towards Understanding Programs through Wear-Based Filtering\"", "authors": ["R. DeLine", " A. Khella", " M. Czerwinski ."]}, {"title": " \"Semi-Synchronous Conflict Detection and Resolution in Asynchronous Software Development\"", "authors": ["P. Dewan ", " R. Hegde"]}, {"title": " \"Unifying Artifacts and Activities in a Visual Tool for Distributed Software Development Teams\"", "authors": ["J. Froehlich ", " P. Dourish"]}, {"title": " \"CodeSaw: A Social Visualization of Distributed Software Development\"", "authors": ["E. Gilbert ", " K. Karahalios"]}, {"title": " \"Recomposition: Putting It All Back Together Again\"", "authors": ["R. E. Grinter"]}, {"title": " \"The Geography of Coordination: Dealing with Distance in R&D Work\"", "authors": ["R. E. Grinter", " J. D. Herbsleb ", " D. E. Perry"]}, {"title": " \"The Effects of Workspace Awareness Support on the Usability of Real-Time Distributed Groupware\"", "authors": ["C. Gutwin ", " S. Greenberg"]}, {"title": " \"Group Awareness in Distributed Software Development\"", "authors": ["C. Gutwin", " R. Penner ", " K. Schneider"]}, {"title": " \"Splitting the Organization and Integrating the Code: Conway's Law Revisited\"", "authors": ["J. Herbsleb ", " R. E. Grinter"]}, {"title": " \"Using Task Context to Improve Programmer Productivity\"", "authors": ["M. Kersten ", " G. C. Murphy"]}, {"title": " \"Predicting Failures with Developer Networks and Social Network Analysis\"", "authors": ["A. Meneely", " L. Williams", " W. Snipes ."]}, {"title": " \"Expertise Browser: A Quantitative Approach to Identifying Expertise\"", "authors": ["A. Mockus ", " J. Herbsleb"]}, {"title": " \"On the Criteria To Be Used in Decomposing Systems into Modules\"", "authors": ["D. L. Parnas"]}, {"title": " \"Parallel Changes in Large-Scale Software Development: An Observational Case Study\"", "authors": ["D. E. Perry", " H. P. Siy ", " L. G. Votta"]}, {"title": " \"Palantir: Raising Awareness among Configuration Management Workspaces\"", "authors": ["A. Sarma", " Z. Noroozi ", " A. van der Hoek"]}, {"title": " \"Supporting Distributed Software Development by Modes of Collaboration\"", "authors": ["T. Sch\u00fcmmer ", " J. M. Haake"]}, {"title": " \"The Misalignment of Product Architecture and Organizational Structure in Complex Product Development\"", "authors": ["M. E. Sosa", " S. D. Eppinger ", " C. R. Rowles"]}, {"title": " \"Change Sets versus Change Packages: Comparing Implementations of Change-Based SCM\"", "authors": ["W. D. Weber"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070959", "title": "The role of judgment in software estimation", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Scheduling", "Costs", "USA Councils", "Software engineering", "Software quality", "Feedback", "Programming", "Computer science", "Wideband", "Bayesian methods"], "abstract": "The consequences of poor (or good) judgment in estimation are reflected in software quality, cost, time-to-market, and operational reliability. While judgment plays a prominent role in aviation and medicine - the same care arguably needs to be taken in making tradeoffs impacting software development. This panel will bring together practitioners to discuss aspects of judgment in software estimation including a discussion of current practices and influences from other disciplines.", "author": [{"name": "Steven Fraser", "affiliation": "Panel Impresario, Cisco Research Center Cisco Systems, San Jose, CA, USA"}, {"name": "Barry Boehm", "affiliation": "USC Center\uc2a0for\uc2a0Software Engineering, Los Angeles, CA, USA"}, {"name": "Hakan Erdogmus", "affiliation": "National Research CouncilOttawa, Software Engineering Group, ONT, Canada"}, {"name": "Magne Jorgensen", "affiliation": "Simula Research Center, Lysaker, Norway"}, {"name": "Stan Rifkin", "affiliation": "Master Systems, Carlsbad, CA, USA"}, {"name": "Mike Ross", "affiliation": "R2 Estimating Limited Liability Company, Scottsdale, AZ, USA"}], "time": "May 2009", "citationCount": "2", "references": [{"title": " \"Software development effort estimation: Formal models or expert judgment?\" IEEE Software", "authors": ["J\u00f8rgensen", " M. ", " Barry Boehm", " B. W."]}, {"title": " \"Next Generation Software Estimating Framework: 25 Years and Thousands of Projects Later.\" Journal of Cost Analysis and Parametric", "authors": ["Ross", " M. A."]}]},
{"doi": "10.1109/MOMPES.2009.5069135", "title": "A formal type-centric framework for verification and resource allocation in pervasive Sense-and-Respond systems", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Resource management", "Safety", "Image resolution", "Computer science", "Tin", "Runtime", "Logic", "Image sensors", "Oceans", "Educational institutions"], "abstract": "A shared sense-and-respond infrastructure that is embedded into a physical environment requires considerable run-time support to facilitate the dynamic dispatch and execution of new service instances. Such an infrastructure must also be able to statically analyze new services in order to verify their safety and derive their specific resource requirements (i.e., prior to dispatch). Toward this goal we have developed a multi-dimensional type system for our pervasive sensory service composition language; this formalism extracts implicit constraints from service instances to verify an expanded notion of type safety. While our formal system is rigorous, it is light-weight and essentially transparent to a service programmer. The type-system automatically infers data types that are annotated with a vector of type specific attributes and uses these annotations to establish and verify a range of resource constraints (bounds for computation and memory usage, camera resolution requirements, etc.). In this paper we present an overview of our formal methodology, provide concrete examples of how these formalisms are used in practice (through service logic examples and derived constraint sets) and discuss the details of our implementation.", "author": [{"name": "Michael Ocean", "affiliation": "Computer Science, Endicott College, Beverly, MA, USA"}, {"name": "Assaf Kfoury", "affiliation": "Computer Science, Boston University, Boston, MA, USA"}, {"name": "Azer Bestavros", "affiliation": "Computer Science, Boston University, Boston, MA, USA"}], "time": "May 2009", "citationCount": "2", "references": []},
{"doi": "10.1109/SECSE.2009.5069157", "title": "Barely sufficient software engineering: 10 practices to improve your CSE software", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Software engineering", "Laboratories", "Software algorithms", "Software quality", "Research and development", "Application software", "Software libraries", "Automotive engineering", "Programming", "US Department of Energy"], "abstract": "Computational Science and Engineering (CSE) software is typically developed using research funding where the primary focus is research and development of advanced algorithms and modeling capabilities. As a result, formal software engineering is seldom a primary goal. CSE software developers intend to write good software, but often lack the training, resources or time to adopt advanced formal methods and practices. In this paper, we present a list of practices identified from the Trilinos project that we believe most CSE software teams can adopt and from which they can benefit.", "author": [{"name": "Michael A. Heroux", "affiliation": "Sandia National Laboratories, USA"}, {"name": "James M. Willenbring", "affiliation": "Sandia National Laboratories, USA"}], "time": "May 2009", "citationCount": "12", "references": [{"title": " \"Trilinos Home Page\"", "authors": ["M. A. Heroux"]}, {"title": "\"Agile Software Development Home Page\"", "authors": []}, {"title": " \"Subversion Home Page\"", "authors": ["Tigris.org"]}, {"title": "\"Concurrent Versions System Home Page\"", "authors": []}, {"title": " \"Git - Fast Version Control System Home Page\" http://git-scm.com", "authors": ["Scott Chacon"]}, {"title": " \"ViewVC Home Page\"", "authors": ["Tigris.org"]}, {"title": " \"Bonsai Project Home Page\"", "authors": ["Mozilla"]}, {"title": " \"Mailman", "authors": ["GNU"]}, {"title": " \"Home::Bugzilla::bugzilla.org Home Page\"", "authors": ["Mozilla"]}, {"title": " \"Doxygen Home Page\"", "authors": ["Dimitri van Heesch"]}, {"title": " \"Cmake - Cross Platform Make Home Page\"", "authors": ["Kitware"]}]},
{"doi": "10.1109/ICSE.2007.9", "title": "A Sound Assertion Semantics for the Dependable Systems Evolution Verifying Compiler", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Virtual colonoscopy", "Software prototyping", "Java", "Prototypes", "Runtime", "Software tools", "Error correction", "Costs", "Performance analysis", "Software engineering"], "abstract": "The verifying compiler (VC) project is a core component of the dependable systems evolution grand challenge. The VC offers the promise of automatically proving that a program or component is correct, where correctness is defined by program assertions. While several VC prototypes exist, all adopt a semantics for assertions that is unsound. This paper presents a consolidation of VC requirements analysis activities that, in particular, brought us to ask targeted VC customers what kind of semantics they wanted. Taking into account both practitioners' needs and current technological factors, we offer recovery of soundness through an adjusted definition of assertion validity that matches user expectations and can be implemented practically using current prover technology. We describe how support for the new semantics has been added to ESC/Java2. Preliminary results demonstrate the effectiveness of the new semantics at uncovering previously indiscernible specification errors.", "author": [{"name": "Patrice Chalin", "affiliation": "Dependable Software Research Group, Concordia University, Canada"}], "time": "May 2007", "citationCount": "4", "references": [{"title": " \"The Spec# Programming System: An Overview\". In G. Barthe", "authors": ["M. Barnett", " K. R. M. Leino", " ", " W. Schulte"]}, {"title": " \"The verified software repository: a step towards the verifying compiler\"", "authors": ["J. C. Bicarregui", " C. A. R. Hoare", " ", " J. C. P. Woodcock"]}, {"title": " \"Are Practitioners Writing Contracts?\" in Rigorous Development of Complex Fault-Tolerant Systems", "authors": ["P. Chalin"]}, {"title": " \"Early Detection of JML Specification Errors using ESC/Java2\". Workshop on the Specification and Verification of Component-Based Systems", "authors": ["P. Chalin"]}, {"title": " \"Are the Logical Foundations of Verifying Compiler Prototypes Matching User Expectations?\" Formal Aspects of Computing", "authors": ["P. Chalin"]}, {"title": " \"Beyond Assertions: Advanced Specification and Verification with JML and ESC/Java2\". Int. Symposium on Formal Methods for Components and Objects", "authors": ["P. Chalin", " J. Kiniry", " G. T. Leavens", " ", " E. Poll"]}, {"title": " \"XChek: A Multi-valued Model-Checker\". 14th International Conference on Computer Aided Verification", "authors": ["M. Chechik", " A. Gurfinkel", " ", " B. Devereux"]}, {"title": " \"ESC/Java2: Uniting ESC/Java and JML\". In G.Barthe", "authors": ["D.R.Cok ", " J.R.Kiniry"]}, {"title": " \"Safe Object-Oriented Software: The Verified Design-By-Contract Paradigm\"", "authors": ["D. Crocker"]}, {"title": " \"Why Universities Require Computer Science Students To Take Math\"", "authors": ["K.Devlin"]}, {"title": " \"Understanding the Process of Information Technology Implementation\". Americas Conf. on Inf. Sys", "authors": ["M. R. Fish ", " J. A. Turner"]}, {"title": " \"Extended static checking for Java\". Conference on Prog. Language Design and Implementation", "authors": ["C. Flanagan", " K. R. M. Leino", " M. Lillibridge", " G. Nelson", " J. B. Saxe", " ", " R. Stata"]}, {"title": " \"Avoiding the Undefined by Underspecification\"", "authors": ["D. Gries ", " F. B. Schneider"]}, {"title": " \"Predicative programming - A survey\". Conf. Formal Methods in Prog. and Their Applications", "authors": ["J. Grundy"]}, {"title": " \"Many-Valued Logic", "authors": ["R. H\u00e4hnle"]}, {"title": " \"HealthCare CIO Results: Key Trends Index\"", "authors": ["HIMSS"]}, {"title": " \"The Verifying Compiler: A Grand Challenge for Computing Research\"", "authors": ["C.A.R.Hoare"]}, {"title": " \"Vision of a Grand Challenge project\". IFIP Working Conf. - Verified Software: Theories", "authors": ["T. Hoare ", " J. Misra"]}, {"title": " \"Verified Software: A Grand Challenge\"", "authors": ["C.Jones", " P.O'Hearn", " ", " J.Woodcock"]}, {"title": " \"A Typed Logic of Partial Functions Reconstructed Classically\"", "authors": ["C. B. Jones ", " C. A. Middelburg"]}, {"title": " \"Two Over Three: A Two-Valued Logic for Software Specification and Validation Over a Three-Valued Predicate Calculus\"", "authors": ["B. Konikowska"]}, {"title": " \"A three-valued logic for software specification and validation\"", "authors": ["B. Konikowska", " A. Tarlecki", " ", " A. Blikle"]}, {"title": " \"From Hospital Information Systems to Health Information Systems: Problems", "authors": ["K.A.Kuhn ", " D.A.Guise"]}, {"title": " \"Introduction to Overture\". 1 Overture Workshop", "authors": ["P. G. Larsen ", " N. Plat"]}, {"title": " \"Design by Contract with JML\"", "authors": ["G. T. Leavens ", " Y. Cheon"]}, {"title": " \"How the design of JML accommodates both runtime assertion checking and formal verification\"", "authors": ["G.T. Leavens", " Y. Cheon", " C. Clifton", " C. Ruby", " ", " D.R. Cok"]}, {"title": " \"JML Reference Manual\"", "authors": ["G. T. Leavens", " E. Poll", " C. Clifton", " Y. Cheon", " C. Ruby", " D. Cok", " P. M\u00fcller", " J. Kiniry", " ", " P. Chalin"]}, {"title": " \"Protective Interface Specifications\" ", "authors": ["G.T.Leavens ", " J.M.Wing"]}, {"title": " \"Ecstatic: An object-oriented programming language with an axiomatic semantics\". Workshop on Foundations of OO Languages", "authors": ["K.R.M. Leino"]}, {"title": " \"Checking Java programs via guarded commands\"", "authors": ["K.R.M. Leino", " J.B. Saxe", " ", " R Stata"]}, {"title": " \"Applying Design by Contract\"", "authors": ["B. Meyer"]}, {"title": " \"Non-deterministic expressions and predicate transformers\"", "authors": ["J. M. Morris"]}, {"title": " \"Modular invariants for layered object structures\"", "authors": ["P. M\u00fcller", " A. Poetzsch-Heffter", " ", " G. T. Leavens"]}, {"title": " \"Parametric shape analysis via 3-valued logic\"", "authors": ["M. Sagiv ", " T. Reps"]}, {"title": " \"Deciding the Future for IS Failures: Not the Choice You Might Think\"", "authors": ["C. Sauer"]}, {"title": " \"The PVS Specification and Verification System\"", "authors": ["SRI International"]}, {"title": " \"CHAOS: A Recipe for Success\"", "authors": ["St", "ish Group"]}, {"title": " \"CHAOS Third Quarter Research Report\"", "authors": ["St", "ish Group"]}, {"title": " \"Managerial Issues for the Consideration and Use of Formal Methods\". In K.Araki", "authors": ["D.C.Stidolph ", " J.Whitehead"]}, {"title": " \"IT Projects: Sink or Swim?\" The Computer Bulletin", "authors": ["A. Taylor"]}, {"title": " \"Omnibus: A clean language for supporting DBC", "authors": ["T. Wilson ", " S. Maharaj"]}, {"title": " \"A two-tiered approach to specifying programs\"", "authors": ["J.M. Wing"]}, {"title": " \"Writing Larch Interface Language Specifications\"", "authors": ["J.M. Wing"]}, {"title": " \"Dependable Systems Evolution: A Grand Challenge for Computer Science\". May 26", "authors": ["J. C. P. Woodcock"]}]},
{"doi": "10.1109/TEFSE.2009.5069576", "title": "Towards traceability from project management to system models", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Project management", "Computer aided software engineering", "Software engineering", "Navigation", "Software tools", "Scheduling", "Conferences", "Impedance", "Books", "Automation"], "abstract": "Traceability is commonly known as the ability to describe and follow links between artifacts, e.g. between requirements and their corresponding part of the system design. These links are typically inside of the system specification. Very few approaches consider traceability between the system specification and project management artifacts. By introducing links between these two models, a task can be traced to the system model elements it is related to. This paper proposes a unified model, which explicitly combines project management models and system specification models to enable traceability. We introduce and discuss the following key concepts, which are currently evaluated in a case study: (1) Ability to navigate between tasks and the according part of the specification, (2) Project management status aggregation by system specification artifacts, (3) Use of entities from the system model for project planning, (4) Unified model validation.", "author": [{"name": "Jonas Helming", "affiliation": "Institut f\u00fcr Informatik, Applied Software Engineering, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Maximilian Koegel", "affiliation": "Institut f\u00fcr Informatik, Applied Software Engineering, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Helmut Naughton", "affiliation": "Institut f\u00fcr Informatik, Applied Software Engineering, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " \"Recovering traceability links in software artifact management systems using information retrieval methods", "authors": ["A.D. Lucia", " F. Fasano", " R. Oliveto", " und G. Tortora"]}, {"title": " \"An analysis of the requirements traceability problem", "authors": ["O. Gotel und C. Finkelstein"]}, {"title": " \"Traceability\"", "authors": ["J. D. PALMER", " 2000"]}, {"title": " \"Integrating system analysis and project management tools\"", "authors": ["R. Gelbard", " N. Pliskin", " I. Spiegler"]}, {"title": " \"Process integration in CASE environments", "authors": ["P. Mi ", " W. Scacchi"]}, {"title": " \"The case for user-centered CASE tools", "authors": ["S. Jarzabek ", " R. Huang"]}, {"title": " \"Integrated solution engineering", "authors": ["L. Gong", " T. Klinger", " P. Matchen", " P. Tarr", " R. Uceda-Sosa", " A. Ying", " J. Xu", " ", " X. Zhou"]}, {"title": "\"IBM Rational RequisitePro Help", "authors": []}, {"title": " \"Monitoring Requirements Coverage using Reconstructed Views: An Industrial Case Study", "authors": ["Marco Lormans", " Hans-Gerhard Gross", " Arie van Deursen", " Rini van Solingen", " ", " Andr\u00e9 Stehouwer"]}]},
{"doi": "10.1109/ICSE.2009.5070506", "title": "HOLMES: Effective statistical debugging via efficient path profiling", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Debugging", "Computer bugs", "Programming profession", "Computer crashes", "Statistical analysis", "Software testing", "Benchmark testing", "Sampling methods", "Optimization", "Instruments"], "abstract": "Statistical debugging aims to automate the process of isolating bugs by profiling several runs of the program and using statistical analysis to pinpoint the likely causes of failure. In this paper, we investigate the impact of using richer program profiles such as path profiles on the effectiveness of bug isolation. We describe a statistical debugging tool called HOLMES that isolates bugs by finding paths that correlate with failure. We also present an adaptive version of HOLMES that uses iterative, bug-directed profiling to lower execution time and space overheads. We evaluate HOLMES using programs from the SIR benchmark suite and some large, real-world applications. Our results indicate that path profiles can help isolate bugs more precisely by providing more information about the context in which bugs occur. Moreover, bug-directed profiling can efficiently isolate bugs with low overheads, providing a scalable and accurate alternative to sparse random sampling.", "author": [{"name": "Trishul M. Chilimbi", "affiliation": "Microsoft Research Redmond, USA"}, {"name": "Ben Liblit", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Krishna Mehra", "affiliation": "Microsoft Research India, India"}, {"name": "Aditya V. Nori", "affiliation": "Microsoft Research India, India"}, {"name": "Kapil Vaswani", "affiliation": "Microsoft Research India, India"}], "time": "May 2009", "citationCount": "107", "references": [{"title": " \"Measuring coupling and cohesion of software modules: an informationtheory approach\"", "authors": ["E. B. Allen", " T. M. Khoshgoftaar ", " Y. Chen"]}, {"title": " \"Improving data\u2013flow analysis with path profile\"", "authors": ["G. Ammons ", " J. R. Larus"]}, {"title": " \"A framework for reducing the cost of instrumented code\"", "authors": ["M. Arnold ", " B. Ryder"]}, {"title": " \"Statistical debugging using compound Boolean predicates\"", "authors": ["P. Arumuga Nainar", " T. Chen", " J. Rosin ", " B. Liblit"]}, {"title": " \"Efficient path profiling\"", "authors": ["T. Ball ", " J. R. Larus"]}, {"title": " \"From symptom to cause: localizing errors in counterexample traces\"", "authors": ["T. Ball", " M. Naik ", " S. K. Rajamani"]}, {"title": " \"The dynamic function coupling metric and its use in software evolution\"", "authors": ["A. Beszedes", " T. Gergely", " S. Farago", " T. Gyimothy ", " F. Fischer"]}, {"title": " \"Quantifying the effectiveness of testing via efficient residual path profiling\"", "authors": ["T. M. Chilimbi", " A. V. Nori ", " K. Vaswani"]}, {"title": " \"Locating causes of program failures\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"Bursty tracing: A framework for low overhead temporal profiling\"", "authors": ["M. Hirzel ", " T. M. Chilimbi"]}, {"title": " \"Context-aware statistical debugging: From bug predictors to faulty control flow paths\"", "authors": ["L. Jiang ", " Z. Su"]}, {"title": " \"Empirical evaluation of the tarantula automatic fault\u2013localization technique\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"Visualization of test information to assist fault localization\"", "authors": ["J. A. Jones", " M. J. Harrold ", " J. Stasko"]}, {"title": " \"Bug isolation via remote program sampling\"", "authors": ["B. Liblit", " A. Aiken", " A. X. Zheng ", " M. I. Jordan"]}, {"title": " \"Scalable statistical bug isolation\"", "authors": ["B. Liblit", " M. Naik", " A. X. Zheng", " A. Aiken ", " M. I. Jordan"]}, {"title": " \"Sober: Statistical model\u2013based bug localization\"", "authors": ["C. Liu", " X. Yan", " L. Fei", " J. Han ", " S. Midkiff"]}, {"title": " \"Distinguished Engineer\"", "authors": ["M. C. M. Fortin"]}, {"title": " \"Preferential path profiling: compactly numbering interesting paths\"", "authors": ["K. Vaswani", " A. V. Nori ", " T. M. Chilimbi"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070960", "title": "Model checking flight control systems: The Airbus experience", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Aerospace control", "System testing", "Formal verification", "Software testing", "Aircraft", "Embedded system", "Formal languages", "Air safety", "Aerospace safety", "Electrical equipment industry"], "abstract": "This paper presents experiments realized by Airbus on model checking a safety critical system, lessons learnt and ways forward to extend the industrial use of formal verification at design level.", "author": [{"name": "Thomas Bochot", "affiliation": "Onera/dtim, Toulouse, France"}, {"name": "Pierre Virelizier", "affiliation": "Airbus France, Toulouse, France"}, {"name": "Helene Waeselynck", "affiliation": "Laas-cnrs, Universit\u00e9 de Toulouse, Toulouse, France"}, {"name": "Virginie Wiels", "affiliation": "Onera/dtim, Toulouse, France"}], "time": "May 2009", "citationCount": "19", "references": [{"title": " \"Formal verification workbench for Airbus avionics software", "authors": ["S. Duprat", " J. Souyris", " D. Favre-F\u00e9lix"]}, {"title": " \"Proving the shalls - early validation of requirements through formal methods", "authors": ["S. Miller", " A. Tribble", " M. Whalen", " M. Heimdahl"]}, {"title": " and P. Raymond. \"Synchronous observers and the verification of reactive systems", "authors": ["H. Halbwachs", " F. Lagnier"]}, {"title": " \"Using formal verification techniques to reduce simulation and test effort", "authors": ["O. Laurent", " P. Michel ", " V. Wiels"]}, {"title": " \"Formal modelling and automatic verification of lustre programs using NP-Tools", "authors": ["M. Ljung"]}, {"title": " \"A tutorial on Stalmarck's proof procedure for propositional logic", "authors": ["M. Sheeran", " G. Stalmarck"]}, {"title": " \"AIRBUS Fly-By-Wire: A Process Toward Total Dependability", "authors": ["P. Traverse", " I. Lacaze", " J. Souyris"]}, {"title": " \"An invitation to formal methods", "authors": ["H. Saiedian (Ed.)"]}, {"title": " \"The synchronous dataflow programming language Lustre\"", "authors": ["N. Halbwachs", " P. Caspi", " P. Raymond", " D. Pilaud"]}]},
{"doi": "10.1109/MOMPES.2009.5069136", "title": "Verification of an abstract component using communication patterns", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Design engineering", "Safety", "Reliability engineering", "Computer science", "Embedded system", "Pattern analysis", "Concrete", "System recovery", "Process design", "Educational programs"], "abstract": "Model-driven development and verification approaches are highly desirable in embedded systems development since they help identify functional or non-functional issues in the early stage of development when verification complexity is relatively lower than that of the implemented system. Nevertheless, typical model-driven verification approaches focus mainly on functional aspects, leaving the communication behavior largely under-specified. This paper anticipates that understanding and specifying communication mechanism is important in modeling as well as analysis, and suggests a set of communication patterns categorized by the level of abstraction, message handling mechanisms, and buffering strategies. Design of a component may start with the specification of an abstract component with the default communication pattern, which can be recursively verified and refined. Using communication patterns helps us improve the separation of concerns and facilitating smooth transition of a component design from an abstract function-oriented component to a concrete component with detailed communication behavior.", "author": [{"name": "Yunja Choi", "affiliation": "School of Electrical Engineering and Computer Science, Kyungpook National University, Daegu, South Korea"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/SECSE.2009.5069158", "title": "An empirical characterization of scientific software development projects according to the Boehm and Turner model: A progress report", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Programming", "Software testing", "Iterative methods", "Councils", "Information systems", "Collaboration", "Software engineering", "Collaborative work", "Automatic testing", "Bioinformatics"], "abstract": "A number of recent studies reported on the success of applying agile methods in scientific software development projects. These studies found that agile methods are well suited to the exploratory, iterative, and collaborative nature of scientific inquiry. However, these findings might not be applicable in all situations pertaining to scientific software development projects. In addition, they only constitute a subset of the important factors while deciding which development methods and practices should be adopted. Therefore, it becomes important to conduct further research before making recommendations regarding the adoption of certain development methods and practices in this domain. In this progress report, we discuss our on-going research that will empirically study the characteristics of various scientific software development projects according to a model suggested by Boehm and Turner. We plan to conduct interviews and collect data from various scientific software development projects in the Baltimore-Washington area. We expect that our qualitative results will increase our understanding of the characteristics in those projects favoring plan-driven approaches or agile methods, and the needs and conditions associated with those characteristics. Our research provides guidance to scientific software developers by enhancing their capacity to evaluate and understand their own project characteristics and select effective software practices. As a long-term benefit in the same direction, our qualitative results will generate a set of hypotheses that can be tested in different project environments to better understand and categorize scientific software development projects. Consequently, in the future, more generalizable and actionable recommendations can be made for scientific software development projects.", "author": [{"name": "Carlton A. Crabtree", "affiliation": "UMBC, Department of Information Systems, Baltimore, MD, USA"}, {"name": "A. Gunes Koru", "affiliation": "UMBC, Department of Information Systems, Baltimore, MD, USA"}, {"name": "Carolyn Seaman", "affiliation": "UMBC, Department of Information Systems, Baltimore, MD, USA"}, {"name": "Hakan Erdogmus", "affiliation": "National Research Council of Canada (NRC/CNRC), Ottawa, Ontario, Canada"}], "time": "May 2009", "citationCount": "4", "references": [{"title": " \"Scientific Software Development at a Research Facility\"", "authors": ["K.S. Ackroyd", " S. H. Kinder", " G. R. Mant", " M.C. Miller", " C.A. Ramsdale ", " P.C. Stephenson"]}, {"title": " \"Understanding the High-Performance-Computing Community: A Software Engineer's Perspective\"", "authors": ["V. R Basili.", " J. C. Carver", " D. Cruzes", " L. M. Hochstein", " J. K. Hollingsworth", " F. Shull", " ", " M. V. Zelkowitz"]}, {"title": " \"Using grounded theory to understand software process improvement: A study of Irish software product companies\"", "authors": ["C. Coleman", " R. O'Conner"]}, {"title": " \"Agile methods in biomedical software development: a multi-site experience report\"", "authors": ["D.W. Kane", " M.M. Hohman", " E. G. Cerami", " M. W. McCormick", " K.F.Kuhlmman", " J. A. Byrd"]}, {"title": " \"Dealing with Risk in Scientific Software Development\"", "authors": ["R. S", "ers", " D. Kelly", " 2008"]}, {"title": "C. B. Seaman. \"Qualitative Methods in Empirical Studies of Software Engineering\"", "authors": []}, {"title": " \"Developing Scientific Software\"\"", "authors": ["J. Segal", " C. Morris"]}, {"title": " \"When Engineers Met Research Scientists: A Case Study\". Empirical Softw. Engg. 10", "authors": ["J. Segal"]}, {"title": " \"Models of Scientific Software Development", "authors": ["J. Segal"]}, {"title": " \"Exploring XP for Scientific Research\"", "authors": ["W.A. Wood ", " W. L. Kleb"]}]},
{"doi": "10.1109/ICSE.2007.21", "title": "Behaviour Model Synthesis from Properties and Scenarios", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Bridges", "Educational institutions", "Programming", "System analysis and design", "Analytical models", "Buildings", "Animation", "Upper bound", "Software safety", "Software engineering"], "abstract": "Synthesis of behaviour models from software development artifacts such as scenario-based descriptions or requirements specifications not only helps significantly reduce the effort of model construction, but also provides a bridge between approaches geared toward requirements analysis and those geared towards reasoning about system design at the architectural level. However, the models favoured by existing synthesis approaches are not sufficiently expressive to describe both universal constraints provided by requirements and existential statements provided by scenarios. In this paper, we propose a novel synthesis technique that constructs behaviour models in the form of modal transition systems (MTS) from a combination of safety properties and scenarios. MTSs distinguish required, possible and proscribed behaviour, and their elaboration not only guarantees the preservation of the properties and scenarios used for synthesis but also supports further elicitation of new requirements.", "author": [{"name": "Sebastian Uchitel", "affiliation": "Imperial College London, London, UK"}, {"name": "Greg Brunet", "affiliation": "Imperial College London, London, UK"}, {"name": "Marsha Chechik", "affiliation": "University of Toronto, Toronto, ONT, Canada"}], "time": "May 2007", "citationCount": "37", "references": [{"title": "G. Brunet. \"A Characterization of Merging Partial Behavioural Models\". Master's thesis", "authors": []}, {"title": " and A. van Lamsweerde. \"Scenarios", "authors": ["C. Damas", " B. Lambeau"]}, {"title": "D. Giannakopoulou and J. Magee. \"Fluent Model Checking for Event-Based Systems\". In ESEC/FSE'03", "authors": []}, {"title": " and B. G. Labaw. \"Automated Consistency Checking of Requirements Specifications\". ACM TOSEM", "authors": ["C. L. Heitmeyer", " R. D. Jeffords"]}, {"title": " and M. Roveri. \"Formal Verification of Requirements using SPIN: A Case Study on Web Services\". In SEFM'04", "authors": ["R. Kazhamiakin", " M. Pistore"]}, {"title": " and A. van Lamsweerde. \"Deriving Tabular Event-Based Specifications from Goal-Oriented Requirements Models\". In RE'03", "authors": ["R. D. L", "tsheer", " E. Letier"]}, {"title": "K. Larsen and B. Thomsen. \"A Modal Process Logic\". In LICS'88", "authors": []}, {"title": " and S. Uchitel. \"Deriving Event-Based Transition Systems from Goal-Oriented Requirements Models\". Technical Report 02/2006", "authors": ["E. Letier", " J. Kramer", " J. Magee"]}, {"title": "E. Letier and A. van Lamsweerde. \"Deriving Operational Software Specifications from System Goals\". In FSE'02", "authors": []}, {"title": "J. Magee and J. Kramer. \"Concurrency - State Models and Java Programs\". John Wiley", "authors": []}, {"title": " and H. T. Van. \"Early Verification and Validation of Mission-Critical Systems\". In FMICS'04", "authors": ["C. Ponsard", " P. Massonet", " A. Rifaut", " J. Molderez", " A. van Lamsweerde"]}, {"title": "S. Uchitel and M. Chechik. \"Merging Partial Behavioural Models\". In FSE'04", "authors": []}, {"title": " and J. Magee. \"Incremental Elaboration of Scenario-Based Specifications and Behaviour Models using Implied Scenarios\". ACM TOSEM", "authors": ["S. Uchitel", " J. Kramer"]}, {"title": " and C. Ponsard. \"Goal-Oriented Requirements Animation\". In RE'04", "authors": ["H. T. Van", " A. van Lamsweerde", " P. Massonet"]}, {"title": "A. van Lamsweerde. \"Goal-Oriented Requirments Engineering: From System Objectives to UML Models to Precise Software Specifications\". In ICSE'03", "authors": []}, {"title": "A. van Lamsweerde and E. Letier. \"Handling Obstacles in Goal-Oriented Requirements Engineering\". IEEE TSE", "authors": []}]},
{"doi": "10.1109/TEFSE.2009.5069577", "title": "TQL: A query language to support traceability", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Database languages", "XML", "Safety", "Testing", "Linux", "Kernel", "Joining processes", "Conferences"], "abstract": "A query language for traceability is proposed and presented. The language, TQL, is based in XML and supports queries across multiple artifacts and multiple traceability link types. A number of primitives are defined to allow complex queries to be constructed and executed. Example queries are presented in the context of traceability questions. The technical details of the language and issues of implementation are discussed.", "author": [{"name": "Jonathan I. Maletic", "affiliation": "Kent University, Kent, OH, USA"}, {"name": "Michael L. Collard", "affiliation": "Kent University, Kent, OH, USA"}], "time": "May 2009", "citationCount": "15", "references": [{"title": " \"Experiments in the Use of XML to Enhance Traceability between Object-Oriented Design Specifications and Source Code\"", "authors": ["Alves-Foss", " J.", " deLeon", " D. C.", " ", " Oman", " P."]}, {"title": " \"Chimera: Hypermedia for Heterogeneous Software Development Environments\"", "authors": ["Anderson", " M. K.", " Taylor", " N. R.", " ", " Whitehead", " J. E."]}, {"title": " \"Toward Improved Traceability of Non-Functional Requirements\"", "authors": ["Clel", "-Huang", " J."]}, {"title": " \"An XML-Based Lightweight C++ Fact Extractor\"", "authors": ["Collard", " M. L.", " Kagdi", " H. H.", " ", " Maletic", " J. I."]}, {"title": " \"Experiments on Processing and Linking Semantically Augmented Requirements Specifications\"", "authors": ["DeLeon", " D. C. ", " Alves-Foss", " J."]}, {"title": " \"Lightweight Checking for UML Based Software Development\"", "authors": ["Gryce", " C.", " Finkelstein", " A.", " ", " Nentwich", " C."]}, {"title": " \"Maintainability Prediction: A Regression Analysis of Measures of Evolving Systems\"", "authors": ["Hayes", " J. H. ", " Zhao", " L."]}, {"title": " \"Tracing Evolution Changes of Software Artifacts through Model Synchronization\"", "authors": ["Ivkovic", " I. ", " Kontogiannis", " K."]}, {"title": " \"An XML-Based Approach to Support the Evolution of Model-to-Model Traceability Links\"", "authors": ["Maletic", " J. I.", " Collard", " M. L.", " ", " Simoes", " B."]}, {"title": " \"xlinkit: A Consistency Checking and Smart Link Generation Service\"", "authors": ["Nentwich", " C.", " Capra", " L.", " Emmerich", " W.", " ", " Finkelstein", " A."]}, {"title": " \"Incremental Maintenance of Software Artifacts\"", "authors": ["Reiss", " P. S."]}, {"title": " \"Supporting Evolutionary Development by Feature Models and Traceability Links\"", "authors": ["Riebisch", " M."]}, {"title": " \"Using Fine-Grained Differencing to Evolve Traceability Links\"", "authors": ["Sharif", " B. ", " Maletic", " J. I."]}, {"title": " \"A Framework for Mapping Traceability Relationships\"", "authors": ["Sherba", " S.", " Anderson", " A.", " ", " Faisal", " M."]}, {"title": " \"Change-Oriented Requirements Traceability. Support for Evolution of Embedded Systems\"", "authors": ["von Knethen", " A."]}, {"title": " \"Using XML to Build Consistency Rules for Distributed Specifications\"", "authors": ["Zisman", " A.", " Emmerich", " W.", " ", " Finkelstein", " A."]}]},
{"doi": "10.1109/ICSE.2009.5070507", "title": "Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Testing", "Debugging", "Fault detection", "Cities and towns", "Costs", "Genetic mutations", "Software maintenance", "Councils", "Fault diagnosis"], "abstract": "Recent techniques for fault localization leverage code coverage to address the high cost problem of debugging. These techniques exploit the correlations between program failures and the coverage of program entities as the clue in locating faults. Experimental evidence shows that the effectiveness of these techniques can be affected adversely by coincidental correctness, which occurs when a fault is executed but no failure is detected. In this paper, we propose an approach to address this problem. We refine code coverage of test runs using control- and data-flow patterns prescribed by different fault types. We conjecture that this extra information, which we call context patterns, can strengthen the correlations between program failures and the coverage of faulty program entities, making it easier for fault localization techniques to locate the faults. To evaluate the proposed approach, we have conducted a mutation analysis on three real world programs and cross-validated the results with real faults. The experimental results consistently show that coverage refinement is effective in easing the coincidental correctness problem in fault localization techniques.", "author": [{"name": "Xinming Wang", "affiliation": "Department of Computer Science & Engineering, HKUST, Hong Kong, China"}, {"name": "S.C. Cheung", "affiliation": "Department of Computer Science & Engineering, HKUST, Hong Kong, China"}, {"name": "W.K. Chan", "affiliation": "Department of Computer Science, City University of Hong Kong, Hong Kong, China"}, {"name": "Zhenyu Zhang", "affiliation": "Department of Computer Science & Engineering, HKUST, Hong Kong, China"}], "time": "May 2009", "citationCount": "67", "references": [{"title": " \"On the accuracy of spectrum-based fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. C. van Gemund"]}, {"title": " \"Dynamic program slicing\"", "authors": ["H. Agrawal ", " J.R. Horgan"]}, {"title": " \"Fault Localization using Execution Slices and Dataflow Tests\"", "authors": ["H. Agrawal", " J. Horgan", " S. Lodon ", " W. Wong"]}, {"title": " \"Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria\"", "authors": ["J.H. Andrews", " L.C. Bri", " "]}, {"title": " \"Improving test suites for efficient fault localization\"", "authors": ["B. Baudry", " F. Fleurey ", " Y. Le Traon"]}, {"title": " \"Debugging Heterogeneous Distributed Systems using Event-based Models of Behavior\"", "authors": ["P.C. Bates"]}, {"title": " \"Automatic functional test generation using the extended finite state machine model\"", "authors": ["K.T. Cheng ", " A.S. Krishnakumar"]}, {"title": " \"Locating Causes of Program Failures\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"Lightweight Detect Localization for Java\"", "authors": ["V. Dallmeier", " C. Lindig ", " A. Zeller"]}, {"title": " \"Proteum-A Tool for the Assessment of Test Adequacy for C Programs\"", "authors": ["M.E. Delamaro ", " J.C. Maldonado"]}, {"title": " \"Software Error Analysis: A Real Case Study Involving Real Faults and Mutations\"", "authors": ["M. Daran"]}, {"title": " \"Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact\"", "authors": ["H.S. Do", " S.G. Elbaum ", " G. Rothermel"]}, {"title": " \"Emulation of Software Faults: A Field Data Study and a Practical Approach\"", "authors": ["J.A. Dur\u00e3es ", " H.S. Madeira"]}, {"title": " \"Preventing untestedness in dataflow testing\"", "authors": ["I. Forg\u00e1cs ", " A. Bertolino"]}, {"title": " \"Avoiding coincidental correctness in boundary value analysis\"", "authors": ["R.M. Hierons"]}, {"title": " \"Data flow coverage and the C Language\"", "authors": ["J.R. Horgan ", " S. London"]}, {"title": " \"Experiments of the Effectiveness of Dataflow and Controlflow Based Test Adequacy Criteria\"", "authors": ["M. Hutchins", " H. Foster", " T. Goradia ", " T. Ostr"]}, {"title": " \"Fault Localization Using Visualization of Test Information\"", "authors": ["J.A. Jones", " M.J. Harrold ", " J. Stasko"]}, {"title": " \"Empircal Evaluation of the Tarantula Automatic Fault-Localization Technique\"", "authors": ["J.A. Jones ", " M.J. Harrold"]}, {"title": " \"Memories of Bug Fixes\"", "authors": ["S.H. Kim", " K. Pan ", " E.E.J. Whitehead"]}, {"title": " \"Bug isolation via remote program sampling\"", "authors": ["B. Liblit", " A. Aiken", " A.X. Zheng ", " M. I. Jordan"]}, {"title": " \"Statistical Debugging: a Hypothesis Testing-Based Approach\"", "authors": ["C. Liu", " L. Fei", " X.F. Yan", " J.W. Han ", " S. Midkiff"]}, {"title": " \"The Weak Mutation Hypothesis\"", "authors": ["B. Marick"]}, {"title": " \"Faults of Omission\"", "authors": ["B. Marick"]}, {"title": " \"Fault Localization With Nearest Neighbor Queries\"", "authors": ["M. Renieris ", " S. Reiss"]}, {"title": " \"An Analysis of Test Selection Criterria Using the RELAY Model of Fault Detection\"", "authors": ["D", " J. Richardson ", " M.C. Thompson"]}, {"title": " \"Expertise in Debugging Compute Programs\"", "authors": ["I. Vessey"]}, {"title": " \"Applying a Dynamic Testability Technique to Debugging Certain Classes of Software Faults\"", "authors": ["J.M. Voas ", " K.W. Miller"]}, {"title": " \"An Empirical Study of the Effects of Test-Suite Reduction on Fault Localization\"", "authors": ["Y.B. Yu", " J.A. Jones ", " M.J. Harrold"]}, {"title": " \"Taming Coincidental Correctness: Refine Code Coverage with Context Pattern to Improve Fault Localization\"", "authors": ["X.M. Wang", " S.C. Cheung", " W.K. Chan ", " Z.Y. Zhang"]}, {"title": " \"Effective Fault Localization using Code Coverage\"", "authors": ["E. Wong", " Y. Qi", " L. Zhao ", " K.Y. Cai"]}, {"title": " \"Effective program debugging based on execution slices and inter-block data dependency\"", "authors": ["E. Wong ", " Y. Qi"]}, {"title": " \"Towards locating execution omission errors\"", "authors": ["X.Y. Zhang", " S. Tallam", " N. Gupta ", " R. Gupta"]}, {"title": " \"Isolating cause-effect chains from computer programs\"", "authors": ["A. Zeller"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070961", "title": "Extracting, specifying and predicting software system properties in component based real-time embedded software development", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software systems", "Real time systems", "Embedded software", "Embedded system", "Timing", "Data mining", "Programming", "Automotive engineering", "Engines", "Control systems"], "abstract": "Bosch has established Component Based Software Development (CBSD) for automotive systems, which are resource constrained real-time embedded systems such as engine control systems. Classical CBSD approaches enable effective software reuse mainly in functional aspects by managing complexity with abstraction and encapsulation. However, to fully exploit the advantages of CBSD for real-time embedded systems, non-functional system properties such as timing and memory usage need to be addressed by the underlying component model. It is important that non-functional properties have a certain degree of precision to ensure hardware dimensioning and cost optimization for such systems. Static analysis methods used to extract or analyze nonfunctional properties (e.g., worst case execution time) in most cases introduce overestimation which is a hindrance for accurate prediction of non-functional properties. Therefore, accurate prediction of system properties requires specifying semantic context information such as modes in the component model to reduce overestimation. This paper describes how we extend the Bosch software component model to specify non-functional component properties with modes information. We demonstrate how mode dependent timing behavior is automatically extracted from the software, specified in the component specification and used for analysis and prediction in real-time embedded systems. This paper shows that semantic context information such as modes enhances performance analysis and prediction by ruling out infeasible worst-case situations that lead to overly conservative performance predictions.", "author": [{"name": "Ji Eun Kim", "affiliation": "Research and Technology Center, Bosch LLC, Pittsburgh, USA"}, {"name": "Oliver Rogalla", "affiliation": "Corporate Research, Robert Bosch GmbH, Schwieberdingen, Germany"}, {"name": "Simon Kramer", "affiliation": "Corporate Research, Robert Bosch GmbH, Schwieberdingen, Germany"}, {"name": "Arne Hamann", "affiliation": "Corporate Research, Robert Bosch GmbH, Schwieberdingen, Germany"}], "time": "May 2009", "citationCount": "7", "references": [{"title": " \"A Backbone in Automotive Software Development Based on XML and ASAM/MSR\"", "authors": ["B. Weichel ", " M. Herrmann"]}, {"title": " \"Software Behavior Description of Real-Time Embedded Systems in Component Based Software Development\"", "authors": ["J. Kim "]}, {"title": " \"Worst-Case Execution Time - A tool Provider's Perspective\"", "authors": ["C. Ferdin", " "]}, {"title": " \"Building reliable component-based software systems\"", "authors": ["I. Crnkovic ", " M. Larsson"]}, {"title": " \"Artificial Intelligence - A Modern Approach\"", "authors": ["S. Russel ", " P. Norvig"]}, {"title": " \"The SAE Architecture Analysis and Design Language Standard\"", "authors": ["P. Feiler"]}, {"title": " \"ERCOS: An Operating System for Automotive Applications\"", "authors": ["S. Poledna "]}, {"title": " \"Diesel-Engine Management 4th Edition\"", "authors": ["Robert Bosch GmbH"]}, {"title": " K. Richter and R. Ernst. \"System Level Performance Analysis - the SymTA/S Approach.\" In Proceedings Computers and Digital Techniques 2005", "authors": ["R. Henia", " A. Hamann", " M. Jersak", " R. Racu"]}, {"title": " \"Component-Based Context-Dependent Hybrid Property Prediction\"", "authors": ["Meoller", " Peake", " Nolin", " Fredriksson ", " Schmidt"]}, {"title": " \"Automated WCET Analysis based on Program Modes\"", "authors": ["Ji", " Wang", " Li", " Qi"]}]},
{"doi": "10.1109/MOMPES.2009.5069137", "title": "MDE approach to the co-synthesis of embedded systems using a MOF-based internal design representation", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Model driven engineering", "Embedded system", "Object oriented modeling", "Unified modeling language", "Flow graphs", "Informatics", "Control systems", "Computer architecture", "Software development management", "Programming"], "abstract": "This work presents a Model Driven Engineering (MDE) approach to the generation of a MOF-based internal design representation for an embedded application described using UML class and sequence diagrams. Differently from other similar MDE-based approaches for embedded system design, which translate UML models to some specific internal format, our internal design representation, as a MOF-based metamodel, can take advantage of the concept of transformation between models to implement cosynthesis tools. Our internal design representation captures the specified system as a set of hierarchical modules, interconnected by ports, and processes, which communicate through send/receive operations using channels or through shared variables. The execution flow of the application is also captured by means of a control/data flow graph, which is used as input to a co-synthesis framework for embedded systems design. The paper describes the defined transformations between models and illustrates them with a case study to show the effectiveness of the approach.", "author": [{"name": "Francisco Assis M. do Nascimento", "affiliation": "Institute of Informatics, Federal University of Rio Grande do Sul, Porto Alegre, Rio Grande do Sul, Brazil"}, {"name": "Marcio Ferreira S. Oliveira", "affiliation": "Institute of Informatics, Federal University of Rio Grande do Sul, Porto Alegre, Rio Grande do Sul, Brazil"}, {"name": "Flavio Rech Wagner", "affiliation": "Institute of Informatics, Federal University of Rio Grande do Sul, Porto Alegre, Rio Grande do Sul, Brazil"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/SECSE.2009.5069159", "title": "Refactoring and the evolution of Fortran", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Programming profession", "Costs", "Computer science", "Investments", "Computer languages", "Application software", "Dynamic programming", "ISO standards", "Law", "Legal factors"], "abstract": "Successful languages like Fortran keep changing and tend to become more complex, often containing older features that are rarely used. Complexity makes languages harder to use and makes it harder to build tools for them. A refactoring tool can eliminate use of these features from programs; this makes programs easier to understand and maintain, and it can simplify building certain programming tools. This is illustrated by using Fortran, a refactoring tool for Fortran, to eliminate global variables from Fortran programs so that they can be used with adaptive MPI, a version of MPI that performs load balancing.", "author": [{"name": "Jeffrey L. Overbey", "affiliation": "Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana, IL, USA"}, {"name": "Stas Negara", "affiliation": "Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana, IL, USA"}, {"name": "Ralph E. Johnson", "affiliation": "Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana, IL, USA"}], "time": "May 2009", "citationCount": "8", "references": []},
{"doi": "10.1109/ICSE.2007.36", "title": "Feature Oriented Model Driven Development: A Case Study for Portlets", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["DSL", "Mathematical model", "Portals", "Programming", "Automation", "Software standards", "Standards development", "Documentation"], "abstract": "Model driven development (MDD) is an emerging paradigm for software construction that uses models to specify programs, and model transformations to synthesize executables. Feature oriented programming (FOP) is a paradigm for software product lines where programs are synthesized by composing features. feature oriented model driven development (FOMDD) is a blend of FOP and MDD that shows how products in a software product line can be synthesized in an MDD way by composing features to create models, and then transforming these models into executables. We present a case study of FOMDD on a product line of portlets, which are components of web portals. We reveal mathematical properties of portlet synthesis that helped us to validate the correctness of our abstractions, tools, and specifications, as well as optimize portlet synthesis.", "author": [{"name": "Salvador Trujillo", "affiliation": "Department of Computer Sciences, University of Basque Country (UPV-EHU), San Sebastian, Spain"}, {"name": "Don Batory", "affiliation": "Department of Computer Sciences, University of Texas, Austin, Austin, TX, USA"}, {"name": "Oscar Diaz", "affiliation": "Department of Computer Sciences, University of Basque Country (UPV-EHU), San Sebastian, Spain"}], "time": "May 2007", "citationCount": "51", "references": [{"title": " et. al. \"Optimizing Model-Driven Development by Deriving Code Generation Patterns from Product Line Architectures\". NetObject Days 2005.", "authors": ["M. Anastaspoulos"]}, {"title": " F. Garzotto and P. Paolini. \"From Web Sites to Web Applications: New Issues for Conceptual Modeling\". ER Workshops 2000.", "authors": ["L. Baresi"]}, {"title": " and T. Wang. \"Design Wizards and Visual Programming Environments for Gen-Voca Generators\". IEEE TSE", "authors": ["D. Batory", " G. Chen", " E. Robertson"]}, {"title": " et al. \"Achieving Extensibility Through Product-Lines and Domain-Specific Languages: A Case Study\". ACM TOSEM", "authors": ["D. Batory"]}, {"title": " and A. Rauschmayer. \"Scaling Step-Wise Refinement\". IEEE TSE", "authors": ["D. Batory", " J.N. Sarvela"]}, {"title": "D. Batory. \"Feature Models", "authors": []}, {"title": "D. Batory. \"Multi-Level Models in Model Driven Development", "authors": []}, {"title": "D. Batory. \"From Implementation to Theory in Program Synthesis\". Keynote at POPL 2007.", "authors": []}, {"title": "J. Bezivin. \"Model Driven Engineering: Principles", "authors": []}, {"title": " and B. Selic. \"The IBM MDA Manifesto\". The MDA Journal", "authors": ["G. Booch", " A. Brown", " S. Iyengar", " J. Rumbaugh"]}, {"title": " P. Fraternali and M. Matera. \"Conceptual Modeling of Data-Intensive Web Applications\". IEEE Internet Computing", "authors": ["S. Ceri"]}, {"title": " et al. \"Model-Driven Software Product-Lines\". OOPLSA 2005 Posters.", "authors": ["K. Czarnecki", " M. Antkiewicz"]}, {"title": "K. Czarnecki and M. Antkiewicz. \"Mapping Features to Models: A Template Approach Based on Superimposed Variants\". GPCE 2005.", "authors": []}, {"title": " and J. Bosch. \"Model Driven Architecture as Approach to Manage Variability in Software Product Families\". MDAFA 2003 Workshop.", "authors": ["S. Deelstra", " M. Sinnema", " J. van Gurp"]}, {"title": "O. Diaz and J.J. Rodriguez. \"Portlets as Web Components: an Introduction\". Journal of Universal Computer Science", "authors": []}, {"title": " S. Trujillo and S. Perez. \"Turning Portlets into Services: Introducing the Organization Profile\". WWW 2007.", "authors": ["O. Diaz"]}, {"title": " and P. C. Masiero. \"A Statechart-Based Model for Hypermedia Applications\". ACM TOIS", "authors": ["M. C. Ferreira de Oliveira", " M. A. Santos Turine"]}, {"title": " and Y. Crespo. \"Product Lines", "authors": ["B. Gonz\u00e1lez-Baixauli", " M.A. Laguna"]}, {"title": " et al. \"Model Driven Program Transformation of a Large Avionics Framework\". GPCE 2004.", "authors": ["J. Gray"]}, {"title": "D. Harel. \"Statecharts: A visual formalism for complex systems\". Science of Computer Programming", "authors": []}, {"title": " and W. Bast. \"MDA Explained: The Model Driven Architecture: Practice and Promise\"", "authors": ["A. Kleppe", " J. Warmer"]}, {"title": "N. Koch and A. Kraus. \"The Expressive Power of UML-based Web Engineering\". IWWOST 2002.", "authors": []}, {"title": "I. Kurtev and K. van den Berg. \"Building Adaptable and Reusable XML Applications with Model Transformations\". WWW 2005.", "authors": []}, {"title": " et al. \"Roadmap for Enhanced Languages and Methods to Aid Verification\"", "authors": ["G. Leavens"]}, {"title": " and T.L. Kuei. \"A Note on State Modeling through Inheritance\"", "authors": ["J. Lee", " N.L. Xue"]}, {"title": "A.T. McNeile and N. Simons. \"State Machines as Mixins\". Journal of Object Technology 2", "authors": []}, {"title": " and P. van Gorp. \"A Taxonomy of Model Transformations\"", "authors": ["T. Mens", " K. Czarnecki"]}, {"title": "A. Narayanan and G. Karsai. \"Towards Verifying Model Transformations\". In GT-VMTworkshop at ETAPS 2006.", "authors": []}, {"title": "O. Pastor et al. \"The OO-method approach for information systems modeling: from object-oriented conceptual modeling to automated programming\". Inf. Syst.", "authors": []}, {"title": "F. Paterno and C. Mancini. \"Model-Based Design of Interactive Applications\". ACMIntelligence", "authors": []}, {"title": " and E. Wuchner. \"MDD for Software Product-Lines: Fact or Fiction\"", "authors": ["D. Schmidt", " A. Nechypurenko"]}, {"title": " et al. \"Access Path Selection in a Relational Database System\"", "authors": ["P. Selinger"]}, {"title": "N. Serrano and I. Ciordia. \"Ant: Automating the Process of Building Applications\". IEEE Software", "authors": []}, {"title": " and O. Diaz. \"Feature Refactoring a Multi-Representation Program into a Product Line\". GPCE 2006.", "authors": ["S. Trujillo", " D. Batory"]}, {"title": "W. Weber and P. Metz. \"Reuse of Models and Diagrams of the UML and Implementation Concepts Regarding Dynamic Modeling\". In The Unified Modeling Language: Technical Aspects and Applications", "authors": []}]},
{"doi": "10.1109/TEFSE.2009.5069578", "title": "Getting back to basics: Promoting the use of a traceability information model in practice", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Programming", "Context modeling", "Prototypes", "Tagging", "Unified modeling language", "Software systems", "Computer science", "Industrial relations", "Buildings", "Certification"], "abstract": "It is widely assumed that following a process is a good thing if you want to achieve and exploit the benefits of traceability on a software development project. A core component of any such process is the definition and use of a traceability information model. Such models provide guidance as to those software development artifacts to collect and those relations to establish, and are designed to ultimately support required project analyses. However, traceability still tends to be undertaken in rather ad hoc ways in industry, with unpredictable results. We contend that one reason for this situation is that current software development tools provide little support to practitioners for building and using customized project-specific traceability information models, without which even the simplest of processes are problematic to implement and gain the anticipated benefits from. In this paper, we highlight the typical decisions involved in creating a basic traceability information model, suggest a simple UML-based representation for its definition, and illustrate its central role in the context of a modeling tool. The intent of this paper is to re-focus attention on very practical ways to apply traceability information models in practice so as to encourage wider adoption.", "author": [{"name": "Patrick Mader", "affiliation": "Department of Software Systems, Ilmenau Technical University, Germany"}, {"name": "Orlena Gotel", "affiliation": "Department of Computer Science, Pace University, New York, USA"}, {"name": "Ilka Philippow", "affiliation": "Department of Software Systems, Ilmenau Technical University, Germany"}], "time": "May 2009", "citationCount": "26", "references": []},
{"doi": "10.1109/ICSE.2009.5070508", "title": "Lightweight fault-localization using multiple coverage types", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Runtime", "Performance evaluation", "Costs", "Instruments", "Educational institutions", "Isolation technology", "Informatics", "Software debugging", "Condition monitoring", "Java"], "abstract": "Lightweight fault-localization techniques use program coverage to isolate the parts of the code that are most suspicious of being faulty. In this paper, we present the results of a study of three types of program coverage-statements, branches, and data dependencies-to compare their effectiveness in localizing faults. The study shows that no single coverage type performs best for all faults-different kinds of faults are best localized by different coverage types. Based on these results, we present a new coverage-based approach to fault localization that leverages the unique qualities of each coverage type by combining them. Because data dependencies are noticeably more expensive to monitor than branches, we also investigate the effects of replacing data-dependence coverage with an approximation inferred from branch coverage. Our empirical results show that (1) the cost of fault localization using combinations of coverage is less than using any individual coverage type and closer to the best case (without knowing in advance which kinds of faults are present), and (2) using inferred data-dependence coverage retains most of the benefits of combinations.", "author": [{"name": "Raul Santelices", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}, {"name": "James A. Jones", "affiliation": "Department of Informatics, University of California, San Diego, Irvine, USA"}, {"name": "Yanbing Yu", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}, {"name": "Mary Jean Harrold", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}], "time": "May 2009", "citationCount": "127", "references": [{"title": " \"On the accuracy of spectrum-based fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. C. van Gemund"]}, {"title": " \"Fault localization using execution slices and dataflow tests\"", "authors": ["H. Agrawal", " J. Horgan", " S. London ", " W. Wong"]}, {"title": " \"The probabilistic program dependence graph and its application to fault diagnosis\"", "authors": ["G. K. Baah", " A. Podgursky ", " M. J. Harrold"]}, {"title": " \"Efficient path profiling\"", "authors": ["T. Ball ", " J. R. Larus"]}, {"title": " \"Locating causes of program failures\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"Lightweight defect localization for java\"", "authors": ["V. Dallmeier", " C. Lindig ", " A. Zeller"]}, {"title": " \"Experiments on the effectiveness of dataflow and controlflow based test adequacy criteria\"", "authors": ["M. Hutchins", " H. Foster", " T. Goradia ", " T. Ostr"]}, {"title": " \"Empirical evaluation of the Tarantula automatic fault-localization technique\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"Visualization of test information to assist fault localization\"", "authors": ["J. A. Jones", " M. J. Harrold ", " J. Stasko"]}, {"title": " \"Scalable statistical bug isolation\"", "authors": ["B. Liblit", " M. Naik", " A. X. Zheng", " A. Aiken ", " M. I. Jordan"]}, {"title": " \"SOBER: statistical model-based bug localization\"", "authors": ["C. Liu", " X. Yan", " L. Fei", " J. Han ", " S. P. Midkiff"]}, {"title": " \"Fault localization based on information flow coverage\"", "authors": ["W. Masri"]}, {"title": " \"Demand-driven structural testing with dynamic instrumentation\"", "authors": ["J. Misurda", " J. A. Clause", " J. L. Reed", " B. R. Childers ", " M. L. Soffa"]}, {"title": " \"Gamma system: Continuous evolution of software after deployment\"", "authors": ["A. Orso", " D. Liang", " M. J. Harrold ", " R. Lipton"]}, {"title": " \"Fault localization with nearest neighbor queries\"", "authors": ["E. Renieris ", " S. Reiss"]}, {"title": " \"Efficiently monitoring dataflow test coverage\"", "authors": ["R. Santelices ", " M. J. Harrold"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070962", "title": "Experience with modularity in an advanced teleconferencing service deployment", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Teleconferencing", "Application software", "Internet telephony", "Call conference", "Guidelines", "Bridges", "Switches", "Web server", "Context-aware services", "Computer architecture"], "abstract": "In this paper, we describe our experience with the design of an advanced teleconferencing service under two different frameworks - an early implementation of the distributed feature composition architecture, and the SIP Servlet API. The usual design goals of software modularity for encapsulation and reuse are pursued. Interestingly, two very different designs resulted. This paper discusses the factors that influenced our design decisions. In particular, we examine the different characteristics of the two frameworks as well as the maturity of project requirements, and illustrate the ways in which these factors affect various mechanisms for achieving software modularity. We also aim to draw on this experience to propose a set of design guidelines for building modular, composable SIP Servlet applications for Voice over IP and converged services.", "author": [{"name": "Eric Cheung", "affiliation": "AT and T Research Laboratories, Florham Park, NJ, USA"}, {"name": "Thomas M. Smith", "affiliation": "AT and T Research Laboratories, Florham Park, NJ, USA"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/MOMPES.2009.5069138", "title": "ArcheOpterix: An extendable tool for architecture optimization of AADL models", "publisher": "2009 ICSE Workshop on Model-Based Methodologies for Pervasive and Embedded Software", "keyword": ["Computer architecture", "Embedded system", "Design optimization", "Software safety", "Software systems", "Software quality", "Costs", "Algorithm design and analysis", "Automotive engineering", "Pareto optimization"], "abstract": "For embedded systems quality requirements are equally if not even more important than functional requirements. The foundation for the fulfillment of these quality requirements has to be set in the architecture design phase. However, finding a suitable architecture design is a difficult task for software and system architects. Some of the reasons for this are an ever-increasing complexity of today's systems, strict design constraints and conflicting quality requirements. To simplify the task, this paper presents an extendable Eclipse-based tool, called ArcheOpterix, which provides a framework to implement evaluation techniques and optimization heuristics for AADL specifications. Currently, evolutionary strategies have been implemented to identify optimized deployment architectures with respect to multiple quality objectives and design constraints. Experiments with a set of initial deployment architectures provide evidence that the tool can successfully find architecture specifications with better quality.", "author": [{"name": "Aldeida Aleti", "affiliation": "Faculty of ICT, Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Stefan Bjornander", "affiliation": "Faculty of ICT, Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Lars Grunske", "affiliation": "Faculty of ICT, Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Indika Meedeniya", "affiliation": "Faculty of ICT, Swinburne University of Technology, Hawthorn, VIC, Australia"}], "time": "May 2009", "citationCount": "74", "references": [{"title": "L. Grunske. Identifying \"good\" architectural design alternatives with multi-objective optimization strategies. In L. J. Osterweil", "authors": []}]},
{"doi": "10.1109/SECSE.2009.5069160", "title": "Integration strategies for Computational Science & Engineering software", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Software algorithms", "Software engineering", "Application software", "Software maintenance", "Programming", "Production", "Computer science", "Software performance", "Concurrent computing", "Uncertainty"], "abstract": "In order to make significant progress in solving challenging problems in Computational Science & Engineering (CS&E), we need to integrate a large amount of software written by different groups of experts. Modern Lean/Agile methodologies would seem to provide a good foundation for research-driven development of complex CS&E software. Here, we describe issues related to the integration of CS&E software and propose different integration processes tailored to the special challenges in CS&E. We also describe practical experience with some of these tailored integration strategies related to Trilinos and some of its important application customers at Sandia National Labs.", "author": [{"name": "Roscoe A. Bartlett", "affiliation": "Department of Optimization and Uncertainty Qualification, Sandia National Laboratories, Albuquerque, NM, USA"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.50", "title": "Matching and Merging of Statecharts Specifications", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Merging", "Computer science", "Laboratories", "Vocabulary", "Performance gain", "Performance analysis", "Visual databases", "Machine learning", "Software systems", "Software engineering"], "abstract": "Model Management addresses the problem of managing an evolving collection of models, by capturing the relationships between models and providing well-defined operators to manipulate them. In this paper, we describe two such operators for manipulating hierarchical Statecharts: Match, for finding correspondences between models, and Merge, for combining models with respect to known correspondences between them. Our Match operator is heuristic, making use of both static and behavioural properties of the models to improve the accuracy of matching. Our Merge operator preserves the hierarchical structure of the input models, and handles differences in behaviour through parameterization. In this way, we automatically construct merges that preserve the semantics of Statecharts models. We illustrate and evaluate our work by applying our operators to AT&T telecommunication features.", "author": [{"name": "Shiva Nejati", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}, {"name": "Mehrdad Sabetzadeh", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}, {"name": "Marsha Chechik", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}, {"name": "Steve Easterbrook", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}, {"name": "Pamela Zave", "affiliation": "AT and T Research Laboratories, Florham Park, NJ, USA"}], "time": "May 2007", "citationCount": "131", "references": []},
{"doi": "10.1109/TEFSE.2009.5069579", "title": "Towards traceable test-driven development", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Programming", "Software testing", "Computer science", "Automatic testing", "Software maintenance", "Software performance", "Maintenance engineering", "Mice", "Performance analysis", "ISO standards"], "abstract": "Key among the grand challenges in traceability are those that lead to achieving traceability as a by-product of the natural software development life cycle. This position paper profiles test-driven development (TDD), an emerging software development practice, in which automated tests and code satisfying them are developed in rapid succession over multiple iterations. Our position is that the nature of TDD offers unique opportunities for collecting traceability information throughout the TDD life cycle and that the provision of traceability information to the software developers during TDD will improve the process and the resulting software. We discuss the opportunities, challenges, and plans for the synthesis of TDD and traceability.", "author": [{"name": "Jane Huffman Hayes", "affiliation": "Computer Science, University of Kentucky, Lexington, KY, USA"}, {"name": "Alex Dekhtyar", "affiliation": "Computer Science Department, California Polytechnic State University, San Louis Obispo, CA, USA"}, {"name": "David S. Janzen", "affiliation": "Computer Science Department, California Polytechnic State University, San Louis Obispo, CA, USA"}], "time": "May 2009", "citationCount": "15", "references": [{"title": " \"Event-Based Traceability for Managing Evolutionary Change", "authors": ["Jane Clel", "-Huang", " Carl K. Chang", " Mark Christensen"]}, {"title": " \"The Test Bus Imperative: Architectures That Support Automated Acceptance Testing", "authors": ["Robert C. Martin"]}]},
{"doi": "10.1109/ICSE.2009.5070509", "title": "Succession: Measuring transfer of code and developer productivity", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Productivity", "Programming", "Costs", "Business", "Testing", "Open source software", "Virtual groups", "Manufacturing processes"], "abstract": "Code ownership transfer or succession is a crucial ingredient in open source code reuse and in offshoring projects. Measuring succession can help understand factors that affect the success of such transfers and suggest ways to make them more efficient. We propose and evaluate several methods to measure succession based on the chronology and traces of developer activities. Using ten instances of offshoring succession identified through interviews, we find that the best succession measure can accurately pinpoint the most likely mentors. We model the productivity ratio of more than 1000 developer pairs involved in the succession to test conjectures formulated using the organizational socialization theory and find the ratio to decrease for instances of offshoring and for mentors who have worked primarily on a single project or have transferred ownership for their non-primary project code, thus supporting a theory-based conjectures and providing practical suggestions on how to improve succession.", "author": [{"name": "Audris Mockus", "affiliation": "Avaya Laboratories Research, Basking Ridge, NJ, USA"}], "time": "May 2009", "citationCount": "26", "references": [{"title": " \"Software function source lines of code and development effort prediction: a software science validation\"", "authors": ["A. J. Albrecht ", " J. R. Gaffney"]}, {"title": "\"Using version control data to evaluate the impact of software tools: A case study of the version editor\"", "authors": []}, {"title": " \"An investigation of human factors in software development\"", "authors": ["V. Basili ", " R. Reiter"]}, {"title": " \"An investigation into coupling measures for c++\"", "authors": ["L. Bri", "", " P. Devanbu ", " W. Melo"]}, {"title": " \"Identification of coordination requirements: Implications for the design of collaboration and awareness tools\"", "authors": ["M. Cataldo", " P. Wagstrom", " J. Herbsleb ", " K. Carley"]}, {"title": " \"Substantiating programmer variability\"", "authors": ["B. Curtis"]}, {"title": " \"Formulation and preliminary test of an empirical theory of coordination in software engineering\"", "authors": ["J. Herbsleb ", " A. Mockus"]}, {"title": " \"Maintaining mental models: a study of developer work habits\"", "authors": ["T. D. LaToza", " G. Venolia ", " R. DeLine"]}, {"title": " \"Large-scale code reuse in open source software\"", "authors": ["A. Mockus"]}, {"title": " \"Software support tools and experimental work\" in Empirical Software Engineering Issues: Critical Assessments and Future Directions", "authors": [" ."]}, {"title": " \"Expertise browser: A quantitative approach to identifying expertise\"", "authors": ["A. Mockus ", " J. Herbsleb"]}, {"title": " \"Interval quality: Relating customer-perceived quality to process quality\"", "authors": ["A. Mockus ", " D. Weiss"]}, {"title": " \"Globalization by chunking: a quantitative approach\"", "authors": ["A. Mockus ", " D. M. Weiss"]}, {"title": " \"Palantir: Raising awareness among configuration management workspaces\"", "authors": ["A. Sarma", " Z. Noroozi ", " A. van der Hoek"]}, {"title": " \"The individual the organization and the carier: A conceptual scheme\"", "authors": ["E. Schein"]}, {"title": " \"Navtracks: Supporting navigation in software\"", "authors": ["J. Singer", " R. Elves ", " M.-A. Storey"]}, {"title": " \"Shared waypoints and social tagging to support collaboration in software development\"", "authors": ["M.-A. Storey", " L.-T. Cheng", " I. Bull ", " P. Rigby"]}, {"title": " \"Towards a theory of organizational socialization\" in Research in organizational behavior", "authors": ["J. Van Maanen ", " E. Schein"]}, {"title": " \"Community joining and specialization in open source software innovation: a case study\"", "authors": ["G. von Krogh", " S. Spaeth ", " K. R. Lakhani"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070963", "title": "Refactoring big balls of mud", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Large-scale systems", "Software systems", "Engines", "Logic", "Graphics", "Monitoring", "Government", "Computer architecture", "Wire", "Scattering"], "abstract": "This experience report describes a redesign of a large commercial system. The goal of the redesign was to break up the system into two parts without changing its external behavior. Such a task is essentially a refactoring. We describe our redesign process as steps of a refactoring called extract subsystem to a separate process. We believe that documenting large-scale refactorings is important, and necessary to make redesigning software easier.", "author": [{"name": "Paul Adamczyk", "affiliation": "LIFIA, Facultad de Inform\u00e1tica, Universidad Nacional de La Plata, La Plata, Argentina"}, {"name": "Arturo Zambrano", "affiliation": "LIFIA, Facultad de Inform\u00e1tica, Universidad Nacional de La Plata, La Plata, Argentina"}, {"name": "Federico Balaguer", "affiliation": "LIFIA, Facultad de Inform\u00e1tica, Universidad Nacional de La Plata, La Plata, Argentina"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/SECSE.2009.5069161", "title": "Reusability of FEA software: A program family approach", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Software reusability", "Usability", "Software maintenance", "Documentation", "Finite element methods", "Asset management", "Computational modeling", "Partial differential equations", "Design engineering", "Knowledge engineering"], "abstract": "This paper proposes a methodology to improve the reusability of finite element analysis (FEA) software using a program family approach. The usability and the maintainability are significant problems for a developer trying to properly reuse FEA software. Usability is promoted via systematically defined goals, assumptions, theoretical and computational models, definitions, common requirements and variabilities. Maintainability is improved through a component generator and traceability matrices between different portions of the documentation. We present preliminary work on a simple FEA program family for solving beam analysis problems to illustrate how the program family approach can be applied to FEA software.", "author": [{"name": "Wen Yu", "affiliation": "Department of Computing and Software, McMaster University, Hamilton, ONT, Canada"}, {"name": "Spencer Smith", "affiliation": "Department of Computing and Software, McMaster University, Hamilton, ONT, Canada"}], "time": "May 2009", "citationCount": "4", "references": []},
{"doi": "10.1109/ICSE.2007.72", "title": "Regression Test Selection for AspectJ Software", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software testing", "Java", "Costs", "Program processors", "Weaving", "System testing", "Programming", "Software maintenance", "Object oriented modeling", "Algorithm design and analysis"], "abstract": "As aspect-oriented software development gains popularity, there is growing interest in using aspects to implement cross-cutting concerns in object-oriented systems. When aspect-oriented features are added to an object-oriented program, or when an existing aspect-oriented program is modified, the new program needs to be regression tested to validate these changes. To reduce the cost of regression testing, a regression-test-selection technique can be used to select only a necessary subset of test cases to rerun. Unfortunately, existing approaches for regression test selection for object-oriented software are not effective in the presence of aspectual information woven into the original code. This paper proposes a new regression-test-selection technique for AspectJ programs. At the core of our approach is a new control-flow representation for AspectJ software which captures precisely the semantic intricacies of aspect-related interactions. Based on this representation, we develop a novel graph comparison algorithm for test selection. Our experimental evaluation shows that, compared to existing approaches, the proposed technique is capable of achieving significantly more precise test selection.", "author": [{"name": "Guoqing Xu", "affiliation": "Ohio State Uinversity, USA"}, {"name": "Atanas Rountev", "affiliation": "Ohio State Uinversity, USA"}], "time": "May 2007", "citationCount": "24", "references": []},
{"doi": "10.1109/TEFSE.2009.5069580", "title": "Challenges for semi-automatic trace recovery in the automotive domain", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Automotive engineering", "Testing", "Information retrieval", "ISO standards", "Vehicles", "Indexing", "Large scale integration", "Automobiles", "Contracts", "Embedded system"], "abstract": "This position paper describes the challenges of semi-automatically recovering traceability information in specifications of the automotive domain using information retrieval techniques. Recovering traceability information itself is not an easy task and a combination of factors make this task even harder in the automotive domain. For example: There are huge specifications compared to specifications evaluated in research. The specifications are written in German instead of the English generally reported, which makes it even more complicated. Improving the applied algorithms is one way of tackling these obstacles, better guidance on how and when to employ the semi-automatic recovery methods also play an important role. An approach to tackle these obstacles as well as preliminary findings are described.", "author": [{"name": "Jorg Leuser", "affiliation": "Group Research and Advanced Engineering Daimler AG, Ulm, Germany"}], "time": "May 2009", "citationCount": "8", "references": []},
{"doi": "10.1109/ICSE.2009.5070510", "title": "Predicting faults using the complexity of code changes", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software systems", "Predictive models", "Software measurement", "Delay", "History", "Lab-on-a-chip", "Information theory", "Entropy", "Project management"], "abstract": "Predicting the incidence of faults in code has been commonly associated with measuring complexity. In this paper, we propose complexity metrics that are based on the code change process instead of on the code. We conjecture that a complex code change process negatively affects its product, i.e., the software system. We validate our hypothesis empirically through a case study using data derived from the change history for six large open source projects. Our case study shows that our change complexity metrics are better predictors of fault potential in comparison to other well-known historical predictors of faults, i.e., prior modifications and prior faults.", "author": [{"name": "Ahmed E. Hassan", "affiliation": "Software Analysis and Intelligence Laboratory (SAIL), School of Computing, Queen''s University, Canada"}], "time": "May 2009", "citationCount": "268", "references": [{"title": " \"Entropies as measures of software information\"", "authors": ["S. Abd-El-Hafiz"]}, {"title": " \"Predicting fault-prone components in a java legacy system\" in ISESE", "authors": ["E. Arisholm ", " L. C. Bri"]}, {"title": " \"On the uniformity of software evolution patterns\"", "authors": ["E. J. Barry", " C. F. Kemere ", " S. A. Slaughter"]}, {"title": " \"Evaluating software degradation through entropy\"", "authors": ["A. Bianchi", " D. Caivano", " F. Lanubile ", " G. Visaggio"]}, {"title": " \"An entropy metric for software maintainability\"", "authors": ["N. Chapin"]}, {"title": " \"Texture similarity measurement using kullback-Ieibler distance on wavelet subbands\"", "authors": ["M. Do ", " M. Vetterli"]}, {"title": " \"Does Code Decay? Assessing the Evidence from Change Management Data\"", "authors": ["S. G. Eick", " T. L. Graves", " A. F. Karr", " J. Marron ", " A. Mockus"]}, {"title": " \"Estimating software fault content before coding\"", "authors": ["S. G. Eick", " C. R. Loader", " M. D. Long", " S. A. V. Wiel ", " L. G. V."]}, {"title": " \"Predicting fault incidence using software change history\"", "authors": ["T. L. Graves", " A. F. Karr", " J. S. Marron ", " H. P. Siy"]}, {"title": " \"An entropy-based measure of software complexity\"", "authors": ["W. Harrison"]}, {"title": " \"Automated classification of change messages in open source projects\" in SAC", "authors": ["A. E. Hassan"]}, {"title": " \"Studying the chaos of code development\"", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"The Chaos of Software Development\"", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"Predicting Change Propagation in Software Systems\"", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"The Top Ten List: Dynamic Fault Prediction\"", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"Towards a Theoretical Model for Software Growth\"", "authors": ["I. Herraiz", " J. M. Gonzalez-Barahona ", " G. Robles"]}, {"title": " \"Data Mining for Predictors of Software Quality\"", "authors": ["T. M. Khoshgoftaar", " E. B. Allen", " W. D. Jones ", " J. P. Hude-pohl"]}, {"title": " \"Implications of Evolution Metrics on Software Maintenance\"", "authors": ["M. M. Lehman", " D. E. Perry ", " J. F. Ramil"]}, {"title": " \"Classification and evaluation of defects in a project retrospective\"", "authors": ["M. Leszak", " D. E. Perry ", " D. Stoll"]}, {"title": " \"Identifying reasons for software change using historic databases\"", "authors": ["A. Mockus ", " L. G. Votta"]}, {"title": " \"Understanding and predicting effort in software projects\"", "authors": ["A. Mockus", " D. M. Weiss ", " P. Zhang"]}, {"title": " \"A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction\"", "authors": ["R. Moser", " W. Pedrycz ", " G. Succi"]}, {"title": " \"Use of relative code churn measures to predict system defect density\"", "authors": ["N. Nagappan ", " T. Ball"]}, {"title": " \"Mining metrics to predict component failures\" in ICSE", "authors": ["N. Nagappan", " T. Ball ", " A. Zeller"]}, {"title": " \"Software aging\"", "authors": ["D. Parnas"]}, {"title": " \"The source code control system\"", "authors": ["M. J. Rochkind"]}, {"title": " \"Comparing and combining profiles\"", "authors": ["S. Savari ", " C. Young"]}, {"title": " \"A Mathematical Theory of Communication\"", "authors": ["C. E. Shannon"]}, {"title": " \"Adapting to a new environment: How a legacy software organization copes with volatility and change\"", "authors": ["N. Staudenmayer", " T. Graves", " J. S. Marron", " A. Mockus", " D. Perry", " H. Siy", " ."]}, {"title": " \"Evaluating software complexity measures\"", "authors": ["E. J. Weyuker"]}, {"title": " \"An Analysis of Several Software Defect Models\"", "authors": ["T. J. Yu", " V. Y. Shen ", " H. E. Dunsmore"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070964", "title": "Experience report: Using tools and domain expertise to remediate architectural violations in the LogicBlox software base", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software tools", "Computer architecture", "Software systems", "Educational institutions", "Aging", "Programming profession", "Constraint theory", "Pattern recognition", "Standards development", "Robustness"], "abstract": "When modeling the architecture of an existing software system, developers often find inconsistencies between the conceptual and the as-built architecture. To impose the conceptual view on the code often involves large refactoring to remediate architectural violations. This paper reports our experience applying large refactoring to remediate an architectural violation in LogicBlox, a large, multi-language multi-platform system. We used DSM-based analysis in conjunction with a suite of code analysis tools to identify and effect large refactorings. A key insight of this experience is the value of automatically generated proto-interfaces, which may help experts identify standard abstractions around which to structure the refactoring effort. We contribute a process for refactoring that includes the generation of proto-interfaces and the explicit inclusion of expert review.", "author": [{"name": "R. E. K. Stirewalt", "affiliation": "LogicBlox, Inc., Atlanta, GA, USA"}, {"name": "Spencer Rugaber", "affiliation": "College of Computing, Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Hwa-You Hsu", "affiliation": "College of Computing, Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "David Zook", "affiliation": "LogicBlox, Inc., Atlanta, GA, USA"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/SECSE.2009.5069162", "title": "Developing scientific applications using Generative Programming", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Checkpointing", "Parallel programming", "Programming profession", "Application software", "Dynamic programming", "Writing", "Productivity", "Distributed computing", "Software engineering", "Scientific computing"], "abstract": "Scientific applications usually involve large number of distributed and dynamic resources and huge datasets. A mechanism like checkpointing is essential to make these applications resilient to failures. Using checkpointing as an example, this paper presents an approach for integrating the latest software engineering techniques with the development of scientific software. Generative programming is used in this research to achieve the goals of non-intrusive reengineering of existing applications to insert the checkpointing mechanism and to decouple the checkpointing-specifications from its actual implementation. The end-user specifies the checkpointing details at a higher level of abstraction, using which the necessary code is generated and woven into the application. The lessons learned and the implementation approach presented in this paper can be applied to the development of scientific applications in general. The paper also demonstrates that the generated code does not introduce any inaccuracies and its performance is comparable to the manually inserted code.", "author": [{"name": "Ritu Arora", "affiliation": "Department of Computer and Information Sciences, University of Alabama, Birmingham, USA"}, {"name": "Purushotham Bangalore", "affiliation": "Department of Computer and Information Sciences, University of Alabama, Birmingham, USA"}, {"name": "Marjan Mernik", "affiliation": "Department of Computer and Information Sciences, University of Alabama, Birmingham, USA"}], "time": "May 2009", "citationCount": "2", "references": [{"title": " \"MPI2: A Message-Passing Interface Standard", "authors": ["Message Passing Interface Forum"]}, {"title": " \"No Silver Bullet - Essence and Accidents of Software Engineering", "authors": ["Brooks", " Jr.", " F.P."]}, {"title": " \"Scalable Computing: Practice and Experience\"", "authors": ["Schmidt", " D. C."]}, {"title": " \"Generative Programming: Methods", "authors": ["Czarnecki", " K.", " Eisenecker", " U."]}, {"title": " \"Understanding the High Performance Computing Community: A Software Engineer's Perspective\"", "authors": ["Basili", " V.", " Carver", " J.", " Cruzes", " D.", " Hochstein", " L.", " Hollingsworth", " J.", " Shull", " F.", " Zelkowitz", " M."]}, {"title": " \"When and how to develop domain-specific languages\"", "authors": ["Mernik", " M.", " Heering", " J.", " Sloane", " A. M."]}, {"title": " \"The Design and Implementation of Berkeley Lab's Linux Checkpoint/ Restart\"", "authors": ["Duell", " J."]}, {"title": " \"Application-level checkpointing for shared memory programs\"", "authors": ["Bronevetsky", " G.", " Marques", " D.", " Pingali", " K.", " Szwed", " P. K.", " Schulz", " M."]}, {"title": " \"Aspect-oriented programming\"", "authors": ["Kiczales", " G.", " Lamping", " J. ", " Mendhekar", " A.", " Maeda", " C.", " Lopes", " C.", " Loingtier", " J.", " Irwin", " J."]}, {"title": " \"A Domain-Specific Language for Application-Level Checkpointing\"", "authors": ["Arora", " R.", " Mernik", " M.", " Bangalore", " P.", " Roychoudhury", " S.", " Mukkai", " S."]}, {"title": " \"Design Maintenance Systems\"", "authors": ["Baxter", " I."]}, {"title": " \"Model-based DSL frameworks\"", "authors": ["Kurtev", " I.", " Bezivin", " J.", " Jouault", " F.", " Valduriez", " P."]}, {"title": " \"Region Based Image Clustering and Retrieval using Multiple Instance Learning\"", "authors": ["Chengcui", " Z.", " Xin", " C."]}, {"title": " \"Computational Fluid Dynamics\"", "authors": ["Chung", " T. J."]}, {"title": " \"Using Aspect-Oriented Programming for Checkpointing a Parallel Application\"", "authors": ["Arora", " R.", " Bangalore", " P. V."]}, {"title": " \"Model-based Aspect Weaver Construction\"", "authors": ["Roychoudhury", " S.", " Jouault", " F.", " Gray", " J."]}]},
{"doi": "10.1109/ICSE.2007.37", "title": "Feedback-Directed Random Test Generation", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["System testing", "Contracts", "Object oriented modeling", "Law", "Legal factors", "Open source software", "Software testing", "Feedback", "Filters", "Error correction codes"], "abstract": "We present a technique that improves random test generation by incorporating feedback obtained from executing test inputs as they are created. Our technique builds inputs incrementally by randomly selecting a method call to apply and finding arguments from among previously-constructed inputs. As soon as an input is built, it is executed and checked against a set of contracts and filters. The result of the execution determines whether the input is redundant, illegal, contract-violating, or useful for generating more inputs. The technique outputs a test suite consisting of unit tests for the classes under test. Passing tests can be used to ensure that code contracts are preserved across program changes; failing tests (that violate one or more contract) point to potential errors that should be corrected. Our experimental results indicate that feedback-directed random test generation can outperform systematic and undirected random test generation, in terms of coverage and error detection. On four small but nontrivial data structures (used previously in the literature), our technique achieves higher or equal block and predicate coverage than model checking (with and without abstraction) and undirected random generation. On 14 large, widely-used libraries (comprising 780KLOC), feedback-directed random test generation finds many previously-unknown errors, not found by either model checking or undirected random generation.", "author": [{"name": "Carlos Pacheco", "affiliation": "MIT CSAIL, USA"}, {"name": "Shuvendu K. Lahiri", "affiliation": "Microsoft Research Limited, UK"}, {"name": "Michael D. Ernst", "affiliation": "MIT CSAIL, USA"}, {"name": "Thomas Ball", "affiliation": "Microsoft Research Limited, UK"}], "time": "May 2007", "citationCount": "314", "references": []},
{"doi": "10.1109/TEFSE.2009.5069581", "title": "Establishing and maintaining traceability between large aerospace process standards", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Aerospace engineering", "Standards development", "Software standards", "Text processing", "Application software", "Standards organizations", "Software engineering", "Hardware", "Software maintenance", "Software quality"], "abstract": "The aerospace domain is known for its emphasis on product quality, since hardware or software failures may have potentially catastrophic consequences. Therefore, numerous standards govern space software development. In this paper, we present an approach for systematically establishing and maintaining traceability between software development standards. It augments the standards' word processing files with additional meta-information, thereby making them accessible and understandable for programs, so that a database can be used for advanced analyses. Additionally, we present experience collected during application of the approach at the European Space Agency (ESA) and the Japan Aerospace Exploration Agency (JAXA).", "author": [{"name": "Ove Armbrust", "affiliation": "Fraunhofer Institute of Experimental Software Engineering (IESE), Kaiserslautern, Germany"}, {"name": "Alexis Ocampo", "affiliation": "Fraunhofer Institute of Experimental Software Engineering (IESE), Kaiserslautern, Germany"}, {"name": "Jurgen Munch", "affiliation": "Fraunhofer Institute of Experimental Software Engineering (IESE), Kaiserslautern, Germany"}, {"name": "Masafumi Katahira", "affiliation": "Japan Aerospace Exploration Agency, Tsukuba, Ibaraki, Japan"}, {"name": "Yumi Koishi", "affiliation": "Japan Aerospace Exploration Agency, Tsukuba, Ibaraki, Japan"}, {"name": "Yuko Miyamoto", "affiliation": "Japan Aerospace Exploration Agency, Tsukuba, Ibaraki, Japan"}], "time": "May 2009", "citationCount": "3", "references": [{"title": " \"Integrated Software Process and Product Lines\"", "authors": ["H.D. Rombach"]}, {"title": " \"Software Process Lines and Standard Traceability Analysis\"", "authors": ["O. Armbrust", " A. Ocampo"]}, {"title": " \"Scoping Software Process Models - Initial Concepts and Experience from Defining Space Standards\"", "authors": ["O. Armbrust", " M. Katahira", " Y. Miyamoto", " J. M\u00fcnch", " H. Nakao", " A. Ocampo"]}, {"title": " \"Metadata for the legal domain\"", "authors": ["M. Palmirani", " R. Brighi"]}, {"title": " \"Enhancing an artefact management system with traceability recovery features\"", "authors": ["A. de Lucia", " F. Fasano", " R. Olivetto", " G. Tortora"]}, {"title": " \"An Ontology-based Approach for the Recovery of Traceability Links\"", "authors": ["Y. Zhang", " R. Witte", " J. Rilling", " V. Haarslev"]}, {"title": " \"Engineering Standardization\"", "authors": ["J.-L. Cendral", " M. Merri", " R. Choda"]}, {"title": " \"SPICE for SPACE: A Process Assessment and Improvement Method for Space Software Development\"", "authors": ["A. Cass", " C. V\u00f6lcker", " L. Winzer", " J.M. Carranza", " A. Dorling"]}, {"title": " \"Assessing IR-based traceability recovery tools through controlled experiments\"", "authors": ["A. de Lucia", " R. Oliveto", " G. Tortora"]}, {"title": " \"Programming Python\"", "authors": ["M. Lutz"]}]},
{"doi": "10.1109/ICSE.2009.5070511", "title": "A case-study on using an Automated In-process Software Engineering Measurement and Analysis system in an industrial environment", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software engineering", "Software measurement", "Computer industry", "Electrical resistance measurement", "Large-scale systems", "Concrete", "Cement industry", "Automation", "Switches", "Project management"], "abstract": "Automated systems for measurement and analysis are not adopted on a large scale in companies, despite the opportunities they offer. The fear of the ldquobig brotherrdquo and the lack of reports giving insights into the real adoption process and concrete usages in industry are barriers to this adoption. We report on a case-study on the adoption and long-term usage (2 years of running system) of such a system in a company focusing on the adoption process and the related challenges we encountered.", "author": [{"name": "Irina Diana Coman", "affiliation": "Free University of Bozen-Bolzano"}, {"name": "Alberto Sillitti", "affiliation": "Free University of Bozen-Bolzano, Italy"}, {"name": "Giancarlo Succi", "affiliation": "Free University of Bozen-Bolzano, Italy"}], "time": "May 2009", "citationCount": "26", "references": [{"title": " \"A Critical Analysis of PSP Data Quality: Results from a Case Study\"", "authors": ["P. M. Johnson ", " A. Disney"]}, {"title": " \"Beyond the Personal Software Process: Metrics Collection and Analysis for the Differently Disciplined\"", "authors": ["P. M. Johnson", " H. Kou", " J. Agustin", " C. Chan", " C. Moore", " J. Miglani", " ."]}, {"title": " \"Collecting Integrating and Analyzing Software Metrics and Personal Software Process Data EUROMICRO\"", "authors": ["A. Sillitti", " A. Janes", " G. Succi ", " T. Vernazza"]}, {"title": " \"Improving Software Development Management through Software Project Telemetry\"", "authors": ["P. M. Johnson", " H. Kou", " M. Paulding", " Q. Zhang", " A. Kagawa ", " Yamashita T"]}, {"title": " \"Automated Recognition of Low-level Process: A Pilot Validation Study of Zorro for Test-driven Development\"", "authors": ["H. Kou ", " Johnson P. M"]}, {"title": " \"6th Sense Analytics\"", "authors": ["Burnell G"]}, {"title": " \"Empirical Project Monitor: A Tool for Mining Multiple Project Data\"", "authors": ["M. Ohira", " R. Yokomori", " M. Sakai", " K. Matsumoto", " K. Inoue ", " Torii K"]}, {"title": " \"ElectroCodeoGram: An Environment for Studying Programming\"", "authors": ["F. Schlesinger ", " Jekutsch S"]}, {"title": " \"Understanding Productivity through Non-intrusive Instrumentation and Statistical Learning\"", "authors": ["N. A. Nystrom", " J. Urbanic ", " C. Savinell"]}, {"title": " \"Practical Automated Process and Product Metric Collection and Analysis in a Classroom setting: Lessons Learned from Hackystat-UH\"", "authors": ["P. M. Johnson", " H. Kou", " J. M. Agustin", " Q. Zhang", " A. Kagawa ", " Yamashita T"]}, {"title": " \"An Empirical Study on the Migration to OpenOfjice. org in the Public Administration\"", "authors": ["B. Rossi", " M. Scotto", " A. Sillitti ", " Succi G"]}, {"title": " \"An Empirical Exploratory Study on Inferring Developers' Activities from Low-Level Data\"", "authors": ["Coman I. D ", " Sillitti A"]}, {"title": " \"A Methodology for Collecting Valid Software Engineering Data\"", "authors": ["Basili V. R ", " Weiss D. M"]}, {"title": " \"A Metrics Suite for Object Oriented Design\"", "authors": ["Chidamber S. R ", " Kemerer C. F"]}, {"title": " \"Investigating the Usefulness of Pair-Programming in a Mature Agile Team\"", "authors": ["I. D. Coman", " A. Sillitti ", " Succi G"]}, {"title": " \"A model to identify refactoring effort during maintenance by mining source code repositories\"", "authors": ["Moser R", " Pedrycz W", " Sillitti A ", " Succi G"]}, {"title": " \"A case study on the impact of refactoring on quality and productivity in an agile team\"", "authors": ["Moser R", " Abrahamsson P", " Pedrycz W", " Sillitti A ", " G. Succi"]}, {"title": " \"Effort Prediction in Iterative Software Development Processes - Incremental Versus Global Prediction Models\"", "authors": ["Abrahamsson P", " Moser R", " Pedrycz W", " Sillitti A ", " G. Succi"]}, {"title": " \"Does refactoring improve reusability?\"", "authors": ["Moser R", " Sillitti A", " Abrahamsson P ", " G. Succi"]}, {"title": " \"Lessons Learned in Building a Corporate Metrics Program\"", "authors": ["Pfleeger S. L"]}, {"title": " \"A Practical View of Software Measurement and Implementation Experiences Within Motorola\"", "authors": ["M. Daskalantonakis"]}, {"title": " \"Establishing Software Measurement Programs\"", "authors": ["Offen R. J ", " Jeffery R"]}, {"title": " \"Implementing Effective Software Metrics Programs\"", "authors": ["T. Hall ", " Fenton N"]}, {"title": " \"Lessons from Implementing a Software Metrics Program\"", "authors": ["Iversen J ", " L. Mathiassen"]}, {"title": " \"Measurement Programs in Software Development: Determinants of Success\"", "authors": ["A. Gopal", " M. S. Krishnan", " T. Mukhopadhyay ", " Goldenson D. R"]}, {"title": " \"An Instrument for Assessing Software Measurement Programs\"", "authors": ["M. Berry ", " R. Jeffery"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070965", "title": "Functional abstractions for testing repository-style information systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["System testing", "Information systems", "Application software", "Automatic testing", "Writing", "Databases", "Automata", "Medical services", "Failure analysis", "Pattern analysis"], "abstract": "We propose a set of functional test patterns for testing a class of repository-style information systems. This class, which we call ldquoworkflow-basedrdquo, implements not only functions reading and writing from/to the database, but also workflows (business processes) that may be constrained by states of application objects. Patterns are based on models (functional abstractions) of the software product. The testing strategy combines testing of different models (hierarchy of functions, models of business processes and state/transition automata) using different testing techniques for each type of model. We discuss the patterns application to a large health care software product. We analyze the results (about 2700 test cases) and the effect of testing multiple patterns on the discovered failures and types of faults. We also describe the use of the method for testing about thirty software applications of an information system of a large retail company.", "author": [{"name": "Paolo Salvaneschi", "affiliation": "University of Bergamo and Salvaneschi and Partners, Italy"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/SECSE.2009.5069163", "title": "Testing for trustworthiness in scientific software", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Software testing", "Computer errors", "Software engineering", "Mathematical model", "Computational modeling", "Software standards", "Educational institutions", "Performance evaluation", "Genetic mutations", "Computer languages"], "abstract": "Two factors contribute to the difficulty of testing scientific software. One is the lack of testing oracles - a means of comparing software output to expected and correct results. The second is the large number of tests required when following any standard testing technique described in the software engineering literature. Due to the lack of oracles, scientists use judgment based on experience to assess trustworthiness, rather than correctness, of their software. This is an approach well established for assessing scientific models. However, the problem of assessing software is more complex, exacerbated by the problem of code faults. This highlights the need for effective and efficient testing for code faults in scientific software. Our current research suggests that a small number of well chosen tests may reveal a high percentage of code faults in scientific software and allow scientists to increase their trust.", "author": [{"name": "Daniel Hook", "affiliation": "Queen''s University, Kingston, ONT, Canada"}, {"name": "Diane Kelly", "affiliation": "Royal Military College of Canada, Kingston, ONT, Canada"}], "time": "May 2009", "citationCount": "17", "references": [{"title": " \"Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria\"", "authors": ["James H. Andrews", " Lionel C. Bri", "", " Yvan Labiche", " Akbar Siami Namin"]}, {"title": " \"Is Mutation an Appropriate Tool for Testing Experiments?\"", "authors": ["James H. Andrews", " Lionel C. Bri", "", " Yvan Labiche"]}, {"title": " \"The chimera of software quality\"", "authors": ["Les Hatton"]}, {"title": " \"How accurate is scientific software?\"", "authors": ["Les Hatton", " Andy Roberts"]}, {"title": " \"Computational Science Demands a New Paradigm\"", "authors": ["Douglass E. Post", " Lawrence G. Votta"]}, {"title": " \"Building PDE Codes to be Verifiable and Validatable\"", "authors": ["Patrick J. Roache"]}, {"title": " \"Scientific Software: Where's the Risk and how do Scientists Deal with it?\"", "authors": ["Rebecca S", "ers", " Diane Kelly"]}, {"title": " \"A Critical Look at Quality in Large-Scale Simulations\"", "authors": ["D.E. Stevenson"]}, {"title": " \"On Testing Non-testable Programs\"", "authors": ["Elaine Weyuker"]}]},
{"doi": "10.1109/ICSE.2007.26", "title": "Compatibility and Regression Testing of COTS-Component-Based Software", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software testing", "System testing", "Automatic testing", "Binary codes", "Software systems", "Natural languages", "Java", "Control systems", "Lead", "XML"], "abstract": "Software engineers frequently update COTS components integrated in component-based systems, and can often chose among many candidates produced by different vendors. This paper tackles both the problem of quickly identifying components that are syntactically compatible with the interface specifications, but badly integrate in target systems, and the problem of automatically generating regression test suites. The technique proposed in this paper to automatically generate compatibility and prioritized test suites is based on behavioral models that represent component interactions, and are automatically generated while executing the original test suites on previous versions of target systems.", "author": [{"name": "Leonardo Mariani", "affiliation": "Universit\u00e0 degli Studi di Milano-Bicocca, Milan, Italy"}, {"name": "Sofia Papagiannakis", "affiliation": "Universit\u00e0 degli Studi di Milano-Bicocca, Milan, Italy"}, {"name": "Mauro Pezze", "affiliation": "Universit\u00e0 degli Studi di Milano-Bicocca, Milan, Italy"}], "time": "May 2007", "citationCount": "27", "references": []},
{"doi": "10.1109/TEFSE.2009.5069582", "title": "Combining textual and structural analysis of software artifacts for traceability link recovery", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Documentation", "Large scale integration", "Matrix decomposition", "Terminology", "Information analysis", "Computer science", "Educational institutions", "Information retrieval", "Software tools", "Indexing"], "abstract": "Existing methods for recovering traceability links among software documentation artifacts analyze textual similarities among these artifacts. It may be the case, however, that related documentation elements share little terminology or phrasing. This paper presents a technique for indirectly recovering these traceability links in requirements documentation by combining textual with structural information as we conjecture that related requirements share related source code elements. A preliminary case study indicates that our combined approach improves the precision and recall of recovering relevant links among documents as compared to stand-alone methods based solely on analyzing textual similarities.", "author": [{"name": "Collin McMillan", "affiliation": "Department of Computer Science, The College of William and Mary, Williamsburg, VA, USA"}, {"name": "Denys Poshyvanyk", "affiliation": "Department of Computer Science, The College of William and Mary, Williamsburg, VA, USA"}, {"name": "Meghan Revelle", "affiliation": "Department of Computer Science, The College of William and Mary, Williamsburg, VA, USA"}], "time": "May 2009", "citationCount": "43", "references": [{"title": " \"Recovering Traceability Links between Code and Documentation\"", "authors": ["Antoniol", " G.", " Canfora", " G.", " Casazza", " G.", " De Lucia", " A.", " ", " Merlo", " E."]}, {"title": " \"Reuse or rewrite: Combining textual", "authors": ["Antoniol", " G.", " Hayes", " J. H.", " Gueheneuc", " Y.", " ", " Di Penta", " M."]}, {"title": " \"JRipples: A Tool for Program Comprehension during Incremental Change\"", "authors": ["Buckner", " J.", " Buchta", " J.", " Petrenko", " M.", " ", " Rajlich", " V."]}, {"title": " \"Case Study of Feature Location Using Dependence Graph\"", "authors": ["Chen", " K. ", " Rajlich", " V."]}, {"title": " \"ADAMS Re-Trace: a Traceability Recovery Tool\"", "authors": ["De Lucia", " A.", " Fasano", " F.", " Oliveto", " R.", " ", " Tortora", " G."]}, {"title": " \"Can Information Retrieval Techniques Effectively Support Traceability Link Recovery?\" in ICPC'06", "authors": ["De Lucia", " A.", " Fasano", " F.", " Oliveto", " R.", " ", " Tortora", " G."]}, {"title": " \"Recovering Traceability Links in Software Artefact Management Systems\"", "authors": ["De Lucia", " A.", " Fasano", " F.", " Oliveto", " R.", " ", " Tortora", " G."]}, {"title": " \"Incremental Approach and User Feedbacks: a Silver Bullet for Traceability Recovery\"", "authors": ["De Lucia", " A.", " Oliveto", " R.", " ", " Sgueglia", " P."]}, {"title": " \"IR-Based Traceability Recovery Processes: An Empirical Comparison of \"One-Shot\" and Incremental Processes\"", "authors": ["De Lucia", " A.", " Oliveto", " R.", " ", " Tortora", " G."]}, {"title": " \"Indexing by Latent Semantic Analysis\"", "authors": ["Deerwester", " S.", " Dumais", " S. T.", " Furnas", " G. W.", " L", "auer", " T. K.", " ", " Harshman", " R."]}, {"title": " \"Clustering Support for Automated Tracing\"", "authors": ["Duan", " C. ", " Clel", " J."]}, {"title": " \"CERBERUS: Tracing Requirements to Source Code Using Information Retrieval", "authors": ["Eaddy", " M.", " Aho", " A. V.", " Antoniol", " G.", " ", " Gu\u00e9h\u00e9neuc", " Y. G."]}, {"title": " \"Advancing candidate link generation for requirements tracing: the study of methods\"", "authors": ["Hayes", " J. H.", " Dekhtyar", " A.", " ", " Sundaram", " S. K."]}, {"title": " \"Exploring the Neighborhood with Dora to Expedite Software Maintenance\"", "authors": ["Hill", " E.", " Pollock", " L.", " ", " Vijay-Shanker", " K."]}, {"title": " \"Incremental Latent Semantic Indexing for Effective", "authors": ["Jiang", " H.", " Nguyen", " T.", " Che", " I. X.", " Jaygarl", " H.", " ", " Chang", " C."]}, {"title": " \"Semantic Clustering: Identifying Topics in Source Code\"", "authors": ["Kuhn", " A.", " Ducasse", " S.", " ", " G\u00eerba", " T."]}, {"title": " \"A Solution to Plato's Problem: The Latent Semantic Analysis Theory of the Acquisition", "authors": ["L", "auer", " T. K. ", " Dumais", " S. T."]}, {"title": " \"Poirot: A Distributed Tool Supporting Enterprise-Wide Automated Traceability\"", "authors": ["Lin", " J.", " Lin", " C. C.", " Huang", " J. C.", " Settimi", " R.", " Amaya", " J.", " Bedford", " G.", " Berenbach", " B.", " Khadra", " O. B.", " Duan", " C.", " ", " Zou", " X."]}, {"title": " \"Can LSI help Reconstructing Requirements Traceability in Design and Test?\" in Proc. of 10 CSMR'06", "authors": ["Lormans", " M. ", " Van Deursen", " A."]}, {"title": " \"Supporting Program Comprehension Using Semantic and Structural Information\"", "authors": ["Maletic", " J. I. ", " Marcus", " A."]}, {"title": " \"Recovery of Traceability Links Between Software Documentation and Source Code\"", "authors": ["Marcus", " A.", " Maletic", " J. I.", " ", " Sergeyev", " A."]}, {"title": " \"Feature Location using Probabilistic Ranking of Methods based on Execution Scenarios and IR\"", "authors": ["Poshyvanyk", " D.", " Gu\u00e9h\u00e9neuc", " Y. G.", " Marcus", " A.", " Antoniol", " G.", " ", " Rajlich", " V."]}, {"title": " \"Using Traceability Links to Assess and Maintain the Quality of Software Documentation\"", "authors": ["Poshyvanyk", " D. ", " Marcus", " A."]}, {"title": " \"Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code\"", "authors": ["Poshyvanyk", " D. ", " Marcus", " D."]}, {"title": " \"Incremental Change in OO Programming\"", "authors": ["Rajlich", " V. ", " Gosavi", " P."]}, {"title": " \"Automatic Generation of Suggestions for Program Investigation\"", "authors": ["Robillard", " M."]}, {"title": " \"Using Natural Language Program Analysis to Locate and Understand Action-Oriented Concerns\"", "authors": ["Shepherd", " D.", " Fry", " Z.", " Gibson", " E.", " Pollock", " L.", " ", " Vijay-Shanker", " K."]}, {"title": " \"SNIAFL: Towards a Static Non-interactive Approach to Feature Location\"", "authors": ["Zhao", " W.", " Zhang", " L.", " Liu", " Y.", " Sun", " J.", " ", " Yang", " F."]}]},
{"doi": "10.1109/ICSE.2009.5070512", "title": "Using quantitative analysis to implement autonomic IT systems", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Computer architecture", "Energy management", "Knowledge management", "Power system management", "Disk drives", "Pervasive computing", "Runtime", "Probabilistic logic", "Logic devices", "Energy consumption"], "abstract": "The software underpinning today's IT systems needs to adapt dynamically and predictably to rapid changes in system workload, environment and objectives. We describe a software framework that achieves such adaptiveness for IT systems whose components can be modelled as Markov chains. The framework comprises (i) an autonomic architecture that uses Markov-chain quantitative analysis to dynamically adjust the parameters of an IT system in line with its state, environment and objectives; and (ii) a method for developing instances of this architecture for real-world systems. Two case studies are presented that use the framework successfully for the dynamic power management of disk drives, and for the adaptive management of cluster availability within data centres, respectively.", "author": [{"name": "Radu Calinescu", "affiliation": "Computing Laboratory, University of Oxford, UK"}, {"name": "Marta Kwiatkowska", "affiliation": "Computing Laboratory, University of Oxford, UK"}], "time": "May 2009", "citationCount": "45", "references": [{"title": " \"Model checking continuous time Markov chains\"", "authors": ["A. Aziz ."]}, {"title": " \"Model-driven autonomic architecture\"", "authors": ["R. Calinescu"]}, {"title": " \"Implementation of a generic autonomic framework\"", "authors": ["R. Calinescu ."]}, {"title": "\"System providing methodology for policy-based resource allocation\"", "authors": []}, {"title": " \"Towards commercialization of utility-based resource allocation\"", "authors": ["R. Das ."]}, {"title": " \"Adaptive learning of metric correlations for temperature-aware database provisioning\"", "authors": ["S. Ghanbari ."]}, {"title": " \"Towards a model-driven architecture for autonomic systems\"", "authors": ["D. Gracanin ."]}, {"title": " \"Specification patterns for probabilistic quality properties\"", "authors": ["L. Grunske"]}, {"title": " \"A logic for reasoning about time and reliability\"", "authors": ["H. Hansson ", " B. Jonsson"]}, {"title": " \"On the use of model checking techniques for dependability evaluation\"", "authors": ["B. Haverkort ."]}, {"title": " \"Modeling for NASA autonomous nano-technology swarm missions and model-driven autonomic computing\"", "authors": ["M. Hinchey ."]}, {"title": " \"How fast and fat is your probabilistic model checker? An experimental comparison\" in Hardware and Software: Verification and Testing", "authors": ["D. Jansen ."]}, {"title": " \"Towards a model-driven software engineering methodology for organic computing systems\"", "authors": ["H. Kasinger ", " B. Bauer"]}, {"title": " \"The vision of autonomic computing\"", "authors": ["J. Kephart ", " D. Chess"]}, {"title": " \"Quantitative verification: Models techniques and tools\"", "authors": ["M. Kwiatkowska"]}, {"title": " \"Stochastic model checking\" in Formal Methods for the Design of Computer Communication and Software Systems: Performance Evaluation", "authors": ["M. Kwiatkowska ."]}, {"title": " \"Quantitative analysis with the probabilistic model checker PRISM\"", "authors": ["M. Kwiatkowska ."]}, {"title": " \"Server-level power control\"", "authors": ["C. Lefurgy ."]}, {"title": "\"Microsoft Corporation\"", "authors": []}, {"title": " \"Autonomic Computing\" in ", "authors": ["R. Murch"]}, {"title": " \"Autonomic Computing: Concepts Infrastructure & Applications\" in ", "authors": ["M. Parashar ", " S. Hariri"]}, {"title": " \"A model-driven architecture approach for modeling specifying and deploying policies in autonomous and autonomic systems\"", "authors": ["J. Pena ."]}, {"title": " \"Stochastic modeling of a power-managed system: construction and optimization\"", "authors": ["Q. Qiu ."]}, {"title": " \"Model-driven development of self-managing software systems\"", "authors": ["M. Rohr ."]}, {"title": " \"An introduction to reflection oriented programming\"", "authors": ["J. Sobel ", " D. Friedman"]}, {"title": " \"Biologically-inspired concepts for self-management of complexity\"", "authors": ["R. Sterritt ", " M. Hinchey"]}, {"title": " \"Utility functions in autonomic systems\"", "authors": ["W. Walsh ."]}, {"title": " \"An architectural approach to autonomic computing\"", "authors": ["S. White ."]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070966", "title": "Improving quality, one process change at a time", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software quality", "Delay estimation", "Iterative methods", "Automatic testing", "Software testing", "Engineering management", "Stability", "Scheduling", "Delay effects", "Automatic programming"], "abstract": "We report on one organization's experience making process changes in a suite of projects. The changes were motivated by clients' requests for better time estimates, better quality, better stability and more reliable test scheduling resulting from the high number of bug reports and constant delivery delays. The teams embarked on a series of top-down process changes inspired by the IBM Rational Unified Process. Changes included adopting the Rational Tools, introducing iterative development, and later the hiring of a formal manual testing team and support for refactoring activities. To assess the impact of these changes we have collected fault data from 23 releases of the systems including releases from before and after these changes were introduced. In this report we discuss the challenges and impact of these process changes, and how the development teams leveraged these successes to gradually introduce other process improvements in a bottom-up fashion.", "author": [{"name": "Caryna Pinheiro", "affiliation": "CMIT Solutions, USA"}, {"name": "Frank Maurer", "affiliation": "University of Calgary, Canada"}, {"name": "Jonathan Sillito", "affiliation": "University of Calgary, Canada"}], "time": "May 2009", "citationCount": "3", "references": [{"title": "P. A. Beavers. Managing a large \"agile\" software engineering organization. In Proceedings of the AGILE Conference", "authors": []}]},
{"doi": "10.1109/SECSE.2009.5069164", "title": "Injecting software architectural constraints into legacy scientific applications", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Application software", "Software systems", "Connectors", "Software architecture", "Software engineering", "Software maintenance", "Propulsion", "Laboratories", "Computer architecture", "Programming"], "abstract": "While software architectures have been shown to aid developers in maintenance, reuse, and evolution as well as many other software engineering tasks, there is little language-level support for these architectural concepts in scientific programming languages such as Fortran and C. Because many existing scientific codes are written in legacy languages, it is difficult to integrate them into architected software systems. By wrapping scientific codes in architecturally-aware interfaces, we are able to componentize legacy programs, integrating them into systems built with first-class architectural elements while meeting performance and throughput requirements of scientific codes.", "author": [{"name": "David Woollard", "affiliation": "Jet Propulsion Laboratory, Pasadena, CA, USA"}, {"name": "Chris Mattmann", "affiliation": "Jet Propulsion Laboratory, Pasadena, CA, USA"}, {"name": "Nenad Medvidovic", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}], "time": "May 2009", "citationCount": "4", "references": []},
{"doi": "10.1109/ICSE.2007.30", "title": "DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Cloning", "Robustness", "Clustering algorithms", "Software engineering", "Fingerprint recognition", "Programming profession", "Application software", "Euclidean distance", "Java", "Linux"], "abstract": "Detecting code clones has many software engineering applications. Existing approaches either do not scale to large code bases or are not robust against minor code modifications. In this paper, we present an efficient algorithm for identifying similar subtrees and apply it to tree representations of source code. Our algorithm is based on a novel characterization of subtrees with numerical vectors in the Euclidean space R\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">n</sup>\nmiddot and an efficient algorithm to cluster these vectors w.r.t. the Euclidean distance metric. Subtrees with vectors in one cluster are considered similar. We have implemented our tree similarity algorithm as a clone detection tool called DECKARD and evaluated it on large code bases written in C and Java including the Linux kernel and JDK. Our experiments show that DECKARD is both scalable and accurate. It is also language independent, applicable to any language with a formally specified grammar.", "author": [{"name": "Lingxiao Jiang", "affiliation": "University of California, Davis, USA"}, {"name": "Ghassan Misherghi", "affiliation": "University of California, Davis, USA"}, {"name": "Zhendong Su", "affiliation": "University of California, Davis, USA"}, {"name": "Stephane Glondu", "affiliation": "ENS Cachan, France"}], "time": "May 2007", "citationCount": "317", "references": []},
{"doi": "10.1109/TEFSE.2009.5069583", "title": "Trace retrieval for evolving artifacts", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Information retrieval", "Feedback", "Programming", "Humans", "Prototypes", "Software systems", "Natural languages", "Conferences", "Functional analysis", "Probability"], "abstract": "IR-based trace retrieval is a method to derive traceability links using information retrieval (IR) algorithms. So far, this method has been applied only to static artifacts. In this paper, we address IR-based trace retrieval applied to evolving artifacts. We describe our enhancements to existing algorithms and present first promising results by applying the enhanced algorithm to two different data sets.", "author": [{"name": "Stefan Winkler", "affiliation": "Fern Universit\u00e4t Hagen, Hagen, Germany"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " et al. \"Recovering Traceability Links between Code and Documentation\". IEEE Transactions on Software Engineering", "authors": ["G. Antoniol"]}, {"title": " S. Riddle. \"Overcoming the Traceability Benefit Problem\". In Proceedings of the 13th IEEE International Conference on Requirements Engineering (RE'05)", "authors": ["P. Arkley"]}, {"title": " S.-C. Chou. \"Consistency management in a process environment\". Journal of Systems and Software", "authors": ["J.-Y. J. Chen"]}, {"title": " M. Christensen. \"Event-Based Traceability for Managing Evolutionary Change\". IEEE Transactions on Software Engineering", "authors": ["J. Clel", "-Huang", " C. K. Chang"]}, {"title": " J. H. Hayes. \"Problem Statements and Grand Challenges\". Tech. Rep. COET-GCT-06-01-0.9", "authors": ["J. Clel", "-Huang", " A. Dekhtyar"]}, {"title": " et al. \"Utilizing Supporting Evidence to Improve Dynamic Requirements Traceability\". In Proceedings of the 13th IEEE International Conference on Requirements Engineering (RE'05)", "authors": ["J. Clel", "-Huang"]}, {"title": " et al. \"Best Practices for Automated Traceability\". IEEE Computer", "authors": ["J. Clel", "-Huang"]}, {"title": " et al. \"Indexing by latent semantic analysis\". Journal of the Society for Information Science", "authors": ["S. Deerwester"]}, {"title": " A. C. W. Finkelstein. \"An analysis of the requirements traceability problem\". In Proceedings of the First International Conference on Requirements Engineering (RE'94)", "authors": ["O. C. Z. Gotel"]}, {"title": " A. Dekhtyar. \"A Framework for Comparing Requirements Tracing Experiments\". International Journal of Software Engineering and Knowledge Engineering", "authors": ["J. H. Hayes"]}, {"title": " A. Dekhtyar. \"Humans in the traceability loop: can't live with 'em", "authors": ["J. H. Hayes"]}, {"title": " J. Osborne. \"Improving Requirements Tracing via Information Retrieval\". In Proceedings of the 11th IEEE International Requirements Engineering Conference (RE'03)", "authors": ["J. H. Hayes", " A. Dekhtyar"]}, {"title": " S. K. Sundaram. \"Advancing Candidate Link Generation for Requirements Tracing: The Study of Methods\". IEEE Transactions on Software Enginering", "authors": ["J. H. Hayes", " A. Dekhtyar"]}, {"title": " et al. \"Traceability Link Evolution Management with Incremental Latent Semantic Indexing\". In Proceedings of the 31st Annual International Computer Software and Applications Conference (COMPSAC'07)", "authors": ["H. yi Jiang"]}, {"title": " A. van Deursen. \"Reconstructing requirements coverage views from design and test using traceability recovery via LSI\". In TEFSE '05: Proceedings of the 3rd international workshop on Traceability in emerging forms of software engineering", "authors": ["M. Lormans"]}, {"title": " P. Sgueglia. \"Incremental Approach and User Feedbacks: a Silver Bullet for Traceability Recovery\". In Proceedings of the IEEE International Conference on Software Maintenance (ICSM'06)", "authors": ["A. de Lucia", " R. Oliveto"]}, {"title": " et al. \"Recovering Traceability Links in Software Artefact Management Systems using Information Retrieval Methods\". ACM Transactions of Software Engineering and Methodology", "authors": ["A. de Lucia"]}, {"title": " A. Sergeyev. \"Recovery of Traceability Links Between Software Documentation and Source Code\". International Journal of Software Engineering and Knowledge Engineering", "authors": ["A. Marcus", " J. I. Maletic"]}]},
{"doi": "10.1109/ICSE.2009.5070513", "title": "Model evolution by run-time parameter adaptation", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Runtime", "Adaptation model", "Reliability engineering", "Design engineering", "Parameter estimation", "Data mining", "Bayesian methods", "Predictive models", "Web services", "Numerical simulation"], "abstract": "Models can help software engineers to reason about design-time decisions before implementing a system. This paper focuses on models that deal with non-functional properties, such as reliability and performance. To build such models, one must rely on numerical estimates of various parameters provided by domain experts or extracted by other similar systems. Unfortunately, estimates are seldom correct. In addition, in dynamic environments, the value of parameters may change over time. We discuss an approach that addresses these issues by keeping models alive at run time and feeding a Bayesian estimator with data collected from the running system, which produces updated parameters. The updated model provides an increasingly better representation of the system. By analyzing the updated model at run time, it is possible to detect or predict if a desired property is, or will be, violated by the running implementation. Requirement violations may trigger automatic reconfigurations or recovery actions aimed at guaranteeing the desired goals. We illustrate a working framework supporting our methodology and apply it to an example in which a Web service orchestrated composition is modeled through a discrete time Markov chain. Numerical simulations show the effectiveness of the approach.", "author": [{"name": "Ilenia Epifani", "affiliation": "Dipartimento di Matematica, Politecnico di Milano, Milan, Italy"}, {"name": "Carlo Ghezzi", "affiliation": "DeepSE Group at DEI, Politecnico di Milano, Milan, Italy"}, {"name": "Raffaela Mirandola", "affiliation": "DeepSE Group at DEI, Politecnico di Milano, Milan, Italy"}, {"name": "Giordano Tamburrelli", "affiliation": "DeepSE Group at DEI, Politecnico di Milano, Milan, Italy"}], "time": "May 2009", "citationCount": "127", "references": [{"title": " \"Model-based performance prediction in software development: A survey\"", "authors": ["S. Balsamo", " A. Di Marco", " P. Inverardi ", " M. Simeoni"]}, {"title": " \"Validation of web service compositions\"", "authors": ["L. Baresi", " D. Bianculli", " C. Ghezzi", " S. Guinea ", " P. Spoletini"]}, {"title": " \"Towards Dynamic Monitoring of WS-BPEL Processes\"", "authors": ["L. Baresi ", " S. Guinea"]}, {"title": " \"Model-based performance prediction with the palladio component model\"", "authors": ["S. Becker", " H. Koziolek ", " R. Reussner"]}, {"title": " \"The jmt simulator for performance evaluation of non-product-form queueing networks\"", "authors": ["M. Bertoli", " G. Casale ", " G. Serazzi"]}, {"title": " \"An overview of the jmt queueing network simulator\"", "authors": ["M. Bertoli", " G. Casale ", " G. Serazzi"]}, {"title": " \"Early prediction of software component reliability\"", "authors": ["L. Cheung", " R. Rosh", "el", " N. Medvidovic ", " L. Golubchik"]}, {"title": " \"Conjugate priors for exponential families\"", "authors": ["P. Diaconis ", " D. Ylvisaker"]}, {"title": " \"Model checking service compositions under resource constraints\"", "authors": ["H. Foster", " W. Emmerich", " J. Kramer", " J. Magee", " D. Rosenblum ", " S. Uchitel"]}, {"title": " \"Model-based verification of web service compositions\"", "authors": ["H. Foster", " S. Uchitel", " J. Magee ", " J. Kramer"]}, {"title": " \"Mercury LoadRunner Monitor Reference\"", "authors": ["C. Fraser ", " D. Hanson"]}, {"title": " \"Analysis of interacting bpel web services\"", "authors": ["X. Fu", " T. Bultan ", " J. Su"]}, {"title": " \"The dawning of the autonomic computing era\"", "authors": ["A. Ganek ", " T. Corbi"]}, {"title": " \"Structure-Based Software Reliability Prediction\"", "authors": ["S. Gokhale ", " K. Trivedi"]}, {"title": " \"Architecture-based software reliability analysis: Overview and limitations\"", "authors": ["S. S. Gokhale"]}, {"title": " \"Theory of software reliability based on components\"", "authors": ["D. Hamlet", " D. Mason ", " D. Woit"]}, {"title": " \"PRISM: A tool for automatic verification of probabilistic systems\"", "authors": ["A. Hinton", " M. Kwiatkowska", " G. Norman ", " D. Parker"]}, {"title": " \"PRISM 2.0: a tool for probabilistic model checking\"", "authors": ["M. Kwiatkowska", " G. Norman ", " D. Parker"]}, {"title": " \"A hierarchical Dirichlet language model\"", "authors": ["D. MacKay ", " L. Peto"]}, {"title": " \"Model-checking verification for reliable web service\"", "authors": ["S. Nakajima"]}, {"title": " \"service-oriented Computing\"", "authors": ["M. Papazoglou ", " D. Georgakopoulos"]}, {"title": " \"Efficient Monitoring of Web Service SLAs\"", "authors": ["F. Raimondi", " J. Skene", " L. Chen ", " W. Emmerich"]}, {"title": " \"Stochastic modeling of composite web services for closed-form analysis of their performance and reliability bottlenecks\"", "authors": ["N. Sato ", " K. S. Trivedi"]}, {"title": " \"Inferring markov chains: Bayesian estimation model comparison entropy rate and out-of-class modeling\"", "authors": ["C. C. Strelioff", " J. P. Crutchfield ", " A. W. H\u00fcbler"]}, {"title": " \"Performance model estimation and tracking using optimal filters\"", "authors": ["T. Zheng", " M. Woodside ", " M. Litoiu"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070967", "title": "Using a validation model to measure the agility of software development in a large software development organization", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Programming", "Software measurement", "Software quality", "Productivity", "Computer industry", "Manufacturing industries", "Computer science", "Cost function", "Production facilities", "Manufacturing processes"], "abstract": "This paper provides a metric for evaluating the agility of software development projects and organizations. The metric is based on a validation model derived from the V&V model. In this metric, agility is defined as minimizing the time between the production of intermediate deliverables and the validation of those deliverables. The major distinguishing feature of this metric is that it is independent of any particular software development process model, such as agile software development methods or the waterfall model. Therefore, this metric can be used for software development organizations that have a wide variety of software development projects with varying kinds of development processes. This metric has been shown to be practical in large software development organizations through exhaustive use in more than 7,000 projects over the last 9 years.", "author": [{"name": "Mikio Ikoma", "affiliation": "Software Division, Hitachi and Limited, Japan"}, {"name": "Masayuki Ooshima", "affiliation": "Software Division, Hitachi and Limited, Japan"}, {"name": "Takahiro Tanida", "affiliation": "Software Division, Hitachi and Limited, Japan"}, {"name": "Michiko Oba", "affiliation": "Software Division, Hitachi and Limited, Japan"}, {"name": "Sanshiro Sakai", "affiliation": "Department of Computer Science, Shizuoka University, Japan"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/SECSE.2009.5069165", "title": "Comparing bioinformatics software development by computer scientists and biologists: An exploratory study", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Bioinformatics", "Programming", "Biology computing", "Open source software", "Biological information theory", "Sequences", "Computational biology", "Software tools", "North America", "Biochemistry"], "abstract": "We present the results of a study designed to better understand information-seeking activities in bioinformatics software development by computer scientists and biologists. We collected data through semi-structured interviews with eight participants from four different bioinformatics labs in North America. The research focus within these labs ranged from computational biology to applied molecular biology and biochemistry. The findings indicate that colleagues play a significant role in information seeking activities, but there is need for better methods of capturing and retaining information from them during development. Also, in terms of online information sources, there is need for more centralization, improved access and organization of resources, and more consistency among formats. More broadly, the findings illustrate a variety of information problems that end-user biologists and professional software developers face in developing bioinformatics software and how they are influenced by the level of domain knowledge and technical expertise.", "author": [{"name": "Parmit K. Chilana", "affiliation": "The Information School DUB Group, University of Washington, USA"}, {"name": "Carole L. Palmer", "affiliation": "Graduate School of Library and Information Science, University of Illinois, Urbana-Champaign, Champaign, USA"}, {"name": "Andrew J. Ko", "affiliation": "The Information School DUB Group, University of Washington, USA"}], "time": "May 2009", "citationCount": "10", "references": [{"title": " \"Developing a protocol for bioinformatics analysis: An integrated information behavior and task analysis approach", "authors": ["J. C. Bartlett ", " E. G. Toms"]}, {"title": " \"An object-oriented programming system for the integration of internet-based bioinformatics resources", "authors": ["A. Beveridge"]}, {"title": " \"Biomedical computing and visualization software environments", "authors": ["C. R. Johnson", " R. MacLeod", " S. G. Parker", " ", " D. Weinstein"]}, {"title": " \"Information needs in collocated software development teams", "authors": ["A. Ko", " R. Deline", " ", " G. Venolia"]}, {"title": " \"Participatory programming: Developing programmable bioinformatics tools for end-users", "authors": ["C. Letondal"]}, {"title": " \"Information problems in molecular biology and bioinformatics", "authors": ["W. J. MacMullen ", " S. O. Denn"]}, {"title": " \"Problem dimensions and information traits", "authors": ["S. E. MacMullin ", " R. S. Taylor"]}, {"title": " \"BioLingua: A programmable knowledge environment for biologists", "authors": ["J. Massar", " M. Travers", " J. Elhai", " ", " J. Shrager"]}, {"title": " \"Bioinformatics Factsheet", "authors": ["National Center for Biotechnology"]}, {"title": " \"Weak information work and \"doable\" problems in interdisciplinary science\"", "authors": ["C. L. Palmer"]}, {"title": " \"Information use environments", "authors": ["R. S. Taylor"]}, {"title": " \"Applying task analysis to describe and facilitate bioinformatics tasks", "authors": ["D. Tran", " C. Dubay", " P. Gorman", " ", " W. Hersh"]}, {"title": " \"Informing design of a search tool for bioinformatics", "authors": ["M. Umarji ", " C. Seaman"]}]},
{"doi": "10.1109/ICSE.2007.97", "title": "Very-Large Scale Code Clone Analysis and Visualization of Open Source Programs Using Distributed CCFinder: D-CCFinder", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Cloning", "Visualization", "Open source software", "Distributed computing", "Hardware", "Performance analysis", "Large-scale systems", "Workstations", "Laboratories", "Scattering"], "abstract": "The increasing performance-price ratio of computer hardware makes possible to explore a distributed approach at code clone analysis. This paper presents D-CCFinder, a distributed approach at large-scale code clone analysis. D-CCFinder has been implemented with 80 PC workstations in our student laboratory, and a vast collection of open source software with about 400 million lines in total has been analyzed with it in about 2 days. The result has been visualized as a scatter plot, which showed the presence of frequently used code as easy recognizable patterns. Also, D-CCFinder has been used to analyze a single software system against the whole collection in order to explore the presence of code imported from open source software.", "author": [{"name": "Simone Livieri", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Toyonaka, Osaka, Japan"}, {"name": "Yoshiki Higo", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Toyonaka, Osaka, Japan"}, {"name": "Makoto Matushita", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Toyonaka, Osaka, Japan"}, {"name": "Katsuro Inoue", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Toyonaka, Osaka, Japan"}], "time": "May 2007", "citationCount": "69", "references": []},
{"doi": "10.1109/TEFSE.2009.5069584", "title": "Cross-artifact traceability using lightweight links", "publisher": "2009 ICSE Workshop on Traceability in Emerging Forms of Software Engineering", "keyword": ["Information retrieval", "Feedback", "Programming", "Humans", "Prototypes", "Software systems", "Natural languages", "Conferences", "Functional analysis", "Probability"], "abstract": "Much research in traceability has focused on following requirements and features over the early phases of the software lifecycle. There has been comparatively little work on traceability into later phases and artifacts. In this paper, we tackle the problem of traceability across artifacts, including documents and source code, and maintaining traceability links through successive changes. We have developed Zelda, a prototype for associating arbitrary lines in text-based files with a feature map. This representation can be used to link together sections from many types of artifacts and can also contain annotations and notes. Zelda automatically tracks and presents the locations of these links in subsequent versions of the artifacts. We evaluated Zelda using 25 versions of jEdit, (260 KLOC). The overall precision for 419 links across the five features was 0.90 and the recall was 0.73. The average precision and recall per features is 0.78 and 0.69 respectively.", "author": [{"name": "Sukanya Ratanotayanon", "affiliation": "Department of Informatics, University of California, San Diego, Irvine, USA"}, {"name": "Susan Elliott Sim", "affiliation": "Department of Informatics, University of California, San Diego, Irvine, USA"}, {"name": "Derek J. Raycraft", "affiliation": "Department of Informatics, University of California, San Diego, Irvine, USA"}], "time": "May 2009", "citationCount": "10", "references": [{"title": " \"An Analysis of the Requirements Traceability Problem", "authors": ["O.C.Z. Gotel ", " C.W. Finkelstein"]}, {"title": " \"Using Scenarios to Support Traceability", "authors": ["L. Naslavsky", " T.A. Alspaugh", " D.J. Richardson ", " H. Ziv"]}, {"title": " \"Improving Reviews by Extended Traceability", "authors": ["P. Haumer", " K. Pohl", " K. Weidenhaupt ", " M. Jarke"]}, {"title": " \"An Agile Approach to Capturing Requirements and Traceability", "authors": ["C. Lee", " L. Guadagno ", " X. Jia"]}, {"title": " \"Design Traceability of Complex Systems", "authors": ["T. Hughes ", " C. Martin"]}, {"title": " \"ArchTrace: Policy-Based Support for Managing Evolving Architecture-to-Implementation Traceability Links", "authors": ["L.G.P. Murta", " A. Van De Hoek ", " C.M.L. Werner"]}, {"title": " \"Event-Based Traceability for Managing Evolutionary Change", "authors": ["J. Clel", "-Huang "]}, {"title": " \"Seesoft-A Tool for Visualizing Line Oriented Software Statistics", "authors": ["S.G. Eick", " J.L. Steffen ", " E.E. Sumner"]}, {"title": " \"Building a Better Traceability Matrix with DOORS", "authors": ["B. Azelborn"]}, {"title": " \"Traceability Strategies for Managing Requirements with use Cases", "authors": ["I. Spence ", " L. Probasco"]}, {"title": " \"An Object-Oriented Tool for Tracing Requirements", "authors": ["F.A.C. Pinheiro ", " J.A. Goguen"]}, {"title": " \"Representing Concerns in Source Code", "authors": ["M.P. Robillard ", " G.C. Murphy"]}, {"title": " \"Mylar: A Degree-of-Interest Model for IDEs", "authors": ["M. Kersten ", " G.C. Murphy"]}, {"title": " \"A Scenario-Driven Approach to Traceability", "authors": ["A. Egyed"]}, {"title": " \"A Little Knowledge can Go a Long Way Towards Program Understanding", "authors": ["J. Sayyad-Shirabad", " T.C. Lethbridge ", " S. Lyon"]}, {"title": " \"Tracing Requirements to Defect Reports: An Application of Information Retrieval Techniques", "authors": ["S. Yadla", " J. H. Hayes ", " A. Dekhtyar"]}, {"title": " \"Recovering Traceability Links between Code and Documentation", "authors": ["G. Antoniol", " G. Canfora", " G. Casazza", " A. De Lucia ", " E. Merlo"]}, {"title": " \"Enhancing an Artefact Management System with Traceability Recovery Features", "authors": ["A. De Lucia", " F. Fasano", " R. Oliveto ", " G. Tortora"]}, {"title": " \"Recovering Documentation-to-Source-Code Traceability Links using Latent Semantic Indexing", "authors": ["A. Marcus ", " J.I. Maletic"]}, {"title": " \"Improving Comprehensibility of Source Code Via Traceability Information: A Controlled Experiment", "authors": ["A. De Lucia", " R. Oliveto", " F. Zurolo ", " M. Di Penta"]}, {"title": " \"Hipikat: Recommending Pertinent Software Development Artifacts", "authors": ["D. Cubranic ", " G.C. Murphy"]}, {"title": " \"Tracking Source Locations", "authors": ["S.P. Reiss"]}, {"title": " \"Identifying Changed Source Code Lines from Version Repositories", "authors": ["G. Canfora", " L. Cerulo ", " M. Di Penta"]}]},
{"doi": "10.1109/ICSE.2009.5070514", "title": "Taming Dynamically Adaptive Systems using models and aspects", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Adaptive systems", "Runtime", "Dynamic programming", "Explosions", "Model driven engineering", "Software systems", "Weaving", "Middleware", "Robustness", "Time factors"], "abstract": "Since software systems need to be continuously available under varying conditions, their ability to evolve at runtime is increasingly seen as one key issue. Modern programming frameworks already provide support for dynamic adaptations. However the high-variability of features in Dynamic Adaptive Systems (DAS) introduces an explosion of possible runtime system configurations (often called modes) and mode transitions. Designing these configurations and their transitions is tedious and error-prone, making the system feature evolution difficult. While Aspect-Oriented Modeling (AOM) was introduced to improve the modularity of software, this paper presents how an AOM approach can be used to tame the combinatorial explosion of DAS modes. Using AOM techniques, we derive a wide range of modes by weaving aspects into an explicit model reflecting the runtime system. We use these generated modes to automatically adapt the system. We validate our approach on an adaptive middleware for home-automation currently deployed in Rennes metropolis.", "author": [{"name": "Brice Morin", "affiliation": "Centre Rennes-Bretagne Atlantique, INRIA, Rennes, France"}, {"name": "Olivier Barais", "affiliation": "IRISA, Universit\u00e9 de Rennes 1, Rennes, France"}, {"name": "Gregory Nain", "affiliation": "Centre Rennes-Bretagne Atlantique, INRIA, Rennes, France"}, {"name": "Jean-Marc Jezequel", "affiliation": "Centre Rennes-Bretagne Atlantique, INRIA, Rennes, France"}], "time": "May 2009", "citationCount": "90", "references": [{"title": " \"Extracting and Evolving Code in Product Lines with Aspect-Oriented Programming\"", "authors": ["V. Alves", " P. Matos", " L. Cole", " A. Vasconcelos", " P. Borba ", " G. Ramalho"]}, {"title": " \"Aspectual mixin layers: aspects and features in concert\"", "authors": ["S. Apel", " T. Leich ", " G. Saake"]}, {"title": " \"Managing Dynamic Reconfiguration in Component-Based Systems\"", "authors": ["T. Batista", " A. Joolia ", " G. Coulson"]}, {"title": " \"Models@run.time (at MoDELS) workshops\"", "authors": ["N. Bencomo", " G. Blair ", " R. France"]}, {"title": " \"Genie: Supporting the Model Driven Development of Reflective Component-based Adaptive Systems\"", "authors": ["N. Bencomo", " P. Grace", " C. Flores", " D. Hughes ", " G. Blair"]}, {"title": " \"Opencom v2: A component model for building systems software\"", "authors": ["G. Blair", " G. Coulson", " J. Ueyama", " K. Lee ", " A. Joolia"]}, {"title": " \"The FRACTAL Component Model and its Support in Java\"", "authors": ["E. Bruneton", " T. Coupaye", " M. Leclercq", " V. Qu\u00e9ma ", " J. Stefani"]}, {"title": " \"Coverage and Adequacy in Software Product Line Testing\"", "authors": ["M. Cohen", " M. Dwyer ", " J. Shi"]}, {"title": " \"Verifying Feature-Based Model Templates Against Well-Formedness OCL Constraints\"", "authors": ["K. Czarnecki ", " K. Pietroszek"]}, {"title": " \"An Aspect-Oriented Approach for Developing Self-Adaptive Fractal Components\"", "authors": ["P. David ", " T. Ledoux"]}, {"title": " \"Evolving software product lines with aspects: an empirical study on design stability\"", "authors": ["E. Figueiredo", " N. Cacho", " C. SantAnna", " M. Monteiro", " U. Kulesza", " A. Garcia", " ."]}, {"title": " \"Modeling and Validating Dynamic Adaptation\"", "authors": ["F. Fleurey", " V. Dehlen", " N. Bencomo", " B. Morin ", " J.-M. J\u00e9z\u00e9quel"]}, {"title": " \"Model Composition in Product Lines and Feature Interaction Detection Using Critical Pair Analysis\"", "authors": ["P. Jayaraman", " J. Whittle", " A. Elkhodary ", " H. Gomaa"]}, {"title": " \"Model Driven Design and Aspect Weaving\"", "authors": ["J.-M. J\u00e9z\u00e9quel"]}, {"title": " \"An Overview of Aspect J\"", "authors": ["G. Kiczales", " E. Hilsdale", " J. Hugunin", " M. Kersten", " J. Palm ", " W. Griswold"]}, {"title": " \"Aspect-Oriented Programming\"", "authors": ["G. Kiczales", " J. Lamping", " A. Menhdhekar", " C. Maeda", " C. Lopes", " J.-M. Loingtier", " ."]}, {"title": " \"Design Verification for Product Line Development\"", "authors": ["T. Kishi", " N. Noda ", " T. Katayama"]}, {"title": " \"Introducing Variability into Aspect-Oriented Modeling Approaches\"", "authors": ["P. Lahire", " B. Morin", " G. Vanwormhoudt", " A. Gaignard", " O. Barais ", " J. M. J\u00e9z\u00e9quel"]}, {"title": " \"Theorem Proving for Product Line Model Verification\"", "authors": ["M. Mannion ", " J. C\u00e1mara"]}, {"title": " \"Harnessing digital evolution\"", "authors": ["P. McKinley", " B. H. C. Cheng", " C. Ofria", " D. Knoester", " B. Beckmann ", " H. Goldsby"]}, {"title": " \"Variability Management with Feature-Oriented Programming and Aspects\"", "authors": ["M. Mezini ", " K. Ostermann"]}, {"title": " \"Variability management with feature-oriented programming and aspects\"", "authors": ["M. Mezini ", " K. Ostermann"]}, {"title": " \"Towards a Generic Aspect-Oriented Modeling Framework\"", "authors": ["B. Morin", " O. Barais", " J. M. J\u00e9z\u00e9quel ", " R. Ramos"]}, {"title": " \"An Aspect-Oriented and Model-Driven Approach for Managing Dynamic Variability\"", "authors": ["B. Morin", " F. Fleurey", " N. Bencomo", " J.-M. J\u00e9z\u00e9quel", " A. Solberg", " V. Dehlen", " ."]}, {"title": " \"Managing Variability Complexity in Aspect-Oriented Modeling\"", "authors": ["B. Morin", " G. Vanwormhoudt", " P. Lahire", " A. Gaignard", " O. Barais ", " J.-M. Jzquel"]}, {"title": " \"Weaving Executability into Object-Oriented Meta-languages\"", "authors": ["P. Muller", " F. Fleurey ", " J. M. J\u00e9z\u00e9quel"]}, {"title": " \"Using MDE to Build a Schizonfrenic Middleware for Home/Building Automation\"", "authors": ["G. Nain", " E. Daubert", " O. Barais ", " J. M. J\u00e9z\u00e9quel"]}, {"title": " \"Matching and Merging of Statecharts Specifications\"", "authors": ["S. Nejati", " M. Sabetzadeh", " M. Chechik", " S. Easterbrook ", " P. Zave"]}, {"title": " \"A Component-Based and Aspect-Oriented Model for Software Evolution\" in IJCAT'07: International Journal of Computer Applications in Technology", "authors": ["N. Pessemier", " L. Seinturier", " T. Coupaye ", " L. Duchien"]}, {"title": " \"Software Product Line Testing\"", "authors": ["K. Pohl ", " A. Metzger"]}, {"title": " \"Matching Model Snippets\"", "authors": ["R. Ramos", " O. Barais ", " J. M. J\u00e9z\u00e9quel"]}, {"title": " \"Issues Concerning Variability in Software Product Lines\"", "authors": ["M. Svahnberg ", " J. Bosch"]}, {"title": "\"OSGi Service Platform Core Specification\"", "authors": []}, {"title": " \"Supporting runtime system adaptation through product line engineering and plug-in techniques\"", "authors": ["R. Wolfinger", " S. Reiter", " D. Dhungana", " P. Grunbacher ", " H. Prahofer"]}, {"title": " \"Model-based Development of Dynamically Adaptive Software\"", "authors": ["J. Zhang ", " B. H. C. Cheng"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070968", "title": "WEAVE: WEb Applications Validation Environment", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Application software", "Software quality", "Logic", "Business", "Security", "Programming", "Software testing", "Software tools", "Java", "Scalability"], "abstract": "Ensuring software quality in the presence of multiple software development methodologies such as agile and waterfall models is a challenging task. Web applications are released to customers in ldquoBetardquo mode due to tremendous pressure on ldquotime-to-marketrdquo. In order to check end-to-end functional behavior of web applications, conventional testing tools have not matched short release cycles and have not kept up with agile software methodologies. In this paper we present a tool framework called WEb Applications Validation Environment (WEAVE) for checking functional behavior such as business logic and security of web applications. We have used WEAVE for finding defects in large Javacentric commercial-strength Web applications. As part of WEAVE, we have developed (1) a semi-automatic method for environment generation to constrain the behavior of the application for scalability, (2) an intuitive interface for engineers to construct requirements that are compiled into temporal logic to address the issue of usability, and (3) symbolic execution tailored to finding business logic and security defects. We describe how we have architected WEAVE as a web service for company's internal software teams to improve software quality without an upfront investment in licenses and computing infrastructure.", "author": [{"name": "Sreeranga P. Rajan", "affiliation": "Trusted Systems Innovation Group, Fujitsu Laboratories of America, Inc., Sunnyvale, CA, USA"}, {"name": "Oksana Tkachuk", "affiliation": "Trusted Systems Innovation Group, Fujitsu Laboratories of America, Inc., Sunnyvale, CA, USA"}, {"name": "Mukul Prasad", "affiliation": "Trusted Systems Innovation Group, Fujitsu Laboratories of America, Inc., Sunnyvale, CA, USA"}, {"name": "Indradeep Ghosh", "affiliation": "Trusted Systems Innovation Group, Fujitsu Laboratories of America, Inc., Sunnyvale, CA, USA"}, {"name": "Nitin Goel", "affiliation": "Trusted Systems Innovation Group, Fujitsu Laboratories of America, Inc., Sunnyvale, CA, USA"}, {"name": "Tadahiro Uehara", "affiliation": "Software Innovation Laboratories, Fujitsu Laboratories Limited, Kawasaki, Japan"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/SECSE.2009.5069166", "title": "Preparing scientists for scalable software development", "publisher": "2009 ICSE Workshop on Software Engineering for Computational Science and Engineering", "keyword": ["Programming", "Software engineering", "Instruments", "High performance computing", "Distributed computing", "Portals", "Australia", "Large-scale systems", "Internet", "Collaborative work"], "abstract": "Software development projects have always struggled to find the balance between domain knowledge and software engineering skills and experience. In computational science, this situation is in the extreme, requiring highly specific domain knowledge paired with skills in tuning parallel programs for optimal performance on specific hardware. These projects often take place in very small teams, or by an individual researcher, who must embody both the scientist and the software engineer. Through observation of a range of computational science projects, and the implementation of rigorous software engineering methods in larger projects, we can reflect on where to bring some of the formality of software engineering into computational science. As part of the iVEC Education Program we provide training to eResearchers, which provides an opportunity to prepare scientists for software projects. By infusing the training program with Software Engineering principles, we can provide best practice essentials to the scientists whose code may eventually need to be scaled to multiple processors, platforms, sites, users and developers. By promoting easily adopted, high-return techniques, we hope to develop a culture where quality is intrinsic, reuse is maximised and effort can be focussed on innovative, robust science.", "author": [{"name": "Valerie Maxville", "affiliation": "IVEC, Kensington, WA, USA"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/ICSE.2007.95", "title": "Using Server Pages to Unify Clones in Web Applications: A Trade-Off Analysis", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Cloning", "Application software", "User interfaces", "Web pages", "Computer science", "Computer interfaces", "Error correction", "Productivity", "Application specific processors", "HTML"], "abstract": "Server page technique is commonly used for implementing Web application user interfaces. Server pages can represent many similar Web pages in a generic form. Yet our previous study revealed high rates of repetitions in Web applications, particularly in the user interfaces. Code duplication, commonly known as 'cloning', signals untapped opportunities to achieve simpler, smaller, more generic, and more maintainable Web applications. Using PHP server page technique, we conducted a case study to explore how far server page technique can be pushed to achieve clone-free Web applications. Our study suggests that clone unification using server pages affects system qualities (e.g., runtime performance) to an extent that may not be acceptable in many project situations. Our paper discusses the trade-offs we observed when applying server pages to unify clones in Web applications. We expect our findings to help in developing and validating complementary techniques that can unify clones without incurring such trade-offs.", "author": [{"name": "Damith C. Rajapakse", "affiliation": "Department of Computer Science, National University of Singapore, Singapore"}, {"name": "Stan Jarzabek", "affiliation": "Department of Computer Science, National University of Singapore, Singapore"}], "time": "May 2007", "citationCount": "26", "references": [{"title": " \"Reverse engineering to achieve maintainable WWW sites", "authors": ["Boldyreff", " C.", " Kewish", " R."]}, {"title": " \"Comprehending Reality: Practical Challenges to Software Maintenance Automation", "authors": ["Cordy", " J. R."]}, {"title": "Deshpande et at. \"Web Engineering", "authors": []}, {"title": " \"CCFinder: A multi-linguistic token-based code clone detection system for large scale source code", "authors": ["Kamiya", " T.", " Kusumoto", " S", " ", " Inoue", " K."]}, {"title": " and Godfrey. M. W. \"\"Cloning Considered Harmful\" Considered Harmful\"", "authors": ["Kapser. C."]}, {"title": " \"An Empirical Study of Code Clone Genealogies", "authors": ["Kim", " M.", " Sazawal", " V.", " Notkin", " D.", " ", " Murphy", " G. C."]}, {"title": " S. \"Industrial Experience with Building a Web Portal Product Line using a Lightweight", "authors": ["Pettersson", " U.", " ", " Jarzabek"]}, {"title": " \"Refactoring Web sites to the Controller-Centric Architecture", "authors": ["Ping", " Y.", " Kontogiannis", " K."]}, {"title": " \"An Investigation of Cloning in Web Applications", "authors": ["Rajapakse", " D. C.", " ", " Jarzabek", " S."]}, {"title": " \"Using Clustering to Support the Migration from Static to Dynamic Web Pages", "authors": ["Ricca", " F. ", " Tonella", " P."]}, {"title": " \"Resolution of static clones in dynamic Web pages", "authors": ["Synytskyy", " N. Cordy", " J. R.", " Dean", " T."]}, {"title": " S. \"Applying a Generative Technique for Enhanced Reuse on J2EE Platform", "authors": ["Yang", " J. ", " Jarzabek"]}, {"title": " S. \"Reuse without Compromising Performance: Experience from RPG Software Product Line for Mobile Devices", "authors": ["Zhang", " W. ", " Jarzabek"]}]},
{"doi": "10.1109/ICSE.2009.5070515", "title": "Accurate Interprocedural Null-Dereference Analysis for Java", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Java", "Performance analysis", "Computer bugs", "Information analysis", "Open source software", "Arithmetic", "Safety"], "abstract": "Null dereference is a commonly occurring defect in Java programs, and many static-analysis tools identify such defects. However, most of the existing tools perform a limited interprocedural analysis. In this paper, we present an interprocedural path-sensitive and context-sensitive analysis for identifying null dereferences. Starting at a dereference statement, our approach performs a backward demand-driven analysis to identify precisely paths along which null values may flow to the dereference. The demand-driven analysis avoids an exhaustive program exploration, which lets it scale to large programs. We present the results of empirical studies conducted using large open-source and commercial products. Our results show that: (1) our approach detects fewer false positives, and significantly more interprocedural true positives, than other commonly used tools; (2) the analysis scales to large subjects; and (3) the identified defects are often deleted in subsequent releases, which indicates that the reported defects are important.", "author": [{"name": "Mangala Gowri Nanda", "affiliation": "IBM India Research Laboratory, India"}, {"name": "Saurabh Sinha", "affiliation": "IBM India Research Laboratory, India"}], "time": "May 2009", "citationCount": "33", "references": [{"title": " \"Evaluating static analysis defect warnings on production software\"", "authors": ["N. Ayewah", " W. Pugh", " J. D. Morgenthaler", " J. Penix ", " Y. Zhou"]}, {"title": " \"Calysto: Scalable and precise extended static checking\"", "authors": ["D. Babi\u0107 ", " A. J. Hu"]}, {"title": " \"A static analyzer for finding dynamic programming errors\"", "authors": ["W. R. Bush", " J. D. Pincus ", " D. J. Sielaff"]}, {"title": " \"Static error detection using semantic inconsistency inference\"", "authors": ["I. Dillig", " T. Dillig ", " A. Aiken"]}, {"title": " \"Bugs as deviant behavior: A general approach to inferring errors in systems code\"", "authors": ["D. Engler", " D. Y. Chen", " S. Hallem", " A. Chou ", " B. Chelf"]}, {"title": " \"Static detection of dynamic memory errors\"", "authors": ["D. Evans"]}, {"title": " \"Extended static checking for Java\"", "authors": ["C. Flanagan", " K. R. M. Leino", " M. Lillibridge", " G. Nelson", " J. B. Saxe ", " R. Stata"]}, {"title": " \"Finding bugs is easy\"", "authors": ["D. Hovemeyer ", " W. Pugh"]}, {"title": " \"Finding more null pointer bugs but not too many\"", "authors": ["D. Hovemeyer ", " W. Pugh"]}, {"title": " \"Evaluating and tuning a static analysis to find null pointer bugs\"", "authors": ["D. Hovemeyer", " J. Spacco ", " W. Pugh"]}, {"title": " \"Z--ranking: Using statistical analysis to counter the impact of static analysis approximations\"", "authors": ["T. Kremenek ", " D. Engler"]}, {"title": " \"Verifying dereference safety via expanding-scope analysis\"", "authors": ["A. Loginov", " E. Yahav", " S. Ch", "ra", " N. Fink", " S. Rinetzky ", " M. G. N"]}, {"title": " \"Predicting accurate and actionable static analysis warnings: An experimental approach\"", "authors": ["J. R. Ruthruff", " J. Penix", " J. D. Morgenthaler", " S. Elbaum ", " G. Rothermel"]}, {"title": " \"Tracking defect warnings across versions\"", "authors": ["J. Spacco", " D. Hovemeyer ", " W. Pugh"]}, {"title": " \"Variably interprocedural program analysis for runtime error detection\"", "authors": ["A. Tomb", " G. Brat ", " W. Visser"]}, {"title": " \"ARCHER: Using symbolic path-sensitive analysis to detect memory access errors\"", "authors": ["Y. Xie", " A. Chou ", " D. Engler"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070969", "title": "Automatic GUI test generation for smartphone applications - an evaluation", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Graphical user interfaces", "Automatic testing", "Software testing", "System testing", "Application software", "Software systems", "Libraries", "Cameras", "Optical character recognition software", "Context modeling"], "abstract": "We present the results of an evaluation where we studied the effectiveness of automatic test generation for graphical user interface (GUI) testing of smartphone applications. To describe the context of our evaluation, the tools and the test model library we have developed for the evaluation are also presented. The library contains test models for basic S60 applications, such as camera, contacts, etc. The tools include an on-line test generator that produces sequences of so called keywords to be executed on the test targets. In our evaluation, we managed to find over 20 defects from applications that had been on the market for several months. We also describe the problems we faced during the evaluation.", "author": [{"name": "Antti Jaaskelainen", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}, {"name": "Mika Katara", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}, {"name": "Antti Kervinen", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}, {"name": "Mika Maunumaa", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}, {"name": "Tuula Paakkonen", "affiliation": "Nokia Devices Research and Development, Tampere, Finland"}, {"name": "Tommi Takala", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}, {"name": "Heikki Virtanen", "affiliation": "Department of Software Systems, Tampere University of Technology, Tampere, Finland"}], "time": "May 2009", "citationCount": "10", "references": []},
{"doi": "10.1109/ICSE.2007.19", "title": "Automated Inference of Pointcuts in Aspect-Oriented Refactoring", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Application software", "Computer science", "Software systems", "Functional programming", "Scattering", "Computer languages", "Java", "Encapsulation", "Software testing", "Software engineering"], "abstract": "Software refactoring is the process of reorganizing the internal structure of code while preserving the external behavior. Aspect-Oriented Programming (AOP) provides new modularization of software systems by encapsulating crosscutting concerns. Based on these two techniques, aspect-oriented (AO) refactoring restructures crosscutting elements in code. AO refactoring includes two steps: aspect mining (identification of aspect candidates in code) and aspect refactoring (semantic-preserving transformation to migrate the aspect-candidate code to AO code). Aspect refactoring clusters similar join points together for the aspect candidates and encapsulates each cluster with an effective pointcut definition. With the increase in size of the code and crosscutting concerns, it is tedious to manually identify aspects and their corresponding join points, cluster the join points, and infer pointcut expressions. Therefore, there is a need to automate the process of AO refactoring. This paper proposes an automated approach that identifies aspect candidates in code and infers pointcut expressions for these aspects. Our approach mines for aspect candidates, identifies the join points for the aspect candidates, clusters the join points, and infers an effective pointcut expression for each cluster of join points. The approach also provides an additional testing mechanism to ensure that the inferred pointcut expressions are of correct strength. The empirical results show that our approach helps achieve a significant reduction in the total number of pointcut expressions to be used in the refactored code.", "author": [{"name": "Prasanth Anbalagan", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}], "time": "May 2007", "citationCount": "9", "references": []},
{"doi": "10.1109/ICSE.2009.5070516", "title": "The road not taken: Estimating path execution frequency statically", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Frequency estimation", "Roads", "Runtime", "Information analysis", "Benchmark testing", "Robustness", "Data analysis", "Performance analysis", "Particle measurements", "Scalability"], "abstract": "A variety of compilers, static analyses, and testing frameworks rely heavily on path frequency information. Uses for such information range from optimizing transformations to bug finding. Path frequencies are typically obtained through profiling, but that approach is severely restricted: it requires running programs in an indicative environment, and on indicative test inputs. We present a descriptive statistical model of path frequency based on features that can be readily obtained from a program's source code. Our model is over 90% accurate with respect to several benchmarks, and is sufficient for selecting the 5% of paths that account for over half of a program's total runtime. We demonstrate our technique's robustness by measuring its performance as a static branch predictor, finding it to be more accurate than previous approaches on average. Finally, our qualitative analysis of the model provides insight into which source-level features indicate ldquohot pathsrdquo.", "author": [{"name": "Raymond P.L. Buse", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Westley Weimer", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "time": "May 2009", "citationCount": "26", "references": [{"title": " \"Mining specifications\"", "authors": ["G. Ammons", " R. Bodik ", " J. R. Larus"]}, {"title": " \"Improving data-flow analysis with path profiles\"", "authors": ["G. Ammons ", " J. R. Larus"]}, {"title": " \"A comparative study of static and profile-based heuristics for inlining\"", "authors": ["M. Arnold", " S. J. Fink", " V. Sarkar ", " P. F. Sweeney"]}, {"title": " \"Design of a two-level hot path detector for path-based loop optimizations\"", "authors": ["T. Baba", " T. Masuho", " T. Yokota ", " K. Ootsu"]}, {"title": " \"Branch prediction for free\"", "authors": ["T. Ball ", " J. R. Larus"]}, {"title": " \"Efficient path profiling\"", "authors": ["T. Ball ", " J. R. Larus"]}, {"title": " \"Edge profiling versus path profiling: the showdown\"", "authors": ["T. Ball", " P. Mataga ", " M. Sagiv"]}, {"title": " \"Aestimo: a feedback-directed optimization evaluation tool\"", "authors": ["P. Berube ", " J. Amaral"]}, {"title": " \"Automated dynamic analysis of CUDA programs\"", "authors": ["M. Boyer", " K. Skadron ", " W. Weimer"]}, {"title": " \"Evidence-based static branch prediction using machine learning\"", "authors": ["B. Calder", " D. Grunwald", " M. Jones", " D. Lindsay", " J. Martin", " M. Mozer", " ."]}, {"title": " \"On the statistical properties of the f-measure\"", "authors": ["T. Y. Chen", " F.-C. Kuo ", " R. Merkel"]}, {"title": " \"Software profiling for hot path prediction: less is more\"", "authors": ["E. Duesterwald ", " V. Bala"]}, {"title": " \"A new rank correlation coefficient with application to the consensus ranking problem\"", "authors": ["E. J. Emond ", " D. W. Mason"]}, {"title": " \"Bugs as inconsistent behavior: A general approach to inferring errors in systems code\"", "authors": ["D. R. Engler", " D. Y. Chen ", " A. Chou"]}, {"title": " \"Soot-a java optimization framework\"", "authors": ["R. V.-R. ."]}, {"title": " \"Measuring empirical computational complexity\"", "authors": ["S. F. Goldsmith", " A. S. Aiken ", " D. S. Wilkerson"]}, {"title": " \"gprof: a call graph execution profiler\"", "authors": ["S. L. Graham", " P. B. Kessler ", " M. K. McKusick"]}, {"title": " \"Profile-guided compiler optimizations\"", "authors": ["R. Gupta", " E. Mehofer ", " Y. Zhang"]}, {"title": " \"Weka: A machine learning workbench\"", "authors": ["G. Holmes", " A. Donkin ", " I. Witten"]}, {"title": " \"Z-ranking: Using statistical analysis to counter the impact of static analysis approximations\"", "authors": ["T. Kremenek ", " D. R. Engler"]}, {"title": " \"A synthetic workload generation technique for stress testing session-based systems\"", "authors": ["D. Krishnamurthy", " J. A. Rolia ", " S. Majumdar"]}, {"title": " \"Whole program paths\"", "authors": ["J. R. Larus"]}, {"title": " \"Synthetic workload generation for load-balancing experiments\"", "authors": ["P. Mehra ", " B. Wah"]}, {"title": " \"A hardware-driven profiling scheme for identifying program hot spots to support runtime optimization\"", "authors": ["M. C. Merten", " A. R. Trick", " C. N. George", " J. C. Gyllenhaal ", " W. Hwu"]}, {"title": " \"Benchmark workload generation and performance characterization of multiprocessors\"", "authors": ["A. N", "a "]}, {"title": " \"The use of program profiling for software maintenance with applications to the year 2000 problem\"", "authors": ["T. Reps", " T. Ball", " M. Das ", " J. Larus"]}, {"title": " \"Automatic program specialization for java\"", "authors": ["U. P. Schultz", " J. L. Lawall ", " C. Consel"]}, {"title": " \"Concolic testing\"", "authors": ["K. Sen"]}, {"title": " \"CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools\"", "authors": ["K. Sen ", " G. Agha"]}, {"title": " \"Atom: a system for building customized program analysis tools\"", "authors": ["A. Srivastava ", " A. Eustace"]}, {"title": " \"Mining temporal specifications for error detection\"", "authors": ["W. Weimer ", " G. C. Necula"]}, {"title": " \"Exceptional situations and program reliability\"", "authors": ["W. Weimer ", " G. C. Necula"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070970", "title": "Case study: How analysis of customer found defects can be used by system test to improve quality", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["System testing", "Software testing", "Information analysis", "Automatic testing", "Costs", "Large-scale systems", "Computer industry", "Programming", "Software measurement", "Continuous improvement"], "abstract": "In the context of long-term, large-scale, industrial software development, process improvement and measurement to support process improvement is a necessity. Our software projects face the ongoing challenge, ldquoHow can we reduce the number of customer found defects in a cost-effective manner?rdquo This paper describes how the system test team of a large telecommunications company approached this challenge. Customer found defects were analyzed in a systematic way to provide information that system testers could turn into actionable activities in a test lab. Our findings indicated that most defects found by customers were associated with existing feature usage in various configurations while our test focus had primarily been on new feature operation. We categorized the information from our analysis using a technique called minimum conditions. Then, these data, together with an exploratory test method, were used to supplement existing test processes. The effort resulted in a $750,000 savings over two product releases.", "author": [{"name": "Evelyn Moritz", "affiliation": "AVAYA, USA"}], "time": "May 2009", "citationCount": "6", "references": []},
{"doi": "10.1109/ICSE.2007.7", "title": "A Formal Framework for Automated Round-Trip Software Engineering in Static Aspect Weaving and Transformations", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software engineering", "Weaving", "History", "Tree graphs", "Programming environments", "Information science", "Automatic control", "Reverse engineering", "Automatic programming", "Parallel programming"], "abstract": "We present a formal framework for a recently introduced approach to automated round-trip software engineering (ARE) in source-level aspect weaving systems. Along with the formalization we improve the original method and suggest a new concept of weaving transactions in aspect-oriented programming (AOP). As the major contribution we formally show how, given a tree-shaped intermediate representation of a program and an ancillary transposition tree, manual edits in statically woven code can consistently be mapped back to their proper source of origin, which is either in the application core or in an element in the aspect space. The presented formalism is constructive. It frames AOP by generalizing static aspect weaving to classical tree transformations.", "author": [{"name": "Mikhail Chalabine", "affiliation": "Department of Computer and Information Science, Link\u00f6ping University, Linkoping, Sweden"}, {"name": "Christoph Kessler", "affiliation": "Department of Computer and Information Science, Link\u00f6ping University, Linkoping, Sweden"}], "time": "May 2007", "citationCount": "4", "references": []},
{"doi": "10.1109/ICSE.2009.5070517", "title": "Automatic dimension inference and checking for object-oriented programs", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Java", "Computer languages", "Physics", "Computer science", "Computer errors", "Computer displays", "Equations", "Software debugging", "Intrusion detection"], "abstract": "This paper introduces UniFi, a tool that attempts to automatically detect dimension errors in Java programs. UniFi infers dimensional relationships across primitive type and string variables in a program, using an inter-procedural, context-sensitive analysis. It then monitors these dimensional relationships as the program evolves, flagging inconsistencies that may be errors. UniFi requires no programmer annotations, and supports arbitrary program-specific dimensions, thus providing fine-grained dimensional consistency checking. UniFi exploits features of object-oriented languages, but can be used for other languages as well. We have run UniFi on real-life Java code and found that it is useful in exposing dimension errors. We present a case study of using UniFi on nightly builds of a 19,000 line code base as it evolved over 10 months.", "author": [{"name": "Sudheendra Hangal", "affiliation": "Computer Science Department, University of Stanford, CA, USA"}, {"name": "Monica S. Lam", "affiliation": "Computer Science Department, University of Stanford, CA, USA"}], "time": "May 2009", "citationCount": "11", "references": [{"title": " \"object-oriented units of measurement\"", "authors": ["E. Allen", " D. Chase", " V. Luchangco", " J.-W. Maessen ", " G. L. Steele"]}, {"title": " \"Mining specifications\"", "authors": ["G. Ammons", " R. Bod\u00edk ", " J. R. Larus"]}, {"title": " \"Validating the unit correctness of spreadsheet programs\"", "authors": ["T. Antoniu", " P. A. Steckler", " S. Krishnamurthi", " E. Neuwirth ", " M. Felleisen"]}, {"title": " \"Bugs as deviant behavior: a general approach to inferring errors in systems code\"", "authors": ["D. Engler", " D. Y. Chen", " S. Hallem", " A. Chou ", " B. Chelf"]}, {"title": " \"A theory of type qualifiers\"", "authors": ["J. S. Foster", " M. F\u00e4hndrich ", " A. Aiken"]}, {"title": " \"Type qualifier inference for Java\"", "authors": ["D. Greenfieldboyce ", " J. S. Foster"]}, {"title": " \"Dynamic inference of abstract types\"", "authors": ["P. J. Guo", " J. H. Perkins", " S. McCamant ", " M. D. Ernst"]}, {"title": " \"Tracking down software bugs using automatic anomaly detection\"", "authors": ["S. Hangal ", " M. S. Lam"]}, {"title": " \"Osprey: a practical type system for validating dimensional unit correctness of c programs\"", "authors": ["L. Jiang ", " Z. Su"]}, {"title": " \"From uncertainty to belief: inferring the specification within\"", "authors": ["T. Kremenek", " P. Twohey", " G. Back", " A. Ng ", " D. Engler"]}, {"title": " \"A behavioral notion of subtyping\"", "authors": ["B. H. Liskov ", " J. M. Wing"]}, {"title": " \"Climate Orbiter Mishap Investigation Board\"", "authors": ["T. Mars"]}, {"title": " \"Lackwit: a program understanding tool based on type inference\"", "authors": ["R. O'Callahan ", " D. Jackson"]}, {"title": " \"Automated computation and consistency checking of physical dimensions and units in scientific programs\"", "authors": ["G. W. Petty"]}, {"title": " \"Global value numbers and redundant computations\"", "authors": ["B. K. Rosen", " M. N. Wegman ", " F. K. Zadeck"]}, {"title": " \"Detecting format string vulnerabilities with type qualifiers\"", "authors": ["U. Shankar", " K. Talwar", " J. S. Foster ", " D. Wagner"]}, {"title": " \"Javari: Adding reference immutability to Java\"", "authors": ["M. S. Tschantz ", " M. D. Ernst"]}, {"title": " \"A Java extension with support for dimensions\"", "authors": ["A. van Delft"]}, {"title": " \"Automatic extraction of object-oriented component interfaces\"", "authors": ["J. Whaley", " M. C. Martin ", " M. S. Lam"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070971", "title": "Extended eTVRA vs. security checklist: Experiences in a value-web", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Security", "Telecommunication standards", "Risk analysis", "Guidelines", "ISO standards", "Risk management", "Protection", "Hardware", "Defense industry", "Information technology"], "abstract": "Security evaluation according to ISO 15408 (common criteria) is a resource and time demanding activity, as well as being costly. For this reason, only few companies take their products through a common criteria evaluation. To support security evaluation, the European Telecommunications Standards Institute (ETSI) has developed a threat, vulnerability, risk analysis (eTVRA) method for the Telecommunication (Telco) domain. eTVRA builds on the security risk management methodology CORAS and is structured in such a way that it provides output that can be directly fed into a common criteria security evaluation. In this paper, we evaluate the time and resource efficiency of parts of eTVRA and the quality of the result produced by following eTVRA compared to a more pragmatic approach (protection profile-based checklists). We use both approaches to identify and analyze risks of a new SIM card currently under joint development by a small hardware company and a large Telco provider.", "author": [{"name": "Ayse Morali", "affiliation": "University of Twente, Netherlands"}, {"name": "Emmanuele Zambon", "affiliation": "University of Twente, Netherlands"}, {"name": "Siv Hilde Houmb", "affiliation": "University of Twente, Netherlands"}, {"name": "Karin Sallhammar", "affiliation": "Telenor Research and Innovation, Trondheim, Norway"}, {"name": "Sandro Etalle", "affiliation": "Eindhoven Technical University and University of Twente, Netherlands"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/ICSE.2007.43", "title": "Identifying Feature Interactions in Multi-Language Aspect-Oriented Frameworks", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software engineering", "Software design", "Shape", "Computer science", "Concrete", "Testing", "Kernel", "Performance analysis", "Java", "Computer displays"], "abstract": "The simultaneous use of multiple aspect languages has the potential of becoming a significant one, as new aspect- oriented frameworks are developed and existing ones expand to incorporate features of others. A key challenge in combining multiple aspect-oriented languages is identifying and resolving adverse feature interactions. These interactions occur due to the incompatible and inconsistent treatment of aspects, join points, and advice across different languages. In this paper, we analyze the root cause of this feature interaction problem. We classify common features of aspect languages, describe how these features may interact when using different aspect languages in tandem, and concretely illustrate how these interactions may be resolved. Our work allows AOP users and tool developers to reason about the occurrence of such adverse and unexpected feature interactions, and to apply several patterns for resolving these problems.", "author": [{"name": "Sergei Kojarski", "affiliation": "Department of Computer Science, University of Virginia, Charlottesville, VA, USA"}, {"name": "David H. Lorenz", "affiliation": "Department of Computer Science, University of Virginia, Charlottesville, VA, USA"}], "time": "May 2007", "citationCount": "4", "references": []},
{"doi": "10.1109/ICSE.2009.5070518", "title": "In-field healing of integration problems with COTS components", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Application software", "Connectors", "Springs", "Software testing", "Informatics", "Debugging", "Runtime", "Costs", "Web server", "Java"], "abstract": "Developers frequently integrate complex COTS frameworks and components in software applications. COTS products are often only partially documented, and developers may misuse technologies and introduce integration faults, as witnessed by the many entries in fault repositories. Once identified, common integration problems and their fixes are usually documented in forums and fault repositories on the Web, but this does not prevent them to occur in the field when COTS products are reused. In this paper, we propose a methodology and a self- healing technology that can reduce the occurrence of infield failures caused by common integration problems that are identified and documented by COTS developers. Our methodology supports COTS developers in producing healing connectors for common misuses of COTS products. Our technology produces information that facilitate debugging and patching of applications that use COTS products. Application developers inject healing connectors into their systems to automatically repair problems caused by misuses of COTS products. Healing takes place at run-time, on-the-fly and in-the-field. The activity of healing connectors is traced in log files, to facilitate debugging and patching of integration problems. Empirical experiences with several applications and COTS products show the feasibility of the approach and the efficiency of the technology.", "author": [{"name": "Herve Chang", "affiliation": "Department of Informatics, Systems and Communication, University of Milano-Bicocca, Milan, Italy"}, {"name": "Leonardo Mariani", "affiliation": "Department of Informatics, Systems and Communication, University of Milano-Bicocca, Milan, Italy"}, {"name": "Mauro Pezze", "affiliation": "Faculty of Informatics, University of Lugano, Lugano, Switzerland"}], "time": "May 2009", "citationCount": "6", "references": [{"title": " \"Resourceful systems for fault tolerance reliability and safety\"", "authors": ["R. Abbott"]}, {"title": "\"Apache issue tracker\"", "authors": []}, {"title": " \"Basic concepts and taxonomy of dependable and secure computing\"", "authors": ["A. Avizienis", " J.-C. Laprie", " B. R", "ell "]}, {"title": " \"Towards an engineering approach to component adaptation\" in Architecting Systems with Trustworthy Components", "authors": ["S. Becker", " A. Brogi", " I. Gorton", " S. Overhage", " A. Romanovsky ", " M. Tivoli"]}, {"title": " \"Exception handling: a field study in Java and. NET\"", "authors": ["B. Cabral ", " P. Marques"]}, {"title": " \"Microreboot a technique for cheap recovery\"", "authors": ["G. C", "ea", " S. Kawamoto", " Y. Fujiki", " G. Friedman ", " A. Fox"]}, {"title": " \"Self-healing by means of automatic workarounds\"", "authors": ["A. Carzaniga", " A. Gorla ", " M. Pezz\u00e8"]}, {"title": " \"Self-healing strategies for component integration faults\"", "authors": ["H. Chang", " L. Mariani ", " M. Pezz\u00e8"]}, {"title": " \"Designing an aspect-oriented framework in an object-oriented environment\"", "authors": ["C. A. Constantinides", " A. Bader", " T. H. Elrad", " P. Netinant ", " M. E. Fayad"]}, {"title": " \"Automatic detection and repair of errors in data structures\"", "authors": ["B. Demsky ", " M. Rinard"]}, {"title": " \"A survey of rollback-recovery protocols in message-passing systems\"", "authors": ["E. N. Elnozahy", " L. Alvisi", " Y.-M. Wang ", " D. B. Johnson"]}, {"title": " \"Architectural mismatch or why its hard to build systems out of existing parts\"", "authors": ["D. Garlan", " R. Allen ", " J. Ockerbloom"]}, {"title": " \"Finding bugs is easy\"", "authors": ["D. Hovemeyer ", " W. Pugh"]}, {"title": " \"J2EE development frameworks\"", "authors": ["R. Johnson"]}, {"title": " \"Healing data races on-the-fiy\"", "authors": ["B. Krena", " Z. Letko", " R. Tzoref", " S. Ur ", " T. Vojnar"]}, {"title": " \"Preliminary design of JML: a behavioral interface specification language for java\"", "authors": ["G. T. Leavens", " A. L. Baker ", " C. Ruby"]}, {"title": " \"Putting static analysis to work for verification: A case study\"", "authors": ["T. Lev-Ami", " T. Reps", " S. Sagiv ", " R. Wilhelm"]}, {"title": " \"Failure analysis of open source J2EE application servers\"", "authors": ["J. Li", " G. Huang", " J. Zou ", " H. Mei"]}, {"title": " \"Towards self-protecting enterprise applications\"", "authors": ["D. Lorenzoli", " L. Mariani ", " M. Pezz\u00e8"]}, {"title": " \"Towards a taxonomy of software connectors\"", "authors": ["N. Mehta", " N. Medvidovic ", " S. Phadke"]}, {"title": " \"Roll-forward checkpointing scheme: A novel fault-tolerant architecture\"", "authors": ["D. K. Pradhan ", " N. H. Vaidya"]}, {"title": " \"Rx: Treating bugs as allergies\u2014a safe method to survive software failures\"", "authors": ["F. Qin", " J. Tucek", " J. Sundaresan ", " Y. Zhou"]}, {"title": " \"Towards a method of programming with assertions\"", "authors": ["D. S. Rosenblum"]}, {"title": " \"A comparison of bug finding tools for java\"", "authors": ["N. Rutar", " C. B. Almazan ", " J. S. Foster"]}, {"title": "\"Sun. Java native interface specification 1.1\"", "authors": []}, {"title": " \"A comprehensive model for software rejuvenation\"", "authors": ["K. Vaidyanathan ", " K. Trivedi"]}, {"title": " \"Software architecture classification for estimating the cost of COTS integration\"", "authors": ["D. Yakimovich", " J. M. Bieman ", " V. R. Basili"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070972", "title": "An open test bed for medical device integration and coordination", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Medical tests", "Middleware", "Quality assurance", "Software quality", "Pacemakers", "Medical services", "Computer displays", "Drugs", "Publish-subscribe", "Java"], "abstract": "Medical devices historically have been monolithic units - developed, validated, and approved by regulatory authorities as stand-alone entities. Modern medical devices increasingly incorporate connectivity mechanisms that offer the potential to stream device data into electronic health records, integrate information from multiple devices into single customizable displays, and coordinate the actions of groups of cooperating devices to realize ldquoclosed looprdquo scenarios and automate clinical workflows. However, it is not clear what middleware and integration architectures may be best suited for these possibly numerous scenarios. More troubling, current verification and validation techniques used in the device industry are not targeted to assuring groups of integrated devices. In this paper, we propose a publish-subscribe architecture for medical device integration based on the Java messaging service, and we report on our experience with this architecture in multiple scenarios that we believe represent the types of deployments that will benefit from rapid device integration. This implementation and the experiments presented in this paper are offered as an open test bed for exploring development, quality assurance, and regulatory issues related to medical device coordination.", "author": [{"name": "Andrew King", "affiliation": "Kansas State University, USA"}, {"name": "Sam Procter", "affiliation": "USA"}, {"name": "Dan Andresen", "affiliation": "Kansas State University, USA"}, {"name": "John Hatcliff", "affiliation": "USA"}, {"name": "Steve Warren", "affiliation": "Kansas State University, USA"}, {"name": "William Spees", "affiliation": "US Food and Drug Administration, USA"}, {"name": "Raoul Jetley", "affiliation": "US Food and Drug Administration, USA"}, {"name": "Paul Jones", "affiliation": "US Food and Drug Administration, USA"}, {"name": "Sandy Weininger", "affiliation": "US Food and Drug Administration, USA"}], "time": "May 2009", "citationCount": "40", "references": [{"title": "K. Grifantini. \"plug and play\" hospitals: Medical devices that exchange data could make hospitals safer. MIT Technology Review", "authors": []}, {"title": "Medical device \"plug-and-play\" interoperability program. http://mdpnp.org/", "authors": []}]},
{"doi": "10.1109/ICSE.2007.90", "title": "Tracking Code Clones in Evolving Software", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Cloning", "Software systems", "Monitoring", "Computer science", "Robustness", "Computer languages", "Writing", "Logic programming", "Q factor", "Programming profession"], "abstract": "Code clones are generally considered harmful in software development, and the predominant approach is to try to eliminate them through refactoring. However, recent research has provided evidence that it may not always be practical, feasible, or cost-effective to eliminate certain clone groups. We propose a technique for tracking clones in evolving software. Our technique relies on the concept of abstract clone region descriptors (CRD), which describe clone regions within methods in a robust way that is independent from the exact text of the clone region or its location in a file. We present our definition of CRDs, and describe a complete clone tracking system capable of producing CRDs from the output of a clone detection tool, notify developers of modifications to clone regions, and support the simultaneous editing of clone regions. We report on two experiments and a case study conducted to assess the performance and usefulness of our approach.", "author": [{"name": "Ekwa Duala-Ekoko", "affiliation": "School of Computer Science, McGill University, Montreal, QUE, Canada"}, {"name": "Martin P. Robillard", "affiliation": "School of Computer Science, McGill University, Montreal, QUE, Canada"}], "time": "May 2007", "citationCount": "84", "references": []},
{"doi": "10.1109/ICSE.2009.5070519", "title": "Modular string-sensitive permission analysis with demand-driven precision", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Permission", "Algorithm design and analysis", "Authorization", "Java", "Runtime environment", "Security", "Prototypes", "Inspection", "Testing", "Laboratories"], "abstract": "In modern software systems, programs are obtained by dynamically assembling components. This has made it necessary to subject component providers to access-control restrictions. What permissions should be granted to each component? Too few permissions may cause run-time authorization failures, too many constitute a security hole. We have designed and implemented a composite algorithm for precise static permission analysis for Java and the CLR. Unlike previous work, the analysis is modular and fully integrated with a novel slicing-based string analysis that is used to statically compute the string values defining a permission and disambiguate permission propagation paths. The results of our research prototype on production-level Java code support the effectiveness, practicality, and precision of our techniques, and show outstanding improvement over previous work.", "author": [{"name": "Emmanuel Geay", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}, {"name": "Marco Pistoia", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}, {"name": "Takaaki Tateishi", "affiliation": "Tokyo Research Laboratory, IBM, Tokyo, Japan"}, {"name": "Barbara G. Ryder", "affiliation": "Virginia Technology, Blacksburg, VA, USA"}, {"name": "Julian Dolby", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}], "time": "May 2009", "citationCount": "11", "references": [{"title": " \"Static Analysis for Stack Inspection\"", "authors": ["M. Bartoletti", " P. Degano ", " G. L. Ferrari"]}, {"title": " \"Precise Analysis of String Expressions\"", "authors": ["A. S. Christensen", " A. M\u00f8ller ", " M. I. Schwartzbach"]}, {"title": " \"IRM Enforcement of Java Stack Inspection\"", "authors": ["U. Erlingsson ", " F. B. Schneider"]}, {"title": " \"Componential Set-based Analysis\"", "authors": ["C. Flanagan ", " M. Felleisen"]}, {"title": " \"Going Beyond the Sandbox: An Overview of the New Security Architecture in the Java Development Kit 1.2\"", "authors": ["L. Gong", " M. Mueller", " H. Prafullch", "ra "]}, {"title": " \"A Framework for Call Graph Construction Algorithms\"", "authors": ["D. Grove ", " C. Chambers"]}, {"title": " \"The Confused Deputy (Or Why Capabilities Might Have Been Invented)\"", "authors": ["N. Hardy"]}, {"title": " \"Interprocedural Slicing Using Dependence Graphs\"", "authors": ["S. Horwitz", " T. W. Reps ", " D. Binkley"]}, {"title": " \"Verification of Control Flow Based Security Properties\"", "authors": ["T. P. Jensen", " D. L. M\u00e9tayer ", " T. Thorn"]}, {"title": " \"Access Rights Analysis for Java\"", "authors": ["L. Koved", " M. Pistoia ", " A. Kershenbaum"]}, {"title": " \"Modular Setbased Analysis from Contracts\"", "authors": ["P. Meunier", " R. B. Findler ", " M. Felleisen"]}, {"title": " \"Static Approximation of Dynamically Generated Web Pages\"", "authors": ["Y. Minamide"]}, {"title": " \"Enforcing RobustDeclassification\"", "authors": ["A. C. Myers", " A. Sabelfeld ", " S. Zdancewic"]}, {"title": " \"Beyond Stack Inspection: A Unified Access Control and Information Flow Security Model\"", "authors": ["M. Pistoia", " A. Banerjee ", " D. A. Naumann"]}, {"title": " \"Interprocedural Analysis for Privileged Code Placement and Tarined Variable Detection\"", "authors": ["M. Pistoia", " R. J. Flynn", " L. Koved ", " V. C. Sreedhar"]}, {"title": " \"A Systematic Approach to Static Access Control\"", "authors": ["F. Pottier", " C. Skalka ", " S. F. Smith"]}, {"title": " \"Points-to analysis and side effect analysis for programs built with precompiled library modules\"", "authors": ["A. Rountev ", " B. G. Ryder"]}, {"title": " \"Data-Flow Analysis of Program Fragments\"", "authors": ["A. Rountev", " B. G. Ryder ", " W. L"]}, {"title": " \"The Protection of Information in Computer Systems\"", "authors": ["J. H. Saltzer ", " M. D. Schroeder"]}, {"title": " \"Control Flow Analysis in Scheme\"", "authors": ["O. Shivers"]}, {"title": " \"Thin Slicing\"", "authors": ["M. Sridharan", " S. J. Fink ", " R. Bodik"]}, {"title": " \"Understanding Java Stack Inspection\"", "authors": ["D. S. Wallach ", " E. W. Felten"]}, {"title": " \"Sound and Precise Analysis of Web Applications for Injection Vulnerabilities\"", "authors": ["G. Wassermann ", " Z. Su"]}, {"title": " \"Symbolic String Verification: An Automata-Based Approach\"", "authors": ["F. Yu", " T. Bultan", " M. Cova ", " O. H. Ibarra"]}, {"title": " \"Automatic Construction of Accurate Application Call Graph with Library Call Abstraction\"", "authors": ["W. Zhang ", " B. G. Ryder"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070973", "title": "Improving software Risk Management in a Medical Device Company", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Risk management", "Manufacturing", "Injuries", "Capability maturity model", "Software safety", "Hazards", "Software quality", "Government", "Software engineering", "Regulators"], "abstract": "Software Risk Management (RM) within Medical Device (MD) companies is a critical area. Failure of the software can have potentially catastrophic effects, leading to injury of patients or even death. Therefore regulators penalise MD manufacturers that do not devote sufficient attention to the areas of hazard analysis and RM throughout the software lifecycle. This paper describes the experience of a MD software development organization when they engaged in a research project to improve their RM practices. We explain how this was achieved through the development of a software process improvement RM model that integrates regulatory MD RM requirements with the goals and practices of the Capability Maturity Model Integration (CMMI). This model is known as the Risk Management Capability Model (RMCM). The authors describe the complete project lifecycle and evaluate the success of the project.", "author": [{"name": "Fergal McCaffery", "affiliation": "Dundalk Institute of Technology, Ireland"}, {"name": "John Burton", "affiliation": "Vitalograph Limited, Ireland"}, {"name": "Ita Richardson", "affiliation": "Lero-the Irish Software Engineering Research Centre, University of Limerick, Ireland"}], "time": "May 2009", "citationCount": "7", "references": [{"title": " \"A Risk Management Capability Model for use in Medical Device Companies\"", "authors": ["Burton J.", " Mc Caffery F.", " & Richardson I."]}, {"title": " \"Software related recalls for fiscal years 1983-91\"", "authors": ["CDRH", " FDA"]}, {"title": "FDA/CDRH Guidance Document. \"Guidance for the Content of Premarket Submissions for Software Contained in Medical Devices.\" May 2005", "authors": []}, {"title": "FDA/CDRH Guidance Document. \"Guidance for Offthe-Shelf Software Use in Medical Devices.\" September 1999. http://www.fda.gov/cdrh/ode/guidance/ 585.pdf", "authors": []}, {"title": "FDA/CDRH Guidance Document. \"General Principles of Software Validation; Final Guidance for Industry and FDA Staff\"", "authors": []}, {"title": "FDA Regulations. \"Code of Federal Regulations 21 CFR Part 820.\" April 2006. http://www.accessdata.fda.gov/scripts/cdrh/cfdocs/cfcfr/CFRSearch. cfm?CFRPart=820&showFR=1", "authors": []}, {"title": " \"Risk Management Capability Model (RMCM) for the Development of Medical Device Software\"", "authors": ["Mc Caffery F.", " Burton J.", " Richardson I."]}]},
{"doi": "10.1109/ICSE.2007.33", "title": "Do Maintainers Utilize Deployed Design Patterns Effectively?", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software maintenance", "Concrete", "Open source software", "Software design", "Software quality", "Documentation", "Computer science", "Software systems", "Continuous production", "Quality management"], "abstract": "One claimed benefit of deploying design patterns is facilitating maintainers to perform anticipated changes. However, it is not at all obvious that the relevant design patterns deployed in software will invariably be utilized for the changes. Moreover, we observe that many well-known design patterns consist of three types of programming elements (called participants), and that performing an anticipated change typically entails multiple tasks related to different types of participants. This paper studies empirically whether maintainers utilize deployed design patterns, and when they do, which tasks they more commonly perform. Our experiments show that almost all subjects perform the task of adding new concrete participants, fewer perform the tasks involving clients, whereas even fewer perform the tasks involving abstract participants. Furthermore, utilizing deployed design patterns (by performing whichever of the corresponding tasks) is found to be statistically associated with the delivery of less faulty codes.", "author": [{"name": "T.H. Ng", "affiliation": "Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Hong Kong, China"}, {"name": "S.C. Cheung", "affiliation": "Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Clear Water Bay, Hong Kong, China"}, {"name": "W.K. Chan", "affiliation": "City University of Hong Kong, Hong Kong, China"}, {"name": "Y.T. Yu", "affiliation": "City University of Hong Kong, Hong Kong, China"}], "time": "May 2007", "citationCount": "12", "references": [{"title": " \"Industrial Experience with Design Patterns\"", "authors": ["K. Beck", " R. Crocker", " G. Meszaros", " J. Vlissides", " J.O. Coplien", " L. Dominick", " ", " F. Paulisch"]}, {"title": " \"Software Evolution: Past", "authors": ["K.H. Bennett"]}, {"title": " \"Characteristics of Application Software Maintenance\"", "authors": ["B.P. Lientz", " E.B. Swanson", " G.E. Tompkins"]}, {"title": " \"Work Experience versus Refactoring to Design Patterns: A Controlled Experiment\"", "authors": ["T.H. Ng", " S.C. Cheung", " W.K. Chan", " ", " Y.T. Yu"]}, {"title": " \"Two Controlled Experiments Assessing the Usefulness of Design Pattern Documentation in Program Maintenance\"", "authors": ["L. Prechelt", " B. Unger", " M. Philippsen", " ", " W.F. Tichy"]}, {"title": " and L.G. Votta. \"A Controlled Experiment in MainTenance Comparing Design Patterns to Simpler Solutions\". IEEE Transactions on Software Engineering", "authors": ["L. Prechelt", " B. Unger", " W.F. Tichy", " P. Br\u00f6ssler"]}, {"title": " \"How Effective Developers Investigate Source Code: An Exploratory Study\"", "authors": ["M.P. Robillard", " W. Coelho", " ", " G.C. Murphy"]}, {"title": " \"Defect Frequency and Design Patterns: An Empirical Study of Industrial Code\"", "authors": ["M. Vok\u00e1\u010d"]}, {"title": " \"A Controlled Experiment Comparing the Maintainability of Programs Designed With And Without Design Patterns: A Replication In A Real Programming Environment\"", "authors": ["M. Vok\u00e1\u010d", " W. Tichy", " D.I.K. Sj\u00f8berg", " E. Arisholm", " ", " M. Aldrin"]}]},
{"doi": "10.1109/ICSE.2009.5070520", "title": "License integration patterns: Addressing license mismatches in component-based development", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Licenses", "Law", "Legal factors", "Application software", "Open source software", "Packaging", "Software packages", "Computer architecture", "Programming", "Software tools"], "abstract": "In this paper we address the problem of combining software components with different and possibly incompatible legal licenses to create a software application that does not violate any of these licenses while potentially having its own. We call this problem the license mismatch problem. The rapid growth and availability of open source software (OSS) components with varying licenses, and the existence of more than 70 OSS licenses increases the complexity of this problem. Based on a study of 124 OSS software packages, we developed a model which describes the interconnection of components in these packages from a legal point of view. We used our model to document integration patterns that are commonly used to solve the license mismatch problem in practice when creating both proprietary and OSS applications. Software engineers with little legal expertise could use these documented patterns to understand and address the legal issues involved in reusing components with different and possibly conflicting licenses.", "author": [{"name": "Daniel M. German", "affiliation": "Department of Computer Science, University of Victoria, Canada"}, {"name": "Ahmed E. Hassan", "affiliation": "School of Computing, Queen''s University, Canada"}], "time": "May 2009", "citationCount": "44", "references": [{"title": " \"Managing a project with open source components\"", "authors": ["M. Bayersdorfer"]}, {"title": " \"Protecting Computer Software: after Apple Computer Inc. v. Frankin Computer Corp\"", "authors": ["A. Becerman-Rodau"]}, {"title": " \"A Framework for the Assessment and Selection of Software Components and Connectors in COTS-Based Architectures\"", "authors": ["J. Bhuta", " C. Mattmann", " N. Medvidovic ", " B. W. Boehm"]}, {"title": " \"A code provenance management tool for IP-aware software development\"", "authors": ["Y. B. Dang", " P. Cheng", " L. Luo ", " A. Cho"]}, {"title": "\"Eclipse Foundation\"", "authors": []}, {"title": " \"Architectural Mismatch or Why It's Hard to Build Systems Out Of Existing Parts\"", "authors": ["D. Garlan", " R. Allen ", " J. Ockerbloom"]}, {"title": " \"A model to understand the building and running inter-dependencies of software\"", "authors": ["D. M. German", " J. M. Gonz\u00e1lez-Barahona ", " G. Robles"]}, {"title": " \"The FOSSology project\"", "authors": ["R. Gobeille"]}, {"title": " \"International Copyright: Principles Law and Practice\" in ", "authors": ["P. Goldstein"]}, {"title": " \"Understanding Open Source and Free Software Licensing\" in ", "authors": ["A. M. S. Laurent"]}, {"title": " \"Open Source Reuse in Commercial Firms\"", "authors": ["T. Madanmohan ", " R. De'"]}, {"title": " \"Legal Aspects of Free and Open Source Software\" in Perspectives on Free and Open Source Software", "authors": ["D. McGowan"]}, {"title": " \"Copying 0.03 percent of software code base not de minimis\"", "authors": ["N. J. Mertzel"]}, {"title": "\"Reuse of Off-the-Shelf Components\"", "authors": []}, {"title": "\"National Institute of Standards and Technology\"", "authors": []}, {"title": " \"Open Source Software: All You Do is Put it Together\"", "authors": ["Z. Obrenovic ", " D. Gasevic"]}, {"title": " \"Mining large software compilations over time: another perspective of software evolution\"", "authors": ["G. Robles", " J. M. Gonzalez-Barahona", " M. Michlmayr ", " J. J. Amor"]}, {"title": " \"Using open source software in product development: a primer\"", "authors": ["C. Ruffin ", " C. Ebert"]}, {"title": "\"The Open Source Initiative\"", "authors": []}, {"title": " \"Opium: Optimal package install/uninstall manager\"", "authors": ["C. Tucker", " D. Shuffelton", " R. Jhala ", " S. Lerner"]}, {"title": "\"Circular 92 Copyright Law of the United States of America and Related Laws Contained in Title 17 of the United States Code\"", "authors": []}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070974", "title": "Automated testing of healthcare document transformations in the PICASSO interoperability platform", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Automatic testing", "Medical services", "XML", "Information systems", "Hospitals", "Standards development", "Standards organizations", "System testing", "Protocols", "Electronic design automation and methodology"], "abstract": "In every application domain, achieving interoperability among heterogenous information systems is a crucial challenge and alliances are formed to standardize data-exchange formats. In the healthcare sector, HL7-V3 provides the current international reference models for clinical and administrative documents. Codices, an Italian company, provides the PICASSO platform that uses HL7-V3 as the pivot format to fast achieve a highly integrated degree of interoperability among health-related applications. Given the XML structure of HL7-V3, PICASSO can exploit the XSLT technology to flexibly transform documents. However, Codices spends a large part of the PICASSO deployment workflow for manually validating the required XSL stylesheets. In this paper, we describe a pilot experience in test automation, based on the TAXI tool that applies systematic black-box techniques to generate a set of XML instances from a schema. Observed benefits to Codices development process are reported and discussed.", "author": [{"name": "Massimo Pascale", "affiliation": "Codices s.r.l., Pisa, Italy"}, {"name": "Marcello Roselli", "affiliation": "Codices s.r.l., Pisa, Italy"}, {"name": "Umberto Rugani", "affiliation": "Codices s.r.l., Pisa, Italy"}, {"name": "Cesare Bartolini", "affiliation": "Istituto di Scienza e Tecnologie dellInformazione A. Faedo\", Consiglio Nationale delle Ricerche, Pisa, Italy"}, {"name": "Antonia Bertolino", "affiliation": "Istituto di Scienza e Tecnologie dellInformazione A. Faedo\", Consiglio Nationale delle Ricerche, Pisa, Italy"}, {"name": "Francesca Lonetti", "affiliation": "Istituto di Scienza e Tecnologie dellInformazione A. Faedo\", Consiglio Nationale delle Ricerche, Pisa, Italy"}, {"name": "Eda Marchetti", "affiliation": "Istituto di Scienza e Tecnologie dellInformazione A. Faedo\", Consiglio Nationale delle Ricerche, Pisa, Italy"}, {"name": "Andrea Polini", "affiliation": "Dipartimento di Matematica ed Informatica, Universit\u00e0 di Camerino, Camerino, Italy"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.59", "title": "OPIUM: Optimal Package Install/Uninstall Manager", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Linux", "Packaging machines", "Software libraries", "Application software", "Joining processes", "Bandwidth", "Integer linear programming", "Software packages", "Economic forecasting", "Environmental economics"], "abstract": "Linux distributions often include package management tools such as apt-get in Debian or yum in RedHat. Using information about package dependencies and conflicts, such tools can determine how to install a new package (and its dependencies) on a system of already installed packages. Using off-the-shelf SAT solvers, pseudo-boolean solvers, and Integer Linear Programming solvers, we have developed a new package-management tool, called Opium, that improves on current tools in two ways: (1) Opium is complete, in that if there is a solution, Opium is guaranteed to find it, and (2) Opium can optimize a user-provided objective function, which could for example state that smaller packages should be preferred over larger ones. We performed a comparative study of our tool against Debian's apt-get on 600 traces of real-world package installations. We show that Opium runs fast enough to be usable, and that its completeness and optimality guarantees provide concrete benefits to end users.", "author": [{"name": "Chris Tucker", "affiliation": "University of California, San Diego, USA"}, {"name": "David Shuffelton", "affiliation": "University of California, San Diego, USA"}, {"name": "Ranjit Jhala", "affiliation": "University of California, San Diego, USA"}, {"name": "Sorin Lerner", "affiliation": "University of California, San Diego, USA"}], "time": "May 2007", "citationCount": "28", "references": []},
{"doi": "10.1109/ICSE.2009.5070521", "title": "Automatic creation of SQL Injection and cross-site scripting attacks", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Application software", "Concrete", "Databases", "Testing", "Data security", "Runtime", "Monitoring", "Internet", "Privacy", "HTML"], "abstract": "We present a technique for finding security vulnerabilities in Web applications. SQL injection (SQLI) and cross-site scripting (XSS) attacks are widespread forms of attack in which the attacker crafts the input to the application to access or modify user data and execute malicious code. In the most serious attacks (called second-order, or persistent, XSS), an attacker can corrupt a database so as to cause subsequent users to execute malicious code. This paper presents an automatic technique for creating inputs that expose SQLI and XSS vulnerabilities. The technique generates sample inputs, symbolically tracks taints through execution (including through database accesses), and mutates the inputs to produce concrete exploits. Ours is the first analysis of which we are aware that precisely addresses second-order XSS attacks. Our technique creates real attack vectors, has few false positives, incurs no runtime overhead for the deployed application, works without requiring modification of application code, and handles dynamic programming-language constructs. We implemented the technique for PHP, in a tool ARDILLA. We evaluated ARDILLA on five PHP applications and found 68 previously unknown vulnerabilities (23 SQLI, 33 first-order XSS, and 12 second-order XSS).", "author": [{"name": "Adam Kieyzun", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, US"}, {"name": "Philip J. Guo", "affiliation": "University of Stanford, USA"}, {"name": "Karthick Jayaraman", "affiliation": "Syracuse University, USA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, USA"}], "time": "May 2009", "citationCount": "146", "references": [{"title": " \"Finding bugs in dynamic Web applications\"", "authors": ["S. Artzi", " A. Kie\u017cun", " J. Dolby", " F. Tip", " D. Dig", " A. Paradkar", " ."]}, {"title": " \"CANDID: preventing SQL injection attacks using dynamic candidate evaluations\"", "authors": ["S. B", "hakavi", " P. Bisht", " P. Madhusudan ", " V. N. Venkatakrishnan"]}, {"title": " \"What makes a good bug report?\"", "authors": ["N. Bettenburg", " S. Just", " A. Schr\u00f6ter", " C. Weiss", " R. Prernraj ", " T. Zimmermann"]}, {"title": " \"Safe query objects: statically typed objects as remotely executable queries\"", "authors": ["W. Cook ", " S. Rai"]}, {"title": " \"Dynamic test input generation for database applications\"", "authors": ["M. Emmi", " R. Majumdar ", " K. Sen"]}, {"title": " \"Static analysis versus software model checking for bug finding\"", "authors": ["D. Engler ", " M. Musuvathi"]}, {"title": " \"A static analysis framework for detecting SQL injection vulnerabilities\"", "authors": ["X. Fu", " X. Lu", " B. Peltsverger", " S. Chen", " K. Qian ", " L. Tao"]}, {"title": " \"The soundness of bugs is what matters (position statement)\"", "authors": ["P. Godefroid"]}, {"title": " \"DART: Directed automated random testing\"", "authors": ["P. Godefroid", " N. Klarlund ", " K. Sen"]}, {"title": " \"Static checking of dynamically generated queries in database applications\"", "authors": ["C. Gould", " Z. Su ", " P. Devanbu"]}, {"title": " \"WASP: Protecting Web applications using positive tainting and syntaxaware evaluation\"", "authors": ["W. Halfond", " A. Orso ", " P. Manolios"]}, {"title": " \"AMNESIA: Analysis and Monitoring for NEutralizing SOL-Iniection Attacks\"", "authors": ["W. G. Halfond ", " A. Orso"]}, {"title": " \"Securing Web application code by static analysis and runtime protection\"", "authors": ["Y.-W. Huang", " F. Yu", " C. Hang", " C.-H. Tsai", " D.-T. Lee ", " S.-Y. Kuo"]}, {"title": " \"Hampi: A solver for string constraints\"", "authors": ["A. Kie\u017cun", " V. Ganesh", " P. J. Guo", " P. Hooimeijer ", " M. D. Ernst"]}, {"title": " \"Information flow control for standard OS abstractions\"", "authors": ["M. Krohn", " M. Brodsky", " M. Kaashoek ", " R. Morris"]}, {"title": " \"Securing Web applications with static and dynamic information flow tracking\"", "authors": ["M. Lam", " M. Martin", " B. Livshits ", " J. Whaley"]}, {"title": " \"Finding security vulnerabilities in Java applications with static analysis\"", "authors": ["B. Livshits ", " M. Lam"]}, {"title": " \"Automatic generation of XSS and SQL injection attacks with goal-directed model checking\"", "authors": ["M. Martin ", " M. Lam"]}, {"title": " \"Leveraging user interactions for in-depth testing of Web applications\"", "authors": ["S. McAllistcr", " E. Kirda ", " C. Kr\u00fcgel"]}, {"title": " \"SQL DOM: compile time checking of dynamic SQL statements\"", "authors": ["R. McClure ", " I. Kr\u00fcger"]}, {"title": " \"Static approximation of dynamically generated Web pages\"", "authors": ["Y. Minamide"]}, {"title": " \"Dynamic taint analysis for automatic detection analysis and signature generation of exploits on commodity software\"", "authors": ["J. Newsome ", " D. Song"]}, {"title": " \"Defending against injection attacks through context-sensitive string evaluation\"", "authors": ["T. Pietraszek ", " C. V. Berghe"]}, {"title": " \"The essence of command injection attacks in Web applications\"", "authors": ["Z. Su ", " G. Wassermann"]}, {"title": " \"Sound and precise analysis of Web applications for injection vulnerabilities\"", "authors": ["G. Wassermann ", " Z. Su"]}, {"title": " \"Static detection of cross-site scripting vulnerabilities\"", "authors": ["G. Wassermann ", " Z. Su"]}, {"title": " \"Dynamic test input generation for Web applications\"", "authors": ["G. Wassermann", " D. Yu", " A. Ch", "er", " D. Dhurjati", " H. Inamura ", " Z. Su"]}, {"title": " \"Static detection of security vulnerabilities in scripting languages\"", "authors": ["Y. Xie ", " A. Aiken"]}, {"title": " \"Securing distributed systems with information flow control\"", "authors": ["N. Zeldovich", " S. Boyd-Wickizer ", " D. Mazieres"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070975", "title": "Predicting defects in SAP Java code: An experience report", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Java", "Predictive models", "Software systems", "Frequency", "Quality assurance", "History", "Detectors", "Power system modeling", "Resource management", "Software testing"], "abstract": "Which components of a large software system are the most defect-prone? In a study on a large SAP Java system, we evaluated and compared a number of defect predictors, based on code features such as complexity metrics, static error detectors, change frequency, or component imports, thus replicating a number of earlier case studies in an industrial context. We found the overall predictive power to be lower than expected; still, the resulting regression models successfully predicted 50-60% of the 20% most defect-prone components.", "author": [{"name": "Tilman Holschuh", "affiliation": "SQS AG, Germany"}, {"name": "Markus Pauser", "affiliation": "SQS AG, Germany"}, {"name": "Kim Herzig", "affiliation": "University of Saarland, Germany"}, {"name": "Thomas Zimmermann", "affiliation": "Microsoft Research Limited, USA"}, {"name": "Rahul Premraj", "affiliation": "Vrije Universiteit Amsterdam, Netherlands"}, {"name": "Andreas Zeller", "affiliation": "University of Saarland, Germany"}], "time": "May 2009", "citationCount": "16", "references": []},
{"doi": "10.1109/ICSE.2007.56", "title": "Modeling Product Line Architectures through Change Sets and Relationships", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Programmable logic arrays", "Computer architecture", "Informatics", "Switches", "Software engineering"], "abstract": "The essence of any modeling approach for product line architectures lies in its ability to express variability. Existing approaches do so by explicitly specifying variation points inside the architectural specification of the entire product line, usually with optional and alternative elements of some form. This, however, leads to a sizable mismatch between conceptual variability (i.e., the features through which architects logically view and interpret differences in product architectures) and actual variability (i.e., the modeling constructs through which the logical differences must be expressed). We contribute a new product line architecture modeling approach that unites the two. Our approach uses change sets to group related architectural differences and relationships to govern which change set combinations are valid when composed into a particular product architecture. The result lifts modeling of variability out of modeling architectural structure, consolidates related variation points, and explicitly and separately manages their compatibilities.", "author": [{"name": "Scott A. Hendrickson", "affiliation": "Department of Informatics, University of California, Irvine, CA, USA"}, {"name": "Andre van der Hoek", "affiliation": "Department of Informatics, University of California, Irvine, CA, USA"}], "time": "May 2007", "citationCount": "22", "references": []},
{"doi": "10.1109/ICSE.2009.5070522", "title": "Invariant-based automatic testing of AJAX user interfaces", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Automatic testing", "User interfaces", "Runtime", "Tree graphs", "Crawlers", "Flow graphs", "Fault diagnosis", "Fault detection", "Scalability", "Automation"], "abstract": "AJAX-based Web 2.0 applications rely on stateful asynchronous client/server communication, and client-side runtime manipulation of the DOM tree. This not only makes them fundamentally different from traditional web applications, but also more error-prone and harder to test. We propose a method for testing AJAX applications automatically, based on a crawler to infer a flow graph for all (client-side) user interface states. We identify AJAX-specific faults that can occur in such states (related to DOM validity, error messages, discoverability, back-button compatibility, etc.) as well as DOM-tree invariants that can serve as oracle to detect such faults. We implemented our approach in ATUSA, a tool offering generic invariant checking components, a plugin-mechanism to add application-specific state validators, and generation of a test suite covering the paths obtained during crawling. We describe two case studies evaluating the fault revealing capabilities, scalability, required manual effort and level of automation of our approach.", "author": [{"name": "Ali Mesbah", "affiliation": "Software Engineering Research Group, Delft University of Technnology, Netherlands"}, {"name": "Arie van Deursen", "affiliation": "Software Engineering Research Group, Delft University of Technnology, Netherlands"}], "time": "May 2009", "citationCount": "95", "references": [{"title": " \"Testing web applications by modeling with FSMs\"", "authors": ["A. Andrews", " J. Offutt ", " R. Alex"]}, {"title": " \"Finding bugs in dynamic web applications\"", "authors": ["S. Artzi", " A. Kiezun", " J. Dolby", " F. Tip", " D. Dig", " A. Paradkar", " ."]}, {"title": " \"VeriWeb: Automatically testing dynamic web sites\"", "authors": ["M. Benedikt", " J. Freire ", " P. Godefroid"]}, {"title": " \"Software testing research: Achievements challenges dreams\"", "authors": ["A. Bertolino"]}, {"title": " \"Testing object-oriented systems: models patterns and tools\" in ", "authors": ["R. V. Binder"]}, {"title": " \"Performance testing of data delivery techniques for Ajax applications\"", "authors": ["E. Bozdag", " A. Mesbah ", " A. van Deursen"]}, {"title": " \"Improving web application testing with user session data\"", "authors": ["S. Elbaum", " S. Karre ", " G. Rothermel"]}, {"title": " \"Improving test case generation for web applications using automated interface discovery\"", "authors": ["W. Halfond ", " A. Orso"]}, {"title": " \"A testing framework for web application security assessment\"", "authors": ["Y.-W. Huang", " C.-H. Tsai", " T.-P. Lin", " S.-K. Huang", " D. T. Lee ", " S.-Y. Kuo"]}, {"title": " \"Secubat: a web vulnerability scanner\"", "authors": ["S. Kals", " E. Kirda", " C. Kruegel ", " N. Jovanovic"]}, {"title": " \"State-based testing of Ajax web applications\"", "authors": ["A. Marchetto", " P. Tonella ", " F. Ricca"]}, {"title": " \"An event-flow model of GUI-based applications for testing: Research articles\"", "authors": ["A. Memon"]}, {"title": " \"Crawling Ajax by inferring user interface state changes\"", "authors": ["A. Mesbah", " E. Bozdag ", " A. van Deursen"]}, {"title": " \"Migrating multi-page web applications to single-page Ajax interfaces\"", "authors": ["A. Mesbah ", " A. van Deursen"]}, {"title": " \"A component-and push-based architectural style for Ajax applications\"", "authors": ["A. Mesbah ", " A. van Deursen"]}, {"title": " \"Seven principles of software testing\"", "authors": ["B. Meyer"]}, {"title": " \"Theoretical insights into fault-based testing\"", "authors": ["L. Morell"]}, {"title": " \"Analysis and testing of web applications\"", "authors": ["F. Ricca ", " P. Tonella"]}, {"title": " \"The RELAY model of error detection and its application\"", "authors": ["D. Richardson ", " M. Thompson"]}, {"title": " \"Automated replay and failure detection for web applications\"", "authors": ["S. Sprenkle", " E. Gibson", " S. Sampath ", " L. Pollock"]}, {"title": " \"Automated oracle comparators for testing web applications\"", "authors": ["S. Sprenkle", " L. Pollock", " H. Esquivel", " B. Hazelwood ", " S. Ecott"]}, {"title": " \"Framework testing of web applications using TTCN-3\"", "authors": ["B. Stepien", " L. Peyton ", " P. Xiong"]}, {"title": " \"On testing non-testable programs\"", "authors": ["E. J. Weyuker"]}, {"title": " \"Finding the k shortest loopless paths in a network\"", "authors": ["J. Y. Yen"]}, {"title": " \"Case Study Research: Design and Methods\" in ", "authors": ["R. K. Yin"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070976", "title": "Reflecting on development processes in the video game industry", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Games", "Toy industry", "Computer industry", "Hardware", "Auditory displays", "Logic devices", "Clocks", "Multicore processing", "Optical coupling", "Graphics"], "abstract": "Summary form only given. In the past thirty years consumer video game hardware has progressed from simple 8-bit processors, some dedicated display logic and a few kilobytes of memory to high clock rate multi-core processors coupled with a programmable graphics unit, large memories, high capacity optical and fixed drives, network interfaces, high definition audio/video output, and sophisticated user input devices. With this tremendous increase in capability has come a corresponding increase in the sophistication of video games, broadening their market appeal from a niche into a business that rivals Hollywood. The need to create products of this complexity has driven project team sizes from a couple of hackers in a basement to multi-disciplinary teams often numbering well over a hundred. Allowing project teams of this size to function effectively and deliver products on a manageable schedule has driven the evolution of software and content authoring practices and processes within the games industry. This evolution has drawn on experiences, concepts and tools from the software development industry at large, integrating them into the unique environment of video game development. This talk will provide an overview of some of these processes and best practices, as well as the key challenges in the creation of hit titles such as Skate and Need For Speed.", "author": [{"name": "Andrew Brownsword", "affiliation": "Electronic Arts, Inc., USA"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.57", "title": "On Accurate Automatic Verification of Publish-Subscribe Architectures", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Publish-subscribe", "State-space methods", "Application software", "Explosions", "Buildings", "Proposals", "Asynchronous communication", "Specification languages", "Pervasive computing", "Communication system software"], "abstract": "The paper presents a novel approach based on Bogor for the accurate verification of applications based on Publish- Subscribe infrastructures. Previous efforts adopted standard model checking techniques to verify the application behavior, but they introduce strong simplifications on the underlying infrastructure to cope with the state space explosion problem and make automatic verification feasible. Instead of building on top of existing model checkers, our proposal embeds the asynchronous communication mechanisms of Publish-Subscribe infrastructures within Bogor. This way, Publish-Subscribe primitives become part of the specification language as additional, domain-specific, constructs. Accurate models become feasible without incurring in state space explosion problems, thus enabling the automated verification of applications on top of realistic communication infrastructures.", "author": [{"name": "Luciano Baresi", "affiliation": "Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}, {"name": "Carlo Ghezzi", "affiliation": "Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}, {"name": "Luca Mottola", "affiliation": "Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}], "time": "May 2007", "citationCount": "19", "references": []},
{"doi": "10.1109/ICSE.2009.5070523", "title": "FEATUREHOUSE: Language-independent, automated software composition", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Java", "XML", "Software systems", "Informatics", "Mathematics", "Programming", "Software tools", "Scalability", "Documentation", "Collaborative software"], "abstract": "Superimposition is a composition technique that has been applied successfully in many areas of software development. Although superimposition is a general-purpose concept, it has been (re)invented and implemented individually for various kinds of software artifacts. We unify languages and tools that rely on superimposition by using the language-independent model of feature structure trees (FSTs). On the basis of the FST model, we propose a general approach to the composition of software artifacts written in different languages, Furthermore, we offer a supporting framework and tool chain, called FEATUREHOUSE. We use attribute grammars to automate the integration of additional languages, in particular, we have integrated Java, C#, C, Haskell, JavaCC, and XML. Several case studies demonstrate the practicality and scalability of our approach and reveal insights into the properties a language must have in order to be ready for superimposition.", "author": [{"name": "Sven Apel", "affiliation": "Department of Informatics and Mathematics, University of Passau, Germany"}, {"name": "Christian Kastner", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}, {"name": "Christian Lengauer", "affiliation": "Department of Informatics and Mathematics, University of Passau, Germany"}], "time": "May 2009", "citationCount": "69", "references": [{"title": " \"On Refining XML Artifacts\"", "authors": ["F. Anfurrutia", " O. D\u00edaz ", " S. Trujillo"]}, {"title": " \"An Overview of the gDeep Calculus\"", "authors": ["S. Apel ", " D. Hutchins"]}, {"title": " \"Feature Featherweight Java: A Calculus for feature-oriented Programming and Stepwise Refinement\"", "authors": ["S. Apel", " C. K\u00e4stne ", " C. Lengauer"]}, {"title": " \"FeatureC++: On the Symbiosis of feature-oriented and aspect-oriented Programming\"", "authors": ["S. Apel", " T. Leich", " M. Rosenm\u00fcller ", " G. Saake"]}, {"title": " \"Superimposition: A language-independent Approach to Software Composition\"", "authors": ["S. Apel ", " C. Lengauer"]}, {"title": " \"An Algebra for Features and Feature Composition\"", "authors": ["S. Apel", " C. Lengauer", " B. M\u00f6ller ", " C. K\u00e4stner"]}, {"title": " \"Feature Models Grammars and Propositional Formulas\"", "authors": ["D. Batory"]}, {"title": " \"Scaling Step-Wise Refinement\"", "authors": ["D. Batory", " J. Sarvela ", " A. Rauschmayer"]}, {"title": " \"Classbox/J: Controlling the Scope of Change in Java\"", "authors": ["A. Bergel", " S. Ducasse ", " O. Nierstrasz"]}, {"title": " \"Composing Crosscutting Concerns Using Composition Filters\"", "authors": ["L. Bergmans ", " M. Aksit"]}, {"title": " \"Super-Imposition: A Component Adaptation Technique\"", "authors": ["J. Bosch"]}, {"title": " \"A Compositional Approach to Superimposition\"", "authors": ["L. Bouge ", " N. Francez"]}, {"title": " \"Subject-Oriented Design: Towards Improved Alignment of Requirements Design and Code\"", "authors": ["S. Clarke", " W. Harrison", " H. Ossher ", " P. Tarr"]}, {"title": " \"Efficient Layer Activation for Switching Context-Dependent Behavior\"", "authors": ["P. Costanza", " R. Hirschfeld ", " W. de Meuter"]}, {"title": " \"Mapping Features to Models: A Template Approach Based on Superimposed Variants\"", "authors": ["K. Czarnecki ", " M. Antkiewicz"]}, {"title": " \"Understanding and Improving UML Package Merge\"", "authors": ["J. Dingel", " Z. Diskin ", " A. Zito"]}, {"title": " \"Lifting Transformational Models of Product Lines: A Case Study\"", "authors": ["G. Freeman", " D. Batory ", " G. Lavender"]}, {"title": " \"General Composition of Software Artifacts\"", "authors": ["W. Harrison", " H. Ossher ", " P. Tarr"]}, {"title": " \"Eliminating Distinctions of Class: Using Prototypes to Model Virtual Classes\"", "authors": ["D. Hutchins"]}, {"title": " \"Lightweight Scalable Components\"", "authors": ["T. Kamina ", " T. Tamai"]}, {"title": " \"Type-checking Software Product Lines \u2013 A Formal Approach\"", "authors": ["C. K\u00e4stner ", " S. Apel"]}, {"title": " \"Granularity in Software Product Lines\"", "authors": ["C. K\u00e4stner", " S. Apel ", " M. Kuhlemann"]}, {"title": " \"language-independent Safe Decomposition of Legacy Applications into Features\"", "authors": ["C. K\u00e4stner", " S. Apel", " S. Trujillo", " M. Kuhlemann ", " D. Batory"]}, {"title": " \"Merging Models with the Epsilon Merging Language (EML)\"", "authors": ["D. Kolovos", " R. Paige ", " F. Polack"]}, {"title": " \"A Standard Problem for Evaluating Product-Line Methodologies\"", "authors": ["R. Lopez-Herrejon ", " D. Batory"]}, {"title": " \"Modeling Crosscutting in aspect-oriented Mechanisms\"", "authors": ["H. Masuhara ", " G. Kiczales"]}, {"title": " \"aspect-oriented Programming with Jiazzi\"", "authors": ["S. McDirmid ", " W. Hsieh"]}, {"title": " \"A State-of-the-Art Survey on Software Merging\"", "authors": ["T. Mens"]}, {"title": " \"Conquering Aspects with Caesar\"", "authors": ["M. Mezini ", " K. Ostermann"]}, {"title": " \"Scalable Extensibility via Nested Inheritance\"", "authors": ["N. Nystrom", " S. Chong ", " A. Myers"]}, {"title": " \"Scalable Component Abstractions\"", "authors": ["M. Odersky ", " M. Zenger"]}, {"title": " \"Combination of Inheritance Hierarchies\"", "authors": ["H. Ossher ", " W. Harrison"]}, {"title": " \"Hyper/J: multi-dimensional Separation of Concerns for Java\"", "authors": ["H. Ossher ", " P. Tarr"]}, {"title": " \"Designing Software for Ease of Extension and Contraction\"", "authors": ["D. Parnas"]}, {"title": " \"feature-oriented Programming: A Fresh Look at Objects\"", "authors": ["C. Prehofer"]}, {"title": " \"Superimpositions and aspect-oriented Programming\"", "authors": ["M. Sihman ", " S. Katz"]}, {"title": " \"Mixin Layers: An object-oriented Implementation Technique for Refinements and Collaboration-Based Designs\"", "authors": ["Y. Smaragdakis ", " D. Batory"]}, {"title": " \"N Degrees of Separation: multi-dimensional Separation of Concerns\"", "authors": ["P. Tarr", " H. Ossher", " W. Harrison ", " S. Sutton"]}, {"title": " \"Abstract Syntax from Concrete Syntax\"", "authors": ["D. Wile"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070977", "title": "Detecting inefficient API usage", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software libraries", "Java", "Application software", "Open source software", "Uniform resource locators", "Computer science", "Software systems", "Functional programming", "Runtime library", "Computer languages"], "abstract": "Large software projects often rely on third-party libraries, made accessible through application programming interfaces (APIs). We have observed many cases where APIs are used in ways that are not efficient. We developed a technique to automatically detect inefficient API usage in software projects. The main hypothesis underlying the technique is that client code that imitates the behavior of a library method without calling it is likely not to use the library as efficiently as possible. In addition to warning developers of potentially inefficient API usage, our technique also indicates how to improve the use of the API. Application of the technique on Java open-source systems revealed many cases of inefficient API usage, and corresponding recommendations that led to code improvements.", "author": [{"name": "David Kawrykow", "affiliation": "School of Computer Science, McGill University, Montreal, QUE, Canada"}, {"name": "Martin P. Robillard", "affiliation": "School of Computer Science, McGill University, Montreal, QUE, Canada"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.82", "title": "Supporting Heterogeneous Architecture Descriptions in an Extensible Toolset", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Computer architecture", "Fractals", "Decoding", "Software systems", "Graphical user interfaces", "Architecture description languages", "DSL", "Domain specific languages", "Java", "Software architecture"], "abstract": "Many architecture description languages (ADLs) have been proposed to model, analyze, configure, and deploy complex software systems. To face this diversity, extensible ADLs (or ADL interchange formats) have been proposed. These ADLs provide linguistic support for integrating various architectural aspects within the same description. Nevertheless, they do not support extensibility at the tool level, i.e. they do not provide an extensible toolset for processing ADL descriptions. In this paper, we present an extensible toolset for easing the development of architecture-based software systems. This toolset is not bound to a specific ADL, but rather uses a grammar description mechanism to accept various input languages, e.g. ADLs, interface definition languages (IDLs), domain specific languages (DSLs). Moreover, it can easily be extended to implement many different features, such as behavioral analysis, code generation, deployment, etc. Its extensibility is obtained by designing its core functionalities using fine-grained components that implement flexible design patterns. Experiments are presented to illustrate both the functionalities implemented by the toolset and the way it can be extended.", "author": [{"name": "Matthieu Leclercq", "affiliation": "STMicroelectronics, Grenoble, France"}, {"name": "Ali Erdem Ozcan", "affiliation": "STMicroelectronics, Grenoble, France"}, {"name": "Vivien Quema", "affiliation": "CNRS, Grenoble, France"}, {"name": "Jean-Bernard Stefani", "affiliation": "INRIA, Grenoble, France"}], "time": "May 2007", "citationCount": "16", "references": []},
{"doi": "10.1109/ICSE.2009.5070524", "title": "Automatically capturing source code context of NL-queries for software maintenance and reuse", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software maintenance", "Natural languages", "Software systems", "Vocabulary", "Frequency", "Automation", "Humans", "Costs", "Search methods", "Search engines"], "abstract": "As software systems continue to grow and evolve, locating code for maintenance and reuse tasks becomes increasingly difficult. Existing static code search techniques using natural language queries provide little support to help developers determine whether search results are relevant, and few recommend alternative words to help developers reformulate poor queries. In this paper, we present a novel approach that automatically extracts natural language phrases from source code identifiers and categorizes the phrases and search results in a hierarchy. Our contextual search approach allows developers to explore the word usage in a piece of software, helping them to quickly identify relevant program elements for investigation or to quickly recognize alternative words for query reformulation. An empirical evaluation of 22 developers reveals that our contextual search approach significantly outperforms the most closely related technique in terms of effort and effectiveness.", "author": [{"name": "Emily Hill", "affiliation": "Department of Computer and Information Sciences, University of Delaware, Newark, DE, USA"}, {"name": "Lori Pollock", "affiliation": "Department of Computer and Information Sciences, University of Delaware, Newark, DE, USA"}, {"name": "K. Vijay-Shanker", "affiliation": "Department of Computer and Information Sciences, University of Delaware, Newark, DE, USA"}], "time": "May 2009", "citationCount": "93", "references": [{"title": " \"PC-KIMMO: a two-level processor for morphological analysis\" in Occasional Publications in Academic Computing", "authors": ["E. L. Antworth"]}, {"title": " \"Efficiently mining long patterns from databases\"", "authors": ["Roberto J. Bayardo"]}, {"title": " \"The concept assignment problem in program understanding\"", "authors": ["T. J. Biggerstaff", " B. G. Mitb", "er "]}, {"title": " \"Nomen est omen: Analyzing the language of function identifiers\"", "authors": ["B. Caprile ", " P. Tonella"]}, {"title": " \"Lassie\u2014a knowledge-based software information system\"", "authors": ["P. T. Devanbu", " R. J. Brachman", " P. G. Selfridge ", " B. W. Ballard"]}, {"title": " \"Do crosscutting concerns cause defects?\"", "authors": ["M. Eaddy", " T. Zimmermann", " K. D. Sherwood", " V. Garg", " G. C. Murphy", " N. Nagappan", " ."]}, {"title": " \"Helgon: extending the retrieval by reformulation paradigm\"", "authors": ["G. Fischer ", " H. Nieper-Lemke"]}, {"title": " \"The vocabulary problem in human-system communication\"", "authors": ["G. W. Furnas", " T. K. L", "auer", " L. M. Gomez ", " S. T. Dumais"]}, {"title": " \"Using iterative refinement to find reusable software\"", "authors": ["S. Henninger"]}, {"title": " \"Exploring the neighborhood with Dora to expedite software maintenance\"", "authors": ["E. Hill", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"Using structural context to recommend source code examples\"", "authors": ["R. Holmes ", " G. C. Murphy"]}, {"title": " \"Navigating and querying code without getting lost\"", "authors": ["D. Janzen ", " K. D. Volder"]}, {"title": " \"Semantic clustering: Identifying topics in source code\"", "authors": ["A. Kuhn", " S. Ducasse ", " T. G\u00edrba"]}, {"title": " \"Extracting meaning from abbreviated identifiers\"", "authors": ["D. Lawrie", " H. Feild ", " D. Binkley"]}, {"title": " \"Cognitive perspectives on the role of naming in computer programs\"", "authors": ["B. Liblit", " A. Begel ", " E. Sweetser"]}, {"title": " \"Automatic generation of domain representations using thesaurus structures\"", "authors": ["J. Llor\u00e9ns", " M. Velasco", " A. de Amescua", " J. A. Moreiro ", " V. Mart\u00ednez"]}, {"title": " \"An information retrieval approach for automatically constructing software libraries\"", "authors": ["Y. S. Maarek", " D. M. Berry ", " G. E. Kaiser"]}, {"title": " \"An information retrieval approach to concept location in source code\"", "authors": ["A. Marcus", " A. Sergeyev", " V. Rajlich ", " J. I. Maletic"]}, {"title": " \"Mining business topics in source code using latent dirichlet allocation\"", "authors": ["G. Maskeri", " S. Sarkar ", " K. Heafield"]}, {"title": " \"Feed-forward and recurrent neural networks for source code informal information analysis\"", "authors": ["E. Merlo", " I. McAdam ", " R. D. Mori"]}, {"title": " \"Assessing software libraries by browsing similar classes functions and relationships\"", "authors": ["A. Michail ", " D. Notkin"]}, {"title": " \"Toward mining \u201cconcept keywords\u201d from identifiers in large software projects\"", "authors": ["M. Ohba ", " K. Gondow"]}, {"title": " \"Combining formal concept analysis with information retrieval for concept location in source code\"", "authors": ["D. Poshyvanyk ", " A. Marcus"]}, {"title": " \"JIRiSS-an Eclipse plug-in for source code exploration\"", "authors": ["D. Poshyvanyk", " A. Marcus ", " Y. Dong"]}, {"title": " \"Source code exploration with Google\"", "authors": ["D. Poshyvanyk", " M. Petrenko", " A. Marcus", " X. Xie ", " D. Liu"]}, {"title": " \"Classifying software for reusability\"", "authors": ["R. Prieto-Diaz ", " P. Freeman"]}, {"title": " \"Using natural language program analysis to locate and understand action-oriented concerns\"", "authors": ["D. Shepherd", " Z. P. Fry", " E. Hill", " L. Pollock ", " K. VijayShanker"]}, {"title": " \"Towards supporting on-demand virtual remodularization using program graphs\"", "authors": ["D. Shepherd", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"Identifying word relations in software: A comparative study of semantic similarity tools\"", "authors": ["G. Sridhara", " E. Hill", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"Thin slicing\"", "authors": ["M. Sridharan", " S. Fink ", " R. Bodik"]}, {"title": " \"Signature matching: a tool for using software libraries\"", "authors": ["A. M. Zaremski ", " J. M. Wing"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070978", "title": "A sense of community: A research agenda for software ecosystems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Ecosystems", "Portfolios", "Knowledge management", "Educational institutions", "Intellectual property", "Computer industry", "Software engineering", "Software standards", "Standards development", "Books"], "abstract": "Software vendors lack the perspective to develop software within a software ecosystem. The inability to function in a software ecosystem has already led to the demise of many software vendors, leading to loss of competition, intellectual property, and eventually jobs in the software industry. In this paper we present a research agenda on software ecosystems to study both the technical and the business aspects of software engineering in vibrant ecosystems. The results of such research enable software vendors to develop software that is adaptable to new business models and new markets, and to make strategic choices that help a software vendor to thrive in a software ecosystem.", "author": [{"name": "Slinger Jansen", "affiliation": "University of Utrecht, Netherlands"}, {"name": "Anthony Finkelstein", "affiliation": "University College London, UK"}, {"name": "Sjaak Brinkkemper", "affiliation": "University of Utrecht, Netherlands"}], "time": "May 2009", "citationCount": "168", "references": []},
{"doi": "10.1109/ICSE.2007.12", "title": "Adaptive Online Program Analysis", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Performance analysis", "Runtime", "Information analysis", "Instruments", "Monitoring", "Costs", "Sampling methods", "Java", "Failure analysis", "Performance evaluation"], "abstract": "Analyzing a program run can provide important insights about its correctness. Dynamic analysis of complex correctness properties, however, usually results in significant run-time overhead and, consequently, it is rarely used in practice. In this paper, we present an approach for exploiting properties of stateful program specifications to reduce the cost of their dynamic analysis. With our approach, analysis results are guaranteed to be identical to those of a traditional expensive dynamic analyses, while analysis cost is very low - between 23% and 33% more than the un-instrumented program for the analyses we studied. We describe the principles behind our adaptive online program analysis technique, extentions to our Java run-time analysis framework that support such analyses, and report on the performance and capabilities of two different families of adaptive online program analyses.", "author": [{"name": "Matthew B. Dwyer", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}, {"name": "Alex Kinneer", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}, {"name": "Sebastian Elbaum", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, USA"}], "time": "May 2007", "citationCount": "20", "references": []},
{"doi": "10.1109/ICSE.2009.5070525", "title": "Semantics-based code search", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Search engines", "Security", "Writing", "Open source software", "Computer science", "Testing", "Contracts", "Prototypes", "Java"], "abstract": "Our goal is to use the vast repositories of available open source code to generate specific functions or classes that meet a user's specifications. The key words here are specifications and generate. We let users specify what they are looking for as precisely as possible using keywords, class or method signatures, test cases, contracts, and security constraints. Our system then uses an open set of program transformations to map retrieved code into what the user asked for. This approach is implemented in a prototype system for Java with a Web interface.", "author": [{"name": "Steven P. Reiss", "affiliation": "Department of Computer Science, Brown University, Providence, RI, USA"}], "time": "May 2009", "citationCount": "128", "references": [{"title": " \"Sourcerer: a search engine for open source code supporting structure-based search\"", "authors": ["Sushil Bajracharya", " Trung Ngo", " Erik Linstead", " Yimeng Dou", " Paul Rigor", " Pierre Baldi", " ."]}, {"title": " \"Compass Reference Documentation\"", "authors": ["Shay Banon ", " Alan Hardy"]}, {"title": " \"The ABCs of specification: AsmL behavior and components\"", "authors": ["Mike Barnett ", " Wolfram Schulte"]}, {"title": " \"Codifier: a programmer-centric search user interface\"", "authors": ["Andrew Begel"]}, {"title": " \"An overview of JML tools and applications\"", "authors": ["Lilian Burdy", " Yoonsik Cheon", " David Cok", " Michael Ernst", " Joe Kiniry", " Gary T. Leavens", " ."]}, {"title": " \"Random test data generation for Java classes annotated with JML specifications\"", "authors": ["Yoonsik Cheon ", " Carlos E. Rubio-Medrano"]}, {"title": " \"A behavior-based classification and retrieval technique for object-oriented specification reuse\"", "authors": ["Shih-Chien Chou", " Jen-Yen Chen ", " Chyan-Goei Chung"]}, {"title": " \"Retrieving reusable components with variation points from software product lines\"", "authors": ["Shih-Chien Chou ", " Yuan-Chien Chen"]}, {"title": "\"Google Web Toolkit Documentation\"", "authors": []}, {"title": " \"A learning agent that assists the browsing of software libraries\"", "authors": ["Christopher G. Drummond", " Dan Ionescu ", " Robert C. Holte"]}, {"title": " \"Detection of web service substitutability and composability\"", "authors": ["Michael D. Ernst", " Raimondas Lencevisius ", " Jeff H. Perkins"]}, {"title": " \"An empiracal study of representation methods for reusable software components\"", "authors": ["William B. Frakes ", " Thomas P. Pole"]}, {"title": " \"Java 2 platform security architecture\"", "authors": ["Li Gong"]}, {"title": " \"The Larch family of specification languages\"", "authors": ["J. V. Guttag", " J. J. Horning ", " J. M. Wing"]}, {"title": " \"Generalized behavior-based retrieval\"", "authors": ["Robert J. Hall"]}, {"title": " \"Supporting component-based reuse in CARE\"", "authors": ["David Hemer ", " Peter Lindsay"]}, {"title": " \"Assieme: finding and leveraging implicit references in a web search interface for programmers\"", "authors": ["Raphael Hoffmann ", " James Fogarty"]}, {"title": " \"Specification matching for software reuse: a foundation\"", "authors": ["Jun-Jang Jeng ", " Betty H. C. Cheng"]}, {"title": " \"CodeGenie: using test-cases to search and reuse source code\"", "authors": ["Otavio Lemos", " Sushil Bajracharya", " Joel Ossher", " Ricardo Morla", " Paulo Masiero", " Pierre Baldi", " ."]}, {"title": " \"Keyword programming in Java\"", "authors": ["Greg Little ", " Robert C. Miller"]}, {"title": " \"A survey of software components search and retrieval\"", "authors": ["Daniel Lucredio", " Antonio Franciso do Prado ", " Eduardo Santana de Almeida"]}, {"title": " \"An information retrieval approach for automatically constructing software libraries\"", "authors": ["Yoelle S. Maarek", " Daniel M. Berry ", " Gail E. Kaiser"]}, {"title": " \"A survey of software reuse libraries\"", "authors": ["A. Mili", " R. Mili ", " R. T. Mittermeir"]}, {"title": " \"Reusing software: issues and reseach directions\"", "authors": ["Hafdeh Mili", " Fatma Mili ", " Ali Mili"]}, {"title": " \"Storing and retrieving software components: a refinement based system\"", "authors": ["Rym Mili", " Ali Mili ", " T. Mittermeir Rol"]}, {"title": " \"A framework for source code search using program patterns\"", "authors": ["Santanu Paul ", " Atul Prakash"]}, {"title": " \"Retrieving reusable software by sampling behavior\"", "authors": ["Andy Podgurski ", " Lynn Pierce"]}, {"title": " \"A component model for Internet-scale applications\"", "authors": ["Steven P. Reiss"]}, {"title": " \"Automatic code stylizing\"", "authors": ["Steven P. Reiss"]}, {"title": " \"Specifications as search keys for software libraries\"", "authors": ["Eugene J. Rollins ", " Jeannette M. Wing"]}, {"title": " \"Retrieving re-usable software components by polymorphic type\"", "authors": ["Colin Runciman ", " Ian Toyn"]}, {"title": " \"A semantic-based approach to component retrieval\"", "authors": ["Vijayan Sugumaran ", " Veda C. Storey"]}, {"title": " \"PARSEWeb: a programmer assistant for reusing open source code on the web\"", "authors": ["Suresh Thummalapenta ", " Tao Xie"]}, {"title": " \"A cooperative classification mechanism for search and retrieval software components\"", "authors": ["Taciana A. V", "erlei", " Frederico A. Durao", " Alex", "re C. Martins", " Vinicius C. Garcia", " Eduardo S. Almeida", " R. Silvio", " ."]}, {"title": " \"Semantic structure matching for assessing web-service similarity\"", "authors": ["Yiqiao Wang ", " Eleni Stroulia"]}, {"title": " \"Towards a semantic-based approach for software reusable component classification and retrieval\"", "authors": ["Haining Yao ", " Letha Etzkorn"]}, {"title": " \"Supporting reuse by delivering task-relevant and personalized information\"", "authors": ["Yunwen Ye ", " Gerhard Fischer"]}, {"title": " \"Programming with an intelligent agent\"", "authors": ["Yunwen Ye"]}, {"title": " \"Signature matching: a key to reuse\"", "authors": ["Amy Moormann Zaremski ", " Jeannette M. Wing"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070979", "title": "Murphy: A Web 2.0 approach for proactive risk management in hardware/software co-design", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Risk management", "Hardware", "Software safety", "Conferences", "Programming", "Best practices", "Hazards", "Product safety", "Security", "Project management"], "abstract": "Risk management of product failure is perceived as a key strategic challenge by an increasing number of software-intensive product builders, and is especially difficult in the context of hardware/software co-design. This paper argues that traditional plan-driven, workshop based risk management approaches suffer from a number of limitations when applied to this context. Murphy, a novel approach for risk management in hardware/software co-design is presented. This approach exploits Web 2.0 social technologies for continuous risk monitoring and harvesting collective risk intelligence.", "author": [{"name": "Vladimir Blagojevic", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}, {"name": "Wim Codenie", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}, {"name": "Jessie Dedecker", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}, {"name": "Nicolas Gonzalez-Deleito", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}, {"name": "Jeroen Deleu", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}, {"name": "Nick Boucart", "affiliation": "SIRRIS-Software Engineering Group, Belgium"}], "time": "May 2009", "citationCount": 0, "references": [{"title": " \"Software Architecture: The Next Step\"", "authors": ["J. Bosch"]}, {"title": " \"Discovering faults in idiom-based exception handling\"", "authors": ["M. Bruntink", " A. Van Deursen", " ", " T. Tourw\u00e9"]}, {"title": " \"Implementing Risk Management on Software Intensive Projects\"", "authors": ["E. H. Conrow", " ", " P. S. Shishido"]}, {"title": " \"Goal-directed requirements acquisition\"", "authors": ["A. Dardenne", " A. Van Lamsweerde", " ", " S. Fickas"]}, {"title": " \"Hardware/software co-design\"", "authors": ["G. De Michell", " ", " R. K. Gupta"]}, {"title": " \"Jazz and the Eclipse Way of Collaboration\"", "authors": ["R. Foster"]}, {"title": " \"Collaborative Risk Management\"", "authors": ["D. Greer", " ", " D. W. Bustard"]}, {"title": " \"Team Risk Management: A New Model for Customer-Supplier Relationships\"", "authors": ["R. P. Higuera ."]}, {"title": " \"An empirical study of introducing the Failure Mode and Effect Analysis technique\"", "authors": ["T. Lauritsen", " ", " T. St\u00e5lhane"]}, {"title": " \"Software support for collaborative risk management\"", "authors": ["J. Miler", " ", " J. Gorski"]}, {"title": " \"An assumptions management framework for systems software\"", "authors": ["A. S. Tirumala"]}]},
{"doi": "10.1109/ICSE.2007.35", "title": "Exception-Chain Analysis: Revealing Exception Handling Architecture in Java Server Applications", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Java", "Information analysis", "Computer architecture", "Programming profession", "Application software", "System testing", "History", "Benchmark testing", "Software engineering", "Availability"], "abstract": "Although it is common in large Java programs to rethrow exceptions, existing exception-flow analyses find only single exception-flow links, thus are unable to identify multiple-link exception propagation paths. This paper presents a new static analysis that, when combined with previous exception-flow analyses, computes chains of semantically-related exception-flow links, and thus reports entire exception propagation paths, instead of just discrete segments of them. These chains can be used 1) to show the error handling architecture of a system, 2) to assess the vulnerability of a single component and the whole system, 3) to support better testing of error recovery code, and 4) to facilitate the tracing of the root cause of a logged problem. Empirical findings and a case history for Tomcat show that a significant portion of the chains found in our benchmarks span multiple components, and thus are hard to find manually.", "author": [{"name": "Chen Fu", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Barbara G. Ryder", "affiliation": "Rutgers University, Piscataway, NJ, USA"}], "time": "May 2007", "citationCount": "40", "references": []},
{"doi": "10.1109/ICSE.2009.5070526", "title": "Reasoning about edits to feature models", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Computer science", "Logic", "Algorithm design and analysis", "Classification algorithms", "Software algorithms", "Assembly", "Law", "Legal factors", "Feedback", "Sun"], "abstract": "Features express the variabilities and commonalities among programs in a software product line (SPL). A feature model defines the valid combinations of features, where each combination corresponds to a program in an SPL. SPLs and their feature models evolve over time. We classify the evolution of a feature model via modifications as refactorings, specializations, generalizations, or arbitrary edits. We present an algorithm to reason about feature model edits to help designers determine how the program membership of an SPL has changed. Our algorithm takes two feature models as input (before and after edit versions), where the set of features in both models are not necessarily the same, and it automatically computes the change classification. Our algorithm is able to give examples of added or deleted products and efficiently classifies edits to even large models that have thousands of features.", "author": [{"name": "Thomas Thum", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}, {"name": "Don Batory", "affiliation": "Department of Computer Science, University of Texas, Austin, USA"}, {"name": "Christian Kastner", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}], "time": "May 2009", "citationCount": "104", "references": [{"title": " \"Refactoring Product Lines\"", "authors": ["V. Alves", " R. Gheyi", " T. Massoni", " U. Kulesza", " P. Borba ", " C. J. P. de Lucena"]}, {"title": " \"Feature Models Grammars and Propositional Formulas\"", "authors": ["D. Batory"]}, {"title": " \"Generating Product-Lines of Product-Families\"", "authors": ["D. Batory", " R. E. Lopez-Herrejon ", " J.-P. Martin"]}, {"title": " \"Scaling StepWise Refinement\"", "authors": ["D. Batory", " J. N. Sarvela ", " A. Rauschmayer"]}, {"title": " \"On the Automated Analysis of Software Product Lines Using Feature Models-A Framework for Developing Automated Tool Support\"", "authors": ["D. Benavides"]}, {"title": " \"A Survey on the Automated Analyses of Feture Models\"", "authors": ["D. Benavides", " A. Ruiz-Corts", " P. Trinidad ", " S. Segura"]}, {"title": " \"A First Step Towards a Framework for the Automated Analysis of Feature Models\"", "authors": ["D. Benavides", " S. Segura", " P. Trinidad ", " A. Ruiz-Cortes"]}, {"title": " \"Using Constraint Programming to Reason on Feature Models\"", "authors": ["D. Benavides", " P. Trinidad ", " A. Ruiz-Cort\u00e9s"]}, {"title": " \"Propositional Logic: Deduction and Algorithms\" in ", "authors": ["H. K. Buning ", " T. Letterman"]}, {"title": " \"A unified approach for showing language containment and equivalence between various types of w-automata\"", "authors": ["E. M. Clarke", " I. A. Draghicescu ", " R. P. Kurshan"]}, {"title": " \"Formalizing Cardinality-Based Feature Models and their Specialization\"", "authors": ["K. Czarnecki", " S. Helsen ", " U. Eisenecker"]}, {"title": " \"Staged Configuration through Specialization and Multi-Level Configuration of Feature Models\"", "authors": ["K. Czarnecki", " S. Helsen ", " U. W. Eisenecker"]}, {"title": " \"Cardinality-Based Feature Modeling and Constraints: A Progress Report\"", "authors": ["K. Czarnecki ", " C. H. P. Kim"]}, {"title": " \"Feature Diagrams and Logics: There and Back Again\"", "authors": ["K. Czarnecki ", " A. Wasowski"]}, {"title": " \"Refactoring: Improving the Design of Existing Code\" in ", "authors": ["M. Fowler"]}, {"title": " \"Integrating Feature Modeling with the RSEB\"", "authors": ["M. L. Griss", " J. Favaro ", " M. d' Aless"]}, {"title": " \"Reasoning about Feature Models in Higher-Order Logic\"", "authors": ["M. Janota ", " J. Kiniry"]}, {"title": " \"Feature-Oriented Domain Analysis (FODA) Feasibility Study\"", "authors": ["K. C. Kang", " S. G. Cohen", " J. A. Hess", " W. E. Novak ", " A. S. Peterson"]}, {"title": " \"Type-checking Software Product Lines-A Formal Approach\"", "authors": ["C. Kastner ", " S. Apel"]}, {"title": " \"A case study implementing features using AspectJ\"", "authors": ["C. K\u00e4stner", " S. Apel ", " D. Batory"]}, {"title": " \"FeatureIDE: Tool Framework for Feature-Oriented Software Development\"", "authors": ["C. K\u00e4stner", " T. Th\u00fcm", " G. Saake", " J. Feigenspan", " T. Leich", " F. Wielgorz", " ."]}, {"title": " \"Synchronizing Cardinality-Based Feature Models and Their Specializations\"", "authors": ["C. H. P. Kim ", " K. Czarnecki"]}, {"title": " \"Optimization of Variability in Software Product Lines\"", "authors": ["F. Loesch ", " E. Ploedereder"]}, {"title": " \"A standard problem for evaluating product-line methodologies\"", "authors": ["R. Lopez-Herrejon ", " D. Batory"]}, {"title": " \"Using First-Order Logic for Product Line Model Validation\"", "authors": ["M. Mannion"]}, {"title": " \"Efficient Compilation Techniques for Large Scale Feature Models\"", "authors": ["M. Mendonca", " A. Wasowski", " K. Czarnecki ", " D. Cowan"]}, {"title": " \"Disambiguating the documentation of variability in software product lines: A separation of concerns formalization and automated analysis\"", "authors": ["A. Metzger", " K. Pohl", " P. Heymans", " P.-Y. Schobbens ", " G. Saval"]}, {"title": " \"Usability Engineering\" in ", "authors": ["J. Nielsen"]}, {"title": " \"Software Product Line Engineering: Foundations Principles and Techniques\" in ", "authors": ["K. Pohl", " G. Bockle ", " F. J. van der Linden"]}, {"title": " \"FAME-DBMS: Tailor-made Data Management Solutions for Embedded Systems\"", "authors": ["M. Rosenmuller ."]}, {"title": " \"Generic Semantics of Feature Diagrams\"", "authors": ["P.-Y. Schobbens", " P. Heymans", " J.-C. Trigaux ", " Y. Bontemps"]}, {"title": " \"User Interface Design for Programmers\" in ", "authors": ["J. Spolsky"]}, {"title": " \"Introducing PLA at Bosch Gasoline Systems: Experiences and Practices\"", "authors": ["M. Steger", " C. Tischer", " B. Boss", " A. M\u00fcller", " O. Pertler", " W. Stolz", " ."]}, {"title": " \"Formal Semantics and Verification for Feature Modeling\"", "authors": ["J. Sun", " H. Zhang", " Y. F. Li ", " H. Wang"]}, {"title": " \"Safe Composition of Product Lines\"", "authors": ["S. Thaker", " D. Batory", " D. Kitchin ", " W. Cook"]}, {"title": " \"Reasoning about Feature Model Edits\"", "authors": ["T. Th\u00fcm"]}, {"title": " \"Automated Diagnosis of Product-line Configuration Errors in Feature Models\"", "authors": ["J. White", " D. C. Schmidt", " D. Benavides", " P. Trinidad ", " A. Ruiz-Cort\u00e9s"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070980", "title": "The comment density of open source software code", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Open source software", "Large-scale systems", "Programming", "Software maintenance", "Density measurement", "Java", "Software engineering"], "abstract": "The development processes of open source software are different from traditional closed source development processes. Still, open source software is frequently of high quality. Thus, we are investigating how open source software creates high quality and whether it can maintain this quality for ever larger project sizes. In this paper, we look at one particular quality indicator, the density of comments in open source software code. In a large-scale study of more than 5,000 projects, we find that active open source projects document their source code, and we find that the comment density is independent of team and project size, but not of project age. In future work, we intend to correlate comment density with project success or failure.", "author": [{"name": "Oliver Arafat", "affiliation": "Siemens AG, Munchen, Bayern, DE"}, {"name": "Dirk Riehle", "affiliation": "SAP Research, SAP Labs LLC, Palo Alto, CA, USA"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " Dirk Riehle. \"The Total Growth of Open Source.\" In Proceedings of Fourth Conference on Open Source Systems. Springer", "authors": ["Amit Deshp", "e"]}, {"title": "Diomidis Spinellis. \"A Tale of Four Kernels.\" In Proceedings of the 2008 International Conference on Software Engineering (ICSE '08). IEEE Press", "authors": []}, {"title": " Lawrence Votta. \"Does the Modern Code Inspection have Value?\" In Proceedings of the 17th IEEE International Conference on Software Maintenance (ICSM '01). IEEE Press", "authors": ["Harvey Siy"]}, {"title": "Carlo Daffara. \"How Many Stable and Active Libre Software Projects?\" See http://flossmetrics.org/news/11.", "authors": []}, {"title": " Jeff Offutt. \"The Adherence of Open Source Java Programmers to Standard Coding Practices.\" In Proceedings of the 6th IASTED International Conference Software Engineering and Applications. Page 193-198.", "authors": ["Mahmoud Elish"]}, {"title": " Dirk Riehle. \"Estimating Commit Sizes Efficiently.\" In Proceedings of OSS '09", "authors": ["Philipp Hofmann"]}, {"title": "Lutz Prechelt. \"An empirical comparison of C", "authors": []}, {"title": "David Parnas. \"Software Aging.\" In Proceedings of the 16th International Conference on Software Engineering (ICSE 1994). Page 279-287.", "authors": []}, {"title": " and Harall Gall. \"Do Code and Comments Co-Evolve? On the Relation Between Source Code and Comment Changes.\" In Proceedings of the 14th Working Conference on Reverse Engineering (WCRE 2007). Page 70-79.", "authors": ["Beat Fluri", " Michael Wursch"]}]},
{"doi": "10.1109/ICSE.2007.63", "title": "Path-Sensitive Inference of Function Precedence Protocols", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Protocols", "Computer bugs", "Computer science", "Error correction", "Automatic generation control", "Scalability", "Programming", "Data structures", "Libraries", "Sockets"], "abstract": "Function precedence protocols define ordering relations among function calls in a program. In some instances, precedence protocols are well-understood (e.g., a call to pthread_mutex_init must always be present on all program paths before a call to pthread_mutex_lock). Oftentimes, however, these protocols are neither well- documented, nor easily derived. As a result, protocol violations can lead to subtle errors that are difficult to identify and correct. In this paper, we present CHRONICLER, a tool that applies scalable inter-procedural path-sensitive static analysis to automatically infer accurate function precedence protocols. Chronicler computes precedence relations based on a program's control-flow structure, integrates these relations into a repository, and analyzes them using sequence mining techniques to generate a collection of feasible precedence protocols. Deviations from these protocols found in the program are tagged as violations, and represent potential sources of bugs. We demonstrate CHRONICLER's effectiveness by deriving protocols for a collection of benchmarks ranging in size from 66 K to 2 M lines of code. Our results not only confirm the existence of bugs in these programs due to precedence protocol violations, but also highlight the importance of path sensitivity on accuracy and scalability.", "author": [{"name": "Murali Krishna Ramanathan", "affiliation": "Department of Computer Science, Purdue University, USA"}, {"name": "Ananth Grama", "affiliation": "Department of Computer Science, Purdue University, USA"}, {"name": "Suresh Jagannathan", "affiliation": "Department of Computer Science, Purdue University, USA"}], "time": "May 2007", "citationCount": "49", "references": []},
{"doi": "10.1109/ICSE.2009.5070527", "title": "Learning operational requirements from goal models", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Educational institutions", "Logic", "Learning systems", "Phase detection", "Programming", "Documentation", "Laboratories", "Safety"], "abstract": "Goal-oriented methods have increasingly been recognised as an effective means for eliciting, elaborating, analysing and specifying software requirements. A key activity in these approaches is the elaboration of a correct and complete set of opertional requirements, in the form of pre- and trigger-conditions, that guarantee the system goals. Few existing approaches provide support for this crucial task and mainly rely on significant effort and expertise of the engineer. In this paper we propose a tool-based framework that combines model checking, inductive learning and scenarios for elaborating operational requirements from goal models. This is an iterative process that requires the engineer to identify positive and negative scenarios from counterexamples to the goals, generated using model checking, and to select operational requirements from suggestions computed by inductive learning.", "author": [{"name": "Dalal Alrajeh", "affiliation": "Department of Computing, Imperial College London, UK"}, {"name": "Jeff Kramer", "affiliation": "Department of Computing, Imperial College London, UK"}, {"name": "Alessandra Russo", "affiliation": "Department of Computing, Imperial College London, UK"}, {"name": "Sebastin Uchitel", "affiliation": "Department of Computing, Imperial College London, UK"}], "time": "May 2009", "citationCount": "34", "references": [{"title": " \"Extracting requirements from scenarios with ILP\"", "authors": ["D. Alrajeh", " O. Ray", " A. Russo ", " S. Uchitel"]}, {"title": " \"Deriving non-zeno behavior models from goal models using ILP\"", "authors": ["D. Alrajeh", " A. Russo ", " S. Uchitel"]}, {"title": " \"SAT based abstraction-refinement using ILP and machine learning techniques\"", "authors": ["E. Clarke", " A. Gupta", " J. Kukula ", " O. Strichman"]}, {"title": " \"Documentation for safety critical software\"", "authors": ["P.J. Courtois ", " D. L. Parnas"]}, {"title": " \"Generating annotated behavior models from end-user scenarios\"", "authors": ["C. Damas", " P. Dupont", " B. Lambeau ", " A. van Lamsweerde"]}, {"title": " \"Scenarios goals and state machines: a win-win partnership for model synthesis\"", "authors": ["C. Damas", " B. Lambeau ", " A. van Lamsweerde"]}, {"title": " \"Goal-directed requirements acquisition\"", "authors": ["A. Dardenne", " A. van Lamsweerde ", " S. Fickas"]}, {"title": " \"Formal refinement patterns for goal-driven requirements elaboration\"", "authors": ["R. Darimont ", " A. van Lamsweerde"]}, {"title": " \"The london ambulance system case study\"", "authors": ["A. Finkelstein"]}, {"title": " \"Fluent model checking for event-based systems\"", "authors": ["D. Giannakopoulou ", " J. Magee"]}, {"title": " \"Conic: An integrated approach to distributed computer control systems\"", "authors": ["J. Kramer", " J. Magee ", " M. Sloman"]}, {"title": " \"Inferring declarative requirements specifications from operational scenarios\"", "authors": ["A. Van Lamsweerde ", " L. Willemet"]}, {"title": " \"Goal-oriented elaboration of requirements for a safety injection control system\"", "authors": ["E. Letier"]}, {"title": " \"Deriving event-based transition systems from goal-oriented requirements models\"", "authors": ["E. Letier", " J. Kramer", " J. Magee ", " S. Uchitel"]}, {"title": " \"Deriving operational software specifications from system goals\"", "authors": ["E. Letier ", " A. Van Lamsweerde"]}, {"title": " \"Some alternative formulation of event calculus\"", "authors": ["R. Miller ", " M. Shanahan"]}, {"title": " \"Representing and using nonfunctional requirements: A process-oriented approach\"", "authors": ["J. Mylopoulos", " L. Chung ", " B. A. Nixon"]}, {"title": " \"Using abduction for induction of normal logic programs\"", "authors": ["O. Ray"]}, {"title": " \"An abductive approach for analysing event-based requirements specifications\"", "authors": ["A. Russo", " R. Miller", " B. Nuseibeh ", " J. Kramer"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070981", "title": "Better abstractions for reusable components & architectures", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Connectors", "Unified modeling language", "Sockets", "Plugs", "Model driven engineering", "Throughput", "Security", "Computer architecture", "Software architecture", "Logic"], "abstract": "Software architecture (SA) is a crucial component of Model Driven Engineering (MDE), since it eases the communication and reuse of designs and components. However, existing languages (e.g., UML, AADL, SysML) are lacking many needed features. In particular, they provide rudimentary support for connectors, a first-class element in the components and connectors (C&C) architectural view and one of the most reusable architectural elements. This is unfortunate, since the difficult properties that need to be guaranteed for complex systems are mainly the non-functional properties, like throughput, security and dependability, which are greatly influenced by the employed connectors. This work reviews the basic abstractions of the C&C view of SA and examines extra architectural elements which can support the detailed, explicit and separate description of behaviour, interaction and control logic.", "author": [{"name": "Christos Kloukinas", "affiliation": "Department of Computing, City University of London, Northampton, UK"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.39", "title": "GoalDebug: A Spreadsheet Debugger for End Users", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Programming profession", "Error correction", "Performance evaluation", "Automatic testing", "Fault diagnosis", "NIST", "Software debugging", "Software testing"], "abstract": "We present a spreadsheet debugger targeted at end users. Whenever the computed output of a cell is incorrect, the user can supply an expected value for a cell, which is employed by the system to generate a list of change suggestions for formulas that, when applied, would result in the user-specified output. The change suggestions are ranked using a set of heuristics. In previous work, we had presented the system as a proof of concept. In this paper, we describe a systematic evaluation of the effectiveness of inferred change suggestions and the employed ranking heuristics. Based on the results of the evaluation we have extended both, the change inference process and the ranking of suggestions. An evaluation of the improved system shows that change inference process and the ranking heuristics have both been substantially improved and that the system performs effectively.", "author": [{"name": "Robin Abraham", "affiliation": "School of EECS, Oregon State University, USA"}, {"name": "Martin Erwig", "affiliation": "School of EECS, Oregon State University, USA"}], "time": "May 2007", "citationCount": "41", "references": [{"title": " and G. Rothermel. Testing Homogeneous Spreadsheet Grids with the \"What You See Is What You Test\" Methodology. IEEE Transactions on Software Engineering", "authors": ["M. M. Burnett", " A. Sheretov", " B. Ren"]}]},
{"doi": "10.1109/ICSE.2009.5070528", "title": "Complete and accurate clone detection in graph-based models", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Cloning", "Mathematical model", "Model driven engineering", "Large-scale systems", "Detection algorithms", "Software tools", "Costs", "Scalability", "Software design", "Aerospace electronics"], "abstract": "Model-Driven Engineering (MDE) has become an important development framework for many large-scale software. Previous research has reported that as in traditional code-based development, cloning also occurs in MDE. However, there has been little work on clone detection in models with the limitations on detection precision and completeness. This paper presents ModelCD, a novel clone detection tool for Matlab/Simulink models, that is able to efficiently and accurately detect both exactly matched and approximate model clones. The core of ModelCD is two novel graph-based clone detection algorithms that are able to systematically and incrementally discover clones with a high degree of completeness, accuracy, and scalability. We have conducted an empirical evaluation with various experimental studies on many real-world systems to demonstrate the usefulness of our approach and to compare the performance of ModelCD with existing tools.", "author": [{"name": "Nam H. Pham", "affiliation": "Electrical and Computer Engineering Department, Iowa State University, USA"}, {"name": "Hoan Anh Nguyen", "affiliation": "Electrical and Computer Engineering Department, Iowa State University"}, {"name": "Tung Thanh Nguyen", "affiliation": "Electrical and Computer Engineering Department, Iowa State University"}, {"name": "Jafar M. Al-Kofahi", "affiliation": "Electrical and Computer Engineering Department, Iowa State University, USA"}, {"name": "Tien N. Nguyen", "affiliation": "Electrical and Computer Engineering Department, Iowa State University, USA"}], "time": "May 2009", "citationCount": "47", "references": [{"title": " \"Parameterized pattern matching: algorithms and applications\"", "authors": ["B. S. Baker"]}, {"title": " \"Parameterized duplication in strings: Algorithms and an application to software maintenance\"", "authors": ["B.-S. Baker"]}, {"title": " \"Clone detection using abstract syntax trees\"", "authors": ["I. D. Baxter", " A. Yahin", " L. Moura", " M. Sant\u2019 Anna ", " L. Bier"]}, {"title": " \"Comparison and Evaluation of Clone Detection Tools\"", "authors": ["S. Bellon", " R. Koschke", " G. \u00c2ntoniol", " J. Krinke ", " E. Merlo"]}, {"title": " \"Algorithm 457: Finding all cliques of an undirected graph\"", "authors": ["C. Bron ", " J. Kerbosch"]}, {"title": " \"Clone detection in automotive model-based development\"", "authors": ["F. Deissenboeck", " B. Hummel", " E. J\u00fcrgens", " B. Sch\u00e4tz", " S. Wagner", " J.- F. Girard", " ."]}, {"title": " \"Clone detection via structural abstraction\"", "authors": ["W. Evans", " C. Fraser ", " F. Ma"]}, {"title": " \"Scalable detection of semantic clones\"", "authors": ["M. Gabel", " L. Jiang ", " Z. Su"]}, {"title": " \"Deckard: Scalable and accurate tree-based detection of code clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"Identifying redundancy in source code using fingerprints\" in CASCON'93", "authors": ["J. H. Johnson"]}, {"title": " \"CCFinder: a multilinguistic token-based code clone detection system for large-scale source code\"", "authors": ["T. Kamiya", " S. Kusumoto ", " K. Inoue"]}, {"title": " \"Using slicing to identify duplication in source code\" in SAS'01", "authors": ["R. Komondoor ", " S. Horwitz"]}, {"title": " \"Pattern matching for clone and concept detection\"", "authors": ["K. A. Kontogiannis", " R. Demori", " E. Merlo", " M. Galler ", " M. Bernstein"]}, {"title": " \"Finding frequent patterns in a large sparse graph\" in Data Mining and Knowledge Discovery", "authors": ["M. Kuramochi ", " G. Karypis"]}, {"title": " \"CP-Miner: Finding copy-paste and related bugs in large-scale software code\"", "authors": ["Z. Li", " S. Lu", " S. Myagmar ", " Y. Zhou"]}, {"title": " \"Detecting duplications in sequence diagrams based on suffix trees\"", "authors": ["H. Liu", " Z. Ma", " L. Zhang ", " W. Shao"]}, {"title": " \"Experiment on the automatic detection of function clones in a software system using metrics\"", "authors": ["J. Mayr", "", " C. Leblanc ", " E. Merlo"]}, {"title": " \"A generic approach to supporting diagram differencing and merging for collaborative design\" in ASE'05", "authors": ["A. Mehra", " J. Grundy ", " J. Hosking"]}, {"title": " \"Matching and merging of statecharts specifications\"", "authors": ["S. Nejati", " M. Sabetzadeh", " M. Chechik", " S. Easterbrook ", " P. Zave"]}, {"title": " \"Accurate and Efficient Structural Characteristic Feature Extraction for Clone Detection\" in FASE'09", "authors": ["H.A. Nguyen", " T.T. Nguyen", " N.H. Pham", " J.M. Al-Kofahi ", " T.N. Nguyen"]}, {"title": " \"Differences between versions of UML diagrams\" in FSE'03", "authors": ["D. Ohst", " M. Welle ", " U. Kelter"]}, {"title": " \"The graph isomorphism disease\"", "authors": ["R. Read ", " D. Corneil"]}, {"title": " \"Refactoring the scenario specification: A message sequence chart approach\"", "authors": ["S. Ren", " K. Rui ", " G. Butler"]}, {"title": " \"Clone detection in source code by frequent itemset techniques\"", "authors": ["V. Wahler", " D. Seipel", " J. Gudenberg ", " G. Fischer"]}, {"title": " \"UMLDiff: an algorithm for object-oriented design differencing\" in ASE'05", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Towards automatic model synchronization from model transformations\" in ASE'07", "authors": ["Y. Xiong", " D. Liu", " Z. Hu", " H. Zhao", " M. Takeichi ", " H. Mei"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070982", "title": "Automated substring hole analysis", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Data analysis", "System testing", "Software measurement", "Software testing", "Humans", "Software systems", "Information analysis", "Aggregates", "Association rules", "Radio access networks"], "abstract": "Code coverage is a common measure for quantitatively assessing the quality of software testing. Code coverage indicates the fraction of code that is actually executed by tests in a test suite. While code coverage has been around since the 60's there has been little work on how to effectively analyze code coverage data measured in system tests. Raw data of this magnitude, containing millions of data records, is often impossible for a human user to comprehend and analyze. Even drill-down capabilities that enable looking at different granularities starting with directories and going through files to lines of source code are not enough. Substring hole analysis is a novel method for viewing the coverage of huge data sets. We have implemented a tool that enables automatic substring hole analysis. We used this tool to analyze coverage data of several large and complex IBM software systems. The tool identified coverage holes that suggested interesting scenarios that were untested.", "author": [{"name": "Yoram Adler", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Eitan Farchi", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Moshe Klausner", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Dan Pelleg", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Orna Raz", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Moran Shochat", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Shmuel Ur", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}, {"name": "Aviad Zlotnick", "affiliation": "IBM Haifa Research Laboratory, Haifa, Israel"}], "time": "May 2009", "citationCount": "2", "references": [{"title": " \"Fast Algorithms for Mining Association Rules\"", "authors": ["R. Agrawal ", " R. Srikant"]}, {"title": "Kiczales et al. \"Aspect-Oriented Programming\". Proceedings of the European Conference on Object-Oriented Programming", "authors": []}, {"title": " Shmuel Ur and Aviad Zlotnick. \"Advanced Code Coverage Analysis Using Substring Holes\". 2009. Submitted.", "authors": ["Yoram Adler", " Eitan Farchi", " Moshe Klausner", " Dan Pelleg", " Orna Raz", " Moran Shochat"]}]},
{"doi": "10.1109/ICSE.2007.10", "title": "A Technique for Enabling and Supporting Debugging of Field Failures", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Computer crashes", "Software debugging", "Software quality", "Application software", "Software prototyping", "Software tools", "Educational institutions", "Software testing", "Pressing", "Quality assurance"], "abstract": "It is difficult to fully assess the quality of software in- house, outside the actual time and context in which it will execute after deployment. As a result, it is common for software to manifest field failures, failures that occur on user machines due to untested behavior. Field failures are typically difficult to recreate and investigate on developer platforms, and existing techniques based on crash reporting provide only limited support for this task. In this paper, we present a technique for recording, reproducing, and minimizing failing executions that enables and supports in- house debugging of field failures. We also present a tool that implements our technique and an empirical study that evaluates the technique on a widely used e-mail client.", "author": [{"name": "James Clause", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}, {"name": "Alessandro Orso", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}], "time": "May 2007", "citationCount": "53", "references": []},
{"doi": "10.1109/ICSE.2009.5070529", "title": "How we refactor, and how we know it", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Testing", "History", "Frequency", "Performance evaluation", "Books", "Catalogs", "Computer bugs", "Software debugging"], "abstract": "Much of what we know about how programmers refactor in the wild is based on studies that examine just a few software projects. Researchers have rarely taken the time to replicate these studies in other contexts or to examine the assumptions on which they are based. To help put refactoring research on a sound scientific basis, we draw conclusions using four data sets spanning more than 13 000 developers, 240 000 tool-assisted refactorings, 2500 developer hours, and 3400 version control commits. Using these data, we cast doubt on several previously stated assumptions about how programmers refactor, while validating others. For example, we find that programmers frequently do not indicate refactoring activity in commit logs, which contradicts assumptions made by several previous researchers. In contrast, we were able to confirm the assumption that programmers do frequently intersperse refactoring with other program changes. By confirming assumptions and replicating studies made by other researchers, we can have greater confidence that those researchers' conclusions are generalizable.", "author": [{"name": "Emerson Murphy-Hill", "affiliation": "Portland State University, USA"}, {"name": "Chris Parnin", "affiliation": "Georgia Institute of Technology, USA"}, {"name": "Andrew P. Black", "affiliation": "Portland State University, USA"}], "time": "May 2009", "citationCount": "86", "references": [{"title": " \"High-impact refactoring based on architecture violations\"", "authors": ["F. Bourqun ", " R. K. Keller"]}, {"title": " \"Trends in Java code changes: the key to identification of refactorings?\"", "authors": ["S. Counsell", " Y. Hassoun", " R. Johnson", " K. Mannock ", " E. Mendes"]}, {"title": " \"Common refactorings a dependency graph and some code smells: an empirical study of Java OSS\"", "authors": ["S. Counsell", " Y. Hassoun", " G. Loizou ", " R. Najjar"]}, {"title": " \"Automated detection of refactorings in evolving components\" in ECOOP", "authors": ["D. Dig", " C. Comertoglu", " D. Marinov ", " R. Johnson"]}, {"title": " \"Refactoring: Improving the Design of Existing Code.\" in ", "authors": ["M. Fowler"]}, {"title": " \"What do large commits tell us?: A taxonomical study of large commits\"", "authors": ["A. Hindle", " D. M. German ", " R. Holt"]}, {"title": " \"How are Java software developers using the Eclipse IDE?\"", "authors": ["G. C. Murphy", " M. Kersten ", " L. Findlater"]}, {"title": " \"High velocity refactorings in Eclipse\"", "authors": ["E. Murphy-Hill ", " A. P. Black"]}, {"title": " \"Breaking the barriers to successful refactoring: Observations and tools for extract method\"", "authors": ["E. Murphy-Hill ", " A. P. Black"]}, {"title": " \"Refactoring tools: Fitness for purpose\"", "authors": ["E. Murphy-Hill ", " A. P. Black"]}, {"title": " \"Straightening spaghetti-code with refactoring?\" in Software Engineering Research and Practice", "authors": ["M. Pizka"]}, {"title": " \"On the relation of refactorings and software defect prediction\"", "authors": ["J. Ratzinger", " T. Sigmund ", " H. C. Gall"]}, {"title": " \"Mining a change-based software repository\"", "authors": ["R. Robbes"]}, {"title": " \"Refactoring-does it improve software quality?\"", "authors": ["K. Stroggylos ", " D. Spinellis"]}, {"title": "\"Usage Data Collector Results\"", "authors": []}, {"title": " \"Systematic evaluation of design choices for software development tools\"", "authors": ["M. A. Toleman ", " J. Welsh"]}, {"title": " \"Are refactorings less error-prone than other changes?\"", "authors": ["P. Wei\u00dfgerber ", " S. Diehl"]}, {"title": " \"Refactoring practice: How it is and how it should be supported\u2014an Eclipse case study\"", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Preprocessing CVS data for fine-grained analysis\"", "authors": ["T. Zimmermann ", " P. Wei\u00dfgerber"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070983", "title": "Integrating sustainability in decision-making processes: A modelling strategy", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Decision making", "Data analysis", "System testing", "Software measurement", "Software testing", "Humans", "Software systems", "Information analysis", "Aggregates", "Association rules"], "abstract": "One of the most difficult problems that humanity currently faces is the sustainable development of our society, i.e. how to meet the needs of the present without compromising the ability of future generations to meet their own needs. Solving this challenge requires a multidisciplinary approach where researchers with different backgrounds combine their efforts. As software engineers, we can contribute to these efforts by offering existing software requirements modeling and analysis techniques as a means to integrate sustainability requirements in decision-making processes. In this paper, we use a popular language for modeling early requirements as a way to visualize the impact of alternative options on sustainability goals and to analyze the conflicts between sustainability and other problem-specific objectives. We apply this idea to the decision-making activities pertaining to the organization of the ICSE'09 conference itself.", "author": [{"name": "Jordi Cabot", "affiliation": "Computer Science Department, University of Toronto, Toronto, Canada"}, {"name": "Steve Easterbrook", "affiliation": "Computer Science Department, University of Toronto, Toronto, Canada"}, {"name": "Jennifer Horkoff", "affiliation": "Computer Science Department, University of Toronto, Toronto, Canada"}, {"name": "Lysanne Lessard", "affiliation": "Computer Science Department, University of Toronto, Toronto, Canada"}, {"name": "Sotirios Liaskos", "affiliation": "Computer Science Department, University of Toronto, Toronto, Canada"}, {"name": "Jose-Norberto Mazon", "affiliation": "Lucentia Research Group, University of Alicante, Alicante, Spain"}], "time": "May 2009", "citationCount": "24", "references": [{"title": " \"Defining the concept of sustainability - a matter of systems thinking and applied systems analysis", "authors": ["H. Sverdrup ", " M. G. E. Svensson"]}, {"title": " \"Footprints for sustainability: the next steps", "authors": ["M. Wackernagel ", " J. D. Yount"]}, {"title": " \"Towards modeling and reasoning support for early-phase requirements engineering", "authors": ["E. S. K. Yu"]}, {"title": " \"Sustainability tradeoffs in cropping systems using evolutionary algorithms", "authors": ["P. De Voil", " W. Rossing", " ", " G. Hammera"]}, {"title": " \"Simulation in the analysis of sustainable development: Goals", "authors": ["A. Kurkovsky"]}, {"title": " \"Conceptual modeling in a meta-model of sustainability indicators", "authors": ["A. Tolon-Becerra ", " F. Bienvenido"]}, {"title": " \"Where do goals come from: the underlying principles of goal-oriented requirements engineering", "authors": ["G. Regev ", " A. Wegmann"]}]},
{"doi": "10.1109/ICSE.2007.65", "title": "POLUS: A POwerful Live Updating System", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Application software", "Software maintenance", "Web server", "Software tools", "Usability", "Runtime", "Measurement", "Degradation", "Computer bugs", "Software engineering"], "abstract": "This paper presents POLUS, a software maintenance tool capable of iteratively evolving running software into newer versions. POLUS's primary goal is to increase the dependability of contemporary server software, which is frequently disrupted either by external attacks or by scheduled upgrades. To render POLUS both practical and powerful, we design and implement POLUS aiming to retain backward binary compatibility, support for multithreaded software and recover already tainted state of running software, yet with good usability and very low runtime overhead. To demonstrate the applicability of POLUS, we report our experience in using POLUS to dynamically update three prevalent server applications: vsftpd, sshd and apache HTTP server. Performance measurements show that POLUS incurs negligible runtime overhead: a less than 1% performance degradation (but 5% for one case). The time to apply an update is also minimal.", "author": [{"name": "Haibo Chen", "affiliation": "Parallel Processing Institute, Fudan University, Shanghai, China"}, {"name": "Jie Yu", "affiliation": "Parallel Processing Institute, Fudan University, Shanghai, China"}, {"name": "Rong Chen", "affiliation": "Parallel Processing Institute, Fudan University, Shanghai, China"}, {"name": "Binyu Zang", "affiliation": "Parallel Processing Institute, Fudan University, Shanghai, China"}, {"name": "Pen-Chung Yew", "affiliation": "Department of Computer Science and Engineering, University of Minnesota, Twin-Cities, Minneapolis, MN, USA"}], "time": "May 2007", "citationCount": "56", "references": []},
{"doi": "10.1109/ICSE.2009.5070530", "title": "The secret life of bugs: Going past the errors and omissions in software repositories", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Computer bugs", "History", "Programming", "Software debugging", "Data mining", "Navigation", "Automation", "Software development management", "Productivity", "Spatial databases"], "abstract": "Every bug has a story behind it. The people that discover and resolve it need to coordinate, to get information from documents, tools, or other people, and to navigate through issues of accountability, ownership, and organizational structure. This paper reports on a field study of coordination activities around bug fixing that used a combination of case study research and a survey of software professionals. Results show that the histories of even simple bugs are strongly dependent on social, organizational, and technical knowledge that cannot be solely extracted through automation of electronic repositories, and that such automation provides incomplete and often erroneous accounts of coordination. The paper uses rich bug histories and survey results to identify common bug fixing coordination patterns and to provide implications for tool designers and researchers of coordination in software development.", "author": [{"name": "Jorge Aranda", "affiliation": "Department of Computer Science, University of Toronto, Toronto, ONT, Canada"}, {"name": "Gina Venolia", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}], "time": "May 2009", "citationCount": "101", "references": [{"title": " \"Who should fix this bug?\"", "authors": ["J. Anvik", " L. Hiew ", " G. C. Murphy"]}, {"title": " \"Distributed cognition in software engineering research: Can it be made to work?\"", "authors": ["J. Ar", "a "]}, {"title": " \"What makes a good bug report?\"", "authors": ["N. Bettenburg", " S. Just", " A. Schroter", " C. Weiss", " R. Premraj ", " T. Zimmermann"]}, {"title": " \"Identification of coordination requirements: Implications for the design of collaboration and awareness tools\"", "authors": ["M. Cataldo", " P. A. Wagstrom", " J. D. Herbsleb ", " K. M. Carley"]}, {"title": " \"The social dynamics of pair programming\"", "authors": ["J. Chong ", " T. Hurlbutt"]}, {"title": " \"A field study of the software design process for large systems\"", "authors": ["B. Curtis", " H. Krasner ", " N. Iscoe"]}, {"title": " \"An empirical study of software developers' management of dependencies and changes\"", "authors": ["C. R. B. de Souza ", " D. F. Redmiles"]}, {"title": " \"Management of interdependencies in collaborative software development\"", "authors": ["C. R. B. de Souza", " D. F. Redmiles", " G. Mark", " J. Penix ", " M. Sierhuis"]}, {"title": " \"Splitting the organization and integrating the code: Conway's Law revisited\"", "authors": ["J. D. Herbsleb ", " R. E. Grinter"]}, {"title": " \"An empirical study of speed and communication in globally distributed software development\"", "authors": ["J. D. Herbsleb ", " A. Mockus"]}, {"title": " \"The importance of trust in software engineers' assessment and choice of information sources\"", "authors": ["M. Hertzum"]}, {"title": " \"Information needs in collocated software development teams\"", "authors": ["A. J. Ko", " R. DeLine ", " G. Venolia"]}, {"title": " \"Coordination in software development\"", "authors": ["R. E. Kraut ", " L. A. Streeter"]}, {"title": " \"Maintaining mental models: A study of developer work habits\"", "authors": ["T. D. LaToza", " G. Venolia ", " R. DeLine"]}, {"title": " \"How software engineers use documentation: The state of the practice\"", "authors": ["T. C. Lethbridge", " J. Singer ", " A. Forward"]}, {"title": " \"People organizations and process improvement\"", "authors": ["D. Perry", " N. A. Staudenmayer ", " L. G. Votta"]}, {"title": " \"An examination of software engineering work practices\"", "authors": ["J. Singer", " T. Lethbridge", " N. Vinson ", " N. Anquetil"]}, {"title": " \"Using software repositories to investigate socio-technical congruence in development projects\"", "authors": ["G. Valetto", " M. Hel", "er", " K. Ehrlich", " S. Chulani", " M. Wegman ", " C. Williams"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070984", "title": "Configuration and adaptation of binary software components", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Open source software", "Runtime", "Logic design", "History", "Encoding", "Laboratories", "Software tools", "Java", "Data structures", "High level languages"], "abstract": "Existing black-box adaptation techniques are insufficiently powerful for a large class of real-world tasks. Meanwhile, white-box techniques are language-specific and overly invasive. We argue for the inclusion of special-purpose adaptation features in a configuration language, and outline the benefits of targetting binary representations of software. We introduce Cake, a configuration language with adaptation features, and show how its design is being shaped by two case studies.", "author": [{"name": "Stephen Kell", "affiliation": "Computer Laboratory, University of Cambridge, Cambridge, UK"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/ICSE.2007.81", "title": "Supporting Generic Sketching-Based Input of Diagrams in a Domain-Specific Visual Language Meta-Tool", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["User interfaces", "Software engineering", "Unified modeling language", "Computer architecture", "Software design", "Application software", "Design engineering", "Collaborative tools", "Software tools", "Collaborative work"], "abstract": "Software engineers often use hand-drawn diagrams as preliminary design artefacts and as annotations during reviews. We describe the addition of sketching support to a domain-specific visual language meta-tool enabling a wide range of diagram-based design tools to leverage this human-centric interaction support. Our approach allows visual design tools generated from high-level specifications to incorporate a range of sketching-based functionality including both eager and lazy recognition, moving from sketch to formalized content and back and using sketches for secondary annotation and collaborative design review. We illustrate the use of our sketching extension for an example domain-specific visual design tool and describe the architecture and implementation of the extension as a plug-in for our Eclipse-based meta-tool.", "author": [{"name": "John Grundy", "affiliation": "Department of Electrical and Computer Engineering and Department of Computer Science, University of Auckland, Auckland, New Zealand"}, {"name": "John Hosking", "affiliation": "Department of Electrical and Computer Engineering, University of Auckland, Auckland, New Zealand"}], "time": "May 2007", "citationCount": "18", "references": [{"title": " \"Ad-hoc Collaborative Document Annotation on a Tablet PC\"", "authors": ["A. Huang", " T. W. Doeppner", " U. C. Readers"]}]},
{"doi": "10.1109/ICSE.2009.5070531", "title": "Discovering and representing systematic code changes", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Logic", "Computer science", "Pervasive computing", "Tree graphs", "Flow graphs", "Packaging", "Writing", "Software tools", "Computer bugs"], "abstract": "Software engineers often inspect program differences when reviewing others' code changes, when writing check-in comments, or when determining why a program behaves differently from expected behavior after modification. Program differencing tools that support these tasks are limited in their ability to group related code changes or to detect potential inconsistencies in those changes. To overcome these limitations and to complement existing approaches, we built Logical Structural Diff (LSdiff), a tool that infers systematic structural differences as logic rules. LSdiff notes anomalies from systematic changes as exceptions to the logic rules. We conducted a focus group study with professional software engineers in a large E-commerce company; we also compared LSdiff's results with textual differences and with structural differences without rules. Our evaluation suggests that LSdiff complements existing differencing tools by grouping code changes that form systematic change patterns regardless of their distribution throughout the code, and its ability to discover anomalies shows promise in detecting inconsistent changes.", "author": [{"name": "Miryung Kim", "affiliation": "Electrical and Computer Engineering, University of Texas, Austin, Austin, TX, USA"}, {"name": "David Notkin", "affiliation": "Computer Science & Engineering, University of Washington, Seattle, WA, USA"}], "time": "May 2009", "citationCount": "82", "references": [{"title": " \"A differencing algorithm for object-oriented programs\"", "authors": ["T. Apiwattanapong", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Set Partitioning: A Survey\"", "authors": ["E. Balas ", " M. Padberg"]}, {"title": " \"Aligning development tools with the way programmers think about code changes\"", "authors": ["M. Boshernitsan", " S. L. Graham ", " M. A. Hearst"]}, {"title": " \"Crisp: A debugging tool for java programs\"", "authors": ["O. C. Chesley", " X. Ren ", " B. G. Ryder"]}, {"title": " \"The txl source transformation language\"", "authors": ["J. R. Cordy"]}, {"title": " \"Inferring structural patterns for concern traceability in evolving software\"", "authors": ["B. Dagenais", " S. Breu", " F. W. Warr ", " M. P. Robillard"]}, {"title": " \"Recommending adaptive changes for framework evolution\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Defining and continuous checking of structural program dependencies\"", "authors": ["M. Eichberg", " S. Kloppenburg", " K. Klose ", " M. Mezini"]}, {"title": " \"A rule-based language for programming software updates\"", "authors": ["M. Erwig ", " D. Ren"]}, {"title": " \"Detection of logical coupling based on product release history\"", "authors": ["H. Gall", " K. Hajek ", " M. Jazayeri"]}, {"title": " \"Codequest: Scalable source code queries with datalog\"", "authors": ["E. Hajiyev", " M. Verbaere ", " O. de Moor"]}, {"title": " \"Structural manipulations of software architecture using tarski relational algebra\"", "authors": ["R. C. Holt"]}, {"title": " \"Navigating and querying code without getting lost\"", "authors": ["D. Janzen ", " K. D. Volder"]}, {"title": " \"A survey of automated code-level aspect mining techniques\"", "authors": ["A. Kellens", " K. Mens ", " P. Tonella"]}, {"title": " \"Aspect-oriented programming\"", "authors": ["G. Kiczales", " J. Lamping", " A. Menhdhekar", " C. Maeda", " C. Lopes", " J.-M. Loingtier", " ."]}, {"title": " \"Program element matching for multi-version program analyses\"", "authors": ["M. Kim ", " D. Notkin"]}, {"title": " \"Automatic inference of structural changes for matching across program versions\"", "authors": ["M. Kim", " D. Notkin ", " D. Grossman"]}, {"title": " \"An empirical study of code clone genealogies\"", "authors": ["M. Kim", " V. Sazawal", " D. Notkin ", " G. C. Murphy"]}, {"title": " \"Information needs in collocated software development teams\"", "authors": ["A. J. Ko", " R. DeLine ", " G. Venolia"]}, {"title": " \"Learning the structure of Markov logic networks\"", "authors": ["S. Kok ", " P. Domingos"]}, {"title": " \"Maintaining software through intentional source-code views\"", "authors": ["K. Mens", " T. Mens ", " M. Wermelinger"]}, {"title": " \"Documenting and automating collateral evolutions in linux device drivers\"", "authors": ["Y. Padioleau", " J. Lawall", " R. R. Hansen ", " G. Muller"]}, {"title": " \"Chianti: A tool for change impact analysis of Java programs\"", "authors": ["X. Ren", " F. Shah", " F. Tip", " B. Ryder ", " O. Chesley"]}, {"title": " \"Mining framework usage changes from instantiation code\"", "authors": ["T. Sch\u00e4fer", " J. Jonas ", " M. Mezini"]}, {"title": " \"N degrees of separation: multi-dimensional separation of concerns\"", "authors": ["P. Tarr", " H. Ossher", " W. Harrison", " J. Stanley ", " M. Sutton"]}, {"title": " \"UMLDiff: an algorithm for object-oriented design differencing\"", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Identifying syntactic differences between two programs\"", "authors": ["W. Yang"]}, {"title": " \"Predicting source code changes by mining change history\"", "authors": ["A. T. T. Ying", " G. C. Murphy", " R. Ng ", " M. Chu-Carroll"]}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " P. Weisgerber", " S. Diehl ", " A. Zeller"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070985", "title": "Increasing usability of preprocessing for feature management in product lines with queries", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Usability", "Software development management", "Programming profession", "Instruments", "Testing", "Displays", "Computer languages", "Automatic control", "Spatial databases", "Engines"], "abstract": "Managing features that have fine-grained impact on base programs is a challenging task in software product line development. Despite well-known problems, preprocessing (e.g., cpp) is often used to handle features by including/excluding variant code to/from a base program. In this paper, we show how some of common preprocessing problems can be alleviated with a query-based environment that assists programmers in feature analysis. We discuss limitations of our solution and reasons why they are difficult to lift in the frame of preprocessors.", "author": [{"name": "Stan Jarzabek", "affiliation": "School of Computing, National University of Singapore, Singapore"}, {"name": "Hongyu Zhang", "affiliation": "School of Software, Tsinghua University, Beijing, China"}, {"name": "Youpeng Lee", "affiliation": "School of Software, Tsinghua University, Beijing, China"}, {"name": "Yinxing Xue", "affiliation": "School of Computing, National University of Singapore, Singapore"}, {"name": "Naveed Shaikh", "affiliation": "School of Computing, National University of Singapore, Singapore"}], "time": "May 2009", "citationCount": "2", "references": [{"title": " G. \"Aspect Refinement - Unifying AOP and Stepwise Refinement.\" Journal of Object Technology", "authors": ["Apel", " S.", " K\u00e4stner", " C.", " Leich", " T. ", " Saake"]}, {"title": " A. \"Scaling Step-Wise Refinement", "authors": ["Batory", " D.", " Sarvela", " J. N. ", " Rauschmayer"]}, {"title": " J. \"Experiences in Software Product Families: Problems and Issues during Product Derivation", "authors": ["Deelstra", " S.", " Sinnema", " M. ", " Bosch"]}, {"title": " S. \"Design of Flexible Static Program Analyzers with PQL", "authors": ["Jarzabek"]}, {"title": " T. \"Configuring designs for reuse", "authors": ["Karhinen", " A.", " Ran", " A. ", " Tallgren"]}, {"title": " M. \"Granularity in Software Product Lines", "authors": ["K\u00e4stner", " C.", " Apel", " S. ", " Kuhlemann"]}, {"title": " G. \"#ifdef Considered Harmful", "authors": ["Spencer", " H. ", " Collyer"]}]},
{"doi": "10.1109/ICSE.2007.38", "title": "Fixing Inconsistencies in UML Design Models", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Unified modeling language", "Displays", "Streaming media", "Programming", "Power system modeling", "Computer bugs", "Best practices", "Software engineering", "Motion pictures", "Scalability"], "abstract": "Changes are inevitable during software development and so are their unintentional side effects. The focus of this paper is on UML design models, where unintentional side effects lead to inconsistencies. We demonstrate that a tool can assist the designer in discovering unintentional side effects, locating choices for fixing inconsistencies, and then in changing the design model. Our techniques are \"on-line, \" applied as the designer works, and non-intrusive, without overwhelming the designer. This is a significant improvement over the state-of-the-art. Our tool is fully integrated with the design tool IBM Rational Rosetrade. It was empirically evaluated on 48 case studies.", "author": [{"name": "Alexander Egyed", "affiliation": "Teknowledge Corporation, Marina Del Rey, CA, USA"}], "time": "May 2007", "citationCount": "75", "references": [{"title": " R.: \"Tolerating Inconsistency", "authors": ["Balzer"]}, {"title": " L.: \"Impact Analysis and Change Management of UML Models ", "authors": ["Bri", "", " L. C.", " Labiche", " Y.", " ", " O'Sullivan"]}, {"title": " K.: \"Java MPEG Player", "authors": ["Dohyung"]}, {"title": " A.: \"Instant Consistency Checking for the UML", "authors": ["Egyed"]}, {"title": " A.: \"UML/Analyzer: A Tool for the Instant Consistency Checking of UML Models", "authors": ["Egyed"]}, {"title": " A.: \"Consistency Management with Repair Actions", "authors": ["Nentwich", " C.", " Emmerich", " W.", " ", " Finkelstein"]}, {"title": " G.: \"An Empirical Comparison of Dynamic Impact Analysis Algorithms", "authors": ["Orso", " A.", " Apiwattanapong", " T.", " Law", " J.", " ", " Rothermel"]}, {"title": " V.: \"Using Description Logic to Maintain Consistency between UML Models", "authors": ["van Der Straeten", " R.", " Mens", " T.", " Simmonds", " J.", " ", " Jonckers"]}]},
{"doi": "10.1109/ICSE.2009.5070532", "title": "Improving API documentation usability with knowledge pushing", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Documentation", "Usability", "Java", "Computer science", "Software systems", "Software libraries", "Application software", "Guidelines", "Runtime", "Inspection"], "abstract": "The documentation of API functions typically conveys detailed specifications for the benefit of interested readers. In some cases, however, it also contains usage directives, such as rules or caveats, of which authors of invoking code must be made aware to prevent errors and inefficiencies. There is a risk that these directives may be ldquolostrdquo within the verbose text, or that the text would not be read because there are so many invoked functions. To address these concerns for Java, an Eclipse plug-in named eMoose decorates method invocations whose targets have associated directives. Our goal is to lead readers to investigate further, which we aid by highlighting the tagged directives in the JavaDoc hover. We present a lab study that demonstrates the directive awareness problem in traditional documentation use and the potential benefits of our approach.", "author": [{"name": "Uri Dekel", "affiliation": "Institute of Software Research, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "James D. Herbsleb", "affiliation": "Institute of Software Research, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA"}], "time": "May 2009", "citationCount": "53", "references": [{"title": " \"Modular typestate checking of aliased objects\" in OOPSLA '07", "authors": ["K. Bierhoff ", " J. Aldrich"]}, {"title": " \"Notation and representation in collaborative object-oriented design: an observational study\" in OOPSLA '07", "authors": ["U. Dekel ", " J. D. Herbsleb"]}, {"title": " \"Eliciting design requirements for maintenance-oriented ides: a detailed study of corrective and perfective maintenance tasks\"", "authors": ["A. J. Ko", " H. Aung ", " B. A. Myers"]}, {"title": " \"Api documentation from source code comments: a case study of javadoc\"", "authors": ["D. Kramer"]}, {"title": " \"Preliminary design of JML: a behavioral interface specification language for java\"", "authors": ["G. T. Leavens", " A. L. Baker ", " C. Ruby"]}, {"title": " \"Empirical evidence of the benefits of workspace awareness in software configuration management\" in FSE-16", "authors": ["A. Sarma", " D. Redmiles ", " A. van der Hoek"]}, {"title": " \"Designing documentation to compensate for delocalized plans\"", "authors": ["E. Soloway", " R. Lampert", " S. Letovsky", " D. Littman ", " J. Pinto"]}, {"title": " \"Shared waypoints and social tagging to support collaboration in software development\" in CSCW '06", "authors": ["M.-A. Storey", " L.-T. Cheng", " I. Bull ", " P. Rigby"]}, {"title": " \"Todo or to bug: exploring how task annotations play a role in the work practices of software developers\" in ICSE '08", "authors": ["M.-A. Storey", " J. Ryall", " R. I. Bull", " D. Myers ", " J. Singer"]}, {"title": " \"icomment: bugs or bad comments?\"", "authors": ["L. Tan", " D. Yuan", " G. Krishna ", " Y. Zhou"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070986", "title": "Test selection for result inspection via mining predicate rules", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Inspection", "Runtime", "Computer science", "Costs", "Writing", "Debugging", "Humans", "Automatic testing", "Contracts", "Monitoring"], "abstract": "It is labor-intensive to manually verify the outputs of a large set of tests that are not equipped with test oracles. Test selection helps to reduce this cost by selecting a small subset of tests that are likely to reveal faults. A promising approach is to dynamically mine operational models as potential test oracles and then select tests that violate them. Existing work mines operational models from verified passing tests based on dynamic invariant detection. In this paper, we propose to mine common operational models, which are not always true in all observed traces, from a set of unverified tests based on mining predicate rules. Specifically, we collect values of simple predicates at runtime and then generate and evaluate predicate rules as potential operational models after running all the tests. We then select tests that violate the mined predicate rules for result inspection. Preliminary results on the Siemens suite and the grep program show the effectiveness of our approach.", "author": [{"name": "Wujie Zheng", "affiliation": "Computer Science and Engineering, Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Michael R. Lyu", "affiliation": "Computer Science and Engineering, Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science, North Carolina State University, USA"}], "time": "May 2009", "citationCount": "8", "references": []},
{"doi": "10.1109/ICSE.2007.85", "title": "The Factory Pattern in API Design: A Usability Evaluation", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Production facilities", "Usability", "Programming profession", "Application software", "Writing", "Handheld computers", "Software libraries", "Unified modeling language", "Protocols", "Encapsulation"], "abstract": "The usability of software APIs is an important and infrequently researched topic. A user study comparing the usability of the factory pattern and constructors in API designs found highly significant results indicating that factories are detrimental to API usability in several varied situations. The results showed that users require significantly more time (p = 0.005) to construct an object with a factory than with a constructor while performing both context-sensitive and context- free tasks. These results suggest that the use of factories can and should be avoided in many cases where other techniques, such as constructors or class clusters, can be used instead.", "author": [{"name": "Brian Ellis", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Jeffrey Stylos", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Brad Myers", "affiliation": "Carnegie Mellon University, USA"}], "time": "May 2007", "citationCount": "58", "references": [{"title": " \"Six Learning Barriers in End-User Programming Systems\"", "authors": ["A. J. Ko", " B. A. Myers", " ", "H. Aung"]}, {"title": " \"Measuring API usability\"", "authors": ["S. Clarke"]}, {"title": " \"Comparing API Design Choices with Usability Studies: A Case Study and Future Directions\"", "authors": ["J. Stylos", " S. Clarke", " ", " B. A. Myers"]}, {"title": " \"Tool Support for Object-Oriented Patterns\"", "authors": ["G. Florijn", " M. Meijers", " ", " P. van Winsen"]}, {"title": "\".NETFramework Class Library\"", "authors": []}, {"title": "\"Java 2 Platform Standard Edition 5.0 API Specification\"", "authors": []}, {"title": "\"Cocoa Fundamentals Guide: Class Clusters\"", "authors": []}, {"title": " \"Design patterns: an essential component of CS curricula\"", "authors": ["O. Astrachan", " G. Mitchener", " G. Berry", " ", " L. Cox"]}, {"title": " \"Usability Analysis of Visual Programming Environments: A 'Cognitive Dimensions' Framework.\" Journal of Visual Languages and Computing", "authors": ["T.R.G. Green ", " M. Petre"]}, {"title": " \"API Usability and the Cognitive Dimensions Framework\"", "authors": ["S. Clarke"]}, {"title": " \"Usability Implications of Requiring Parameters in Objects' Constructors\"", "authors": ["J. Stylos", " S. Clarke"]}, {"title": "\"The Eclipse Project\"", "authors": []}, {"title": " \"Natural Programming Languages and Environments.\" CACM", "authors": ["B.A. Myers", " J.F. Pane", " ", " A. Ko"]}, {"title": " \"Evaluating Program Representation in a Demonstrational Visual Shell", "authors": ["F. Modugno", " A.T. Corbett", " ", " B.A. Myers"]}]},
{"doi": "10.1109/ICSE.2009.5070533", "title": "Listening to programmers \u2014 Taxonomies and characteristics of comments in operating system code", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Taxonomy", "Operating systems", "Computer languages", "Technological innovation", "Software reliability", "Usability", "Linux", "Bridges", "Computer bugs"], "abstract": "Innovations from multiple directions have been proposed to improve software reliability. Unfortunately, many of the innovations are not fully exploited by programmers. To bridge the gap, this paper proposes a new approach to ldquolistenrdquo to thousands of programmers: studying their programming comments. Since comments express programmers' assumptions and intentions, comments can reveal programmers' needs, which can provide guidance (1) for language/-tool designers on where they should develop new techniques or enhance the usability of existing ones, and (2) for programmers on what problems are most pervasive and important so that they should take initiatives to adopt some existing tools or language extensions. We studied 1050 comments randomly sampled from the latest versions of Linux, FreeBSD, and OpenSolaris. We found that 52.6% of these comments could be leveraged by existing or to-be-proposed tools for improving reliability. Our findings include: (1) many comments describe code relationships, code evolutions, or the usage and meaning of integers and integer macros, (2) a significant amount of comments could be expressed by existing annotation languages, and (3) many comments express synchronization related concerns but are not well supported by annotation languages.", "author": [{"name": "Yoann Padioleau", "affiliation": "University of Illinois, Urbana-Champaign, USA"}, {"name": "Lin Tan", "affiliation": "University of Illinois, Urbana-Champaign, USA"}, {"name": "Yuanyuan Zhou", "affiliation": "University of Illinois, Urbana-Champaign, USA"}], "time": "May 2009", "citationCount": "23", "references": [{"title": " \"Towards a taxonomy of software change\"", "authors": ["J. Buckley", " T. Mens", " M. Zenger", " A. Rashid ", " G. Kniesel"]}, {"title": " \"An empirical study of operating system errors\"", "authors": ["A. Chou", " J. Yang", " B. Chelf", " S. Hallem ", " D. R. Engler"]}, {"title": " \"Dependent types for low-level programming\"", "authors": ["J. Condit", " M. Harren", " Z. R. Anderson", " D. Gay ", " G. C. Necula"]}, {"title": " \"Xoc an extension-oriented compiler for systems programming\"", "authors": ["R. Cox", " T. Bergan", " A. Clements", " F. Kaashoek ", " E. Kohler"]}, {"title": " \"Code thumbnails: Using spatial memory to navigate source code\"", "authors": ["R. DeLine", " M. Czerwinski", " B. Meyers", " G. Venolia", " S. Drucker ", " G. Robertson"]}, {"title": " \"Bugs as deviant behavior: A general approach to inferring errors in systems code\"", "authors": ["D. R. Engler", " D. Y. Chen", " S. Hallem", " A. Chou ", " B. Chelf"]}, {"title": " \"An approach to program understanding by natural language understanding\"", "authors": ["L. H. Etzkorn", " L. L. Bowen ", " C. G. Davis"]}, {"title": " \"Static detection of dynamic memory errors\"", "authors": ["D. Evans"]}, {"title": " \"Do code and comments co-evolve? on the relation between source code and comment changes\"", "authors": ["B. Fluri", " M. Wursch ", " H. C. Gall"]}, {"title": " \"Examining the evolution of code comments in PostgreSQL\"", "authors": ["Z. M. Jiang ", " A. E. Hassan"]}, {"title": " \"Using task context to improve programmer productivity\"", "authors": ["M. Kersten ", " G. C. Murphy"]}, {"title": " \"Automatic identification of bug-introducing changes\"", "authors": ["S. Kim", " T. Zimmermann", " K. Pan ", " E. J. J. Whitehead"]}, {"title": " \"Literate programming\"", "authors": ["D. E. Knuth"]}, {"title": " \"Eliciting design requirements for maintenance-oriented IDEs: a detailed study of corrective and perfective maintenance tasks\"", "authors": ["A. J. Ko", " H. Aung ", " B. A. Myers"]}, {"title": " \"Api documentation from source code comments: a case study of javadoc\"", "authors": ["D. Kramer"]}, {"title": " \"CP-Miner: A tool for finding copy-paste and related bugs in operating system code\"", "authors": ["Z. Li", " S. Lu", " S. Myagmar ", " Y. Zhou"]}, {"title": " \"What motivates programmers to comment?\"", "authors": ["D. P. Marin"]}, {"title": " \"Devil: An IDL for hardware programming\"", "authors": ["F. Merillon", " L. Reveillere", " C. Consel", " R. Marlet ", " G. Muller"]}, {"title": " \"The distribution of faults in a large industrial software system\"", "authors": ["T. Ostr", " "]}, {"title": " \"What can OSS mailing lists tell us? A preliminary psychometric text analysis of the apache developer mailing list\"", "authors": ["P. C. Rigby ", " A. E. Hassan"]}, {"title": " \"Using natural language program analysis to locate and understand action-oriented concerns\"", "authors": ["D. Shepherd", " Z. P. Fry", " E. Hill", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"As-pectC++: An aspect-oriented extension to C++\"", "authors": ["O. Spinczyk", " A. Gal ", " W. Schroder-Preikschat"]}, {"title": " \"A tale of four kernels\"", "authors": ["D. Spinellis"]}, {"title": " \"Code quality analysis in open source software development\"", "authors": ["I. Stamelos", " L. Angelis", " A. Oikonomou ", " G. L. Bleris"]}, {"title": " \"How programmers can turn comments into waypoints for code navigation\"", "authors": ["M.-A. Storey", " L.-T. Cheng", " J. Singer", " M. Muller", " D. Myers ", " J. Ryall"]}, {"title": " \"TODO or to bug: Exploring how task annotations play a role in the work practices of software developers\"", "authors": ["M.-A. Storey", " J. Ryall", " R. I. Bull", " D. Myers ", " J. Singer"]}, {"title": " \"A comparison of software defects in database management systems and operating systems\"", "authors": ["M. Sullivan ", " R. Chillarege"]}, {"title": " \"iComment: Bugs or bad comments?\"", "authors": ["L. Tan", " D. Yuan", " G. Krishna ", " Y. Zhou"]}, {"title": " \"Understanding software evolution through comment analysis\"", "authors": ["R. Warren"]}, {"title": " \"The effect of modularization and comments on program comprehension\"", "authors": ["S. N. Woodfield", " H. E. Dunsmore ", " V. Y. Shen"]}, {"title": " \"Source code that talks: An exploration of eclipse task comments and their implication to repository mining\"", "authors": ["A. T. T. Ying", " J. L. Wright ", " S. Abrams"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070987", "title": "An environment for synchronous software development", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Programming", "Collaborative work", "Delay", "Collaborative software", "Software systems", "Collaboration", "Context awareness", "Collaborative tools", "Informatics", "Productivity"], "abstract": "Collaboration is essential for the development of complex software systems. When a team of developers is geographically distributed, collaboration aspects -such as awareness, communication and synchronization- are compromised by physical distance. We present an approach, named synchronous development, to reduce the negative distance effects on collaboration. We use a fine-grained change tracking mechanism and instantaneously notify any developer working on the system about changes being performed by other developers. We believe that our approach can augment each developer's knowledge of the project and, consequently, promote interaction and increase productivity.", "author": [{"name": "Lile Hattori", "affiliation": "REVEAL at Faculty of Informatics, University of Lugano, Switzerland"}, {"name": "Michele Lanza", "affiliation": "REVEAL at Faculty of Informatics, University of Lugano, Switzerland"}], "time": "May 2009", "citationCount": "8", "references": []},
{"doi": "10.1109/ICSE.2007.60", "title": "Overview and Evaluation of Constraint Validation Approaches in Java", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Java", "Runtime", "Contracts", "Unified modeling language", "Costs", "Computer languages", "Information systems", "Logic", "System analysis and design", "Buildings"], "abstract": "Integrity is a dependability attribute partially ensured through runtime validation of integrity constraints. A wide range of different constraint validation approaches exists-ranging from simple if conditions over explicit constraint validation methods and contract specifications to constraints as first class runtime entities of an application. However, increased support for explicitness and flexibility often comes at the price of increased performance costs. To address this issue, we contribute with an overview and evaluation of different constraint validation approaches for the Java programming language with respect to implementation, maintainability and performance. Our results show that the benefits of some of the more advanced approaches are certainly worth their costs by introducing a runtime overhead of only two to ten times the runtime of the fastest approach while other approaches introduce runtime overheads of more than 100, which might be simply too slow in certain applications.", "author": [{"name": "Lorenz Froihofer", "affiliation": "Institute of Information Systems, University of Technology, Vienna, Vienna, Austria"}, {"name": "Gerhard Glos", "affiliation": "Institute of Information Systems, University of Technology, Vienna, Vienna, Austria"}, {"name": "Johannes Osrael", "affiliation": "Institute of Information Systems, University of Technology, Vienna, Vienna, Austria"}, {"name": "Karl M. Goeschka", "affiliation": "Institute of Information Systems, University of Technology, Vienna, Vienna, Austria"}], "time": "May 2007", "citationCount": "9", "references": [{"title": "B. Meyer. Applying \"design by contract\". Computer", "authors": []}]},
{"doi": "10.1109/ICSE.2009.5070534", "title": "Equality and hashing for (almost) free: Generating implementations from abstraction functions", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Java", "Writing", "Libraries", "Reflection", "Contracts", "Cost function", "Testing", "Computer science", "Artificial intelligence"], "abstract": "In an object-oriented language such as Java, every class requires implementations of two special methods, one for determining equality and one for computing hash codes. Although the specification of these methods is usually straightforward, they can be hard to code (due to subclassing, delegation, cyclic references, and other factors) and often harbor subtle faults. A technique is presented that simplifies this task. Instead of writing code for the methods, the programmer gives, as a brief annotation, an abstraction function that defines an abstract view of an object's representation, and sometimes an additional observer in the form of an iterator method. Equality and hash codes are then computed in library code that uses reflection to read the annotations. Experiments on a variety of programs suggest that, in comparison to writing the methods by hand, our technique requires less text from the programmer and results in methods that are more often correct.", "author": [{"name": "Derek Rayside", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Zev Benjamin", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Rishabh Singh", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Joseph P. Near", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Aleksandar Milicevic", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Daniel Jackson", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " \"Deep equality revisited\" in Deductive and object-Oriented Databases", "authors": ["Serge Abiteboul ", " Jan Van Bussche"]}, {"title": " \"Kava: A Java dialect with a uniform object model for lightweight classes\" in Concurrency\u2014Practice and Experience", "authors": ["David F. Bacon"]}, {"title": "\"The DaCapo benchmarks: Java benchmarking development and analysis\"", "authors": []}, {"title": "\"Finding bugs efficiently with a SAT solver. In Ivica Crnkovic and Antonia Bertolino\"", "authors": []}, {"title": " \"Copying and comparing: Problems and solutions\"", "authors": ["Peter Grogono ", " Markku Sakkinen"]}, {"title": " \"Proof of correctness of data representation\" in Language Hierarchies and Interfaces", "authors": ["C. A. R. Hoare"]}, {"title": " \"Finding bugs is easy\"", "authors": ["David Hovemeyer ", " William Pugh"]}, {"title": " \"Preliminary design of JML: A behavioral interface specification language for Java\"", "authors": ["Gary T. Leavens", " Albert L. Baker ", " Clyde Ruby"]}, {"title": "\"Feedback-directed random test generation\"", "authors": []}, {"title": " \"Haskell 98 Language and Libraries\"", "authors": ["Simon Peyton Jones"]}, {"title": "\"Declarative object identity using relation types\"", "authors": []}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070988", "title": "Towards safer composition", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Proposals", "Automata", "Software safety", "Heart", "Software engineering", "Computer science", "Software systems", "Automation", "Context modeling", "Merging"], "abstract": "Determining whether a set of features can be composed, or safe composition, is a hard problem in software product line engineering because the number of feature combinations can be exponential. We argue that synergies between current approaches to safe composition should be exploited and propose a combined approach. At the heart of our proposal is a merge operation that creates a behavioural description for the entire product family from a feature diagram and descriptions of individual feature behaviour. As a result, we intend to verify more efficiently safe composition for an exponential number of feature combinations.", "author": [{"name": "Andreas Classen", "affiliation": "University of Namur - FUNDP, Namur, Belgium"}, {"name": "Patrick Heymans", "affiliation": "University of Namur - FUNDP, Namur, Belgium"}, {"name": "Thein Than Tuny", "affiliation": "University of Namur - FUNDP, Namur, Belgium"}, {"name": "Bashar Nuseibeh", "affiliation": "The Open University, Milton Keynes, UK"}], "time": "May 2009", "citationCount": "5", "references": []},
{"doi": "10.1109/ICSE.2007.61", "title": "Ownership and Immutability Inference for UML-Based Object Access Control", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Access control", "Marketing and sales", "Unified modeling language", "Java", "Reverse engineering", "Software quality", "Security", "Software design", "Computer science", "Software tools"], "abstract": "We propose a mechanism for object access control which is based on the UML. Specifically, we propose use of ownership and immutability constraints on UML associations and verification of these constraints through reverse engineering. These constraints inherently support software design principles, and impose requirements on the implementation that may help prevent serious program flaws. We propose implementation-level models for ownership and immutability that capture well the meaning of these concepts in design, and we develop novel static ownership and immutability inference analyses. We perform an empirical investigation on several small-to-large Java programs. The results indicate that the inference analyses are precise and practical. Therefore, the analyses can be integrated in reverse engineering tools and can help support effective reasoning about software quality and security.", "author": [{"name": "Yin Liu", "affiliation": "Department of Computer Science, Rensselaer Polytechnic Institute, USA"}, {"name": "Ana Milanova", "affiliation": "Department of Computer Science, Rensselaer Polytechnic Institute, USA"}], "time": "May 2007", "citationCount": "11", "references": []},
{"doi": "10.1109/ICSE.2009.5070535", "title": "Locating need-to-translate constant strings for software internationalization", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Application software", "Open source software", "Computer science", "Graphical user interfaces", "Software prototyping", "Software tools", "Java", "Databases", "Laboratories", "Educational technology"], "abstract": "Modern software applications require internationalization to be distributed to different regions of the world. In various situations, many software applications are not internationalized at early stages of development. To internationalize such an existing application, developers need to externalize some hard-coded constant strings to resource files, so that translators can easily translate the application into a local language without modifying its source code. Since not all the constant strings require externalization, locating those need-to-translate constant strings is a necessary task that developers must complete for internationalization. In this paper, we present an approach to automatically locating need-to-translate constant strings. Our approach first collects a list of API methods related to the graphical user interface (GUI), and then searches for need-to-translate strings from the invocations of these API methods based on string-taint analysis. We evaluated our approach on four real-world open source applications: RText, Risk, ArtOfIllusion, and Megamek. The results show that our approach effectively locates most of the need-to-translate constant strings in all the four applications.", "author": [{"name": "Xiaoyin Wang", "affiliation": "Key laboratory of High Confidence Software Technologies, Peking University, Beijing, China"}, {"name": "Lu Zhang", "affiliation": "Peking University, Beijing, Beijing, CN"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}, {"name": "Hong Mei", "affiliation": "Peking University, Beijing, Beijing, CN"}, {"name": "Jiasu Sun", "affiliation": "Peking University, Beijing, Beijing, CN"}], "time": "May 2009", "citationCount": "7", "references": [{"title": " \"Precise analysis of string expressions\"", "authors": ["A. Christensen", " A. Mller ", " M. Schwartzbach"]}, {"title": " \"Dytan: a generic dynamic taint analysis framework\"", "authors": ["J. A. Clause", " W. Li ", " A. Orso"]}, {"title": " \"Efficiently computing static single assignment form and the control dependence graph\"", "authors": ["R. Cytron", " J. Ferrante", " B. Rosen", " M. Wegman ", " K. Zadeck"]}, {"title": " \"Internationalization of open source software: framework and some issues\"", "authors": ["V. Dagiene ", " R. Laucius"]}, {"title": " \"Static checking of dynamically generated queries in database applications\"", "authors": ["C. Gould", " Z. Su ", " P. T. Devanbu"]}, {"title": " \"Dynamic inference of abstract types\"", "authors": ["P. Guo", " J. H. Perkins", " S. McCamant ", " M. D. Ernst"]}, {"title": " \"AMNESIA: analysis and monitoring for neutralizing SQL-injection attacks\"", "authors": ["W. G. J. Halfond ", " A. Orso"]}, {"title": " \"Current issues in software internationalisation\"", "authors": ["J. Hogan", " C. Ho-Stuart ", " B. Pham"]}, {"title": " \"Global data flow analysis and iterative algorithms\"", "authors": ["J. Kam ", " J. Ullman"]}, {"title": " \"Static approximation of dynamically generated web\"", "authors": ["Y. Minamide"]}, {"title": " \"Lackwit: a program understanding tool based on type inference\"", "authors": ["R. O'Callahan ", " D. Jackson"]}, {"title": " \"Sound and precise analysis of web applications for injection vulnerabilities\"", "authors": ["G. Wassermann ", " Z. SU"]}, {"title": " \"Static detection of cross-site scripting vulnerabilities\"", "authors": ["G. Wassermann ", " Z. SU"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070989", "title": "Selective backtracking of model changes", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Displays", "Streaming media", "History", "Iris", "Design engineering", "Systems engineering and theory", "Design automation", "Automatic control", "Force control", "Bidirectional control"], "abstract": "Backtracking is necessary when design alternatives are explored or dead ends are reached. Unfortunately, current approaches support chronological backtracking only (undo or version control), where the designer is forced to undo intermittent changes even if they are not related to what should be backtracked. This work introduces an approach for selective backtracking during software modeling where previously discarded design changes are recovered without having to undo intermittent changes. Selective backtracking is a challenge because during multi-view modeling, we must understand how changes across multiple views are connected - in order to undo them together and thus avoid undesired inconsistencies. Our approach automatically discovers dependencies among design changes and is thus able to guide the designer during selective backtracking.", "author": [{"name": "Iris Groher", "affiliation": "Institute of Systems Engineering and Automation (SEA), Johannes Kepler University Linz, Austria"}, {"name": "Alexander Egyed", "affiliation": "Institute of Systems Engineering and Automation (SEA), Johannes Kepler University Linz, Austria"}], "time": "May 2009", "citationCount": 0, "references": [{"title": " \"On the Criteria to be Used in Decomposing Systems into Modules", "authors": ["D. L. Parnas"]}, {"title": " \"Viewpoints: A Framework for Integrating Multiple Perspectives in System Development", "authors": ["A. Finkelstein", " J. Kramer", " B. Nuseibeh", " L. Finkelstein", " ", " M. Goedicke"]}, {"title": " \"Instant Consistency Checking for the UML", "authors": ["A. Egyed"]}, {"title": " \"Of Changes and their History: Some Ideas for Future IDEs", "authors": ["H. Gall"]}, {"title": " \"A Change-based Approach to Software Evolution", "authors": ["R. Robbes ", " M. Lanza"]}, {"title": " \"Fixing Inconsistencies in UML Design Models", "authors": ["A. Egyed"]}, {"title": " \"Mining metrics to predict component failures", "authors": ["N. Nagappan", " T. Ball", " ", " A. Zeller"]}]},
{"doi": "10.1109/ICSE.2007.20", "title": "Automatic Inference of Structural Changes for Matching across Program Versions", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software engineering", "Packaging", "Software tools", "Programming profession", "Information analysis", "Testing", "Computer science", "Software packages", "Rendering (computer graphics)", "Natural languages"], "abstract": "Mapping code elements in one version of a program to corresponding code elements in another version is a fundamental building block for many software engineering tools. Existing tools that match code elements or identify structural changes - refactorings and API changes - between two versions of a program have two limitations that we overcome. First, existing tools cannot easily disambiguate among many potential matches or refactoring candidates. Second, it is difficult to use these tools' results for various software engineering tasks due to an unstructured representation of results. To overcome these limitations, our approach represents structural changes as a set of high-level change rules, automatically infers likely change rules and determines method-level matches based on the rules. By applying our tool to several open source projects, we show that our tool identifies matches that are difficult to find using other approaches and produces more concise results than other approaches. Our representation can serve as a better basis for other software engineering tools.", "author": [{"name": "Miryung Kim", "affiliation": "Computer Science & Engineering, University of Washington, Seattle, WA, USA"}, {"name": "David Notkin", "affiliation": "Computer Science & Engineering, University of Washington, Seattle, WA, USA"}, {"name": "Dan Grossman", "affiliation": "Computer Science & Engineering, University of Washington, Seattle, WA, USA"}], "time": "May 2007", "citationCount": "66", "references": []},
{"doi": "10.1109/ICSE.2009.5070536", "title": "Automatically finding patches using genetic programming", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Genetic programming", "Computer bugs", "Testing", "Biology computing", "Genetic mutations", "Debugging", "Formal specifications", "Software maintenance", "Costs", "Biological information theory"], "abstract": "Automatic program repair has been a longstanding goal in software engineering, yet debugging remains a largely manual process. We introduce a fully automated method for locating and repairing bugs in software. The approach works on off-the-shelf legacy applications and does not require formal specifications, program annotations or special coding practices. Once a program fault is discovered, an extended form of genetic programming is used to evolve program variants until one is found that both retains required functionality and also avoids the defect in question. Standard test cases are used to exercise the fault and to encode program requirements. After a successful repair has been discovered, it is minimized using structural differencing algorithms and delta debugging. We describe the proposed method and report experimental results demonstrating that it can successfully repair ten different C programs totaling 63,000 lines in under 200 seconds, on average.", "author": [{"name": "Westley Weimer", "affiliation": "University of Virginia, USA"}, {"name": "ThanhVu Nguyen", "affiliation": "University of New Mexico, USA"}, {"name": "Claire Le Goues", "affiliation": "University of Virginia, USA"}, {"name": "Stephanie Forrest", "affiliation": "University of New Mexico, USA"}], "time": "May 2009", "citationCount": "266", "references": [{"title": " \"diffX: an algorithm to detect changes in multi-version XML documents\"", "authors": ["R. Al-Ekram", " A. Adma ", " O. Baysal"]}, {"title": " \"Finding safety errors with ACO\"", "authors": ["E. Alba ", " F. Chicano"]}, {"title": " \"Coping with an open bug repository\"", "authors": ["J. Anvik", " L. Hiew ", " G. C. Murphy"]}, {"title": " \"Who should fix this bug?\"", "authors": ["J. Anvik", " L. Hiew ", " G. C. Murphy"]}, {"title": " \"On the automation of fixing software bugs\"", "authors": ["A. Arcuri"]}, {"title": " \"A novel co-evolutionary approach to automatic software bug fixing\"", "authors": ["A. Arcuri ", " X. Yao"]}, {"title": " \"From symptom to cause: localizing errors in counterexample traces\"", "authors": ["T. Ball", " M. Naik ", " S. K. Rajamani"]}, {"title": " \"Staffing a software project: a constraint satisfaction and optimization-based approach\"", "authors": ["A. Barreto", " M. de O. Barros ", " C. M. Werner"]}, {"title": " \"Explaining abstract counterexamples\"", "authors": ["S. Chaki", " A. Groce ", " O. Strichman"]}, {"title": " \"Inference and enforcement of data structure consistency specifications\"", "authors": ["B. Demsky", " M. D. Ernst", " P. J. Guo", " S. McCamant", " J. H. Perkins ", " M. Rinard"]}, {"title": " \"Bugs as inconsistent behavior: A general approach to inferring errors in systems code\"", "authors": ["D. R. Engler", " D. Y. Chen ", " A. Chou"]}, {"title": " \"Genetic algorithms: Principles of natural selection applied to computation\"", "authors": ["S. Forrest"]}, {"title": " \"Making the most of BMC counterexamples\"", "authors": ["A. Groce ", " D. Kroening"]}, {"title": " \"Problem difficulty and code growth in genetic programming\"", "authors": ["S. Gustafson", " A. Ekart", " E. Burke ", " G. Kendall"]}, {"title": " \"The current state and future of search based software engineering\"", "authors": ["M. Harman"]}, {"title": " \"Path slicing\"", "authors": ["R. Jhala ", " R. Majumdar"]}, {"title": " \"Specification mining with few false positives\"", "authors": ["C. Le ", " W. Weimer"]}, {"title": " \"Bug isolation via remote program sampling\"", "authors": ["B. Liblit", " A. Aiken", " A. X. Zheng ", " M. I. Jordan"]}, {"title": " \"An empirical study of the reliability of UNIX utilities\"", "authors": ["B. P. Miller", " L. Fredriksen ", " B. So"]}, {"title": " \"Cil: An infrastructure for C program analysis and transformation\"", "authors": ["G. C. Necula", " S. McPeak", " S. P. Rahul ", " W. Weimer"]}, {"title": " \"Advances in software engineering\"", "authors": ["C. V. Ramamoothy ", " W.-T. Tsai"]}, {"title": " \"Enhancing server availability and security through failure-oblivious computing\"", "authors": ["M. C. Rinard", " C. Cadar", " D. Dumitran", " D. M. Roy", " T. Leu ", " W. S. Beebee"]}, {"title": " \"Prioritizing test cases for regression testing\"", "authors": ["G. Rprintmel", " R. J. Untch ", " C. Chu"]}, {"title": " \"Search-based determination of refactorings for improving the class structure of object-oriented systems\"", "authors": ["U. Seng", " J. Stammel ", " D. Burkhart"]}, {"title": " \"Time-aware test suite prioritization\"", "authors": ["K. Walcott", " M. Soffa", " G. Kapthammer ", " R. Roos"]}, {"title": " \"Evolutionary unit testing of object-oriented software using strongly-typed genetic programming\"", "authors": ["S. Wappler ", " J.names Wegener"]}, {"title": " \"Patches as better bug reports\"", "authors": ["W. Weimer"]}, {"title": " \"Yesterday my program worked. Today it does not. Why?\"", "authors": ["A. Zeller"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070990", "title": "A compositional approach to bidirectional model transformation", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Programming", "Application software", "Maintenance engineering", "Prototypes", "Algebra", "Power system modeling", "Informatics", "Software maintenance", "Reverse engineering", "Inverse problems"], "abstract": "Bidirectional model transformation plays an important role in maintaining consistency between two models, and has many potential applications in software development, including model synchronization, round-trip engineering, software evolution, multiple-view software development, and reverse engineering. However, unclear bidirectional semantics, domain-specific bidirectionalization method, and lack of systematic development framework are known problems that prevent it from being practically used. In this paper, we propose a novel compositional framework for bidirectional model transformation based on an existing graph querying language UnQL, so that one can develop various useful bidirectional model transformation by combination of a fixed number of primitive bidirectional model transformations. We have implemented a prototype system, and the experimental results show promise of the new approach.", "author": [{"name": "Soichiro Hidaka", "affiliation": "GRACE Center, National Institute of Information, Tokyo, Japan"}, {"name": "Zhenjiang Hu", "affiliation": "GRACE Center, National Institute of Information, Tokyo, Japan"}, {"name": "Hiroyuki Kato", "affiliation": "GRACE Center, National Institute of Information, Tokyo, Japan"}, {"name": "Keisuke Nakano", "affiliation": "University of Electro-Communications, Chofu, Tokyo, Japan"}], "time": "May 2009", "citationCount": "12", "references": []},
{"doi": "10.1109/ICSE.2007.45", "title": "Information Needs in Collocated Software Development Teams", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Programming", "Software engineering", "Writing", "Switches", "Information analysis", "Communication switching", "Content management", "Cloning", "File servers", "Books"], "abstract": "Previous research has documented the fragmented nature of software development work. To explain this in more detail, we analyzed software developers' day-to-day information needs. We observed seventeen developers at a large software company and transcribed their activities in go-minute sessions. We analyzed these logs for the information that developers sought, the sources that they used, and the situations th at prevented inform action from being acquired. We identified twenty-one information types and cataloged the outcome and source when each type of information was sought. The most frequently sought information included awareness about artifacts and coworkers. The most often deferred searches included knowledge about design and program behavior, such as why code was written a particular way, what a program was supposed to do, and the cause of a program state. Developers often had to defer tasks because the only source of knowledge was unavailable coworkers.", "author": [{"name": "Andrew J. Ko", "affiliation": "Human-Computer Interaction Institute, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Robert DeLine", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}, {"name": "Gina Venolia", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}], "time": "May 2007", "citationCount": "187", "references": [{"title": " M. (1997). \"My Hairiest Bug\" War Stories. CACM", "authors": ["Eisenstadt"]}]},
{"doi": "10.1109/ICSE.2009.5070537", "title": "FlexSync: An aspect-oriented approach to Java synchronization", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Java", "Yarn", "Software libraries", "Concurrent computing", "Buildings", "Data structures", "Information retrieval", "Buffer storage", "Delay", "Fluctuations"], "abstract": "Designers of concurrent programs are faced with many choices of synchronization mechanisms, among which clear functional trade-offs exist. Making synchronization customizable is highly desirable as different deployment scenarios of the same program often prioritize synchronization choices differently. Unfortunately, such customizations cannot be accomplished in the conventional non-modular implementation of synchronization. To enable customizability, we present FlexSync, an aspect oriented synchronization library, to enable the modular reasoning and the declarative specification of synchronization. Complex Java systems can simultaneously work with multiple synchronization mechanisms without any code changes. The FlexSync load-time weaver performs deployment time optimizations and ensures these synchronization mechanisms consistently interact with each other and with the core system. We evaluated FlexSync on commercially used complex Java systems and observed significant speedups as a result of the deployment-specific customization.", "author": [{"name": "Charles Zhang", "affiliation": "Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Hong Kong, China"}], "time": "May 2009", "citationCount": "9", "references": [{"title": " \"Compiler and runtime support for efficient software transactional memory\"", "authors": ["Ali-Reza Adl-Tabatabai", " Brian T. Lewis", " Vijay Menon", " Brian R. Murphy", " Bratin Saha ", " Tatiana Shpeisman"]}, {"title": " \"Static analyses for eliminating unnecessary synchronization from java programs\"", "authors": ["Jonathan Aldrich", " Craig Chambers", " Emin Gun Sirer ", " Susan Eggers"]}, {"title": " \"Guava: a dialect of java without data races\"", "authors": ["David F. Bacon", " Robert E. Strom ", " Ashis Tarafdar"]}, {"title": " \"Stack allocation and synchronization optimizations for java using escape analysis\"", "authors": ["Jong-Deok Choi", " Manish Gupta", " Mauricio J. Serrano", " Vugranam C. Sreedhar ", " Samuel P. Midkiff"]}, {"title": " \"Invariant-based specification synthesis and verification of synchronization in concurrent programs\"", "authors": ["Xianghua Deng", " Matthew B. Dwyer", " John Hatcliff ", " Masaaki Mizuno"]}, {"title": " \"Lock allocation\"", "authors": ["Michael Emmi", " Jeffrey S. Fischer", " Ranjit Jhala ", " Rupak Majumdar"]}, {"title": " \"Atomizer: a dynamic atomicity checker for multithreaded programs\"", "authors": ["Cormac Flanagan ", " Stephen N Freund"]}, {"title": " \"A type and effect system for atomicity\"", "authors": ["Cormac Flanagan ", " Shaz Qadeer"]}, {"title": " \"Design Pattern Implementation in Java and AspectJ\"", "authors": ["Jan Hannemann ", " Gregor Kiczales"]}, {"title": " \"A flexible framework for implementing software transactional memory\"", "authors": ["Maurice Herlihy", " Victor Luchangco ", " Mark Moir"]}, {"title": " \"Role model designs and implementations with aspect-oriented programming\"", "authors": ["A. Elizabeth Kendall"]}, {"title": " \"Aspect-oriented programming. In Mehmet Aksit and Satoshi Matsuoka\"", "authors": ["Gregor Kiczales", " John Lamping", " Anurag Menhdhekar", " Chris Maeda", " Cristina Lopes", " Jean-Marc Loingtier", " ."]}, {"title": " \"Aspect-oriented programming and modular reasoning\"", "authors": ["Gregor Kiczales ", " Mira Mezini"]}, {"title": " \"Aspect oriented programming with adaptive methods\" in Communications of the ACM", "authors": ["Karl Lieberherr", " Doug Orleans ", " Johan Ovlinger"]}, {"title": " \"Abstracting process-to-function relations in concurrency object-oriented applications\"", "authors": ["Cristina Videira Lopes ", " Karl J. Lieberherr"]}, {"title": " \"Autolocker: synchronization inference for atomic sections\"", "authors": ["Bill McCloskey", " Feng Zhou", " David Gay ", " Eric Brewer"]}, {"title": " \"Pruning interference and ready dependences for slicing concurrent java programs\"", "authors": ["Venkatesh Prasad Ranganath ", " John Hatcliff"]}, {"title": " \"Effective synchronization removal for java\"", "authors": ["Erik Ruf"]}, {"title": " \"Software transactional memory\"", "authors": ["Nir Shavit ", " Dan Touitou"]}, {"title": " \"Associating synchronization constraints with data in an object-oriented language\"", "authors": ["M", "ana Vaziri", " Frank Tip ", " Julian Dolby"]}, {"title": " \"Externalizing Java Server Concurrency with CAL\"", "authors": ["Charles Zhang ", " Hans-Arno Jacobsen"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070991", "title": "Genetics as a role model for software variability management", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Engineering management", "Humans", "Software engineering", "Genetic engineering", "Power engineering and energy", "Software systems", "Beak", "Organisms", "Power system management", "Iris"], "abstract": "Researchers are often inspired by ingenious problem solving strategies of nature. This paper is motivated by the seemingly infinite expressive power of genes (in terms of variability). To bring in the flexibility required for dealing with variable requirements and volatile assumptions in software engineering, we consider genetic variability to be a role model for software variability management. We exemplify how individual species can be seen as natural product lines. By identifying parallels between software product lines and natural product lines, we present initial ideas for software product line engineering research based on the observation of how ldquoproducts are createdrdquo in nature. We then draw conclusions about the implications for research on software product lines, thereby identifying future research directions.", "author": [{"name": "Deepak Dhungana", "affiliation": "Christian Doppler Laboratory of Automated Software Engineering, Johannes Kepler University Linz, Linz, Austria"}, {"name": "Iris Groher", "affiliation": "Institute of Systems Engineering and Automation, Johannes Kepler University Linz, Linz, Austria"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.87", "title": "The Social Dynamics of Pair Programming", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Dynamic programming", "Programming profession", "Keyboards", "Navigation", "Software development management", "Technology management", "Engineering management", "Data engineering", "Human computer interaction", "Computer science"], "abstract": "This paper presents data from a four month ethnographic study of professional pair programmers from two software development teams. Contrary to the current conception of pair programmers, the pairs in this study did not hew to the separate roles of \"driver\" and \"navigator\". Instead, the observed programmers moved together through different phases of the task, considering and discussing issues at the same strategic \"range \" or level of abstraction and in largely the same role. This form of interaction was reinforced by frequent switches in keyboard control during pairing and the use of dual keyboards. The distribution of expertise among the members of a pair had a strong influence on the tenor of pair programming interaction. Keyboard control had a consistent secondary effect on decisionmaking within the pair. These findings have implications for software development managers and practitioners as well as for the design of software development tools.", "author": [{"name": "Jan Chong", "affiliation": "Center for Work, Technology and Organization Managemtn Science and Engineering, University of Stanford, USA"}, {"name": "Tom Hurlbutt", "affiliation": "University of Stanford, USA"}], "time": "May 2007", "citationCount": "44", "references": [{"title": " \"The effects of pair-programming on performance in an introductory programming course", "authors": ["C. McDowell", " L. Werner", " H. Bullock", " ", " J. Fernald"]}, {"title": " \"A multiple case study on the impact of pair programming on product quality", "authors": ["H. Hulkko ", " P. Abrahamsson"]}, {"title": " \"The case for collaborative programming", "authors": ["J. T. Nosek"]}, {"title": " \"Experimental evaluation of pair programming", "authors": ["J. Nawrocki ", " A. Wojciechowski"]}, {"title": " \"The Collaborative Software Process", "authors": ["L. Williams"]}, {"title": " \"XP Practices: Pair Programming.\" vol. 2005", "authors": ["adaptionsoft.com"]}, {"title": " \"Factors affecting the perceived effectiveness of pair programming in higher education", "authors": ["E. A. Chaparro", " A. Yuksel", " P. Romero", " ", " S. Bryant"]}, {"title": " \"Double trouble: Mixing qualitative and quantitative methods in the study of eXtreme programmers", "authors": ["S. Bryant"]}, {"title": " \"Rating expertise in collaborative software development", "authors": ["S. Bryant"]}, {"title": " \"Coupling pair programming and writing: Learning about students perceptions and processes", "authors": ["T. VanDeGrift"]}, {"title": " \"On understanding compatibility of student pair programmers", "authors": ["N. Katira", " L. Williams", " E. Wiebe", " C. Miller", " S. Balik", " ", " E. Gehringer"]}, {"title": " \"Investigating the Impact of Personality Types on Communication and Collaboration-Viability in Pair Programming", "authors": ["P. Sfetsos", " I. Stamelos", " L. Angelis", " ", " I. S. Deligiannis"]}, {"title": " \"An Empirical Study about the Feelgood Factor in Pair Programming", "authors": ["F. Padberg ", " M. Muller"]}, {"title": " \"Sangam: a distributed pair programming plug-in for eclipse", "authors": ["C.-W. Ho", " S. Rana", " E. Gehringer", " ", " L. Williams"]}, {"title": " \"A study of human solutions in eXtreme programming", "authors": ["R. Gittins ", " S. Hope"]}]},
{"doi": "10.1109/ICSE.2009.5070538", "title": "Effective static deadlock detection", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["System recovery", "Yarn", "Java", "Algorithm design and analysis", "Detection algorithms", "Data analysis", "Multicore processing", "Sun", "Databases", "Concurrent computing"], "abstract": "We present an effective static deadlock detection algorithm for Java. Our algorithm uses a novel combination of static analyses each of which approximates a different necessary condition for a deadlock. We have implemented the algorithm and report upon our experience applying it to a suite of multi-threaded Java programs. While neither sound nor complete, our approach is effective in practice, finding all known deadlocks as well as discovering previously unknown ones in our benchmarks with few false alarms.", "author": [{"name": "Mayur Naik", "affiliation": "Intel Research, USA"}, {"name": "Chang-Seo Park", "affiliation": "University of California Berkeley, USA"}, {"name": "Koushik Sen", "affiliation": "University of California Berkeley, USA"}, {"name": "David Gay", "affiliation": "Intel Research, USA"}], "time": "May 2009", "citationCount": "91", "references": [{"title": " \"Applying static analysis to large-scale multi-threaded Java programs\"", "authors": ["C. Artho ", " A. Biere"]}, {"title": " \"Dynamic deadlock analysis of multi-threaded programs\"", "authors": ["S. Bensalem ", " K. Havelund"]}, {"title": " \"Ownership types for safe programming: preventing data races and deadlocks\"", "authors": ["C. Boyapati", " R. Lee ", " M. Rinard"]}, {"title": " \"Concurrent software verification with states events and deadlocks\"", "authors": ["S. Chaki", " E. Clarke", " J. Ouaknine", " N. Sharygina ", " N. Sinha"]}, {"title": " \"A deadlock detection tool for concurrent Java programs\"", "authors": ["C. Demartini", " R. Iosif ", " R. Sisto"]}, {"title": " \"RacerX: effective static detection of race conditions and deadlocks\"", "authors": ["D. Engler ", " K. Ashcraft"]}, {"title": " \"Effective typestate verification in the presence of aliasing\"", "authors": ["S. Fink", " E. Yahav", " N. Dor", " G. Ramalingam ", " E. Geay"]}, {"title": " \"Runtime checking of multithreaded applications with Visual Threads\"", "authors": ["J. Harrow"]}, {"title": " \"Using runtime analysis to guide model checking of Java programs\"", "authors": ["K. Havelund"]}, {"title": " \"Model checking Java programs using Java PathFinder\"", "authors": ["K. Havelund ", " T. Pressburger"]}, {"title": " \"A model of Ada programs for static deadlock detection in polynomial time\"", "authors": ["S. Masticola ", " B. Ryder"]}, {"title": " \"Parameterized object sensitivity for points-to analysis for Java\"", "authors": ["A. Milanova", " A. Rountev ", " B. Ryder"]}, {"title": " \"Conditional must not aliasing for static race detection\"", "authors": ["M. Naik ", " A. Aiken"]}, {"title": " \"Soot - a Java bytecode optimization frame-work\"", "authors": ["R. Vall\u00e9e-Rai", " P. Co", " E. Gagnon", " L. Hendren", " P. Lam ", " V. Sundaresan"]}, {"title": " \"Static deadlock detection for Java libraries\"", "authors": ["A. Williams", " W. Thies ", " M. Ernst"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070992", "title": "Promoting evolution by abstracting over implementation structure", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Service oriented architecture", "Application software", "Object oriented modeling", "Software engineering", "Object oriented programming", "Computer science", "Educational institutions", "Insulation", "Context-aware services", "Context"], "abstract": "In service-oriented architectures, services present to their clients a single interface encompassing all the available functionality. In doing so, they offer an abstraction over the implementation structure of the service, insulating clients from changes to that structure. Abstraction over implementation structure yields benefits in terms of software evolution, and hence can be viewed as a general technique for good software engineering. As such, it should become part of mainstream software development, used outside of the loosely-coupled networks of business applications which services-oriented software addresses. In this paper we give an overview of the design of Continuum, a language-based approach that extends the conventional object model with facilities to abstract over implementation structure and aims to support the construction of malleable software.", "author": [{"name": "David Lievens", "affiliation": "Department of Computer Science, Trinity College Dublin, Dublin, Ireland"}, {"name": "Tim Walsh", "affiliation": "Department of Computer Science, Trinity College Dublin, Dublin, Ireland"}, {"name": "Dominik Dahlem", "affiliation": "Department of Computer Science, Trinity College Dublin, Dublin, Ireland"}, {"name": "William Harrison", "affiliation": "Department of Computer Science, Trinity College Dublin, Dublin, Ireland"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.74", "title": "Role Migration and Advancement Processes in OSSD Projects: A Comparative Case Study", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Opportunistic software systems development", "Open source software", "Engineering profession", "Software engineering", "Programming", "Information analysis", "Computer industry", "Engineering management", "Nonhomogeneous media", "Recruitment"], "abstract": "Socio-technical processes have come to the forefront of recent analysis of the open source software development (OSSD) world. Interest in making these processes explicit is mounting, from industry and the software process community, as well as among those who may become contributors to OSSD organization. This paper serves to close this gap by providing an empirical analysis of the role migration and project career advancement process, and role-sets within, that we have observed through comparative case studies within three large OSSD project organizations: Mozilla.org, Apache.org, and NetBeans.org.", "author": [{"name": "Chris Jensen", "affiliation": "University of California, Irvine, CA, USA"}, {"name": "Walt Scacchi", "affiliation": "University of California, Irvine, CA, USA"}], "time": "May 2007", "citationCount": "60", "references": []},
{"doi": "10.1109/ICSE.2009.5070539", "title": "Refactoring sequential Java code for concurrency via concurrent libraries", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Java", "Concurrent computing", "Libraries", "Programming profession", "Ash", "Packaging", "Writing", "Open source software", "Parallel processing", "Yarn"], "abstract": "Parallelizing existing sequential programs to run efficiently on multicores is hard. The Java 5 package java.util.concurrent (j.u.c.) supports writing concurrent programs: much of the complexity of writing thread-safe and scalable programs is hidden in the library. To use this package, programmers still need to reengineer existing code. This is tedious because it requires changing many lines of code, is error-prone because programmers can use the wrong APIs, and is omission-prone because programmers can miss opportunities to use the enhanced APIs. This paper presents our tool, Concurrencer, that enables programmers to refactor sequential code into parallel code that uses three j.u.c. concurrent utilities. Concurrencer does not require any program annotations. Its transformations span multiple, non-adjacent, program statements. A find-and-replace tool can not perform such transformations, which require program analysis. Empirical evaluation shows that concurrencer refactors code effectively: concurrencer correctly identifies and applies transformations that some open-source developers overlooked, and the converted code exhibits good speedup.", "author": [{"name": "Danny Dig", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "John Marrero", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}, {"name": "Michael D. Ernst", "affiliation": "Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, USA"}], "time": "May 2009", "citationCount": "70", "references": [{"title": " \"Refactoring support for class library migration\"", "authors": ["I. Balaban", " F. Tip ", " R. Fuhrer"]}, {"title": " \"Javar: A prototype Java restructuring compiler\"", "authors": ["A. J. C. Bik", " J. E. Villacis ", " D. Gannon"]}, {"title": " \"How do programs become more concurrent? A story of program transformations\"", "authors": ["D. Dig", " J. Marrero ", " M. D. Ernst"]}, {"title": " \"Automated transformation of sequential divide-and-conquer algorithms into parallel programs\"", "authors": ["B. Freisleben ", " T. Kielmann"]}, {"title": " \"PFC: A program to convert Fortran to parallel form\"", "authors": ["J.R. Allen ", " K. Kennedy"]}, {"title": " \"Analysis and transformation in the Parascope editor\"", "authors": ["K. Kennedy", " K. S. McKinley ", " C.-W. Tseng"]}, {"title": " \"A Java fork/join framework\"", "authors": ["D. Lea"]}, {"title": " \"SuifExplorer: an interactive and interprocedural parallelizer\"", "authors": ["S.-W. Liao", " A. Diwan", " J. Robert", " P. Bosch", " A. Ghuloum ", " M. S. Lam"]}, {"title": " \"Automatic parallelization of divide and conquer algorithms\"", "authors": ["R. Rugina ", " M. C. Rinard"]}, {"title": " \"Associating synchronization constraints with data in an object-oriented language\"", "authors": ["M. Vaziri", " F. Tip ", " J. Dolby"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070993", "title": "Improving bug tracking systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Computer bugs", "Prototypes", "Computer science", "Laboratories", "Testing", "Delay effects", "Relational databases", "Usability", "Decision trees", "Data mining"], "abstract": "It is important that information provided in bug reports is relevant and complete in order to help resolve bugs quickly. However, often such information trickles to developers after several iterations of communication between developers and reporters. Poorly designed bug tracking systems are partly to blame for this exchange of information being stretched over time. Our paper addresses the concerns of bug tracking systems by proposing four broad directions for enhancements. As a proof-of-concept, we also demonstrate a prototype interactive bug tracking system that gathers relevant information from the user and identifies files that need to be fixed to resolve the bug.", "author": [{"name": "Thomas Zimmermann", "affiliation": "Microsoft Research Limited, Redmond, USA"}, {"name": "Rahul Premraj", "affiliation": "Vrije Universiteit Amsterdam, Netherlands"}, {"name": "Jonathan Sillito", "affiliation": "Department of Computer Science, University of Calgary, Canada"}, {"name": "Silvia Breu", "affiliation": "Computer Laboratory, University of Cambridge, UK"}], "time": "May 2009", "citationCount": "19", "references": []},
{"doi": "10.1109/ICSE.2007.86", "title": "The Role of Experience and Ability in Comprehension Tasks Supported by UML Stereotypes", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Unified modeling language", "Testing", "Navigation", "Performance evaluation", "Web design", "Code standards", "Information resources", "Software engineering", "Impedance"], "abstract": "Proponents of design notations tailored for specific application domains or reference architectures, often available in the form of UML stereotypes, motivate them by improved understandability and modifiability. However, empirical studies that tested such claims report contradictory results, where the most intuitive notations are not always the best performing ones. This indicates the possible existence of relevant influencing factors, other than the design notation itself. In this work we report the results of a family of three experiments performed at different locations and with different subjects, in which we assessed the effectiveness of UML stereotypes for Web design in support to comprehension tasks. Replications with different subjects allowed us to investigate whether subjects' ability and experience play any role in the comprehension of stereotyped diagrams. We observed different behaviors of users with different degrees of ability and experience, which suggests alternative comprehension strategies of (and tool support for) different categories of users.", "author": [{"name": "Filippo Ricca", "affiliation": "ITC IRST, Trento, Italy"}, {"name": "Massimiliano Di Penta", "affiliation": "RCOST, University of Sannio, Benevento, Italy"}, {"name": "Marco Torchiano", "affiliation": "Politecnico di Turino, Italy"}, {"name": "Paolo Tonella", "affiliation": "ITC IRST, Trento, Italy"}, {"name": "Mariano Ceccato", "affiliation": "ITC IRST, Trento, Italy"}], "time": "May 2007", "citationCount": "28", "references": []},
{"doi": "10.1109/ICSE.2009.5070540", "title": "Maintaining and evolving GUI-directed test scripts", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Graphical user interfaces", "Automatic testing", "Logic testing", "Automation", "Performance evaluation", "Maintenance engineering", "Writing", "Costs", "Runtime", "Manuals"], "abstract": "Since manual black-box testing of GUI-based applications (GAPs) is tedious and laborious, test engineers create test scripts to automate the testing process. These test scripts interact with GAPs by performing actions on their GUI objects. An extra effort that test engineers put in writing test scripts is paid off when these scripts are run repeatedly. Unfortunately, releasing new versions of GAPs with modified GUIs breaks their corresponding test scripts thereby obliterating benefits of test automation. We offer a novel approach for maintaining and evolving test scripts so that they can test new versions of their respective GAPs. We built a tool to implement our approach, and we conducted a case study with forty five professional programmers and test engineers to evaluate this tool. The results show with strong statistical significance that users find more failures and report fewer false positives (p < 0.02) in test scripts with our tool than with a flagship industry product and a baseline manual approach. Our tool is lightweight and it takes less than eight seconds to analyze approximately 1KLOC of test scripts.", "author": [{"name": "Mark Grechanik", "affiliation": "Accenture Technology Laboratories, Chicago, IL, USA"}, {"name": "Qing Xie", "affiliation": "Accenture Technology Laboratories, Chicago, IL, USA"}, {"name": "Chen Fu", "affiliation": "Accenture Technology Laboratories, Chicago, IL, USA"}], "time": "May 2009", "citationCount": "59", "references": [{"title": " \"On the limit of control flow analysis for regression test selection\"", "authors": ["T. Ball"]}, {"title": " \"Worldwide distributed automated software quality tools: 2007\u20132011 forecast and 2006 vendor shares\"", "authors": ["M.-C. Ballou"]}, {"title": " \"Software Testing Techniques\" in Van Nostrand Reinhold", "authors": ["B. Beizer"]}, {"title": " \"Observations and lessons learned from automated testing\"", "authors": ["S. Berner", " R. Weber ", " R. K. Keller"]}, {"title": " \"Software testing research: Achievements challenges dreams\" in FOSE \u201807:2007 Future of Software Engineering", "authors": ["A. Bertolino"]}, {"title": " \"A comparative study of coarse and fine-grained safe regression test-selection techniques\"", "authors": ["J. Bible", " G. Rothermel ", " D. S. Rosenblum"]}, {"title": " \"Reducing the cost of regression testing by semantics guided test case selection\"", "authors": ["D. Binkley"]}, {"title": " \"A methodology for controlling the size of a test suite\"", "authors": ["M. J. Harrold", " R. Gupta ", " M. L. Soffa"]}, {"title": " \"Improving the maintainability of automated test suites\"", "authors": ["C. Kaner"]}, {"title": " \"A history-based test prioritization technique for regression testing in resource constrained environments\"", "authors": ["J.-M. Kim ", " A. A. Porter"]}, {"title": " \"On regression testing of object-oriented programs\"", "authors": ["D. C. Kung", " J. Gao", " P. Hsia", " Y. Toyoshima ", " C. Chen"]}, {"title": " \"Regression testing of GUIs\"", "authors": ["A. M. Memon ", " M.L. Soffa"]}, {"title": " \"Why are human-computer interfaces difficult to design and implement?\"", "authors": ["B. A. Myers"]}, {"title": " \"Chianti: a tool for change impact analysis of java programs\"", "authors": ["X. Ren", " F. Shah", " F. Tip", " B. G. Ryder ", " O. Chesley"]}, {"title": " \"Test-suite augmentation for evolving software\"", "authors": ["R. A. Santelices", " P. K. Chittimalli", " T. Apiwattanapong", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Model-based testing of community-driven open-source GUI applications\"", "authors": ["Q. Xie ", " A. M. Memon"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070994", "title": "Towards a framework for law-compliant software requirements", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Law", "Legal factors", "Privacy", "Programming", "Ontologies", "Government", "Protection", "Organizational aspects", "Information systems", "Medical services"], "abstract": "During the requirements elicitation phase, analysts have often to take into consideration laws and regulations enacted by different levels of government. The purpose of this paper is twofold. First, a systematic process is outlined which, given a problem and a collection of legal prescriptions, generates a set of requirements that address the problem while complying with the prescriptions. Second, the conceptual framework is outlined, which characterises the process by providing both legal concepts proposed in theoretical studies in the legal domain and concepts from goal-oriented requirements engineering. The issues and challenges of the proposed framework are also evaluated, with regard to expected results.", "author": [{"name": "Alberto Siena", "affiliation": "FBK-Irst, Trento, Italy"}, {"name": "Anna Perini", "affiliation": "University of Trento, Trento, Italy"}, {"name": "Angelo Susi", "affiliation": "FBK-Irst, Trento, Italy"}, {"name": "John Mylopoulos", "affiliation": "FBK-Irst, Trento, Italy"}], "time": "May 2009", "citationCount": "10", "references": []},
{"doi": "10.1109/ICSE.2007.44", "title": "Information Hiding and Visibility in Interface Specifications", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Protection", "Packaging", "Java", "Documentation", "Testing", "Specification languages", "Contracts", "Formal specifications", "Software engineering", "Upper bound"], "abstract": "Information hiding controls which parts of a class are visible to non-privileged and privileged clients (e.g., subclasses). This affects detailed design specifications in two ways. First, specifications should not expose hidden class members. As noted in previous work, this is important because such hidden members are not meaningful to all clients. But it also allows changes to hidden implementation details without invalidating correctness proofs for client code, which is important for maintaining verified programs. Second, to enable sound modular reasoning, certain specifications must be visible to clients. We present rules for information hiding in specifications for Java-like languages, and demonstrate their application to the specification language JML. These rules restrict proof obligations to only mention visible class members, but retain soundness. This allows maintenance of implementations and their specifications without affecting client reasoning.", "author": [{"name": "Gary T. Leavens", "affiliation": "Iowa State University, Ames, Iowa, USA"}, {"name": "Peter Muller", "affiliation": "ETH Zurich, Switzerland"}], "time": "May 2007", "citationCount": "14", "references": []},
{"doi": "10.1109/ICSE.2009.5070541", "title": "MINTS: A general framework and tool for supporting test-suite minimization", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software testing", "Encoding", "System testing", "Performance evaluation", "Integer linear programming", "Minimization methods", "Software maintenance", "Automatic testing", "Educational institutions", "Fault detection"], "abstract": "Test-suite minimization techniques aim to eliminate redundant test cases from a test-suite based on some criteria, such as coverage or fault-detection capability. Most existing test-suite minimization techniques have two main limitations: they perform minimization based on a single criterion and produce suboptimal solutions. In this paper, we propose a test-suite minimization framework that overcomes these limitations by allowing testers to (1) easily encode a wide spectrum of test-suite minimization problems, (2) handle problems that involve any number of criteria, and (3) compute optimal solutions by leveraging modern integer linear programming solvers. We implemented our framework in a tool, called MINTS, that is freely-available and can be interfaced with a number of different state-of-the-art solvers. Our empirical evaluation shows that MINTS can be used to instantiate a number of different test-suite minimization problems and efficiently find an optimal solution for such problems using different solvers.", "author": [{"name": "Hwa-You Hsu", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}, {"name": "Alessandro Orso", "affiliation": "College of Computing, Georgia Institute of Technology, USA"}], "time": "May 2009", "citationCount": "55", "references": [{"title": " \"Efficient coverage testing using global dominator graphs\"", "authors": ["H. Agrawal"]}, {"title": " \"On extending SAT solvers for PB problems\"", "authors": ["D. L. Berre ", " A. Parrain"]}, {"title": " \"Bi-criteria models for all-uses test suite reduction\"", "authors": ["J. Black", " E. Melachrinoudis ", " D. Kaeli"]}, {"title": " \"A greedy heuristic for the set-covering problem\" in Mathematics of Operations Research", "authors": ["V. Chavatal"]}, {"title": " \"A methodology for controlling the size of a test suite\"", "authors": ["M. J. Harrold", " R. Gupta ", " M. L. Soffa"]}, {"title": " \"Improving fault detection capability by selectively retaining test cases during test suite reduction\"", "authors": ["D. Jeffrey ", " N. Gupta"]}, {"title": " \"A history-based test prioritization technique for regression testing in resource constrained environments\"", "authors": ["J.-M. Kim ", " A. Porter"]}, {"title": " \"A cost model to compare regression test strategies\"", "authors": ["H. K. N. Leung ", " L. J. White"]}, {"title": " \"Using spanning set for coverage testing\"", "authors": ["M. Marre ", " A. Bertolino"]}, {"title": " \"A safe efficient regression test selection technique\"", "authors": ["G. Rothermel ", " M. J. Harrold"]}, {"title": " \"An empirical study of the effects of minimization on the fault-detection capabilities of test suites\"", "authors": ["G. Rothermel", " M. J. Harrold", " J. Ostrin ", " C. Hong"]}, {"title": " \"Test Case Prioritization\"", "authors": ["G. Rothermel", " R. H. Untch", " C. Chu ", " M. J. Harrold"]}, {"title": " \"Effectively prioritizing tests in development environment\"", "authors": ["A. Srivastava ", " J. Thiagarajan"]}, {"title": " \"A concept analysis inspired greedy algorithm for test suite minimization\"", "authors": ["S. Tallam ", " N. Gupta"]}, {"title": " \"Pythia: A regression test selection tool based on text differencing\"", "authors": ["F. Vokolos ", " P. Frankl"]}, {"title": " \"Effect of test set minimization on fault detection effectiveness\"", "authors": ["W. E. Wong", " J. R. Horgan", " S. London ", " A. P. Mathur"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070995", "title": "Design tests: An approach to programmatically check your code against design rules", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software testing", "Automatic testing", "Java", "Programming profession", "Computer languages", "Documentation", "Software quality", "Algorithm design and analysis", "Computer science", "XML"], "abstract": "Assuring that a program conforms to its specification is a key concern in software quality assurance. Although there is substantial tool support to check whether an implementation complies to its functional requirements, checking whether it conforms to its design remains as an almost completely manual activity. In this paper, we present the concept of design tests, which are test-like programs that automatically check whether an implementation conforms to a specific design rule. Design rules are implemented directly in the target programming language in the form of tests. As a proof of concept, we present DesignWizard, an API developed to support design tests for Java programs as JUnit test cases. We applied design tests in two case studies and observed that our approach is suitable to check conformance automatically. Moreover, we observed that designers and programmers appreciate design tests as an executable documentation that can be easily kept up to date.", "author": [{"name": "Joao Brunet", "affiliation": "Department of Computer Science Campina Grande-PB, Federal University of Campina Grande, Brazil"}, {"name": "Dalton Guerrero", "affiliation": "Department of Computer Science Campina Grande-PB, Federal University of Campina Grande, Brazil"}, {"name": "Jorge Figueiredo", "affiliation": "Department of Computer Science Campina Grande-PB, Federal University of Campina Grande, Brazil"}], "time": "May 2009", "citationCount": "11", "references": []},
{"doi": "10.1109/ICSE.2007.94", "title": "Using GUI Run-Time State as Feedback to Generate Test Cases", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Graphical user interfaces", "Runtime", "State feedback", "Automatic testing", "Application software", "Software testing", "Open source software", "Costs", "Computer science", "Educational institutions"], "abstract": "This paper presents a new automated model-driven technique to generate test cases by using feedback from the execution of a \"seed test suite\" on an application under test (AUT). The test cases in the seed suite are designed to be generated automatically and executed very quickly. During their execution, feedback obtained from the AUT's run-time state is used to generate new, \"improved\" test cases. The new test cases subsequently become part of the seed suite. This \"anytime technique\" continues iteratively, generating and executing additional test cases until resources are exhausted or testing goals have been met. The feedback-based technique is demonstrated for automated testing of graphical user interfaces (GUIs). An existing abstract model of the GUI is used to automatically generate the seed test suite. It is executed; during its execution, state changes in the GUI pinpoint important relationships between GUI events, which evolve the model and help to generate new test cases. Together with a reverse- engineering algorithm used to obtain the initial model and seed suite, the feedback-based technique yields a fully automatic, end-to-end GUI testing process. A feasibility study on four large fielded open-source software (OSS) applications demonstrates that this process is able to significantly improve existing techniques and help identify/report serious problems in the OSS. In response, these problems have been fixed by the developers of the OSS in subsequent versions.", "author": [{"name": "Xun Yuan", "affiliation": "Department of Computer Science, University of Maryland, College Park, MD, USA"}, {"name": "Atif M. Memon", "affiliation": "Department of Computer Science, University of Maryland, College Park, MD, USA"}], "time": "May 2007", "citationCount": "50", "references": []},
{"doi": "10.1109/ICSE.2009.5070542", "title": "Synthesizing intensional behavior models by graph transformation", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Documentation", "Runtime", "Inspection", "Formal specifications", "Service oriented architecture", "Contracts", "Writing", "Web services", "Java", "Containers"], "abstract": "This paper describes an approach (SPY) to recovering the specification of a software component from the observation of its run-time behavior. It focuses on components that behave as data abstractions. Components are assumed to be black boxes that do not allow any implementation inspection. The inferred description may help understand what the component does when no formal specification is available. SPY works in two main stages. First, it builds a deterministic finite-state machine that models the partial behavior of instances of the data abstraction. This is then generalized via graph transformation rules. The rules can generate a possibly infinite number of behavior models, which generalize the description of the data abstraction under an assumption of ldquoregularityrdquo with respect to the observed behavior. The rules can be viewed as a likely specification of the data abstraction. We illustrate how SPY works on relevant examples and we compare it with competing methods.", "author": [{"name": "Carlo Ghezzi", "affiliation": "DeepSE Group at DEI, Politecnico di Milano, Milan, Italy"}, {"name": "Andrea Mocci", "affiliation": "DeepSE Group at DEI, Politecnico di Milano, Milan, Italy"}, {"name": "Mattia Monga", "affiliation": "DICo, Universit\u00e0 degli Studi di Milano, Milan, Italy"}], "time": "May 2009", "citationCount": "40", "references": [{"title": " \"Using graph transformation systems to specify and verify data abstractions\"", "authors": ["L. Baresi", " C. Ghezzi", " A. Mocci ", " M. Monga"]}, {"title": " \"Towards the reverse engineering of UML sequence diagrams\"", "authors": ["L. C. Bri", "", " Y. Labiche ", " Y. Miao"]}, {"title": " \"Object distance and its application to adaptive random testing of object-oriented programs\"", "authors": ["I. Ciupa", " A. Leitner", " M. Oriol ", " B. Meyer"]}, {"title": " \"DySy: dynamic symbolic execution for invariant inference\"", "authors": ["C. Csallner", " N. Tillmann ", " Y. Smaragdakis"]}, {"title": " \"Mining object behavior with Adabu\"", "authors": ["V. Dallmeier", " C. Lindig", " A. Wasylkowski ", " A. Zeller"]}, {"title": " \"A note on two problems in connexion with graphs\"", "authors": ["E. W. Dijkstra"]}, {"title": " \"The ASTOOT approach to testing object-oriented programs\"", "authors": ["R. Doong ", " P. G. Frankl"]}, {"title": " \"Fundamentals of Algebraic Graph Transformation\" in EATCS Monographs in TCS", "authors": ["H. Ehrig", " K. Ehrig", " U. Prange ", " G. Taentzer"]}, {"title": " \"Efficient recovery of algebraic specifications for stateful components\"", "authors": ["C. Ghezzi", " A. Mocci ", " M. Monga"]}, {"title": " \"Executable object modeling with statecharts\"", "authors": ["D. Harel ", " E. Gery"]}, {"title": " \"Discovering documentation for Java container classes\"", "authors": ["J. Henkel", " C. Reichenbach ", " A. Diwan"]}, {"title": " \"Service-oriented computing: Key concepts and principles\"", "authors": ["M. N. Huhns ", " M. P. Singh"]}, {"title": " \"JML: A notation for detailed design\" in Behavioral Specifications of Businesses and Systems", "authors": ["G. T. Leavens", " A. L. Baker ", " C. Ruby"]}, {"title": " \"Limits of the \u201calgebraic\u201d specification of abstract data types\"", "authors": ["M. E. Majster"]}, {"title": " \"Design by Contract: The Eiffel Method\"", "authors": ["B. Meyer"]}, {"title": " \"Lackwit: A program understanding tool based on type inference\"", "authors": ["R. O'Callahan ", " D. Jackson"]}, {"title": " \"Object naming analysis for reverse-engineered sequence diagrams\"", "authors": ["A. Rountev ", " B. H. Connell"]}, {"title": " \"AGG: A graph transformation environment for modeling and validation of software\" in Application of Graph Transformations with Industrial Relevance", "authors": ["G. Taentzer"]}, {"title": " \"Automatic extraction of abstract-object-state machines from unit-test executions\"", "authors": ["T. Xie", " E. Martin ", " H. Yuan"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070996", "title": "Can peer code reviews be exploited for later information needs?", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Inspection", "Software quality", "Software performance", "Knowledge engineering", "Costs", "Open source software", "Cognitive science", "Fault diagnosis", "Taxonomy", "Project management"], "abstract": "Code reviews have proven to be an effective means of improving overall software quality. During the review, there is an exchange of knowledge between the code author and reviewer that concerns the code being reviewed. We performed a study that looked at the code review practices of software product teams at Microsoft. The study results indicated that code reviews are a point at which design rationale is explicitly stated, but that retention and recovery of this information is not well supported in the current environment. The results also indicated that code reviews in collocated development environments such as Microsoft use a mix of face-to-face and electronic communication.", "author": [{"name": "Andrew Sutherland", "affiliation": "University of Saskatchewan, Canada"}, {"name": "Gina Venolia", "affiliation": "Microsoft Research Limited, USA"}], "time": "May 2009", "citationCount": "18", "references": [{"title": " \"Software Inspections and the Industrial Production of Software\"", "authors": ["A. F. Ackerman", " P. J. Fowler ", " R. J. Ebenau"]}, {"title": " \"Software Inspections: an Effective Verification Process\"", "authors": ["A. F. Ackerman", " L. S. Buchwalk ", " F. H. Lewski"]}, {"title": " \"ICICLE: Groupware for Code Inspection\"", "authors": ["L. Brothers", " V. Sembugamoorthy", " ", " M. Muller"]}, {"title": " \"Design and Code Inspections to Reduce Errors in Program Development\"", "authors": ["M. Fagan"]}, {"title": " \"Scrutiny: A Collaborative Inspection and Review System\"", "authors": ["J. Gintell", " J. Arnold", " J. Houde", " J. Kruszelnicki", " R. McKenney", " ", " G. Memmi"]}, {"title": " \"Collaboration", "authors": ["J. P. Johnson"]}, {"title": " \"Information Needs in Collocated Software Development Teams\"", "authors": ["A. J. Ko", " R. DeLine", " G. Venolia"]}, {"title": " \"A Survey of Software Inspection Technologies\"", "authors": ["O. Laitenberger"]}, {"title": " \"Maintaining Mental Models: A Study of Developer Work Habits\"", "authors": ["T. D. LaToza", " G. Venolia", " ", " R. DeLine"]}, {"title": " \"CAIS: Collaborative Asynchronous Inspection of Software\"", "authors": ["V. Mashayekhi", " C. Feulner", " ", " J. Riedl"]}, {"title": " \"Open source software peer review practices: A case study of the Apache server\". In ACM/IEEE International Conference on Software Engineering (ICSE'08)", "authors": ["P. Rigby", " D. M. German", " ", " M. A. Storey"]}, {"title": " \"The Effectiveness of Software Development Technical Reviews: A Behaviorally Motivated Program of Research\"", "authors": ["C. Sauer", " D. R. Jeffrey", " L. L", "", " ", " P. Yetton"]}, {"title": " \"A Case Study of Distributed Asynchronous Software Inspections\"", "authors": ["M. Stein", " J. Riedl", " S. J. Harner", " ", " V. Mashayekhi"]}, {"title": " \"Software Development at Microsoft Observed\"", "authors": ["G. Venolia", " R. DeLine", " T. LaToza"]}]},
{"doi": "10.1109/ICSE.2007.18", "title": "Automated Generation of Context-Aware Tests", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Automatic testing", "Context-aware services", "Application software", "Middleware", "Computer science", "System testing", "Logic testing", "Performance evaluation", "Feeds", "Maintenance engineering"], "abstract": "The incorporation of context-awareness capabilities into pervasive applications allows them to leverage contextual information to provide additional services while maintaining an acceptable quality of service. These added capabilities, however, introduce a distinct input space that can affect the behavior of these applications at any point during their execution, making their validation quite challenging. In this paper, we introduce an approach to improve the test suite of a context-aware application by identifying context-aware program points where context changes may affect the application's behavior, and by systematically manipulating the context data fed into the application to increase its exposure to potentially valuable context variations. Preliminary results indicate that the approach is more powerful than existing testing approaches used on this type of application.", "author": [{"name": "Zhimin Wang", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, Lincolnshire, NE, USA"}, {"name": "Sebastian Elbaum", "affiliation": "Department of Computer Science and Engineering, University of Nebraska, Lincoln, Lincolnshire, NE, USA"}, {"name": "David S. Rosenblum", "affiliation": "Department of Computer Science, University College London, London, UK"}], "time": "May 2007", "citationCount": "38", "references": []},
{"doi": "10.1109/ICSE.2009.5070543", "title": "Analyzing critical process models through behavior model synthesis", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Performance analysis", "Decision trees", "Cancer", "Unified modeling language", "Radio control", "Medical services", "Flowcharts", "System recovery", "Assembly", "Medical treatment"], "abstract": "Process models capture tasks performed by agents together with their control flow. Building and analyzing such models is important but difficult in certain areas such as safety-critical healthcare processes. Tool-supported techniques are needed to find and correct flaws in such processes. On another hand, event-based formalisms such as Labeled Transition Systems (LTS) prove effective for analyzing agent behaviors. The paper describes a blend of state-based and event-based techniques for analyzing task models involving decisions. The input models are specified as guarded high-level message sequence charts, a language allowing us to integrate material provided by stakeholders such as multi-agent scenarios, decision trees, and flowchart fragments. The input models are compiled into guarded LTS, where transition guards on fluents support the integration of state-based and event-based analysis. The techniques supported by our tool include model checking against process-specific properties, invariant generation, and the detection of incompleteness, unreachability, and undesirable non-determinism in process decisions. They are based on a trace semantics of process models, defined in terms of guarded LTS, which are in turn defined in terms of pure LTS. The techniques complement our previous palette for synthesizing behavior models from scenarios and goals. The paper also describes our preliminary experience in analyzing cancer treatment processes using these techniques.", "author": [{"name": "Christophe Damas", "affiliation": "D\u00e9partement dIng\u00e9nierie Informatique, Universit\u00e9 Catholique de Louvain, Belgium"}, {"name": "Bernard Lambeau", "affiliation": "D\u00e9partement dIng\u00e9nierie Informatique, Universit\u00e9 Catholique de Louvain, Belgium"}, {"name": "Francois Roucoux", "affiliation": "Facult\u00e9 de M\u00e9decine (UCL), Radioth\u00e9rapie Exp\u00e9rimentale (IMRE), Belgium"}, {"name": "Axel van Lamsweerde", "affiliation": "D\u00e9partement dIng\u00e9nierie Informatique, Universit\u00e9 Catholique de Louvain, Belgium"}], "time": "May 2009", "citationCount": "16", "references": [{"title": " \"Integrated care pathways\"", "authors": ["H. Campbell", " R. Hotchkiss", " N. Bradshaw ", " M. Porteous"]}, {"title": " \"Using software engineering technology to improve the quality of medical processes\"", "authors": ["L. A. Clarke", " G. A. Avrunin ", " L.J. Osterweil"]}, {"title": " \"Generating annotated behavior models from end-user scenarios\"", "authors": ["C. Damas", " B. Lambeau", " P. Dupont ", " A. van Lamsweerde"]}, {"title": " \"Scenarios goals and state machines: a win-win partnership for model synthesis\"", "authors": ["C. Damas", " B. Lambeau ", " A. van Lamsweerde"]}, {"title": " \"Symbolic model checking of UML activity diagrams\"", "authors": ["R. Eshuis"]}, {"title": " \"Disseminating Medical Knowledge - The ProForma Approach\"", "authors": ["J. Fox", " N. Johns ", " A. Rahmanzadeh"]}, {"title": " \"Fluent model checking for event-based systems\"", "authors": ["D. Giannakopoulou ", " J. Magee"]}, {"title": " \"Managing Exceptions in Medical Workflow Systems\"", "authors": ["M. Han", " T. Thiery ", " X. Song"]}, {"title": " \"Automated consistency checking of requirements specifications\"", "authors": ["C.L. Heitmeyer", " R. D. Jeffords ", " B. G. Labaw"]}, {"title": " \"Modeling Computer-Supported Clinical Guidelines and Protocols: A Survey\"", "authors": ["S. Kaiser ", " S. Miksch"]}, {"title": " \"Model Checking of Workflow Schemas\"", "authors": ["C. T. Karamanolis", " D. Giannakopoulou", " J. Magee ", " S. M. Wheater"]}, {"title": " \"Handling obstacles in goal-oriented requirements engineering\"", "authors": ["A. van Lamsweerde ", " E. Letier"]}, {"title": " \"Verifying process models built using parameterised state machines\"", "authors": ["B. S. Lerner"]}, {"title": " \"Synthesis of behavioral models from scenarios\"", "authors": ["S. Uchitel", " J. Kramer ", " J. Magee"]}, {"title": " \"Incremental elaboration of scenario-based specifications and behavior models using implied scenarios\"", "authors": ["S. Uchitel", " J. Kramer ", " J. Magee"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070997", "title": "Codebook: Social networking over code", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Bridges", "Computer bugs", "Electronic mail", "Software", "Social network services", "History", "Data mining"], "abstract": "Social networking systems help people maintain connections to their friends, enabling awareness, communication, and collaboration, especially at a distance. In many studies of coordination in software engineering, the work artifacts, e.g. code, bugs, specifications, are themselves the objects that link engineers together. In this paper, we introduce Codebook, a social networking Web service in which people can be ldquofriendsrdquo not only with other people but with the work artifacts they share with them. Providing a Web interface to the graph of these connections will enable software engineers to keep track of task dependencies, discover and maintain connections to other teams, and understand the history and rationale behind the code that they work on and use.", "author": [{"name": "Andrew Begel", "affiliation": "Microsoft Research Limited, USA"}, {"name": "Robert DeLine", "affiliation": "Microsoft Research Limited, USA"}], "time": "May 2009", "citationCount": "13", "references": []},
{"doi": "10.1109/ICSE.2007.41", "title": "Hybrid Concolic Testing", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Concrete", "Software testing", "State-space methods", "Automatic testing", "Interleaved codes", "Data structures", "Software engineering", "Computer bugs", "Performance evaluation", "Debugging"], "abstract": "We present hybrid concolic testing, an algorithm that interleaves random testing with concolic execution to obtain both a deep and a wide exploration of program state space. Our algorithm generates test inputs automatically by interleaving random testing until saturation with bounded exhaustive symbolic exploration of program points. It thus combines the ability of random search to reach deep program states quickly together with the ability of concolic testing to explore states in a neighborhood exhaustively. We have implemented our algorithm on top of CUTE and applied it to obtain better branch coverage for an editor implementation (VIM 5.7, 150 K lines of code) as well as a data structure implementation in C. Our experiments suggest that hybrid concolic testing can handle large programs and provide, for the same testing budget, almost 4times the branch coverage than random testing and almost 2times that of concolic testing.", "author": [{"name": "Rupak Majumdar", "affiliation": "CS Department, University of California, Los Angeles, USA"}, {"name": "Koushik Sen", "affiliation": "EECS Department, University of California Berkeley, USA"}], "time": "May 2007", "citationCount": "148", "references": []},
{"doi": "10.1109/ICSE.2009.5070544", "title": "Validation of contracts using enabledness preserving finite state abstractions", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Contracts", "Software engineering", "Protocols", "Writing", "Educational institutions", "Debugging", "Application software", "Runtime", "Automata", "State-space methods"], "abstract": "Pre/post condition-based specifications are common-place in a variety of software engineering activities that range from requirements through to design and implementation. The fragmented nature of these specifications can hinder validation as it is difficult to understand if the specifications for the various operations fit together well. In this paper we propose a novel technique for automatically constructing abstractions in the form of behaviour models from pre/post condition-based specifications. The level of abstraction at which such models are constructed preserves enabledness of sets of operations, resulting in a finite model that is intuitive to validate and which facilitates tracing back to the specification for debugging. The paper also reports on the application of the approach to an industrial strength protocol specification in which concerns were identified.", "author": [{"name": "Guido de Caso", "affiliation": "Departamento de Computaci\u00f2n, UBA, Buenos Aires, Argentina"}, {"name": "Victor Braberman", "affiliation": "Departamento de Computaci\u00f2n, UBA, Buenos Aires, Argentina"}, {"name": "Diego Garbervetsky", "affiliation": "Departamento de Computaci\u00f2n, UBA, Buenos Aires, Argentina"}, {"name": "Sebastian Uchitel", "affiliation": "Department of Computing, Imperial College London, UK"}], "time": "May 2009", "citationCount": "6", "references": [{"title": " \"Synthesis of interface specifications for Java classes\"", "authors": ["R. Alur", " P. Cern\u00fd", " P. Madhusudan ", " W. Nam"]}, {"title": " \"The SLAM project: debugging system software via static analysis\"", "authors": ["T. Ball ", " S. Rajamani"]}, {"title": " \"CVC Lite: A new implementation of the cooperating validity checker\"", "authors": ["C. Barrett ", " S. Berezin"]}, {"title": " \"The Daikon system for dynamic detection of likely invariants\"", "authors": ["M. D. Ernst", " J. H. Perkins", " P. J. Guo", " S. McCamant", " C. Pacheco", " M. S. Tschantz", " ."]}, {"title": " \"Symbolic mining of temporal specifications\"", "authors": ["M. Gabel ", " Z. Su"]}, {"title": " \"Model-based quality assurance of Windows protocol documentation\"", "authors": ["W. Grieskamp", " N. Kicillof", " D. MacDonald", " A. N", "an", " K. Stobie ", " F. L. Wurden"]}, {"title": " \"Action machines: a framework for encoding and composing partial behaviors\"", "authors": ["W. Grieskamp", " N. Kicillof ", " N. Tillmann"]}, {"title": " \"Online minimization of transition systems (extended abstract)\"", "authors": ["D. Lee ", " M. Yannakakis"]}, {"title": " \"Deriving event-based transition systems from goal-oriented requirements models\"", "authors": ["E. Letier", " J. Kramer", " J. Magee ", " S. Uchitel"]}, {"title": " \"ProB: an automated analysis toolset for the B method\"", "authors": ["M. Leuschel ", " M. Butler"]}, {"title": " \"RFC1508: Generic Security Service Application Program Interface\"", "authors": ["J. Linn"]}, {"title": " \"Applying design by contract\"", "authors": ["B. Meyer"]}, {"title": " \"Automatic Test Generation: A Use Case Driven Approach\"", "authors": ["C. Nebut", " F. Fleurey", " Y. Le Traon ", " J. J\u00e9z\u00e9quel"]}, {"title": " \"A practical approach to programming with assertions\"", "authors": ["D. S. Rosenblum"]}, {"title": " \"Design Synthesis from Interaction and State-Based Specifications\"", "authors": ["J. Sun ", " J. Dong"]}, {"title": " \"Analysis of Timed Systems Using Time-Abstracting Bisimulations\"", "authors": ["S. Tripakis ", " S. Yovine"]}, {"title": " \"Goal-oriented requirements animation\"", "authors": ["H. Van", " A. Lamsweerdevan", " P. Massonet ", " C. Ponsard"]}, {"title": " \"Generating Statechart Designs from Scenarios\"", "authors": ["J. Whittle ", " J. Schumann"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070998", "title": "A specification idiom for reactive systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Programming profession", "Computer networks", "Embedded computing", "Application software", "Software libraries", "Java", "Software design", "Contracts", "Embedded system", "Sensor systems and applications"], "abstract": "Interrupt- and event-driven applications constitute an important system class, with connections to desktop computing, embedded systems, and sensor networks. We refer to this set of applications collectively as reactive systems. In this paper, we present a specification idiom for documenting reactive system behavior. Specifically, we discuss an approach to documenting split-phase operations - operations that involve a request, followed by a deferred out-of-context callback. We derive the idiom by example using interfaces from the TinyOS library, a popular component library for sensor network applications. We conclude with a broader discussion of specification idioms for reactive systems.", "author": [{"name": "Nigamanth Sridhar", "affiliation": "Electrical and Computer Engineering, Cleveland State University, USA"}, {"name": "Jason O. Hallstrom", "affiliation": "School of Computing, Clemson University, USA"}], "time": "May 2009", "citationCount": 0, "references": [{"title": "B. Meyer. Applying \"design by contract\". Computer", "authors": []}]},
{"doi": "10.1109/ICSE.2007.71", "title": "Refactoring-Aware Configuration Management for Object-Oriented Programs", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Merging", "History", "Programming profession", "Java", "Software algorithms", "Runtime", "Software engineering", "Scattering", "Manuals"], "abstract": "Current text based software configuration management (SCM) systems have trouble with refactorings. Refactorings result in global changes and lead to merge conflicts. A refactoring-aware SCM system reduces merge conflicts, preserves program history better and makes it easier to understand program evolution. This paper describes MolhadoRef a refactoring-aware SCM system and the merge algorithm at its core. MolhadoRef records change operations (refactorings and edits) used to produce one version, and replays them when merging versions. Since refactorings are change operations with well defined semantics, MolhadoRef treats them intelligently. A case-study shows that MolhadoRef solves automatically more merge conflicts than CVS while resulting in fewer merge errors.", "author": [{"name": "Danny Dig", "affiliation": "University of Illinois, Urbana-Champaign, USA"}, {"name": "Kashif Manzoor", "affiliation": "University of Illinois, Urbana-Champaign, USA"}, {"name": "Ralph Johnson", "affiliation": "University of Illinois, Urbana-Champaign, USA"}, {"name": "Tien N. Nguyen", "affiliation": "Iowa State University, USA"}], "time": "May 2007", "citationCount": "45", "references": []},
{"doi": "10.1109/ICSE.2009.5070545", "title": "WISE: Automated test generation for worst-case complexity", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Automatic testing", "Computational complexity", "Computer bugs", "Data structures", "Algorithm design and analysis", "Jacobian matrices", "Benchmark testing", "Performance evaluation", "Performance analysis", "Programming profession"], "abstract": "Program analysis and automated test generation have primarily been used to find correctness bugs. We present complexity testing, a novel automated test generation technique to find performance bugs. Our complexity testing algorithm, which we call WISE (worst-case inputs from symbolic execution), operates on a program accepting inputs of arbitrary size. For each input size, WISE attempts to construct an input which exhibits the worst-case computational complexity of the program. WISE uses exhaustive test generation for small input sizes and generalizes the result of executing the program on those inputs into an ldquoinput generator.rdquo The generator is subsequently used to efficiently generate worst-case inputs for larger input sizes. We have performed experiments to demonstrate the utility of our approach on a set of standard data structures and algorithms. Our results show that WISE can effectively generate worst-case inputs for several of these benchmarks.", "author": [{"name": "Jacob Burnim", "affiliation": "EECS Department, University of California Berkeley, CA, USA"}, {"name": "Sudeep Juvekar", "affiliation": "EECS Department, University of California Berkeley, CA, USA"}, {"name": "Koushik Sen", "affiliation": "EECS Department, University of California Berkeley, CA, USA"}], "time": "May 2009", "citationCount": "48", "references": [{"title": " \"Finding and removing performance bottlenecks in large systems\" in ECOOP 2004 - Object-Oriented Programming", "authors": ["G. Ammons", " J.-D. Choi", " M. Gupta ", " N. Swamy"]}, {"title": " \"Generating Test from Counterexamples\"", "authors": ["D. Beyer", " A. J. Chlipala", " T. A. Hcnzinger", " R. Jhala ", " R. Majumdar"]}, {"title": " \"Automatic Generation of Random Self-Checking Test Cases\"", "authors": ["D. Bird ", " C. Munoz"]}, {"title": " \"Korat: Automated testing based on Java predicates\"", "authors": ["C. Boyapati", " S. Khurshid ", " D. Marinov"]}, {"title": " \"EXE: Automatically generating inputs of death\"", "authors": ["C. Cadar", " V. Ganesh", " P. Pawlowski", " D. Dill ", " D. Engler"]}, {"title": " \"A system to generate test data and symbolically execute programs\"", "authors": ["L. Clarke"]}, {"title": " \"Symbolic evaluation an aid to testing and verification\"", "authors": ["L. A. Clarke ", " D. J. Richardson"]}, {"title": " \"Synthesis of linear ranking functions\" in TACAS 2001: Tools and Algorithms for the Construction and Analysis of Systems", "authors": ["M. Col\u00f3n ", " H. Sipma"]}, {"title": " \"Efficient software model checking of data structure properties\"", "authors": ["P. T. Darga ", " C. Boyapati"]}, {"title": " \"An Empirical Study of the Robustness of Windows NT Applications Using Random Testing\"", "authors": ["J. E. Forrester ", " B. P. Miller"]}, {"title": " \"DART: Directed automated random testing\"", "authors": ["P. Godefroid", " N. Klarlund ", " K. Sen"]}, {"title": " \"Measuring empirical computational complexity\" in Foundations of software engineering (ESEC-FSE '07)", "authors": ["S. F. Goldsmith", " A. S. Aiken ", " D. S. Wilkerson"]}, {"title": " \"Gprof: A call graph execution profiler\"", "authors": ["S. L. Graham", " P. B. Kessler ", " M. K. Mckusick"]}, {"title": " \"A numerical abstract domain based on expression abstractionand max operatorwith application in timing analysis\"", "authors": ["B. S. Gulavani ", " S. Gulwani"]}, {"title": " \"Automated test data generation using an iterative relaxation method\"", "authors": ["N. Gupta", " A. P. Mathur ", " M. L. Soffa"]}, {"title": " \"Automatic derivation of loop bounds and infeasible paths for wcet analysis using abstract execution\"", "authors": ["J. Gustafsson", " A. Ermedahl", " C. S", "berg "]}, {"title": " \"Verification of real-time systems using linear relation analysis\"", "authors": ["N. Halbwachs", " Y. Proy ", " P. Roumanoff"]}, {"title": " \"Supporting timing analysis by automatic bounding of loop iterations\"", "authors": ["C. Healy", " M. Sj\u00f6din", " V. Rustagi", " D. Whalley ", " R. V. Engelen"]}, {"title": " \"Generalized symbolic execution for model checking and testing\"", "authors": ["S. Khurshid", " C. S. Pasareanu ", " W. Visser"]}, {"title": " \"Symbolic Execution and Program Testing\"", "authors": ["J. C. King"]}, {"title": " \"A dynamic Approach of Test Data Generation\"", "authors": ["B. Korel"]}, {"title": " \"A Semantic Model of Program Faults\"", "authors": ["J. Offut ", " J. Hayes"]}, {"title": " \"CUTE: A concolic unit testing engine for C\" in Foundations of Software Engineering (ESEC/FSE'05)", "authors": ["K. Sen", " D. Marinov ", " G. Agha"]}, {"title": " \"Game theoretic timing analysis\"", "authors": ["S. Seshia ", " A. Rakhlin"]}, {"title": " \"An information exploration tool for performance analysis of java programs\"", "authors": ["G. Sevitsky", " W. de Pauw ", " R. Konuru"]}, {"title": " \"Parameterized unit tests\"", "authors": ["N. Tillmann ", " W. Schulte"]}, {"title": " \"Test input generation with Java PathFinder\"", "authors": ["W. Visser", " C. S. Pasareanu ", " S. Khurshid"]}, {"title": " \"Determining bounds on execution times\" in Handbook on Embedded Systems", "authors": ["R. Wilhelm"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5070999", "title": "Deployment automation with BLITZ", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Automation", "Hardware", "Processor scheduling", "Real time systems", "Application software", "Software algorithms", "Scheduling algorithm", "Distributed computing", "Embedded computing", "Energy consumption"], "abstract": "Minimizing the computing infrastructure (such as processors) in a distributed real-time embedded (DRE) system deployment helps reduce system size, weight, power consumption, and cost. To support software components and applications on the computing infrastructure, the hardware must provide enough processors to ensure that all applications can be scheduled without missing real-time deadlines. In addition to ensuring scheduling constraints, sufficient resources (such as memory) must be available to the software. It is hard to identify the best way(s) of deploying software components on hardware processors to minimize computing infrastructure and meet complex DRE constraints. This paper provides the following contributions to the study of the deployment of software components to hardware in DRE systems: (1) we present an algorithmic deployment technique that minimizes the required number of processors, while adhering to real-time scheduling, resource, and co-location constraints, (2) we show how this technique can be augmented with a harmonic period heuristic to further reduce the number of required processors, and (3) we present empirical data from applying three different deployment algorithms for processor minimization to a flight avionics DRE system.", "author": [{"name": "Brian Dougherty", "affiliation": "Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, TN, USA"}, {"name": "Jules White", "affiliation": "Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, TN, USA"}, {"name": "Jaiganesh Balasubramanian", "affiliation": "Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, TN, USA"}, {"name": "Chris Thompson", "affiliation": "Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, TN, USA"}, {"name": "Douglas C. Schmidt", "affiliation": "Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, TN, USA"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.70", "title": "Refactoring for Parameterizing Java Classes", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Java", "Libraries", "Humans", "Programming profession", "Safety", "Computer languages"], "abstract": "Type safety and expressiveness of many existing Java libraries and their client applications would improve, if the libraries were upgraded to define generic classes. Efficient and accurate tools exist to assist client applications to use generic libraries, but so far the libraries themselves must be parameterized manually, which is a tedious, time-consuming, and error-prone task. We present a type- constraint-based algorithm for converting non-generic libraries to add type parameters. The algorithm handles the full Java language and preserves backward compatibility, thus making it safe for existing clients. Among other features, it is capable of inferring wildcard types and introducing type parameters for mutually-dependent classes. We have implemented the algorithm as a fully automatic refactoring in Eclipse. We evaluated our work in two ways. First, our tool parameterized code that was lacking type parameters. We contacted the developers of several of these applications, and in all cases they confirmed that the resulting parameterizations were correct and useful. Second, to better quantify its effectiveness, our tool parameterized classes from already-generic libraries, and we compared the results to those that were created by the libraries' authors. Our tool performed the refactoring accurately-in 87% of cases the results were as good as those created manually by a human expert, in 9% of cases the tool results were better, and in 4% of cases the tool results were worse.", "author": [{"name": "Adam Kiezun", "affiliation": "MIT CS and AI Laboratory, USA"}, {"name": "Michael D. Ernst", "affiliation": "MIT CS and AI Laboratory, USA"}, {"name": "Frank Tip", "affiliation": "IBM Thomas J. Watson Research Center, USA"}, {"name": "Robert M. Fuhrer", "affiliation": "IBM Thomas J. Watson Research Center, USA"}], "time": "May 2007", "citationCount": "26", "references": []},
{"doi": "10.1109/ICSE.2009.5070546", "title": "Taint-based directed whitebox fuzzing", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Libraries", "Automatic testing", "Character generation", "Law", "Legal factors", "Instruments", "Computer science", "Artificial intelligence", "Laboratories", "Open source software"], "abstract": "We present a new automated white box fuzzing technique and a tool, BuzzFuzz, that implements this technique. Unlike standard fuzzing techniques, which randomly change parts of the input file with little or no information about the underlying syntactic structure of the file, BuzzFuzz uses dynamic taint tracing to automatically locate regions of original seed input files that influence values used at key program attack points (points where the program may contain an error). BuzzFuzz then automatically generates new fuzzed test input files by fuzzing these identified regions of the original seed input files. Because these new test files typically preserve the underlying syntactic structure of the original seed input files, they tend to make it past the initial input parsing components to exercise code deep within the semantic core of the computation. We have used BuzzFuzz to automatically find errors in two open-source applications: Swfdec (an Adobe Flash player) and MuPDF (a PDF viewer). Our results indicate that our new directed fuzzing technique can effectively expose errors located deep within large programs. Because the directed fuzzing technique uses taint to automatically discover and exploit information about the input file format, it is especially appropriate for testing programs that have complex, highly structured input file formats.", "author": [{"name": "Vijay Ganesh", "affiliation": "Computer Science and Artificial Intelligence Laboratory, MIT, USA"}, {"name": "Tim Leek", "affiliation": "MIT Lincoln Laboratories, USA"}, {"name": "Martin Rinard", "affiliation": "Computer Science and Artificial Intelligence Laboratory, MIT, USA"}], "time": "May 2009", "citationCount": "108", "references": [{"title": " \"Rwset: Attacking path explosion in constraint-based test generation\"", "authors": ["P. Boonstoppel", " C. Cadar ", " D. R. Engler"]}, {"title": " \"Polyglot: automatic extraction of protocol message format using dynamic binary analysis\"", "authors": ["J. Caballero", " H. Yin", " Z. Liang ", " D. Song"]}, {"title": " \"EXE: Automatically generating inputs of death\"", "authors": ["C. Cadar", " V. Ganesh", " P. Pawlowski", " D. Dill ", " D. Engler"]}, {"title": " \"Grammar-based whitebox fuzzing\"", "authors": ["P. Godefroid", " A. Kiezun ", " M. Y. Levin"]}, {"title": " \"Dart: directed automated random testing\"", "authors": ["P. Godefroid", " N. Klarlund ", " K. Sen"]}, {"title": " \"Automated whitebox fuzz testing\"", "authors": ["P. Godefroid", " M. Y. Levin ", " D. Molnar"]}, {"title": " \"A functional method for assessing protocol implementation security\"", "authors": ["R. Kaksonen"]}, {"title": " \"High coverage detection of input-related security facults\"", "authors": ["E. Larson ", " T. Austin"]}, {"title": " \"Coverage maximization using dynamic taint tracing\"", "authors": ["T. Leek", " G. Baker", " R. Brown", " M. Zhivich ", " R. Lippmann"]}, {"title": " \"Deriving input syntactic structure from execution\"", "authors": ["Z. Lin ", " X. Zhang"]}, {"title": " \"An empirical study of the reliability of unix utilities\"", "authors": ["B. P. Miller", " L. Fredriksen ", " B. So"]}, {"title": " \"Catchconv: Symbolic execution and run-time type inference for integer conversion errors\"", "authors": ["D. Molnar ", " D. Wagner"]}, {"title": " \"Dynamic taint analysis for automatic detection analysis and signature generation of exploits on comnodity software\"", "authors": ["J. Newsome ", " D. Song"]}, {"title": " \"Automatically hardening web applications using precise tainting\"", "authors": ["A. Nguyen-Tuong", " S. Guarnieri", " D. Greene", " J. Shirley ", " D. Evans"]}, {"title": " \"Cute: a concolic unit testing engine for c\"", "authors": ["K. Sen", " D. Marinov ", " G. Agha"]}, {"title": " \"Automatic network protocol analysis\"", "authors": ["G. Wondracek", " P. M. Comparetti", " C. Kruegel ", " E. Kirda"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071000", "title": "Improving the reliability of mobile software systems through continuous analysis and proactive reconfiguration", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software systems", "Runtime", "Mobile computing", "Software reliability", "Computer crashes", "Uncertainty", "Hardware", "Context", "Computer science", "History"], "abstract": "Most of the current software reliability analysis approaches are geared to traditional desktop software systems, which are relatively stable and static throughout their execution. In this paper, we present a framework targeted at mobile computing domain that addresses the uncertainties associated with the reliability analysis in this setting. Moreover, the framework's architecture-centric reliability estimates are leveraged to improve the runtime reliability of the system through dynamic architectural reconfiguration.", "author": [{"name": "Sam Malek", "affiliation": "Department of Computer Science, George Mason University, USA"}, {"name": "Roshanak Roshandel", "affiliation": "Department of Computer Science & Software Engineering, Seattle University, USA"}, {"name": "David Kilgore", "affiliation": "Department of Computer Science, George Mason University, USA"}, {"name": "Ibrahim Elhag", "affiliation": "Department of Computer Science, George Mason University, USA"}], "time": "May 2009", "citationCount": "7", "references": []},
{"doi": "10.1109/ICSE.2007.83", "title": "Supporting the Investigation and Planning of Pragmatic Reuse Tasks", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software performance", "Navigation", "Data visualization", "Global Positioning System", "Displays", "Laboratories", "Computer science", "Productivity", "Computer industry", "Performance evaluation"], "abstract": "Software reuse has long been promoted as a means to increase developer productivity; however, reusing source code is difficult in practice and tends to be performed in an ad hoc manner. This is problematic because poor decisions can be made either to attempt an unwise, overly complex reuse task, or to avoid a reuse task that would have saved time and effort. This paper describes a lightweight tool that supports the investigation and planning of pragmatic reuse tasks. The tool helps developers to identify the dependencies from the source code they wish to reuse, and to decide how to deal with those dependencies. Questions about pragmatic reuse are evaluated through a survey of industrial developers. The tool is evaluated through the planning and execution of reuse tasks by industrial developers.", "author": [{"name": "Reid Holmes", "affiliation": "Department of Computer Science, University of Calgary, Calgary, AB, Canada"}, {"name": "Robert J. Walker", "affiliation": "Department of Computer Science, University of Calgary, Calgary, AB, Canada"}], "time": "May 2007", "citationCount": "20", "references": []},
{"doi": "10.1109/ICSE.2009.5070547", "title": "Do code clones matter?", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Cloning", "Costs", "Large-scale systems", "Fault diagnosis", "Software maintenance", "Open source software", "Java", "Detection algorithms", "Software quality", "Software engineering"], "abstract": "Code cloning is not only assumed to inflate maintenance costs but also considered defect-prone as inconsistent changes to code duplicates can lead to unexpected behavior. Consequently, the identification of duplicated code, clone detection, has been a very active area of research in recent years. Up to now, however, no substantial investigation of the consequences of code cloning on program correctness has been carried out. To remedy this shortcoming, this paper presents the results of a large-scale case study that was undertaken to find out if inconsistent changes to cloned code can indicate faults. For the analyzed commercial and open source systems we not only found that inconsistent changes to clones are very frequent but also identified a significant number of faults induced by such changes. The clone detection tool used in the case study implements a novel algorithm for the detection of inconsistent clones. It is available as open source to enable other researchers to use it as basis for further investigations.", "author": [{"name": "Elmar Juergens", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Florian Deissenboeck", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Benjamin Hummel", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Stefan Wagner", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}], "time": "May 2009", "citationCount": "188", "references": [{"title": " \"How clones are maintained: An empirical study\"", "authors": ["L. Aversano", " L. Cerulo ", " M. Di Penta"]}, {"title": " \"Clone smells in software evolution\"", "authors": ["T. Bakota", " R. Ferenc ", " T. Gyimothy"]}, {"title": " \"Clone detection using\"", "authors": ["I. D. Baxter", " A. Yahin", " L. Moura", " M. Sant'Anna ", " L. Bier"]}, {"title": " \"Tool support for continuous quality control\"", "authors": ["F. Deissenboeck", " E. Juergens", " B. Hummel", " S. Wagner", " B. Mas ", " M. Pizka"]}, {"title": " \"Tracking code clones in evolving software\"", "authors": ["E. Duala-Ekoko ", " M. P. Robillard"]}, {"title": " \"A language independent approach for detecting duplicated code\"", "authors": ["S. Ducasse", " M. Rieger ", " S. Demeyer"]}, {"title": " \"Clone detection via structural abstraction\"", "authors": ["W. S. Evans", " C. W. Fraser ", " F. Ma"]}, {"title": " \"Scalable detection of semantic clones\"", "authors": ["M. Gabel", " L. Jiang ", " Z. Su"]}, {"title": " \"Relation of code clones and change couplings\"", "authors": ["R. Geiger", " B. Fluri", " H. C. Gall ", " M. Pinzger"]}, {"title": " \"CReN: a tool for tracking copy-and-paste code clones and renaming identifiers consistently in the IDE\"", "authors": ["P. Jablonski ", " D. Hou"]}, {"title": " \"Decard: Scalable and accurate tree-based detection of code clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"Context-based detection of clone-related bugs\"", "authors": ["L. Jiang", " Z. Su ", " E. Chiu"]}, {"title": " \"Two algorithms for approximate string matching in static texts\"", "authors": ["P. Jokinen ", " E. Ukkonen"]}, {"title": " \"Static bug detection through analysis of inconsistent clones\"", "authors": ["E. Juergens", " B. Hummel", " F. Deissenboeck ", " M. Feilkas"]}, {"title": " \"Cloning considered harmful\u201d considered harmful\"", "authors": ["C. Kapser ", " M. W. Godfrey"]}, {"title": " \"An empirical study of code clone genealogies\"", "authors": ["M. Kim", " V. Sazawal", " D. Notkin ", " G. Murphy"]}, {"title": " \"Using slicing to identify duplication in source code\"", "authors": ["R. Komondoor ", " S. Horwitz"]}, {"title": " \"Survey of research on software clones. In Duplication Redundancy\"", "authors": ["R. Koschke"]}, {"title": " \"Clone detection using abstract syntax suffix trees\"", "authors": ["R. Koschke", " R. Falke ", " P. Frenzel"]}, {"title": " \"Identifying similar code with program dependence graphs\"", "authors": ["J. Krinke"]}, {"title": " \"A study of consistent and inconsistent changes to code clones\"", "authors": ["J. Krinke"]}, {"title": " \"Assessing the benefits of incorporating function clone detection in a development process\"", "authors": ["B. Lague", " D. Proulx", " J. Mayr", "", " E. M. Merlo ", " J. Hudepohl"]}, {"title": " \"Semi-automatic grammar recovery\"", "authors": ["R. L\u00e4mmel ", " C. Verhoef"]}, {"title": " \"CP-Miner: Finding copy-paste and related bugs in large-scale software code\"", "authors": ["Z. Li", " S. Lu", " S. Myagmar ", " Y. Zhou"]}, {"title": " \"Assessing the effect of clones on changeability\"", "authors": ["A. Lozano ", " M. Wermelinger"]}, {"title": " \"Software quality analysis by code clones in industrial legacy software\"", "authors": ["A. Monden", " D. Nakae", " T. Kamiya", " S. Sato ", " K. Matsumoto"]}, {"title": " \"A survey on software clone detection research\"", "authors": ["C. K. Roy ", " J. R. Cordy"]}, {"title": " \"NICAD: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization\"", "authors": ["C. K. Roy ", " J. R. Cordy"]}, {"title": " \"On detection of gapped code clones using gap locations\"", "authors": ["Y. Ueda", " T. Kamiya", " S. Kusumoto ", " K. Inoue"]}, {"title": " \"Approximate string matching over suffix trees\"", "authors": ["E. Ukkonen"]}, {"title": " \"On-line construction of suffix trees\"", "authors": ["E. Ukkonen"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071001", "title": "Static ownership inference for reasoning against concurrency errors", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Concurrent computing", "Object detection", "Computer errors", "Computer science", "Yarn", "Software quality", "Algorithm design and analysis", "Information analysis", "Application software", "Software engineering"], "abstract": "We propose a new approach for reasoning about concurrency in object-oriented programs. Central to our approach is static ownership inference analysis - we conjecture that this analysis has important application in reasoning against concurrency errors.", "author": [{"name": "Ana Milanova", "affiliation": "Department of Computer Science, Rensselaer Polytechnic Institute, USA"}, {"name": "Yin Liu", "affiliation": "Department of Computer Science, Rensselaer Polytechnic Institute, USA"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/ICSE.2007.54", "title": "Mining Security-Sensitive Operations in Legacy Code Using Concept Analysis", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Fingerprint recognition", "Authorization", "File servers", "Manuals", "Pattern analysis", "Resource management", "Access control", "Linux", "Lattices", "Software systems"], "abstract": "This paper presents an approach to statically retrofit legacy servers with mechanisms for authorization policy enforcement. The approach is based upon the observation that security-sensitive operations performed by a server are characterized by idiomatic resource manipulations, called fingerprints. Candidate fingerprints are automatically mined by clustering resource manipulations using concept analysis. These fingerprints are then used to identify security-sensitive operations performed by the server. Case studies with three real-world servers show that the approach can be used to identify security-sensitive operations with a few hours of manual effort and modest domain knowledge.", "author": [{"name": "Vinod Ganapathy", "affiliation": "University of Wisconsin, USA"}, {"name": "David King", "affiliation": "Pennsylvania State University, USA"}, {"name": "Trent Jaeger", "affiliation": "Pennsylvania State University, USA"}, {"name": "Somesh Jha", "affiliation": "University of Wisconsin, USA"}], "time": "May 2007", "citationCount": "18", "references": []},
{"doi": "10.1109/ICSE.2009.5070548", "title": "Mining exception-handling rules as sequence association rules", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Data mining", "Association rules", "Databases", "Computer languages", "Application software", "Computer science", "Java", "Degradation", "Lead"], "abstract": "Programming languages such as Java and C++ provide exception-handling constructs to handle exception conditions. Applications are expected to handle these exception conditions and take necessary recovery actions such as releasing opened database connections. However, exception-handling rules that describe these necessary recovery actions are often not available in practice. To address this issue, we develop a novel approach that mines exception-handling rules as sequence association rules of the form ldquo(FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">c</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">1</sup>\n...FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">c</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">n</sup>\n) nland FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">a</sub>\n rArr (FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">e</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">1</sup>\n...FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">e</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">m</sup>\n)rdquo. This rule describes that function call FCa should be followed by a sequence of function calls (FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">e</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">1</sup>\n...FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">e</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">m</sup>\n) when FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">a</sub>\n is preceded by a sequence of function calls (FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">e</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">1</sup>\n...FC\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">c</sub>\n \n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">n</sup>\n). Such form of rules is required to characterize common exception-handling rules. We show the usefulness of these mined rules by applying them on five real-world applications (including 285 KLOC) to detect violations in our evaluation. Our empirical results show that our approach mines 294 real exception-handling rules in these five applications and also detects 160 defects, where 87 defects are new defects that are not found by a previous related approach.", "author": [{"name": "Suresh Thummalapenta", "affiliation": "Department of Computer Science, North Carolina State University, USA"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science, North Carolina State University, USA"}], "time": "May 2009", "citationCount": "53", "references": [{"title": " \"Mining API error-handling specifications from source code\"", "authors": ["M. Acharya ", " T. Xie"]}, {"title": " \"Fast algorithms for mining association rules in large databases\"", "authors": ["R. Agrawal ", " R. Srikant"]}, {"title": " \"Finding what's not there: a new approach to revealing neglected conditions in software\"", "authors": ["R.-Y. Chang", " A. Podgurski ", " J. Yang"]}, {"title": " \"Enforcing high-level protocols in low-level software\"", "authors": ["R. DeLine ", " M. F\u00e4hndrich"]}, {"title": " \"Exception-chain analysis: Revealing exception handling architecture in Java server applications\"", "authors": ["C. Fu ", " B. G. Ryder"]}, {"title": " \"Testing of Java web services for robustness\"", "authors": ["C. Fu", " B. G. Ryder", " A. Milanova ", " D. Wonnacott"]}, {"title": " \"Javert: fully automatic mining of general temporal properties from dynamic traces\"", "authors": ["M. Gabel ", " Z. Su"]}, {"title": " \"How software engineers use documentation: The state of the practice\"", "authors": ["T. Lethbridge", " J. Singer ", " A. Forward"]}, {"title": " \"PR-Miner: Automatically extracting implicit programming rules and detecting violations in large software codes\"", "authors": ["Z. Li ", " Y. Zhou"]}, {"title": " \"DynaMine: Finding common error patterns by mining software revision histories\"", "authors": ["V. B. Livshits ", " T. Zimmermann"]}, {"title": " \"Data mining library reuse patterns using generalized association rules\"", "authors": ["A. Michail"]}, {"title": " \"Analyzing exception flow in Java programs\"", "authors": ["M. P. Robillard ", " G. C. Murphy"]}, {"title": " \"Mining framework usage changes from instantiation code\"", "authors": ["T. Sch\u00e4fer", " J. Jonas ", " M. Mezini"]}, {"title": " \"Analysis and testing of programs with exception handling constructs\"", "authors": ["S. Sinha ", " M. Harrold"]}, {"title": " \"PARSEWeb: A programmer assistant for reusing open source code on the web\"", "authors": ["S. Thummalapenta ", " T. Xie"]}, {"title": " \"SpotWeb: Detecting framework hotspots and coldspots via mining open source code on the web\"", "authors": ["S. Thummalapenta ", " T. Xie"]}, {"title": " \"BIDE: Efficient mining of frequent closed sequences\"", "authors": ["J. Wang ", " J. Han"]}, {"title": " \"Detecting object usage anomalies\"", "authors": ["A. Wasylkowski", " A. Zeller ", " C. Lindig"]}, {"title": " \"Finding and preventing run-time error handling mistakes\"", "authors": ["W. Weimer ", " G. Necula"]}, {"title": " \"Mining temporal specifications for error detection\"", "authors": ["W. Weimer ", " G. Necula"]}, {"title": " \"Perracotta: mining temporal API rules from imperfect traces\"", "authors": ["J. Yang ", " D. Evans"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071002", "title": "Creating and evolving software by searching, selecting and synthesizing relevant source code", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Programming profession", "Application software", "Software maintenance", "Cryptography", "Open source software", "Computer science", "Search engines", "Information analysis", "Educational institutions", "Speech coding"], "abstract": "When programmers develop or maintain software, they instinctively sense that there are fragments of code that other developers implemented somewhere, and these code fragments could be reused if found. In this paper, we propose a novel solution that addresses the fundamental questions of searching, selecting, and synthesizing (S\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">3</sup>\n) software based on the analysis of Application Programming Interface (API) calls as units of abstractions that implement high-level concepts (e.g., the API call EncryptData implements a cryptographic concept). This paper outlines the details behind S\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">3</sup>\n, analyzes current challenges and describes evaluation plans.", "author": [{"name": "Denys Poshyvanyk", "affiliation": "Computer Science Department, The College of William and Mary, Williamsburg, VA, USA"}, {"name": "Mark Grechanik", "affiliation": "Accenture Technology Laboratories, Chicago, IL, USA"}], "time": "May 2009", "citationCount": "9", "references": [{"title": " \"Feature Identification: An Epidemiological Metaphor\"", "authors": ["Antoniol", " G. ", " Gu\u00e9h\u00e9neuc", " Y. G."]}, {"title": " \"A Theory of Aspects as Latent Topics\"", "authors": ["Baldi", " P.", " Linstead", " E.", " Lopes", " C.", " ", " Bajracharya", " S."]}, {"title": " \"Case Study of Feature Location Using Dependence Graph\"", "authors": ["Chen", " K. ", " Rajlich", " V."]}, {"title": " \"Hipikat: A Project Memory for Software Development\"", "authors": ["Cubranic", " D.", " Murphy", " G. C.", " Singer", " J.", " ", " Booth", " K. S."]}, {"title": " \"Indexing by Latent Semantic Analysis\"", "authors": ["Deerwester", " S.", " Dumais", " S. T.", " Furnas", " G. W.", " L", "auer", " T. K.", " ", " Harshman", " R."]}, {"title": " \"Locating Features in Source Code\"", "authors": ["Eisenbarth", " T.", " Koschke", " R.", " ", " Simon", " D."]}, {"title": " \"Finding Relevant Applications for Prototyping\"", "authors": ["Grechanik", " M.", " Conroy", " K. M.", " ", " Probst", " K. A."]}, {"title": " \"Recovering and using use-case-diagram-to-source-code traceability links\"", "authors": ["Grechanik", " M.", " McKinley", " K. S.", " ", " Perry", " D."]}, {"title": " \"Supporting the construction and evolution of component repositories\"", "authors": ["Henninger", " S."]}, {"title": " \"Exploring the Neighborhood with Dora to Expedite Software Maintenance\"", "authors": ["Hill", " E.", " Pollock", " L.", " ", " Vijay-Shanker", " K."]}, {"title": " \"Automatic Method Completion\"", "authors": ["Hill", " R. ", " Rideout", " J."]}, {"title": " \"Approximate Structural Context Matching: An Approach to Recommend Relevant Examples\"", "authors": ["Holmes", " R.", " Walker", " R. J.", " ", " Murphy", " G. C."]}, {"title": " \"Ranking significance of software components based on use relations\"", "authors": ["Inoue", " K.", " Yokomori", " R.", " Yamamoto", " T.", " Matsushita", " M.", " ", " Kusumoto", " S."]}, {"title": " \"Keyword programming in java\"", "authors": ["Little", " G. ", " Miller", " R. C."]}, {"title": " \"Jungloid mining: helping to navigate the API jungle\"", "authors": ["M", "elin", " D.", " Xu", " L.", " Bod\u00edk", " R.", " ", " Kimelman", " D."]}, {"title": " \"An Information Retrieval Approach to Concept Location in Source Code\"", "authors": ["Marcus", " A.", " Sergeyev", " A.", " Rajlich", " V.", " ", " Maletic", " J."]}, {"title": " \"Software Reflexion Models: Bridging the Gap between Design and Implementation\"", "authors": ["Murphy", " G. C.", " Notkin", " D.", " ", " Sullivan", " K. J."]}, {"title": " \"Feature Location using Probabilistic Ranking of Methods based on Execution Scenarios and Information Retrieval\"", "authors": ["Poshyvanyk", " D.", " Gu\u00e9h\u00e9neuc", " Y. G.", " Marcus", " A.", " Antoniol", " G.", " ", " Rajlich", " V."]}, {"title": " \"Topology Analysis of Software Dependencies\"", "authors": ["Robillard", " M. P."]}, {"title": " \"Concern Graphs: Finding and describing concerns using structural program dependencies\"", "authors": ["Robillard", " M. P. ", " Murphy", " G. C."]}, {"title": " \"XSnippet: mining for sample code\"", "authors": ["Sahavechaphan", " N. ", " Claypool", " K."]}, {"title": " \"Using Natural Language Program Analysis to Locate and Understand Action-Oriented Concerns\"", "authors": ["Shepherd", " D.", " Fry", " Z.", " Gibson", " E.", " Pollock", " L.", " ", " Vijay-Shanker", " K."]}, {"title": " \"Sketching stencils\"", "authors": ["Solar-Lezama", " A.", " Arnold", " G.", " Tancau", " L.", " Bodik", " R.", " Saraswat", " V.", " ", " Seshia", " S."]}, {"title": " \"The Implications of Method Placement on API Learnability\"", "authors": ["Stylos", " J. ", " Myers", " B."]}, {"title": " \"Mica: A Web-Search Tool for Finding API Components and Examples\"", "authors": ["Stylos", " J. ", " Myers", " B. A."]}, {"title": " \"Parseweb: a Programmer Assistant for Reusing Open Source Code on the Web\"", "authors": ["Thummalapenta", " S. ", " Xie", " T."]}, {"title": " \"Locating User Functionality in Old Code\"", "authors": ["Wilde", " N.", " Gomez", " J. A.", " Gust", " T.", " ", " Strasburg", " D."]}, {"title": " \"Reuse-Conducive Development Environments\"", "authors": ["Ye", " Y. ", " Fischer", " G."]}, {"title": " \"SNIAFL: Towards a Static Non-interactive Approach to Feature Location\"", "authors": ["Zhao", " W.", " Zhang", " L.", " Liu", " Y.", " Sun", " J.", " ", " Yang", " F."]}]},
{"doi": "10.1109/ICSE.2007.49", "title": "Managing Impacts of Security Protocol Changes in Service-Oriented Applications", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Security", "Access protocols", "Application software", "Software tools", "Access control", "Databases", "Graphical user interfaces", "Performance evaluation", "Software testing", "System testing"], "abstract": "We present a software tool and a framework for security protocol change management. While we focus on trust negotiation protocols in this paper, many of the ideas are generally applicable to other types of protocols. Trust negotiation is a flexible approach to access control that is well suited to dynamic environments typical of service-oriented applications. However, managing the evolution of trust negotiation protocols is a difficult problem that has not been sufficiently addressed, especially in situations where there are ongoing negotiations. By using our framework, the consequences of changing the protocol that applies to ongoing trust negotiations can be automatically determined. We have also implemented a database-backed GUI tool to manage the change process as an extension of an existing system, and we have performed experiments to test the efficiency of our management software. Our experimental results show that the techniques proposed can scale to applications with tens of thousands of simultaneous users even on commodity PCs.", "author": [{"name": "Halvard Skogsrud", "affiliation": "Thought Works Australia, Australia"}, {"name": "Boualem Benatallah", "affiliation": "University of New South Wales, Sydney, Australia"}, {"name": "Fabio Casati", "affiliation": "University of Trento, Italy"}, {"name": "Farouk Toumani", "affiliation": "ISIMA, LIMOS, Clemson, USA"}], "time": "May 2007", "citationCount": "17", "references": []},
{"doi": "10.1109/ICSE.2009.5070549", "title": "Safe-commit analysis to facilitate team software development", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming", "Failure analysis", "Control systems", "Computer science", "Software systems", "Software testing", "System testing", "Degradation", "Project management", "Guidelines"], "abstract": "Software development teams exchange source code in shared repositories. These repositories are kept consistent by having developers follow a commit policy, such as ldquoProgram edits can be committed only if all available tests succeed.rdquo Such policies may result in long intervals between commits, increasing the likelihood of duplicative development and merge conflicts. Furthermore, commit policies are generally not automatically enforceable. We present a program analysis to identify committable changes that can be released early, without causing failures of existing tests, even in the presence of failing tests in a developer's local workspace. The algorithm can support relaxed commit policies that allow early release of changes, reducing the potential for merge conflicts. In experiments using several versions of a non-trivial software system with failing tests, 3 newly enabled commit policies were shown to allow a significant percentage of changes to be committed.", "author": [{"name": "Jan Wloka", "affiliation": "Department of Computer Science, Rutgers University, Piscataway, NJ, USA"}, {"name": "Barbara Ryder", "affiliation": "Department of Computer Science, Virginia Technology, Blacksburg, VA, USA"}, {"name": "Frank Tip", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"}, {"name": "Xiaoxia Ren", "affiliation": "Department of Computer Science, Rutgers University, Piscataway, NJ, USA"}], "time": "May 2009", "citationCount": "19", "references": [{"title": " \"Practical Subversion\" in ", "authors": ["D. Berlin ", " G. Rooney"]}, {"title": " \"CVS II: Parallelizing software development\"", "authors": ["B. Berliner"]}, {"title": " \"Program integration for languages with procedure calls\"", "authors": ["D. Binkley", " S. Horwitz ", " T. Reps"]}, {"title": " \"Jazzing up eclipse with collaborative tools\"", "authors": ["L.-T. Cheng", " S. Hupfer", " S. Ross ", " J. Patterson"]}, {"title": " \"Crisp: A debugging tool for Java programs\"", "authors": ["O. Chesley", " X. Ren ", " B. G. Ryder"]}, {"title": " \"Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact\"", "authors": ["H. Do", " S. Elbaum ", " G. Rothermel"]}, {"title": " \"Process model and awareness in scm\"", "authors": ["J. Estublier ", " S. Garcia"]}, {"title": " \"The evolution of a source code control system\"", "authors": ["A. L. Glasser"]}, {"title": " \"Interprocedural slicing using dependence graphs\"", "authors": ["S. Horwitz", " T. Reps ", " D. Binkley"]}, {"title": " \"A state-of-the-art survey on software merging\"", "authors": ["T. Mens"]}, {"title": " \"Leveraging field data for impact analysis and regression testing\"", "authors": ["A. Orso", " T. Apiwattanapong ", " M. J. Harrold"]}, {"title": " \"Parallel changes in large-scale software development: an observational case study\"", "authors": ["D. E. Perry", " H. P. Siy ", " L. G. Votta"]}, {"title": " \"Identifying failure causes in Java programs: An application of change impact analysis\"", "authors": ["X. Ren", " O. C. Chesley ", " B. G. Ryder"]}, {"title": " \"Chianti: A tool for practical change impact analysis of Java programs\"", "authors": ["X. Ren", " F. Shah", " F. Tip", " B. G. Ryder ", " O. Chesley"]}, {"title": " \"Change Impact Analysis for Object-oriented Programs\"", "authors": ["B. G. Ryder ", " F. Tip"]}, {"title": " \"Towards supporting awareness of indirect conflicts across software configuration management workspaces\"", "authors": ["A. Sarma", " G. Bortis ", " A. van der Hoek"]}, {"title": " \"Palant\u00edr: raising awareness among configuration management workspaces\"", "authors": ["A. Sarma", " Z. Noroozi ", " A. van der Hoek"]}, {"title": " \"Finding Failure-inducing Changes in Java Programs Using Change Classification\"", "authors": ["M. Stoerzer", " B. G. Ryder", " X. Ren ", " F. Tip"]}, {"title": " \"RCS\u2014a system for version control\"", "authors": ["W. F. Tichy"]}, {"title": " \"Hipikat: recommending pertinent software development artifacts\"", "authors": ["D. \u010cubrani\u0107 ", " G. C. Murphy"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071003", "title": "How do system architectures affect software requirements?", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Computer architecture", "Software systems", "Software architecture", "Feeds", "Computer science", "Control systems", "Data analysis", "Information systems", "Wheels", "Knowledge engineering"], "abstract": "While much research attention has been paid to transitioning from requirements to software architectures, relatively little attention has been paid to how new requirements are affected by an existing system architecture. Specifically, no scientific studies have been conducted on how a system's architecture affects software requirements; in particular, the ldquocharacteristicsrdquo of newly elicited requirements gathered in the presence of an existing architecture. This paper describes emerging results from an exploratory controlled study investigating such requirements characteristics.", "author": [{"name": "James A. Miller", "affiliation": "Department of Computer Science, University of Western Ontario, London, ONT, Canada"}, {"name": "Remo Ferrari", "affiliation": "Western University, London, ON, CA"}, {"name": "Nazim H. Madhavji", "affiliation": "Department of Computer Science, University of Western Ontario, London, ONT, Canada"}], "time": "May 2009", "citationCount": 0, "references": [{"title": " P.: \"Using Students as Subjects in Requirements Prioritization\"", "authors": ["Ber", "er"]}, {"title": " N.: \"Measuring the Success of Requirements Engineering Processes\"", "authors": ["El Emam", " K. ", " Madhavji"]}, {"title": " \"Architecting-problems rooted in requirements\"", "authors": ["Ferrari", " R.", " ", " Madhavji", " N. H."]}, {"title": " M.: \"The Role of Architecture in Requirements Engineering\"", "authors": ["Jackson"]}, {"title": " \"Educational Research: Quantitative", "authors": ["Johnson", " R. B.", " Christensan", " L."]}, {"title": " N.: \"Role of Software Architecture in Requirements Engineering\"", "authors": ["Mead"]}, {"title": " \"Architectural Effects on Requirements Decisions: An Exploratory Study\"", "authors": ["Miller", " J.", " Ferrari", " R.", " Madhavji", " N. H."]}, {"title": " \"Weaving Together Requirements and Architectures\"", "authors": ["Nuseibeh", " B."]}, {"title": " C.: \"Panel Overview: The Role of Software Architecture in Requirements Engineering\"", "authors": ["Shekaran"]}]},
{"doi": "10.1109/ICSE.2007.98", "title": "When Role Models Have Flaws: Static Validation of Enterprise Security Policies", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Authorization", "Application software", "Java", "Runtime", "Software systems", "Access control", "Protection", "Information security", "Database systems", "Permission"], "abstract": "Modern multiuser software systems have adopted role-based access control (RBAC) for authorization management. This paper presents a formal model for RBAC policy validation and a static-analysis model for RBAC systems that can be used to (i) identify the roles required by users to execute an enterprise application, (ii) detect potential inconsistencies caused by principal-delegation policies, which are used to override a user's role assignment, (Hi) report if the roles assigned to a user by a given policy are redundant or insufficient, and (iv) report vulnerabilities that can result from unchecked intra-component accesses. The algorithms described in this paper have been implemented as part of IBM's enterprise security policy evaluator (ESPE) tool. Experimental results show that the tool found numerous policy flaws, including ten previously unknown flaws from two production-level applications, with no false-positive reports.", "author": [{"name": "Marco Pistoia", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}, {"name": "Stephen J. Fink", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}, {"name": "Robert J. Flynn", "affiliation": "Polytechnic University, Brooklyn, NY, USA"}, {"name": "Eran Yahav", "affiliation": "IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"}], "time": "May 2007", "citationCount": "13", "references": []},
{"doi": "10.1109/ICSE.2009.5070550", "title": "Does distributed development affect software quality? An empirical case study of Windows Vista", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software quality", "Programming", "Software engineering", "Cultural differences", "Global communication", "Testing", "Geography", "Availability", "Government", "Costs"], "abstract": "It is widely believed that distributed software development is riskier and more challenging than collocated development. Prior literature on distributed development in software engineering and other fields discuss various challenges, including cultural barriers, expertise transfer difficulties, and communication and coordination overhead. We evaluate this conventional belief by examining the overall development of Windows Vista and comparing the post-release failures of components that were developed in a distributed fashion with those that were developed by collocated teams. We found a negligible difference in failures. This difference becomes even less significant when controlling for the number of developers working on a binary. We also examine component characteristics such as code churn, complexity, dependency information, and test code coverage and find very little difference between distributed and collocated components to investigate if less complex components are more distributed. Further, we examine the software process and phenomena that occurred during the Vista development cycle and present ways in which the development process utilized may be insensitive to geography by mitigating the difficulties introduced in prior work in this area.", "author": [{"name": "Christian Bird", "affiliation": "University of California, San Diego, Davis, USA"}, {"name": "Nachiappan Nagappan", "affiliation": "Microsoft Research Limited, USA"}, {"name": "Premkumar Devanbu", "affiliation": "University of California, San Diego, Davis, USA"}, {"name": "Harald Gall", "affiliation": "University of Zurich, Switzerland"}, {"name": "Brendan Murphy", "affiliation": "Microsoft Research Limited, USA"}], "time": "May 2009", "citationCount": "48", "references": [{"title": " \"Leveraging resources in global software development\"", "authors": ["R. D. Battin", " R. Crocker", " J. Kreidler ", " K. Subramanian"]}, {"title": " \"Overcoming requirements engineering challenges: Lessons from offshore outsourcing\"", "authors": ["J. M. Bhat", " M. Gupta ", " S. N. Murthy"]}, {"title": " \"Global software servicing: Observational experiences at microsoft\"", "authors": ["S. Bugde", " N. Nagappan", " S. Rajamani ", " G. Ramalingam"]}, {"title": " \"Tactical approaches for alleviating distance in global software development\"", "authors": ["E. Carmel ", " R. Agarwal"]}, {"title": " \"A practical management and engineering approach to offshore collaboration\"", "authors": ["J. Cusick ", " A. Prasad"]}, {"title": " \"Surviving global software development\"", "authors": ["C. Ebert ", " P. D. Neve"]}, {"title": " \"Distribution dimensions in software development projects: a taxonomy\"", "authors": ["D. C. Gumm"]}, {"title": " \"Global Software Engineering: The Future of Socio-technical Coordination\"", "authors": ["J. Herbsleb"]}, {"title": " \"Architectures coordination and distance: Conway's law and beyond\"", "authors": ["J. Herbsleb ", " R. Grinter"]}, {"title": " \"An empirical study of speed and communication in globally distributed software development\"", "authors": ["J. Herbsleb ", " A. Mockus"]}, {"title": " \"Formulation and preliminary test of an empirical theory of coordination in software engineering\"", "authors": ["J. D. Herbsleb ", " A. Mockus"]}, {"title": " \"Global software development at siemens: experience from nine projects\"", "authors": ["J. D. Herbsleb", " D. J. Paulish ", " M. Bass"]}, {"title": " \"Global software development challenges: A case study on temporal geographical and socio-cultural distance\"", "authors": ["H. Holmstrom", " E. Conchuir", " P. Agerfalk ", " B. Fitzgerald"]}, {"title": "\"IEEE. IEEE Standard 982\"", "authors": []}, {"title": " \"Philips experiences in global distributed software development\"", "authors": ["R. Kommeren ", " P. Parviainen"]}, {"title": " \"a test of whether one of two random variables is stochastically larger than the other\"", "authors": ["H. B. Mann ", " W. D. R. On"]}, {"title": " \"Mining metrics to predict component failures\"", "authors": ["N. Nagappan", " T. Ball ", " A. Zeller"]}, {"title": " \"The influence of organizational structure on software quality: An empirical case study\"", "authors": ["N. Nagappan", " B. Murphy ", " V. Basili"]}, {"title": " \"Global software development and delay: Does distance still matter?\"", "authors": ["T. Nguyen", " T. Wolf ", " D. Damian"]}, {"title": " \"Distance matters\"", "authors": ["G. M. Olson ", " J. S. Olson"]}, {"title": " \"Cooperation and coordination concerns in a distributed software development project\"", "authors": ["L. D. Panjer", " D. Damian ", " M.-A. Storey"]}, {"title": " \"Factors that influence technical communication in distributed product development: an empirical study in the telecommunications industry\"", "authors": ["M. Sosa", " S. Eppinger", " M. Pich", " D. McKendrick", " S. Stout", " T. Manage", " ."]}, {"title": " \"Global software development in the freebsd project\"", "authors": ["D. Spinellis"]}, {"title": " \"Predicting defects using network analysis on dependency graphs\"", "authors": ["T. Zimmermann ", " N. Nagappan"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071004", "title": "SecondWATCH: A workspace awareness tool based on a 3-D virtual world", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Collaborative software", "Collaborative work", "Software maintenance", "History", "Visualization", "Fellows", "Programming", "Software tools", "Collaborative tools", "Online Communities/Technical Collaboration"], "abstract": "Awareness of fellow developers' activities has been widely recognized as essential in facilitating collaboration in a software developing team. However, as reported in several field studies on software development, awareness information on software artifact and coworker is difficult to acquire. To help software developers maintain group awareness and enhance their collaboration, we developed a prototype workspace awareness tool called SecondWATCH based on Second Life, a 3D online virtual world. SecondWATCH informs developers of real-time and history artifact and coworker information by monitoring team members' activities on their local workspaces, version control repository, and bug tracking system. It then extracts, analyzes, and visualizes the information in SL as a common view shared by the whole team using a 3-D city metaphor. We have successfully used SecondWATCH to visualize history information of three open-source Java projects, Free-Mind, JEdit, and GUJ, and also using it as our workspace awareness tool when we are developing it.", "author": [{"name": "En Ye", "affiliation": "Ohio University, Athens, OH, USA"}, {"name": "Lev A. Neiman", "affiliation": "Ohio University, Athens, OH, USA"}, {"name": "Hiep Q. Dinh", "affiliation": "Ohio University, Athens, OH, USA"}, {"name": "Chang Liu", "affiliation": "Ohio University, Athens, OH, USA"}], "time": "May 2009", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2007.66", "title": "Predicting Faults from Cached History", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["History", "Software quality", "Fault diagnosis", "Prediction algorithms", "Software algorithms", "Switches", "Isolation technology", "Software systems", "Fault detection", "Open source software"], "abstract": "We analyze the version history of 7 software systems to predict the most fault prone entities and files. The basic assumption is that faults do not occur in isolation, but rather in bursts of several related faults. Therefore, we cache locations that are likely to have faults: starting from the location of a known (fixed) fault, we cache the location itself, any locations changed together with the fault, recently added locations, and recently changed locations. By consulting the cache at the moment a fault is fixed, a developer can detect likely fault-prone locations. This is useful for prioritizing verification and validation resources on the most fault prone files or entities. In our evaluation of seven open source projects with more than 200,000 revisions, the cache selects 10% of the source code files; these files account for 73%-95% of faults - a significant advance beyond the state of the art.", "author": [{"name": "Sunghun Kim", "affiliation": "Massachusetts Institute of Technology, USA"}, {"name": "Thomas Zimmermann", "affiliation": "University of Saarland, Saarbruecken, Germany"}, {"name": "E. James Whitehead Jr.", "affiliation": "University of California, Santa Cruz, USA"}, {"name": "Andreas Zeller", "affiliation": "University of Saarland, Saarbruecken, Germany"}], "time": "May 2007", "citationCount": "162", "references": [{"title": " \"Subversion Project Homepage", "authors": ["B. Behlendorf", " C. M. Pilato", " G. Stein", " K. Fogel", " K. Hancock", " ", " B. Collins-Sussman"]}, {"title": " \"Identification of Software Instabilities", "authors": ["J. Bevan ", " E. J. Whitehead", " Jr."]}, {"title": " \"Facilitating Software Evolution with Kenyon", "authors": ["J. Bevan", " E. J. Whitehead", " Jr.", " S. Kim", " ", " M. Godfrey"]}, {"title": " \"Hipikat: Recommending pertinent software development artifacts", "authors": ["D. Cubranic ", " G. C. Murphy"]}, {"title": " \"APFEL: A Preprocessing Framework For Eclipse", "authors": ["V. Dallmeier", " P. Wei\u00dfgerber", " ", " T. Zimmermann"]}, {"title": " \"Populating a Release History Database from Version Control and Bug Tracking Systems", "authors": ["M. Fischer", " M. Pinzger", " ", " H. Gall"]}, {"title": " \"CVS Release History Data for Detecting Logical Couplings", "authors": ["H. Gall", " M. Jazayeri", " ", " J. Krajewski"]}, {"title": " \"Using Origin Analysis to Detect Merging and Splitting of Source Code Entities", "authors": ["M. W. Godfrey ", " L. Zou"]}, {"title": " \"Predicting Fault Incidence Using Software Change History", "authors": ["T. L. Graves", " A. F. Karr", " J. S. Marron", " ", " H. Siy"]}, {"title": " \"The Top Ten List: Dynamic Fault Prediction", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"Ordering Fault-Prone Software Modules", "authors": ["T. M. Khoshgoftaar ", " E. B. Allen"]}, {"title": " \"Predicting the Order of Fault-Prone Modules in Legacy Software", "authors": ["T. M. Khoshgoftaar ", " E. B. Allen"]}, {"title": " \"When Functions Change Their Names: Automatic Detection of Origin Relationships", "authors": ["S. Kim", " K. Pan", " ", " E. J. Whitehead", " Jr."]}, {"title": " \"Automatic Identification of Bug Introducing Changes", "authors": ["S. Kim", " T. Zimmermann", " K. Pan", " ", " E. J. Whitehead", " Jr."]}, {"title": " \"A Framework and Methodology for Studying the Causes of Software Errors in Programming Systems", "authors": ["A. J. Ko ", " B. A. Myers"]}, {"title": " \"Identifying Reasons for Software Changes Using Historic Databases", "authors": ["A. Mockus ", " L. G. Votta"]}, {"title": " \"Predicting Risk of Software Changes", "authors": ["A. Mockus ", " D. M. Weiss"]}, {"title": " \"Use of Relative Code Churn Measures to Predict System Defect Density", "authors": ["N. Nagappan ", " T. Ball"]}, {"title": " \"Mining Metrics to Predict Component Failures", "authors": ["N. Nagappan", " T. Ball", " ", " A. Zeller"]}, {"title": " \"Predicting the Location and Number of Faults in Large Software Systems", "authors": ["T. J. Ostr", "", " E. J. Weyuker", " ", " R. M. Bell"]}, {"title": " \"When Do Changes Induce Fixes?", "authors": ["J. \u015aliwerski", " T. Zimmermann", " ", " A. Zeller"]}, {"title": " \"HATARI: Raising Risk Awareness. Research Demonstration", "authors": ["J. \u0160liwerski", " T. Zimmermann", " ", " A. Zeller"]}, {"title": " \"Identifying Refactorings from Source-Code Changes", "authors": ["P. Wei\u00dfgerber ", " S. Diehl"]}, {"title": " \"Preprocessing CVS Data for Fine-Grained Analysis", "authors": ["T. Zimmermann ", " P. Wei\u00dfgerber"]}, {"title": " \"Mining Version Histories to Guide Software Changes", "authors": ["T. Zimmermann", " P. Wei\u00dfgerber", " S. Diehl", " ", " A. Zeller"]}]},
{"doi": "10.1109/ICSE.2009.5070551", "title": "The impact of process choice in high maturity environments: An empirical analysis", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Coordinate measuring machines", "Programming", "Personnel", "Project management", "Certification", "Productivity", "Standardization", "Software testing", "Software standards", "Standards development"], "abstract": "We present the results of a three year field study of the software development process choices made by project teams at two leading offshore vendors. In particular, we focus on the performance implications of project teams that chose to augment structured, plan-driven processes to implement the CMM level-5 key process areas (KPAs) with agile methods. Our analysis of 112 software projects reveals that the decision to augment the firm-recommended, plan-driven approach with improvised, agile methods was significantly affected by the extent of client knowledge and involvement, the newness of technology, and the project size. Furthermore this decision had a significant and mostly positive impact on project performance indicators such as reuse, rework, defect density, and productivity.", "author": [{"name": "Narayan Ramasubbu", "affiliation": "Singapore Management University, Singapore"}, {"name": "Rajesh Krishna Balan", "affiliation": "Singapore Management University, Singapore"}], "time": "May 2009", "citationCount": "12", "references": [{"title": " \"A conceptual map of software process improvement\"", "authors": ["I. Aaen", " J. Arent", " L. Mathiassen ", " O. Ngwenyama"]}, {"title": " \"New directions on agile methods: a comparative analysis\"", "authors": ["P. Abrahamsson", " J. Warsta", " M. T. Siponen ", " J. Ronkainen"]}, {"title": " \"Flexible and distributed software processes: old petunias in new bowls?: Introduction\"", "authors": ["P. J. \u00c5gerfalk ", " B. Fitzgerald"]}, {"title": " \"Software effort quality and cycle time: a study of CMM level 5 projects\"", "authors": ["M. Agrawal ", " K. Chari"]}, {"title": " \"Sensitivity analysis for average treatment effects\"", "authors": ["S. O. Becker ", " M. Caliendo"]}, {"title": " \"Get ready for agile methods with care\"", "authors": ["B. Boehm"]}, {"title": " \"Balancing Discipline and Flexibility with the Spiral Model and MBASE\"", "authors": ["B. Boehm ", " D. Port"]}, {"title": " \"Selecting a project's methodology\"", "authors": ["A. Cockburn"]}, {"title": " \"The global pursuit of process maturity\"", "authors": ["B. Curtis"]}, {"title": " \"Managing process diversity while improving your practices\"", "authors": ["M. Deck"]}, {"title": " \"Effects of process maturity on quality cycle time and effort in software product development\"", "authors": ["D. E. Harter", " M. S. Krishnan ", " S. A. Slaughter"]}, {"title": " \"Quality Improvement and Infrastructure Activity Costs in Software Development: A Longitudinal Analysis\"", "authors": ["D. E. Harter ", " S. A. Slaughter"]}, {"title": " \"Software quality and the capability maturity model\"", "authors": ["J. Herbsleb", " D. Zubrow", " D. Goldenson", " W. Hayes ", " M. Paulk"]}, {"title": " \"Controlling information systems development projects: the view from the client\"", "authors": ["L. Kirsch", " S.V.D.-G. Ko ", " R. L. Purvis"]}, {"title": " \"An analysis of SEI software process assessment results: 1987-\"", "authors": ["D. H. Kitson ", " S. M. Masters"]}, {"title": " \"Process diversity in software development\"", "authors": ["M. Lindvall ", " I. Rus"]}, {"title": " \"Migrating agile methods to standardized development practice\"", "authors": ["M. Lycett", " R. D. Macredie", " C. Patel ", " R. J. Paul"]}, {"title": " \"Extreme programming from a CMM perspective\"", "authors": ["M. C. Paulk"]}, {"title": " \"How ISO 9001 compares with the CMM\"", "authors": ["M. C. Paulk"]}, {"title": " \"Capability Maturity Model\"", "authors": ["M. C. Paulk", " B. Curtis", " M. B. Chrissis ", " C. V. Weber"]}, {"title": " \"Work dispersion process-based learning and offshore software development performance\"", "authors": ["N. Ramasubbu", " S. Mithas", " M. S. Krishnan ", " C. Kemerer"]}, {"title": " \"Profiles of Level 5 CMMI Organizations\"", "authors": ["D. J. Reifer"]}, {"title": " \"XP and the CMM\"", "authors": ["D. J. Reifer"]}, {"title": " \"Knowledge partitioning in the interfirm division of labor: The case of automotive product development\"", "authors": ["A. Takeishi"]}, {"title": " \"Knowledge partitioning in outsourced software development: A field study\"", "authors": ["A. Tiwana"]}, {"title": " \"Agile software development: it's about feedback and change\"", "authors": ["L. Williams ", " A. Cockburn"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071005", "title": "Mining recurrent activities: Fourier analysis of change events", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Fourier transforms", "Time series analysis", "Testing", "Frequency domain analysis", "Spectrogram", "Discrete Fourier transforms", "Control systems", "Signal analysis", "Humans", "Data analysis"], "abstract": "Within the field of software repository mining, it is common practice to extract change-events from source control systems and then abstract these events to allow for different analyses. One approach is to apply time-series analysis by aggregating these events into signals. Time-series analysis requires that researchers specify a period of study; usually ldquonaturalrdquo periods such as days, months, and years are chosen. As yet there has been no research to validate that these assumptions are reasonable. We address this by applying Fourier analysis to discover the ldquonaturalrdquo periodicities of software development. Fourier analysis can detect and determine the periodicity of repeating events. Fourier transforms represent signals as linear combinations of sine-waves that suggest how much activity occurs at certain frequencies. If behaviors of different frequencies are mixed into one signal, they can be separated. Thus Fourier transforms can help us identify significant development process sub-signals within software projects.", "author": [{"name": "Abram Hindle", "affiliation": "University of Waterloo, Waterloo, ONT, Canada"}, {"name": "Michael W. Godfrey", "affiliation": "University of Waterloo, Waterloo, ONT, Canada"}, {"name": "Richard C. Holt", "affiliation": "University of Waterloo, Waterloo, ONT, Canada"}], "time": "May 2009", "citationCount": "6", "references": []},
{"doi": "10.1109/ICSE.2007.32", "title": "Detection of Duplicate Defect Reports Using Natural Language Processing", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Natural language processing", "Prototypes", "Vocabulary", "Software engineering", "Software testing", "Natural languages", "Mobile communication", "Failure analysis", "Relays", "Robustness"], "abstract": "Defect reports are generated from various testing and development activities in software engineering. Sometimes two reports are submitted that describe the same problem, leading to duplicate reports. These reports are mostly written in structured natural language, and as such, it is hard to compare two reports for similarity with formal methods. In order to identify duplicates, we investigate using natural language processing (NLP) techniques to support the identification. A prototype tool is developed and evaluated in a case study analyzing defect reports at Sony Ericsson mobile communications. The evaluation shows that about 2/3 of the duplicates can possibly be found using the NLP techniques. Different variants of the techniques provide only minor result differences, indicating a robust technology. User testing shows that the overall attitude towards the technique is positive and that it has a growth potential.", "author": [{"name": "Per Runeson", "affiliation": "Software Engineering Research Group, Lund University, Lund, Sweden"}, {"name": "Magnus Alexandersson", "affiliation": "Software Engineering Research Group, Lund University, Lund, Sweden"}, {"name": "Oskar Nyholm", "affiliation": "Software Engineering Research Group, Lund University, Lund, Sweden"}], "time": "May 2007", "citationCount": "232", "references": [{"title": " \"Recovering Traceability Links between Code and Documentation\"", "authors": ["Antoniol", " G.", " Canfora", " G.", " Casazza", " G.", " De Lucia", " A.", " ", " Merlo", " E."]}, {"title": " \"Impact Analysis by Mining Software and Change Request Repositories\"", "authors": ["Canfora", " G. ", " Cerulo", " L."]}, {"title": " \"Improving After-the-fact Tracing and Mapping: Supporting Software Quality Predictions\"", "authors": ["Hayes", " J. H.", " Dekhtyar", " A.", " Sundaram", " S. K."]}, {"title": " \"Advancing Candidate Link Generation for Requirements Tracing: The Study of Methods\"", "authors": ["Hayes", " J. H.", " Dekhtyar", " A.", " Sundaram", " S. K."]}, {"title": " \"Issue Tracking\"", "authors": ["Johnson", " J. N. ", " Dubois", " P. F."]}, {"title": " \"Can LSI help Reconstructing Requirements Traceability in Design and Test?\"", "authors": ["Lormans", " M. ", " van Deursen", " A."]}, {"title": " \"Natural Language Processing for Requirements Specification\"", "authors": ["Macias", " B. ", " Pulman", " S. G."]}, {"title": " \"An Information Retrieval Approach for Automatically Constructing Software Libraries\"", "authors": ["Maarek", " Y. S.", " Berry", " D. M. ", " Kaiser", " G. E."]}, {"title": " D. \"Robust", "authors": ["Minnen", " G.", " Carroll", " J. ", " Pearce"]}, {"title": " B. \"Speeding up Requirements Management in a Product Software Company: Linking Customer Wishes to Product Requirements through Linguistic Engineering.\" Proceedings of the 12th International Requirements Engineering Conference", "authors": ["Natt och Dag", " J.", " Gervasi", " V.", " Brinkkemper", " S. ", " Regnell"]}, {"title": " \"A Linguistic-Engineering Approach to Large-Scale Requirements Management\" IEEE Software", "authors": ["Natt och Dag", " J.", " Gervasi", " V.", " Brinkkemper", " S. ", " Regnell", " B."]}, {"title": " \"An experiment on linguistic tool support for consolidation of requirements from multiple sources in market-driven product development\"", "authors": ["Natt och Dag", " J.", " Thelin", " T. ", " Regnell", " B."]}, {"title": " \"Automated Support for Classifying Software Failure Reports\"", "authors": ["Podgurski", " A.", " Leon", " D.", " Francis", " P.", " Masri", " W. ", " Minch M."]}, {"title": " \"Bugzilla", "authors": ["Serrano", " M. ", " Ciordia", " I."]}, {"title": " \"Tracing requirements to defect reports: an application of information retrieval techniques\"", "authors": ["Yadla S.", " Hayes", " J. H. ", " Dekhtyar", " A."]}]},
{"doi": "10.1109/ICSE.2009.5070552", "title": "How to avoid drastic software process change (using stochastic stability)", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Stochastic processes", "Stability", "Personnel", "Propulsion", "Laboratories", "Project management", "Uncertainty", "Computer science", "Sampling methods", "Process control"], "abstract": "Before performing drastic changes to a project, it is worthwhile to thoroughly explore the available options within the current structure of a project. An alternative to drastic change are internal changes that adjust current options within a software project. In this paper, we show that the effects of numerous internal changes can out-weigh the effects of drastic changes. That is, the benefits of drastic change can often be achieved without disrupting a project. The key to our technique is SEESAW, a novel stochastic stability tool that (a) considers a very large set of minor changes using stochastic sampling; and (b) carefully selects the right combination of effective minor changes. Our results show, using SEESAW, project managers have more project improvement options than they currently realize. This result should be welcome news to managers struggling to maintain control and continuity over their project in the face of multiple demands for drastic change.", "author": [{"name": "T. Menzies", "affiliation": "CSEE, WVU, USA"}, {"name": "S. Williams", "affiliation": "CSEE, WVU, USA"}, {"name": "O. El-Rawas", "affiliation": "CSEE, WVU, USA"}, {"name": "B. Boehm", "affiliation": "Computer Science Department, University of California, San Diego, CA, USA"}, {"name": "J. Hihn", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, CA, USA"}], "time": "May 2009", "citationCount": "14", "references": [{"title": " \"Nighthawk: A two-level genetic-random unit test data generator\"", "authors": ["J. Andrews", " F. Li ", " T. Menzies"]}, {"title": " \"Conflict analysis and negotiation aids for cost-quality requirements\"", "authors": ["B. Boehm ", " H. In"]}, {"title": " \"Software development cost estimation approaches - a survey\"", "authors": ["B. Boehm", " C. Abts ", " S. Chulani"]}, {"title": " \"Feature subset selection can improve software cost estimation\"", "authors": ["Z. Chen", " T. Menzies ", " D. Port"]}, {"title": " \"Experimental results on the application of satisfiability algorithms to scheduling problems\"", "authors": ["J. Crawford ", " A. Baker"]}, {"title": " \"A critique of software defect prediction models\"", "authors": ["N. E. Fenton ", " M. Neil"]}, {"title": " \"Getting results from search-based approaches to software engineering\"", "authors": ["M. Harman ", " J. Wegener"]}, {"title": " \"Optimizing requirements decisions with keys\"", "authors": ["O. Jalali", " T. Menzies ", " M. Feather"]}, {"title": " \"A general stochastic approach to solving problems with hard and soft constraints\" in The Satisfiability Problem: Theory and Applications", "authors": ["H. Kautz", " B. Selman ", " Y. Jiang"]}, {"title": " \"Selecting best practices for effort estimation\"", "authors": ["T. Menzies", " Z. Chen", " J. Hihn ", " K. Lum"]}, {"title": " \"On the value of stochastic abduction (if you fix everything you lose fixes for everything else)\"", "authors": ["T. Menzies", " O. Elrawas", " D. Baker", " J. Hihn ", " K. Lum"]}, {"title": " \"The business case for automated software engineerng\"", "authors": ["T. Menzies", " O. Elrawas", " J. Hihn", " M. Feathear", " B. Boehm ", " R. Madachy"]}, {"title": " \"A probabilistic model for predicting software development effort\"", "authors": ["P. C. Pendharkar", " G. H. Subramanian ", " J. A. Rodger"]}, {"title": " \"Modeling software processes quantitatively and assessing the impact of potential process changes of process performance\"", "authors": ["D. Raffo"]}, {"title": " \"Evaluating the impact of a new technology using simulation: The case for mining software repositories\"", "authors": ["D. Raffo ", " T. Menzies"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071006", "title": "Automatic evaluation of API usability using complexity metrics and visualizations", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Usability", "Software engineering", "Packaging", "Guidelines", "Computer languages", "Programming", "Java", "Data visualization", "Performance analysis", "Inspection"], "abstract": "APIs are one of the most important concepts in today's modern software engineering. They allow software developers to work independently and minimize the impact caused by changes in the implementation of software services. Despite their importance, currently there are only a few approaches that guide the design of an API. In this paper, we present an approach, and associated tool, that allows an API client (developer) to evaluate the usability of an API and decide whether to use it (release it). In this aspect, our approach goes beyond previous approaches by performing this complexity and usability API analysis automatically.", "author": [{"name": "Cleidson R. B. de Souza", "affiliation": "Faculdade de Computa\u00e7\u00e3o, Universidade Federal do Par\u00e1, Brazil"}, {"name": "David L. M. Bentolila", "affiliation": "Faculdade de Computa\u00e7\u00e3o, Universidade Federal do Par\u00e1, Brazil"}], "time": "May 2009", "citationCount": "13", "references": []},
{"doi": "10.1109/ICSE.2007.14", "title": "An Empirical Study of the Evolution of an Agile-Developed Software System", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software systems", "Genetic programming", "Productivity", "Software measurement", "Pattern analysis", "Control systems", "Collaborative work", "Large-scale systems", "Documentation", "Personnel"], "abstract": "We have analyzed evolution patterns over two and a half years for a system developed using extreme programming. We find that the system shows a smooth pattern of growth overall, that (McCabe) code complexity is low, and that the relative amount of complexity control work (e.g. refactoring) is higher than in other systems we have studied. To interpret these results, we have drawn on qualitative data including the results of an observational study, records of progress and productivity, and comments on our findings from team members.", "author": [{"name": "A. Capiluppi", "affiliation": "University of Lincoln, UK"}, {"name": "J. Fernandez-Ramil", "affiliation": "Open University, UK"}, {"name": "J. Higman", "affiliation": "University of Lincoln, UK"}, {"name": "H.C. Sharp", "affiliation": "University of Lincoln, UK"}, {"name": "N. Smith", "affiliation": "Independent Agile Coach, London, UK"}], "time": "May 2007", "citationCount": "14", "references": [{"title": "Bennett K.H. and Rajlich V.T. (2000) 'Software maintenance and evolution: a roadmap\"", "authors": []}]},
{"doi": "10.1109/ICSE.2009.5070553", "title": "UEMan: A tool to manage user evaluation in development environments", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Environmental management", "Programming", "Software development management", "User centered design", "Feedback", "Quality management", "User interfaces", "Data analysis", "Software libraries", "Java"], "abstract": "One of the challenges in software development is to collect and analyze the end users' feedback in an effective and efficient manner. In this paper we present a tool to manage user evaluation alongside the process of software development. The tool is based on the idea that user evaluation should be managed iteratively from within the integrated development environment (IDE) in order to provide high quality user interface. The main capabilities include creating the experiment object as part of the software project; deriving development tasks from the analysis of evaluation data; and tracing these tasks to and from the code. Further, we provide a library to enable development of Java aspects for creation of automatic measures to increase the body of the evaluation data. Using this tool, development teams can manage user-centered design (UCD) activities at the IDE level, hence developing software products with an adequate level of usability.", "author": [{"name": "Shah Rukh Humayoun", "affiliation": "Dipartimento di Informatica e Sistemistica \u201cA. Ruberti\u201d, Sapienza - Universit\u00e0 di Roma"}, {"name": "Yael Dubinsky", "affiliation": "IBM Haifa Research Lab, Haifa, Israel"}, {"name": "Tiziana Catarci", "affiliation": "Dipartimento di Informatica e Sistemistica \u201cA. Ruberti\u201d, Sapienza - Universit\u00e0 di Roma, Italy"}], "time": "May 2009", "citationCount": "3", "references": [{"title": " \"Integrating user evaluation into software development environments\"", "authors": ["Y. Dubinsky", " T. Catarci", " S. R. Humayoun ", " S. Kimani"]}, {"title": " \"Eclipse Plug-in to Manage User Centered Design\"", "authors": ["Y. Dubinsky", " S. R. Humayoun ", " T. Catarci"]}, {"title": " \"Key principles for user-centered systems design\"", "authors": ["J. Gulliksen", " B. Goransson", " I. Boivie", " S. Blomkvist", " J. Persson ", " A. Caj"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071007", "title": "The inference validity problem in legal discovery", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Law", "Legal factors", "Databases", "Software engineering", "Computer science", "Software quality", "Costs", "Privacy", "Information security", "Programming profession"], "abstract": "This paper introduces the inference validity problem, a software-engineering concern that manifests in and complicates the pre-trial process of discovery in litigation. The problem is related to the requirements validation problem in traditional software engineering, but with stricter constraints on stakeholder communication and potentially severe liability risks on the part of software engineers who are retained as expert witnesses. We propose an approach, based on the use of formal methods and traceability, to enable software engineers to avoid this problem, thereby increasing the quality of written opinions while mitigating the risk of liability.", "author": [{"name": "R. E. K. Stirewalt", "affiliation": "Department of Computer Science and Engineering, Michigan State University, East Lansing, MI, USA"}, {"name": "Laura K. Dillon", "affiliation": "Department of Computer Science and Engineering, Michigan State University, East Lansing, MI, USA"}, {"name": "Eileen T. Kraemer", "affiliation": "Department of Computer Science, University of Georgia, Athens, GA, USA"}], "time": "May 2009", "citationCount": "2", "references": []},
{"doi": "10.1109/ICSE.2007.13", "title": "Agility and Experimentation: Practical Techniques for Resolving Architectural Tradeoffs", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Availability", "Security", "Costs", "Usability", "Time to market", "Collaboration", "Control systems", "Delay", "Software engineering", "Space technology"], "abstract": "This paper outlines our experiences with making architectural tradeoffs between performance, availability, security, and usability, in light of stringent cost and time-to-market constraints, in an industrial web-conferencing system. We highlight the difficulties in anticipating future architectural requirements and tradeoffs and the value of using agility and experiments as a tool for mitigating architectural risks in situations when up front pen- and-paper analysis is simply impossible.", "author": [{"name": "T.C. Nicholas Graham", "affiliation": "School of Computing, Queen's University, Kingston, Canada"}, {"name": "Rick Kazman", "affiliation": "Software Engineering Institute, Carnegie Mellon University, USA"}, {"name": "Chris Walmsley", "affiliation": "Namzak Laboratories, Kingston, ONT, Canada"}], "time": "May 2007", "citationCount": "4", "references": [{"title": " \"Experience with Performing Architecture Tradeoff Analysis\"", "authors": ["R. Kazman", " M. Barbacci", " M. Klein", " S. J. Carriere", " S. G. Woods"]}]},
{"doi": "10.1109/ICSE.2009.5070554", "title": "TranStrL: An automatic need-to-translate string locator for software internationalization", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Application software", "Graphical user interfaces", "Open source software", "Java", "Computer science", "Software prototyping", "Databases", "Laboratories", "Educational technology", "Computer science education"], "abstract": "Software internationalization is often necessary when distributing software applications to different regions around the world. In many cases, developers often do not internationalize a software application at the beginning of the development stage. To internationalize such an existing application, developers need to externalize some hard-coded constant strings to resource files, so that translators can easily translate the application to be in a local language without modifying its source code. Since not all the constant strings require externalization, locating those need-to-translate constant strings is a basic task that the developers must conduct. In this paper, we present TranStrL, an Eclipse plug-in tool that automatically locates need-to-translate constant strings in Java code. Our tool maintains a pre-collected list of API methods related to the Graphical User Interface (GUI), and then searches for need-to-translate strings in the source code starting from the invocations of these API methods using string-taint analysis.", "author": [{"name": "Xiaoyin Wang", "affiliation": "Institute of Software, School of Electronics Engineering and Computer Science, Key laboratory of High Confidence Software Technologies, Peking University, Beijing, China"}, {"name": "Lu Zhang", "affiliation": "Institute of Software, School of Electronics Engineering and Computer Science, Key laboratory of High Confidence Software Technologies, Peking University, Beijing, China"}, {"name": "Tao Xie", "affiliation": "Institute of Software, School of Electronics Engineering and Computer Science, Key laboratory of High Confidence Software Technologies, North Carolina State University, Raleigh, NC, USA"}, {"name": "Hong Mei", "affiliation": "Institute of Software, School of Electronics Engineering and Computer Science, Key laboratory of High Confidence Software Technologies, Peking University, Beijing, China"}, {"name": "Jiasu Sun", "affiliation": "Institute of Software, School of Electronics Engineering and Computer Science, Key laboratory of High Confidence Software Technologies, Peking University, Beijing, China"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " \"Precise analysis of string expressions\"", "authors": ["A. Christensen", " A. Mller ", " M. Schwartzbach"]}, {"title": " \"Global data flow analysis and iterative algorithms\"", "authors": ["J. Kam ", " J. Ullman"]}, {"title": " \"Locating need-to-translate constant strings for software internationalization\"", "authors": ["X. Wang", " L. Zhang", " T. Xie", " H. Mei ", " J. Sun"]}, {"title": " \"Sound and precise analysis of web applications for injection vulnerabilities\"", "authors": ["G. Wassermann ", " Z. Su"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071008", "title": "White-box approaches for improved testing and analysis of configurable software systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software testing", "System testing", "Software systems", "Runtime", "Costs", "Computer science", "Optimizing compilers", "Code standards", "Laboratories", "Programming profession"], "abstract": "There is a significant conceptual gap between the source code of a configurable system and the runtime behaviors of its individual configurations. In the source, configurations are woven together into a conceptually unified program. At runtime, however, they are largely treated as independent executables. This gap leads to static analyses that, by acting on the source representing the entire configurable system, yield imprecise results with respect to individual executables. Testing, in contrast, acts on individual executables without leveraging the configurable codebase per se. In this paper, we sketch a research path that seeks to narrow the configuration source-runtime gap, based on the observation that most configurations share significant amounts of source-level structure (hence ldquowhite-boxrdquo) with other, related, configurations. We seek to identify and exploit this structure to reduce analysis and testing effort by sharing analysis and test results among related configurations.", "author": [{"name": "Marius Nita", "affiliation": "Computer Science & Engineering, University of Washington, USA"}, {"name": "David Notkin", "affiliation": "Computer Science & Engineering, University of Washington, USA"}], "time": "May 2009", "citationCount": "6", "references": [{"title": "E. W. Dijkstra. The structure of the \"THE\"-multiprogram-ming system. Commun. ACM", "authors": []}]},
{"doi": "10.1109/ICSE.2007.92", "title": "Usability Implications of Requiring Parameters in Objects' Constructors", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Usability", "Programming profession", "Productivity", "Reactive power", "Software testing", "Error correction", "Java", "Computer languages", "Software engineering", "Debugging"], "abstract": "The usability of APIs is increasingly important to programmer productivity. Based on experience with usability studies of specific APIs, techniques were explored for studying the usability of design choices common to many APIs. A comparative study was performed to assess how professional programmers use APIs with required parameters in objects' constructors as opposed to parameterless \"default\" constructors. It was hypothesized that required parameters would create more usable and self- documenting APIs by guiding programmers toward the correct use of objects and preventing errors. However, in the study, it was found that, contrary to expectations, programmers strongly preferred and were more effective with APIs that did not require constructor parameters. Participants' behavior was analyzed using the cognitive dimensions framework, and revealing that required constructor parameters interfere with common learning strategies, causing undesirable premature commitment\n<sub xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">.</sub>", "author": [{"name": "Jeffrey Stylos", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Steven Clarke", "affiliation": "Microsft, USA"}], "time": "May 2007", "citationCount": "48", "references": [{"title": " \"Profiling software API usability for consumer electronics\"", "authors": ["Bore", " C", " ", " S. Bore"]}, {"title": " \"API Usability and the Cognitive Dimensions Framework\"", "authors": ["Clarke", " S."]}, {"title": " \"Measuring API Usability\"", "authors": ["Clarke", " S."]}, {"title": " \"Usability Analysis of Visual Programming Environments: A 'Cognitive Dimensions' Framework\"", "authors": ["Green", " T.R.G.", " ", " M. Petre"]}, {"title": " \"Building More Usable APIs\"", "authors": ["McLellan", " S.G.", " A.W. Roesler", " "]}]},
{"doi": "10.1109/ICSE.2009.5070555", "title": "SmartTutor: Creating IDE-based interactive tutorials via editable replay", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Tutorial", "Programming profession", "Employee welfare", "Software performance", "Educational technology", "Computer science education", "Educational programs", "Computer science", "Navigation", "Documentation"], "abstract": "Interactive tutorials, like Eclipse's cheat sheets, are good for novice programmers to learn how to perform tasks (e.g., checking out a CVS project) in an integrated development environment (IDE). Creating these tutorials often requires programming effort that is time-consuming and difficult. In this paper, we propose an approach using editable replay of user actions to help authors create interactive tutorials with little programming effort. User actions of performing a task can be recorded, edited, and presented as a tutorial. The tutorial can be replayed interactively for mentoring. We present our SmartTutor implementation in the Eclipse IDE and conduct a preliminary evaluation on it, which demonstrates efficiency gains for the tutorial authors.", "author": [{"name": "Ying Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Gang Huang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Nuyun Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Hong Mei", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}], "time": "May 2009", "citationCount": "5", "references": [{"title": " \"Editable Replay of IDE-based Repetitive Tasks\"", "authors": ["Zhang ."]}, {"title": " \"Selective Capture and Replay of Program Executions. ACM SIGSOFT Software Engineering Notes\"", "authors": ["A. Orso ", " B. Kennedy"]}, {"title": " \"A focused learning environment for Eclipse\"", "authors": ["I. Safer", " G. Murphy", " J. Waterhouse ", " J. Li"]}, {"title": " \"Using Task Context to Improve Programmer Productivity\"", "authors": ["M. Kersten ", " G. Murphy"]}, {"title": " \"Guidance through Active Concerns\"", "authors": ["B. Dagenais ", " H. Ossher"]}, {"title": " \"DocWizards: A System for Authoring Follow-me Documentation Wizards\"", "authors": ["Berman ."]}, {"title": " \"Mismar: a new approach to developer documentation\"", "authors": ["B. Dagenais ", " H. Ossher"]}, {"title": " \"JTutor: an Eclipse plug-in suite for creation and replay of code-based tutorials\"", "authors": ["Kojouharov ."]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071009", "title": "Guided path exploration for regression test generation", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Automatic testing", "Computer science", "Fault detection"], "abstract": "Regression test generation aims at generating a test suite that can detect behavioral differences between the original and the modified versions of a program. Regression test generation can be automated by using dynamic symbolic execution (DSE), a state-of-the-art test generation technique, to generate a test suite achieving high structural coverage. DSE explores paths in the program to achieve high structural coverage, and exploration of all these paths can often be expensive. However, if our aim is to detect behavioral differences between two versions of a program, we do not need to explore all paths in the program as not all these paths are relevant for detecting behavioral differences. In this paper, we propose a guided path exploration approach that avoids exploring irrelevant paths and gives priority to more promising paths (in terms of detecting behavioral differences) such that behavioral differences are more likely to be detected earlier in path exploration. Preliminary results show that our approach requires about 12.9% fewer runs on average (maximum 25%) to cause the execution of a changed statement and 11.8% fewer runs on average (maximum 31.2%) to cause program-state differences after its execution than the search strategies without guidance.", "author": [{"name": "Kunal Taneja", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}, {"name": "Nikolai Tillmann", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}, {"name": "Jonathan de Halleux", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}, {"name": "Wolfram Schulte", "affiliation": "Microsoft Research Limited, Redmond, WA, USA"}], "time": "May 2009", "citationCount": "6", "references": []},
{"doi": "10.1109/ICSE.2007.64", "title": "Performance Evaluation and Prediction for Legacy Information Systems", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Information systems", "Predictive models", "Databases", "Production systems", "Australia", "System performance", "Performance analysis", "Capacity planning", "Software performance", "Hardware"], "abstract": "Database-centric information systems are critical to the operations of large organisations. In particular, they often process a large amount of data with stringent performance requirements. Currently, however, there is a lack of systematic approaches to evaluating and predicting their performance when they are subject to an exorbitant growth of workload. In this paper, we introduce such a systematic approach that combines benchmarking, production system monitoring, and performance modelling (BMM) to address this issue. The approach helps the performance analyst to understand the system's operating environment and quantify its performance characteristics under varying load conditions via monitoring and benchmarking. Based on such realistic measurements, modelling techniques are used to predict the system performance. Our experience of applying BMM to a real-world system demonstrates the capability of BMM in predicting the performance of existing and enhanced software architectures in planning for its capacity growth.", "author": [{"name": "Yan Jin", "affiliation": "Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Antony Tang", "affiliation": "Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Jun Han", "affiliation": "Swinburne University of Technology, Hawthorn, VIC, Australia"}, {"name": "Yan Liu", "affiliation": "NICTA, NSW, Australia"}], "time": "May 2007", "citationCount": "3", "references": []},
{"doi": "10.1109/ICSE.2009.5070556", "title": "A toolset for automated failure analysis", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Failure analysis", "Testing", "Law", "Legal factors", "Fault diagnosis", "Filters", "Event detection", "Information resources", "Web server", "Phase detection"], "abstract": "Classic fault localization techniques can automatically provide information about the suspicious code blocks that are likely responsible for observed failures. This information is useful, but not sufficient to completely understand the causes of failing executions, which still require further (time-consuming) investigations to be exactly identified. A useful and comprehensive source of information is frequently given by the set of unexpected events that have been observed during failures. Sequences of unexpected events are usually simple to be interpret, and testers can guess the expected correct sequences of events from the faulty sequences. In this paper, we present a tool that automatically identifies anomalous events that likely caused failures, filters the possible false positives, and presents the resulting data by building views that show chains of cause-effect relations, i.e., views that show when anomalous events are caused by other anomalous events. The use of the technique to investigate a fault in the Tomcat application server is also presented in the paper.", "author": [{"name": "Leonardo Mariani", "affiliation": "University of Lugano, Lugano, Switzerland"}, {"name": "Fabrizio Pastore", "affiliation": "University of Lugano, Lugano, Switzerland"}, {"name": "Mauro Pezze", "affiliation": "University of Lugano, Lugano, Switzerland"}], "time": "May 2009", "citationCount": "4", "references": [{"title": " \"Exploiting hardware performance counters with flow and context sensitive profiling\"", "authors": ["G. Ammons", " T. Ball ", " J. R. Larus"]}, {"title": " \"Mining specifications\" in proceedings of the 29th Symposium on Principles of Programming Languages", "authors": ["G. Ammons", " R. Bodik ", " J. R. Larus"]}, {"title": " \"Lightweight defect localization for java\"", "authors": ["V. Dallmeier", " C. Lindig ", " A. Zeller"]}, {"title": " \"Dynamically discovering likely program invariants to support program evolution\"", "authors": ["M. D. Ernst", " J. Cockrell", " W. G. Griswold ", " D. Notkin"]}, {"title": " \"Tracking down software bugs using automatic anomaly detection\"", "authors": ["S. Hangal ", " M. S. Lam"]}, {"title": " \"Visualization of test information to assist fault localization\"", "authors": ["J. Jones", " M. Harrold ", " J. Stasko"]}, {"title": " \"Dynamic detection of cots components incompatibility\"", "authors": ["L. Mariani ", " M. Pezz\u00e8"]}, {"title": " \"An empirical study of test case filtering techniques based on exercising information flows\"", "authors": ["W. Masri", " A. Podgurski ", " D. Leon"]}, {"title": " \"Semantic anomaly detection in online data sources\"", "authors": ["O. Raz", " P. Koopman ", " M. Shaw"]}, {"title": " \"Fault localization with nearest neighbor queries\"", "authors": ["M. Renieris ", " S. Reiss"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071010", "title": "From system specifications to component behavioral models", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Computer science", "Context modeling", "Uncertainty", "Unified modeling language", "Concrete", "Independent component analysis"], "abstract": "Early system specifications, such as use-case scenarios and properties, rarely completely specify the system. Partial models of system-level behavior, derived from these specifications, have proven useful in early system analysis. We believe that the scope of possible analyses can be enhanced by utilizing component-level partial models. In this paper, we outline an algorithm for deriving a component-level Modal Transition System (MTS) from system-level scenario and property specifications. The generated MTSs capture the possible component implementations that (1) necessarily provide the behavior required by the scenarios, (2) restrict behavior forbidden by the properties, and (3) leave the behavior that is neither explicitly required nor forbidden as undefined. We discuss how these generated models can help discover system-design flaws, support requirements elicitation, and help select off-the-shelf components.", "author": [{"name": "Ivo Krka", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}, {"name": "George Edwards", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}, {"name": "Yuriy Brun", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}, {"name": "Nenad Medvidovic", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}], "time": "May 2009", "citationCount": "5", "references": []},
{"doi": "10.1109/ICSE.2007.77", "title": "Software Development Environments for Scientific and Engineering Software: A Series of Case Studies", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Programming", "Software engineering", "Application software", "High performance computing", "Software performance", "Productivity", "Supercomputers", "Acoustical engineering", "Computer science", "Sun"], "abstract": "The need for high performance computing applications for computational science and engineering projects is growing rapidly, yet there have been few detailed studies of the software engineering process used for these applications. The DARPA High Productivity Computing Systems Program has sponsored a series of case studies of representative computational science and engineering projects to identify the steps involved in developing such applications (i.e. the life cycle, the workflows, technical challenges, and organizational challenges). Secondary goals were to characterize tool usage and identify enhancements that would increase the programmers' productivity. Finally, these studies were designed to develop a set of lessons learned that can be transferred to the general computational science and engineering community to improve the software engineering process used for their applications. Nine lessons learned from five representative projects are presented, along with their software engineering implications, to provide insight into the software development environments in this domain.", "author": [{"name": "Jeffrey C. Carver", "affiliation": "Department of Computer Science and Engineering, Mississippi State University, USA"}, {"name": "Richard P. Kendall", "affiliation": "Software Engineering Institute, Carnegie Mellon University, Qatar"}, {"name": "Susan E. Squires", "affiliation": "Sun Microsystems, USA"}, {"name": "Douglass E. Post", "affiliation": "Computing Modernization Office"}], "time": "May 2007", "citationCount": "76", "references": [{"title": " \"An Empirical Study of Software Design Practices.\" IEEE Transactions on Software Engineering", "authors": ["Card", " D.N.", " Church", " V.E.", " Agresti", " W.W."]}, {"title": " M. \"HPC Programmer Productivity: A Case Study of Novice HPC Programmers\". In Proceedings of SuperComputing. 2005. p. 35", "authors": ["Hochstein", " L.", " Carver", " J.", " Shull", " F.", " Asgari", " S.", " Basili", " V.", " Hollingsworth", " J.K.", " ", " Zelkowitz"]}, {"title": " P. \"Workshop on software engineering for high performance computing system (HPCS) applications\". In Proceedings of Software Engineering", "authors": ["Johnson"]}, {"title": " P.M. \"Second international workshop on software engineering for high performance computing system applications\". In Proceedings of Software Engineering", "authors": ["Johnson"]}, {"title": " W.F. \"Case study: extreme programming in a university environment\". In Proceedings of 23rd International Conference on Software Engineering. May 12-19", "authors": ["M\u00fcller", " M.M. ", " Tichy"]}, {"title": " S.M. \"Case studies for software engineers\". In Proceedings of Software Engineering", "authors": ["Perry", " D.E.", " Sim", " S.E.", " ", " Easterbrook"]}, {"title": " \"Software Project Management and Quality Engineering Practices for Complex", "authors": ["Post", " D.E. ", " Kendall", " R.P."]}, {"title": " E. \"Case study of the Falcon Project\". In Proceedings of Second International Workshop on Software Engineering for High Performance Computing Systems Applications (Held at ICSE 2005). St. Louis", "authors": ["Post", " D.E.", " Kendall", " R.P.", " ", " Whitney"]}, {"title": " V.R. \"An Empirical Study of Communication in Code Inspections\". In Proceedings of 19th International Conference on Software Engineering. Boston", "authors": ["Seaman", " C.B. ", " Basili"]}, {"title": " V.R. \"Empirical Study Design in the Area of High Performance Computing (HPC)\". In Proceedings of International Symposium on Empirical Software Engineering. Noosa Heads", "authors": ["Shull", " F.", " Carver", " J.", " Hochstein", " L.", " ", " Basili"]}, {"title": " M.E. \"HPC Needs a Tool Strategy\". In Proceedings of Second International Workshop on Software Engineering for High Performance Computing System Applications (held at ICSE 2005). St. Louis. 2005. p. 15", "authors": ["Van De Vanter", " M.L.", " Post", " D.", " ", " Zosel"]}]},
{"doi": "10.1109/ICSE.2009.5070557", "title": "JUnitMX - A change-aware unit testing tool", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software testing", "Automatic testing", "Computer science", "System testing", "Software systems", "Writing", "Feedback", "Software tools", "Protection", "Solids"], "abstract": "Developers use unit testing to improve the quality of software systems. Current development tools for unit testing help with automating test execution, with reporting results, and with generating test stubs. However, they offer no aid for designing tests aimed specifically at exercising the effects of changes to a program. This paper describes a unit testing tool that leverages a change model to assist developers in the creation of new unit tests. The tool provides developers with quantitative feedback and detailed information about change effects, which not only facilitate the writing of more effective tests, but also motivate developers with an achievable coverage goal.", "author": [{"name": "Jan Wloka", "affiliation": "Department of Computer Science, Rutgers University, Piscataway, NJ, USA"}, {"name": "Barbara G. Ryder", "affiliation": "Department of Computer Science, Virginia Technology, Blacksburg, VA, USA"}, {"name": "Frank Tip", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"}], "time": "May 2009", "citationCount": "3", "references": [{"title": " \"Matrix: Maintenance-oriented testing requirements identifier and examiner\"", "authors": ["T. Apiwattanapong", " R. Santelices", " P. K. Chittimalli", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Crisp: A debugging tool for Java programs\"", "authors": ["O. Chesley", " X. Ren ", " B. G. Ryder"]}, {"title": " \"Questioning Extreme Programming\" in The XP Series", "authors": ["P. McBreen"]}, {"title": " \"An empirical comparison of dynamic impact analysis algorithms\"", "authors": ["A. Orso", " T. Apiwattanapong", " M. J. Harrold", " G. Rothermel ", " J. B. Law"]}, {"title": " \"Identifying failure causes in Java programs: An application of change impact analysis\"", "authors": ["X. Ren", " O. C. Chesley ", " B. G. Ryder"]}, {"title": " \"Heuristic ranking of java program edits for fault localization\"", "authors": ["X. Ren ", " B. G. Ryder"]}, {"title": " \"Chianti: A tool for practical change impact analysis of Java programs\"", "authors": ["X. Ren", " F. Shah", " F. Tip", " B. G. Ryder ", " O. Chesley"]}, {"title": " \"Change Impact Analysis for Object-oriented Programs\"", "authors": ["B. G. Ryder ", " F. Tip"]}, {"title": " \"Finding Failure-inducing Changes in Java Programs Using Change Classification\"", "authors": ["M. Stoerzer", " B. G. Ryder", " X. Ren ", " F. Tip"]}, {"title": " \"Safe-commit analysis to facilitate team software development\"", "authors": ["J. Wloka", " B. Ryder", " F. Tip ", " X. Ren"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071011", "title": "High-level multicore programming with XJava", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Multicore processing", "Parallel processing", "Parallel programming", "Java", "Libraries", "Pipelines", "Master-slave", "Filters", "Signal processing", "Graphics"], "abstract": "Multicore chips are becoming mainstream, but programming them is difficult because the prevalent thread-based programming model is error-prone and does not scale well. To address this problem, we designed XJava, an extension of Java that permits the direct expression of producer/consumer, pipeline, master/slave, and data parallelism. The central concept of the extension is the task, a parallel activity similar to a filter in Unix. Tasks can be combined with new operators to create arbitrary nestings of parallel activities. Preliminary experience with XJava and its compiler suggests that the extensions lead to code savings and reduce the potential for synchronization defects, while preserving the advantages of object-orientation and type-safety. The proposed extensions provide intuitive ldquowhat-you-see-is-what-you-getrdquo parallelism. They also enable other software tools, such as auto-tuning and accurate static analysis for race detection.", "author": [{"name": "Frank Otto", "affiliation": "University of Karlsruhe, Karlsruhe, Germany"}, {"name": "Victor Pankratius", "affiliation": "University of Karlsruhe, Karlsruhe, Germany"}, {"name": "Walter F. Tichy", "affiliation": "University of Karlsruhe, Karlsruhe, Germany"}], "time": "May 2009", "citationCount": "5", "references": []},
{"doi": "10.1109/ICSE.2007.25", "title": "Company-Wide Implementation of Metrics for Early Software Fault Detection", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Fault detection", "Programming", "Testing", "Fault diagnosis", "Costs", "Quality assurance", "Software performance", "Time to market", "Customer satisfaction", "Software measurement"], "abstract": "To shorten time-to-market and improve customer satisfaction, software development companies commonly want to use metrics for assessing and improving the performance of their development projects. This paper describes a measurement concept for assessing how good an organization is at finding faults when most cost-effective, i. e. in most cases early. The paper provides results and lessons learned from applying the measurement concept widely at a large software development company. A major finding was that on average, 64 percent of all faults found would have been more cost effective to find during unit tests. An in-depth study of a few projects at a development unit also demonstrated how to use the measurement concept for identifying which parts in the fault detection process that needs to be improved to become more efficient (e.g. reduce the amount of time spent on rework).", "author": [{"name": "Lars-Ola Damm", "affiliation": "School of Engineering, Blekinge Institute of Technology, Ronneby, Sweden"}, {"name": "Lars Lundberg", "affiliation": "School of Engineering, Blekinge Institute of Technology, Ronneby, Sweden"}], "time": "May 2007", "citationCount": "5", "references": [{"title": " \"De-motivators for Software Process Improvement: An Analysis of Practitioners' Views\"", "authors": ["N. Baddoo", " ", " T. Hall"]}, {"title": " \"An Industrial Case Study of the Verification and Validation Activities\"", "authors": ["T. Berling", " ", " T. Thelin"]}, {"title": " \"Software Defect Reduction Top 10 List\"", "authors": ["B. W. Boehm ", " V. Basili"]}, {"title": " \"Learning from our Mistakes with Defect Causal Analysis\" IEEE Software", "authors": ["D.N. Card"]}, {"title": " \"Test and development process retrospective - a case study using ODC triggers\"", "authors": ["R. Chillarege ", " K. Prasad"]}, {"title": " \"Results from Introducing Component-Level Test Automation and Test-Driven Development\"", "authors": ["L.-O. Damm ", " L. Lundberg"]}, {"title": " \"Faults-slipthrough - A Concept for Measuring the Efficiency of the Test Process\"", "authors": ["L.-O. Damm", " L. Lundberg", " ", " C. Wohlin"]}, {"title": " \"A Practical View of Software Measurement and Implementation Experience Within Motorola\". IEEE Transactions on Software Engineering", "authors": ["M. Daskalantonakis"]}, {"title": " \"Measurement Programs in Software Development: Determinants of Success\"", "authors": ["A. Gopal", " M.S. Krishnan", " T. Mukhopadhyay", " ", " D.R. Goldenson"]}, {"title": " \"Phase Containment for Software Quality Improvement\"", "authors": ["A. R. Hevner"]}, {"title": " \"Steer Clear of Hazards on trie Road to Software Measurement Success\"", "authors": ["A. McQuaild", " ", " CA. Dekkers"]}, {"title": " \"Validation of an Approach for Improving Existing Measurement Frameworks\"", "authors": ["Mendonca", " M. G.", " ", " Basili", " V. R."]}, {"title": " \"Lessons Learned in Building a Corporate Metrics Program", "authors": ["S.L. Pfleeger"]}, {"title": " \"Software-Engineering Research Revisited\"", "authors": ["C. Potts"]}, {"title": " \"Key Success Factors for Implementing Software Process Improvement: A Maturity-Based Analysis\"", "authors": ["A. Rainer", " ", " T. Hall"]}, {"title": " \"What Do We Know about Defect Detection Methods?\"", "authors": ["P. Runeson", " C. Andersson.", " T. Thelin", " A. Andrews", " ", " T. Berling"]}, {"title": " \"What We Have Learned About Fighting Defects\"", "authors": ["F. Shull", " V. Basili", " B. Boehm", " W. Brown", " P. Costa", " M. Lindwall", " D. Port", " I. Rus", " R. Tesoriero", " ", " M. Zelkowitz", " M."]}]},
{"doi": "10.1109/ICSE.2009.5070558", "title": "CocoViz with ambient audio software exploration", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Visualization", "Navigation", "Informatics", "Ear", "Software packages", "Packaging", "Software prototyping", "Software maintenance", "Documentation", "Maintenance engineering"], "abstract": "For ages we used our ears side by side with our ophthalmic stimuli to gather additional information, leading and supporting us in our visualization. Nowadays numerous software visualization techniques exist that aim to facilitate program comprehension. In this paper we discuss how we can support such software comprehension visualization with environmental audio and lead users to identify relevant aspects. We use cognitive visualization techniques and audio concepts described in our previous work to create an ambient audio software exploration (AASE) out of program entities (packages, classes ...) and their mapped properties. The concepts where implemented in a extended version of our tool called CocoViz. Our first results with the prototype shows that with this combination of visual and aural means we can provide additional information to lead users during program comprehension tasks.", "author": [{"name": "Sandro Boccuzzo", "affiliation": "Department of Informatics, University of Zurich, Switzerland"}, {"name": "Harald C. Gall", "affiliation": "Department of Informatics, University of Zurich, Switzerland"}], "time": "May 2009", "citationCount": "5", "references": [{"title": " \"Software visualization for debugging\"", "authors": ["R. Baecker", " C. DiGiano ", " M. Aaron"]}, {"title": " \"Listening to program slices\"", "authors": ["L. I. Berman ", " K. B. Gallagher"]}, {"title": " \"CocoViz: Supported cognitive software visualization\"", "authors": ["S. Boccuzzo ", " H. C. Gall"]}, {"title": " \"CocoViz: Towards cognitive software visualization\"", "authors": ["S. Boccuzzo ", " H. C. Gall"]}, {"title": " \"Software visualization with audio supported cognitive glyphs\"", "authors": ["S. Boccuzzo ", " H. C. Gall"]}, {"title": " \"Colour and sound in algorithm animation\"", "authors": ["M. Brown ", " J. Hershberger"]}, {"title": " \"Populating a release history database from version control and bug tracking systems\"", "authors": ["M. Fischer", " M. Pinzger ", " H. Gall"]}, {"title": " \"Detection of logical coupling based on product release history\"", "authors": ["H. Gall", " K. Hajek ", " M. Jazayeri"]}, {"title": " \"Polymetric views \u2014 a lightweight visual approach to reverse engineering\"", "authors": ["M. Lanza ", " S. Ducasse"]}, {"title": " \"Navigation and comprehension of programs by novice programmers\"", "authors": ["R. Mosemann ", " S. Wiedenbeck"]}, {"title": " \"Software visualisation for object-oriented program comprehension\"", "authors": ["M. J. Pacione"]}, {"title": " \"Comprehension strategies in programming\"", "authors": ["N. Pennington"]}, {"title": " \"Stimulus structures and mental representations in expert comprehension of computer programs\"", "authors": ["N. Pennington"]}, {"title": " \"Wad: A feasibility study using the wicked audio debugger\"", "authors": ["A. Stefik", " R. Alex", "er", " R. Patterson ", " J. Brown"]}, {"title": " \"External auditory representations of programs: Past present and futurean aesthetic perspective\"", "authors": ["P. Vickers"]}, {"title": " \"psychoacoustics: Facts and models\"", "authors": ["E. Zwicker", " H. Fastl ", " W. M. Hartmann"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071012", "title": "Multi-dimensional service compositions", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Application software", "Containers", "Web and internet services", "Global Positioning System", "Multidimensional systems", "Assembly", "RFID tags", "Logistics", "Context-aware services", "Proposals"], "abstract": "The wide diffusion of reliable Internet is pushing two key novelties in the conception of modern software applications: the software as a service paradigm and the idea of the Internet of Things. Traditionally, services and things have been considered as separate entities, even addressing different needs and application domains. In contrast, we feel that services and things should be integrated and demand for proper design and programming paradigms that ease the task of system builders and enable reuse of components through various systems. Furthermore, we also see the need to take into account the many cross-cutting issues that are typical of any complex application (e.g., security, user interface, transactionality). We suggest multidimensional service assembly as the right abstraction for taking into account all these different aspects. In this paper we sketch our ideas, discuss the implications of multi-dimensional service assembly, and draft a research agenda that goes towards the development of a well established theory in this area.", "author": [{"name": "L. Baresi", "affiliation": "Dipartimento Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}, {"name": "E. Di Nitto", "affiliation": "Dipartimento Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}, {"name": "S. Guinea", "affiliation": "Dipartimento Elettronica e Informazione, Politecnico di Milano, Milan, Italy"}, {"name": "S. Dustdar", "affiliation": "Distributed Systems Group, University of Technology, Vienna, Wien, Austria"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.16", "title": "Applying Template Meta-Programming Techniques for a Domain-Specific Visual Language--An Industrial Experience Report", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Automation", "Computer languages", "Automatic control", "Automatic programming", "Software engineering", "Programming profession", "Application software", "Computer industry", "Software systems", "Writing"], "abstract": "Template meta-programming techniques can be used to increase efficiency in software development. These techniques have traditionally been used with textual programming languages, such as C++. In this paper, we discuss how corresponding techniques can be used with visual languages. The visual language under study in this paper is function block language (FBL). FBL is used in Metso Automation for writing automation control programs that are executed in realtime distributed environments. Efficient development of high quality programs and easy customizability of existing programs are key requirements in practical customer projects. These requirements have been one of the main motivations to develop template meta-programming support in FBL discussed. In this paper, we focus both on the technical aspects and on the lessons learnt from programmers' experiences and ways to work with templates. FBL and the programming techniques proposed have been used in hundreds of real-world projects at Metso Automation.", "author": [{"name": "Mika Karaila", "affiliation": "Energy & Process Automation, Research & Technology Department, Metso Automation, Inc., Tampere, Finland"}, {"name": "Tarja Systa", "affiliation": "Institute of Software Systems, Tampere University of Technology, Tampere, Finland"}], "time": "May 2007", "citationCount": "2", "references": []},
{"doi": "10.1109/ICSE.2009.5070559", "title": "ConcernLines: A timeline view of co-occurring concerns", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Data visualization", "Software systems", "Programming", "History", "Computer science", "Feedback", "User interfaces", "Displays", "Frequency", "Java"], "abstract": "Understanding the evolution of a software system requires understanding how information about the release history, non-functional requirements and project milestones relates to functional requirements on the software components. This short paper describes a new tool, called CONCERNLINES, that supports this cognitive process by visualizing co-occurring concerns over time.", "author": [{"name": "Christoph Treude", "affiliation": "Department of Computer Science, University of Victoria, Canada"}, {"name": "Margaret-Anne Storey", "affiliation": "Department of Computer Science, University of Victoria, Canada"}], "time": "May 2009", "citationCount": "8", "references": [{"title": " \"Animated visualization of software history using evolution storyboards\"", "authors": ["D. Beyer ", " A. E. Hassan"]}, {"title": " \"A system for graph-based visualization of the evolution of software\"", "authors": ["C. Collberg", " S. Kobourov", " J. Nagra", " J. Pitts ", " K. Wampler"]}, {"title": " \"Software bugs and evolution: A visual approach to uncover their relationship\"", "authors": ["M. D'Ambros ", " M. Lanza"]}, {"title": " \"Visualizing feature evolution of large-scale software based on problem and modification report data: Research articles\"", "authors": ["M. Fischer ", " H. Gall"]}, {"title": " \"Software evolution: analysis and visualization\"", "authors": ["H. C. Gall ", " M. Lanza"]}, {"title": " \"Deep intellisense: a tool for rehydrating evaporated information\"", "authors": ["R. Holmes ", " A. Begel"]}, {"title": "\"IEEE Std 1471\u20132000\"", "authors": []}, {"title": " \"Understanding software evolution using a combination of software visualization and software metrics\"", "authors": ["M. Lanza ", " S. Ducasse"]}, {"title": " \"A task oriented view of software visualization\"", "authors": ["J. I. Maletic", " A. Marcus ", " M. L. Collard"]}, {"title": " \"Hyper/j: multi-dimensional separation of concerns for java\"", "authors": ["H. Ossher ", " P. Tarr"]}, {"title": " \"Concern graphs: finding and describing concerns using structural program dependencies\"", "authors": ["M. P. Robillard ", " G. C. Murphy"]}, {"title": " \"Concernmapper: simple view-based separation of scattered concerns\"", "authors": ["M. P. Robillard ", " F. Weig"]}, {"title": " \"Studying software evolution information by visualizing the change history\"", "authors": ["F. V. Rysselberghe ", " S. Demeyer"]}, {"title": " \"Shared waypoints and social tagging to support collaboration in software development\"", "authors": ["M.-A. Storey", " L.-T. Cheng", " I. Bull ", " P. Rigby"]}, {"title": " \"Interactive visual mechanisms for exploring source code evolution\"", "authors": ["A. Telea ", " L. Voinea"]}, {"title": " \"How tagging helps bridge the gap between social and technical aspects in software development\"", "authors": ["C. Treude ", " M.-A. Storey"]}, {"title": " \"Mining software repositories with cvsgrab\"", "authors": ["L. Voinea ", " A. Telea"]}, {"title": " \"Cvsscan: visualization of code evolution\"", "authors": ["L. Voinea", " A. Telea ", " J. J. van Wijk"]}, {"title": " \"Evolution spectrographs: Visualizing punctuated change in software evolution\"", "authors": ["J. Wu", " C. W. Spitzer", " A. E. Hassan ", " R. C. Holt"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071013", "title": "Using formal concept analysis to construct and visualise hierarchies of socio-technical relations", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Visualization", "Software engineering", "Humans", "Computer bugs", "Knowledge management", "Software debugging", "Application software", "Programming", "Software testing", "Open source software"], "abstract": "Interest in the human aspects of software engineering has grown in the past years. For example, based on activity logs in software artefact repositories, researchers are recommending who should fix a bug for a certain component. However, existing work largely follows ad-hoc approaches to relate software artefacts to developers and rarely makes those socio-technical relations explicit in a single structure. In this paper we propose a novel application of formal concept analysis, in order to overcome those deficiencies. As a case study, we construct and visualise different views of the developers who fix and discuss bugs in the Eclipse project.", "author": [{"name": "Michel Wermelinger", "affiliation": "Department of Computing and Centre of Research in Computing, Open University, UK"}, {"name": "Yijun Yu", "affiliation": "Department of Computing and Centre of Research in Computing, Open University, UK"}, {"name": "Markus Strohmaier", "affiliation": "Knowledge Management Institute, Graz University of Technology and Know Center Graz, Austria"}], "time": "May 2009", "citationCount": "9", "references": []},
{"doi": "10.1109/ICSE.2007.55", "title": "Model-Based Security Engineering of Distributed Information Systems Using UMLsec", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Information security", "Distributed information systems", "Search engines", "Explosives", "Companies", "Information analysis", "System analysis and design", "Virtual manufacturing", "Unified modeling language", "Employment"], "abstract": "Given the explosive growth of digitally stored information in modern enterprises, distributed information systems together with search engines are increasingly used in companies. By enabling the user to search all relevant information sources with one single query, however, crucial risks concerning information security arise. In order to make these applications secure, it is not sufficient to penetrate- and-patch past system development, but security analysis has to be an integral part of the system design process for such distributed information systems. This work presents the experiences and results of the security analysis of a search engine in the intranet of a German car manufacturer, by making use of an approach to model-based security engineering that is based on the UML extension UMLsec. The focus lies on the application's single-sign-on-mechanism, which was analyzed using the UMLsec method and tools. Main results of the paper include afield report on the employment of the UMLsec method in an industrial context as well as indications on its benefits and limitations.", "author": [{"name": "Bastian Best", "affiliation": "BMW Group, Munchen, Germany"}, {"name": "Jan Jurjens", "affiliation": "Department of Computing, Open University, Milton Keynes, UK"}, {"name": "Bashar Nuseibeh", "affiliation": "Department of Computing, Open University, Milton Keynes, UK"}], "time": "May 2007", "citationCount": "30", "references": []},
{"doi": "10.1109/ICSE.2009.5070560", "title": "Alitheia Core: An extensible software quality monitoring platform", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software quality", "Monitoring", "Open source software", "Control systems", "Quality management", "Project management", "Software engineering", "Phased arrays", "Databases", "Performance evaluation"], "abstract": "Research in the fields of software quality and maintainability requires the analysis of large quantities of data, which often originate from open source software projects. Pre-processing data, calculating metrics, and synthesizing composite results from a large corpus of project artefacts is a tedious and error prone task lacking direct scientific value. The Alitheia Core tool is an extensible platform for software quality analysis that is designed specifically to facilitate software engineering research on large and diverse data sources, by integrating data collection and preprocessing phases with an array of analysis services, and presenting the researcher with an easy to use extension mechanism. The system has been used to process several projects successfully, forming the basis of an emerging ecosystem of quality analysis tools.", "author": [{"name": "Georgios Gousios", "affiliation": "Department of Management Science and Technology, Athens University of Economics and Business, Greece"}, {"name": "Diomidis Spinellis", "affiliation": "Department of Management Science and Technology, Athens University of Economics and Business, Greece"}], "time": "May 2009", "citationCount": "25", "references": [{"title": " \"A methodology for collecting valid software engineering data\"", "authors": ["V. Basili ", " D. Weiss"]}, {"title": " \"The tame project: towards improvement-oriented software environments\"", "authors": ["V.R. Basili ", " H.D. Rombach"]}, {"title": " \"A metrics suite for object oriented design\"", "authors": ["S. R. Chidamber ", " C. F. Kemerer"]}, {"title": " \"Measuring developer contribution from software repository data\"", "authors": ["Georgios Gousios", " Eirini Kalliamvakou ", " Diomidis Spinellis"]}, {"title": " \"Flossmole: A collaborative repository for floss research data and analyses\"", "authors": ["J. Howison", " M. Conklin ", " K Crowston"]}, {"title": " \"Improving software development management through software project telemetry\"", "authors": ["P. M. Johnson", " M. G. Paulding", " H. Kou", " Q. Zhang", " A. Kagawa ", " T. Yamashita"]}, {"title": " \"Measurement automation: Methodological background and practical solutions-a multiple case study\"", "authors": ["Seija Komi-Sirvi\u00f6", " P\u00e4ivi Parviainen ", " Jussi Ronkainen"]}, {"title": "\"The SQO-OSS quality model: Measurement based open source software evaluation\"", "authors": []}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071014", "title": "Toward deeply adaptive societies of digital systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Digital systems", "Software systems", "Computer networks", "Cellular phones", "Vehicle dynamics", "Information management", "Application software", "Humans", "Collaborative software", "Educational institutions"], "abstract": "Modern societies are pervaded by computerized, heterogeneous devices designed for specific purposes, but also more and more often capable of interacting with other devices for entirely different purposes. For example, a cell phone could be used to purchase a train ticket on-line that could later be printed by a vending machine at the train station. This type of open environment is what we call a society of digital systems. In this paper, we outline the characteristics of societies of digital systems, and argue that they call for a new approach to cope with unforeseen interactions, possible incompatibilities, failures, and emergent behaviors. We argue that designers can not assume a closed or homogeneous world, and must instead naturally accommodate dynamic adaptations. Furthermore, self-adaptability, that is, the ability to adapt autonomically to a changing environment, also poses problems, as different adaptation strategies may interfere negatively, leading to unstable behaviors. As an initial concrete contribution to solve this problem, we propose a method to support the graceful integration of devices and software systems in an open environment. The method uses management information, and is specifically centered on the idea of expressing self-adaptation operations as change sets over the management information base.", "author": [{"name": "Antonio Carzaniga", "affiliation": "University of Lugano, Lugano, Switzerland"}, {"name": "Giovanni Denaro", "affiliation": "University of Milano-Bicocca, Milan, Italy"}, {"name": "Mauro Pezze", "affiliation": "University of Lugano, Lugano, Switzerland"}, {"name": "Jacky Estublier", "affiliation": "Grenoble, France"}, {"name": "Alexander L. Wolf", "affiliation": "Imperial College London, London, UK"}], "time": "May 2009", "citationCount": "1", "references": []},
{"doi": "10.1109/ICSE.2007.69", "title": "Reconceptualizing a Family of Heterogeneous Embedded Systems via Explicit Architectural Support", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Embedded system", "Wireless sensor networks", "Middleware", "Application software", "Software architecture", "Connectors", "Software systems", "Peer to peer computing", "Software engineering", "Programming"], "abstract": "It has been widely advocated that software architecture provides an effective set of abstractions for engineering (families of) complex software systems. However, architectural concepts are seldom supported directly at the level of system implementation. In embedded environments in particular, developers are often forced to rely on low-level programming languages. While this is conducive to fine-grain control over the system, it does not lend itself to addressing larger issues such as ensuring architectural integrity or managing an application family. In this paper we describe our experience with fundamentally altering the manner in which a family of embedded applications is designed, analyzed, implemented, deployed, and evolved using explicit architectural constructs. We discuss our strategy, the challenges we faced in the course of our project, the lessons learned in the process, and several open issues that remain unresolved.", "author": [{"name": "Sam Malek", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}, {"name": "Chiyoung Seo", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}, {"name": "Sharmila Ravula", "affiliation": "Bosch Research and Technology Center, Palo Alto, CA, USA"}, {"name": "Brad Petrus", "affiliation": "Two NorthShore Center, Bosch Research and Technology Center, Pittsburgh, PA, USA"}, {"name": "Nenad Medvidovic", "affiliation": "Computer Science Department, University of Southern California, Los Angeles, CA, USA"}], "time": "May 2007", "citationCount": "21", "references": []},
{"doi": "10.1109/ICSE.2009.5070561", "title": "VIDA: Visual interactive debugging", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming profession", "Software debugging", "Testing", "Information analysis", "History", "Computer industry", "Feedback", "Visualization", "Java", "Sun"], "abstract": "Software debugging is time-consuming and effort-consuming. Although software debugging, especially fault-localization, has been studied for long, few practical debugging tools have been developed and used by the industry. In this paper we present VIDA, a visual interactive debugging tool, which has been integrated with the Eclipse Integrated Development Environment to support a programmer's debugging process. During the programmer's conventional debugging process, VIDA continuously recommends break-points for the programmer based on the analysis of execution information and the gathered feedback from the programmer. Moreover, VIDA provides a program outline to help the programmer choose breakpoints and visualizes the static dependency relation to help the programmer make estimation at breakpoints.", "author": [{"name": "Dan Hao", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, Institute of Software, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Lingming Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, Institute of Software, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Lu Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, Institute of Software, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Jiasu Sun", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, Institute of Software, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Hong Mei", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education, Institute of Software, School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}], "time": "May 2009", "citationCount": "13", "references": [{"title": " \"On the accuracy of spectrum-based fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. C. van Gemund"]}, {"title": " \"Locating causes of program failure\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"Evaluating the effectiveness of reliability-assurance techniques\"", "authors": ["J. S. Collofello ", " S. N. Woodfield"]}, {"title": " \"Testing-based interactive fault localization\"", "authors": ["D. Hao"]}, {"title": " \"Towards interactive fault localization using test information\"", "authors": ["D. Hao", " L. Zhang", " H. Mei ", " J. Sun"]}, {"title": " \"On similarity-awareness in testing-based fault-localization\"", "authors": ["D. Hao", " L. Zhang", " Y. Pan", " H. Mei ", " J. Sun"]}, {"title": " \"Debugging reinvented: Asking and answering why and why not questions about program behavior\"", "authors": ["A. J. Ko ", " B. A. Myers"]}, {"title": " \"Empirical evaluation of tarantula automatic fault-localization technique\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"Visualization of test information to assist fault localization\"", "authors": ["J. A. Jones", " M. J. Harrold ", " J. Stasko"]}, {"title": " \"Expertise in debugging computer programs: A process analysis\"", "authors": ["I. Vessey"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071015", "title": "The marketplace of user interface real estate", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["User interfaces", "Marketing and sales", "Motion pictures", "Design engineering", "Stock markets", "Security", "Keyboards"], "abstract": "Financial markets suggest new ways to design, organize and evolve user interfaces. In this paper we present an approach based on marketplace simulations, where UI resources are sold and acquired, attempting to prove that this metaphor can innovate the way we think about UI design and deployment, relying on self-ruling emerging properties of complex systems.", "author": [{"name": "Luigi Troiano", "affiliation": "Department of Engineering RCOST Viale Traiano, University of Sannio, Benevento, Italy"}, {"name": "Gerardo Canfora", "affiliation": "Department of Engineering RCOST Viale Traiano, University of Sannio, Benevento, Italy"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.1", "title": "'Good' Organisational Reasons for 'Bad' Software Testing: An Ethnographic Study of Testing in a Small Software Company", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software testing", "Automatic testing", "System testing", "Software engineering", "Best practices", "Computer industry", "Computer science", "Timing", "Shape", "Design automation"], "abstract": "In this paper we report on an ethnographic study of a small software house to discuss the practical work of software testing. Through use of two rich descriptions, we discuss that 'rigour' in systems integration testing necessarily has to be organisationally defined. Getting requirements 'right', defining 'good' test scenarios and ensuring 'proper' test coverage are activities that need to be pragmatically achieved taking account of organisational realities and constraints such as: the dynamics of customer relationships; using limited effort in an effective way; timing software releases; and creating a market. We discuss how these organisational realities shape (1) requirements testing; (2) test coverage; (3) test automation; and (4) test scenario design.", "author": [{"name": "David Martin", "affiliation": "Grenoble, XRCE"}, {"name": "John Rooksby", "affiliation": "Computing Department, Lancaster University, UK"}, {"name": "Mark Rouncefield", "affiliation": "Computing Department, Lancaster University, UK"}, {"name": "Ian Sommerville", "affiliation": "School of Computer Science, University of Saint Andrews, UK"}], "time": "May 2007", "citationCount": "45", "references": [{"title": " \"Risk Based Testing. How to Conduct Heuristic Risk Analysis\"", "authors": ["Bach", " J."]}, {"title": " \"Observations and Lessons Learned from Automated Testing\" Proc. International Conference on Software Engineering ICSE'05", "authors": ["Berner", " S.", " R. Weber", " ", " R.K. Keller"]}, {"title": " \"Recognising 'success' and 'failure': Evaluating Groupware in a Commercial Context\"", "authors": ["Blythin", " S.", " J.", " Hughes", " S.", " Kristoffersen", " T. Rodden", " ", " M. Rouncefield"]}, {"title": " \"Occasioned Practices in the Work of Software Engineers\"", "authors": ["Button", " G.", " ", " W. Sharrock"]}, {"title": " \"Software Testing Best Practices\"", "authors": ["Chillarege", " R."]}, {"title": " H. \"Public Experiments and Displays of Virtuosity: The Core Set Revisited\"", "authors": ["Collins"]}, {"title": " \"My hairiest bug war stories\"", "authors": ["Eisenstadt", " M."]}, {"title": " \"Testing: A Roadmap\"", "authors": ["Harrold", " M. J."]}, {"title": " \"Software Testing as a Social Science Problem\"", "authors": ["Kaner", " C."]}, {"title": " \"An Empirical Study of Regression Test Application Frequency\"", "authors": ["Kim", " J-M.", " A. Porter", " ", " G. Rothermel"]}, {"title": " D.E. \"The Errors of TeX\"", "authors": ["Knuth"]}, {"title": " \"Achieving Dependability in the Configuration", "authors": ["Martin", " D.", " M. Hartswood", " R. Slack", " ", " A. Voss"]}, {"title": " \"Economic Perspectives in Test Automation: Balancing Automated and Manual Testing with Opportunity Cost\" Proc. Automation of Software Test AST'06", "authors": ["Ramler", " R.", " amd K. Wolfmaier"]}, {"title": " \"Dilemmas in a General Theory of Planning", "authors": ["Rittel", " H. ", " M. Webber"]}, {"title": " \"An Example of Practical Component Testing\"", "authors": ["Stringfellow", " C.V.", " ", " D.L. York"]}, {"title": " \"Agile Software Testing in a Large Scale Software Testing Project\"", "authors": ["Talby", " D.", " A. Keren", " O. Hazzan", " ", " Y. Dubinsky"]}, {"title": " \"What is Software Testing? And Why is it so Hard?\" IEEE Software", "authors": ["Whittaker", " J.A."]}]},
{"doi": "10.1109/ICSE.2009.5070562", "title": "Feedback-driven requirements engineering: The Heuristic Requirements Assistant", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Feedback", "Software systems", "Information analysis", "Documentation", "Terminology", "Unified modeling language", "Software engineering", "Automatic control", "Data analysis", "Delay"], "abstract": "The complexity of today's software systems is constantly increasing. As a result, requirements for these systems become more comprehensive and complicated. In this setting, requirements engineers struggle to capture consistent and complete requirements of high quality. We propose a feedback-centric requirements editor to help analysts controlling the information overload. Our HeRA tool provides analysts with important data from various feedback facilities. The feedback is directly given based on the input to the editor. On the one hand, it is based on heuristic rules, on the other hand, on automatically derived models. Thus, when new requirements are added, the analyst gets important information on how consistent these requirements are with the existing ones.", "author": [{"name": "Eric Knauss", "affiliation": "FG Software Engineering, Leibniz Universit\u00e4t Hannover, Hanover, Germany"}, {"name": "Daniel Lubke", "affiliation": "FG Software Engineering, Leibniz Universit\u00e4t Hannover, Hanover, Germany"}, {"name": "Sebastian Meyer", "affiliation": "FG Software Engineering, Leibniz Universit\u00e4t Hannover, Hanover, Germany"}], "time": "May 2009", "citationCount": "22", "references": [{"title": " \"The Linguistic Approach to the Natural Language Requirements Quality: Benefit of the use of an Automatic Tool\"", "authors": ["F. Fabbrini", " M. Fusani", " S. Gnesi ", " G. Lami"]}, {"title": " \"Domain-Oriented Design Environments\"", "authors": ["G. Fischer"]}, {"title": " \"Resource Estimation for Objectory Projects\"", "authors": ["G. Karner"]}, {"title": " \"Managing Requirement Engineering Processes by Adapted Quality Gateways and critique-based RE-Tools\"", "authors": ["E. Knauss ", " T. Flohr"]}, {"title": " \"Using the Friction between Business Processes and Use Cases in SOA Requirements\"", "authors": ["E. Knauss ", " D. L\u00fcbke"]}, {"title": " \"Recommending Terms for Glossaries: A Computer-Based Approach\"", "authors": ["E. Knauss", " S. Meyer ", " K. Schneider"]}, {"title": " \"Transformation of Use Cases to EPC Models\"", "authors": ["D. L\u00fcbke"]}, {"title": " \"EPC Markup Language (EPML) - An XML-Based Interchange Format for Event-Driven Process Chains (EPC)\"", "authors": ["J. Mendling ", " M. N\u00fcttgens"]}, {"title": " \"Improving Feedback on Requirements through Heuristics\"", "authors": ["K. Schneider"]}, {"title": " \"Improving the Qualitiy of Functional Requirements by Measuring Their Functional Size\"", "authors": ["S. Trudel ", " A. Abran"]}, {"title": " \"Automated quality analysis of Natural Language requirement specifications\"", "authors": ["W. M. Wilson", " L. H. Rosenberg ", " L. E. Hyatt"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071016", "title": "A framework for raising the level of abstraction of explicit parallelization", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Computer architecture", "Application software", "Parallel programming", "Concurrent computing", "Writing", "Programming profession", "DSL", "Parallel processing", "Productivity", "High performance computing"], "abstract": "In this research, a Framework for Synthesizing Parallel Applications (FraSPA) in a user-guided manner is being developed. The FraSPA would facilitate the synthesis of parallel applications from existing sequential applications and middleware components for multiple-platforms and diverse domains. The framework design is based upon design patterns and generative programming techniques. The main goal of this research is to raise the level of abstraction of the widely used low-level parallel programming approaches. A technique to separate parallel and sequential concerns will be demonstrated through this work. Other contributions will be in the area of design patterns and Domain-Specific Languages (DSLs) for parallel computing. The design patterns, along with the DSLs, will promote code reuse and code correctness. There would be a reduction in code complexity and code maintenance would become easy. The productivity of the end-users will increase. This research can be broadly classified as ldquoSoftware Engineering for High Performance Computingrdquo.", "author": [{"name": "Ritu Arora", "affiliation": "Department of Computer and Information Sciences, University of Alabama at Birmingham, Birmingham, Al"}, {"name": "Purushotham Bangalore", "affiliation": "Department of Computer and Information Sciences, University of Alabama at Birmingham, Birmingham, Al"}], "time": "May 2009", "citationCount": "2", "references": []},
{"doi": "10.1109/ICSE.2007.34", "title": "Enhancing Software Testing by Judicious Use of Code Coverage Information", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software testing", "Automatic testing", "Data visualization", "Information analysis", "Quality assurance", "Software engineering", "Data mining"], "abstract": "Recently, tools for the analysis and visualization of code coverage have become widely available. At first glance, their value in assessing and improving the quality of automated test suites seems to be obvious. Yet, experimental studies as well as experience from projects in industry indicate that their use is not without pitfalls. We found these tools in a number of recent projects quite beneficial. Therefore, we set out to gather code coverage information from one of these projects. In this experience report, first the system under scrutiny as well as our methodology is described. Then, four major questions concerning the impact and benefits of using these tools are discussed. Furthermore, a list of ten lessons learned is derived. The list may help developers judiciously use code coverage tools, in order to reap a maximum of benefits.", "author": [{"name": "Stefan Berner", "affiliation": "Swiss National Bank, Zurich, Switzerland"}, {"name": "Roland Weber", "affiliation": "Z\u00fchlke Engineering AG, Zurich-Schlieren, Switzerland"}, {"name": "Rudolf K. Keller", "affiliation": "Z\u00fchlke Engineering AG, Zurich-Schlieren, Switzerland"}], "time": "May 2007", "citationCount": "10", "references": [{"title": " and R. K. Keller. \"Observations and Lessons Learned from Automated Testing\"", "authors": ["Berner", " S.", " R. Weber"]}, {"title": " and T. J. Ostrand. \"Experiments of the Effectiveness of Dataflow- and Controlflow-Based Test Adequacy Criteria\"", "authors": ["Hutchins", " M.", " H. Foster", " T. Goradia"]}, {"title": " and G. Rothermel. \"How Well Do Professional Developers Test with Code Coverage Visualizations? An Empirical Study\"", "authors": ["Lawrance", " J.", " S. Clarke", " M. Burnett"]}, {"title": " N. and T. Ball. \"Use of Relative Code Churn Measures to Predict System Defect Density\"", "authors": ["Nagappan"]}, {"title": " Y. \"Agile Software Testing in a Large-Scale Project\"", "authors": ["Talby", " D", " Keren", " A.", " Hazzan", " O.", " ", " Dubinsky"]}, {"title": " and R. K. Keller. \"Fit for Change: Steps towards Effective Software Maintenance\"", "authors": ["Weber R.", " Th. Helfenberger"]}]},
{"doi": "10.1109/ICSE.2009.5070563", "title": "\u00c6vol: A tool for defining and planning architecture evolution", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Computer architecture", "Software systems", "Large-scale systems", "Software maintenance", "Software engineering", "Programming", "Software architecture", "Project management", "Computer science", "Performance analysis"], "abstract": "Architecture evolution is a key feature of most software systems. There are few tools that help architects plan and execute these evolutionary paths. We demonstrate a tool to enable architects to describe evolution paths, associate properties with elements of the paths, and perform tradeoff analysis over these paths.", "author": [{"name": "David Garlan", "affiliation": "School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Bradley Schmerl", "affiliation": "School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA"}], "time": "May 2009", "citationCount": "12", "references": [{"title": " \"Differencing and Merging Architectural Views\"", "authors": ["M. Abi-Antoun", " J. Aldrich", " N. Nahas", " B. Schmerl ", " D. Garlan"]}, {"title": " \"Pattern-Oriented Software Architecture - A System of Patterns\" in ", "authors": ["B. Buschmann", " R. Meunier", " H. Rohnert", " P. Sommerlad ", " M. Stal"]}, {"title": " \"Transitional Architectures for Enterprise Evolution\"", "authors": ["M. Erder ", " P. Pureur"]}, {"title": " \"Styles: Formal foundations and tool support for software architecture evolution. School of Computer Science\"", "authors": ["Garlan ", " D. Evolution"]}, {"title": " \"Acme: Architectural Description of Component-Based Systems\" in Foundations of Component-Based Systems", "authors": ["D. Garlan", " R. Monroe ", " D. Wile"]}, {"title": " \"Formalizing Architectural Refactorings as Graph Transformation Systems. Proc. the 6th International Conference on Software Engineering Artificial Intelligence\"", "authors": ["L. Grunske"]}, {"title": " \"Versioned Software Architecture\"", "authors": ["A. van", " der Hoek", " D.M. Heimbigner ", " A.L. Wolf"]}, {"title": " \"Taming Architectural Evolution\"", "authors": ["A. van", " der Hoek", " M. Mikic-Rakic", " R. Rosh", "el "]}, {"title": " \"The essential components of software architecture design and analysis\"", "authors": ["R. Kazman", " L. Bass ", " M. Klein"]}, {"title": " \"Specifying distributed soft-ware architectures\"", "authors": ["J. Magee", " N. Dulay", " S. Eisenbach ", " J. Kramer"]}, {"title": " \"ArchEvol: Versioning Architectural-Implementation Relationships\"", "authors": ["E. C. Nistor", " J. R. Erenkrentz", " S. A. Hendrickson ", " A. van der Hoek"]}, {"title": " \"Quality-Attribute-Based Economic Valuation of Architectural Patterns\"", "authors": ["I. Ozkaya", " R. Kazman ", " M. Klein"]}, {"title": " \"AcmeStudio: Supporting Style-centered Architecture Development\"", "authors": ["B. Schmerl ", " D. Garlan"]}, {"title": " \"Compositional Transformation of Software Connectors\"", "authors": ["B. Spitznagel"]}, {"title": " \"Evolution problem within Compo-nent-Based Software Architecture\"", "authors": ["D. Tamzalit", " N. Sadou ", " M. Oussalah"]}, {"title": " \"A component-and message-based architectural style for GUI software\"", "authors": ["R. Taylor", " N. Medvidovic", " K. Anderson", " E. Whitehead", " E. Robbins", " K. Nies", " ."]}, {"title": " \"A graph transformation approach to soft-ware architecture reconfiguration\"", "authors": ["M. Wermelinger ", " J.L. Fiaderob"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071017", "title": "Towards a multi-level modeling language for testbed automation systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Automatic testing", "System testing", "Automation", "Object oriented modeling", "Software testing", "Context modeling", "Engines", "Embedded software", "Software systems", "Unified modeling language"], "abstract": "Models of software intensive systems often are unnecessarily complex due to inappropriate modeling language capabilities. In the context of model driven generation of automation system parameters, we propose a multi-level modeling approach to prevent unnecessary complex models. The mechanism, based on a unified notion of classes and objects, allows modeling the domain entities concisely and builds the foundation for stepwise-refinement and model reuse.", "author": [{"name": "Thomas Aschauer", "affiliation": "C. Doppler Laboratory Embedded Software Systems, University of Salzburg, Salzburg, Austria"}], "time": "May 2009", "citationCount": 0, "references": [{"title": " \"No Silver Bullet-Essence and Accidents of Software Engineering\"", "authors": ["F. P. Brooks Jr"]}, {"title": " \"Reducing accidental complexity in domain models\"", "authors": ["C. Atkinson ", " T. K\u00fchne"]}, {"title": " \"Meta-Level Independent Modelling\" Proceedings of the International Workshop on Model Engineering at the 14th European Conference on Object-Oriented Programming", "authors": ["C. Atkinson ", " T. K\u00fchne"]}, {"title": " \"Modelling software development methodologies: A conceptual foundation\"", "authors": ["C. Gonzalez-Perez ", " B. Henderson-Sellers"]}, {"title": "O. Niggemann and J. Stroop. \"Models for model's sake: why explicit system models are also an end to themselves\"", "authors": []}, {"title": " \"Intersecting classes and prototypes\"", "authors": ["W. De Meuter", " T. D'Hondt", " ", " J. Dedecker"]}, {"title": " R. B. \"Self: The power of simplicity\"", "authors": ["Ungar", " D. ", " Smith"]}, {"title": " \"The Generic Modeling Environment\"", "authors": ["Ledeczi A.", " Maroti M.", " Bakay A.", " Karsai G.", " Garrett J.", " Thomason C.", " Nordstrom G.", " Sprinkle J.", " ", " Volgyesi P."]}, {"title": " \"Interchange of (Meta) Models between MetaEdit+ and Eclipse EMF\"", "authors": ["Kern H."]}]},
{"doi": "10.1109/ICSE.2007.68", "title": "Randomized Differential Testing as a Prelude to Formal Verification", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Formal verification", "Software testing", "Hardware", "Automatic testing", "Propulsion", "Laboratories", "System testing", "Programming", "Large-scale systems", "Design automation"], "abstract": "Most flight software testing at the Jet Propulsion Laboratory relies on the use of hand-produced test scenarios and is executed on systems as similar as possible to actual mission hardware. We report on a flight software development effort incorporating large-scale (biased) randomized testing on commodity desktop hardware. The results show that use of a reference implementation, hardware simulation with fault injection, a testable design, and test minimization enabled a high degree of automation in fault detection and correction. Our experience will be of particular interest to developers working in domains where on-time delivery of software is critical (a strong argument for randomized automated testing) but not at the expense of correctness and reliability (a strong argument for model checking, theorem proving, and other heavyweight techniques). The effort spent in randomized testing can prepare the way for generating more complete confidence using heavyweight techniques.", "author": [{"name": "Alex Groce", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA, USA"}, {"name": "Gerard Holzmann", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA, USA"}, {"name": "Rajeev Joshi", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA, USA"}], "time": "May 2007", "citationCount": "51", "references": []},
{"doi": "10.1109/ICSE.2009.5070564", "title": "Ldiff: An enhanced line differencing tool", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Software maintenance", "Software tools", "Monitoring", "Cloning", "Computer languages", "Performance analysis", "Software engineering", "Software testing", "Software algorithms", "Algorithm design and analysis"], "abstract": "Differencing tools are highly relevant for a series of software engineering tasks, including analyzing developers' activities, assessing the changeability of software artifacts, and monitoring the maintenance of critical assets such as source clones and vulnerable instructions. This tool demonstration shows the features of ldiff, an enhanced, language-independent line differencing tool. L-diff builds upon the Unix diff and overcomes its limitations in determining whether an artifact line has been changed or is the result of additions and removals, and in tracking artifact fragments that have been moved upward or downward within the file. The paper describes the tool and shows its capability of analyzing changes on different kinds of software artifacts, including use cases, code developed with different programming languages, and test cases.", "author": [{"name": "Gerardo Canfora", "affiliation": "RCOST-Department of Engineering, University of Sannio, Benevento, Italy"}, {"name": "Luigi Cerulo", "affiliation": "RCOST-Department of Engineering, University of Sannio, Benevento, Italy"}, {"name": "Massimiliano Di Penta", "affiliation": "RCOST-Department of Engineering, University of Sannio, Benevento, Italy"}], "time": "May 2009", "citationCount": "24", "references": [{"title": " \"Identifying changed source code lines from version repositories\"", "authors": ["G. Canfora", " L. Cerulo ", " M. Di Penta"]}, {"title": " \"Tracking your changes: a language-independent approach\"", "authors": ["G. Canfora", " L. Cerulo ", " M. Di Penta"]}, {"title": " \"Populating a release history database from version control and bug tracking systems\"", "authors": ["M. Fischer", " M. Pinzger ", " H. Gall"]}, {"title": " \"Change distilling: Tree differencing for fine-grained source code change extraction\"", "authors": ["B. Fluri", " M. W\u00fcrsch", " M. Pinzger ", " H. Gall"]}, {"title": " \"Program element matching for multi-version program analyses\"", "authors": ["M. Kim ", " D. Notkin"]}, {"title": " \"Binary codes capable of correcting deletions insertions and reversals\"", "authors": ["V. I. Levenshtein"]}, {"title": " \"Tracking source locations\"", "authors": ["S. P. Reiss"]}, {"title": " \"When do changes induce fixes?\"", "authors": ["J. Sliwerski", " T. Zimmermann ", " A. Zeller"]}, {"title": " \"Differencing logical UML models\"", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " P. Weisgerber", " S. Diehl ", " A. Zeller"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071018", "title": "Towards safety guarantees for service-oriented systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Safety", "Collaboration", "Runtime", "Service oriented architecture", "Embedded system", "Unified modeling language", "Mobile communication", "Mobile handsets", "Rail transportation", "Protocols"], "abstract": "In this paper I will address the problem of verifying that a service-oriented embedded system fulfills required safety guarantees. Services will be represented by collaborations among components with a varying number of participants. The services are equipped with rules for the instantiation and deletion of services, addition and removal of participants. Further a service's behavior could be modified at run-time. I will present techniques which are able to verify that such systems are safe with respect to a given specification. The sketched verification technique is able to cope with structural changes, run-time changes of rules and the run-time evolution of services.", "author": [{"name": "Basil Becker", "affiliation": "System Analysis and Modeling Group, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany"}], "time": "May 2009", "citationCount": "2", "references": []},
{"doi": "10.1109/ICSE.2007.24", "title": "Can Requirements Be Creative? Experiences with an Enhanced Air Space Management System", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Software systems", "Human computer interaction", "Context modeling", "Europe", "Data processing", "Aerospace engineering", "Systems engineering and theory", "Engineering management", "Product design", "Product development"], "abstract": "Requirements engineering is a creative process in which stakeholders work together to create ideas for new software systems that are eventually expressed as requirements. This paper reports a workshop that integrated creativity techniques with different types of use case and system context modeling to discover stakeholder requirements for EASM, a future air space management software system to enable the more effective, longer-term planning of UK and European airspace use. The workshop was successful in that it provided a range of outputs that were later assessed for their novelty and usefulness in the final specification of the EASM software. The paper describes the workshop structure, gives examples of outputs from it, and uses these results to answer 2 research questions about the utility of creativity techniques and workshops that had not been answered in previous research.", "author": [{"name": "Neil Maiden", "affiliation": "Centre for HCI Design, City University, London, UK"}, {"name": "Cornelius Ncube", "affiliation": "Centre for HCI Design, City University, London, UK"}, {"name": "Suzanne Robertson", "affiliation": "Atlantic Systems Guild Limited, London, UK"}], "time": "May 2007", "citationCount": "37", "references": [{"title": " \"Supporting and Monitoring the Creativity of IS Personnel During the Requirements Engineering Process", "authors": ["Nguyen L.", " Carroll J.M. & Swatman P.A.", " 2000"]}, {"title": " \"This is Like That: The Use of Earlier Problems and the Separation of Similarity Effects'", "authors": ["Ross B.H.", " 1987"]}, {"title": " \"The Domain Theory for Requirements Engineering", "authors": ["Sutcliffe A.G. & Maiden N.A.M.", " 1998"]}, {"title": " 'Understanding \"Why\" in Software Process Modelling", "authors": ["Yu E. & Mylopoulos J.M.", " 1994"]}]},
{"doi": "10.1109/ICSE.2009.5070565", "title": "SemDiff: Analysis and recommendation support for API evolution", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Application software", "Fingerprint recognition", "Computer science", "Electronic mail", "Genetic programming", "Software prototyping", "Prototypes", "User interfaces", "Writing", "Java"], "abstract": "As a framework evolves, changes in its application programming interface (API) can break client programs that extend the framework. Repairing a client program can be a challenging task because developers need to understand the context surrounding the API change. This paper describes SemDiff, a tool that recommends replacements for framework methods that were accessed by a client program and deleted during the evolution of the framework. SemDiff recommends replacements for non-trivial changes undiscovered by other change-detection techniques and also enables developers to look at the context of the changes that led to the deletion of a framework method.", "author": [{"name": "Barthelemy Dagenais", "affiliation": "School of Computer Science, McGill University Montr\u00e9al, QUE, Canada"}, {"name": "Martin P. Robillard", "affiliation": "School of Computer Science, McGill University Montr\u00e9al, QUE, Canada"}], "time": "May 2009", "citationCount": "17", "references": [{"title": " \"JDiff: A differencing technique and tool for object-oriented programs\"", "authors": ["T. Apiwattanapong", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Mining aspects from version history\"", "authors": ["S. Breu ", " T. Zimmermann"]}, {"title": " \"Enabling static analysis for partial Java programs\"", "authors": ["B. Dagenais ", " L. Hendren"]}, {"title": " \"Recommending adaptive changes for framework evolution\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Change distilling: Tree differencing for fine-grained source code change extraction\"", "authors": ["B. Fluri", " M. Wuersch", " M. Pinzger ", " H. Gall"]}, {"title": " \"Recommending method invocation context changes\"", "authors": ["B. Fluri", " J. Zuberb\u00fcehler ", " H. Gall"]}, {"title": " \"Retrieving task-related clusters from change history\"", "authors": ["M. P. Robillard ", " B. Dagenais"]}, {"title": " \"Reusing program investigation knowledge for code understanding\"", "authors": ["M. P. Robillard ", " P. Manggala"]}, {"title": " \"Identifying refactorings from source-code changes\"", "authors": ["P. Weissgerber ", " S. Diehl"]}, {"title": " \"Understanding the evolution and coevolution of classes in object-oriented systems\"", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " A. Zeller", " P. Wei\u03b2gerber ", " S. Diehl"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071019", "title": "Using Bayesian statistical methods to determine the level of error in large spreadsheets.", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Bayesian methods", "Statistical analysis", "Testing", "Error analysis", "Cities and towns", "Decision making", "Error correction", "Humans", "Spreadsheet programs", "Business"], "abstract": "Spreadsheets are ubiquitous with evidence that Microsoft Excel, the leading application in the area, has an install base of 90% on end-user desktops. Nowhere is the usage of spreadsheets more extensive or more critical than in the financial sector, where regulations such as the Sarbanes-Oxley Act of 2002 has placed added pressure on organisations to ensure spreadsheets are error-free. This paper outlines the research that has been carried out into the use of Bayesian statistical methods to estimate the level of error in large spreadsheets based on expert knowledge and spreadsheet test data. The estimate can aid in the decision to accept or re-examine a large time consuming spreadsheet.", "author": [{"name": "Leslie Bradley", "affiliation": "Dundalk Institute of Technology, Ireland"}, {"name": "Kevin McDaid", "affiliation": "Dundalk Institute of Technology, Ireland"}], "time": "May 2009", "citationCount": "9", "references": [{"title": " \"The importance and Criticality of Spreadsheets in the city of London", "authors": ["G. J. Croll"]}, {"title": " \"Reducing Spreadsheet Error Rates", "authors": ["H. Benham", " ", " Giullian", " M."]}, {"title": " \"Comparison of Characteristics and Practices amongst Spreadsheet Users with Different Levels of Experience", "authors": ["S. G. Powell", " Lawson", " B.", " Baker", " K. B. ", " Foster-Johnson", " L."]}, {"title": " \"What we know about Spreadsheet Errors Extended Version", "authors": ["R. R. Panko"]}, {"title": " \"Impact of errors in operational spreadsheets", "authors": ["S. G. Powell", " Baker", " K. R.", " ", " Lawson", " B."]}, {"title": " \"Investigating the Potential of Test-Driven Development for Spreadsheet Engineering", "authors": ["A. Rust", " Bishop", " B.", " ", " McDaid", " K."]}, {"title": " \"Dimension Inference in Spreadsheets", "authors": ["C. Chambers", " ", " Erwig", " M."]}, {"title": " \"A Methodology for Testing Spreadsheets", "authors": ["G. Rothermel", " Burnett", " M.", " Li", " L.", " DuPuis", " C.", " ", " Sheretov", " A."]}, {"title": " \"Errors in operational Spreadsheets", "authors": ["S. G. Powell", " Baker", " K. R.", " ", " Lawson", " B."]}, {"title": " \"Thinking is Bad: Implications of Human Error Research for Spreadsheet Research and Practice", "authors": ["R. Panko"]}]},
{"doi": "10.1109/ICSE.2007.15", "title": "Applying ISO 9001:2000, MPS.BR and CMMI to Achieve Software Process Maturity: BL Informatica's Pathway", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["ISO standards", "Software standards", "Capability maturity model", "IEC standards", "Software maintenance", "Software quality", "Standards organizations", "Computer industry", "Software engineering", "Customer satisfaction"], "abstract": "Customer satisfaction, quality improvement and rework reduction are known to be the most important benefits obtained through deployment of software process maturity models and standards within an organization. Since 2003 BL Informatica has been motivated and has established and maintained its software processes based on international standards (like ISO 9001:2000) and maturity models (like MPS.BR and CMMI). In spite of the lack of financial and human resources, the organization achieved satisfactory results. This paper describes BL Infomatica's software processes improvement plan, lessons learned, difficulties and benefits that where collected during the execution of the improvement plan. It also presents quantitative results that demonstrate the return on investment during these years.", "author": [{"name": "Analia Irigoyen Ferreiro Ferreira", "affiliation": "COPPE/UFRJ, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil"}, {"name": "Gleison Santos", "affiliation": "COPPE/UFRJ, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil"}, {"name": "Roberta Cerqueira", "affiliation": "BL Inform\u00e1tica Ltda., Niteroi, Rio de Janeiro, Brazil"}, {"name": "Mariano Montoni", "affiliation": "COPPE/UFRJ, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil"}, {"name": "Ahilton Barreto", "affiliation": "COPPE/UFRJ, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil"}, {"name": "Andrea O. Soares Barreto", "affiliation": "Federal University of Rio de Janeiro, Brazil"}, {"name": "Ana Regina Rocha", "affiliation": "COPPE/UFRJ, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil"}], "time": "May 2007", "citationCount": "6", "references": []},
{"doi": "10.1109/ICSE.2009.5070566", "title": "CloneDetective - A workbench for clone detection research", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Cloning", "Phase detection", "Software maintenance", "Detectors", "Plagiarism", "Investments", "Heuristic algorithms", "Filtering", "Recommender systems", "Detection algorithms"], "abstract": "The area of clone detection has considerably evolved over the last decade, leading to approaches with better results, but at the same time using more elaborate algorithms and tool chains. In our opinion a level has been reached, where the initial investment required to setup a clone detection tool chain and the code infrastructure required for experimenting with new heuristics and algorithms seriously hampers the exploration of novel solutions or specific case studies. As a solution, this paper presents CloneDetective, an open source framework and tool chain for clone detection, which is especially geared towards configurability and extendability and thus supports the preparation and conduction of clone detection research.", "author": [{"name": "Elmar Juergens", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Munchen, Germany"}, {"name": "Florian Deissenboeck", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Munchen, Germany"}, {"name": "Benjamin Hummel", "affiliation": "Institut f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Munchen, Germany"}], "time": "May 2009", "citationCount": "52", "references": [{"title": " \"Clone detection using\"", "authors": ["I. D. Baxter", " A. Yahin", " L. Moura", " M. Sant\u2019 Anna ", " L. Bier"]}, {"title": " \"Clone detection in automotive model-based development\"", "authors": ["F. Deissenboeck", " B. Hummel", " E. Juergens", " B. Sch\u00e4tz", " S. Wagner", " J.-F. Girard", " ."]}, {"title": " \"Tool support for continuous quality control\"", "authors": ["F. Deissenboeck", " E. Juergens", " B. Hummel", " S. Wagner", " B. M. Y Parareda ", " M. Pizka"]}, {"title": " \"A language independent approach for detecting duplicated code\"", "authors": ["S. Ducasse", " M. Rieger ", " S. Demeyer"]}, {"title": " \"DECARD: Scalable and accurate tree-based detection of code clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"Do code clones matter?\"", "authors": ["E. Juergens", " F. Deissenboeck", " B. Hummel ", " S. Wagner"]}, {"title": " \"CCFinder: a multi-linguistic token-based code clone detection system for large scale source code\"", "authors": ["T. Kamiya", " S. Kusumoto ", " K. Inoue"]}, {"title": " \"Aiding comprehension of cloning through categorization\"", "authors": ["C. Kapser ", " M. W. Godfrey"]}, {"title": " \"Survey of research on software clones. In Duplication Redundancy\"", "authors": ["R. Koschke"]}, {"title": " \"Clone detection using abstract syntax suffix trees\"", "authors": ["R. Koschke", " R. Falke ", " P. Frenzel"]}, {"title": " \"CP-Miner: Finding copy-paste and related bugs in large-scale software code\"", "authors": ["Z. Li", " S. Lu", " S. Myagmar ", " Y. Zhou"]}, {"title": " \"Duplicate code detection using anti-unification\"", "authors": ["M. M. Peter Bulychev"]}, {"title": " \"Complete and accurate clone detection in graph-based models\"", "authors": ["N. H. Pham", " H. A. Nguyen", " T. T. Nguyen", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"A survey on software clone detection research\"", "authors": ["C. K. Roy ", " J. R. Cordy"]}, {"title": " \"Problems creating task-relevant clone detection reference data\"", "authors": ["A. Walenstein", " N. Jyoti", " J. Li", " Y. Yang ", " A. Lakhotia"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071020", "title": "Improving conflict resolution in model versioning systems", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Context modeling", "Fingerprint recognition", "Collaborative software", "Interactive systems", "Control system synthesis", "Proposals", "Information resources", "Software tools", "Documentation", "Model driven engineering"], "abstract": "Collaborative software development is nowadays inconceivable without optimistic version control systems (VCSs). Without such systems the parallel modification of one artifact by multiple users is impracticable. VCSs proved successful in the versioning of code, but they are only conditionally appropriate to the management of model versions. Conflicts which may occur when two different versions of one model are merged are detected in an unsatisfactory manner and consequently, automatic conflict resolution is hardly offered. In this work, a generic framework allowing precise conflict detection and intelligent conflict resolution for models is proposed.", "author": [{"name": "Petra Brosch", "affiliation": "Inst. of Software Technol. & Interactive Syst., Vienna Univ. of Technol., Vienna"}], "time": "May 2009", "citationCount": "5", "references": []},
{"doi": "10.1109/ICSE.2007.51", "title": "Maturity Status within Front-End Support Organisations", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Disaster management", "Management training", "Software maintenance", "Collaboration", "Testing", "Computer industry", "Educational products", "Portfolios", "Virtual enterprises", "Software engineering"], "abstract": "It may not be enough to develop mature processes at the back-end support level. Other strongly collaborating front-end support processes may substantially undermine them. For this reason, we have created CM\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">3</sup>\n: front-end problem management - a detailed problem management process model to be utilised at the front-end support level. In this paper, we present the CM\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">3</sup>\n maturity levels at the front-end support and match them against the industrial state of practice within 15 software organisations. Our goal is to establish the current status of support maturity using CM\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">3</sup>\n: front-end problem management. Our results show that the industrial processes studied suffice to provide basic problem management support at the front-end support level. However, only two out of 15 organisations studied have almost achieved the highest maturity level.", "author": [{"name": "Mira Kajko-Mattsson", "affiliation": "Department of Computer and Systems Sciences, Stockholm University and Royal Institute of Technology, Sweden"}], "time": "May 2007", "citationCount": "8", "references": []},
{"doi": "10.1109/ICSE.2009.5070567", "title": "Save-IDE - A tool for design, analysis and implementation of component-based embedded systems", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Embedded system", "Software design", "Timing", "System analysis and design", "Software systems", "Analytical models", "Real time systems", "Embedded software", "Formal specifications", "Image analysis"], "abstract": "The paper presents Save-IDE, an integrated development environment for the development of component-based embedded systems. Save-IDE supports efficient development of dependable embedded systems by providing tools for design of embedded software systems using a dedicated component model, formal specification and analysis of component and system behaviors already in early development phases, and a fully automated transformation of the system of components into an executable image.", "author": [{"name": "Severine Sentilles", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}, {"name": "Anders Pettersson", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}, {"name": "Dag Nystrom", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}, {"name": "Thomas Nolte", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}, {"name": "Paul Pettersson", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}, {"name": "Ivica Crnkovic", "affiliation": "M\u00e4lardalen Real-Time Research Center, M\u00e4lardalen University, Vasteras, Sweden"}], "time": "May 2009", "citationCount": "17", "references": [{"title": " \"The SAVE Approach to Component-Based Development of Vehicular Systems\"", "authors": ["M. \u00c5kerholm", " J. Carlson", " J. Fredriksson", " H. Hansson", " J. H\u00e5kansson", " A. M\u00f6ller", " ."]}, {"title": " \"The SaveCCM Language Reference Manual\"", "authors": ["M. \u00c5kerholm", " J. Carlson", " J. H\u00e5kansson", " H. Hansson", " M. Nolin", " T. Nolte", " ."]}, {"title": " \"A Theory of Timed Automata\"", "authors": ["R. Alur ", " D. L. Dill"]}, {"title": " \"Partial Order Reduction for Verification of Real-Time Components\"", "authors": ["J. H\u00e5kansson ", " P. Pettersson"]}, {"title": " \"xUppaal in a Nut-shell\"", "authors": ["K. G. Larsen", " P. Pettersson ", " W. Yi"]}, {"title": " \"REMES: A Resource Model for Embedded Systems\"", "authors": ["C. Seceleanu", " A. Vulgarakis ", " P. Pettersson"]}, {"title": " \"Save-IDE - An Integrated Development Environment for Building Predictable Component-Based Embedded Systems\"", "authors": ["S. Sentilles", " J. H\u00e5kansson", " P. Pettersson ", " I. Crnkovic"]}, {"title": "\"A Component Model for Control-Intensive Distributed Embedded Systems\"", "authors": []}, {"title": " \"Analyzing a Pattern-Based Model of a Real-Time Turntable System\"", "authors": ["D. Slutej", " J. H\u00e5kansson", " J. Suryadevara", " C. Seceleanu ", " P. Pettersson"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071021", "title": "Towards a framework for supporting software modeling activities through novel interaction and visualization techniques", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Visualization", "Software tools", "Displays", "Navigation", "Unified modeling language", "Collaborative software", "Programming", "Software engineering", "User interfaces", "Software design"], "abstract": "Though there is a multitude of software modeling tools available, the handling of diagrams, which are an essential way of representation, is still difficult. To overcome these problems this PhD thesis investigates the usage of novel visualization and interaction techniques for the software development process, including multi-touch displays, the interaction through zoomable user interfaces and the integration of diagrams drawn by hand. The goal of the work is to create a technical framework which offers respective techniques for the creation of and navigation in software models.", "author": [{"name": "Mathias Frisch", "affiliation": "Computational Visualistics / Software Engineering Group, Otto-von-Guericke University of Magdeburg, Germany"}, {"name": "Raimund Dachselt", "affiliation": "Computational Visualistics / Software Engineering Group, Otto-von-Guericke University of Magdeburg, Germany"}], "time": "May 2009", "citationCount": 0, "references": []},
{"doi": "10.1109/ICSE.2007.6", "title": "A Constructivist Approach to Teaching Software Processes", "publisher": "29th International Conference on Software Engineering (ICSE'07)", "keyword": ["Education", "Programming", "Software engineering", "Collaborative software", "Problem-solving", "Software design", "Process design", "Design engineering", "Knowledge engineering", "Software tools"], "abstract": "Recreating the context in which software processes are developed is difficult in the undergraduate classroom environment. As a result, traditional lecture-based teaching approaches do not necessarily translate into long-term understanding of software processes. To give students a deeper appreciation for the strengths and weaknesses of software process models, we designed the software process simulation game using constructivism as the underlying foundation. In this paper, we discuss the challenges associated with teaching software processes models, provide an overview of the game, detail its mechanics, and discuss the lessons learned from playing the game. Since the game does not involve actual programming or design activities, it can be used effectively for teaching both novice and experienced software engineers.", "author": [{"name": "Jayakanth Srinivasan", "affiliation": "Massachusetts Institute of Technology, USA"}, {"name": "Kristina Lundqvist", "affiliation": "Massachusetts Institute of Technology, USA"}], "time": "May 2007", "citationCount": "4", "references": [{"title": " \"Cockpit and Mission System Modernization", "authors": ["Anttila D.", " ."]}, {"title": " \"Theory in Practice", "authors": ["Argyris", " C.", " Schon", " D"]}, {"title": " \"Extreme Programming Explained: Embrace Change", "authors": ["Beck", " K."]}, {"title": " \"Observations on balancing discipline and agility", "authors": ["Boehm", " B.", " Turner", " R."]}, {"title": " \"Constructivism: Theory", "authors": ["Fosnot", " C. T."]}, {"title": " \"The Personal Software Process", "authors": ["Humphrey", " W.S."]}, {"title": " \"The LEV Simulation Game", "authors": ["Lean Aerospace Initiative"]}, {"title": " \"Constructivist Values for Instructional System Design: Five Principles Toward a New Mindset", "authors": ["Lebow", " D."]}, {"title": " \"A First Course in Software Engineering for Aerospace Engineers", "authors": ["Lundqvist", " K. Srinivasan", " J."]}, {"title": " \"The Psychology of How Novices Learn Computer Programming", "authors": ["Mayer", " R. E"]}, {"title": " T. M. \"Problem based learning: An instructional model and its constructivist framework", "authors": ["Savery", " J. R.", " ", " Duffy"]}, {"title": " \"The Software Process Simulation Game", "authors": ["Srinivasan J.", " Lundqvist", " K."]}]},
{"doi": "10.1109/ICSE.2009.5070568", "title": "FeatureIDE: A tool framework for feature-oriented software development", "publisher": "2009 IEEE 31st International Conference on Software Engineering", "keyword": ["Programming", "Computer languages", "Computer science", "Investments", "Open source software", "Java", "Informatics", "Mathematics", "Education", "Availability"], "abstract": "Tools support is crucial for the acceptance of a new programming language. However, providing such tool support is a huge investment that can usually not be provided for a research language. With FeatureIDE, we have built an IDE for AHEAD that integrates all phases of feature-oriented software development. To reuse this investment for other tools and languages, we refactored FeatureIDE into an open source framework that encapsulates the common ideas of feature-oriented software development and that can be reused and extended beyond AHEAD. Among others, we implemented extensions for FeatureC++ and FeatureHouse, but in general, FeatureIDE is open for everybody to showcase new research results and make them usable to a wide audience of students, researchers, and practitioners.", "author": [{"name": "Christian Kastner", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}, {"name": "Thomas Thum", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}, {"name": "Gunter Saake", "affiliation": "School of Computer Science, University of Magdeburg, Germany"}, {"name": "Janet Feigenspan", "affiliation": "Section Applied Computer Science, METOP GmbH, Magdeburg, Germany"}, {"name": "Thomas Leich", "affiliation": "Section Applied Computer Science, METOP GmbH, Magdeburg, Germany"}, {"name": "Fabian Wielgorz", "affiliation": "Department of Informatics and Mathematics, University of Passau, Germany"}, {"name": "Sven Apel", "affiliation": "Department of Informatics and Mathematics, University of Passau, Germany"}], "time": "May 2009", "citationCount": "77", "references": [{"title": " \"On the refinement of XML\"", "authors": ["F. I. Anfurrutia", " O. Diaz ", " S. Trujillo"]}, {"title": " \"FeatureHouse: Language-independent automatic software composition\"", "authors": ["S. Apel", " C. K\u00e4stner ", " C. Lengauer"]}, {"title": " \"FeatureC++: On the symbiosis of feature-oriented and aspect-oriented programming\"", "authors": ["S. Apel", " T. Leich", " M. Rosenm\u00fcller ", " G. Saake"]}, {"title": " \"Aspectual feature modules\"", "authors": ["S. Apel", " T. Leich ", " G. Saake"]}, {"title": " \"Scaling stepwise refinement\"", "authors": ["D. Batory", " J. N. Sarvela ", " A. Rauschmayer"]}, {"title": " \"Type-checking software product lines - a formal approach\"", "authors": ["C. K\u00e4stner ", " S. Apel"]}, {"title": " \"A case study implementing features using AspectJ\"", "authors": ["C. K\u00e4stner", " S. Apel ", " D. Batory"]}, {"title": " \"Granularity in software product lines\"", "authors": ["C. K\u00e4stner", " S. Apel ", " M. Kuhlemann"]}, {"title": " \"Analysis of feature interactions in modular designs\"", "authors": ["S. Klapproth"]}, {"title": " \"Tool support for feature-oriented software development: FeatureIDE: an eclipse-based approach\"", "authors": ["T. Leich", " S. Apel ", " L. Marnitz"]}, {"title": " \"Efficient compilation techniques for large scale feature models\"", "authors": ["M. Mendonca", " A. Wasowski", " K. Czarnecki ", " D. Cowan"]}, {"title": " \"Feature-oriented programming: A fresh look at objects\"", "authors": ["C. Prehofer"]}, {"title": " \"Measuring non-functional properties in software product lines for product derivation\"", "authors": ["N. Siegmund ."]}, {"title": " \"The paradoxical success of aspect-oriented programming\"", "authors": ["F. Steimann"]}, {"title": " \"Reasoning about edits to feature models\"", "authors": ["T. Th\u00fcm", " D. Batory ", " C. K\u00e4stner"]}, {"title": " \"Optimizing and automating product-line variant selection for mobile devices\"", "authors": ["J. White", " A. Nechypurenko", " E. Wuchner ", " D. Schmidt"]}]},
{"doi": "10.1109/ICSE-COMPANION.2009.5071022", "title": "Early-stage software design for usability", "publisher": "2009 31st International Conference on Software Engineering - Companion Volume", "keyword": ["Software design", "Usability", "Design engineering", "Software architecture", "User interfaces", "Software quality", "Software systems", "Guidelines", "Packaging", "Programming"], "abstract": "In this proposal, the author presents work to construct and evaluate a successful approach to explicitly drawing and communicating the connection between usability concerns and software architecture design. This approach for early-stage software design for usability is usability-supporting architecture patterns and their application and design framework, architecture pattern language for usability support (A-PLUS). The proposal will describe an iterative process of testing and revising USAPs to improve their usability and utility as a performance aid for software engineers designing software architectures to support usability concerns.", "author": [{"name": "Elspeth Golden", "affiliation": "Human-Computer Interaction Institute, Carnegie Mellon University, USA"}], "time": "May 2009", "citationCount": "4", "references": [{"title": " \"Achieving usability through software architectural styles", "authors": ["L. Bass ", " B. E. John"]}, {"title": " \"Linking usability to software architecture patterns through general scenarios", "authors": ["L. Bass ", " B. E. John"]}, {"title": " \"Usability and Software Architecture", "authors": ["L. Bass", " B. E. John", " N. Juristo", " ", " M.-I. Sanchez-Segura"]}, {"title": " \"Quality Attributes", "authors": ["M. R. Barbacci", " M. H. Klein", " T. A. Longstaff", " ", " C. B. Weinstock"]}, {"title": " \"Guidelines for Man/Display Interfaces", "authors": ["S. E. Engel ", " R. E. Gr"]}, {"title": " \"Usability patterns in Software Architecture", "authors": ["E. Folmer ", " J. Bosch"]}, {"title": " \"Architecting for usability: a survey", "authors": ["E. Folmer ", " J. Bosch"]}, {"title": " \"Usability and software architecture", "authors": ["B. E. John ", " L. Bass"]}, {"title": " \"Bringing Usability Concerns to the Design of Software Architecture", "authors": ["B. E. John", " L. Bass", " M.-I. Sanchez-Segura", " ", " R. J. Adams"]}, {"title": " \"Introducing Usability", "authors": ["N. Juristo", " H. Windl", " ", " L. Constantine"]}, {"title": " \"Improving software usability through architectural patterns", "authors": ["N. Juristo", " M. Lopez", " A. Moreno", " ", " M.-I. Sanchez-Segura"]}, {"title": " \"Guidelines for Eliciting Usability Functionalities", "authors": ["N. Juristo", " A. Moreno", " ", " M.-I. Sanchez-Segura"]}, {"title": " \"Research-Based Web Design & Usability Guidelines", "authors": ["National Cancer Institute"]}, {"title": " \"Heuristic evaluation", "authors": ["J. Nielsen"]}, {"title": " \"An experiment to assess different defect detection methods for software requirements inspections", "authors": ["A. A. Porter ", " L. G. Votta"]}, {"title": " \"Comparing detection methods for software requirements inspections: a replicated experiment", "authors": ["A. A. Porter", " L. G. Votta", " ", " V. R. Basili"]}, {"title": " \"Guidelines for Designing User Interface Software\" USAF Electronic Systems Division", "authors": ["S. L. Smith ", " J. N. Mosier"]}, {"title": " \"UI Patterns and Techniques", "authors": ["J. Tidwell"]}]},
]