[
{"doi": "10.1109/ASE.2019.00011", "title": "Assessing the Generalizability of Code2vec Token Embeddings", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Task analysis", "Software engineering", "Natural language processing", "Training", "Cloning", "Vocabulary"], "abstract": "Many Natural Language Processing (NLP) tasks, such as sentiment analysis or syntactic parsing, have benefited from the development of word embedding models. In particular, regardless of the training algorithms, the learned embeddings have often been shown to be generalizable to different NLP tasks. In contrast, despite recent momentum on word embeddings for source code, the literature lacks evidence of their generalizability beyond the example task they have been trained for. In this experience paper, we identify 3 potential downstream tasks, namely code comments generation, code authorship identification, and code clones detection, that source code token embedding models can be applied to. We empirically assess a recently proposed code token embedding model, namely code2vec's token embeddings. Code2vec was trained on the task of predicting method names, and while there is potential for using the vectors it learns on other tasks, it has not been explored in literature. Therefore, we fill this gap by focusing on its generalizability for the tasks we have identified. Eventually, we show that source code token embeddings cannot be readily leveraged for the downstream tasks. Our experiments even show that our attempts to use them do not result in any improvements over less sophisticated methods. We call for more research into effective and general use of code embeddings.", "author": [{"name": "Hong Jin Kang", "affiliation": "Singapore Management University"}, {"name": "Tegawend\u00e9 F. Bissyand\u00e9", "affiliation": "University of Luxembourg, Luxembourg, Luxembourg"}, {"name": "David Lo", "affiliation": "Singapore Management University"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"Glove: Global vectors for word representation\"", "authors": ["J. Pennington", " R. Socher ", " C. Manning"]}, {"title": " \"A unified architecture for natural language processing: Deep neural networks with multitask learning\"", "authors": ["R. Collobert ", " J. Weston"]}, {"title": " \"Evaluation methods for unsupervised word embeddings\"", "authors": ["T. Schnabel", " I. Labutov", " D. Mimno ", " T. Joachims"]}, {"title": " \"Word representations: a simple and general method for semi-supervised learning\"", "authors": ["J. Turian", " L. Ratinov ", " Y. Bengio"]}, {"title": " \"Embeddings for word sense disambiguation: An evaluation study\"", "authors": ["I. Iacobacci", " M. T. Pilehvar ", " R. Navigli"]}, {"title": " \"On the naturalness of software\"", "authors": ["A. Hindle", " E. T. Barr", " Z. Su", " M. Gabel ", " P. Devanbu"]}, {"title": " \"Predicting program properties from big code\"", "authors": ["V. Raychev", " M. Vechev ", " A. Krause"]}, {"title": " \"Semantic source code models using identifier embeddings\"", "authors": ["V. Efstathiou ", " D. Spinellis"]}, {"title": " \"Deepbugs: a learning approach to name-based bug detection\"", "authors": ["M. Pradel ", " K. Sen"]}, {"title": " \"Summarizing source code using a neural attention model\"", "authors": ["S. Iyer", " I. Konstas", " A. Cheung ", " L. Zettlemoyer"]}, {"title": " \"code2vec: Learning distributed representations of code\"", "authors": ["U. Alon", " M. Zilberstein", " O. Levy ", " E. Yahav"]}, {"title": " \"user2code2vec: Embeddings for profiling students based on distributional representations of source code\"", "authors": ["D. Azcona", " P. Arora", " I.-H. Hsiao ", " A. Smeaton"]}, {"title": " \"Sorting and transforming program repair ingredients via deep learning code similarities\"", "authors": ["M. White", " M. Tufano", " M. Mart\u00ednez", " M. Monperrus ", " D. Poshyvanyk"]}, {"title": " \"Deep api learning\"", "authors": ["X. Gu", " H. Zhang", " D. Zhang ", " S. Kim"]}, {"title": " \"Deep code search\"", "authors": ["X. Gu", " H. Zhang ", " S. Kim"]}, {"title": " \"Learning program embeddings to propagate feedback on student code\"", "authors": ["C. Piech", " J. Huang", " A. Nguyen", " M. Phulsuksombati", " M. Sahami ", " L. Guibas"]}, {"title": " \"Import2vec-learning embeddings for software libraries\"", "authors": ["B. Theeten", " F. V", "eputte "]}, {"title": " \"Exploring the use of deep learning for feature location\"", "authors": ["C. S. Corley", " K. Damevski ", " N. A. Kraft"]}, {"title": " \"Deep code comment generation\"", "authors": ["X. Hu", " G. Li", " X. Xia", " D. Lo ", " Z. Jin"]}, {"title": " \"Large-scale and language-oblivious code authorship identification\"", "authors": ["M. Abuhamad", " T. AbuHmed", " A. Mohaisen ", " D. Nyang"]}, {"title": " \"Sourcerercc: scaling code clone detection to big-code\"", "authors": ["H. Sajnani", " V. Saini", " J. Svajlenko", " C. K. Roy ", " C. V. Lopes"]}, {"title": " \"Learning to represent programs with graphs\"", "authors": ["M. Allamanis", " M. Brockschmidt ", " M. Khademi"]}, {"title": " \"Semantic code repair using neuro-symbolic transformation networks\"", "authors": ["J. Devlin", " J. Uesato", " R. Singh ", " P. Kohli"]}, {"title": " \"Learning-based recursive aggregation of abstract syntax trees for code clone detection\"", "authors": ["L. B\u00fcch ", " A. Andrzejak"]}, {"title": " \"Cross-language learning for program classification using bilateral tree-based convolutional neural networks\"", "authors": ["N. D. Bui", " L. Jiang ", " Y. Yu"]}, {"title": " \"Convolutional neural networks over tree structures for programming language processing\"", "authors": ["L. Mou", " G. Li", " L. Zhang", " T. Wang ", " Z. Jin"]}, {"title": " \"Suggesting accurate method and class names\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"A general path-based representation for predicting program properties\"", "authors": ["U. Alon", " M. Zilberstein", " O. Levy ", " E. Yahav"]}, {"title": " \"Learning to sport and refactor inconsistent method names\"", "authors": ["K. Liu", " D. Kim", " T. F. Bissy", "\u00e9", " T. Kim", " K. Kim", " A. Koyuncu", " ."]}, {"title": " \"Easy over hard: A case study on deep learning\"", "authors": ["W. Fu ", " T. Menzies"]}, {"title": " \"Towards automatically generating summary comments for java methods\"", "authors": ["G. Sridhara", " E. Hill", " D. Muppaneni", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"Supporting program comprehension with source code summarization\"", "authors": ["S. Haiduc", " J. Aponte ", " A. Marcus"]}, {"title": " \"Bleu: a method for automatic evaluation of machine translation\"", "authors": ["K. Papineni", " S. Roukos", " T. Ward ", " W.-J. Zhu"]}, {"title": " \"Correlating automated and human assessments of machine translation quality\"", "authors": ["D. Coughlin"]}, {"title": " \"Changescribe: A tool for automatically generating commit messages\"", "authors": ["M. Linares-V\u00e1squez", " L. F. Cort\u00e9s-Coy", " J. Aponte ", " D. Poshyvanyk"]}, {"title": " \"Neuralmachine-translation-based commit message generation: how far are we?\"", "authors": ["Z. Liu", " X. Xia", " A. E. Hassan", " D. Lo", " Z. Xing ", " X. Wang"]}, {"title": " \"Automatically generating commit messages from diffs using neural machine translation\"", "authors": ["S. Jiang", " A. Armaly ", " C. McMillan"]}, {"title": " \"Opennmt: Open-source toolkit for neural machine translation\"", "authors": ["G. Klein", " Y. Kim", " Y. Deng", " J. Senellart ", " A. M. Rush"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"A survey of modern authorship attribution methods\"", "authors": ["E. Stamatatos"]}, {"title": " \"De-anonymizing programmers via code stylometry\"", "authors": ["A. Caliskan-Islam", " R. Harang", " A. Liu", " A. Narayanan", " C. Voss", " F. Yamaguchi", " ."]}, {"title": " \"Experiment on the automatic detection of function clones in a software system using metrics\"", "authors": ["J. Mayr", "", " C. Leblanc ", " E. Merlo"]}, {"title": " \"An exploratory study of cloning in industrial software product lines\"", "authors": ["Y. Dubinsky", " J. Rubin", " T. Berger", " S. Duszynski", " M. Becker ", " K. Czarnecki"]}, {"title": " \"An empirical study on the maintenance of source code clones\"", "authors": ["S. Thummalapenta", " L. Cerulo", " L. Aversano ", " M. Di Penta"]}, {"title": " \"Late propagation in software clones\"", "authors": ["L. Barbour", " F. Khomh ", " Y. Zou"]}, {"title": " \"Evaluating clone detection tools with bigclonebench\"", "authors": ["J. Svajlenko ", " C. K. Roy"]}, {"title": " \"Towards a big data curated benchmark of inter-project code clones\"", "authors": ["J. Svajlenko", " J. F. Islam", " I. Keivanloo", " C. K. Roy ", " M. M. Mia"]}, {"title": " \"Bigcloneeval: A clone detection tool evaluation framework with bigclonebench\"", "authors": ["J. Svajlenko ", " C. K. Roy"]}, {"title": " \"Positive and unlabeled learning for detecting software functional clones with adversarial training\"", "authors": ["H.-H. Wei ", " M. Li"]}, {"title": " \"Oreo: Detection of clones in the twilight zone\"", "authors": ["V. Saini", " F. Farmahinifarahani", " Y. Lu", " P. Baldi ", " C. V. Lopes"]}, {"title": " \"Code vectors: understanding programs through embedded abstracted symbolic traces\"", "authors": ["J. Henkel", " S. K. Lahiri", " B. Liblit ", " T. Reps"]}, {"title": " \"Distributed representations of sentences and documents\"", "authors": ["Q. Le ", " T. Mikolov"]}, {"title": " \"Are deep neural networks the best choice for modeling source code?\"", "authors": ["V. J. Hellendoorn ", " P. Devanbu"]}, {"title": " \"A discriminative model approach for accurate duplicate bug report retrieval\"", "authors": ["C. Sun", " D. Lo", " X. Wang", " J. Jiang ", " S.-C. Khoo"]}, {"title": " \"Mining duplicate questions in stack overflow\"", "authors": ["M. Ahasanuzzaman", " M. Asaduzzaman", " C. K. Roy ", " K. A. Schneider"]}, {"title": " \"Deepam: migrate apis with multi-modal sequence to sequence learning\"", "authors": ["X. Gu", " H. Zhang", " D. Zhang ", " S. Kim"]}, {"title": " \"Problems with evaluation of word embeddings using word similarity tasks\"", "authors": ["M. Faruqui", " Y. Tsvetkov", " P. Rastogi ", " C. Dyer"]}, {"title": " \"Intrinsic evaluation of word vectors fails to predict extrinsic performance\"", "authors": ["B. Chiu", " A. Korhonen ", " S. Pyysalo"]}, {"title": " \"A literature study of embeddings on source code\"", "authors": ["Z. Chen ", " M. Monperrus"]}, {"title": " \"Neural network-based graph embedding for cross-platform binary code similarity detection\"", "authors": ["X. Xu", " C. Liu", " Q. Feng", " H. Yin", " L. Song ", " D. Song"]}, {"title": " \"Deep learning type inference\"", "authors": ["V. J. Hellendoorn", " C. Bird", " E. T. Barr ", " M. Allamanis"]}, {"title": " \"Path-based function embedding and its application to specification mining\"", "authors": ["D. DeFreez", " A. V. Thakur ", " C. Rubio-Gonz\u00e1lez"]}, {"title": " \"Neural code comprehension: A learnable representation of code semantics\"", "authors": ["T. Ben-Nun", " A. S. Jakobovits ", " T. Hoefler"]}]},
{"doi": "10.1109/ASE.2019.00012", "title": "Multi-modal Attention Network Learning for Semantic Source Code Retrieval", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Semantics", "Natural languages", "Deep learning", "Task analysis", "Neural networks", "Feature extraction", "Visualization"], "abstract": "The following topics are dealt with: program testing; program diagnostics; learning (artificial intelligence); program debugging; software maintenance; software quality; public domain software; program verification; software engineering; mobile computing.", "author": [{"name": "Yao Wan", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Jingdong Shu", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Yulei Sui", "affiliation": "School of Computer Science, University of Technology Sydney, Australia"}, {"name": "Guandong Xu", "affiliation": "School of Computer Science, University of Technology Sydney, Australia"}, {"name": "Zhou Zhao", "affiliation": "Department of Computer Science, University of Illinois at Chicago, Illinois, USA"}, {"name": "Jian Wu", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Philip Yu", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"Semantics-based code search\"", "authors": ["S. P. Reiss"]}, {"title": " \"Query expansion via wordnet for effective code search\"", "authors": ["M. Lu", " X. Sun", " S. Wang", " D. Lo ", " Y. Duan"]}, {"title": " \"Codehow: Effective code search based on api understanding and extended boolean model (e)\"", "authors": ["F. Lv", " H. Zhang", " J.-g. Lou", " S. Wang", " D. Zhang ", " J. Zhao"]}, {"title": " \"Deep code search\"", "authors": ["X. Gu", " H. Zhang ", " S. Kim"]}, {"title": " \"Deep learning code fragments for code clone detection\"", "authors": ["M. White", " M. Tufano", " C. Vendome ", " D. Poshyvanyk"]}, {"title": " \"Improving automatic source code summarization via deep reinforcement learning\"", "authors": ["Y. Wan", " Z. Zhao", " M. Yang", " G. Xu", " H. Ying", " J. Wu", " ."]}, {"title": " \"Compilers principles techniques\"", "authors": ["A. V. Aho", " R. Sethi ", " J. D. Ullman"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"Improved semantic representations from tree-structured long short-term memory networks\"", "authors": ["K. S. Tai", " R. Socher ", " C. D. Manning"]}, {"title": " \"Gated graph sequence neural networks\"", "authors": ["Y. Li", " D. Tarlow", " M. Brockschmidt ", " R. Zemel"]}, {"title": " \"Convolutional neural networks over tree structures for programming language processing\"", "authors": ["L. Mou", " G. Li", " L. Zhang", " T. Wang ", " Z. Jin"]}, {"title": " \"Learning program embeddings to propagate feedback on student code\"", "authors": ["C. Piech", " J. Huang", " A. Nguyen", " M. Phulsuksombati", " M. Sahami ", " L. Guibas"]}, {"title": " \"Neuro-symbolic program synthesis\"", "authors": ["E. Parisotto", " A.-r. Mohamed", " R. Singh", " L. Li", " D. Zhou ", " P. Kohli"]}, {"title": " \"Structured generative models of natural source code\"", "authors": ["C. Maddison ", " D. Tarlow"]}, {"title": " \"A deep language model for software code\"", "authors": ["H. K. Dam", " T. Tran ", " T. Pham"]}, {"title": " \"Latent predictor networks for code generation\"", "authors": ["W. Ling", " E. Grefenstette", " K. M. Hermann", " T. Ko\u010disk\u1ef3", " A. Senior", " F. Wang", " ."]}, {"title": " \"Bimodal modelling of source code and natural language\"", "authors": ["M. Allamanis", " D. Tarlow", " A. Gordon ", " Y. Wei"]}, {"title": " \"Abstractive text-image summarization using multi-modal attentional hierarchical rnn\"", "authors": ["J. Chen ", " H. Zhuge"]}, {"title": " \"Multimodal generative adversarial network for short product title generation in mobile e-commerce\"", "authors": ["J.-G. Zhang", " P. Zou", " Z. Li", " Y. Wan", " X. Pan", " Y. Gong", " ."]}, {"title": " \"Multimodal dual attention memory for video story question answering\"", "authors": ["K.-M. Kim", " S.-H. Choi", " J.-H. Kim ", " B.-T. Zhang"]}, {"title": " \"End-to-end audio visual scene-aware dialog using multimodal attention-based video features\"", "authors": ["C. Hori", " H. Alamri", " J. Wang", " G. Wichern", " T. Hori", " A. Cherian", " T. K. Marks", " V. Cartillier", " R. G. Lopes", " A. Das ."]}, {"title": " \"Cross-modal retrieval in the cooking context: Learning semantic textimage embeddings\"", "authors": ["M. Carvalho", " R. Cadne", " D. Picard", " L. Soulier", " N. Thome ", " M. Cord"]}, {"title": " \"Multimodal convolutional neural networks for matching image and sentence\"", "authors": ["L. Ma", " Z. Lu", " L. Shang ", " H. Li"]}, {"title": " \"Deep visual-semantic hashing for cross-modal retrieval\"", "authors": ["Y. Cao", " M. Long", " J. Wang", " Q. Yang ", " P. S. Yu"]}, {"title": " \"Deep cross-modal hashing\"", "authors": ["Q.-Y. Jiang ", " W.-J. Li"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\"", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Image captioning with semantic attention\"", "authors": ["Q. You", " H. Jin", " Z. Wang", " C. Fang ", " J. Luo"]}, {"title": " \"The application of two-level attention models in deep convolutional neural network for fine-grained image classification\"", "authors": ["T. Xiao", " Y. Xu", " K. Yang", " J. Zhang", " Y. Peng ", " Z. Zhang"]}, {"title": " \"Hierarchical question-image co-attention for visual question answering\"", "authors": ["J. Lu", " J. Yang", " D. Batra ", " D. Parikh"]}, {"title": " \"Recurrent models of visual attention\"", "authors": ["V. Mnih", " N. Heess", " A. Graves ."]}, {"title": " \"Deep networks with internal selective attention through feedback connections\"", "authors": ["M. F. Stollenga", " J. Masci", " F. Gomez ", " J. Schmidhuber"]}, {"title": " \"Draw: A recurrent neural network for image generation\"", "authors": ["K. Gregor", " I. Danihelka", " A. Graves", " D. J. Rezende ", " D. Wierstra"]}, {"title": " \"Show attend and tell: Neural image caption generation with visual attention\"", "authors": ["K. Xu", " J. Ba", " R. Kiros", " K. Cho", " A. Courville", " R. Salakhudinov", " ."]}, {"title": " \"Stacked attention networks for image question answering\"", "authors": ["Z. Yang", " X. He", " J. Gao", " L. Deng ", " A. Smola"]}, {"title": " \"Dynamic memory networks for visual and textual question answering\"", "authors": ["C. Xiong", " S. Merity ", " R. Socher"]}, {"title": " \"Where to look: Focus regions for visual question answering\"", "authors": ["K. J. Shih", " S. Singh ", " D. Hoiem"]}, {"title": " \"A hierarchical neural autoencoder for paragraphs and documents\"", "authors": ["J. Li", " M.-T. Luong ", " D. Jurafsky"]}, {"title": " \"A neural attention model for abstractive sentence summarization\"", "authors": ["A. M. Rush", " S. Chopra ", " J. Weston"]}, {"title": " \"Ask me anything: Dynamic memory networks for natural language processing\"", "authors": ["A. Kumar", " O. Irsoy", " P. Ondruska", " M. Iyyer", " J. Bradbury", " I. Gulrajani", " ."]}, {"title": " \"Dual attention networks for multimodal reasoning and matching\"", "authors": ["H. Nam", " J.-W. Ha ", " J. Kim"]}, {"title": " \"A deep reinforced model for abstractive summarization\"", "authors": ["R. Paulus", " C. Xiong ", " R. Socher"]}, {"title": " \"Self-attention generative adversarial networks\"", "authors": ["H. Zhang", " I. Goodfellow", " D. Metaxas ", " A. Odena"]}, {"title": " \"Multimodal machine learning: A survey and taxonomy\"", "authors": ["T. Baltru\u0161aitis", " C. Ahuja ", " L.-P. Morency"]}, {"title": " \"Effective approaches to attention-based neural machine translation\"", "authors": ["M.-T. Luong", " H. Pham ", " C. D. Manning"]}, {"title": " \"Attention is all you need\"", "authors": ["A. Vaswani", " N. Shazeer", " N. Parmar", " J. Uszkoreit", " L. Jones", " A. N. Gomez", " ."]}, {"title": " \"Long short-term memory-networks for machine reading\"", "authors": ["J. Cheng", " L. Dong ", " M. Lapata"]}, {"title": " \"A decomposable attention model for natural language inference\"", "authors": ["A. P. Parikh", " O. T\u00e4ckstr\u00f6m", " D. Das ", " J. Uszkoreit"]}, {"title": " \"Empirical evaluation of gated recurrent neural networks on sequence modeling\"", "authors": ["J. Chung", " C. Gulcehre", " K. Cho ", " Y. Bengio"]}, {"title": " \"Unifying visual-semantic embeddings with multimodal neural language models\"", "authors": ["R. Kiros", " R. Salakhutdinov ", " R. S. Zemel"]}, {"title": " \"Svf: interprocedural static value-flow analysis in llvm\"", "authors": ["Y. Sui ", " J. Xue"]}, {"title": " \"Detecting memory leaks statically with fullsparse value-flow analysis\"", "authors": ["Y. Sui", " D. Ye ", " J. Xue"]}, {"title": " \"On-demand strong update analysis via value-flow refinement\"", "authors": ["Y. Sui ", " J. Xue"]}, {"title": " \"Reevaluating automatic metrics for image captioning\"", "authors": ["M. Kilickaya", " A. Erdem", " N. Ikizler-Cinbis ", " E. Erdem"]}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}]},
{"doi": "10.1109/ASE.2019.00013", "title": "Experience Paper: Search-Based Testing in Automated Driving Control Applications", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Software", "Monitoring", "Test pattern generators", "Optimization", "Measurement"], "abstract": "Automated test generation and evaluation in simulation environments is a key technology for verification of automated driving (AD) applications. Search-based testing (SBT) is an approach for automated test generation that leverages optimization to efficiently generate interesting concrete tests from abstract test descriptions. In this experience paper, we report on our observations after successfully applying SBT to AD control applications in several use cases with different characteristics. Based on our experiences, we derive a number of lessons learned that we consider important for the adoption of SBT methods and tools in industrial settings. The key lesson is that SBT finds relevant errors and provides valuable feedback to the developers, but requires tool support for writing specifications.", "author": [{"name": "Christoph Gladisch", "affiliation": "Robert Bosch GmbH, Corporate Research, Renningen, Germany"}, {"name": "Thomas Heinz", "affiliation": "Robert Bosch GmbH, Corporate Research, Renningen, Germany"}, {"name": "Christian Heinzemann", "affiliation": "Robert Bosch GmbH, Corporate Research, Renningen, Germany"}, {"name": "Jens Oehlerking", "affiliation": "Robert Bosch GmbH, Corporate Research, Renningen, Germany"}, {"name": "Anne von Vietinghoff", "affiliation": "Robert Bosch GmbH, Renningen, Germany"}, {"name": "Tim Pfitzer", "affiliation": "Robert Bosch GmbH, Corporate Research, Renningen, Germany"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Inside waymo\u2019s secret world for training self-driving cars\"", "authors": ["A. C. Madrigal"]}, {"title": " \"Scenarios for development test and validation of automated vehicles\"", "authors": ["T. Menzel", " G. Bagschik ", " M. Maurer"]}, {"title": " \"Automatic generation of floating-point test data\"", "authors": ["W. Miller ", " D. L. Spooner"]}, {"title": " \"Search-based software testing: Past present and future\"", "authors": ["P. McMinn"]}, {"title": " \"A systematic review of the application and empirical investigation of search-based test case generation\"", "authors": ["S. Ali", " L. C. Bri", "", " H. Hemmati ", " R. K. Panesar-Walawege"]}, {"title": " \"Utilizing s-taliro as an automatic test generation framework for autonomous vehicles\"", "authors": ["C. E. Tuncali", " T. P. Pavlic ", " G. Fainekos"]}, {"title": " \"Testing cyber-physical systems through bayesian optimization\"", "authors": ["J. V. Deshmukh", " M. Horvat", " X. Jin", " R. Majumdar ", " V. S. Prabhu"]}, {"title": " \"Industrial evaluation of search-based test generation techniques for control systems\"", "authors": ["F. Hauer", " A. Pretschner", " M. Schmitt ", " M. Groetsch"]}, {"title": " \"Experience report: Application of falsification methods on the UxAS system\"", "authors": ["C. E. Tuncali", " B. Hoxha", " G. Ding", " G. E. Fainekos ", " S. Sankaranarayanan"]}, {"title": " \"Search-based automated testing of continuous controllers: Framework tool support and case studies\"", "authors": ["R. Matinnejad", " S. Nejati", " L. C. Bri", "", " T. Bruckmann ", " C. Poull"]}, {"title": " \"Breach a toolbox for verification and parameter synthesis of hybrid systems\" in Computer Aided Verification", "authors": ["A. Donz\u00e9"]}, {"title": " \"STaLiRo: A tool for temporal logic falsification for hybrid systems\" in Tools and Algorithms for the Construction and Analysis of Systems", "authors": ["Y. Annapureddy", " C. Liu", " G. Fainekos ", " S. Sankaranarayanan"]}, {"title": " \"Robust satisfaction of temporal logic over real-valued signals\"", "authors": ["A. Donz\u00e9 ", " O. Maler"]}, {"title": " \"Robustness of temporal logic specifications for continuous-time signals\"", "authors": ["G. E. Fainekos ", " G. J. Pappas"]}, {"title": " \"Specification-based monitoring of cyber-physical systems: A survey on theory tools and applications\" in Lectures on Runtime Verification - Introductory and Advanced Topics", "authors": ["E. Bartocci", " J. V. Deshmukh", " A. Donz\u00e9", " G. E. Fainekos", " O. Maler", " D. Nickovic", " ."]}, {"title": " \"Mil testing of highly configurable continuous controllers: scalable search using surrogate models\"", "authors": ["R. Matinnejad", " S. Nejati", " L. C. Bri", " "]}, {"title": " \"Cocotest: a tool for model-in-the-loop testing of continuous controllers\"", "authors": ["R. Matinnejad", " S. Nejati", " L. C. Bri", " "]}, {"title": " \"LOLA: runtime monitoring of synchronous systems\"", "authors": ["B. D\u2019Angelo", " S. Sankaranarayanan", " C. S\u00e1nchez", " W. Robinson", " B. Finkbeiner", " H. B. Sipma", " ."]}, {"title": " \"A multilevel collision mitigation approach \u2013 its situation assessment decision making and performance tradeoffs\"", "authors": ["J. Hillenbr", "", " A. M. Spieker ", " K. Kroschel"]}, {"title": "\"MathWorks\"", "authors": []}, {"title": " \"A theoretical and empirical study of searchbased testing: Local global and hybrid search\"", "authors": ["M. Harman ", " P. McMinn"]}, {"title": " \"Testing autonomous cars for feature interaction failures using many-objective search\"", "authors": ["R. B. Abdessalem", " A. Panichella", " S. Nejati", " L. C. Bri", " "]}, {"title": " \"Parallelised bayesian optimisation via thompson sampling\"", "authors": ["K. K", "asamy", " A. Krishnamurthy", " J. Schneider ", " B. Poczos"]}, {"title": " \"Parallel bayesian global optimization of expensive functions\"", "authors": ["J. Wang", " S. C. Clark", " E. Liu ", " P. I. Frazier"]}, {"title": " \"STL*: Extending signal temporal logic with signal-value freezing operator\"", "authors": ["L. Brim", " P. Dluhos", " D. Safr\u00e1nek ", " T. Vejpustek"]}, {"title": " \"Robust satisfaction of temporal logic over real-valued signals\" in Formal Modeling and Analysis of Timed Systems", "authors": ["A. Donz\u00e9 ", " O. Maler"]}, {"title": " \"Time robustness in mtl and expressivity in hybrid system falsification\" in Computer Aided Verification", "authors": ["T. Akazaki ", " I. Hasuo"]}, {"title": " \"The logic of bugs\"", "authors": ["G. J. Holzmann"]}, {"title": " \"Falsification of temporal logic requirements using gradient based local search in space and time\"", "authors": ["S. Yaghoubi ", " G. Fainekos"]}, {"title": " \"Ontology based scene creation for the development of automated vehicles\"", "authors": ["G. Bagschik", " T. Menzel ", " M. Maurer"]}, {"title": " \"Stochastic optimization on continuous domains with finite-time guarantees by markov chain monte carlo methods\"", "authors": ["A. Lecchini-Visintini", " J. Lygeros ", " J. M. Maciejowski"]}, {"title": " \"Robustness-guided temporal logic testing and verification for stochastic cyber-physical systems\"", "authors": ["H. Abbas", " B. Hoxha", " G. Fainekos ", " K. Ueda"]}]},
{"doi": "10.1109/ASE.2002.1114984", "title": "Assumption generation for software component verification", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["NASA", "Character generation", "Embedded software", "Space technology", "Computer science", "Application software", "Humans", "Operating systems", "Explosions", "Software systems"], "abstract": "Model checking is an automated technique that can be used to determine whether a system satisfies certain required properties. The typical approach to verifying properties of software components is to check them for all possible environments. In reality, however, a component is only required to satisfy properties in specific environments. Unless these environments are formally characterized and used during verification (assume-guarantee paradigm), the results returned by verification can be overly pessimistic. This work defines a framework that brings a new dimension to model checking of software components. When checking a component against a property, our model checking algorithms return one of the following three results: the component satisfies a property for any environment; the component violates the property for any environment; or finally, our algorithms generate an assumption that characterizes exactly those environments in which the component satisfies its required property. Our approach has been implemented in the LTSA tool and has been applied to the analysis of a NASA application.", "author": [{"name": "D. Giannakopoulou", "affiliation": "RIACS USRA, NASA Ames Research Center, CA, USA"}, {"name": "C.S. Pasareanu", "affiliation": "NASA Ames Research Center, CA, USA"}, {"name": "H. Barringer", "affiliation": "Department of Computer Science, University of Manchester, Institute of Science and Technology, Manchester, UK"}], "time": "2002", "citationCount": "69", "references": [{"title": " \"Supervisory control of finite state machines\"", "authors": ["A. Aziz", " F. Balarin", " R. K. Brayton", " M. D. Dibenedetto", " A. Sladanha", " A. L. Sangiovanni-", " ."]}, {"title": " \"Modularity in model checking\"", "authors": ["R. Alur", " T. Henzinger", " F. Mang", " S. Qadeer", " S. Rajamani", " S. Tasiran", " ."]}, {"title": " \"Supervisory control of a rapid thermal multiprocessor\"", "authors": ["S. Balemi", " G. Hoffmann", " P. Gyugyi", " H. Wong-Toi ", " G. Franklin"]}, {"title": " \"Context constraints for compositional reachability analysis\"", "authors": ["S. Cheung ", " J. Kramer"]}, {"title": " \"Checking safety properties using compositional reachability analysis\"", "authors": ["S. Cheung ", " J. Kramer"]}, {"title": " \"Interface automata\"", "authors": ["L. de Alfaro ", " T. Henzinger"]}, {"title": " \"Interface theories for component-based design\"", "authors": ["L. de Alfaro ", " T. Henzinger"]}, {"title": " \"The need for compositional proof systems: A survey. In de Roever\"", "authors": ["W.-P. de Roever ."]}, {"title": " \"Concurrency Verification: Introduction to Compositional and Non-compositional Methods\"", "authors": ["W.-P de Roever", " F. de Boer", " U. Hanneman", " J. Hooman", " Y. Lakhnech", " M. Poel", " ."]}, {"title": " \"Model matching for finite-state machines\"", "authors": ["M", " Di Benedetto ", " A. Sangiovanni-Vincentelli"]}, {"title": " \"Thread-modular verification for shared-memory programs\"", "authors": ["C. Flanagan", " S. Freund ", " S. Qadeer"]}, {"title": " \"Analysing the behaviour of distributed systems using Tracta\"", "authors": ["D. Giannakopoulou", " J. Kramer ", " S. Cheung"]}, {"title": " \"Compositional minimisation of finite state systems using interface specifications\"", "authors": ["S. Graf", " B. Steffen ", " G. L\u00fcttgen"]}, {"title": " \"Submodule construction from concurrent system specifications\"", "authors": ["E. Haghverdi ", " H. Ural"]}, {"title": " \"Monitoring Java programs with Java PathExplorer\"", "authors": ["K. Havelund ", " G. Rosu"]}, {"title": " \"Connectors synthesis for deadlock-free component based architectures\"", "authors": ["P. Inverardi ", " S. Scriboni"]}, {"title": " \"Static checking of system behaviors using derived component assumptions\"", "authors": ["P. Inverardi", " A. Wolf ", " D. Yankelevich"]}, {"title": " \"Specification and design of (parallel) programs\"", "authors": ["C. Jones"]}, {"title": " \"Tentative steps towards a development method for interfering programs\"", "authors": ["C. Jones"]}, {"title": " \"Engineering change in a non-deterministic FSM setting\"", "authors": ["S. Khatri", " A. Narayan", " S. Krishnan", " K. McMillan", " R. Brayton ", " A. Sangiovanni-Vincentelli"]}, {"title": " \"Compositional state space generation from LOTOS programs\"", "authors": ["J.-P Krimm ", " L. Mounier"]}, {"title": " \"A modal process logic\"", "authors": ["K. Larsen ", " B. Thomsen"]}, {"title": " \"Equation solving using modal transition systems\"", "authors": ["K. Larsen ", " L. Xinxin"]}, {"title": " \"Regis: A constructive development environment for parallel and distributed programs\"", "authors": ["J. Magee", " N. Dulay ", " J. Kramer"]}, {"title": " \"Behaviour analysis of software architectures\"", "authors": ["J. Magee", " J. Kramer ", " D. Giannakopoulou"]}, {"title": " \"Graphical animation of behavior models\"", "authors": ["J. Magee", " N. Pryce", " D. Giannakopoulou ", " J. Kramer"]}, {"title": " \"On the construction of submodule specification and communication protocols\"", "authors": ["P. Merlin ", " G. V. Bochmann"]}, {"title": " \"Submodule construction as equation solving CCS\"", "authors": ["J. Parrow"]}, {"title": " \"Assume-guarantee model checking of software: A comparative case study\" in editors Theoretical and Practical Aspects of SPIN Model Checking volume 1680 of Lecture Notes in Computer Science", "authors": ["C. P\u00c4\u0192s\u00e4\u0192reanu", " M. Dwyer", " M. Huth", " D. Dams", " R. Gerth", " S. Leue", " ."]}, {"title": " \"A note on the simple interface equation\"", "authors": ["M. Shields"]}, {"title": " \"Constructing submodule specifications and network protocols\"", "authors": ["D. P. Sidhu ", " J. Aristizabal"]}, {"title": " \"A method for the development of totally correct shared-state parallel programs\"", "authors": ["K.", " K. Stlen", " J. Baeten ", " J. Groote"]}, {"title": " \"Automatic synthesis of controllers from formal specifications\"", "authors": ["E. Tronci"]}, {"title": " \"The rely-guarantee method for verifying shared variable concurrent programs\"", "authors": ["Q. Xu", " W.-P. de Roever ", " J. He"]}]},
{"doi": "10.1109/ASE.2019.00014", "title": "AutoFocus: Interpreting Attention-Based Neural Networks by Code Perturbation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Visualization", "Biological neural networks", "Color", "Perturbation methods", "Task analysis", "Feature extraction"], "abstract": "Despite being adopted in software engineering tasks, deep neural networks are treated mostly as a black box due to the difficulty in interpreting how the networks infer the outputs from the inputs. To address this problem, we propose AutoFocus, an automated approach for rating and visualizing the importance of input elements based on their effects on the outputs of the networks. The approach is built on our hypotheses that (1) attention mechanisms incorporated into neural networks can generate discriminative scores for various input elements and (2) the discriminative scores reflect the effects of input elements on the outputs of the networks. This paper verifies the hypotheses by applying AutoFocus on the task of algorithm classification (i.e., given a program source code as input, determine the algorithm implemented by the program). AutoFocus identifies and perturbs code elements in a program systematically, and quantifies the effects of the perturbed elements on the network's classification results. Based on evaluation on more than 1000 programs for 10 different sorting algorithms, we observe that the attention scores are highly correlated to the effects of the perturbed code elements. Such a correlation provides a strong basis for the uses of attention scores to interpret the relations between code elements and the algorithm classification results of a neural network, and we believe that visualizing code elements in an input program ranked according to their attention scores can facilitate faster program comprehension with reduced code.", "author": [{"name": "Nghi D. Q. Bui", "affiliation": "Singapore Management University, Singapore, Singapore"}, {"name": "Yijun Yu", "affiliation": "School of Computing & Communications, The Open University, Milton Keynes, UK"}, {"name": "Lingxiao Jiang", "affiliation": "School of Information Systems, Singapore Management University"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A survey of machine learning for big code and naturalness\"", "authors": ["M. Allamanis", " E. T. Barr", " P. T. Devanbu ", " C. A. Sutton"]}, {"title": " \"Software vulnerability analysis and discovery using machine-learning and data-mining techniques: A survey\"", "authors": ["S. M. Ghaffarian ", " H. R. Shahriari"]}, {"title": " \"Convolutional neural networks over tree structures for programming language processing\"", "authors": ["L. Mou", " G. Li", " L. Zhang", " T. Wang ", " Z. Jin"]}, {"title": " \"A novel neural source code representation based on abstract syntax tree\"", "authors": ["J. Zhang", " X. Wang", " H. Zhang", " H. Sun", " K. Wang ", " X. Liu"]}, {"title": " \"Bilateral dependency neural networks for cross-language algorithm classification\"", "authors": ["B. D. Q. Nghi", " Y. Yu ", " L. Jiang"]}, {"title": " \"Explaining explanations: An overview of interpretability of machine learning\"", "authors": ["L. H. Gilpin", " D. Bau", " B. Z. Yuan", " A. Bajwa", " M. Specter ", " L. Kagal"]}, {"title": " \"Interpretability beyond feature attribution: Quantitative testing with concept activation vectors (TCAV)\"", "authors": ["B. Kim", " M. Wattenberg", " J. Gilmer", " C. J. Cai", " J. Wexler", " F. Viegas", " ."]}, {"title": " \"Towards robust interpretability with self-explaining neural networks\"", "authors": ["D. Alvarez-Melis ", " T. S. Jaakkola"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\"", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Effective approaches to attention-based neural machine translation\"", "authors": ["T. Luong", " H. Pham ", " C. D. Manning"]}, {"title": " \"Attention is not explanation\"", "authors": ["S. Jain ", " B. C. Wallace"]}, {"title": " \"Learning to represent programs with graphs\"", "authors": ["M. Allamanis", " M. Brockschmidt ", " M. Khademi"]}, {"title": " \"Explainable software analytics\"", "authors": ["H. K. Dam", " T. Tran ", " A. Ghose"]}, {"title": " \"Visualizing and understanding convolutional networks\"", "authors": ["M. D. Zeiler ", " R. Fergus"]}, {"title": " \"Visualizing and understanding neural models in NLP\"", "authors": ["J. Li", " X. Chen", " E. H. Hovy ", " D. Jurafsky"]}, {"title": " \"Interpretable explanations of black boxes by meaningful perturbation\"", "authors": ["R. C. Fong ", " A. Vedaldi"]}, {"title": " \"why should I trust you? explaining the predictions of any classifier\"", "authors": ["M. T. Ribeiro", " S. Singh ", " C. Guestrin"]}]},
{"doi": "10.1109/ASE.2002.1114987", "title": "An approach to rapid prototyping of large multi-agent systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Prototypes", "Multiagent systems", "Protocols", "Design engineering", "Software prototyping", "Space exploration", "Virtual prototyping", "Artificial intelligence", "Automata", "Informatics"], "abstract": "Engineering individual components of a multi-agent system and their interactions is a complex and error-prone task in urgent need of methods and tools. Prototyping is a valuable technique to help software engineers explore the design space while gaining insight and a \"feel\" for the dynamics of the system; prototyping also allows engineers to learn more about the relationships among design features and the desired computational behaviour. In this paper we describe an approach to building prototypes of large multi-agent systems with which we can experiment and analyse results. We have implemented an environment embodying our approach. This environment is supported by a distributed platform that helps us achieve controlled simulations.", "author": [{"name": "W. Vasconcelos", "affiliation": "Centre for Intelligent Systems and their Applications (CISA), Division of Informatics, University of Edinburgh, Edinburgh, UK"}, {"name": "C. Sierra", "affiliation": "Consejo Superior Investigaciones Cient\u00edficas (CSIC), Artificial Intelligence Research Institute, Spain"}, {"name": "M. Esteva", "affiliation": "Consejo Superior Investigaciones Cient\u00edficas (CSIC), Artificial Intelligence Research Institute, Spain"}], "time": "2002", "citationCount": "4", "references": [{"title": " \"A Logic Based Approach to MultiAgentSystems\"", "authors": ["J. J. Alferes", " P. Dell'Acqua", " E. Lamma", " J. A. Leite", " L. M. Pereira ", " F. Riguzzi"]}, {"title": " \"Logic Programming & Multi-Agent Systems: a SynergicCombination for Applications and Semantics\" in TheLogic Programming Paradigm: a 25-Year Perspective", "authors": ["M. Bozzano", " G. Delzanno", " M. Martelli", " V. Mascardi ", " F. Zini"]}, {"title": " \"Rapid Prototyping through CommunicatingPetri Nets\"", "authors": ["G. Bucci ", " E. Vicario"]}, {"title": " \"WWW Programmingusing Computational Logic Systems (and the PiLLoW/CIAO Library)\"", "authors": ["D. Cabeza", " M. Hermenegildo ", " S. Varma"]}, {"title": " \"Kasbah: An Agent Marketplace for sBuying and Selling Goods\"", "authors": ["A. Chavez ", " P. Maes"]}, {"title": " \"Combining LogicalAgents with Rapid Prototyping for Engineering DistributedApplications\" in Procs. 9th Software Tech. & EngineeringPractice (STEP'99)", "authors": ["P. Dart", " E. Kazmierczak", " L. Sterling", " M. Martelli", " V. Mascardi", " F. Zini", " ."]}, {"title": " \"ISLANDER: anElectronic Institution Editor\"", "authors": ["M. Esteva", " D. de La Cruz ", " C. Sierra"]}, {"title": " \"On the Formal Specification of Electronic Institutions\" in LNAI", "authors": ["M. Esteva", " J.-A. Rodr\u00edguez-Aguilar", " C. Sierra", " P. Garcia ", " J. L. Arcos"]}, {"title": " \"An AbstractFormalisation of Correct Schemas for Program Synthesis\"", "authors": ["P. Flener", " K.-K. Lau", " M. Ornaghi ", " J. Richardson"]}, {"title": " \"Is it an Agent or just a Program?\" in Intelligent Agents III", "authors": ["A. Franklin ", " A. Graesser"]}, {"title": " \"Specifications are (Preferably) Executable\"", "authors": ["N. E. Fuchs"]}, {"title": " \"Knowledge-Based Programming: A Surveyof Program Design and Construction Techniques\"", "authors": ["A. T. Goldberg"]}, {"title": " \"Rapid Prototyping: LessonsLearned\"", "authors": ["V. S. Gordon ", " J. M. Bieman"]}, {"title": " \"Programming Languages and Systems for Prototyping Concurrent Applications\"", "authors": ["W. Hasselbring"]}, {"title": " \"SPIN ModelChecking: an Introduction\"", "authors": ["G. J. Holzmann", " E. Najm ", " A. Serhrouchni"]}, {"title": " \"From Logic Programming Towards Multi-agent Systems\"", "authors": ["R. A. Kowalski ", " F. Sadri"]}, {"title": "\"Aided System Prototyping\"", "authors": []}, {"title": " \"Specification and Simulation of Multi-Agent Systems in CaseL P\"", "authors": ["M. Martelli", " V. Mascardi ", " F. Zini"]}, {"title": " \"Agents that Reasonand Negotiate by Arguing\"", "authors": ["S. Parsons", " C. Sierra ", " N. R. Jennings"]}, {"title": " \"EvolutionaryComputation and Multiagent Systems Design\"", "authors": ["C. Sierra", " J. Sabater", " J. Agust\u00ed ", " P. Garcia"]}, {"title": " \"Towards a Virtual Marketplace: Architecture and Strategies\"", "authors": ["M. Tsvetovatyy ", " M. Gini"]}, {"title": " \"Logic-Based Electronic Institutions. SLIE Technical Paper\"", "authors": ["W. W. Vasconcelos"]}, {"title": " \"A Practical Approachfor Logic Program Analysis and Transformation\"", "authors": ["W. W. Vasconcelos ", " E. X. Meneses"]}, {"title": " \"A Lifecyclefor Models of Large Multi-Agent Systems\"", "authors": ["W. W. Vasconcelos", " D. Robertson", " J. Agust\u00ed", " C. Sierra", " M. Wooldridge", " S. Parsons", " ."]}, {"title": " \"Skeleton-based Agent Development for Electronic Institutions\"", "authors": ["W. W. Vasconcelos", " J. Sabater", " C. Sierra ", " J. Querol"]}, {"title": " \"Intelligent Agents: Theory and Practice\"", "authors": ["M. Wooldridge ", " N. R. Jennings"]}]},
{"doi": "10.1109/ASE.2019.00015", "title": "Test Transfer Across Mobile Apps Through Semantic Mapping", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Graphical user interfaces", "Testing", "Mobile applications", "Data mining", "Analytical models", "Semantics", "Manuals"], "abstract": "GUI-based testing has been primarily used to examine the functionality and usability of mobile apps. Despite the numerous GUI-based test input generation techniques proposed in the literature, these techniques are still limited by (1) lack of context-aware text inputs; (2) failing to generate expressive tests; and (3) absence of test oracles. To address these limitations, we propose CraftDroid, a framework that leverages information retrieval, along with static and dynamic analysis techniques, to extract the human knowledge from an existing test suite for one app and transfer the test cases and oracles to be used for testing other apps with the similar functionalities. Evaluation of CraftDroid on real-world commercial Android apps corroborates its effectiveness by achieving 73% precision and 90% recall on average for transferring both the GUI events and oracles. In addition, 75% of the attempted transfers successfully generated valid and feature-based tests for popular features among apps in the same category.", "author": [{"name": "Jun-Wei Lin", "affiliation": "School of Information and Computer Sciences, University of California, Irvine, USA"}, {"name": "Reyhaneh Jabbarvand", "affiliation": "School of Information and Computer Sciences, University of California, Irvine, USA"}, {"name": "Sam Malek", "affiliation": "School of Information and Computer Sciences, University of California, Irvine, USA"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"Mobiguitar: Automated model-based testing of mobile apps\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana", " B. D. Ta ", " A. M. Memon"]}, {"title": " \"Automated concolic testing of smartphone apps\"", "authors": ["S. An", "", " M. Naik", " M. J. Harrold ", " H. Yang"]}, {"title": " \"Guided gui testing of android apps with minimal restart and approximate learning\"", "authors": ["W. Choi", " G. Necula ", " K. Sen"]}, {"title": " \"Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps\"", "authors": ["S. Hao", " B. Liu", " S. Nath", " W. G. Halfond ", " R. Govindan"]}, {"title": " \"Qbe: Qlearning-based exploration of android applications\"", "authors": ["Y. Koroglu", " A. Sen", " O. Muslu", " Y. Mete", " C. Ulker", " T. Tanriverdi", " ."]}, {"title": " \"Automated testing with targeted event sequence generation\"", "authors": ["C. S. Jensen", " M. R. Prasad ", " A. M\u00f8ller"]}, {"title": " \"Mining android app usages for generating actionable gui-based execution scenarios\"", "authors": ["M. Linares-V\u00e1squez", " M. White", " C. Bernal-Cardenas", " K. Moran ", " D. Poshyvanyk"]}, {"title": " \"Dynodroid: An input generation system for android apps\"", "authors": ["A. Machiry", " R. Tahiliani ", " M. Naik"]}, {"title": " \"Evodroid: Segmented evolutionary testing of android apps\"", "authors": ["R. Mahmood", " N. Mirzaei ", " S. Malek"]}, {"title": " \"Sapienz: Multi-objective automated testing for android applications\"", "authors": ["K. Mao", " M. Harman ", " Y. Jia"]}, {"title": " \"Sig-droid: Automated system input generation for android applications\"", "authors": ["N. Mirzaei", " H. Bagheri", " R. Mahmood ", " S. Malek"]}, {"title": " \"A grey-box approach for automated gui-model generation of mobile applications\" in Fundamental Approaches to Software Engineering", "authors": ["W. Yang", " M. R. Prasad ", " T. Xie"]}, {"title": " \"Automated generation of oracles for testing user-interaction features of mobile apps\"", "authors": ["R. N. Zaeem", " M. R. Prasad ", " S. Khurshid"]}, {"title": " \"Analysis and testing of notifications in android wear applications\"", "authors": ["H. Zhang ", " A. Rountev"]}, {"title": " \"Guided stochastic model-based gui testing of android apps\"", "authors": ["T. Su", " G. Meng", " Y. Chen", " K. Wu", " W. Yang", " Y. Yao", " ."]}, {"title": " \"Automatic text input generation for mobile testing\"", "authors": ["P. Liu", " X. Zhang", " M. Pistoia", " Y. Zheng", " M. Marques ", " L. Zeng"]}, {"title": " \"Monkey see monkey do: Effective generation of gui tests with inferred macro events\"", "authors": ["M. Ermuth ", " M. Pradel"]}, {"title": " \"Real challenges in mobile app development\"", "authors": ["M. E. Joorabchi", " A. Mesbah ", " P. Kruchten"]}, {"title": " \"Understanding the test automation culture of app developers\"", "authors": ["P. S. Kochhar", " F. Thung", " N. Nagappan", " T. Zimmermann ", " D. Lo"]}, {"title": " \"How do developers test android applications?\"", "authors": ["M. Linares-Vsquez", " C.", " K. Moran ", " D. Poshyvanyk"]}, {"title": " \"Interpolated n-grams for model based testing\"", "authors": ["P. Tonella", " R. Tiella ", " C. D. Nguyen"]}, {"title": " \"\u03bcdroid: an energy-aware mutation testing framework for android\"", "authors": ["R. Jabbarv", " "]}, {"title": " \"Test migration for efficient large-scale assessment of mobile app coding assignments\"", "authors": ["F. Behrang ", " A. Orso"]}, {"title": " \"Transferring tests across web applications\" in Web Engineering", "authors": ["A. Rau", " J. Hotzkow ", " A. Zeller"]}, {"title": " \"Automated test migration for mobile apps\"", "authors": ["F. Behrang ", " A. Orso"]}, {"title": " \"Augusto: Exploiting popular` functionalities for the generation of semantic gui tests with oracles\"", "authors": ["L. Mariani", " M. Pezze ", " D. Zuddas"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\" in Advances in Neural Information Processing Systems 26", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"Soot - a java bytecode optimization framework\"", "authors": ["R. Vall\u00e9e-Rai", " P. Co", " E. Gagnon", " L. Hendren", " P. Lam ", " V. Sundaresan"]}, {"title": " \"Automation of android applications functional testing using machine learning activities classification\"", "authors": ["A. Rosenfeld", " O. Kardashov ", " O. Zang"]}, {"title": " \"Appflow: Using machine learning to synthesize robust reusable ui tests\"", "authors": ["G. Hu", " L. Zhu ", " J. Yang"]}, {"title": " \"Automated test input generation for android: Are we there yet? (e)\"", "authors": ["S. R. Choudhary", " A. Gorla ", " A. Orso"]}, {"title": " \"Reducing combinatorics in gui testing of android applications\"", "authors": ["N. Mirzaei", " J. Garcia", " H. Bagheri", " A. Sadeghi ", " S. Malek"]}, {"title": " \"A pattern-based approach for gui modeling and testing\"", "authors": ["R. M. Moreira", " A. C. Paiva ", " A. Memon"]}, {"title": " \"Testmig: Migrating gui test cases from ios to android\"", "authors": ["X. Qin", " H. Zhong ", " X. Wang"]}, {"title": " \"Test migration between mobile apps with similar functionality\"", "authors": ["F. Behrang ", " A. Orso"]}]},
{"doi": "10.1109/ASE.2002.1114991", "title": "Generative design patterns", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Programming profession", "Software design", "Impedance", "Web pages", "Documentation", "Collaboration", "Process design", "Software engineering", "Humans", "Natural languages"], "abstract": "A design pattern encapsulates the knowledge of object-oriented designers into re-usable artifacts. A design pattern is a descriptive device that fosters software design re-use. There are several reasons why design patterns are not used as generative constructs that support code re-use. The first reason is that design patterns describe a set of solutions to a family of related design problems and it is difficult to generate a single body of code that adequately solves each problem in the family. A second reason is that it is difficult to construct and edit generative design patterns. A third major impediment is the lack of a tool-independent representation. A common representation could lead to a shared repository to make more patterns available. We describe a new approach to generative design patterns that solves these three difficult problems. We illustrate this approach using tools called CO/sub 2/P/sub 2/S and Meta-CO/sub 2/P/sub 2/S but our approach is tool-independent.", "author": [{"name": "S. MacDonald", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "D. Szafron", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "J. Schaeffer", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "J. Anvik", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "S. Bromling", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "K. Tan", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}], "time": "2002", "citationCount": "8", "references": [{"title": " \"Generating parallel programs from the wavefront design pattern\"", "authors": ["J. Anvik"]}, {"title": " \"\n            Asserting the utility of CO\n            2\n            P\n            3\n            S using the Cowichan problem set\n          \"", "authors": ["J. Anvik"]}, {"title": " \"Patterns generate architecture\"", "authors": ["K. Beck ", " R. Johnson"]}, {"title": " \"Design patterns as language constructs\"", "authors": ["J. Bosch"]}, {"title": " \"Meta-programming with parallel design patterns\"", "authors": ["S. Bromling"]}, {"title": " \"Automatic code generation from design patterns. IBM Systems Journal\"", "authors": ["F. Budinsky", " M. Finnie", " J. Vlissides ", " P. Yu"]}, {"title": " \"Towards a mathematical foundation for design patterns\"", "authors": ["A. Eden", " Y. Hirshfeld ", " A. Yehudai"]}, {"title": " \"Tool support for object-oriented patterns\"", "authors": ["G. Florijn", " M. Meijers ", " P. van Winsen"]}, {"title": " \"Designing reusable classes\"", "authors": ["R. Johnson ", " B. Foote"]}, {"title": " \"An overview of Aspect J\"", "authors": ["G. Kiczales", " E. Hilsdale", " J. Hugunin", " M. Kersten", " J. Palm ", " W. Griswold"]}, {"title": " \"From Patterns to Frameworks to Parallel Programs\"", "authors": ["S. MacDonald"]}, {"title": " \"Generating parallel program frameworks from parallel design patterns\" in Euro-Par", "authors": ["S. MacDonald", " D. Szafron", " J. Schaeffer ", " S. Bromling"]}, {"title": " \"A pattern language for parallel application programs\"", "authors": ["M. Massingill", " T. Mattson ", " B. S"]}, {"title": " \"Using the Cowichan problems to assess the usability of Orca\"", "authors": ["G. Wilson"]}]},
{"doi": "10.1109/ASE.2019.00016", "title": "Test Migration Between Mobile Apps with Similar Functionality", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Graphical user interfaces", "Mobile applications", "Testing", "Instruments", "Banking", "Google"], "abstract": "The use of mobile apps is increasingly widespread, and much effort is put into testing these apps to make sure they behave as intended. To reduce this effort, and thus the overall cost of mobile app testing, we propose APPTESTMIGRATOR, a technique for migrating test cases between apps in the same category (e.g., banking apps). The intuition behind APPTESTMIGRATOR is that many apps share similarities in their functionality, and these similarities often result in conceptually similar user interfaces (through which that functionality is accessed). APPTESTMIGRATOR leverages these commonalities between user interfaces to migrate existing tests written for an app to another similar app. Specifically, given (1) a test case for an app (source app) and (2) a second app (target app), APPTESTMIGRATOR attempts to automatically transform the sequence of events and oracles in the test for the source app to events and oracles for the target app. We implemented APPTESTMIGRATOR for Android mobile apps and evaluated it on a set of randomly selected apps from the Google Play Store in four different categories. Our initial results are promising, support our intuition that test migration is possible, and motivate further research in this direction.", "author": [{"name": "Farnaz Behrang", "affiliation": "Georgia Institute of Technology, Atlanta, USA"}, {"name": "Alessandro Orso", "affiliation": "Georgia Institute of Technology, Atlanta, USA"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"Automated Test Migration for Mobile Apps\"", "authors": ["F. Behrang ", " A. Orso"]}, {"title": " \"Test Migration for Efficient Large-scale Assessment of Mobile App Coding Assignments\"", "authors": ["F. Behrang ", " A. Orso"]}, {"title": " \"WATER: Web Application TEst Repair\"", "authors": ["S. R. Choudhary", " D. Zhao", " H. Versee ", " A. Orso"]}, {"title": " \"Automated GUI Refactoring and Test Script Repair\"", "authors": ["B. Daniel", " Q. Luo", " M. Mirzaaghaei", " D. Dig", " D. Marinov ", " M. Pezze"]}, {"title": " \"Monkey See Monkey Do: Effective Generation of GUI Tests with Inferred Macro Events\"", "authors": ["M. Ermuth ", " M. Pradel"]}, {"title": " \"Barista: A Technique for Recording Encoding and Running Platform Independent Android Tests\"", "authors": ["M. Fazzini", " E. N. D. A. Freitas", " S. R. Choudhary ", " A. Orso"]}, {"title": " \"Inferring Types of  to GUI Objects in Test Scripts\"", "authors": ["C. Fu", " M. Grechanik ", " Q. Xie"]}, {"title": " \"Maintaining and Evolving GUIdirected Test Scripts\"", "authors": ["M. Grechanik", " Q. Xie ", " C. Fu"]}, {"title": " \"Appflow: Using Machine Learning to Synthesize Robust Reusable UI Tests\"", "authors": ["G. Hu", " L. Zhu ", " J. Yang"]}, {"title": " \"Repairing GUI Test Suites Using a Genetic Algorithm\"", "authors": ["S. Huang", " M. B. Cohen ", " A. M. Memon"]}, {"title": " \"View-based Maintenance of Graphical User Interfaces\"", "authors": ["P. Li ", " E. Wohlstadter"]}, {"title": " \"ATOM: Automatic Maintenance of GUI Test Scripts for Evolving Mobile Applications\"", "authors": ["X. Li", " N. Chang", " Y. Wang", " H. Huang", " Y. Pei", " L. Wang", " ."]}, {"title": " \"Test Transfer Across Mobile Apps Through Semantic Mapping\"", "authors": ["J.-W. Lin", " R. Jabbarv", " "]}, {"title": " \"A Strategy and an Eclipse Based Environment for the Migration of Legacy Systems to Multi-tier Web-based Architectures\"", "authors": ["A. D. Lucia", " R. Francese", " G. Scanniello", " G. Tortora ", " N. Vitiello"]}, {"title": " \"The Stanford CoreNLP natural language processing toolkit\"", "authors": ["C. D. Manning", " M. Surdeanu", " J. Bauer", " J. Finkel", " S. J. Bethard ", " D. McClosky"]}, {"title": " \"Crowd Intelligence Enhances Automated Mobile Testing\"", "authors": ["K. Mao", " M. Harman ", " Y. Jia"]}, {"title": " \"Augusto: Exploiting Popular Functionalities for the Generation of Semantic GUI Tests with Oracles\"", "authors": ["L. Mariani", " M. Pezze ", " D. Zuddas"]}, {"title": " \"Automatically Repairing Event Sequence-based GUI Test Suites for Regression Testing\"", "authors": ["A. M. Memon"]}, {"title": " \"Regression Testing of GUIs\"", "authors": ["A. M. Memon ", " M. L. Soffa"]}, {"title": " \"Efficient Estimation of Word Representations in Vector Space\"", "authors": ["T. Mikolov", " K. Chen", " G. Corrado ", " J. Dean"]}, {"title": " \"Wordnet: A Lexical Database for English\"", "authors": ["G. A. Miller"]}, {"title": " \"TestMig: Migrating GUI Test Cases from iOS to Android\"", "authors": ["X. Qin", " H. Zhong ", " X. Wang"]}, {"title": " \"Efficient GUI Test Generation by Learning from Tests of Other Apps\"", "authors": ["A. Rau", " J. Hotzkow ", " A. Zeller"]}, {"title": " \"Transferring Tests Across Web Applications\"", "authors": ["A. Rau", " J. Hotzkow ", " A. Zeller"]}, {"title": " \"Software Framework for Topic Modelling with Large Corpora\"", "authors": ["R. Rehurek ", " P. Sojka"]}, {"title": " \"Learning String-Edit Distance\"", "authors": ["E. S. Ristad ", " P. N. Yianilos"]}, {"title": " \"Static Analysis of Programs with Graphical User Interface\"", "authors": ["S. Staiger"]}, {"title": " \"Static Window Transition Graphs for Android\"", "authors": ["S. Yang", " H. Zhang", " H. Wu", " Y. Wang", " D. Yan ", " A. Rountev"]}, {"title": " \"Automatically Repairing Broken\u00a8 Workflows for Evolving GUI Applications\"", "authors": ["S. Zhang", " H. Lu ", " M. D. Ernst"]}]},
{"doi": "10.1109/ASE.2002.1114992", "title": "Deviation analysis through model checking", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Control systems", "Displays", "Electric variables control", "NASA", "Chemical analysis", "Chemical industry", "Computer science", "Software measurement", "Computerized monitoring", "Sensor systems"], "abstract": "Inaccuracies, or deviations, in the measurements of monitored variables in a control system are facts of life that control software must accommodate $the software is expected to continue functioning correctly in the face of an expected range of deviations in the inputs. Deviation analysis can be used to determine how a software specification will behave in the face of such deviations in data from the environment. The idea is to describe the correct values of an environmental quantity; along with a range of potential deviations, and then determine the effects on the outputs of the system. The analyst can then check whether the behavior of the software is acceptable with respect to these deviations. In this report we wish to propose a new approach to deviation analysis using model checking techniques. This approach allows for more precise analysis than previous techniques, and refocuses deviation analysis from an exploratory analysis to a verification task, allowing us to investigate a different range of questions regarding a system's response to deviations.", "author": [{"name": "M.P.E. Heimdahl", "affiliation": "Department of Computer Science and Engineering, University of Minnesota, Minneapolis, MN, USA"}, {"name": "Y. Choi", "affiliation": "Department of Computer Science and Engineering, University of Minnesota, Minneapolis, MN, USA"}, {"name": "M. Whalen", "affiliation": "Department of Computer Science and Engineering, University of Minnesota, Minneapolis, MN, USA"}], "time": "2002", "citationCount": "4", "references": [{"title": " \"Automatic abstraction for model checking software systems with interrelated numeric constraints\"", "authors": ["Y. Choi", " S. Rayadurgam ", " M. Heimdahl"]}, {"title": " \"Software requirements analysis for real-time process-control systems\"", "authors": ["M. S. Jaffe", " N. G. Leveson", " M. P. Heimdahl ", " B. E. Melhart"]}, {"title": " \"A development of hazard analysis to aid software design\"", "authors": ["J. McDermid ", " D. J. Pumfrey"]}, {"title": " \"Extending the four-variable model to bridge the system-software gap\"", "authors": ["S. P. Miller ", " A. C. Tribble"]}, {"title": " \"Software deviation analysis\"", "authors": ["J. Reese ", " N. Leveson"]}, {"title": " \"Software deviation analysis: A \u201csafeware\u201d technique\"", "authors": ["J. Reese ", " N. Leveson"]}, {"title": " \"Specification based prototyping for embedded systems\"", "authors": ["J. M. Thompson", " M. P. Heimdahl ", " S. P. Miller"]}]},
{"doi": "10.1109/ASE.2019.00017", "title": "DaPanda: Detecting Aggressive Push Notifications in Android Apps", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Taxonomy", "Mobile applications", "Advertising", "Google", "Ecosystems", "Libraries", "Australia"], "abstract": "Mobile push notifications have been widely used in mobile platforms to deliver all sorts of information to app users. Although it offers great convenience for both app developers and mobile users, this feature was frequently reported to serve malicious and aggressive purposes, such as delivering annoying push notification advertisement. However, to the best of our knowledge, this problem has not been studied by our research community so far. To fill the void, this paper presents the first study to detect aggressive push notifications and further characterize them in the global mobile app ecosystem on a large scale. To this end, we first provide a taxonomy of mobile push notifications and identify the aggressive ones using a crowdsourcing-based method. Then we propose sc DaPanda, a novel hybrid approach, aiming at automatically detecting aggressive push notifications in Android apps. sc DaPanda leverages a guided testing approach to systematically trigger and record push notifications. By instrumenting the Android framework, sc DaPanda further collects all notification-relevant runtime information to flag the aggressive ones. Our experimental results show that sc DaPanda is capable of detecting different types of aggressive push notifications effectively in an automated way. By applying sc DaPanda to 20,000 Android apps from different app markets, it yields over 1,000 aggressive notifications, which have been further confirmed as true positives. Our in-depth analysis further reveals that aggressive notifications are prevalent across different markets and could be manifested in all the phases in the lifecycle of push notifications. It is hence urgent for our community to take actions to detect and mitigate apps involving aggressive push notifications.", "author": [{"name": "Tianming Liu", "affiliation": "Beijing University of Posts and Telecommunications, Beijing, China"}, {"name": "Haoyu Wang", "affiliation": "Beijing University of Posts and Telecommunications, Beijing, China"}, {"name": "Li Li", "affiliation": "Monash University, Australia"}, {"name": "Guangdong Bai", "affiliation": "The University of Queensland, Australia"}, {"name": "Yao Guo", "affiliation": "Key Laboratory of High-Confidence Software Technologies (MOE), Peking University, Beijing, China"}, {"name": "Guoai Xu", "affiliation": "Beijing University of Posts and Telecommunications, Beijing, China"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Detecting misuse of google cloud messaging in android badware\"", "authors": ["Mansour Ahmadi", " Battista Biggio", " Steven Arzt", " Davide Ariu ", " Giorgio Giacinto"]}, {"title": " \"A study of grayware on google play\"", "authors": ["Benjamin Andow", " Adwait Nadkarni", " Blake Bassett", " William Enck ", " Tao Xie"]}, {"title": " \"Mining apps for abnormal usage of sensitive data\"", "authors": ["Vitalii Avdiienko", " Konstantin Kuznetsov", " Aless", "ra Gorla", " Andreas Zeller", " Steven Arzt", " Siegfried Rasthofer", " ."]}, {"title": " \"Reliable third-party library detection in android and its security applications\"", "authors": ["Michael Backes", " Sven Bugiel ", " Erik Derr"]}, {"title": " \"Towards model checking android applications\"", "authors": ["Guangdong Bai", " Quanqi Ye", " Yongzheng Wu", " Heila Botha", " Jun Sun", " Yang Liu", " ."]}, {"title": " \"Survey response rate levels and trends in organizational research\"", "authors": ["Yehuda Baruch ", " Brooks C Holtom"]}, {"title": " \"Longitudinal analysis of android ad library permissions\"", "authors": ["Theodore Book", " Adam Pridgen ", " Dan S Wallach"]}, {"title": " \"Perplexed messengers from the cloud: Automated security analysis of push-messaging integrations\"", "authors": ["Yangyi Chen", " Tongxin Li", " XiaoFeng Wang", " Kai Chen ", " Xinhui Han"]}, {"title": " \"Madfraud: Investigating ad fraud in android applications\"", "authors": ["Jonathan Crussell", " Ryan Stevens ", " Hao Chen"]}, {"title": " \"An approach for modeling and analyzing mobile push notification services\"", "authors": ["Junhua Ding", " Wei Song ", " Dongmei Zhang"]}, {"title": " \"Frauddroid: Automated ad fraud detection for android apps\"", "authors": ["Feng Dong", " Haoyu Wang", " Li Li", " Yao Guo", " Tegawend\u00e9 F Bissy", "\u00e9", " Tianming Liu", " ."]}, {"title": " \"How do mobile apps violate the behavioral policy of advertisement libraries?\"", "authors": ["Feng Dong", " Haoyu Wang", " Li Li", " Yao Guo", " Xu Guoai ", " Shaodong Zhang"]}, {"title": " \"Apposcopy: Semantics-based detection of android malware through static analysis\"", "authors": ["Yu Feng", " Saswat An", "", " Isil Dillig ", " Alex Aiken"]}, {"title": " \"Checking app behavior against app descriptions\"", "authors": ["Aless", "ra Gorla", " Ilaria Tavecchia", " Florian Gross ", " Andreas Zeller"]}, {"title": " \"Unsafe exposure analysis of mobile in-app advertisements\"", "authors": ["Michael C Grace", " Wu Zhou", " Xuxian Jiang ", " Ahmad-Reza Sadeghi"]}, {"title": " \"Appnet: understanding app recommendation in google play\"", "authors": ["Qian Guo", " Haoyu Wang", " Chenwei Zhang", " Yao Guo ", " Guoai Xu"]}, {"title": " \"Detecting and classifying android puas by similarity of dns queries\"", "authors": ["Mitsuhiro Hatada ", " Tatsuya Mori"]}, {"title": " \"Want to earn a few extra bucks? a first look at money-making apps\"", "authors": ["Yangyu Hu", " Haoyu Wang", " Li Li", " Yao Guo", " Xu Guoai ", " Ren He"]}, {"title": " \"Dating with scambots: Understanding the ecosystem of fraudulent dating applications\"", "authors": ["Yangyu Hu", " Haoyu Wang", " Yajin Zhou", " Yao Guo", " Li Li", " Bingxuan Luo", " ."]}, {"title": " \"Asdroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction\"", "authors": ["Jianjun Huang", " Xiangyu Zhang", " Lin Tan", " Peng Wang ", " Bin Liang"]}, {"title": " \"Automated testing of android apps: A systematic literature review\"", "authors": ["Pingfan Kong", " Li Li", " Jun Gao", " Kui Liu", " Tegawend\u00e9 F Bissy", "\u00e9 "]}, {"title": " \"Punobot: Mobile botnet using push notification service in android\"", "authors": ["Hayoung Lee", " Taeho Kang", " Sangho Lee", " Jong Kim ", " Yoonho Kim"]}, {"title": " \"Iccta: Detecting inter-component privacy leaks in android apps\"", "authors": ["Li Li", " Alex", "re Bartel", " Tegawend\u00e9 F Bissy", "\u00e9", " Jacques Klein", " Yves Le Traon", " Steven Arzt", " ."]}, {"title": " \"Static analysis of android apps: A systematic literature review\"", "authors": ["Li Li", " Tegawend\u00e9 F Bissy", "\u00e9", " Mike Papadakis", " Siegfried Rasthofer", " Alex", "re Bartel", " Damien Octeau", " ."]}, {"title": " \"Understanding android app piggybacking: A systematic study of malicious code grafting\"", "authors": ["Li Li", " Daoyuan Li", " Tegawend\u00e9 F Bissy", "\u00e9", " Jacques Klein", " Yves Le Traon", " Lo David", " ."]}, {"title": " \"Revisiting the impact of common libraries for android-related investigations\"", "authors": ["Li Li", " Timoth\u00e9e Riom", " Tegawend\u00e9 F Bissy", "\u00e9", " Haoyu Wang", " Jacques Klein ", " Yves Le Traon"]}, {"title": " \"Libd: scalable and precise third-party library detection in android markets\"", "authors": ["Menghao Li", " Wei Wang", " Pei Wang", " Shuai Wang", " Wu Dinghao", " Jian Liu", " ."]}, {"title": " \"Mayhem in the push clouds: Understanding and mitigating security hazards in mobile push-messaging services\"", "authors": ["Tongxin Li", " Xiaoyong Zhou", " Luyi Xing", " Yeonjoon Lee", " Muhammad Naveed", " XiaoFeng Wang", " ."]}, {"title": " \"Droidbot: A lightweight ui-guided test input generator for android\"", "authors": ["Yuanchun Li", " Ziyue Yang", " Yao Guo ", " Xiangqun Chen"]}, {"title": " \"Automated extraction of personal knowledge from smartphone push notifications\"", "authors": ["Yuanchun Li", " Ziyue Yang", " Yao Guo", " Xiangqun Chen", " Yuvraj Agarwal ", " Jason I Hong"]}, {"title": " \"A technique for the measurement of attitudes\"", "authors": ["Rensis Likert"]}, {"title": " \"Efficient privilege de-escalation for ad libraries in mobile apps\"", "authors": ["Bin Liu", " Bin Liu", " Hongxia Jin ", " Ramesh Govindan"]}, {"title": " \"{DECAF}: Detecting and characterizing ad fraud in mobile apps\"", "authors": ["Bin Liu", " Suman Nath", " Ramesh Govindan ", " Jie Liu"]}, {"title": " \"Libradar: fast and accurate detection of third-party libraries in android apps\"", "authors": ["Ziang Ma", " Haoyu Wang", " Yao Guo ", " Xiangqun Chen"]}, {"title": " \"Intelligent push notification for converged mobile computing and internet of things\"", "authors": ["Zhaotai Pan", " Xiaoxing Liang", " Yu Chen Zhou", " Ge Yi ", " Guo Tao Zhao"]}, {"title": " \"An in-situ study of mobile phone notifications\"", "authors": ["Martin Pielot", " Karen Church ", " Rodrigo De Oliveira"]}, {"title": " \"Dismissed!: a detailed exploration of how mobile phone users handle push notifications\"", "authors": ["Martin Pielot", " Amalia Vradi ", " Souneil Park"]}, {"title": " \"Are these ads safe: Detecting hidden attacks through the mobile app-web interfaces\"", "authors": ["Vaibhav Rastogi", " Rui Shao", " Yan Chen", " Xiang Pan", " Shihong Zou ", " Ryan Riley"]}, {"title": " \"What mobile ads know about mobile users\"", "authors": ["Sooel Son", " Daehyeok Kim ", " Vitaly Shmatikov"]}, {"title": " \"Investigating user privacy in android ad libraries\"", "authors": ["Ryan Stevens", " Clint Gibler", " Jon Crussell", " Jeremy Erickson ", " Hao Chen"]}, {"title": " \"A large-scale empirical study on industrial fake apps\"", "authors": ["Chongbin Tang", " Sen Chen", " Lingling Fan", " Lihua Xu", " Yang Liu", " Zhushou Tang", " ."]}, {"title": " \"Evading android runtime analysis via sandbox detection\"", "authors": ["Timothy Vidas ", " Nicolas Christin"]}, {"title": " \"Understanding third-party libraries in mobile app analysis\"", "authors": ["Haoyu Wang ", " Yao Guo"]}, {"title": " \"Wukong: A scalable and accurate two-phase approach to android app clone detection\"", "authors": ["Haoyu Wang", " Yao Guo", " Ziang Ma ", " Xiangqun Chen"]}, {"title": " \"Automated detection and classification of third-party libraries in large scale android apps\"", "authors": ["Haoyu Wang", " Yao Guo", " Ziang Ma ", " Xiangqun Chen"]}, {"title": " \"Understanding the evolution of mobile app ecosystems: A longitudinal measurement study of google play\"", "authors": ["Haoyu Wang", " Hao Li ", " Yao Guo"]}, {"title": " \"Beyond google play: A large-scale comparative study of chinese android app markets\"", "authors": ["Haoyu Wang", " Zhe Liu", " Jingyue Liang", " Narseo Vallina-Rodriguez", " Yao Guo", " Li Li", " ."]}, {"title": " \"Rmvdroid: towards a reliable android malware dataset with app metadata\"", "authors": ["Haoyu Wang", " Junjun Si", " Hao Li ", " Yao Guo"]}, {"title": " \"Push notification mechanisms for pervasive smartphone applications\"", "authors": ["Ian Warren", " Andrew Meads", " Satish Srirama", " Thiranjith Weerasinghe ", " Carlos Paniagua"]}, {"title": " \"Abusing notification services on smartphones for phishing and spamming\"", "authors": ["Zhi Xu ", " Sencun Zhu"]}, {"title": " \"Enmobile: Entity-based characterization and analysis of mobile malware\"", "authors": ["Wei Yang", " Mukul Prasad ", " Tao Xie"]}, {"title": " \"Discovery of ranking fraud for mobile apps\"", "authors": ["Hengshu Zhu", " Hui Xiong", " Yong Ge ", " Enhong Chen"]}]},
{"doi": "10.1109/ASE.2002.1114993", "title": "Automatic validation of deployed J2EE components using aspects", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automatic testing", "Application software", "Java", "Middleware", "Databases", "Computer architecture", "User interfaces", "Collaborative software", "Collaborative work", "Search engines"], "abstract": "Validating that software components meet their requirements under a particular deployment scenario is very challenging. We describe a new approach that uses component aspects, describing functional and nonfunctional cross-cutting concerns impacting components, to perform automated deployed component validation. Aspect information associated with J2EE component implementations is inspected after component deployment by validation agents. These agents run automated tests to determine if the deployed components meet their aspect-described requirements. We describe the way component aspects are encoded, the automated agent-based testing process we employ, and our validation agent architecture and implementation.", "author": [{"name": "J. Grundy", "affiliation": "Department of Computer Science, University of Auckland, Auckland, New Zealand"}, {"name": "Guoliang Ding", "affiliation": "Department of Computer Science, University of Auckland, Auckland, New Zealand"}], "time": "2002", "citationCount": "5", "references": [{"title": " \"Testing-for-trust: the genetic selection model applied to component qualification\"", "authors": ["B. Baudry", " H. Vu Le ", " Y. Le Traon"]}, {"title": " \"Making components contract aware\"", "authors": ["A. Beugnard", " J.-M. Jezequel", " N. Plouzeau ", " D. Watkins"]}, {"title": " \"Test oracle automation for V&V of an autonomous Spacecraft's planner\"", "authors": ["M.S. Feather ", " B. Smith"]}, {"title": " \"Multi-perspective specification design and implementation of software components using aspects\"", "authors": ["J. Grundy ", " C."]}, {"title": " \"Generation of Distributed System Test-beds from High-level Software Architecture Descriptions\"", "authors": ["J.C. Grundy", " Y. Cai ", " A. Liu"]}, {"title": " \"Developing Software Components with the UML Enterprise Java Beans and Aspects\"", "authors": ["J.C. Grundy ", " R. Patel"]}, {"title": " \"Evaluating Enterprise Java Bean Technology\"", "authors": ["I. Gorton ", " A. Liu"]}, {"title": " \"An approach for understanding and testing third party software components\"", "authors": ["J.M. Haddox ", " G.M. Kapfhammer"]}, {"title": " \"Security characterisation and integrity assurance for component-based software\"", "authors": ["J. Han ", " Y. Zheng"]}, {"title": " \"Supporting the Construction and Evolution of Component Repositories\"", "authors": ["S. Henninger"]}, {"title": " \"Aspect-Oriented Design with the UML\"", "authors": ["W.M. Ho", " F. Pennaneach", " J.M. Jezequel ", " N. Plouzeau"]}, {"title": " \"Tools and techniques for Java API testing\"", "authors": ["D. Hoffman ", " P. Strooper"]}, {"title": " \"Boundary values and automated component testing\" in Software Testing Verification & Reliability", "authors": ["D. Hoffman", " P. Strooper ", " L. White"]}, {"title": " \"A performance prototyping approach to designing concurrent software architectures\"", "authors": ["L. Hu ", " J. Gorton"]}, {"title": " \"Java 2 distributed object middleware performance analysis and optimization\" in SIGPLAN Notices", "authors": ["M.R. Jurie", " I. Rozman ", " S. Nash"]}, {"title": " \"Specifying Runtime Environments and Functionalities of Downloadable Components under the Sandbox Model\"", "authors": ["H. Kaiya ", " K. Kaijiri"]}, {"title": " \"Composing security-aware software\"", "authors": ["K.M. Khan ", " J. Han"]}, {"title": " \"Generating test cases for XML-based Web component interactions using mutation analysis\"", "authors": ["S.C. Lee ", " J. Offutt"]}, {"title": " \"Framework for third party testing of component software\"", "authors": ["Y-S. Ma", " S-U Oh", " D-H. Bae ", " K-R Kwon"]}, {"title": " \"Tool to evaluate performance in distributed heterogeneous processing\"", "authors": ["J.A. McCann ", " K.J. Manning"]}, {"title": " \"Parallel Architecture for Component Testing\" in Journal of Object-Oriented Programming", "authors": ["J.D. McGregor"]}, {"title": " \"Adaptive Plug-and-Play Components for Evolutionary Software Development\"", "authors": ["M. Mezini ", " K. Lieberherr"]}, {"title": " \"Specifications of Knowledge Components for Reuse\"", "authors": ["E. Motta", " D. Fensel", " M. Gaspari ", " R. Benjamins"]}, {"title": " \"Using component metacontent to support the regression testing of component-based software\"", "authors": ["A. Orso", " M.J. Harrold", " D. Rosenblum", " G. Rothermel", " M.L. Soffa ", " H. Do"]}, {"title": " \"Retrieving software components by execution\"", "authors": ["Y. Pai ", " P. Bai"]}, {"title": " \"JBCDL: an object-oriented component description language\"", "authors": ["W. Qiong", " C. Jichuan", " M. Hong ", " Y. Fuqing"]}, {"title": " \"A Simple Architecture Description Model\"", "authors": ["A. Rakotonirainy ", " A. Bond"]}, {"title": " \"N Degrees of Separation: Multi-Dimensional Separation of Concerns\"", "authors": ["P. Tarr", " H. Ossher", " W. Harrison", " S. Sutton ", " M."]}]},
{"doi": "10.1109/ASE.2019.00018", "title": "Automatic Self-Validation for Code Coverage Profilers", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Testing", "Software engineering", "Program processors", "Optimization", "Electromagnetic interference", "Switches"], "abstract": "Code coverage as the primitive dynamic program behavior information, is widely adopted to facilitate a rich spectrum of software engineering tasks, such as testing, fuzzing, debugging, fault detection, reverse engineering, and program understanding. Thanks to the widespread applications, it is crucial to ensure the reliability of the code coverage profilers. Unfortunately, due to the lack of research attention and the existence of testing oracle problem, coverage profilers are far away from being tested sufficiently. Bugs are still regularly seen in the widely deployed profilers, like gcov and llvm-cov, along with gcc and llvm, respectively. This paper proposes Cod, an automated self-validator for effectively uncovering bugs in the coverage profilers. Starting from a test program (either from a compiler's test suite or generated randomly), Cod detects profiler bugs with zero false positive using a metamorphic relation in which the coverage statistics of that program and a mutated variant are bridged. We evaluated Cod over two of the most well-known code coverage profilers, namely gcov and llvm-cov. Within a four-month testing period, a total of 196 potential bugs (123 for gcov, 73 for llvm-cov) are found, among which 23 are confirmed by the developers.", "author": [{"name": "Yibiao Yang", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Yanyan Jiang", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Zhiqiang Zuo", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Yang Wang", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Hao Sun", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Hongmin Lu", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Yuming Zhou", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Baowen Xu", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Systematic mistake analysis of digital computer programs\"", "authors": ["J. C. Miller ", " C. J. Maloney"]}, {"title": " \"Compiler validation via equivalence modulo inputs\"", "authors": ["V. Le", " M. Afshari ", " Z. Su"]}, {"title": " \"Coverage-based grey-box fuzzing as markov chain\"", "authors": ["M. B\u00f6hme", " V.", " T. Pham ", " A. Roychoudhury"]}, {"title": " \"Empirical evaluation of the tarantula automatic fault-localization technique\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"Efficient predicated bug signature mining via hierarchical instrumentation\"", "authors": ["Z. Zuo", " S.-C. Khoo ", " C. Sun"]}, {"title": " \"Low-overhead and fully automated statistical debugging with abstraction refinement\"", "authors": ["Z. Zuo", " L. Fang", " S.-C. Khoo", " G. Xu ", " S. Lu"]}, {"title": " \"Mining dataflow sensitive specifications\" in Formal Methods and Software Engineering", "authors": ["Z. Zuo ", " S.-C. Khoo"]}, {"title": " \"Falcon: Fault localization in concurrent programs\"", "authors": ["S. Park", " R. W. Vuduc ", " M. J. Harrold"]}, {"title": " \"Hunting for bugs in code coverage tools via randomized differential testing\"", "authors": ["Y. Yang", " Y. Zhou", " H. Sun", " Z. Su", " Z. Zuo", " L. Xu", " ."]}, {"title": " \"On testing non-testable programs\"", "authors": ["E. J. Weyuker"]}, {"title": " \"Predicting dependability by testing\"", "authors": ["D. Hamlet"]}, {"title": " \"Software testing using model programs\"", "authors": ["L. Manolache ", " D. G. Kourie"]}, {"title": " \"Finding and understanding bugs in C compilers\"", "authors": ["X. Yang", " Y. Chen", " E. Eide ", " J. Regehr"]}, {"title": " \"Finding and analyzing compiler warning defects\"", "authors": ["C. Sun", " V. Le ", " Z. Su"]}, {"title": " \"Randomized stress-testing of link-time optimizers\"", "authors": ["V. Le", " C. Sun ", " Z. Su"]}, {"title": " \"An innovative approach for testing bioinformatics programs using metamorphic testing\"", "authors": ["T. Y. Chen", " J. W. Ho", " H. Liu ", " X. Xie"]}, {"title": " \"Early results from metamorphic testing of epidemiological models\"", "authors": ["L. L. Pullum ", " O. Ozmen"]}, {"title": " \"Towards a metamorphic testing methodology for service-oriented software applications\"", "authors": ["W. Chan", " S. C. Cheung ", " K. R. Leung"]}, {"title": " \"A metamorphic testing approach for online testing of service-oriented software applications\"", "authors": ["W. K. Chan", " S. C. Cheung ", " K. R. Leung"]}, {"title": " \"Testing central processing unit scheduling algorithms using metamorphic testing\"", "authors": ["M. Jiang", " T. Y. Chen", " F.-C. Kuo ", " Z. Ding"]}, {"title": " \"Self-metamorphic-testing components\"", "authors": ["S. Beydeda"]}, {"title": " \"Metamorphic model-based testing applied on NASA DAT: An experience report\"", "authors": ["M. Lindvall", " D. Ganesan", " R. \u00c1rdal ", " R. E. Wieg"]}, {"title": " \"Testing and validating machine learning classifiers by metamorphic testing\"", "authors": ["X. Xie", " J. W. Ho", " C. Murphy", " G. Kaiser", " B. Xu ", " T. Y. Chen"]}, {"title": " \"Automated functional testing of online search services\"", "authors": ["Z. Q. Zhou", " S. Zhang", " M. Hagenbuchner", " T. Tse", " F.-C. Kuo ", " T. Y. Chen"]}, {"title": " \"Metamorphic testing for software quality assessment: A study of search engines\"", "authors": ["Z. Q. Zhou", " S. Xiang ", " T. Y. Chen"]}, {"title": " \"Metamorphic testing for cybersecurity\"", "authors": ["T. Y. Chen", " F.-C. Kuo", " W. Ma", " W. Susilo", " D. Towey", " J. Voas", " ."]}, {"title": " \"Metamorphic testing of driverless cars\"", "authors": ["Z. Q. Zhou ", " L. Sun"]}, {"title": " \"Finding deep compiler bugs via guided stochastic program mutation\"", "authors": ["V. Le", " C. Sun ", " Z. Su"]}, {"title": " \"Finding compiler bugs via live code mutation\"", "authors": ["C. Sun", " V. Le ", " Z. Su"]}, {"title": " \"Guidelines for coverage-based comparisons of nonadequate test suites\"", "authors": ["M. Gligoric", " A. Groce", " C. Zhang", " R. Sharma", " M. A. Alipour ", " D. Marinov"]}, {"title": " \"Does automated white-box test generation really help software testers?\"", "authors": ["G. Fraser", " M. Staats", " P. McMinn", " A. Arcuri ", " F. Padberg"]}, {"title": " \"Regression testing minimization selection and prioritization: A survey\"", "authors": ["S. Yoo ", " M. Harman"]}, {"title": " \"Test-suite reduction and prioritization for modified condition/decision coverage\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"Regression mutation testing\"", "authors": ["L. Zhang", " D. Marinov", " L. Zhang ", " S. Khurshid"]}, {"title": " \"A unified test case prioritization approach\"", "authors": ["D. Hao", " L. Zhang", " L. Zhang", " G. Rothermel ", " H. Mei"]}, {"title": " \"Directed test generation for effective fault localization\"", "authors": ["S. Artzi", " J. Dolby", " F. Tip ", " M. Pistoia"]}, {"title": " \"Search algorithms for regression test case prioritization\"", "authors": ["Z. Li", " M. Harman ", " R. M. Hierons"]}, {"title": " \"Prioritizing test cases for regression testing\"", "authors": ["G. Rothermel", " R. J. Untch ", " C. Chu"]}, {"title": " \"A study of effective regression testing in practice\"", "authors": ["W. E. Wong", " J. R. Horgan", " S. London ", " H. A. Bellcore"]}, {"title": " \"A large-scale evaluation of automated unit test generation using evosuite\"", "authors": ["G. Fraser ", " A. Arcuri"]}, {"title": " \"Steering symbolic execution to less traveled paths\"", "authors": ["Y. Li", " Z. Su", " L. Wang ", " X. Li"]}, {"title": " \"Many-core compiler fuzzing\"", "authors": ["C. Lidbury", " A. Lascu", " N. Chong ", " A. F. Donaldson"]}, {"title": " \"A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization\"", "authors": ["X. Xie", " T. Y. Chen", " F.-C. Kuo ", " B. Xu"]}, {"title": " \"Fault localization prioritization: Comparing information-theoretic and coverage-based approaches\"", "authors": ["S. Yoo", " M. Harman ", " D. Clark"]}, {"title": " \"Lightweight fault-localization using multiple coverage types\"", "authors": ["R. Santelices", " J. A. Jones", " Y. Yu ", " M. J. Harrold"]}]},
{"doi": "10.1109/ASE.2002.1114995", "title": "On CASE tool usage at Nokia", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Computer aided software engineering", "Programming", "Data analysis", "Statistical analysis", "Mobile handsets", "Automation", "Software engineering", "Software tools", "Computer industry", "Documentation"], "abstract": "We present the results of a research work targeted to understanding CASE tools usage in Nokia. By means of a survey questionnaire, we collected data aimed to identify what features are most useful and best implemented in current CASE tools according to senior developers and managers. With the aid of both descriptive and inferential statistical data analysis methods, we found out that the features that are rated most useful belong to the graphical editing, version management and document generation categories. The statistical methods we use allow us to extend the results to the whole population with a certain degree of confidence. The analysis of the data seems to give the indication that there is a general level of dissatisfaction on the quality of currently available CASE tools. Also, there is evidence that some of the most advanced features (reverse engineering, code generation) are not deemed as useful as others. Further research should focus on extending the survey to other types of industries, and attempt generalization of the results. This may constitute precious feedback for the software tools industry in order to develop products that correspond more to industry needs.", "author": [{"name": "A. Maccari", "affiliation": "Nokia Research Center, Nokia Group, Finland"}, {"name": "C. Riva", "affiliation": "Nokia Research Center, Nokia Group, Finland"}, {"name": "F. Maccari", "affiliation": "Facolt\u00e1 di Economia R.M. Goodwin Piazza S, Universit\u00e0 degli Studi di Siena, Siena, Italy"}], "time": "2002", "citationCount": "2", "references": [{"title": " \"Science and substance: a challenge to software engineers\"", "authors": ["N. Fenton", " S. Lawrence Pfleger ", " R. L. Glass"]}, {"title": " \"The usage of systems development: why are we stuck to old practices?\" in Information and Software Technology", "authors": ["J. Iivari ", " J. Maansaari"]}, {"title": " \"Significance level and power\" in Foundations of probability econometrics and economic games", "authors": ["E. L. Lehmann"]}, {"title": " \"Empirical evaluation of CASE tool usage at Nokia\"", "authors": ["A. Maccari ", " C. Riva"]}, {"title": " \"Some methods for classification and analysis of multivariate observations\"", "authors": ["J. Mac Queen"]}, {"title": " \"CASE tools as organizational change investigating incremental and radical changes in systems development\"", "authors": ["W. J. Orlikowski"]}, {"title": " \"A comparative evaluation of CASE tools\" in The Journal of Systems and Software 44 (1998)", "authors": ["G. Post", " A. Kagan ", " R. T. Keim"]}, {"title": " \"Multi-method research: an empirical investigation of object-oriented technology\"", "authors": ["M. Wood", " J. Daly", " J. Miller ", " M. Roper"]}]},
{"doi": "10.1109/ASE.2019.00019", "title": "Efficient Test Generation Guided by Field Coverage Criteria", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Semantics", "Software", "Test pattern generators", "Data structures", "Tools", "Software engineering"], "abstract": "Field-exhaustive testing is a testing criterion suitable for object-oriented code over complex, heap-allocated, data structures. It requires test suites to contain enough test inputs to cover all feasible values for the object's fields within a certain scope (input-size bound). While previous work shows that field-exhaustive suites can be automatically generated, the generation technique required a formal specification of the inputs that can be subject to SAT-based analysis. Moreover, the restriction of producing all feasible values for inputs' fields makes test generation costly. In this paper, we deal with field coverage as testing criteria that measure the quality of a test suite in terms of coverage and mutation score, by examining to what extent the values of inputs' fields are covered. In particular, we consider field coverage in combination with test generation based on symbolic execution to produce underapproximations of field-exhaustive suites, using the Symbolic Pathfinder tool. To underapproximate these suites we use tranScoping, a technique that estimates characteristics of yet to be run analyses for large scopes, based on data obtained from analyses performed in small scopes. This provides us with a suitable condition to prematurely stop the symbolic execution. As we show, tranScoping different metrics regarding field coverage allows us to produce significantly smaller suites using a fraction of the generation time. All this while retaining the effectiveness of field exhaustive suites in terms of test suite quality.", "author": [{"name": "Ariel Godio", "affiliation": "Department of Software Engineering, ITBA, Buenos Aires, Argentina"}, {"name": "Valeria Bengolea", "affiliation": "Department of Computer Science, UNRC, Rio Cuarto, Argentina"}, {"name": "Pablo Ponzio", "affiliation": "Department of Computer Science, UNRC, Rio Cuarto, Argentina"}, {"name": "Nazareno Aguirre", "affiliation": "Department of Computer Science, UNRC, Rio Cuarto, Argentina"}, {"name": "Marcelo Fabian Frias", "affiliation": "ITBA, Buenos Aires, Argentina"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Improving test generation under rich contracts by tight bounds and incremental SAT solving\"", "authors": ["P. Abad", " N. Aguirre", " V. Bengolea", " D. Ciolek", " M. F. Frias", " J. P. Galeotti", " ."]}, {"title": " \"Titanium: efficient analysis of evolving alloy specifications\"", "authors": ["H. Bagheri ", " S. Malek"]}, {"title": " \"Embracing change with extreme programming\"", "authors": ["K. Beck"]}, {"title": " \"Korat: Automated testing based on Java predicates\"", "authors": ["C. Boyapati", " S. Khurshid ", " D. Marinov"]}, {"title": " \"QuickCheck: a lightweight tool for random testing of Haskell programs\"", "authors": ["K. Claessen ", " J. Hughes"]}, {"title": " \"Constructing interaction test suites for highly-configurable systems in the presence of constraints: A greedy Approach\"", "authors": ["M. Cohen", " M. Dwyer ", " J. Shi"]}, {"title": " \"EvoSuite: automatic test suite generation for object-oriented software\"", "authors": ["G. Fraser ", " A. Arcuri"]}, {"title": " \"Analysis of invariants for efficient bounded verification\"", "authors": ["J. P. Galeotti", " N. Rosner", " C. L\u00f3pez Pombo ", " M. F. Frias"]}, {"title": " \"Regression Towards Mediocrity in Hereditary Stature\"", "authors": ["F. Galton"]}, {"title": " \"Generalized symbolic execution for model checking and testing\"", "authors": ["S. Khurshid", " C. P\u0103s\u0103reanu ", " W. Visser"]}, {"title": " \"TestEra: Specification-Based Testing of Java Programs Using SAT\"", "authors": ["S. Khurshid ", " D. Marinov"]}, {"title": " \"Using contracts and boolean queries to improve the quality of automatic test generation\"", "authors": ["L. Liu", " B. Meyer ", " B. Schoeller"]}, {"title": " \"MuJava: An Automated Class Mutation System\"", "authors": ["Y.-S. Ma", " J. Offutt ", " Y.-R. Kwon"]}, {"title": " \"Feedback-directed random test generation\"", "authors": ["C. Pacheco", " S. K. Lahiri", " M. D. Ernst ", " T. Ball"]}, {"title": " \"Efficient tight field bounds computation based on shape predicates\"", "authors": ["P. Ponzio", " N. Rosner", " N. Aguirre ", " M. Frias"]}, {"title": " \"Field-Exhaustive Testing\"", "authors": ["P. Ponzio", " N. Aguirre", " M. Frias ", " W. Visser"]}, {"title": " \"Parallel Bounded Verification of Alloy Models by TranScoping\"", "authors": ["N. Rosner", " C. G. L\u00f3pez Pombo", " N. Aguirre", " A. Jaoua", " A. Mili ", " M. Frias"]}, {"title": " \"Whispec: White-box testing of libraries using declarative specifications\"", "authors": ["D. Shao", " S. Khurshid ", " D. E. Perry"]}, {"title": " \"Testing container classes: random or systematic?\"", "authors": ["R. Sharma", " M. Gligoric", " A. Arcuri", " G. Fraser ", " D. Marinov"]}, {"title": " \"Pex: White Box Test Generation for.NET\"", "authors": ["N. Tillmann ", " J. de Halleux"]}, {"title": " \"Test Input Generation with Java PathFinder\"", "authors": ["W. Visser", " C. S. Pasareanu ", " S. Khurshid"]}, {"title": " \"Test Input Generation for Java Containers using State Matching\"", "authors": ["W. Visser", " C. S. Pasareanu ", " R. Pel\u00e1nek"]}, {"title": " \"Software Unit Test Coverage and Adequacy\"", "authors": ["H. Zhu", " P. Hall ", " J. May"]}]},
{"doi": "10.1109/ASE.2002.1114996", "title": "Experience report on automated procedure construction for deductive synthesis", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software engineering", "Chromium"], "abstract": "Deductive program synthesis systems based on automated theorem proving offer the promise of \"correct by construction\" software. However, the difficulty encountered in constructing usable deductive synthesis systems has prevented their widespread use. Amphion is a real-world, domain-independent program synthesis system. It is specialized to specific applications through the creation of an operational domain theory and a specialized deductive engine. This paper describes an experiment aimed at making the construction of usable Amphion applications easier. The software system Theory Operationalization for Program Synthesis (TOPS) has a library of decision procedures with a theory template for each procedure. TOPS identifies axioms in the domain theory that are an instance of a library of procedure and uses partial deduction to augment the procedure with the capability to construct ground terms for deductive synthesis. Synthesized procedures are interfaced to a resolution theorem prover. Axioms in the original domain theory that are implied by the synthesized procedures are removed. During deductive synthesis, each procedure is invoked to test conjunctions of literals in the language of the theory of that procedure. When possible, the procedure generates ground terms and binds them to variables in a problem specification. These terms are program fragments. Experiments show that the procedures synthesized by TOPS can reduce theorem proving search at least as much as hand tuning of the deductive synthesis system.", "author": [{"name": "S. Roach", "affiliation": "Department of Computer Science Universit y of Texas at El Paso El Paso, TX"}], "time": "2002", "citationCount": "1", "references": [{"title": " \"A Resolution Principle for a Logic With Restricted Quantifiers\" in Lecture Notes in artificial Intelligence", "authors": ["H. J. Burckert"]}, {"title": " \"Applications of Theorem Proving\"", "authors": ["C. Green"]}, {"title": " \"Applying Knowledge Compilation Techniques to Model-Based Reasoning\"", "authors": ["R. Keller"]}, {"title": " \"An Introduction to P artialDe-duct ion Framevork\" in Meta-Programming in Lone Lecture Notes in Artificial Intelligence", "authors": ["J. Komorowski"]}, {"title": " \"A Formal Approach to Domain-Oriented Software Design Ervironments\"", "authors": ["M. Lowry", " A. Philpot", " T. Pressburger ", " I. Underwood"]}, {"title": " \"General Techniques for Automatic Program Optimization and Synthesis Through Theorem Proving\"", "authors": ["P. Madden ", " A. Bundy"]}, {"title": " \"A Deductive Approach To Program Synthesis\"", "authors": ["Z. Manna ", " R. Waldinger"]}, {"title": "\"SPICE\"", "authors": []}, {"title": " \"A Note on Inductive Generalisation\" in Machine Intelligence 5", "authors": ["G. Plotkin"]}, {"title": " \"Automatic Program- ming: Myths and Prospects\"", "authors": ["C. Rich ", " R. Waters"]}, {"title": " \"Knowledge Compilation and Theory Approximation\"", "authors": ["B. Selman ", " H. Kautz"]}, {"title": " \"Deductive Composition of Astronomical Soft w arefrom Subroutine Libraries\"", "authors": ["M. Stickel", " R. Waldinger", " M. Lowry", " T. Press-burger ", " I. Underwood"]}, {"title": " \"SNARK - SRI's New Automated Reasoning Kit\"", "authors": ["M. Stickel"]}, {"title": " \"The Completeness of DRAT A Techniquefor Automatic Design of Satisfiability Procedures\"", "authors": ["J. VanBaalen"]}, {"title": " \"Automated Design of Specialized Representations\"", "authors": ["J. Van Baalen"]}]},
{"doi": "10.1109/ASE.2019.00020", "title": "A Qualitative Analysis of Android Taint-Analysis Results", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Smart phones", "Static analysis", "Runtime", "Telephony", "Signal to noise ratio"], "abstract": "In the past, researchers have developed a number of popular taint-analysis approaches, particularly in the context of Android applications. Numerous studies have shown that automated code analyses are adopted by developers only if they yield a good \"signal to noise ratio\", i.e., high precision. Many previous studies have reported analysis precision quantitatively, but this gives little insight into what can and should be done to increase precision further. To guide future research on increasing precision, we present a comprehensive study that evaluates static Android taint-analysis results on a qualitative level. To unravel the exact nature of taint flows, we have designed COVA, an analysis tool to compute partial path constraints that inform about the circumstances under which taint flows may actually occur in practice. We have conducted a qualitative study on the taint flows reported by FlowDroid in 1,022 real-world Android applications. Our results reveal several key findings: Many taint flows occur only under specific conditions, e.g., environment settings, user interaction, I/O. Taint analyses should consider the application context to discern such situations. COVA shows that few taint flows are guarded by multiple different kinds of conditions simultaneously, so tools that seek to confirm true positives dynamically can concentrate on one kind at a time, e.g., only simulating user interactions. Lastly, many false positives arise due to a too liberal source/sink configuration. Taint analyses must be more carefully configured, and their configuration could benefit from better tool assistance.", "author": [{"name": "Linghui Luo", "affiliation": "Paderborn University, Paderborn, Germany"}, {"name": "Eric Bodden", "affiliation": "Paderborn University & Fraunhofer IEM, Paderborn, Germany"}, {"name": "Johannes Sp\u00e4th", "affiliation": "Fraunhofer IEM, Paderborn, Germany"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Flowdroid: precise context flow field object-sensitive and lifecycle-aware taint analysis for android apps\"", "authors": ["S. Arzt", " S. Rasthofer", " C. Fritz", " E. Bodden", " A. Bartel", " J. Klein", " ."]}, {"title": " \"A precise and general inter-component data flow analysis framework for security vetting of android apps\"", "authors": ["F. Wei", " S. Roy", " X. Ou ", " Am"]}, {"title": " \"Information flow analysis of android applications in droidsafe\"", "authors": ["M. I. Gordon", " D. Kim", " J. H. Perkins", " L. Gilham", " N. Nguyen ", " M. C. Rinard"]}, {"title": " \"Iccta: Detecting inter-component privacy leaks in android apps\"", "authors": ["L. Li", " A. Bartel", " T. F. Bissy", "\u00e9", " J. Klein", " Y. L. Traon", " S. Arzt", " ."]}, {"title": " \"Scalable and precise taint analysis for android\"", "authors": ["W. Huang", " Y. Dong", " A. Milanova ", " J. Dolby"]}, {"title": " \"Static analysis of android apps: A systematic literature review\"", "authors": ["L. Li", " T. F. Bissy", "\u00e9", " M. Papadakis", " S. Rasthofer", " A. Bartel", " D. Octeau", " ."]}, {"title": " \"Smartdroid: an automatic system for revealing ui-based trigger conditions in android applications\"", "authors": ["C. Zheng", " S. Zhu", " S. Dai", " G. Gu", " X. Gong", " X. Han", " ."]}, {"title": " \"Static mining and dynamic taint for mobile security threats analysis\"", "authors": ["T. Yang", " K. Qian", " L. Li", " D. C. Lo ", " L. Tao"]}, {"title": " \"Automated testing and notification of mobile app privacy leak-cause behaviours\"", "authors": ["J. C. J. Keng"]}, {"title": " \"Making malory behave maliciously: targeted fuzzing of android execution environments\"", "authors": ["S. Rasthofer", " S. Arzt", " S. Triller ", " M. Pradel"]}, {"title": " \"Intellidroid: A targeted input generator for the dynamic analysis of android malware\"", "authors": ["M. Y. Wong ", " D. Lie"]}, {"title": " \"Effective real-time android application auditing\"", "authors": ["M. Xia", " L. Gong", " Y. Lyu", " Z. Qi ", " X. Liu"]}, {"title": " \"Evading android runtime analysis via sandbox detection\"", "authors": ["T. Vidas ", " N. Christin"]}, {"title": " \"The case for mobile forensics of private data leaks: towards large-scale user-oriented privacy protection\"", "authors": ["J. C. J. Keng", " T. K. Wee", " L. Jiang ", " R. K. Balan"]}, {"title": " \"All you ever wanted to know about dynamic taint analysis and forward symbolic execution (but might have been afraid to ask)\"", "authors": ["E. J. Schwartz", " T. Avgerinos ", " D. Brumley"]}, {"title": " \"DTA++: dynamic taint analysis with targeted control-flow propagation\"", "authors": ["M. G. Kang", " S. McCamant", " P. Poosankam ", " D. Song"]}, {"title": " \"I know what leaked in your pocket: uncovering privacy leaks on android apps with static taint analysis\"", "authors": ["L. Li", " A. Bartel", " J. Klein", " Y. L. Traon", " S. Arzt", " S. Rasthofer", " ."]}, {"title": " \"Triflow: Triaging android applications using speculative information flows\"", "authors": ["O. Mirzaei", " G. Suarez-Tangil", " J. E. Tapiador ", " J. M. de Fuentes"]}, {"title": " \"Deepflow: Deep learning-based malware detection by mining android application for abnormal usage of sensitive data\"", "authors": ["D. Zhu", " H. Jin", " Y. Yang", " D. Wu ", " W. Chen"]}, {"title": " \"What did really change with the new release of the app?\"", "authors": ["P. Calciati", " K. Kuznetsov", " X. Bai ", " A. Gorla"]}, {"title": " \"Mining apps for abnormal usage of sensitive data\"", "authors": ["V. Avdiienko", " K. Kuznetsov", " A. Gorla", " A. Zeller", " S. Arzt", " S. Rasthofer", " ."]}, {"title": " \"Flowmine: Android app analysis via data flow\"", "authors": ["L. Sinha", " S. Bh", "ari", " P. Faruki", " M. S. Gaur", " V. Laxmi ", " M. Conti"]}, {"title": " \"Redroid: Prioritizing data flows and sinks for app security transformation\"", "authors": ["K. Tian", " G. Tan", " D. D. Yao ", " B. G. Ryder"]}, {"title": " \"A machine-learning approach for classifying and categorizing android sources and sinks\"", "authors": ["S. Rasthofer", " S. Arzt ", " E. Bodden"]}, {"title": " \"Effective detection of android malware based on the usage of data flow apis and machine learning\"", "authors": ["S. Wu", " P. Wang", " X. Li ", " Y. Zhang"]}, {"title": " \"Analyzing the analyzers: Flowdroid/iccta amandroid and droidsafe\"", "authors": ["L. Qiu", " Y. Wang ", " J. Rubin"]}, {"title": " \"Combining slicing and constraint solving for validation of measurement software\"", "authors": ["G. Snelting"]}, {"title": " \"A unified approach to global program optimization\"", "authors": ["G. A. Kildall"]}, {"title": " \"Interprocedural data flow analysis in soot using value contexts\"", "authors": ["R. Padhye ", " U. P. Khedker"]}, {"title": " \"Precise interprocedural dataflow analysis via graph reachability\"", "authors": ["T. W. Reps", " S. Horwitz ", " S. Sagiv"]}, {"title": " \"Interprocedural may-alias analysis for pointers: Beyond k-limiting\"", "authors": ["A. Deutsch"]}, {"title": " \"The Soot framework for Java program analysis: a retrospective\"", "authors": ["P. Lam", " E. Bodden", " O. Lhotak ", " L. Hendren"]}, {"title": " \"Boomerang: Demand-Driven Flow- and Context-Sensitive Pointer Analysis for Java\"", "authors": ["J. Sp\u00e4th", " L. N. Q. Do", " K. Ali ", " E. Bodden"]}, {"title": " \"Z3: an efficient SMT solver\"", "authors": ["L. M. de Moura ", " N. Bj\u00f8rner"]}, {"title": " \"Do android taint analysis tools keep their promises?\"", "authors": ["F. Pauck", " E. Bodden ", " H. Wehrheim"]}, {"title": " \"Androzoo: collecting millions of android apps for the research community\"", "authors": ["K. Allix", " T. F. Bissy", "\u00e9", " J. Klein ", " Y. L. Traon"]}, {"title": " \"Effective typestate verification in the presence of aliasing\"", "authors": ["S. J. Fink", " E. Yahav", " N. Dor", " G. Ramalingam ", " E. Geay"]}, {"title": " \"Target fragmentation in android apps\"", "authors": ["P. Mutchler", " Y. Safaei", " A. Doup\u00e9 ", " J. C. Mitchell"]}, {"title": " \"Hidden truths in dead software paths\"", "authors": ["M. Eichberg", " B. Hermann", " M. Mezini ", " L. Glanz"]}, {"title": " \"In defense of soundiness: a manifesto\"", "authors": ["B. Livshits", " M. Sridharan", " Y. Smaragdakis", " O. Lhot\u00e1k", " J. N. Amaral", " B. E. Chang", " ."]}, {"title": " \"On the unsoundness of static analysis for android guis\"", "authors": ["Y. Wang", " H. Zhang ", " A. Rountev"]}, {"title": " \"Asking for (and about) permissions used by android apps\"", "authors": ["R. Stevens", " J. Ganz", " V. Filkov", " P. T. Devanbu ", " H. Chen"]}, {"title": " \"Appcontext: Differentiating malicious and benign mobile app behaviors using context\"", "authors": ["W. Yang", " X. Xiao", " B. Andow", " S. Li", " T. Xie ", " W. Enck"]}, {"title": " \"Tracking Load-time Configuration Options\"", "authors": ["M. Lillack", " C. Kastner ", " E. Bodden"]}, {"title": " \"Automatic privacy leakage detection for massive android apps via a novel hybrid approach\"", "authors": ["H. Chen", " H. Leung", " B. Han ", " J. Su"]}, {"title": " \"Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones\"", "authors": ["W. Enck", " P. Gilbert", " S. Han", " V. Tendulkar", " B. Chun", " L. P. Cox", " ."]}, {"title": " \"Precise interprocedural dataflow analysis with applications to constant propagation\"", "authors": ["M. Sagiv", " T. Reps ", " S. Horwitz"]}, {"title": " \"Information flow analysis via path condition refinement\"", "authors": ["M. Taghdiri", " G. Snelting ", " C. Sinz"]}, {"title": " \"Using targeted symbolic execution for reducing false-positives in dataflow analysis\"", "authors": ["S. Arzt", " S. Rasthofer", " R. Hahn ", " E. Bodden"]}, {"title": " \"Symbolic execution for software testing: three decades later\"", "authors": ["C. Cadar ", " K. Sen"]}, {"title": " \"Automated concolic testing of smartphone apps\"", "authors": ["S. An", "", " M. Naik", " M. J. Harrold ", " H. Yang"]}, {"title": " \"Condroid: Targeted dynamic analysis of android applications\"", "authors": ["J. Sch\u00fctte", " R. Fedler ", " D. Titze"]}]},
{"doi": "10.1109/ASE.2002.1114997", "title": "Generating product-lines of product-families", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Packaging", "Reactive power", "Read only memory", "Hip", "Encapsulation", "Electrical capacitance tomography"], "abstract": "GenVoca is a methodology and technology for generating product-lines, i.e. building variants of a program. The primitive components from which applications are constructed are refinements or layers, which are modules that implement a feature that many programs of a product-line can share. Unlike conventional components (e.g., COM, CORBA, EJB), a layer encapsulates fragments of multiple classes. Sets of fully formed classes can be produced by composing layers. Layers are modular, albeit unconventional, building blocks of programs. But what are the building blocks of layers? We argue that facets is an answer. A facet encapsulates fragments of multiple layers, and compositions of facets yields sets of fully formed layers. Facets arise when refinements scale from producing variants of individual programs to producing variants of multiple integrated programs, as typified byproduct families (e.g., MS Office). We present a mathematical model that explains relationships between layers and facets. We use the model to develop a generator for tools (i.e., product family) that are used in language-extensible Integrated Development Environments (IDEs).", "author": [{"name": "D. Batory", "affiliation": "Department of Computer Sciences, University of Texas, Austin, Austin, TX, USA"}, {"name": "R.E. Lopez-Herrejon", "affiliation": "Department of Computer Sciences, University of Texas, Austin, Austin, TX, USA"}, {"name": "J.-P. Martin", "affiliation": "Department of Computer Sciences, University of Texas, Austin, Austin, TX, USA"}], "time": "2002", "citationCount": "17", "references": [{"title": " \"The Design and Implementation of Hierarchical Software Systems with Reusable Components\"", "authors": ["D. Batory ", " S. O'Malley"]}, {"title": " \"Composition Validation and Subjectivity in GenVoca Generators\"", "authors": ["D. Batory ", " B.J. Geraci"]}, {"title": " \"JTS: Tools for Implementing Domain-Specific Languages\"", "authors": ["D. Batory", " B. Lofaso ", " Y. Smaragdakis"]}, {"title": " \"Design Wizards and Visual Programming Environments for GenVoca Generators\"", "authors": ["D. Batory", " G. Chen", " E. Robertson ", " T. Wang"]}, {"title": " \"Achieving Extensibility Through Product-Lines and Domain-Specific Languages: A Case Study\"", "authors": ["D. Batory", " C. Johnson", " R. MacDonald ", " D. von Heeder"]}, {"title": " \"Design Maintenance Systems\"", "authors": ["I. Baxter"]}, {"title": " \"Using Mixins to Build Flexible Widgets\"", "authors": ["R. Cardone", " A. Brown", " S. McDirmid ", " C. Lin"]}, {"title": " \"Generative Programming for Embedded Software: An Industrial Experience Report\"", "authors": ["K. Czarnecki", " T. Bednasch", " P. Unger ", " U. Eisenecker"]}, {"title": " \"Little Languages: Little Maintenance?\"", "authors": ["A. Van Deursen ", " P. Klint"]}, {"title": " \"Classes and Mixins\" in ACM Principles of Programming Languages", "authors": ["M. Flatt", " S. Krishnamurthi ", " M. Felleisen"]}, {"title": " \"Implementing Product-Line Features by Composing Component Aspects\"", "authors": ["M. Griss"]}, {"title": " \"Subject-Oriented Programming (A Critique of Pure Objects)\"", "authors": ["W. Harrison ", " H. Ossher"]}, {"title": "\"Javadoc - The Java API Documentation Generator\"", "authors": []}, {"title": " \"Feature-Oriented Domain Analysis Feasibility Study\"", "authors": ["K.C. Kang ."]}, {"title": " \"Aspect-Oriented Programming\"", "authors": ["G. Kiczales", " J. Lamping", " A. Mendhekar", " C. Maeda", " C. Lopes", " J. Loingtier", " ."]}, {"title": " \"An overview of AspectJ\"", "authors": ["G Kiczales", " E. Hilsdale", " J. Hugunin", " M. Kirsten", " J. Palm ", " W.G. Griswold"]}, {"title": " \"Adaptive Plug-and-Play Components for Evolutionary Software Development\"", "authors": ["M. Mezini ", " K. Lieberherr"]}, {"title": " \"Jiazzi: new-Age Components for Old-Fashioned Java\"", "authors": ["S. McDirmid", " M. Flatt ", " W.C. Hsieh"]}, {"title": " \"Using Multi-Dimensional Separation of Concerns to (Re)Shape Evolving Software\"", "authors": ["H. Ossher ", " P. Tarr"]}, {"title": " \"Multi-dimensional separation of concerns and the Hyperspace approach\" in Software Architectures and Component Technology", "authors": ["H. Ossher ", " P. Tarr"]}, {"title": " \"OORASS: Seamless Support for the Creation and Maintenance of Object-Oriented Systems\"", "authors": ["T. Reenskaug ."]}, {"title": " \"The Death of Computer Languages the Birth of Intentional Programming\"", "authors": ["C. Simonyi"]}, {"title": " \"Implementing Layered Designs with Mixin Layers\"", "authors": ["Y. Smaragdakis ", " D. Batory"]}, {"title": " \"Scoping Constructs for Program Generators\"", "authors": ["Y. Smaragdakis ", " D. Batory"]}, {"title": " \"Mixin Layers: An Object-Oriented Implementation Technique for Refinements and Collaboration-Based Designs\"", "authors": ["Y. Smaragdakis ", " D. Batory"]}, {"title": " \"Reconciling Environment Integration and Software Evolution\"", "authors": ["K.J. Sullivan ", " D. Notkin"]}, {"title": " \"N Degrees of Separation: Multi-Dimensional Separation of Concerns\"", "authors": ["P. Tarr", " H. Ossher", " W. Harrison ", " S.M. Sutton"]}, {"title": " \"Using Role Components to Implement Collaboration-Based Designs\"", "authors": ["M. Van Hilst ", " D. Notkin"]}]},
{"doi": "10.1109/ASE.2019.00021", "title": "Goal-Driven Exploration for Android Applications", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Facebook", "Receivers", "Task analysis", "Navigation", "Security", "Tools", "Testing"], "abstract": "This paper proposes a solution for automated goal-driven exploration of Android applications - a scenario in which a user, e.g., a security auditor, needs to dynamically trigger the functionality of interest in an application, e.g., to check whether user-sensitive info is only sent to recognized third-party servers. As the auditor might need to check hundreds or even thousands of apps, manually exploring each app to trigger the desired behavior is too time-consuming to be feasible. Existing automated application exploration and testing techniques are of limited help in this scenario as well, as their goal is mostly to identify faults by systematically exploring different app paths, rather than swiftly navigating to the target functionality. The goal-driven application exploration approach proposed in this paper, called GoalExplorer, automatically generates an executable test script that directly triggers the functionality of interest. The core idea behind GoalExplorer is to first statically model the application's UI screens and transitions between these screens, producing a Screen Transition Graph (STG). Then, GoalExplorer uses the STG to guide the dynamic exploration of the application to the particular target of interest: an Android activity, API call, or a program statement. The results of our empirical evaluation on 93 benchmark applications and the 95 most popular GooglePlay applications show that the STG is substantially more accurate than other Android UI models and that GoalExplorer is able to trigger a target functionality much faster than existing application exploration techniques.", "author": [{"name": "Duling Lai", "affiliation": "Electrical and Computer Engineering, University of British Columbia, Vancouver, Canada"}, {"name": "Julia Rubin", "affiliation": "Electrical and Computer Engineering, University of British Columbia, Vancouver, Canada"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Effective Real-time Android Application Auditing\"", "authors": ["M. Xia", " L. Gong", " Y. Lyu", " Z. Qi ", " X. Liu"]}, {"title": " \"Detecting Display Energy Hotspots in Android Apps\"", "authors": ["M. Wan", " Y. Jin", " D. Li ", " W. G. J. Halfond"]}, {"title": " \"Securacy: An Empirical Investigation of Android Applications\u2019 Network Usage Privacy and Security\"", "authors": ["D. Ferreira", " V. Kostakos", " A. R. Beresford", " J. Lindqvist ", " A. K. Dey"]}, {"title": " \"Haystack: In Situ Mobile Traffic Analysis in User Space\"", "authors": ["A. Razaghpanah", " N. Vallina-Rodriguez", " S. Sundaresan", " C. Kreibich", " P. Gill", " M. Allman", " ."]}, {"title": " \"Identifying Personal Information in Internet Traffic\"", "authors": ["Y. Liu", " H. H. Song", " I. Bermudez", " A. Mislove", " M. Baldi ", " A. Tongaonkar"]}, {"title": " \"ReCon: Revealing and Controlling PII Leaks in Mobile Network Traffic\"", "authors": ["J. Ren", " A. Rao", " M. Lindorfer", " A. Legout ", " D. Choffnes"]}, {"title": " \"CloudAnalyzer: Uncovering the Cloud Usage of Mobile Apps\"", "authors": ["M. Henze", " J. Pennekamp", " D. Hellmanns", " E. M\u00fchmer", " J. H. Ziegeldorf", " A. Drichel", " ."]}, {"title": " \"PUMA: Programmable UI-Automation for Large-Scale Dynamic Analysis of Mobile Apps\"", "authors": ["S. Hao", " B. Liu", " S. Nath", " W. G. Halfond ", " R. Govindan"]}, {"title": " \"Targeted and Depth-first Exploration for Systematic Testing of Android Apps\"", "authors": ["T. Azim ", " I. Neamtiu"]}, {"title": " \"Using GUI Ripping for Automated Testing of Android Applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana", " S. De Carmine ", " A. M. Memon"]}, {"title": " \"Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning\"", "authors": ["W. Choi", " G. Necula ", " K. Sen"]}, {"title": " \"Dynodroid: An Input Generation System for Android Apps\"", "authors": ["A. Machiry", " R. Tahiliani ", " M. Naik"]}, {"title": " \"EvoDroid: Segmented Evolutionary Testing of Android Apps\"", "authors": ["R. Mahmood", " N. Mirzaei ", " S. Malek"]}, {"title": " \"Automatically Discovering Reporting and Reproducing Android Application Crashes\"", "authors": ["K. Moran", " L.-V. Mario", " C. Bernal-C\u00e1rdenas", " C. Vendome ", " D. Poshyvanyk"]}, {"title": " \"Efficiently Effectively Detecting Mobile App Bugs with AppDoctor\"", "authors": ["G. Hu", " X. Yuan", " Y. Tang ", " J. Yang"]}, {"title": " \"Sapienz: Multi-objective Automated Testing for Android Applications\"", "authors": ["K. Mao", " M. Harman ", " Y. Jia"]}, {"title": " \"Guided Stochastic Model-based GUI Testing of Android Apps\"", "authors": ["T. Su", " G. Meng", " Y. Chen", " K. Wu", " W. Yang", " Y. Yao", " ."]}, {"title": " \"Automated Testing of Android Apps: A Systematic Literature Review\"", "authors": ["P. Kong", " L. Li", " J. Gao", " K. Liu", " T. F. Bissy", "\u00e9 "]}, {"title": " \"Static Window Transition Graphs for Android\"", "authors": ["S. Yang", " H. Zhang", " H. Wu", " Y. Wang", " D. Yan ", " A. Rountev"]}, {"title": " \"FlowDroid: Precise Context Flow Field Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps\"", "authors": ["S. Arzt", " S. Rasthofer", " C. Fritz", " E. Bodden", " A. Bartel", " J. Klein", " ."]}, {"title": " \"IccTA: Detecting Inter-component Privacy Leaks in Android Apps\"", "authors": ["L. Li", " A. Bartel", " T. F. Bissy", "\u00e9", " J. Klein", " Y. Le Traon", " S. Arzt", " ."]}, {"title": " \"SUPOR: Precise and Scalable Sensitive User Input Detection for Android Apps\"", "authors": ["J. Huang", " Z. Li", " X. Xiao", " Z. Wu", " K. Lu", " X. Zhang", " ."]}, {"title": " \"Automated Test Input Generation for Android: Are We There Yet?\"", "authors": ["S. R. Choudhary", " A. Gorla ", " A. Orso"]}, {"title": " \"Composite Constant Propagation: Application to Android Inter-Component Communication Analysis\"", "authors": ["D. Octeau", " D. Luchaup", " M. Dering", " S. Jha ", " P. McDaniel"]}, {"title": " \"Profiling the Responsiveness of Android Applications via Automated Resource Amplification\"", "authors": ["Y. Wang ", " A. Rountev"]}, {"title": " \"Static Detection of Energy Defect Patterns in Android Applications\"", "authors": ["H. Wu", " S. Yang ", " A. Rountev"]}, {"title": " \"Launch-mode-aware Context-sensitive Activity Transition Analysis\"", "authors": ["Y. Zhang", " Y. Sui ", " J. Xue"]}, {"title": " \"StoryDroid: Automated Generation of Storyboard for Android Apps\"", "authors": ["S. Chen", " L. Fan", " C. Chen", " T. Su", " W. Li", " Y. Liu", " ."]}, {"title": " \"Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning\"", "authors": ["W. Choi", " G. Necula ", " K. Sen"]}, {"title": " \"Automated Model-based Android GUI Testing Using Multi-level GUI Comparison Criteria\"", "authors": ["Y.-M. Baek ", " D.-H. Bae"]}, {"title": " \"Practical GUI Testing of Android Applications via Model Abstraction and Refinement\"", "authors": ["T. Gu", " C. Sun", " X. Ma", " C. Cao", " C. Xu", " Y. Yao", " ."]}, {"title": " \"Testing Android Apps Through Symbolic Execution\"", "authors": ["N. Mirzaei", " S. Malek", " C. S. P\u0103s\u0103reanu", " N. Esfahani ", " R. Mahmood"]}, {"title": " \"Forced-Path Execution for Android Applications on x86 Platforms\"", "authors": ["R. Johnson ", " A. Stavrou"]}, {"title": " \"SIG-Droid: Automated System Input Generation for Android Applications\"", "authors": ["N. Mirzaei", " H. Bagheri", " R. Mahmood ", " S. Malek"]}, {"title": " \"Automated Testing with Targeted Event Sequence Generation\"", "authors": ["C. S. Jensen", " M. R. Prasad ", " A. M\u00f8ller"]}, {"title": " \"ConDroid: Targeted Dynamic Analysis of Android Applications\"", "authors": ["J. Sch\u00fctte", " R. Fedler ", " D. Titze"]}, {"title": " \"SmartDroid: An Automatic System for Revealing UI-based Trigger Conditions in Android Applications\"", "authors": ["C. Zheng", " S. Zhu", " S. Dai", " G. Gu", " X. Gong", " X. Han", " ."]}, {"title": " \"IntelliDroid: A Targeted Input Generator for the Dynamic Analysis of Android Malware\"", "authors": ["M. Wong ", " D. Lie"]}, {"title": " \"Making Malory Behave Maliciously: Targeted Fuzzing of Android Execution Environments\"", "authors": ["S. Rasthofer", " S. Arzt", " S. Triller ", " M. Pradel"]}]},
{"doi": "10.1109/ASE.2002.1114998", "title": "Knowledge-based synthesis of numerical programs for simulation of rigid-body systems in physics-based animation", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Numerical simulation", "Animation", "Partitioning algorithms", "Educational programs", "Geometry", "Vocabulary", "Control system synthesis", "Real time systems", "Computational modeling", "Computational efficiency"], "abstract": "Physics-based animation programs are important in a variety of contexts, including education, science and entertainment among others. Manual construction of such programs is expensive, time consuming and prone to error. We have developed a system for automatically synthesizing physics-based animation programs for a significant class of problems: constrained systems of rigid bodies, subject to driving and dissipative forces. Our system includes a graphical interface for specifying a physical scenario, including objects, geometry, dynamical variables and coordinate systems, along with a symbolic interface for specifying forces and constraints operating in the scenario. The entities defined in the graphical interface serve as the underlying vocabulary for specifications constructed in the symbolic interface. We use an algorithmically controlled rewrite system to construct a numerical simulation program that drives a real-time animation of the specified scenario. The algorithm operates by partitioning the constraints and dynamic variables into classes, assigning each class to be implemented in a different component of a general simulation program scheme. Our approach provides many of the benefits of formal deductive methods of program synthesis, while keeping the computational costs of program synthesis more in line with conventional program generator technology. We have successfully tested our system on numerous examples.", "author": [{"name": "T. Ellman", "affiliation": "Department of Computer Science, Vassar College, Poughkeepsie, NY, USA"}, {"name": "R. Deak", "affiliation": "Department of Computer Science, Vassar College, Poughkeepsie, NY, USA"}, {"name": "J. Fotinatos", "affiliation": "Department of Computer Science, Vassar College, Poughkeepsie, NY, USA"}], "time": "2002", "citationCount": "2", "references": [{"title": " \"Analytical Dynamics\" in ", "authors": ["H. Baruh"]}, {"title": " \"Numerical Recipes\" in ", "authors": ["W. Press", " W. Vetterling", " S. Teukolsky ", " B. Flannery"]}, {"title": " \"Computer-Aided Kinematics and Dynamics of Mechanical Systems\" in ", "authors": ["E. Haug"]}, {"title": " \"Synthesis of Mathematical Modeling Software\"", "authors": ["E. Kant"]}, {"title": " \"Anatomy of AGNES: An Automatic Generator of Numerical Equation Solutions\" in Intelligent Mathematical Software Systems", "authors": ["A. Kowalski ", " R. Peskin"]}, {"title": " \"Tomorrow's Weather Forecast: Automatic Code Generation for Atmospheric Modeling\"", "authors": ["R. van Engelen", " L. Wolters ", " G. Cats"]}, {"title": " \"A Knowledge-Based Prototyping Environment for Construction of Scientific Modeling Software\"", "authors": ["R. Keller", " M. Rimon ", " A. Das"]}, {"title": " \"A Formal Approach to Domain-Oriented Software Design Environments\"", "authors": ["M. Lowry", " A. Philpot", " T. Pressberger ", " I. Underwood"]}, {"title": " \"AutoBayes: A System for Generating Data Analysis Programs from Statistical Models\"", "authors": ["B. Fisher ", " J. Schumann"]}, {"title": " \"Synthesizing Customized Planners from Specifications\"", "authors": ["B. Srivastava ", " S. Kambhampati"]}, {"title": " \"Planware-Domain-Specific Synthesis of High-Performance Schedulers\"", "authors": ["L. Blaine", " L. Gilham", " J. Liu", " D. Smith ", " S. Westfold"]}, {"title": " \"Deductive Synthesis of Numerical Simulation Programs from Networks of Algebraic and Ordinary Differential Equations\"", "authors": ["T. Ellman ", " T. Murata"]}, {"title": " \"Meta-Amphion: Synthesis of Efficient Domain-Specific Program Synthesis Systems\"", "authors": ["M. Lowry ", " J. Van Baalen"]}, {"title": " \"A Transformation System for Interactive Reformulation of Design Optimization Strategies\"", "authors": ["T. Ellman", " J. Keane", " A. Banerjee ", " G. Armhold"]}]},
{"doi": "10.1109/ASE.2019.00022", "title": "RANDR: Record and Replay for Android Applications via Targeted Runtime Instrumentation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Conferences", "Software engineering"], "abstract": "The ability to repeat the execution of a program is a fundamental requirement in many areas of computing from computer system evaluation to software engineering. Reproducing executions of mobile apps, in particular, has proven difficult under real-life scenarios due to multiple sources of external inputs and interactive nature of the apps. Previous works that provide record/replay functionality for mobile apps are restricted to particular input sources (e.g., touchscreen events) and present deployment challenges due to intrusive modifications to the underlying software stack. Moreover, due to their reliance on record and replay of device specific events, the recorded executions cannot be reliably reproduced across different platforms. In this paper, we present a new practical approach, RandR, for record and replay of Android applications. RandR captures and replays multiple sources of input (i.e., UI and network) without requiring source code (OS or app), administrative device privileges, or any special platform support. RandR achieves these qualities by instrumenting a select set of methods at runtime within an application's own sandbox. In addition, to enable portability of recorded executions across different platforms for replay, RandR contextualizes UI events as interactions with particular UI components (e.g., a button) as opposed to relying on platform specific features (e.g., screen coordinates). We demonstrate RandR's accurate cross-platform record and replay capabilities using over 30 real-world Android apps across a variety of platforms including emulators as well as commercial off-the-shelf mobile devices deployed in real life.", "author": [{"name": "Onur Sahin", "affiliation": "Electrical and Computer Engineering Department, Boston University, Boston, MA, USA"}, {"name": "Assel Aliyeva", "affiliation": "Electrical and Computer Engineering Department, Boston University, Boston, MA, USA"}, {"name": "Hariharan Mathavan", "affiliation": "Electrical and Computer Engineering Department, Boston University, Boston, MA, USA"}, {"name": "Ayse Coskun", "affiliation": "Boston University, Boston, MA, USA"}, {"name": "Manuel Egele", "affiliation": "Electrical and Computer Engineering Department, Boston University, Boston, MA, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A structured approach to the simulation analysis and characterization of smartphone applications\"", "authors": ["D. Sunwoo", " W. Wang", " M. Ghosh", " C. Sudanthi", " G. Blake", " C. D. Emmons", " ."]}, {"title": " \"Integrated epu-gpu power management for 3d mobile games\"", "authors": ["A. Pathania", " Q. Jiao", " A. Prakash ", " T. Mitra"]}, {"title": " \"Crowd intelligence enhances automated mobile testing\"", "authors": ["K. Mao", " M. Harman ", " Y. Jia"]}, {"title": " \"Mobile epu\u2019s rise to power: Quantifying the impact of generational mobile epu design trends on performance energy and user satisfaction\"", "authors": ["M. Halpem", " Y. Zhu ", " V. J. Reddi"]}, {"title": " \"Versatile yet lightweight record-and-replay for android\"", "authors": ["Y. Hu", " T. Azim ", " I. Neamtiu"]}, {"title": " \"Mobiplay: A remote execution based record-and-replay tool for mobile applications\"", "authors": ["Z. Qin", " Y. Tang", " E. Novak ", " Q. Li"]}, {"title": " \"Engineering record and replay for deployability\"", "authors": ["R. O\u2019Callahan", " C. Jones", " N. Froyd", " K. Huey", " A. Noll ", " N. Partush"]}, {"title": " \"Pinplay: A framework for deterministic replay and reproducible analysis of parallel programs\"", "authors": ["H. Patil", " C. Pereira", " M. Stallcup", " G. Lueck ", " J. Cownie"]}, {"title": " \"A flight data recorder for enabling full-system multiprocessor deterministic replay\"", "authors": ["M. Xu", " R. Bodik ", " M. D. Hill"]}, {"title": " \"Record and replay for android: Are we there yet in industrial cases?\" in Foundations of Software Engineering", "authors": ["W. Lam", " Z. Wu", " D. Li", " W. Wang", " H. Zheng", " H. Luo", " ."]}, {"title": " \"Mosaic: cross-platform user-interaction record and replay for the fragmented android ecosystem\"", "authors": ["M. Halpem", " Y. Zhu", " R. Peri ", " V. J. Reddi"]}, {"title": " \"Reran: Timingand touch-sensitive record and replay for android\"", "authors": ["L. Gomez", " I. Neamtiu", " T. Azim ", " T. Millstein"]}, {"title": " \"Barista: A technique for recording encoding and running platform independent android tests\"", "authors": ["M. Fazzini", " E. N. D. A. Freitas", " S. R. Choudhary ", " A. Orso"]}, {"title": " \"Artdroid: A virtual-method hooking framework on android art runtime\" in IMPS@ESSoS", "authors": ["V. Costamagna ", " C. Zheng"]}, {"title": " \"Tackling runtime-based obfuscation in android with tiro\"", "authors": ["M. Y. Wong ", " D. Lie"]}, {"title": " \"Predictability of android openssl\u2019s pseudo random number generator\"", "authors": ["S. H. Kim", " D. Han ", " D. H. Lee"]}, {"title": " \"Doubleplay: Parallelizing sequential logging and replay\"", "authors": ["K. Veeraraghavan", " D. Lee", " B. Wester", " J. Ouyang", " P. M. Chen", " J. Flinn", " ."]}, {"title": " \"Obfuscation-resilient privacy leak detection for mobile apps through differential analysis\"", "authors": ["A. Continella", " Y. Fratantonio", " M. Lindorfer", " A. Puccetti", " A. Z", "", " C. Kruegel", " ."]}, {"title": " \"Moby: A mobile benchmark suite for architectural simulators\"", "authors": ["Y. Huang", " Z. Zha", " M. Chen ", " L. Zhang"]}, {"title": " \"Full-system analysis and characterization of interactive smartphone applications\"", "authors": ["A. Gutierrez", " R. G. Dreslinski", " T. F. Wenisch", " T. Mudge", " A. Saldi", " C. Emmons", " ."]}, {"title": " \"Reinforcement learning for android gui testing\"", "authors": ["D. Adamo", " M. K. Khan", " S. Koppula ", " R. Bryce"]}, {"title": " \"Automated model-based android gui testing using multi-level gui comparison criteria\"", "authors": ["Y. M. Baek ", " D.-H. Bae"]}, {"title": " \"Frauddroid: Automated ad fraud detection for android apps\"", "authors": ["F. Dong", " H. Wang", " L. Li", " Y. Guo", " T. F. Bissy", "\u00e9", " T. Liu", " ."]}, {"title": " \"Automated reporting of gui design violations for mobile apps\"", "authors": ["K. Moran", " B. Li", " C. Bemal-C\u00e2rdenas", " D. Jelf ", " D. Poshyvanyk"]}, {"title": " \"Automatically translating bug reports into test cases for mobile apps\"", "authors": ["M. Fazzini", " M. Prammer", " M. d'Amorim ", " A. Orso"]}, {"title": " \"Mahimahi: Accurate Record-and-Replay for HTTP\"", "authors": ["R. Netravali", " A. Sivaraman", " S. Das", " A. Goyal", " K. Winstein", " J. Mickens", " ."]}, {"title": " \"Bootstomp: On the security of bootloaders in mobile devices\"", "authors": ["N. Redini", " A. Machiry", " D. Das", " Y. Fratantonio", " A. Bianchi", " E. Gustafson", " ."]}]},
{"doi": "10.1109/ASE.2002.1114999", "title": "CpprofJ: aspect-capable call path profiling of multi-threaded Java applications", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Java", "Yarn", "Cost function", "Delay", "Design optimization", "Throughput", "Monitoring", "Testing", "Computer bugs", "Program processors"], "abstract": "A primary goal of program performance understanding tools is to focus the user's attention directly on optimization opportunities where significant cost savings may be found. Optimization opportunities fall into (at least) three broad categories: the call context of a general component may obviate the need for some of its generality; cross-cutting program aspects may be implemented suboptimally for the particular context of use; and thread dependencies may cause unintended delays. This paper enhances prior work in call path profiling in several ways. First, it provides two different call path oriented views on program performance, a server view and a thread view. The former helps one optimize for throughput, while the latter is useful for optimizing thread latency. The views incorporate a typed time notation for representing different program activities, such as monitor wait and thread preemption times. Second, the new framework allows aspect-oriented program profiling, even when the original program was not designed in an aspect oriented fashion. Finally, the approach is implemented in a tool, CPPROFJ, an aspect-capable call path profiler for Java. It exploits recent developments in the Java APIs to achieve accurate and portable sampling-based profiling. Three case studies illustrate its use.", "author": [{"name": "R.J. Hall", "affiliation": "AT and T Research Laboratories, Florham Park, NJ, USA"}], "time": "2002", "citationCount": "2", "references": [{"title": " \"Quartz: a tool for tuning parallel program performance\"", "authors": ["T. Anderson ", " E. Lazowska"]}, {"title": " \"Gprof: a call graph execution profiler\"", "authors": ["S. L. Graham", " P. B. Kessler ", " M. K. McKusick"]}, {"title": " \"Call path refinement profiles\"", "authors": ["R. J. Hall"]}, {"title": " \"Call path profiling of monotonic program resources in unix\"", "authors": ["R. J. Hall ", " A. J. Goldberg"]}, {"title": " \"Getting started with aspectj\"", "authors": ["G. Kiczales", " E. Hilsdale", " J. Hugunin", " M. Kersten", " J. Palm ", " W. Griswold"]}, {"title": " \"An empirical study of FORTRAN programs\"", "authors": ["D. E. Knuth"]}, {"title": " \"Efficient path profiling\"", "authors": ["J. Larus ", " T. Ball"]}]},
{"doi": "10.1109/ASE.2019.00023", "title": "MalScan: Fast Market-Wide Mobile Malware Scanning by Social-Network Centrality Analysis", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Malware", "Social networking (online)", "Feature extraction", "Semantics", "Analysis of variance", "Static analysis", "Robustness"], "abstract": "Malware scanning of an app market is expected to be scalable and effective. However, existing approaches use either syntax-based features which can be evaded by transformation attacks or semantic-based features which are usually extracted by performing expensive program analysis. Therefor, in this paper, we propose a lightweight graph-based approach to perform Android malware detection. Instead of traditional heavyweight static analysis, we treat function call graphs of apps as social networks and perform social-network-based centrality analysis to represent the semantic features of the graphs. Our key insight is that centrality provides a succinct and fault-tolerant representation of graph semantics, especially for graphs with certain amount of inaccurate information (e.g., inaccurate call graphs). We implement a prototype system, MalScan, and evaluate it on datasets of 15,285 benign samples and 15,430 malicious samples. Experimental results show that MalScan is capable of detecting Android malware with up to 98% accuracy under one second which is more than 100 times faster than two state-of-the-art approaches, namely MaMaDroid and Drebin. We also demonstrate the feasibility of MalScan on market-wide malware scanning by performing a statistical study on over 3 million apps. Finally, in a corpus of dataset collected from Google-Play app market, MalScan is able to identify 18 zero-day malware including malware samples that can evade detection of existing tools.", "author": [{"name": "Yueming Wu", "affiliation": "Cluster and Grid Computing Lab Services Computing Technology and System Lab, National Engineering Research Center for Big Data Technology and System"}, {"name": "Xiaodi Li", "affiliation": "University of Texas at Dallas"}, {"name": "Deqing Zou", "affiliation": "Cluster and Grid Computing Lab Services Computing Technology and System Lab, National Engineering Research Center for Big Data Technology and System"}, {"name": "Wei Yang", "affiliation": "University of Texas at Dallas"}, {"name": "Xin Zhang", "affiliation": "Cluster and Grid Computing Lab Services Computing Technology and System Lab, National Engineering Research Center for Big Data Technology and System"}, {"name": "Hai Jin", "affiliation": "Cluster and Grid Computing Lab Services Computing Technology and System Lab, National Engineering Research Center for Big Data Technology and System"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Using probabilistic generative models for ranking risks of android apps\"", "authors": ["H. Peng", " C. Gates", " B. Sarma", " N. Li", " Y. Qi", " R. Potharaju", " ."]}, {"title": " \"Droidapiminer: Mining api-level features for robust malware detection in android\"", "authors": ["Y. Aafer", " W. Du ", " H. Yin"]}, {"title": " \"Exploring permission-induced risk in android applications for malicious application detection\"", "authors": ["W. Wang", " X. Wang", " D. Feng", " J. Liu", " Z. Han ", " X. Zhang"]}, {"title": " \"Drebin: Effective and explainable detection of android malware in your pocket\"", "authors": ["D. Arp", " M. Spreitzenbarth", " M. Hubner", " H. Gascon", " K. Rieck ", " C. Siemens"]}, {"title": " \"Semantics-aware android malware classification using weighted contextual api dependency graphs\"", "authors": ["M. Zhang", " Y. Duan", " H. Yin ", " Z. Zhao"]}, {"title": " \"Apposcopy: Semanticsbased detection of android malware through static analysis\"", "authors": ["Y. Feng", " S. An", "", " I. Dillig ", " A. Aiken"]}, {"title": " \"Eight years of rider measurement in the android malware ecosystem: evolution and lessons learned\"", "authors": ["G. Suarez-Tangil ", " G. Stringhini"]}, {"title": " \"Mamadroid: Detecting android malware by building markov chains of behavioral models\"", "authors": ["E. Mariconti", " L. Onwuzurike", " P. Andriotis", " E. De Cristofaro", " G. Ross ", " G. Stringhini"]}, {"title": " \"Finding unknown malice in 10 seconds: Mass vetting for new threats at the google-play scale\"", "authors": ["K. Chen", " P. Wang", " Y. Lee", " X. Wang", " N. Zhang", " H. Huang", " ."]}, {"title": " \"Centrality in social networks conceptual clarification\"", "authors": ["L. C. Freeman"]}, {"title": " \"A new status index derived from sociometric analysis\"", "authors": ["L. Katz"]}, {"title": " \"Lethality and centrality in protein networks\"", "authors": ["H. Jeong", " S. P. Mason", " A.-L. Barab\u00e1si ", " Z. N. Oltvai"]}, {"title": " \"Co-authorship networks in the digital library research community\"", "authors": ["X. Liu", " J. Bollen", " M. L. Nelson ", " H. Van de Sompel"]}, {"title": " \"The worldwide air transportation network: Anomalous centrality community structure and cities\u2019 global roles\"", "authors": ["R. Guimera", " S. Mossa", " A. Turtschi ", " L. N. Amaral"]}, {"title": " \"It\u2019s not what you know-it\u2019s who you know that counts. analysing serious crime groups as social networks\"", "authors": ["N. Coles"]}, {"title": " \"Centrality in affiliation networks\"", "authors": ["K. Faust"]}, {"title": " \"Harmony in the small-world\"", "authors": ["M. Marchiori ", " V. Latora"]}, {"title": " \"A set of measures of centrality based on betweenness\"", "authors": ["L. C. Freeman"]}, {"title": " \"Percolation centrality: Quantifying graph-theoretic impact of nodes during percolation in networks\"", "authors": ["M. Piraveenan", " M. Prokopenko ", " L. Hossain"]}, {"title": " \"A study of xss worm propagation and detection mechanisms in online social networks\"", "authors": ["M. R. Faghani ", " U. T. Nguyen"]}, {"title": " \"Eigencentrality based on dissimilarity measures reveals central nodes in complex networks\"", "authors": ["A. Alvarez-Socorro", " G. Herrera-Almarza ", " L. Gonz\u00e1lez-D\u00edaz"]}, {"title": " \"Androzoo: Collecting millions of android apps for the research community\"", "authors": ["K. Allix", " T. F. Bissy", "\u00e9", " J. Klein ", " Y. Le Traon"]}, {"title": " \"Pscout: Analyzing the android permission specification\"", "authors": ["K. W. Y. Au", " Y. F. Zhou", " Z. Huang ", " D. Lie"]}, {"title": " \"Android hiv: A study of repackaging malware for evading machine-learning detection\"", "authors": ["X. Chen", " C. Li", " D. Wang", " S. Wen", " J. Zhang", " S. Nepal", " ."]}, {"title": " \"Android permissions: A perspective combining risks and benefits\"", "authors": ["B. P. Sarma", " N. Li", " C. Gates", " R. Potharaju", " C. Nita-Rotaru ", " I. Molloy"]}, {"title": " \"Hey you get off of my market: Detecting malicious apps in official and alternative android markets\"", "authors": ["Y. Zhou", " Z. Wang", " W. Zhou ", " X. Jiang"]}, {"title": " \"Significant permission identification for machine-learning-based android malware detection\"", "authors": ["J. Li", " L. Sun", " Q. Yan", " Z. Li", " W. Srisa-an ", " H. Ye"]}, {"title": " \"Appcontext: Differentiating malicious and benign mobile app behaviors using context\"", "authors": ["W. Yang", " X. Xiao", " B. Andow", " S. Li", " T. Xie ", " W. Enck"]}, {"title": " \"Improving accuracy of android malware detection with lightweight contextual awareness\"", "authors": ["J. Allen", " M. L", "en", " S. Chaba", " Y. Ji", " S. P. H. Chung ", " W. Lee"]}, {"title": " \"Enmobile: Entity-based characterization and analysis of mobile malware\"", "authors": ["W. Yang", " M. Prasad ", " T. Xie"]}, {"title": " \"Mining apps for abnormal usage of sensitive data\"", "authors": ["V. Avdiienko", " K. Kuznetsov", " A. Gorla", " A. Zeller", " S. Arzt", " S. Rasthofer", " ."]}, {"title": " \"Taintdroid: An informationflow tracking system for realtime privacy monitoring on smartphones\"", "authors": ["W. Enck", " P. Gilbert", " S. Han", " V. Tendulkar", " B.-G. Chun", " L. P. Cox", " ."]}, {"title": " \"Using loops for malware classification resilient to feature-unaware perturbations\"", "authors": ["A. Machiry", " N. Redini", " E. Gustafson", " Y. Fratantonio", " Y. R. Choe", " C. Kruegel", " ."]}, {"title": " \"Madam: Effective and efficient behavior-based android malware detection and prevention\"", "authors": ["A. Saracino", " D. Sg", "urra", " G. Dini ", " F. Martinelli"]}, {"title": " \"A multi-view context-aware approach to android malware detection and malicious code localization\"", "authors": ["A. Narayanan", " M. Ch", "ramohan", " L. Chen ", " Y. Liu"]}, {"title": " \"Automated synthesis of semantic malware signatures using maximum satisfiability\"", "authors": ["Y. Feng", " O. Bastani", " R. Martins", " I. Dillig ", " S. An"]}, {"title": " \"Lightweight obfuscationresilient detection and family identification of android malware\"", "authors": ["J. Garcia", " M. Hammad ", " S. Malek"]}, {"title": " \"Adversarial examples for malware detection\"", "authors": ["K. Grosse", " N. Papernot", " P. Manoharan", " M. Backes ", " P. McDaniel"]}]},
{"doi": "10.1109/ASE.2002.1115000", "title": "No Java without caffeine: A tool for dynamic analysis of Java programs", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Java", "Software algorithms", "Documentation", "Software maintenance", "Law", "Legal factors", "Electronic mail", "Performance analysis", "History", "Engines"], "abstract": "To understand the behavior of a program, a maintainer reads some code, asks a question about this code, conjectures an answer, and searches the code and the documentation for confirmation of her conjecture. However, the confirmation of the conjecture can be error-prone and time-consuming because the maintainer has only static information at her disposal. She would benefit from dynamic information. In this paper, we present Caffeine, an assistant that helps the maintainer in checking her conjecture about the behavior of a Java program. Our assistant is a dynamic analysis tool that uses the Java platform debug architecture to generate a trace, i.e., an execution history, and a Prolog engine to perform queries over the trace. We present a usage scenario based on the n-queens problem, and two real-life examples based on the Singleton design pattern and on the composition relationship.", "author": [{"name": "Y.-G. Gueheneuc", "affiliation": "Technology International, Ottawa, Canada"}, {"name": "R. Douence", "affiliation": "European project Easy-Comp, France"}, {"name": "N. Jussien", "affiliation": "Ecole des Mines de Nantes, France"}], "time": "2002", "citationCount": "8", "references": [{"title": " \"Instantiating and detecting design patterns: Putting bits and pieces together\"", "authors": ["H. Albin-Amiot", " P. Cointe", " Y.-G. Gu\u00e9h\u00e9neuc ", " N. Jussien"]}, {"title": " \"Java PathFinder \u2013 A second generation of a Java model checker\"", "authors": ["G. Brat", " K. Havelund", " S.-J. Park ", " W. Visser"]}, {"title": " \"Javassist \u2013 A reflection-based programming wizard for Java\"", "authors": ["S. Chiba"]}, {"title": " \"A formal evaluation of data flow path selection criteria\"", "authors": ["L. A. Clarke", " A. Podgurski", " D. J. Richardson ", " S. J. Zeil"]}, {"title": " \"Expressing checkable properties of dynamic systems: The Bandera specification language\"", "authors": ["J. Corbett", " M. Dwyer", " J. Hatcliff ", " Robby"]}, {"title": " \"HotSwap technology application for advanced profiling\"", "authors": ["M. Dimitriev"]}, {"title": " \"A debugger for C based on fine grained control flow and data events\"", "authors": ["M. Ducass\u00e9. Coca"]}, {"title": " \"An extendable trace analyser for Prolog\" in The Journal of Logic Programming", "authors": ["M. Ducass\u00e9. OPIUM"]}, {"title": " \"Test infected: Programmers love writing tests\"", "authors": ["E. Gamma ", " K. Beck"]}, {"title": " \"Bridging the gap between modeling and programming languages\"", "authors": ["Y.-G. Gu\u00e9h\u00e9neuc", " H. Albin-Amiot ", " R. Douence"]}, {"title": " \"No Java without Caffeine \u2013 A tool for dynamic analysis of Java programs\"", "authors": ["Y.-G. Gu\u00e9h\u00e9neucq", " H. Albin-Amiot ", " R. Douence"]}, {"title": " \"Synthesizing monitors for safety properties\"", "authors": ["K. Havelund ", " G. Gu\u00e9h\u00e9neuc"]}, {"title": " \"Forward checking in logic programming\"", "authors": ["P. V. Hentenryck ", " M. Dincbas"]}, {"title": " \"Interactive explanation of software systems\"", "authors": ["W. L. Johnson ", " A. Erdem"]}, {"title": " \"Dynamic query-based debugging\"", "authors": ["R. Lencevicius ", " A. K. Singh"]}, {"title": " \"Bridging the gulf between code and behavior in programming\"", "authors": ["H. Lieberman ", " C. Fry"]}, {"title": " \"Automated debugging in java using OCL and JD I\"", "authors": ["D. J. Murray ", " D. E. Parson"]}, {"title": " \"Dynamic weaving for aspect oriented programming\"", "authors": ["A. Popovici", " T. Gross ", " G. Alonso"]}, {"title": " \"Designing documentation to compensate for delocalized plans\"", "authors": ["E. Soloway", " J. Pinto", " S. Letovsky", " D. Littman ", " R. Lampert"]}, {"title": " \"Model checking programs\"", "authors": ["W. Visser", " K. Havelund", " G. Brat ", " S.-J. Park"]}, {"title": " \"Kava \u2013 A reflective Java based on bytecode rewriting\"", "authors": ["I. Welch ", " R. Stroud"]}]},
{"doi": "10.1109/ASE.2019.00024", "title": "Discovering, Explaining and Summarizing Controversial Discussions in Community Q&A Sites", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Documentation", "Message systems", "Information retrieval", "Programming", "Java", "Australia"], "abstract": "Developers often look for solutions to programming problems in community Q&A sites like Stack Overflow. Due to the crowdsourcing nature of these Q&A sites, many user-provided answers are wrong, less optimal or out-of-date. Relying on community-curated quality indicators (e.g., accepted answer, answer vote) cannot reliably identify these answer problems. Such problematic answers are often criticized by other users. However, these critiques are not readily discoverable when reading the posts. In this paper, we consider the answers being criticized and their critique posts as controversial discussions in community Q&A sites. To help developers notice such controversial discussions and make more informed choices of appropriate solutions, we design an automatic open information extraction approach for systematically discovering and summarizing the controversies in Stack Overflow and exploiting official API documentation to assist the understanding of the discovered controversies. We apply our approach to millions of java/android-tagged Stack overflow questions and answers and discover a large scale of controversial discussions in Stack Overflow. Our manual evaluation confirms that the extracted controversy information is of high accuracy. A user study with 18 developers demonstrates the usefulness of our generated controversy summaries in helping developers avoid the controversial answers and choose more appropriate solutions to programming questions.", "author": [{"name": "Xiaoxue Ren", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Zhenchang Xing", "affiliation": "Research School of Computer Science, Australian National University, Canberra, Australia"}, {"name": "Xin Xia", "affiliation": "Faculty of Information Technology, Monash University, Melbourne, Australia"}, {"name": "Guoqiang Li", "affiliation": "School of Software, Shanghai Jiao Tong University, Shanghai, China"}, {"name": "Jianling Sun", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Evaluating and predicting answer quality in community qa\"", "authors": ["C. Shah ", " J. Pomerantz"]}, {"title": " \"An empirical study of obsolete answers on stack overflow\"", "authors": ["H. Zhang", " S. Wang", " T.-H. P. Chen", " Y. Zou ", " A. E. Hassan"]}, {"title": " \"The good the bad and their kins: Identifying questions with negative scores in stackoverflow\"", "authors": ["P. Arora", " D. Ganguly ", " G. J. Jones"]}, {"title": " \"Detecting high-quality posts in community question answering sites\"", "authors": ["Y. Yao", " H. Tong", " T. Xie", " L. Akoglu", " F. Xu ", " J. Lu"]}, {"title": " \"Improving api caveats accessibility by mining api caveats knowledge graph\"", "authors": ["H. Li", " S. Li", " J. Sun", " Z. Xing", " X. Peng", " M. Liu", " ."]}, {"title": " \"Knowledge derived from wikipedia for computing semantic relatedness\"", "authors": ["S. P. Ponzetto ", " M. Strube"]}, {"title": " \"The stanford corenlp natural language processing toolkit\"", "authors": ["C. Manning", " M. Surdeanu", " J. Bauer", " J. Finkel", " S. Bethard ", " D. McClosky"]}, {"title": " \"Learning to extract api mentions from informal natural language discussions\"", "authors": ["D. Ye", " Z. Xing", " C. Y. Foo", " J. Li ", " N. Kapre"]}, {"title": " \"Textrank: Bringing order into text\"", "authors": ["R. Mihalcea ", " P. Tarau"]}, {"title": " \"An n\u02c65/2 algorithm for maximum matchings in bipartite graphs\"", "authors": ["J. E. Hopcroft ", " R. M. Karp"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"Efficient estimation of word representations in vector space\"", "authors": ["T. Mikolov", " K. Chen", " G. Corrado ", " J. Dean"]}, {"title": " \"Distributional structure\"", "authors": ["Z. S. Harris"]}, {"title": " \"word2vec explained: deriving mikolov et al.\u2019s negative-sampling word-embedding method\"", "authors": ["Y. Goldberg ", " O. Levy"]}, {"title": " \"Learning a dual-language vector space for domain-specific cross-lingual question retrieval\"", "authors": ["G. Chen", " C. Chen", " Z. Xing ", " B. Xu"]}, {"title": " \"Using tf-idf to hide sensitive itemsets\"", "authors": ["T. Hong", " C. Lin", " K. Yang ", " S. Wang"]}, {"title": " \"An application of hierarchical kappatype statistics in the assessment of majority agreement among multiple observers\"", "authors": ["J. R. L", "is "]}, {"title": " \"Individual comparisons by ranking methods\"", "authors": ["F. Wilcoxon"]}, {"title": " \"Live api documentation\"", "authors": ["S. Subramanian", " L. Inozemtseva ", " R. Holmes"]}, {"title": " \"Automatic documentation generation via source code summarization of method context\"", "authors": ["P. W. McBurney ", " C. McMillan"]}, {"title": " \"Rosf: Leveraging information retrieval and supervised learning for recommending code snippets\"", "authors": ["H. Jiang", " L. Nie", " Z. Sun", " Z. Ren", " W. Kong", " T. Zhang", " ."]}, {"title": " \"On mining crowd-based speech documentation\"", "authors": ["P. Moslehi", " B. Adams ", " J. Rilling"]}, {"title": " \"Leveraging crowd knowledge for software comprehension and development\"", "authors": ["L. Ponzanelli", " A. Bacchelli ", " M. Lanza"]}, {"title": " \"Recovering traceability links between an api and its learning resources\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Learning embeddings of api tokens to facilitate deep learning based program processing\"", "authors": ["Y. Lu", " G. Li", " R. Miao ", " Z. Jin"]}, {"title": " \"Api method recommendation without worrying about the task-api knowledge gap\"", "authors": ["Q. Huang", " X. Xia", " Z. Xing", " D. Lo ", " X. Wang"]}, {"title": " \"Answerbot: Automated generation of answer summary to developers\u2019 technical questions\"", "authors": ["B. Xu", " Z. Xing", " X. Xia ", " D. Lo"]}, {"title": " \"Tell them apart: distilling technology differences from crowd-scale comparison discussions\"", "authors": ["Y. Huang", " C. Chen", " Z. Xing", " T. Lin ", " Y. Liu"]}, {"title": " \"Determinants of quality latency and amount of stack overflow answers about recent android apis\"", "authors": ["D. Kavaler ", " V. Filkov"]}, {"title": " \"Unsupervised software-specific morphological forms inference from informal discussions\"", "authors": ["C. Chen", " Z. Xing ", " X. Wang"]}, {"title": " \"Similartech: Automatically recommend analogical libraries across different programming languages\"", "authors": ["C. Chen ", " Z. Xing"]}, {"title": " \"Mining likely analogical apis across third-party libraries via large-scale unsupervised api semantics embedding\"", "authors": ["C. Chen", " Z. Xing", " Y. Liu ", " K. L. X. Ong"]}, {"title": " \"Semantics-based code search\"", "authors": ["S. P. Reiss"]}, {"title": " \"Code completion with statistical language models\"", "authors": ["V. Raychev", " M. Vechev ", " E. Yahav"]}, {"title": " \"Feature location in source code: a taxonomy and survey\"", "authors": ["B. Dit", " M. Revelle", " M. Gethers ", " D. Poshyvanyk"]}, {"title": " \"How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms\"", "authors": ["A. Panichella", " B. Dit", " R. Oliveto", " M. Di Penta", " D. Poshyvanyk ", " A. De Lucia"]}]},
{"doi": "10.1109/ASE.2002.1115003", "title": "Constructing CORBA-supported oracles for testing: a case study in automated software testing", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software testing", "Automatic testing", "Computer aided software engineering", "Formal specifications", "Application software", "System testing", "Computer languages", "Software reliability", "Java", "Access control"], "abstract": "As the complexity of applications and therefore of their testing process grows, the importance of automating the testing activity increases. The testing process includes test case generation, test sequencing, oracle construction, test execution and result interpretation. Automatic generation of test cases from formal specifications has received considerable attention. Relatively little work has been reported, however, on constructing oracles for supporting efficient and automatic execution of such test cases. We present a technique for constructing a CORBA-supported VDM oracle for black-box testing starting from a VDM-SL specification. This specification is used to automatically verify the results of operations implemented in a high-level programming language. We present a case study of the technique applied to a Java application for generic access control. The technique is applicable to any CORBA-compliant programming language.", "author": [{"name": "P. Fenkam", "affiliation": "Distributed Systems Group, Technical University of of Vienna, Vienna, Austria"}, {"name": "H. Gall", "affiliation": "Distributed Systems Group, Technical University of of Vienna, Vienna, Austria"}, {"name": "M. Jazayeri", "affiliation": "Distributed Systems Group, Technical University of of Vienna, Vienna, Austria"}], "time": "2002", "citationCount": "3", "references": [{"title": " \"A Lightweight Approach to Formal Methods\"", "authors": ["S. Agerholm ", " P. G. Larsen"]}, {"title": " \"Formal Specification and Validation at Work: a Case Study in Using VDMSL\"", "authors": ["S. Agerholm", " P. J. Lecoeur ", " E. Reichert"]}, {"title": " \"Automated Black-box Testing with VDM Oracles\"", "authors": ["B. K. Aichernig"]}, {"title": " \"The Application of Formal Methods to the Assessment of High Integrity Software\"", "authors": ["R. Bloomfield ", " P. Froome"]}, {"title": " \"Why correctness must be a mathematical concern\" in The Correctness Problem in Computer Science", "authors": ["E. W. Dijkstra"]}, {"title": " \"Towards an Access Control System for Mobile Peer-to-Peer Collaborative Environments\"", "authors": ["P. Fenkam", " S. Dutsdar", " H. Gall", " G. Reif ", " E. Kirda"]}, {"title": " \"Visual Requirements Validation: Case Study in a Corba-Supported Environment\"", "authors": ["P. Fenkam", " H. Gall ", " M. Jazayeri"]}, {"title": " \"Dynamic User Management System for Web Sites\"", "authors": ["P. C. Fenkam"]}, {"title": " \"GMD-IPSI XQL Engine Tutorial\"", "authors": ["G. Huck ", " I. Macherius"]}, {"title": " \"A Web-based Peer-to-Peer Architecture for Collaborative Nomadic Working\"", "authors": ["E. Kirda", " G. Reif", " H. Gall ", " P. Fenkam"]}, {"title": " \"An Overview of the ISO/VDMSL Standard\" in ACM SIGPLAN Notices", "authors": ["N. Plat ", " P. G. Larsen"]}, {"title": " \"Specification-based Test Oracles for Reactive systems\"", "authors": ["D. J. Richardson", " S. Leif-Aha ", " T. O'Malley"]}, {"title": " \"The Design of XQL\"", "authors": ["J. Robie"]}, {"title": "\"The VDM Tool Group and The Institute of Applied Computer Science\"", "authors": []}, {"title": " \"Test Case Preparation Using a Prototype\"", "authors": ["H. Treharne", " J. Draper ", " S. Schneider"]}, {"title": "\"Extensible Markup Language\"", "authors": []}, {"title": "\"The Document Object Model Level 2 Specification\"", "authors": []}]},
{"doi": "10.1109/ASE.2019.00025", "title": "Automating App Review Response Generation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Decoding", "Recurrent neural networks", "Google", "User experience", "Task analysis", "Predictive models"], "abstract": "Previous studies showed that replying to a user review usually has a positive effect on the rating that is given by the user to the app. For example, Hassan et al. found that responding to a review increases the chances of a user updating their given rating by up to six times compared to not responding. To alleviate the labor burden in replying to the bulk of user reviews, developers usually adopt a template-based strategy where the templates can express appreciation for using the app or mention the company email address for users to follow up. However, reading a large number of user reviews every day is not an easy task for developers. Thus, there is a need for more automation to help developers respond to user reviews. Addressing the aforementioned need, in this work we propose a novel approach RRGen that automatically generates review responses by learning knowledge relations between reviews and their responses. RRGen explicitly incorporates review attributes, such as user rating and review length, and learns the relations between reviews and corresponding responses in a supervised way from the available training data. Experiments on 58 apps and 309,246 review-response pairs highlight that RRGen outperforms the baselines by at least 67.4% in terms of BLEU-4 (an accuracy measure that is widely used to evaluate dialogue response generation systems). Qualitative analysis also confirms the effectiveness of RRGen in generating relevant and accurate responses.", "author": [{"name": "Cuiyun Gao", "affiliation": "Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Jichuan Zeng", "affiliation": "Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Xin Xia", "affiliation": "Faculty of Information Technology, Monash University, Australia"}, {"name": "David Lo", "affiliation": "School of Information Systems, Singapore Management University, Singapore"}, {"name": "Michael R. Lyu", "affiliation": "Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Irwin King", "affiliation": "Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": "\"Survey on user ratings and reviews\"", "authors": []}, {"title": " \"Online app review analysis for identifying emerging issues\"", "authors": ["C. Gao", " J. Zeng", " M. R. Lyu ", " I. King"]}, {"title": " \"What would users change in my app? summarizing app reviews for recommending software changes\"", "authors": ["A. Di Sorbo", " S. Panichella", " C. V. Alex", "ru", " J. Shimagaki", " C. A. Visaggio", " G. Canfora", " ."]}, {"title": " \"Facilitating developer-user interactions with mobile app review digests\"", "authors": ["J. Oh", " D. Kim", " U. Lee", " J. Lee ", " J. Song"]}, {"title": " \"Is it worth responding to reviews? studying the top free apps in google play\"", "authors": ["S. McIlroy", " W. Shang", " N. Ali ", " A. E. Hassan"]}, {"title": " \"Studying the dialogue between users and developers of free apps in the google play store\"", "authors": ["S. Hassan", " C. Tantithamthavorn", " C. Bezemer ", " A. E. Hassan"]}, {"title": " \"Essmart way to manage user requests\"", "authors": ["M. Nayebi", " L. Dicke", " R. Ittyipe", " C. Carlson ", " G. Ruhe"]}, {"title": " \"Steering output style and topic in neural response generation\"", "authors": ["D. Wang", " N. Jojic", " C. Brockett ", " E. Nyberg"]}, {"title": " \"A syntactically constrained bidirectional-asynchronous approach for emotional conversation generation\"", "authors": ["J. Li ", " X. Sun"]}, {"title": " \"A neural network approach to context-sensitive generation of conversational responses\"", "authors": ["A. Sordoni", " M. Galley", " M. Auli", " C. Brockett", " Y. Ji", " M. Mitchell", " ."]}, {"title": " \"The design and implementation of xiaoice an empathetic social chatbot\"", "authors": ["L. Zhou", " J. Gao", " D. Li ", " H. Shum"]}, {"title": " \"Learning phrase representations using RNN encoder-decoder for statistical machine translation\"", "authors": ["K. Cho", " B. van Merrienboer", " \u00c7. G\u00fcl\u00e7ehre", " D. Bahdanau", " F. Bougares", " H. Schwenk", " ."]}, {"title": " \"Sequence to sequence learning with neural networks\"", "authors": ["I. Sutskever", " O. Vinyals ", " Q. V. Le"]}, {"title": " \"Deep API learning\"", "authors": ["X. Gu", " H. Zhang", " D. Zhang ", " S. Kim"]}, {"title": " \"Language to logical form with neural attention\"", "authors": ["L. Dong ", " M. Lapata"]}, {"title": " \"Towards automatic generation of short summaries of commits\"", "authors": ["S. Jiang ", " C. McMillan"]}, {"title": " \"Automatically generating commit messages from diffs using neural machine translation\"", "authors": ["S. Jiang", " A. Armaly ", " C. McMillan"]}, {"title": " \"Deep learning type inference\"", "authors": ["V. J. Hellendoorn", " C. Bird", " E. T. Barr ", " M. Allamanis"]}, {"title": " \"Numeric rating of apps on google play store by sentiment analysis on user reviews\"", "authors": ["M. R. Islam"]}, {"title": " \"Review spam detector with rating consistency check\"", "authors": ["K. Sharma ", " K. Lin"]}, {"title": " \"Neural-machine-translation-based commit message generation: how far are we?\"", "authors": ["Z. Liu", " X. Xia", " A. E. Hassan", " D. Lo", " Z. Xing ", " X. Wang"]}, {"title": " \"An information retrieval approach to short text conversation\"", "authors": ["Z. Ji", " Z. Lu ", " H. Li"]}, {"title": " \"An ensemble of retrieval-based and generation-based human-computer conversation systems\"", "authors": ["Y. Song", " C. Li", " J. Nie", " M. Zhang", " D. Zhao ", " R. Yan"]}, {"title": " \"Bleu: a method for automatic evaluation of machine translation\"", "authors": ["K. Papineni", " S. Roukos", " T. Ward ", " W. Zhu"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\".", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Links between perceptrons mlps and svms\"", "authors": ["R. Collobert ", " S. Bengio"]}, {"title": " \"Effective approaches to attention-based neural machine translation\"", "authors": ["T. Luong", " H. Pham ", " C. D. Manning"]}, {"title": " \"Bug report feature request or simply praise? on automatically classifying app reviews\"", "authors": ["W. Maalej ", " H. Nabil"]}, {"title": " \"Sequence to sequence learning with neural networks\"", "authors": ["I. Sutskever", " O. Vinyals ", " Q. V. Le"]}, {"title": " \"Recurrent neural network based language model\"", "authors": ["T. Mikolov", " M. Kara\ufb01\u00e1t", " L. Burget", " J. Cernock\u00fd ", " S. Khudanpur"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"A neural attention model for abstractive sentence summarization\"", "authors": ["A. M. Rush", " S. Chopra ", " J. Weston"]}, {"title": " \"A structured self-attentive sentence embedding\"", "authors": ["Z. Lin", " M. Feng", " C. N. dos Santos", " M. Yu", " B. Xiang", " B. Zhou", " ."]}, {"title": " \"Topic memory networks for short text classi\ufb01cation\"", "authors": ["J. Zeng", " J. Li", " Y. Song", " C. Gao", " M. R. Lyu ", " I. King"]}, {"title": " \"Ar-miner: mining informative reviews for developers from mobile app marketplace\"", "authors": ["N. Chen", " J. Lin", " S. C. Hoi", " X. Xiao ", " B. Zhang"]}, {"title": " \"How do users like this feature? a \ufb01ne grained sentiment analysis of app reviews\"", "authors": ["E. Guzman ", " W. Maalej"]}, {"title": " \"Sentiment in short strength detection informal text\"", "authors": ["M. Thelwall", " K. Buckley", " G. Paltoglou", " D. Cai ", " A. Kappas"]}, {"title": " \"Training feedforward neural networks using genetic algorithms\"", "authors": ["D. J. Montana ", " L. Davis"]}, {"title": " \"Wordnet: A lexical database for english\"", "authors": ["G. A. Miller"]}, {"title": " \"Empirical evaluation of gated recurrent neural networks on sequence modeling\"", "authors": ["J. Chung", " \u00c7. G\u00fcl\u00e7ehre", " K. Cho ", " Y. Bengio"]}, {"title": " \"Investigating gated recurrent networks for speech synthesis\"", "authors": ["Z. Wu ", " S. King"]}, {"title": "\"Glove: Global vectors for word representation\"", "authors": []}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}, {"title": "\"Pytorch\"", "authors": []}, {"title": " \"App store mining and analysis: MSR for app stores\"", "authors": ["M. Harman", " Y. Jia ", " Y. Zhang"]}, {"title": "\"App annie\"", "authors": []}, {"title": " \"Experience report: Understanding cross-platform app issues from user reviews\"", "authors": ["Y. Man", " C. Gao", " M. R. Lyu ", " J. Jiang"]}, {"title": " \"Mining user opinions in mobile app reviews: A keyword-based approach (T)\"", "authors": ["P. M. Vu", " T. T. Nguyen", " H. V. Pham ", " T. T. Nguyen"]}, {"title": " \"How NOT to evaluate your dialogue system: An empirical study of unsupervised evaluation metrics for dialogue response generation\"", "authors": ["C. Liu", " R. Lowe", " I. Serban", " M. Noseworthy", " L. Charlin ", " J. Pineau"]}, {"title": " \"A syntactic neural model for general-purpose code generation\"", "authors": ["P. Yin ", " G. Neubig"]}, {"title": " \"Knowledge diffusion for neural dialogue generation\"", "authors": ["S. Liu", " H. Chen", " Z. Ren", " Y. Feng", " Q. Liu ", " D. Yin"]}, {"title": " \"Individual comparisons by ranking methods\"", "authors": ["F. Wilcoxon"]}, {"title": " \"Effect sizes for research: A broad application approach\"", "authors": ["S. E. Ahmed"]}, {"title": " \"Harvesting paragraph-level question-answer pairs from wikipedia\"", "authors": ["X. Du ", " C. Cardie"]}, {"title": " \"Practitioners\u2019 expectations on automated fault localization\"", "authors": ["P. S. Kochhar", " X. Xia", " D. Lo ", " S. Li"]}, {"title": " \"Ar-tracker: Track the dynamics of mobile apps via user review mining\"", "authors": ["C. Gao", " H. Xu", " J. Hu ", " Y. Zhou"]}, {"title": "\"Developers can \ufb01nally respond to app store reviews\"", "authors": []}, {"title": " \"A benchmark study on sentiment analysis for software engineering research\"", "authors": ["N. Novielli", " D. Girardi ", " F. Lanubile"]}, {"title": " \"Are students representatives of professionals in software engineering experiments?\"", "authors": ["I. Salman", " A. T. Misirli ", " N. J. Juzgado"]}, {"title": " \"Four commentaries on the use of students and professionals in empirical software engineering experiments\"", "authors": ["R. Feldt", " T. Zimmermann", " G. R. Bergersen", " D. Falessi", " A. Jedlitschka", " N. Juristo", " ."]}, {"title": " \"Recommending and localizing change requests for mobile apps based on user reviews\"", "authors": ["F. Palomba", " P. Salza", " A. Ciurumelea", " S. Panichella", " H. Gall", " F. Ferrucci", " ."]}, {"title": " \"Exploring the integration of user feedback in automated testing of android applications\"", "authors": ["G. Grano", " A. Ciurumelea", " S. Panichella", " F. Palomba ", " H. C. Gall"]}, {"title": " \"Emerging app issue identi\ufb01cation from user feedback: experience on wechat\"", "authors": ["C. Gao", " W. Zheng", " Y. Deng", " D. Lo", " J. Zeng", " M. R. Lyu", " ."]}, {"title": " \"What are you complaining about?: a study of online reviews of mobile applications\"", "authors": ["C. Iacob", " V. Veerappa ", " R. Harrison"]}, {"title": " \"Retrieving and analyzing mobile apps feature requests from online reviews\"", "authors": ["C. Iacob ", " R. Harrison"]}, {"title": " \"\u201dwhat parts of your apps are loved by users?\u201d (T)\"", "authors": ["X. Gu ", " S. Kim"]}, {"title": " \"A survey of app store analysis for software engineering\"", "authors": ["W. Martin", " F. Sarro", " Y. Jia", " Y. Zhang ", " M. Harman"]}, {"title": " \"What you say and how you say it: Joint modeling of topics and discourse in microblog conversations\"", "authors": ["J. Zeng", " J. Li", " Y. He", " C. Gao", " M. R. Lyu ", " I. King"]}, {"title": " \"Evaluating conversational characters created through question generation\"", "authors": ["G. Chen", " E. Tosch", " R. Artstein", " A. Leuski ", " D. R. Traum"]}, {"title": " \"Data-driven response generation in social media\"", "authors": ["A. Ritter", " C. Cherry ", " W. B. Dolan"]}, {"title": " \"A neural conversational model\"", "authors": ["O. Vinyals ", " Q. V. Le"]}, {"title": " \"Moses: Open source toolkit for statistical machine translation\"", "authors": ["P. Koehn", " H. Hoang", " A. Birch", " C. Callison-Burch", " M. Federico", " N. Bertoldi", " ."]}, {"title": " \"A vector space model for automatic indexing\"", "authors": ["G. Salton", " A. Wong ", " C. Yang"]}]},
{"doi": "10.1109/ASE.2002.1115007", "title": "Generating test data for functions with pointer inputs", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Testing", "Data structures", "Force control", "Tree data structures", "Computer science", "Shape control", "Iterative methods", "Relaxation methods", "Input variables", "Binary trees"], "abstract": "Generating test inputs for a path in a function with integer and real parameters is an important but difficult problem. The problem becomes more difficult when pointers are passed as inputs to a function. In this case, the shape of the input data structure as well as the data values in the fields of this data structure need to be determined for traversal of the given path. The existing techniques to address this problem are inefficient since they use backtracking to simultaneously satisfy the constraints on the pointer variables and the data values used along the path. In this paper, we develop a novel approach that allows the generation of the shape of an input data structure to be done independently of the generation of its data values so as to force the control flow of a function along a given path. We also present a new technique that generates the shape of the input data structure by solving a set of pointer constraints derived in a single pass of the statements along the path. Although simple, our approach is powerful in handling pointer aliasing. It is efficient and provides a practical solution to generating test data for functions with pointer inputs.", "author": [{"name": "S. Visvanathan", "affiliation": "Department of Computer Science, University of Arizona Tucson, Tucson, AZ, USA"}, {"name": "N. Gupta", "affiliation": "Department of Computer Science, University of Arizona Tucson, Tucson, AZ, USA"}], "time": "2002", "citationCount": "17", "references": [{"title": " \"A System to Generate Test Data and Symbolically Execute Programs\"", "authors": ["L.A. Clarke"]}, {"title": " \"Constraint-based Automatic Test Data Generation\"", "authors": ["R.A. DeMillo ", " A.J. Offutt"]}, {"title": " \"ADTEST: A Test Data Generation Suite for Ada Software Systems\"", "authors": ["M.J. Gallagher ", " V.L. Narsimhan"]}, {"title": " \"Automatic Test Data Generation using Constraint Solving Techniques\"", "authors": ["A. Gotlieb", " B. Botella ", " M. Rueher"]}, {"title": " \"Automated Test Data Generation using An Iterative Relaxation Method\"", "authors": ["N. Gupta", " A. P. Mathur ", " M. L. Soffa"]}, {"title": " \"UNA Based Iterative Test Data Generation and its Evaluation\"", "authors": ["N. Gupta", " A. P. Mathur ", " M. L. Soffa"]}, {"title": " \"Automated Software Test Data Generation\"", "authors": ["B. Korel"]}, {"title": " \"A Dynamic Approach of Test Data Generation\"", "authors": ["B. Korel"]}]},
{"doi": "10.1109/ASE.2019.00026", "title": "Automatic Generation of Pull Request Descriptions", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Decoding", "Training", "Task analysis", "Generators", "Software", "Measurement", "Writing"], "abstract": "Enabled by the pull-based development model, developers can easily contribute to a project through pull requests (PRs). When creating a PR, developers can add a free-form description to describe what changes are made in this PR and/or why. Such a description is helpful for reviewers and other developers to gain a quick understanding of the PR without touching the details and may reduce the possibility of the PR being ignored or rejected. However, developers sometimes neglect to write descriptions for PRs. For example, in our collected dataset with over 333K PRs, more than 34% of the PR descriptions are empty. To alleviate this problem, we propose an approach to automatically generate PR descriptions based on the commit messages and the added source code comments in the PRs. We regard this problem as a text summarization problem and solve it using a novel sequence-to-sequence model. To cope with out-of-vocabulary words in software artifacts and bridge the gap between the training loss function of the sequence-to-sequence model and the evaluation metric ROUGE, which has been shown to correspond to human evaluation, we integrate the pointer generator and directly optimize for ROUGE using reinforcement learning and a special loss function. We build a dataset with over 41K PRs and evaluate our approach on this dataset through ROUGE and a human evaluation. Our evaluation results show that our approach outperforms two baselines by significant margins.", "author": [{"name": "Zhongxin Liu", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Xin Xia", "affiliation": "Faculty of Information Technology, Monash University, Melbourne, Australia"}, {"name": "Christoph Treude", "affiliation": "School of Computer Science, University of Adelaide, Adelaide, Australia"}, {"name": "David Lo", "affiliation": "School of Information Systems, Singapore Management University, Singapore, Singapore"}, {"name": "Shanping Li", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Cohesive and isolated development with branches\"", "authors": ["E. T. Barr", " C. Bird", " P. C. Rigby", " A. Hindle", " D. M. German ", " P. Devanbu"]}, {"title": " \"An exploratory study of the pull-based software development model\"", "authors": ["G. Gousios", " M. Pinzger ", " A. v. Deursen"]}, {"title": " \"Work practices and challenges in pull-based development: The contributor\u2019s perspective\"", "authors": ["G. Gousios", " M.-A. Storey ", " A. Bacchelli"]}, {"title": " \"Wait for it: Determinants of pull request evaluation latency on github\"", "authors": ["Y. Yu", " H. Wang", " V. Filkov", " P. Devanbu ", " B. Vasilescu"]}, {"title": " \"Early prediction of merged code changes to prioritize reviewing tasks\"", "authors": ["Y. Fan", " X. Xia", " D. Lo ", " S. Li"]}, {"title": " \"Reviewer recommender of pull-requests in github\"", "authors": ["Y. Yu", " H. Wang", " G. Yin ", " C. X. Ling"]}, {"title": " \"Automatically documenting program changes\"", "authors": ["R. P. Buse ", " W. R. Weimer"]}, {"title": " \"Changescribe: A tool for automatically generating commit messages\"", "authors": ["M. Linares-V\u00e1squez", " L. F. Cort\u00e9s-Coy", " J. Aponte ", " D. Poshyvanyk"]}, {"title": " \"Automatically generating commit messages from diffs using neural machine translation\"", "authors": ["S. Jiang", " A. Armaly ", " C. McMillan"]}, {"title": " \"Neural-machine-translation-based commit message generation: How far are we?\"", "authors": ["Z. Liu", " X. Xia", " A. E. Hassan", " D. Lo", " Z. Xing ", " X. Wang"]}, {"title": " \"Automatic generation of release notes\"", "authors": ["L. Moreno", " G. Bavota", " M. Di Penta", " R. Oliveto", " A. Marcus ", " G. Canfora"]}, {"title": " \"Arena: An approach for the automated generation of release notes\"", "authors": ["L. Moreno", " G. Bavota", " M. Di Penta", " R. Oliveto", " A. Marcus ", " G. Canfora"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\"", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Rouge: A package for automatic evaluation of summaries\"", "authors": ["C.-Y. Lin"]}, {"title": " \"Get to the point: Summarization with pointer-generator networks\"", "authors": ["A. See", " P. J. Liu ", " C. D. Manning"]}, {"title": " \"Self-critical sequence training for image captioning\"", "authors": ["S. J. Rennie", " E. Marcheret", " Y. Mroueh", " J. Ross ", " V. Goel"]}, {"title": " \"A deep reinforced model for abstractive summarization\"", "authors": ["R. Paulus", " C. Xiong ", " R. Socher"]}, {"title": " \"Lexrank: Graph-based lexical centrality as salience in text summarization\"", "authors": ["G. Erkan ", " D. R. Radev"]}, {"title": " \"Sequence level training with recurrent neural networks\"", "authors": ["M. Ranzato", " S. Chopra", " M. Auli ", " W. Zaremba"]}, {"title": " \"Curating github for engineered software projects\"", "authors": ["N. Munaiah", " S. Kroh", " C. Cabrey ", " M. Nagappan"]}, {"title": "\"Natural language toolkit nltk 3.4.1 documentation\"", "authors": []}, {"title": " \"Choosing an nlp library for analyzing software documentation: A systematic literature review and a series of experiments\"", "authors": ["F. N. A. Al Omran ", " C. Treude"]}, {"title": "\"pyrouge 0.1.3\"", "authors": []}, {"title": " \"The pagerank citation ranking: Bringing order to the web\"", "authors": ["L. Page", " S. Brin", " R. Motwani ", " T. Winograd"]}, {"title": " \"Deep code comment generation\"", "authors": ["X. Hu", " G. Li", " X. Xia", " D. Lo ", " Z. Jin"]}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}, {"title": "\"Our replication package\"", "authors": []}, {"title": "\"Our source code\"", "authors": []}, {"title": " \"Im-proving automatic source code summarization via deep reinforcement learning\"", "authors": ["Y. Wan", " Z. Zhao", " M. Yang", " G. Xu", " H. Ying", " J. Wu", " ."]}, {"title": " \"Individual comparisons by ranking methods\"", "authors": ["F. Wilcoxon"]}, {"title": " \"Dynamic inference of change contracts\"", "authors": ["T.-D. B. Le", " J. Yi", " D. Lo", " F. Thung ", " A. Roychoudhury"]}, {"title": " \"On automatically generating commit messages via summarization of source code changes\"", "authors": ["L. F. Cort\u00e9s-Coy", " M. Linares-V\u00e1squez", " J. Aponte ", " D. Poshyvanyk"]}, {"title": " \"On automatic summarization of what and why information in source code changes\"", "authors": ["J. Shen", " X. Sun", " B. Li", " H. Yang ", " J. Hu"]}, {"title": " \"Why did this code change?\"", "authors": ["S. Rastkar ", " G. C. Murphy"]}, {"title": " \"An empirical study of software release notes\"", "authors": ["S. L. Abebe", " N. Ali ", " A. E. Hassan"]}, {"title": " \"Automated classification of software change messages by semi-supervised latent dirichlet allocation\"", "authors": ["Y. Fu", " M. Yan", " X. Zhang", " L. Xu", " D. Yang ", " J. D. Kymer"]}, {"title": " \"Automatically classifying software changes via discriminative topic model: Supporting multi-category and cross-project\"", "authors": ["M. Yan", " Y. Fu", " X. Zhang", " D. Yang", " L. Xu ", " J. D. Kymer"]}, {"title": " \"An insight into the pull requests of github\"", "authors": ["M. M. Rahman ", " C. K. Roy"]}, {"title": " \"Influence of social and technical factors for evaluating contribution in github\"", "authors": ["J. Tsay", " L. Dabbish ", " J. Herbsleb"]}, {"title": " \"Work practices and challenges in pull-based development: The integrator\u2019s perspective\"", "authors": ["G. Gousios", " A. Zaidman", " M.-A. Storey ", " A. Van Deursen"]}, {"title": " \"Automatically prioritizing pull requests\"", "authors": ["E. Van Der Veen", " G. Gousios ", " A. Zaidman"]}, {"title": " \"Automatically recommending peer reviewers in modern code review\"", "authors": ["M. B. Zanjani", " H. Kagdi ", " C. Bird"]}, {"title": " \"Who should comment on this pull request? analyzing attributes for more accurate commenter recommendation in pull-based development\"", "authors": ["J. Jiang", " Y. Yang", " J. He", " X. Blanc ", " L. Zhang"]}, {"title": " \"Towards automatically generating summary comments for java methods\"", "authors": ["G. Sridhara", " E. Hill", " D. Muppaneni", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"On the use of automated text summarization techniques for summarizing source code\"", "authors": ["S. Haiduc", " J. Aponte", " L. Moreno ", " A. Marcus"]}, {"title": " \"Automatic generation of natural language summaries for java classes\"", "authors": ["L. Moreno", " J. Aponte", " G. Sridhara", " A. Marcus", " L. Pollock ", " K. VijayShanker"]}, {"title": " \"Autocomment: Mining question and answer sites for automatic comment generation\"", "authors": ["E. Wong", " J. Yang ", " L. Tan"]}, {"title": " \"Automatic documentation generation via source code summarization of method context\"", "authors": ["P. W. McBurney ", " C. McMillan"]}, {"title": " \"Summarizing source code using a neural attention model\"", "authors": ["S. Iyer", " I. Konstas", " A. Cheung ", " L. Zettlemoyer"]}, {"title": " \"Summarizing source code with transferred api knowledge\"", "authors": ["X. Hu", " G. Li", " X. Xia", " D. Lo", " S. Lu ", " Z. Jin"]}, {"title": " \"Deep code comment generation with hybrid lexical and syntactical information\"", "authors": ["X. Hu", " G. Li", " X. Xia", " D. Lo ", " Z. Jin"]}, {"title": " \"Summarizing software artifacts: A case study of bug reports\"", "authors": ["S. Rastkar", " G. C. Murphy ", " G. Murray"]}, {"title": " \"Automatic summarization of bug reports\"", "authors": ["S. Rastkar", " G. C. Murphy ", " G. Murray"]}, {"title": " \"Ausum: Approach for unsupervised bug report summarization\"", "authors": ["S. Mani", " R. Catherine", " V. S. Sinha ", " A. Dubey"]}, {"title": " \"Modelling the \u2018hurried\u2019 bug report reading process to summarize bug reports\"", "authors": ["R. Lotufo", " Z. Malik ", " K. Czarnecki"]}, {"title": " \"What would users change in my app? summarizing app reviews for recommending software changes\"", "authors": ["A. Di Sorbo", " S. Panichella", " C. V. Alex", "ru", " J. Shimagaki", " C. A. Visaggio", " G. Canfora", " ."]}, {"title": " \"Automatic summarization of api reviews\"", "authors": ["G. Uddin ", " F. Khomh"]}, {"title": " \"Automating intention mining\"", "authors": ["Q. Huang", " X. Xia", " D. Lo ", " G. C. Murphy"]}, {"title": " \"Locating latent design information in developer discussions: A study on pull requests\"", "authors": ["G. Viviani", " M. Famelis", " X. Xia", " C. Janik-Jones ", " G. C. Murphy"]}, {"title": " \"Summarizing and measuring development activity\"", "authors": ["C. Treude", " F. Figueira Filho ", " U. Kulesza"]}, {"title": " \"Actor-critic algorithms\"", "authors": ["V. R. Konda ", " J. N. Tsitsiklis"]}, {"title": " \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\"", "authors": ["R. J. Williams"]}]},
{"doi": "10.1109/ASE.2002.1115010", "title": "Automating requirements traceability: Beyond the record & replay paradigm", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Maintenance engineering", "Automation", "Programming", "Information retrieval", "Software engineering", "Systems engineering and theory", "Design engineering"], "abstract": "Requirements traceability (RT) aims at defining relationships between stakeholder requirements and artifacts produced during the software development life-cycle. Although techniques for generating and validating RT are available, RT in practice often suffers from the enormous effort and complexity of creating and maintaining traces or from incomplete trace information that cannot assist engineers in real-world problems. In this paper we will present a tool-supported technique easing trace acquisition by generating trace information automatically. We will explain the approach using a video-on-demand system and show that the generated traces can be used in various engineering scenarios to solve RT-related problems.", "author": [{"name": "A. Egyed", "affiliation": "Teknowledge Corporation, Marina, CA, USA"}, {"name": "P. Grunbacher", "affiliation": "Systems Engineering and Automation, Johannes Kepler University Linz, Linz, Austria"}], "time": "2002", "citationCount": "60", "references": [{"title": " \"Design-Code Traceability Recovery\"", "authors": ["G. Antoniol", " B. Caprile", " A. Potrich ", " P. Tonella"]}, {"title": " \"Using the WinWin Spiral Model\"", "authors": ["B. Boehm", " A. Egyed", " J. Kwan", " D. Port", " A. Shah ", " R. Madachy"]}, {"title": " \"Java MPEG Player\"", "authors": ["K. Dohyung"]}, {"title": " \"Comparing Software System Requirements Negotiation Patterns\"", "authors": ["A. Egyed ", " B. Boehm"]}, {"title": " \"A Scenario-Driven Approach to Traceability\"", "authors": ["A. Egyed"]}, {"title": " \"An Analysis of the Requirements Traceability Problem\"", "authors": ["O.C.Z. Gotel ", " A.C.W. Finkelstein"]}, {"title": " \"Extended Requirements Traceability: results of an industrial case study\"", "authors": ["O. Gotel ", " A. Finkelstein"]}, {"title": " \"Reconciling Software Requirements and Architectures: The CBSP Approach\"", "authors": ["P Gr\u00fcnbacher", " A Egyed ", " N Medvidovic"]}, {"title": " \"Bridging Models across the Software Lifecycle\"", "authors": ["N. Medvidovic", " P. Gr\u00fcnbacher", " A. Egyed ", " B.W. Boehm"]}, {"title": " \"Software Reflexion Models: Bridging the Gap Between Source and High-Level Models\"", "authors": ["G. C. Murphy", " D. Notkin ", " K. Sullivan"]}, {"title": " \"Lessons Learned from Implementing Requirements Traceability\"", "authors": ["Ramesh Bala", " Stubbs Lt Curtis ", " Edwards Michael"]}, {"title": " \"Toward Reference Models for Requirements Traceability\"", "authors": ["B. Ramesh ", " M. Jarke"]}]},
{"doi": "10.1109/ASE.2019.00027", "title": "Systematically Covering Input Structure", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Grammar", "Production", "Testing", "Syntactics", "Information security", "Informatics", "Uniform resource locators"], "abstract": "Grammar-based testing uses a given grammar to produce syntactically valid inputs. To cover program features, it is necessary to also cover input features-say, all URL variants for a URL parser. Our k-path algorithm for grammar production systematically covers syntactic elements as well as their combinations. In our evaluation, we show that this results in a significantly higher code coverage than state of the art.", "author": [{"name": "Nikolas Havrikov", "affiliation": "CISPA Helmholtz Center for Information Security Saarland Informatics Campus"}, {"name": "Andreas Zeller", "affiliation": "CISPA Helmholtz Center for Information Security Saarland Informatics Campus"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Fuzzing with code fragments\"", "authors": ["C. Holler", " K. Herzig ", " A. Zeller"]}, {"title": " \"Grammarinator: a grammar-based open source fuzzer\"", "authors": ["R. Hodov\u00e1n", " \u00c1. Kiss ", " T. Gyim\u00f3thy"]}, {"title": " \"Fishing for deep bugs with grammars\"", "authors": ["C. Aschermann", " T. Frassetto", " T. Holz", " P. Jauernig", " A.-R. Sadeghi ", " D. Teuchert"]}, {"title": " \"Superion: Grammaraware greybox fuzzing\"", "authors": ["J. Wang", " B. Chen", " L. Wei ", " Y. Liu"]}, {"title": " \"A sentence generator for testing parsers\"", "authors": ["P. Purdom"]}, {"title": " \"Antlr: A predicated-ll (k) parser generator\"", "authors": ["T. J. Parr ", " R. W. Quong"]}, {"title": " \"The JavaScript Object Notation (JSON) data interchange format\"", "authors": ["T. Bray"]}, {"title": " \"On a test of whether one of two random variables is stochastically larger than the other\"", "authors": ["H. B. Mann ", " D. R. Whitney"]}, {"title": " \"Automatic generation of test cases\"", "authors": ["K. V. Hanford"]}, {"title": " \"Finding and understanding bugs in c compilers\"", "authors": ["X Yang", " Y Chen", " E Eide ", " J Regehr"]}, {"title": " \"Grammar-based whitebox fuzzing\"", "authors": ["P Godefroid", " A Kiezun ", " M. Y. Levin"]}, {"title": " \"Grammar testing\"", "authors": ["R L\u00e4mmel"]}, {"title": " \"Controllable combinatorial coverage in grammar-based testing\"", "authors": ["R. L\u00e4mmel ", " W Schulte"]}, {"title": " \"On program analysis\"", "authors": ["M. A. Hennell", " M. R. Woodward ", " D Hedley"]}, {"title": " \"A taxonomy of model-based testing approaches\"", "authors": ["M Utting", " A Pretschner ", " B Legeard"]}, {"title": " \"Toward an engineering discipline for GRAMMARWARE\"", "authors": ["P Klint", " R. L\u00e4mmel ", " C Verhoef"]}, {"title": " \"Mining input grammars from dynamic taints\"", "authors": ["M. H\u00f6schele ", " A Zeller"]}, {"title": " \"Synthesizing program input grammars\"", "authors": ["O Bastani", " R Sharma", " A Aiken ", " P Liang"]}, {"title": " \"Learn&fuzz: Machine learning for input fuzzing\"", "authors": ["P Godefroid", " H Peleg ", " R Singh"]}]},
{"doi": "10.1109/ASE.2002.1115011", "title": "Enabling iterative software architecture derivation using early non-functional property evaluation", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software architecture", "Computer architecture", "Yarn", "Application software", "Connectors", "Laboratories", "Intelligent systems", "Intelligent structures", "Maintenance engineering", "Timing"], "abstract": "The structure of a software architecture strongly influences the architecture's ability to prescribe systems satisfying functional requirements, non functional requirements, and overall qualities such as maintainability, reusability, and performance. Achieving an acceptable architecture requires an iterative derivation and evaluation process that allows refinement based on a series of tradeoffs. Researchers at the University of Texas at Austin are developing a suite of processes and supporting tools to guide architecture derivation from requirements acquisition through system design. The various types of decisions needed for concurrent derivation and evaluation demand a synthesis of evaluation techniques, because no single technique is suitable for all concerns of interest. Two tools in this suite, RARE and ARCADE, cooperate to enable iterative architecture derivation and architecture property evaluation. RARE guides derivation by employing a heuristics knowledge base, and evaluates the resulting architecture by applying static property evaluation based on structural metrics. ARCADE provides dynamic property evaluation leveraging simulation and model-checking. This paper presents a study whereby RARE and ARCADE were employed in the early stages of an industrial project to derive a Domain Reference Architecture (DRA), a high-level architecture capturing domain functionality, data, and timing. The discussion emphasizes early evaluation of performance qualities, and illustrates how ARCADE and RARE cooperate to enable iterative derivation and evaluation. These evaluations influenced DRA refinement as well as subsequent design decisions involving application implementation and computing platform selection.", "author": [{"name": "K.S. Barber", "affiliation": "Laboratory for Intelligent Processes and Systems Electrical and Computer Engineering, University of Technology, Austin, TX, USA"}, {"name": "T. Graser", "affiliation": "Laboratory for Intelligent Processes and Systems Electrical and Computer Engineering, University of Technology, Austin, TX, USA"}, {"name": "J. Holt", "affiliation": "Laboratory for Intelligent Processes and Systems Electrical and Computer Engineering, University of Technology, Austin, TX, USA"}], "time": "2002", "citationCount": "6", "references": [{"title": " \"Reference Architecture Representation Environment (RARE): Systematic Derivation and Evaluation of Domain-Specific Implementation-Independent Software Architectures\" in ECE.", "authors": ["T. Graser"]}, {"title": " \"Evaluating Dynamic Correctness Properties of Domain Reference Architectures Using a Combination of Simulation and Model Checking\"", "authors": ["K. S. Barber", " T. J. Graser ", " J. Holt"]}, {"title": " \"Providing Early Feedback in the Development Cycle through Automated Application of Model Checking to Software Architectures\"", "authors": ["K. S. Barber", " T. J. Graser ", " J. Holt"]}, {"title": " \"Software Quality Metrics for Object-Oriented Environments\"", "authors": ["L. H. Rosenberg ", " L. E. Hyatt"]}, {"title": " \"Reliability Estimation Techniques for Domain Reference Architectures\"", "authors": ["K. S. Barber", " T. J. Graser", " A. M. Bingham ", " J. Holt"]}, {"title": " \"Performance Evaluation of Domain Reference Architectures\"", "authors": ["K. S. Barber", " J. Holt ", " G. Baker"]}, {"title": " \"The Architecture Tradeoff Analysis Method\"", "authors": ["R. Kazman", " M. Klein", " M. Barbacci", " T. Longstaff", " H. Lipson ", " J. Carriere"]}, {"title": " \"SAAM: A Method for Analyzing the Properties of Software Architectures\"", "authors": ["R. Kazman", " L. Bass", " G. Abowd ", " M. Webb"]}, {"title": " \"Towards a Broader View on Software Architecture Analysis of Flexibility\"", "authors": ["N. Lassing", " D. Rijsenbrij ", " H. Van Vliet"]}, {"title": " \"Architecture Level Prediction of Software Maintenance\"", "authors": ["P. Bengtsson ", " J. Bosch"]}, {"title": " \"An Approach to Software Architecture Analysis for Evolution and Reusability\"", "authors": ["H.-H. Lung", " S. Bot", " K. Kalaichelvan ", " R. Kazman"]}, {"title": " \"Metrics for Software Architecture: A Case Study in the Telecommunications Domain\"", "authors": ["S. Kalyanasundaram", " K. Ponnambalam", " A. Singh", " B. J. Stacey ", " R. Munikoti"]}, {"title": " \"A Metrics Suite for Object-Oriented Design\"", "authors": ["S. R. Chidamber ", " C. F. Kemerer"]}, {"title": " \"Performance Evaluation of Software Architectures\"", "authors": ["L. G. Williams ", " C. U. Smith"]}, {"title": " \"Performance Prediction Based on Semi-Formal Software Architectural Description\"", "authors": ["J. J. Li"]}, {"title": " \"Performance-Oriented Software Architecture Engineering: an Experience Report\"", "authors": ["C.-H. Lung", " A. Jalnapurkar ", " A. El-Rayess"]}]},
{"doi": "10.1109/ASE.2019.00028", "title": "SEGATE: Unveiling Semantic Inconsistencies between Code and Specification of String Inputs", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Documentation", "Automata", "Particle separators", "Password", "Semantics", "Libraries", "Test pattern generators"], "abstract": "Automated testing techniques are often assessed on coverage based metrics. However, despite giving good coverage, the test cases may miss the gap between functional specification and the code implementation. This gap may be subtle in nature, arising due to the absence of logical checks, either in the implementation or in the specification, resulting in inconsistencies in the input definition. The inconsistencies may be prevalent especially for structured inputs, commonly specified using string-based data types. Our study on defects reported over popular libraries reveals that such gaps may not be limited to input validation checks. We propose a test generation technique for structured string inputs where we infer inconsistencies in input definition to expose semantic gaps in the method under test and the method specification. We assess this technique using our tool SEGATE, Semantic Gap Tester. SEGATE uses static analysis and automaton modeling to infer the gap and generate test cases. On our benchmark dataset, comprising of defects reported in 15 popular open-source libraries, written in Java, SEGATE was able to generate tests to expose 80% of the defects.", "author": [{"name": "Devika Sondhi", "affiliation": "IIIT Delhi, New Delhi, India"}, {"name": "Rahul Purandare", "affiliation": "IIIT Delhi, New Delhi, India"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Coverage-based grey-box fuzzing as markov chain\"", "authors": ["M. B\u00f6hme", " V.-T. Pham ", " A. Roychoudhury"]}, {"title": " \"S3: A symbolic string solver for vulnerability detection in web applications\"", "authors": ["M.-T. Trinh", " D.-H. Chu ", " J. Jaffar"]}, {"title": " \"Exe: Automatically generating inputs of death\"", "authors": ["C. Cadar", " V. Ganesh", " P. M. Pawlowski", " D. L. Dill ", " D. R. Engler"]}, {"title": " \"Reggae: Automated test generation for programs using complex regular expressions\"", "authors": ["N. Li", " T. Xie", " N. Tillmann", " J. d. Halleux ", " W. Schulte"]}, {"title": " \"Directed test suite augmentation: Techniques and tradeoffs\"", "authors": ["Z. Xu", " Y. Kim", " M. Kim", " G. Rothermel ", " M. B. Cohen"]}, {"title": " \"Covering code behavior on input validation in functional testing\"", "authors": ["H. Liu ", " H. B. K. Tan"]}, {"title": " \"Blendfuzz: A model-based framework for fuzz testing programs with grammatical inputs\"", "authors": ["D. Yang", " Y. Zhang ", " Q. Liu"]}, {"title": " \"Preventing input validation vulnerabilities in web applications through automated type analysis\"", "authors": ["T. Scholte", " W. Robertson", " D. Balzarotti ", " E. Kirda"]}, {"title": " \"Verifying client-side input validation functions using string analysis\"", "authors": ["M. Alkhalaf", " T. Bultan ", " J. L. Gallegos"]}, {"title": " \"The soot framework for java program analysis: a retrospective\"", "authors": ["P. Lam", " E. Bodden", " O. Lhot\u00e1k ", " L. Hendren"]}, {"title": " \"Efficient chaotic iteration strategies with widenings\"", "authors": ["F. Bourdoncle"]}, {"title": " \"Feedback-directed random test generation\"", "authors": ["C. Pacheco", " S. K. Lahiri", " M. D. Ernst ", " T. Ball"]}, {"title": " \"Umbc ebiquity-core: Semantic textual similarity systems\"", "authors": ["T. F. J. M. Lushan Han", " Abhay L Kashyap ", " J. Weese"]}, {"title": " \"An n log n algorithm for minimizing states in a finite automaton\"", "authors": ["J. Hopcroft"]}, {"title": " \"Automated discovery of valid test strings from the web using dynamic regular expressions collation and natural language processing\"", "authors": ["M. Shahbaz", " P. McMinn ", " M. Stevenson"]}, {"title": " \"Free-marginal multirater kappa (multirater k [free]): An alternative to fleiss\u2019 fixed-marginal multirater kappa\"", "authors": ["J. J. R", "olph"]}, {"title": " \"Symbolic pathfinder: integrating symbolic execution with model checking for java bytecode analysis\"", "authors": ["C. S. P\u0103s\u0103reanu", " W. Visser", " D. Bushnell", " J. Geldenhuys", " P. Mehlitz ", " N. Rungta"]}, {"title": " \"Evosuite: Automatic test suite generation for object-oriented software\"", "authors": ["G. Fraser ", " A. Arcuri"]}, {"title": " \"Test input generation with java pathfinder\"", "authors": ["W. Visser", " C. S. P\u0103s\u0103reanu ", " S. Khurshid"]}, {"title": " \"Jpf for beginners\"", "authors": ["D. Bushnell"]}, {"title": " \"Analyzing apis documentation and code to detect directive defects\"", "authors": ["Y. Zhou", " R. Gu", " T. Chen", " Z. Huang", " S. Panichella ", " H. Gall"]}, {"title": " \"acomment: mining annotations from comments and code to detect interrupt related concurrency bugs\"", "authors": ["L. Tan", " Y. Zhou ", " Y. Padioleau"]}, {"title": " \"/*icomment: Bugs or bad comments?*/\"", "authors": ["L. Tan", " D. Yuan", " G. Krishna ", " Y. Zhou"]}, {"title": " \"@tcomment: Testing javadoc comments to detect comment-code inconsistencies\"", "authors": ["S. H. Tan", " D. Marinov", " L. Tan ", " G. T. Leavens"]}, {"title": " \"Semantic differential repair for input validation and sanitization\"", "authors": ["M. Alkhalaf", " A. Aydin ", " T. Bultan"]}, {"title": " \"Automatic generation of valid and invalid test data for string validation routines using web searches and regular expressions\"", "authors": ["M. Shahbaz", " P. McMinn ", " M. Stevenson"]}, {"title": " \"Automatic and lightweight grammar generation for fuzz testing\"", "authors": ["S. Y. Kim", " S. Cha ", " D.-H. Bae"]}, {"title": " \"Defending against injection attacks through context-sensitive string evaluation\"", "authors": ["T. Pietraszek ", " C. V. Berghe"]}, {"title": " \"Finding security vulnerabilities in java applications with static analysis\"", "authors": ["V. B. Livshits ", " M. S. Lam"]}, {"title": " \"Detecting format string vulnerabilities with type qualifiers\"", "authors": ["U. Shankar", " K. Talwar", " J. S. Foster ", " D. Wagner"]}, {"title": " \"Stranger: An automata-based string analysis tool for php\"", "authors": ["F. Yu", " M. Alkhalaf ", " T. Bultan"]}, {"title": " \"Abstracting symbolic execution with string analysis\"", "authors": ["D. Shannon", " S. Hajra", " A. Lee", " D. Zhan ", " S. Khurshid"]}, {"title": " \"An evaluation of automata algorithms for string analysis\"", "authors": ["P. Hooimeijer ", " M. Veanes"]}, {"title": " \"Precise analysis of string expressions\"", "authors": ["A. S. Christensen", " A. M\u00f8ller ", " M. I. Schwartzbach"]}, {"title": " \"Automata-based model counting for string constraints\"", "authors": ["A. Aydin", " L. Bang ", " T. Bultan"]}, {"title": " \"Hampi: A solver for string constraints\"", "authors": ["A. Kiezun", " V. Ganesh", " P. J. Guo", " P. Hooimeijer ", " M. D. Ernst"]}, {"title": " \"String constraints for verification\"", "authors": ["P. A. Abdulla", " M. F. Atig", " Y.-F. Chen", " L. Hol\u00edk", " A. Rezine", " P. R\u00fcmmer", " ."]}, {"title": " \"A decision procedure for subset constraints over regular languages\"", "authors": ["P. Hooimeijer ", " W. Weimer"]}, {"title": " \"An efficient smt solver for string constraints\"", "authors": ["T. Liang", " A. Reynolds", " N. Tsiskaridze", " C. Tinelli", " C. Barrett ", " M. Deters"]}, {"title": " \"Z3: An efficient smt solver\"", "authors": ["L. De Moura ", " N. Bj\u00f8rner"]}, {"title": " \"A solver-aided language for test input generation\"", "authors": ["T. Ringer", " D. Grossman", " D. Schwartz-Narbonne ", " S. Tasiran"]}, {"title": " \"Exploring regular expression usage and context in python\"", "authors": ["C. Chapman ", " K. T. Stolee"]}, {"title": " \"Translating code comments to procedure specifications\"", "authors": ["A. Blasi", " A. Goffi", " K. Kuznetsov", " A. Gorla", " M. D. Ernst", " M. Pezz\u00e8", " ."]}, {"title": " \"Dase: Document-assisted symbolic execution for improving automated software testing\"", "authors": ["E. Wong", " L. Zhang", " S. Wang", " T. Liu ", " L. Tan"]}]},
{"doi": "10.1109/ASE.2002.1115012", "title": "Model-based tests of truisms", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software engineering", "Life testing", "Software testing", "Costs", "Software quality", "Object oriented modeling", "Debugging", "Cities and towns", "Life estimation", "Runtime"], "abstract": "Software engineering (SE) truisms capture broadly-applicable principles of software construction. The trouble with truisms is that such general principles may not apply in specific cases. This paper tests the specificity of two SE truisms: (a) increasing software process level is a desirable goal; and (b) it is best to remove errors during the early parts of a software lifecycle. Our tests are based on two well-established SE models: (1) Boehm et.al.'s COCOMO II cost estimation model; and (2) Raffo's discrete event software process model of a software project life cycle. After extensive simulations of these models, the TAR2 treatment learner was applied to find the model parameters that most improved the potential performance of the real-world systems being modelled. The case studies presented here showed that these truisms are clearly sub-optimal for certain projects since other factors proved to be far more critical. Hence, we advise against truism-based process improvement. This paper offers a general alternative framework for model-based assessment of methods to improve software quality: modelling + validation + simulation + sensitivity. That is, after recording what is known in a model, that model should be validated, explored using simulations, then summarized to find the key factors that most improve model behavior.", "author": [{"name": "T. Menzies", "affiliation": "Lane Department of Com. Sci, University of West Virginia, Morgantown, WV, USA"}, {"name": "D. Raffo", "affiliation": "School of Business, Portland State University, Portland, USA"}, {"name": "S.-O. Setamanit", "affiliation": "School of Business, Portland State University, Portland, USA"}, {"name": "Ying Hu", "affiliation": "Department Electrical & Computer Engineering, University of British Columbia, Canada"}, {"name": "S. Tootoonian", "affiliation": "Department Electrical & Computer Engineering, University of British Columbia, Canada"}], "time": "2002", "citationCount": "10", "references": [{"title": " \"Dynamic simulation of software process models\"", "authors": ["M. Akhavi ", " W. Wilson"]}, {"title": " \"Little-jil/juliette: A process definition language and interpreter\"", "authors": ["A. Cass", " B. S. Lerner", " E. McCall", " L. Osterweil", " S. M. S. ", " A. Wise"]}, {"title": " \"Bayesian analysis of empirical software engineering cost models\"", "authors": ["S. Chulani", " B. Boehm ", " B. Steece"]}, {"title": " \"Simulating practice for work systems design\"", "authors": ["W. Clancey", " P. Sachs", " M. Sierhuis ", " R. van Hoof. Brahms"]}, {"title": " \"Automatic verification of finite-state concurrent systems using temporal logic specifications\"", "authors": ["E. Clarke", " E. Emerson ", " A. Sistla"]}, {"title": " \"Evidence supports some truisms belies others. (some empirical results concerning software development)\"", "authors": ["H. Dunsmore"]}, {"title": " \"Advances in software inspections\"", "authors": ["M. Fagan"]}, {"title": " \"Converging on the optimal attainment of requirements\"", "authors": ["M. Feather ", " T. Menzies"]}, {"title": " \"A critique of software defect prediction models\"", "authors": ["N. E. Fenton ", " M. Neil"]}, {"title": " \"Software metrics: A roadmap\" in Software metrics: A roadmap", "authors": ["N. E. Fenton ", " M. Neil"]}, {"title": " \"Partition vs. random testing: The influence of uncertainty\"", "authors": ["W. Gutjhar"]}, {"title": " \"Statemate: A working environment for the development of complex reactive systems\"", "authors": ["D. Harel"]}, {"title": " \"Does oo sync with how we think?\"", "authors": ["L. Hatton"]}, {"title": " \"Model checking java programs using java pathfinder\"", "authors": ["K. Havelund ", " T. Pressburger"]}, {"title": " \"Interprocedural slicing using dependence graphs\"", "authors": ["S. Horwitz", " T. Reps ", " D. Binkley"]}, {"title": " \"Qualitative physics\" in The Handbook of Artificial Intelligence", "authors": ["Y. Iwasaki"]}, {"title": " \"Software process modeling and simulation: Why what how\"", "authors": ["M. Kellner", " R. Madachy ", " D. Raffo"]}, {"title": " \"Towards a theory for integration of mathematical verification and empirical testing\"", "authors": ["M. Lowry", " M. Boyd ", " D. Kulkarni"]}, {"title": " \"Heuristic risk assessment using cost factors\"", "authors": ["R. Madachy"]}, {"title": " \"A model of the software development process using both continuous and discrete models\"", "authors": ["R. Martin ", " D. M. Raffo"]}, {"title": " \"Evaluation issues for visual programming languages\" in Handbook of Software Engineering and Knowledge Engineering", "authors": ["T. Menzies"]}, {"title": " \"Condensing uncertainty via incremental treatment learning\"", "authors": ["T. Menzies", " E. Chiang", " M. Feather", " Y. Hu ", " J. Kiper"]}, {"title": " \"How many tests are enough?\"", "authors": ["T. Menzies ", " B. Cukic"]}, {"title": " \"Reusing models for requirements engineering\"", "authors": ["T. Menzies ", " Y. Hu"]}, {"title": " \"Agents in a wild world\"", "authors": ["T. Menzies ", " Y. Hu"]}, {"title": " \"Just enough learning (of association rules)\"", "authors": ["T. Menzies ", " Y. Hu"]}, {"title": " \"Fast formal analysis of requirements via \u2018topoi diagrams'\"", "authors": ["T. Menzies", " J. Powell ", " M. E. Houle"]}, {"title": " \"A knowledge-based environment for modeling and simulation software engineering processes\"", "authors": ["P. Mi ", " W. Scacchi"]}, {"title": " \"Capability maturity model version 1.1\"", "authors": ["M. Paulk", " B. Curtis", " M. Chrissis ", " C. Weber"]}, {"title": " \"Modeling software processes quantitatively and assessing the impact of potential process changes of process performance\"", "authors": ["D. Raffo"]}, {"title": " \"Software process simulation to achieve higher cmm levels\"", "authors": ["D. M. Raffo", " J. V. V", "eville "]}, {"title": " \"Software failure modes and effects analysis\"", "authors": ["D. Reifer"]}, {"title": " \"Validating requirements for fault tolerant systems using model checking\"", "authors": ["F. Schneider", " S. Easterbrook", " J. Callahan", " G. Holzmann", " W. Reinholtz", " A. Ko", " ."]}, {"title": " \"Using little-jil to coordinate agents in software engineering\"", "authors": ["A. Wise", " A. Cass", " B. S. Lerner", " E. McCall", " L. Osterweil ", " J. S.M. Sutton"]}]},
{"doi": "10.1109/ASE.2019.00029", "title": "Detecting Error-Handling Bugs without Error Specification Input", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Tools", "Libraries", "Semantics", "Kernel", "Printing"], "abstract": "Most software systems frequently encounter errors when interacting with their environments. When errors occur, error-handling code must execute flawlessly to facilitate system recovery. Implementing correct error handling is repetitive but non-trivial, and developers often inadvertently introduce bugs into error-handling code. Existing tools require correct error specifications to detect error-handling bugs. Manually generating error specifications is error-prone and tedious, while automatically mining error specifications is hard to achieve a satisfying accuracy. In this paper, we propose EH-Miner, a novel and practical tool that can automatically detect error-handling bugs without the need for error specifications. Given a function, EH-Miner mines its error-handling rules when the function is frequently checked by an equivalent condition, and handled by the same action. We applied EH-Miner to 117 applications across 15 software domains. EH-Miner mined error-handling rules with the precision of 91.1% and the recall of 46.9%. We reported 142 bugs to developers, and 106 bugs had been confirmed and fixed at the time of writing. We further applied EH-Miner to Linux kernel, and reported 68 bugs for kernel-4.17, of which 42 had been confirmed or fixed.", "author": [{"name": "Zhouyang Jia", "affiliation": "College of Computer Science, National University of Defense Technology Changsha, China"}, {"name": "Shanshan Li", "affiliation": "College of Computer Science, National University of Defense Technology Changsha, China"}, {"name": "Tingting Yu", "affiliation": "Department of Computer Science, University of Kentucky Lexington, USA"}, {"name": "Xiangke Liao", "affiliation": "College of Computer Science, National University of Defense Technology Changsha, China"}, {"name": "Ji Wang", "affiliation": "College of Computer Science, National University of Defense Technology Changsha, China"}, {"name": "Xiaodong Liu", "affiliation": "College of Computer Science, National University of Defense Technology Changsha, China"}, {"name": "Yunhuai Liu", "affiliation": "Big Data Research Center, Peking University, Beijing, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Designing robust java programs with exceptions\"", "authors": ["M. P. Robillard ", " G. C. Murphy"]}, {"title": " \"Error propagation analysis for file systems\"", "authors": ["C. Rubio-Gonzalez", " H. S. Gunawi", " B. Liblit", " R. H. Arpaci-Dusseau ", " A. C. Arpaci-Dusseau"]}, {"title": " \"Automatically diagnosing and repairing error handling bugs in c\"", "authors": ["Y. Tian ", " B. Ray"]}, {"title": " \"Automatically detecting error handling bugs using error specifications\"", "authors": ["S. Jana", " Y. J. Kang", " S. Roth ", " B. Ray"]}, {"title": " \"Eio: Error handling is occasionally correct\"", "authors": ["H. S. Gunawi", " C. Rubio-Gonzalez", " A. C. Arpaci-Dusseau", " R. H. Arpaci-Dusseau ", " B. Liblit"]}, {"title": " \"Finding error handling bugs in openssl using coccinelle\"", "authors": ["J. Lawall", " B. Laurie", " R. R. Hansen", " N. Palix ", " G. Muller"]}, {"title": " \"Fig: A prototype tool for online verification of recovery mechanisms\"", "authors": ["P. Broadwell", " N. Sastry ", " J. Traupman"]}, {"title": " \"An extensible technique for high-precision testing of recovery code\"", "authors": ["P. Marinescu", " R. Banabic ", " G. C"]}, {"title": " \"Efficient testing of recovery code using fault injection\"", "authors": ["P. Marinescu ", " G. C"]}, {"title": " \"Lfi: A practical and general librarylevel fault injector\"", "authors": ["P. D. Marinescu ", " G. C"]}, {"title": " \"Contrasting exception handling code across languages: An experience report involving 50 open source projects\"", "authors": ["B. Jakobus", " E. A. Barbosa", " A. Garcia ", " C. J. P. de Lucena"]}, {"title": " \"Apex: Automated inference of error specifications for c apis\"", "authors": ["Y. Kang", " B. Ray ", " S. Jana"]}, {"title": " \"Mining api error-handling specifications from source code\" in Fundamental Approaches to Software Engineering", "authors": ["M. Acharya ", " T. Xie"]}, {"title": " \"Expect the unexpected: Error code mismatches between documentation and the real world\"", "authors": ["C. Rubio-Gonzalez ", " B. Liblit"]}, {"title": " \"Satisfiability modulo theories: Introduction and applications\"", "authors": ["L. De Moura ", " N. Bj\u00f8rner"]}, {"title": " \"Why don\u2019t software developers use static analysis tools to find bugs?\"", "authors": ["B. Johnson", " Y. Song", " E. Murphy-Hill ", " R. Bowdidge"]}, {"title": " \"Smartlog: Place error log statement by deep understanding of log intention\"", "authors": ["Z. Jia", " S. Li", " X. Liu", " X. Liao ", " Y. Liu"]}, {"title": " \"An exploratory study on exception handling bugs in java programs\"", "authors": ["F. Ebert", " F. Castor ", " A. Serebrenik"]}, {"title": " \"Do android developers neglect error handling? a maintenance-centric study on the relationship between android abstractions and uncaught exceptions\"", "authors": ["J. Oliveira", " D. Borges", " T. Silva", " N. Cacho ", " F. Castor"]}, {"title": " \"Exceptions and aspects: the devil is in the details\"", "authors": ["F. C. Filho", " N. Cacho", " E. Figueiredo", " R. Maranh\u00e3o", " A. Garcia ", " C. M. F. Rubira"]}, {"title": " \"Global-aware recommendations for repairing violations in exception handling\"", "authors": ["E. A. Barbosa ", " A. Garcia"]}, {"title": " \"Automatic runtime recovery via error handler synthesis\"", "authors": ["T. Gu", " C. Sun", " X. Ma", " J. L ", " Z. Su"]}, {"title": " \"Slice-based statistical fault localization\"", "authors": ["X. Mao", " Y. Lei", " Z. Dai", " Y. Qi ", " C. Wang"]}, {"title": " \"How test suites impact fault localisation starting from the size\"", "authors": ["Y. Lei", " C. Sun", " X. Mao ", " Z. Su"]}, {"title": " \"Exceptional situations and program reliability\"", "authors": ["W. Weimer ", " G. C. Necula"]}, {"title": " \"Finding and preventing run-time error handling mistakes\"", "authors": ["W. Weimer ", " G. C. Necula"]}, {"title": " \"Automatically detecting missing cleanup for ungraceful exits\"", "authors": ["Z. Jia", " S. Li", " T. Yu", " X. Liao ", " J. Wang"]}, {"title": " \"Path-based function embedding and its application to error-handling specification mining\"", "authors": ["D. DeFreez", " A. V. Thakur ", " C. Rubio-Gonzalez"]}, {"title": " \"Discovering faults in idiom-based exception handling\"", "authors": ["M. Bruntink", " A. van Deursen ", " T. Tourwe"]}, {"title": " \"Mining preconditions of apis in large-scale code corpus\"", "authors": ["H. A. Nguyen", " R. Dyer", " T. N. Nguyen ", " H. Rajan"]}, {"title": " \"Inferring resource specifications from natural language api documentation\"", "authors": ["H. Zhong", " L. Zhang", " T. Xie ", " H. Mei"]}, {"title": " \"icomment: Bugs or bad comments?\"", "authors": ["L. Tan", " D. Yuan", " G. Krishna ", " Y. Zhou"]}, {"title": " \"Mining api patterns as partial orders from source code: From usage scenarios to specifications\"", "authors": ["M. Acharya", " T. Xie", " J. Pei ", " J. Xu"]}, {"title": " \"Bugs as deviant behavior: A general approach to inferring errors in systems code\"", "authors": ["D. Engler", " D. Y. Chen", " S. Hallem", " A. Chou ", " B. Chelf"]}]},
{"doi": "10.1109/ASE.2002.1115013", "title": "Interfaces for modular feature verification", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Programming profession", "Modular construction", "Concurrent computing", "Explosions", "Computer languages", "Computer vision", "Large-scale systems", "Data structures", "Assembly systems", "Protection"], "abstract": "Feature-oriented programming organizes programs around features rather than objects, thus better supporting extensible, product-line architectures. Programming languages increasingly support this style of programming, but programmers get little support from verification tools. Ideally, programmers should be able to verify features independently of each other and use automated compositional reasoning techniques to infer properties of a system from properties of its features. Achieving this requires carefully designed interfaces: they must hold sufficient information to enable compositional verification, yet tools should be able to generate this information automatically because experience indicates programmers cannot or will not provide it manually. We present a model of interfaces that supports automated, compositional, feature-oriented model checking. To demonstrate their utility, we automatically detect the feature-interaction problems originally found manually by R. Hall in an email suite case study.", "author": [{"name": "H.C. Li", "affiliation": "Brown University, USA"}, {"name": "S. Krishnamurthi", "affiliation": "Brown University, USA"}, {"name": "K. Fisler", "affiliation": "WPI, USA"}], "time": "2002", "citationCount": "14", "references": [{"title": " \"Conjoining specifications\"", "authors": ["M. Abadi ", " L. Lamport"]}, {"title": " \"Efficient reachability analysis of hierarchic reactive machines\"", "authors": ["R. Alur", " R. Grosu ", " M. McDougall"]}, {"title": " \"Model checking of hierarchical state machines\"", "authors": ["R. Alur ", " M. Yannakakis"]}, {"title": " \"Feature interaction as a satisfiability problem\" in Feature Interactions in Telecommunications Systems", "authors": ["C. Areces", " W. Bouma ", " M. de Rijke"]}, {"title": " \"Product-line architectures\"", "authors": ["D. Batory"]}, {"title": " \"Towards automated detection of feature interactions\" in Feature Interactions in Telecommunications Systems", "authors": ["K. Braithwaite ", " J. Atlee"]}, {"title": " \"Model checking partial state spaces with 3-valued temporal logics\"", "authors": ["G. Bruns ", " P. Godefroid"]}, {"title": " \"Modular translation of Statecharts to SMV. Technical\"", "authors": ["E. M. Clarke ", " W. Heinle"]}, {"title": " \"Interface automata\"", "authors": ["L. de Alfaro ", " T. A. Henzinger"]}, {"title": " \"Modular verification of collaboration-based software designs\"", "authors": ["K. Fisler ", " S. Krishnamurthi"]}, {"title": " \"Houdini an annotation assistant for ESC/Java\"", "authors": ["C. Flanagan ", " K. R. M. Leino"]}, {"title": " \"Feature interactions in electronic mail\" in Feature Interactions in Telecommunications Systems", "authors": ["R. J. Hall"]}, {"title": " \"Distributed feature composition: A virtual architecture for telecommunications services\"", "authors": ["M. Jackson ", " P. Zave"]}, {"title": " \"The feature and service interaction problem in telecommunications systems: A survey\"", "authors": ["D. O. Keck ", " P. J. Kuehn"]}, {"title": " \"Aspect-oriented programming\"", "authors": ["G. Kiczales", " J. Lamping", " A. Mendhekar", " C. Maeda", " C. V. Lopes", " J.-M. Loingtier", " ."]}, {"title": " \"Modular model checking of software\"", "authors": ["K. Laster ", " O. Grumberg"]}, {"title": " \"Verifying crosscutting features as open systems\"", "authors": ["H. Li", " S. Krishnamurthi ", " K. Fisler"]}, {"title": " \"A compositional rule for hardware design refinement\"", "authors": ["K. McMillan"]}, {"title": " \"A theory of type polymorphism in programming\"", "authors": ["R. Milner"]}, {"title": " \"Multi-dimensional separation of concerns in hyperspace\"", "authors": ["H. Ossher ", " P. Tarr"]}, {"title": " \"On the criteria to be used in decomposing systems into modules\"", "authors": ["D. L. Parnas"]}, {"title": " \"In transition from global to modular temporal reasoning about programs\" in Logics and Models of Concurrent Systems volume 13 of NATO ASI series", "authors": ["A. Pnueli"]}, {"title": " \"Calls considered harmful and other observations: A tutorial on telephony\"", "authors": ["P. Zave"]}]},
{"doi": "10.1109/ASE.2019.00030", "title": "Grading-Based Test Suite Augmentation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Test pattern generators", "Generators", "Programming profession", "Indexes", "Receivers"], "abstract": "Enrollment in introductory programming (CS1) courses continues to surge and hundreds of CS1 students can produce thousands of submissions for a single problem, all requiring timely and accurate grading. One way that instructors can efficiently grade is to construct a custom instructor test suite that compares a student submission to a reference solution over randomly generated or hand-crafted inputs. However, such test suite is often insufficient, causing incorrect submissions to be marked as correct. To address this issue, we propose the Grasa (GRAding-based test Suite Augmentation) approach consisting of two techniques. Grasa first detects and clusters incorrect submissions by approximating their behavioral equivalence to each other. To augment the existing instructor test suite, Grasa generates a minimal set of additional tests that help detect the incorrect submissions. We evaluate our Grasa approach on a dataset of CS1 student submissions for three programming problems. Our preliminary results show that Grasa can effectively identify incorrect student submissions and minimally augment the instructor test suite.", "author": [{"name": "Jonathan Osei-Owusu", "affiliation": "Department of Computer Science, University of Illinois at Urbana-Champaign"}, {"name": "Angello Astorga", "affiliation": "Department of Computer Science, University of Illinois at Urbana-Champaign"}, {"name": "Liia Butler", "affiliation": "Department of Computer Science, University of Illinois at Urbana-Champaign"}, {"name": "Tao Xie", "affiliation": "Ministry of Education, Key Laboratory of High Confidence Software Technologies (Peking University)"}, {"name": "Geoffrey Challen", "affiliation": "Ministry of Education, Key Laboratory of High Confidence Software Technologies (Peking University)"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Generation CS: The growth of computer science\"", "authors": ["T Camp", " W. R. Adrion", " B Bizot", " S Davidson", " M Hall", " S Hambrusch", " ."]}, {"title": " \"Pex\u2013white box test generation for.NET\"", "authors": ["N Tillmann ", " J. de Halleux"]}, {"title": " \"DiffGen: Automated regression unit-test generation\"", "authors": ["K Taneja ", " T Xie"]}, {"title": " \"Measuring code behavioral similarity for programming and software engineering education\"", "authors": ["S Li", " X Xiao", " B Bassett", " T Xie ", " N Tillmann"]}, {"title": " \"Rostra: A framework for detecting redundant object-oriented unit tests\"", "authors": ["T Xie", " D Marinov ", " D Notkin"]}, {"title": " \"Test-suite augmentation for evolving software\"", "authors": ["R Santelices", " P. K. Chittimalli", " T Apiwattanapong", " A Orso ", " M. J. Harrold"]}, {"title": " \"eXpress: Guided path exploration for efficient regression test generation\"", "authors": ["K Taneja", " T Xie", " N Tillmann ", " J. de Halleux"]}, {"title": " \"Directed incremental symbolic execution\"", "authors": ["S Person", " G Yang", " N Rungta ", " S Khurshid"]}, {"title": " \"Automated clustering and\u02c7 program repair for introductory programming assignments\"", "authors": ["S Gulwani", " I Radicek ", " F Zuleger"]}, {"title": " \"Writing reusable code feedback at scale with mixedinitiative program synthesis\"", "authors": ["A Head", " E Glassman", " G Soares", " R Suzuki", " L Figueredo", " L. D\u2019Antoni", " ."]}, {"title": " \"Automated feedback generation for introductory programming assignments\"", "authors": ["R Singh", " S Gulwani ", " A. Solar-Lezama"]}, {"title": " \"Learning stateful preconditions modulo a test generator\"", "authors": ["A Astorga", " P Madhusudan", " S Saha", " S Wang ", " T Xie"]}]},
{"doi": "10.1109/ASE.2002.1115014", "title": "Automated validation of class invariants in C++ applications", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software quality", "Software testing", "Application software", "Contracts", "Computer science", "Computer industry", "Costs", "Shape", "Programming", "Software design"], "abstract": "In this paper, we describe a non-invasive approach for validation of class invariants in C++ applications. Our approach is fully automated so that the user need only supply the class invariants for each class hierarchy to be checked and our validator constructs an InvariantVisitor, a variation of the Visitor Pattern, and an InvariantFacilitator. Instantiations of the InvariantVisitor and InvariantFacilitator classes encapsulate the invariants in C++ statements and facilitate the validation of the invariants. We describe both our approach and our results of validating invariants in keystone, a well tested parser front-end for C++.", "author": [{"name": "T.H. Gibbs", "affiliation": "Computer Science Department, Clemson University, Clemson, SC, USA"}, {"name": "B.A. Malloy", "affiliation": "Computer Science Department, Clemson University, Clemson, SC, USA"}, {"name": "J.F. Power", "affiliation": "Computer Science Department, National University of Ireland, Kildare, Ireland"}], "time": "2002", "citationCount": "4", "references": [{"title": " \"The C++ resources network\"", "authors": ["S. Alex", "er"]}, {"title": "\"Boldsoft Rational Software Corp IONA and Adaptive Ltd\"", "authors": []}, {"title": " \"The Unified Modeling Language User Guide\" in Object Technology Series", "authors": ["G. Booch", " J. Rumbaugh ", " I. Jacobson"]}, {"title": " \"Debugging PHP using a C++ compiler\"", "authors": ["F. J. Cavalier"]}, {"title": " \"A unified approach to implementation-based testing of classes\"", "authors": ["P. Clarke ", " B. A. Malloy"]}, {"title": " \"Assigning Meanings to Programs\"", "authors": ["R. Floyd"]}, {"title": " \"Another mediocre assertion mechanism for C++\" in Technology of Object-Oriented Languages and Systems", "authors": ["P. Guerreiro"]}, {"title": " \"Simple support for design by contract in C++\" in Technology of Object-Oriented Languages and Systems", "authors": ["P. Guerreiro"]}, {"title": " \"Testing: A roadmap\"", "authors": ["M. J. Harrold"]}, {"title": " \"An axiomatic basis for computer programming\"", "authors": ["C. Hoare"]}, {"title": " \"Proof of correctness of data representations\"", "authors": ["C. Hoare"]}, {"title": " \"The Emperor's Old Clothes (1980 Turing Award Lecture)\"", "authors": ["C. Hoare"]}, {"title": "\"ISO/IEC JTC 1. International Standard: Programming Languages - C++ Number 14882:1998(E) in ASC X3 ANSI\"", "authors": []}, {"title": " \"Fast Fourier transform\"", "authors": ["O. Kiselyov"]}, {"title": " \"Emulating design by contract in C++\" in Technology of Object-Oriented Languages and Systems", "authors": ["D. Maley ", " I. Spence"]}, {"title": " \"Decorating tokens to facilitate recognition of ambiguous language constructs\"", "authors": ["B. A. Malloy", " T. H. Gibbs ", " J. F. Power"]}, {"title": " \"Acyclic visitor. Technical Report wucs-97\u201307\"", "authors": ["R. Martin"]}, {"title": " \"Strategic directions in software quality\"", "authors": ["L. J. Osterweil ."]}, {"title": " \"An approach for modeling the name lookup problem in the C++ programming language\"", "authors": ["J. F. Power ", " B. A. Malloy"]}, {"title": " \"Symbol table construction and name lookup in iso C++\" in Technology of Object-Oriented Languages and Systems TOOLS 2000", "authors": ["J. F. Power ", " B. A. Malloy"]}, {"title": " \"Number theory library\"", "authors": ["V. Shoup"]}, {"title": " \"IV tools\"", "authors": ["J. M. Vlissides ", " M. A. Linton"]}, {"title": " \"The V C++ Gui framework\"", "authors": ["B. Wampler"]}]},
{"doi": "10.1109/ASE.2019.00031", "title": "Emotions Extracted from Text vs. True Emotions\u2013An Empirical Evaluation in SE Context", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Emotion recognition", "Task analysis", "Psychology", "Tools", "Heuristic algorithms", "Software", "Information systems"], "abstract": "Emotion awareness research in SE context has been growing in recent years. Currently, researchers often rely on textual communication records to extract emotion states using natural language processing techniques. However, how well these extracted emotion states reflect people's real emotions has not been thoroughly investigated. In this paper, we report a multi-level, longitudinal empirical study with 82 individual members in 27 project teams. We collected their self-reported retrospective emotion states on a weekly basis during their year-long projects and also extracted corresponding emotions from the textual communication records. We then model and compare the dynamics of these two types of emotions using multiple statistical and time series analysis methods. Our analyses yield a rich set of findings. The most important one is that the dynamics of emotions extracted using text-based algorithms often do not well reflect the dynamics of self-reported retrospective emotions. Besides, the extracted emotions match self-reported retrospective emotions better at the team-level. Our results also suggest that individual personalities and the team's emotion display norms significantly impact the match/mismatch. Our results should warn the research community about the limitations and challenges of applying text-based emotion recognition tools in SE research.", "author": [{"name": "Yi Wang", "affiliation": "Rochester Institute of Technology, 134 Lomb Memorial Dr. Rochster, NY"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A rhetorical theory of diffusion\"", "authors": ["S. E. Green"]}, {"title": " \"The tie that binds? coherence among emotion experience behavior and physiology\"", "authors": ["I. B. Mauss", " R. W. Levenson", " L. McCarter", " F. H. Wilhelm ", " J. J. Gross"]}, {"title": " \"The role of emotion in computer-mediated communication: A review\"", "authors": ["D. Derks", " A. H. Fischer ", " A. E. Bos"]}, {"title": " \"Affect and creativity at work\"", "authors": ["T. M. Amabile", " S. G. Barsade", " J. S. Mueller ", " B. M. Staw"]}, {"title": " \"Diversity and emotion: The new frontiers in organizational behavior research\"", "authors": ["N. M. Ashkanasy", " C. E. H\u00e4rtel ", " C. S. Daus"]}, {"title": " \"Emotional exhaustion as a predictor of job performance and voluntary turnover\"", "authors": ["T. A. Wright ", " R. Cropanzano"]}, {"title": " \"Towards emotional awareness in software development teams\"", "authors": ["E. Guzman ", " B. Bruegge"]}, {"title": " \"Anger and its direction in collaborative software development\"", "authors": ["D. Gachechiladze", " F. Lanubile", " N. Novielli ", " A. Serebrenik"]}, {"title": " \"A needle in a haystack: What do twitter users say about software?\"", "authors": ["E. Guzman", " R. Alkadhi ", " N. Seyff"]}, {"title": " \"On the automatic classification of app reviews\"", "authors": ["W. Maalej", " Z. Kurtanovic", " H. Nabil ", " C. Stanik"]}, {"title": " \"Mining valence arousal and dominance: Possibilities for detecting burnout and productivity?\"", "authors": ["M. M\u00e4ntyl\u00e4", " B. Adams", " G. Destefanis", " D. Graziotin ", " M. Ortu"]}, {"title": " \"A survey of affect recognition methods: Audio visual and spontaneous expressions\"", "authors": ["Z. Zeng", " M. Pantic", " G. I. Roisman ", " T. S. Huang"]}, {"title": " \"Emotion recognition from physiological signals using wireless sensors for presence technologies\"", "authors": ["F. Nasoz", " K. Alvarez", " C. L. Lisetti ", " N. Finkelstein"]}, {"title": " \"Bodily maps of emotions\"", "authors": ["L. Nummenmaa", " E. Glerean", " R. Hari ", " J. K. Hietanen"]}, {"title": " \"Speech emotion recognition using deep neural network and extreme learning machine\"", "authors": ["K. Han", " D. Yu ", " I. Tashev"]}, {"title": " \"Human-like emotion recognition: Multi-label learning from noisy labeled audio-visual expressive speech\"", "authors": ["Y. Kim ", " J. Kim"]}, {"title": " \"Textual affect sensing for sociable and expressive online communication\"", "authors": ["A. Neviarouskaya", " H. Prendinger ", " M. Ishizuka"]}, {"title": " \"Affectivespace 2: enabling affective intuition for concept-level sentiment analysis\"", "authors": ["E. Cambria", " J. Fu", " F. Bisio ", " S. Poria"]}, {"title": " \"Crowds on wall street: Extracting value from collaborative investing platforms\"", "authors": ["G. Wang", " T. Wang", " B. Wang", " D. Sambasivan", " Z. Zhang", " H. Zheng", " ."]}, {"title": " \"Sentiment polarity detection for software development\"", "authors": ["F. Calefato", " F. Lanubile", " F. Maiorano ", " N. Novielli"]}, {"title": " \"Three\u2019s company: Understanding communication channels in three-way distributed collaboration\"", "authors": ["A. Tang", " M. Pahud", " K. Inkpen", " H. Benko", " J. C. Tang ", " B. Buxton"]}, {"title": " \"Beyond valence in the perception of likelihood: The role of emotion specificity\"", "authors": ["D. DeSteno", " R. E. Petty", " D. T. Wegener ", " D. D. Rucker"]}, {"title": " \"Gaining insights from social media language: Methodologies and challenges\"", "authors": ["M. L. Kern", " G. Park", " J. C. Eichstaedt", " H. A. Schwartz", " M. Sap", " L. K. Smith", " ."]}, {"title": " \"The social world of twitter: Topics geography and emotions\"", "authors": ["D. Quercia", " L. Capra ", " J. Crowcroft"]}, {"title": " \"Discourse of Twitter and social media: How we use language to create affiliation on the web\"", "authors": ["M. Zappavigna"]}, {"title": " \"The importance of being flexible: The ability to both enhance and suppress emotional expression predicts long-term adjustment\"", "authors": ["G. A. Bonanno", " A. Papa", " K. Lal", "e", " M. Westphal ", " K. Coifman"]}, {"title": " \"Emotion in organizations: a review and theoretical integration\"", "authors": ["H. A. Elfenbein"]}, {"title": " \"Emotion display norms in virtual teams\"", "authors": ["E. Glikson ", " M. Erez"]}, {"title": " \"Mood and emotions in small groups and work teams\"", "authors": ["J. R. Kelly ", " S. G. Barsade"]}, {"title": " \"Collective action and the evolution of social norms\"", "authors": ["E. Ostrom"]}, {"title": " \"Bridging the work/social divide: the emotional response to organizational social networking sites\"", "authors": ["H. Koch", " E. Gonzalez ", " D. Leidner"]}, {"title": " \"Emotional dissonance and the information technology professional\"", "authors": ["P. S. Rutner", " B. C. Hardgrave ", " D. H. McKnight"]}, {"title": " \"The effects of team flexibility and emotional intelligence on software development performance\"", "authors": ["A. G\u00fcnsel ", " A. A\u00e7ikg\u00f6z"]}, {"title": " \"Hierarchy and centralization in free and open source software team communications\"", "authors": ["K. Crowston ", " J. Howison"]}, {"title": " \"Developer initiation and social interactions in oss: A case study of the apache software foundation\"", "authors": ["M. Gharehyazie", " D. Posnett", " B. Vasilescu ", " V. Filkov"]}, {"title": " \"Developer onboarding in github: The role of prior social links and language experience\"", "authors": ["C. Casalnuovo", " B. Vasilescu", " P. Devanbu ", " V. Filkov"]}, {"title": " \"Roles and politeness behavior in community-based free/libre open source software development\"", "authors": ["K. Wei", " K. Crowston", " U. Y. Eseryel ", " R. Heckman"]}, {"title": " \"Sentiment and politeness analysis tools on developer discussions are unreliable but so are people\"", "authors": ["N. Imtiaz", " J. Middleton", " P. Girouard ", " E. Murphy-Hill"]}, {"title": " \"Sentiment analysis for software engineering: How far can we go?\"", "authors": ["B. Lin", " F. Zampetti", " G. Bavota", " M. Di Penta", " M. Lanza ", " R. Oliveto"]}, {"title": " \"A gold standard for emotion annotation in stack overflow\"", "authors": ["N. Novielli", " F. Calefato ", " F. Lanubile"]}, {"title": " \"Emobank: Studying the impact of annotation perspective and representation format on dimensional emotion analysis\"", "authors": ["S. Buechel ", " U. Hahn"]}, {"title": " \"The dissociation of emotion expression from emotion experience: A personality perspective\"", "authors": ["J. J. Gross", " O. P. John ", " J. M. Richards"]}, {"title": " \"An argument for basic emotions\"", "authors": ["P. Ekman"]}, {"title": " \"What\u2019s basic about basic emotions?\"", "authors": ["A. Ortony ", " T. J. Turner"]}, {"title": " \"Self-report captures 27 distinct categories of emotion bridged by continuous gradients\"", "authors": ["A. S. Cowen ", " D. Keltner"]}, {"title": " \"Semeval-2018 Task 1: Affect in tweets\"", "authors": ["S. M. Mohammad", " F. Bravo-Marquez", " M. Salameh ", " S. Kiritchenko"]}, {"title": " \"Are bullies more productive?: Empirical study of affectiveness vs. issue fixing time\"", "authors": ["M. Ortu", " B. Adams", " G. Destefanis", " P. Tourani", " M. Marchesi ", " R. Tonelli"]}, {"title": " \"Ntua-slp at semeval-2018 task 1: Predicting affective content in tweets with deep attentive rnns and transfer learning\"", "authors": ["C. Baziotis", " N. Athanasiou", " A. Chronopoulou", " A. Kolovou", " G. Paraskevopoulos", " N. Ellinas", " ."]}, {"title": " \"The personality structure of affect\"", "authors": ["E. Diener", " H. Smith ", " F. Fujita"]}, {"title": " \"The experience sampling method\"", "authors": ["R. LARSON"]}, {"title": " \"The relationships among momentary emotion experiences personality descriptions and retrospective ratings of emotion\"", "authors": ["L. F. Barrett"]}, {"title": " \"Correspondence between retrospective and momentary ratings of positive and negative affect in old age: Findings from a one-year measurement burst design\"", "authors": ["C. R\u00f6cke", " C. A. Hoppmann ", " P. L. Klumb"]}, {"title": " \"Validity and reliability of the experience-sampling method\" in Flow and the Foundations of Positive Psychology", "authors": ["M. Csikszentmihalyi ", " R. Larson"]}, {"title": " \"Emotions beyond the laboratory: Theoretical fundaments study design and analytic strategies for advanced ambulatory assessment\"", "authors": ["F. H. Wilhelm ", " P. Grossman"]}, {"title": " \"evaluating multiepisode events: boundary conditions for the peak-end rule\"", "authors": ["T. Miron-shatz"]}, {"title": " \"The importance of physical activity and sleep for affect on stressful days: Two intensive longitudinal studies\"", "authors": ["L. Flueckiger", " R. Lieb", " A. H. Meyer", " C. Witthauer ", " J. Mata"]}, {"title": " \"Conversation emotional modeling in social networks\"", "authors": ["A. Kanavos", " I. Perikos", " P. Vikatos", " I. Hatzilygeroudis", " C. Makris ", " A. Tsakalidis"]}, {"title": " \"Emotionwatch: Visualizing fine-grained emotions in event-related tweets\"", "authors": ["R. Kempter", " V. Sintsova", " C. C. Musat ", " P. Pu"]}, {"title": " \"Pearl: An interactive visual analytic tool for understanding personal emotion style derived from social media\"", "authors": ["J. Zhao", " L. Gou", " F. Wang ", " M. Zhou"]}, {"title": " \"Seemo: A computational approach to see emotions\"", "authors": ["Z. Liu", " A. Xu", " Y. Guo", " J. U. Mahmud", " H. Liu ", " R. Akkiraju"]}, {"title": " \"The big five personality dimensions and job performance: a meta-analysis\"", "authors": ["M. R. Barrick ", " M. K. Mount"]}, {"title": " \"Blog tells what kind of personality you have: Egogram estimation from japanese weblog\"", "authors": ["A. Minamikawa ", " H. Yokoyama"]}, {"title": " \"Personality-targeted design: Theory experimental procedure and preliminary results\"", "authors": ["O. Nov ", " O. Arazy"]}, {"title": " \"An examination of personality traits and how they impact on software development teams\"", "authors": ["M. Yilmaz", " R. V. O Connor", " R. Colomo-Palacios ", " P. Clarke"]}, {"title": " \"The big five trait taxonomy: History measurement and theoretical perspectives\"", "authors": ["O. P. John ", " S. Srivastava"]}, {"title": " \"Measuring emotion: Development and application of an instrument to measure emotional responses to products\" in Funology 2", "authors": ["P. Desmet"]}, {"title": " \"Coherence between expressive and experiential systems in emotion\"", "authors": ["E. L. Rosenberg ", " P. Ekman"]}, {"title": " \"Emotional expression online: Gender differences in emoticon use\"", "authors": ["A. Wolf"]}, {"title": " \"Norms for experiencing emotions in different cultures: Inter-and intranational differences\" in Culture and Well-Being", "authors": ["M. Eid ", " E. Diener"]}, {"title": " \"Separating individual and group effects\"", "authors": ["D. A. Kenny ", " L. La Voie"]}, {"title": " \"Estimating within-group interrater reliability with and without response bias\"", "authors": ["L. R. James", " R. G. Demaree ", " G. Wolf"]}, {"title": " \"Understanding emotions: A dataset of tweets to study interactions between affect categories\"", "authors": ["S. M. Mohammad ", " S. Kiritchenko"]}, {"title": " \"Word affect intensities\"", "authors": ["S. M. Mohammad"]}, {"title": " \"Corpus annotation through crowdsourcing:towards best practice guidelines\"", "authors": ["R. M. Sabou", " K. Bontcheva", " L. Derczynski ", " A. Scharl"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\" in Advances in Neural Information Processing Systems 26", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"The asa\u2019s statement on p-values: Context process and purpose\"", "authors": ["R. L. Wasserstein ", " N. A. Lazar"]}, {"title": " \"A drunk and her dog: an illustration of cointegration and error correction\"", "authors": ["M. P. Murray"]}, {"title": " \"Co-integration and error correction: representation estimation and testing\"", "authors": ["R. F. Engle ", " C. W. Granger"]}, {"title": " \"Emotional regulation in the workplace: A new way to conceptualize emotional labor\"", "authors": ["A. A. Gr", "ey"]}, {"title": " \"The power-emotion relationship in discourse: Spontaneous expression of emotions in asymmetric dialogue\"", "authors": ["C. Thimm ", " L. Kruse"]}, {"title": " \"The structure of emotional expressivity: Each emotion counts\"", "authors": ["L. I. Trierweiler", " M. Eid ", " T. Lischetzke"]}, {"title": " \"On the social nature of personality: Effects of extraversion agreeableness and feedback about collective resource use on cooperation in a resource dilemma\"", "authors": ["S. L. Koole", " W. Jager", " A. E. van den Berg", " C. A. Vlek ", " W. K. Hofstee"]}, {"title": " \"Making use of derived personality: The case of social media ad targeting\"", "authors": ["J. Chen", " E. M. Haber", " R. Kang", " G. Hsieh ", " J. Mahmud"]}]},
{"doi": "10.1109/ASE.2002.1115015", "title": "A framework for automatic debugging", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Debugging", "Object oriented modeling", "Writing", "Application software", "Software engineering", "Event detection", "Virtual machining", "Voice mail", "Computer science", "Computer displays"], "abstract": "This paper presents an application framework in which declarative specifications of debugging actions are translated into execution monitors that can automatically detect bugs. The approach is non-intrusive with respect to program source code and provides a high level of abstraction for debugging activities.", "author": [{"name": "M. Auguston", "affiliation": "Department of Computer Science, New Mexico State University, USA"}, {"name": "C. Jeffery", "affiliation": "Department of Computer Science, New Mexico State University, USA"}, {"name": "S. Underwood", "affiliation": "Department of Computer Science, New Mexico State University, USA"}], "time": "2002", "citationCount": "11", "references": [{"title": " \"Program Behavior Model Based on Event Grammar and its Application for Debugging Automation\"", "authors": ["Mikhail Auguston"]}, {"title": " \"Defining a program Behavior Model for Dynamic Analyzers\"", "authors": ["M. Auguston", " A. Gates ", " M. Lujan"]}, {"title": " \"Lightweight semantics models for program testing and debugging automation\"", "authors": ["M. Auguston"]}, {"title": " \"Programming with Unicon\"", "authors": ["Clinton Jeffery", " Shamim Mohamed", " Ray Pereda ", " Robert Parlett"]}, {"title": " \"The Icon Programming Language\" in Peer to Peer Communications", "authors": ["Ralph E. Griswold ", " Madge T. Griswold"]}, {"title": " \"Specification and Error Pattern Based Program Monitoring\"", "authors": ["K. Havelund", " S. Johnson ", " G. Rosu"]}, {"title": " \"High-Level Debugging of Distributed Systems: the Behavioral Abstraction Approach\"", "authors": ["P. C. Bates ", " J. C. Wileden"]}, {"title": " \"A Dataflow Approach to Event-based Debugging\"", "authors": ["R. Olsson", " R. Crawford ", " W. Wilson"]}, {"title": " \"COCA: An automated debugger for C\"", "authors": ["M. Ducasse"]}, {"title": " \"A Practical Approach to Programming with Assertions\"", "authors": ["D. Rosenblum"]}, {"title": " \"Two-Dimensional Pinpointing: Debugging with Formal Specifications\"", "authors": ["D. C. Luckham", " S. Sankar ", " S. Takahashi"]}, {"title": " \"An Introduction to Task Sequencing Language TSL version 1.5\" in ", "authors": ["D. C. Luckham", " D. Bryan", " W. Mann", " S. Meldal ", " D. P. Helmbold"]}, {"title": " \"DUEL \u2014 A Very High-Level Debugging Language\"", "authors": ["M. Golan ", " D. Hanson"]}, {"title": " \"Algorithmic Program Debugging\" in ", "authors": ["E. Shapiro"]}, {"title": " \"Generalized Algorithmic Debugging and Testing\"", "authors": ["P. Fritzson", " N. Shahmehri", " M. Kamkar ", " T. Gyimothy"]}, {"title": " \"A Specificational Approach to High Level Program Monitoring and Measuring\"", "authors": ["Y. Liao ", " D. Cohen"]}]},
{"doi": "10.1109/ASE.2019.00032", "title": "Learning from Examples to Find Fully Qualified Names of API Elements in Code Snippets", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Documentation", "Dictionaries", "Libraries", "Training", "Receivers", "Software", "Buildings"], "abstract": "Developers often reuse code snippets from online forums, such as Stack Overflow, to learn API usages of software frameworks or libraries. These code snippets often contain ambiguous undeclared external references. Such external references make it difficult to learn and use those APIs correctly. In particular, reusing code snippets containing such ambiguous undeclared external references requires significant manual efforts and expertise to resolve them. Manually resolving fully qualified names (FQN) of API elements is a non-trivial task. In this paper, we propose a novel context-sensitive technique, called COSTER, to resolve FQNs of API elements in such code snippets. The proposed technique collects locally specific source code elements as well as globally related tokens as the context of FQNs, calculates likelihood scores, and builds an occurrence likelihood dictionary (OLD). Given an API element as a query, COSTER captures the context of the query API element, matches that with the FQNs of API elements stored in the OLD, and rank those matched FQNs leveraging three different scores: likelihood, context similarity, and name similarity scores. Evaluation with more than 600K code examples collected from GitHub and two different Stack Overflow datasets shows that our proposed technique improves precision by 4-6% and recall by 3-22% compared to state-of-the-art techniques. The proposed technique significantly reduces the training time compared to the StatType, a state-of-the-art technique, without sacrificing accuracy. Extensive analyses on results demonstrate the robustness of the proposed technique.", "author": [{"name": "C M Khaled Saifullah", "affiliation": "Department of Computer Science, University of Saskatchewan, Canada"}, {"name": "Muhammad Asaduzzaman", "affiliation": "School of Computing, Queen\u2019s University, Canada"}, {"name": "Chanchal K. Roy", "affiliation": "Department of Computer Science, University of Saskatchewan, Canada"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Creating and evolving developer documentation: understanding the decisions of open source contributors\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Recovering traceability links between an api and its learning resources\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Practices of software maintenance\"", "authors": ["J. Singer"]}, {"title": " \"Measuring api documentation on the web\"", "authors": ["C. Parnin ", " C. Treude"]}, {"title": " \"Live api documentation\"", "authors": ["S. Subramanian", " L. Inozemtseva ", " R. Holmes"]}, {"title": " \"From query to usable code: an analysis of stack overflow code snippets\"", "authors": ["D. Yang", " A. Hussain ", " C. V. Lopes"]}, {"title": " \"Gistable: Evaluating the executability of code snippets on the web\"", "authors": ["E. Horton ", " C. Parnin"]}, {"title": " \"Enabling static analysis for partial java programs\"", "authors": ["B. Dagenais ", " L. Hendren"]}, {"title": " \"Linking e-mails and source code artifacts\"", "authors": ["A. Bacchelli", " M. Lanza ", " R. Robbes"]}, {"title": " \"The maven repository dataset of metrics changes and dependencies\"", "authors": ["S. Raemaekers", " A. van Deursen ", " J. Visser"]}, {"title": " \"Statistical learning of api fully qualified names in code snippets of online forums\"", "authors": ["H. Phan", " H. Nguyen", " N. Tran", " L. Truong", " A. Nguyen ", " T. Nguyen"]}, {"title": " \"50k-c: A dataset of compilable and compiled java projects\"", "authors": ["P. Martins", " R. Achar ", " C. V. Lopes"]}, {"title": " \"Discovering essential code elements in informal documentation\"", "authors": ["P. C. Rigby ", " M. P. Robillard"]}, {"title": " \"Suggesting accurate method and class names\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"Cscc: Simple efficient context sensitive code completion\"", "authors": ["M. Asaduzzaman", " C. K. Roy", " K. A. Schneider ", " D. Hou"]}, {"title": " \"Api code recommendation using statistical learning from fine-grained changes\"", "authors": ["A. T. Nguyen", " M. Hilton", " M. Codoban", " H. A. Nguyen", " L. Mast", " E. Rademacher", " ."]}, {"title": " \"On the naturalness of software\"", "authors": ["A. Hindle", " E. T. Barr", " Z. Su", " M. Gabel ", " P. Devanbu"]}, {"title": " \"On the localness of software\"", "authors": ["Z. Tu", " Z. Su ", " P. Devanbu"]}, {"title": " \"Trigger-based language models: A maximum entropy approach\"", "authors": ["R. Lau", " R. Rosenfeld ", " S. Roukos"]}, {"title": " \"Corpus-based and knowledge-based measures of text semantic similarity\"", "authors": ["R. Mihalcea", " C. Corley", " C. Strapparava ."]}, {"title": " \"Binary codes capable of correcting deletions insertions and reversals\"", "authors": ["V. I. Levenshtein"]}, {"title": " \"Towards more accurate retrieval of duplicate bug reports\"", "authors": ["C. Sun", " D. Lo", " S.-C. Khoo ", " J. Jiang"]}, {"title": " \"Individual comparisons by ranking methods\"", "authors": ["F. Wilcoxon"]}, {"title": " \"Adjusting for multiple testing when reporting research results: the bonferroni vs holm methods\"", "authors": ["M. Aickin ", " H. Gensler"]}, {"title": " \"Predicting program properties from big code\"", "authors": ["V. Raychev", " M. Vechev ", " A. Krause"]}, {"title": " \"Deep learning type inference\"", "authors": ["V. J. Hellendoorn", " C. Bird", " E. T. Barr ", " M. Allamanis"]}, {"title": " \"Recovering variable names for minified code with usage contexts\"", "authors": ["H. Tran", " N. Tran", " S. Nguyen", " H. Nguyen ", " T. Nguyen"]}, {"title": " \"Nl2type: inferring javascript function types from natural language information\"", "authors": ["R. S. Malik", " J. Patra ", " M. Pradel"]}, {"title": " \"Python probabilistic type inference with natural language support\"", "authors": ["Z. Xu", " X. Zhang", " L. Chen", " K. Pei ", " B. Xu"]}, {"title": " \"Software traceability with topic modeling\"", "authors": ["H. U. Asuncion", " R. N. Asuncion Arthur ", " U. Taylor"]}, {"title": " \"A topic-based approach for narrowing the search space of buggy files from a bug report\"", "authors": ["A. T. Nguyen", " T. T. Nguyen", " H. V. N. T. N. Al-Kofahi ", " J. Nguyen"]}, {"title": " \"Recovering documentation-to-source-code traceability links using latent semantic indexing\"", "authors": ["A. Marcus ", " J. I. Maletic"]}, {"title": " \"Adams re-trace\"", "authors": ["A. De Lucia", " R. Oliveto ", " G. Tortora"]}, {"title": " \"Feature location via information retrieval based filtering of a single scenario execution trace\"", "authors": ["D. Liu", " A. Marcus", " D. Poshyvanyk ", " V. Rajlich"]}, {"title": " \"Compositional vector space models for improved bug localization\"", "authors": ["L. D. Wang ", " S. J. Lawall"]}, {"title": " \"Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports\"", "authors": ["J. Zhou", " H. Zhang ", " D. Lo"]}, {"title": " \"Where should we fix this bug? a two-phase recommendation model\"", "authors": ["D. Kim", " Y. Tao", " S. Kim ", " A. Zeller"]}, {"title": " \"Portfolio: finding relevant functions and their usage\"", "authors": ["C. McMillan", " M. Grechanik", " D. Poshyvanyk", " Q. Xie ", " C. Fu"]}, {"title": " \"Improving bug localization using structured information retrieval\"", "authors": ["M. Saha", " R. K. Lease", " S. Khurshid ", " D. E. Perry"]}, {"title": " \"Learning to rank relevant files for bug reports using domain knowledge\"", "authors": ["X. Ye", " R. Bunescu ", " C. Liu"]}, {"title": " \"Combining deep learning with information retrieval to localize buggy files for bug reports (n)\"", "authors": ["A. N. Lam", " A. T. Nguyen", " H. A. Nguyen ", " T. N. Nguyen"]}]},
{"doi": "10.1109/ASE.2002.1115016", "title": "Towards usable and relevant model checking techniques for the analysis of dependable interactive systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Interactive systems", "Software safety", "Humans", "Aerospace electronics", "Computer science", "Software tools", "Costs", "Computer interfaces", "Computer industry", "Usability"], "abstract": "Model checking is a formal technique for the automated analysis of system models against formal requirements. Once a suitable model and property have been specified, no further interaction by the analyst is required. However, this does not make the method necessarily user friendly since the checker must be provided with appropriate and complex input data. Furthermore, counter-examples generated by the system are often difficult to interpret. Because of this complexity, model checking is not commonly used, and exhaustive exploration of system models based on finite state descriptions is not exploited within industrial dependable systems design. The paper describes the development of an integrated collection of tools around SMV, intended to make it more accessible to practicing software engineers and in particular those concerned with the human interface issues in complex safety critical systems.", "author": [{"name": "K. Loer", "affiliation": "Department of Computer Science, University of York, York, UK"}, {"name": "M. Harrison", "affiliation": "Department of Computer Science, University of York, York, UK"}], "time": "2002", "citationCount": "10", "references": [{"title": " \"Analysis Techniques for Man-Machine Systems Design\"", "authors": ["D. Beevis", " R. Bost", " B D\u00f6ring ", " D. Streets"]}, {"title": " \"Automated Deduction and Usability Reasoning\"", "authors": ["D. Beevis ", " R. Bost"]}, {"title": " \"NuSMV 2: An Open Source Tool for Symbolic Model Checking\"", "authors": ["D. Beevis", " R. Bost", " B D\u00f6ring ", " D. Streets"]}, {"title": " \"Modular Translation of Statecharts to SMV\"", "authors": ["D. Beevis", " R. Bost", " B D\u00f6ring ", " D. Streets"]}, {"title": " \"On Modes Error and Patterns of Interaction\"", "authors": ["A. Degani"]}, {"title": " \"Patterns in property specifications for finite-state verification\"", "authors": ["M. Dwyer ", " G. Avrunin"]}, {"title": " \"Statecharts: A visual formalism for complex systems\"", "authors": ["D. Harel"]}, {"title": " \"STATEMATE: A Working Environment for the Development od Complex Reactive Systems\"", "authors": ["D. Harel", " H. Loachover", " A Naamad", " A. Pnueli ", " M. Trakhtenbrot"]}, {"title": " \"Formal interactive systems analysis and usability inspection methods: Two incompatible worlds?\"", "authors": ["K. Loer ", " M Harrison"]}, {"title": " \"A Method for Formal Specification and Verification of Interactive Systems\"", "authors": ["F. D. Patern\u00f2"]}]},
{"doi": "10.1109/ASE.2019.00033", "title": "Inferring Program Transformations From Singular Examples via Big Code", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Maintenance engineering", "Systematics", "Wrapping", "Machine learning", "DSL", "Tools"], "abstract": "Inferring program transformations from concrete program changes has many potential uses, such as applying systematic program edits, refactoring, and automated program repair. Existing work for inferring program transformations usually rely on statistical information over a potentially large set of program-change examples. However, in many practical scenarios we do not have such a large set of program-change examples. In this paper, we address the challenge of inferring a program transformation from one single example. Our core insight is that \"big code\" can provide effective guide for the generalization of a concrete change into a program transformation, i.e., code elements appearing in many files are general and should not be abstracted away. We first propose a framework for transformation inference, where programs are represented as hypergraphs to enable fine-grained generalization of transformations. We then design a transformation inference approach, GENPAT, that infers a program transformation based on code context and statistics from a big code corpus. We have evaluated GENPAT under two distinct application scenarios, systematic editing and program repair. The evaluation on systematic editing shows that GENPAT significantly outperforms a state-of-the-art approach, SYDIT, with up to 5.5x correctly transformed cases. The evaluation on program repair suggests that GENPAT has the potential to be integrated in advanced program repair tools-GENPAT successfully repaired 19 real-world bugs in the Defects4J benchmark by simply applying transformations inferred from existing patches, where 4 bugs have never been repaired by any existing technique. Overall, the evaluation results suggest that GENPAT is effective for transformation inference and can potentially be adopted for many different applications.", "author": [{"name": "Jiajun Jiang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU), Peking University, Beijing, China"}, {"name": "Luyao Ren", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU), Peking University, Beijing, China"}, {"name": "Yingfei Xiong", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU), Peking University, Beijing, China"}, {"name": "Lingming Zhang", "affiliation": "University of Texas at Dallas, USA"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Discovering and representing systematic code changes\"", "authors": ["M. Kim ", " D. Notkin"]}, {"title": " \"Memories of bug fixes\"", "authors": ["S. Kim", " K. Pan ", " E. E. J. Whitehead"]}, {"title": " \"Fixing recurring crash bugs via analyzing Q&A sites\"", "authors": ["Q. Gao", " H. Zhang", " J. Wang ", " Y. Xiong"]}, {"title": " \"A case study of cross-system porting in forked projects\"", "authors": ["B. Ray ", " M. Kim"]}, {"title": " \"Repertoire: A cross-system porting analysis tool for forked software projects\"", "authors": ["B. Ray", " C. Wiley ", " M. Kim"]}, {"title": " \"SWIN: towards type-safe java program adaptation between apis\"", "authors": ["J. Li", " C. Wang", " Y. Xiong ", " Z. Hu"]}, {"title": " \"Transforming programs between apis with many-to-many mappings\"", "authors": ["C. Wang", " J. Jiang", " J. Li", " Y. Xiong", " X. Luo", " L. Zhang", " ."]}, {"title": " \"Refactoring: An aid in designing application frameworks and evolving object-oriented systems\"", "authors": ["W. F. Opdyke"]}, {"title": " \"Learning syntactic program transformations from examples\"", "authors": ["R. Rolim", " G. Soares", " L. D\u2019Antoni", " O. Polozov", " S. Gulwani", " R. Gheyi", " ."]}, {"title": " \"Automatic inference of code transforms for patch generation\"", "authors": ["F. Long", " P. Amidon ", " M. Rinard"]}, {"title": " \"On the naturalness of buggy code\"", "authors": ["B. Ray", " V. Hellendoorn", " S. Godhane", " Z. Tu", " A. Bacchelli ", " P. Devanbu"]}, {"title": " \"Systematic editing: Generating program transformations from an example\"", "authors": ["N. Meng", " M. Kim ", " K. S. McKinley"]}, {"title": " \"Defects4j: A database of existing faults to enable controlled testing studies for java programs\"", "authors": ["R. Just", " D. Jalali ", " M. D. Ernst"]}, {"title": " \"History driven program repair\"", "authors": ["X.-B. D. Le", " D. Lo ", " C. Le Goues"]}, {"title": " \"Shaping program repair space with existing patches and similar code\"", "authors": ["J. Jiang", " Y. Xiong", " H. Zhang", " Q. Gao ", " X. Chen"]}, {"title": " \"Context-aware patch generation for better automated program repair\"", "authors": ["M. Wen", " J. Chen", " R. Wu", " D. Hao ", " S.-C. Cheung"]}, {"title": " \"Generic patch inference\"", "authors": ["J. Andersen ", " J. L. Lawall"]}, {"title": " \"Semantic patch inference\"", "authors": ["J. Andersen", " A. C. Nguyen", " D. Lo", " J. L. Lawall ", " S. Khoo"]}, {"title": " \"Phoenix: Automated datadriven synthesis of repairs for static analysis violations\" in ESEC/FSE", "authors": ["R. Bavishi", " H. Yoshida ", " M. R. Prasad"]}, {"title": " \"Graph-based mining of in-the-wild fine-grained semantic code change patterns\"", "authors": ["H. A. Nguyen", " T. N. Nguyen", " D. Dig", " S. Nguyen", " H. Tran ", " M. Hilton"]}, {"title": " \"Mining change histories for unknown systematic edits\" in MSR", "authors": ["T. Molderez", " R. Stevens ", " C. De Roover"]}, {"title": " \"Automatic patch generation learned from human-written patches\"", "authors": ["D. Kim", " J. Nam", " J. Song ", " S. Kim"]}, {"title": " \"Mining stackoverflow for program repair\"", "authors": ["X. Liu ", " H. Zhong"]}, {"title": " \"Search-based generalization and refinement of code templates\" in Search Based Software Engineering", "authors": ["T. Molderez ", " C. De Roover"]}, {"title": " \"Documenting and automating collateral evolutions in linux device drivers\"", "authors": ["Y. Padioleau", " J. Lawall", " R. R. Hansen ", " G. Muller"]}, {"title": " \"Using twinning to adapt programs to alternative apis\"", "authors": ["M. Nita ", " D. Notkin"]}, {"title": " \"Stratego/xt 0.17. a language and toolset for program transformation\"", "authors": ["M. Bravenboer", " K. T. Kalleberg", " R. Vermaas ", " E. Visser"]}, {"title": " \"An update calculus for expressing type-safe program updates\"", "authors": ["M. Erwig ", " D. Ren"]}, {"title": " \"The txl source transformation language\"", "authors": ["J. R. Cordy"]}, {"title": " \"Mining software repair models for reasoning on the search space of automated program fixing\"", "authors": ["M. Martinez ", " M. Monperrus"]}, {"title": " \"Automatic patch generation by learning correct code\"", "authors": ["F. Long ", " M. Rinard"]}, {"title": " \"Prototypical networks for few-shot learning\"", "authors": ["J. Snell", " K. Swersky ", " R. Zemel"]}, {"title": " \"Thin slicing\"", "authors": ["M. Sridharan", " S. J. Fink ", " R. Bodik"]}, {"title": " \"Early detection of configuration errors to reduce failure damage\"", "authors": ["T. Xu", " X. Jin", " P. Huang", " Y. Zhou", " S. Lu", " L. Jin", " ."]}, {"title": " \"A precise demand-driven definition-use chaining algorithm\"", "authors": ["A. Hajnal ", " I. Forgacs"]}, {"title": " \"Efficient computation of interprocedural definition-use chains\"", "authors": ["M. J. Harrold ", " M. L. Soffa"]}, {"title": " \"Finegrained and accurate source code differencing\"", "authors": ["J. Falleri", " F. Mor", "at", " X. Blanc", " M. Martinez ", " M. Monperrus"]}, {"title": " \"History-driven build failure fixing: How far are we?\"", "authors": ["Y. Lou", " J. Chen", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Automatically finding patches using genetic programming\"", "authors": ["W. Weimer", " T. Nguyen", " C. Le Goues ", " S. Forrest"]}, {"title": " \"Leveraging syntax-related code for automated program repair\"", "authors": ["Q. Xin ", " S. P. Reiss"]}, {"title": " \"Elixir: Effective object oriented program repair\" in ASE", "authors": ["R. K. Saha", " Y. Lyu", " H. Yoshida ", " M. R. Prasad"]}, {"title": " \"Precise condition synthesis for program repair\" in ICSE", "authors": ["Y. Xiong", " J. Wang", " R. Yan", " J. Zhang", " S. Han", " G. Huang", " ."]}, {"title": " \"A manual inspection of defects4j bugs and its implications for automatic program repair\"", "authors": ["J. Jiang", " Y. Xiong ", " X. Xia"]}, {"title": " \"Automatic clustering of code changes\"", "authors": ["P. Kreutzer", " G. Dotzler", " M. Ring", " B. M. Eskofier ", " M. Philippsen"]}, {"title": " \"Change distilling:tree differencing for fine-grained source code change extraction\"", "authors": ["B. Fluri", " M. Wuersch", " M. PInzger ", " H. Gall"]}, {"title": " \"An empirical investigation into learning bug-fixing patches in the wild via neural machine translation\"", "authors": ["M. Tufano", " C. Watson", " G. Bavota", " M. Di Penta", " M. White ", " D. Poshyvanyk"]}, {"title": " \"A study of repetitiveness of code changes in software evolution\"", "authors": ["H. A. Nguyen", " A. T. Nguyen", " T. T. Nguyen", " T. N. Nguyen ", " H. Rajan"]}, {"title": " \"Nopol: Automatic repair of conditional statement bugs in java programs\"", "authors": ["J. Xuan", " M. Martinez", " F. Demarco", " M. Clement", " S. Lamelas", " T. Durieux", " ."]}, {"title": " \"An empirical study of fault localization families and their combinations\"", "authors": ["D. Zou", " J. Liang", " Y. Xiong", " M. D. Ernst ", " L. Zhang"]}, {"title": " \"Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization\"", "authors": ["X. Li", " W. Li", " Y. Zhang ", " L. Zhang"]}, {"title": " \"Compiler bug isolation via effective witness test program generation\"", "authors": ["J. Chen", " J. Han", " P. Sun", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Automatic repair of real bugs in java: A large-scale experiment on the Defects4J dataset\"", "authors": ["M. Martinez", " T. Durieux", " R. Sommerard", " J. Xuan ", " M. Monperrus"]}, {"title": " \"Contract-based program repair without the contracts\"", "authors": ["L. Chen", " Y. Pei ", " C. A. Furia"]}, {"title": " \"Practical program repair via bytecode mutation\"", "authors": ["A. Ghanbari", " S. Benton ", " L. Zhang"]}, {"title": " \"Towards practical program repair with on-demand candidate generation\"", "authors": ["J. Hua", " M. Zhang", " K. Wang ", " S. Khurshid"]}, {"title": " \"Identifying patch correctness in test-based program repair\"", "authors": ["Y. Xiong", " X. Liu", " M. Zeng", " L. Zhang ", " G. Huang"]}, {"title": " \"Antipatterns in search-based program repair\"", "authors": ["S. H. Tan", " H. Yoshida", " M. R. Prasad ", " A. Roychoudhury"]}]},
{"doi": "10.1109/ASE.2002.1115017", "title": "Automatic verification of any number of concurrent, communicating processes", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Concrete", "Telecommunication services", "Logic", "Peer to peer computing", "Telecommunication computing", "Gold"], "abstract": "The automatic verification of concurrent systems by model-checking is limited due to the inability to generalise results to systems consisting of any number of processes. We use abstraction to prove general results, by model-checking, about feature interaction analysis of a telecommunications service involving any number of processes. The key idea is to model-check a system of constant number (m) of concurrent processes, in parallel with an \"abstract\" process which represents the product of any number of other processes. The system, for any specified set of selected features, is generated automatically using Perl scripts.", "author": [{"name": "M. Calder", "affiliation": "Department of Computing Science, University of Glasgow, Glasgow, UK"}, {"name": "A. Miller", "affiliation": "Department of Computing Science, University of Glasgow, Glasgow, UK"}], "time": "2002", "citationCount": "2", "references": [{"title": " \"Limits for automatic verification of finite-state concurrent systems\"", "authors": ["Krzysztof R. Apt ", " C. Kozen"]}, {"title": " \"Using SPIN for feature interaction analysis - a case study\"", "authors": ["M. Calder ", " A. Miller"]}, {"title": " \"Feature validation for any number of processes\" in ", "authors": ["M. Calder ", " A. Miller"]}, {"title": " \"Verifying parameterized networks using abstraction and regular languages\"", "authors": ["E.M. Clarke", " O. Grumberg ", " S. Jha"]}, {"title": " \"The model checker Spin\"", "authors": ["Gerard J. Holzmann"]}, {"title": " \"Verifying systems with replicated components in mur \u00d8\"", "authors": ["C. Norris ", " L. Dill"]}, {"title": " \"A structural induction theorem for processes\"", "authors": ["R. P. Kurshan ", " K.L. McMillan"]}, {"title": " \"Parameterized verification of the flash cache coherence protocol by compositional model checking\"", "authors": ["K. L. McMillan"]}]},
{"doi": "10.1109/ASE.2019.00034", "title": "Performance-Boosting Sparsification of the IFDS Algorithm with Applications to Taint Analysis", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Memory management", "Tools", "Image edge detection", "Instruction sets", "Random access memory", "Computer bugs", "Static analysis"], "abstract": "The IFDS algorithm can be compute-and memory-intensive for some large programs, often running for a long time (more than expected) or terminating prematurely after some time and/or memory budgets have been exhausted. In the latter case, the corresponding IFDS data-flow analyses may suffer from false negatives and/or false positives. To improve this, we introduce a sparse alternative to the traditional IFDS algorithm. Instead of propagating the data-flow facts across all the program points along the program's (interprocedural) control flow graph, we propagate every data-flow fact directly to its next possible use points along its own sparse control flow graph constructed on the fly, thus reducing significantly both the time and memory requirements incurred by the traditional IFDS algorithm. In our evaluation, we compare FLOWDROID, a taint analysis performed by using the traditional IFDS algorithm, with our sparse incarnation, SPARSEDROID, on a set of 40 Android apps selected. For the time budget (5 hours) and memory budget (220GB) allocated per app, SPARSEDROID can run every app to completion but FLOWDROID terminates prematurely for 9 apps, resulting in an average speedup of 22.0x. This implies that when used as a market-level vetting tool, SPARSEDROID can finish analyzing these 40 apps in 2.13 hours (by issuing 228 leak warnings) while FLOWDROID manages to analyze only 30 apps in the same time period (by issuing only 147 leak warnings).", "author": [{"name": "Dongjie He", "affiliation": "UNSW Sydney, Australia"}, {"name": "Haofeng Li", "affiliation": "SKL of Computer Architecture, ICT, CAS, China"}, {"name": "Lei Wang", "affiliation": "SKL of Computer Architecture, ICT, CAS, China"}, {"name": "Haining Meng", "affiliation": "SKL of Computer Architecture, ICT, CAS, China"}, {"name": "Hengjie Zheng", "affiliation": "SKL of Computer Architecture, ICT, CAS, China"}, {"name": "Jie Liu", "affiliation": "UNSW Sydney, Australia"}, {"name": "Shuangwei Hu", "affiliation": "Vivo AI Lab, China"}, {"name": "Lian Li", "affiliation": "SKL of Computer Architecture, ICT, CAS, China"}, {"name": "Jingling Xue", "affiliation": "UNSW Sydney, Australia"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Precise interprocedural dataflow analysis via graph reachability\"", "authors": ["T. Reps", " S. Horwitz ", " M. Sagiv"]}, {"title": " \"Bebop: A symbolic model checker for boolean programs\"", "authors": ["T. Ball ", " S. K. Rajamani"]}, {"title": " \"Modular checking for buffer overflows in the large\"", "authors": ["B. Hackett", " M. Das", " D. Wang ", " Z. Yang"]}, {"title": " \"The software model checker BLAST\"", "authors": ["D. Beyer", " T. A. Henzinger", " R. Jhala ", " R. Majumdar"]}, {"title": " \"SLAM and static driver verifier: Technology transfer of formal methods inside Microsoft\"", "authors": ["T. Ball", " B. Cook", " V. Levin ", " S. K. Rajamani"]}, {"title": " \"ESP: Path-sensitive program verification in polynomial time\"", "authors": ["M. Das", " S. Lerner ", " M. Seigle"]}, {"title": " \"Effective typestate verification in the presence of aliasing\"", "authors": ["S. J. Fink", " E. Yahav", " N. Dor", " G. Ramalingam ", " E. Geay"]}, {"title": " \"Synthesizing software verifiers from proof rules\"", "authors": ["S. Grebenshchikov", " N. P. Lopes", " C. Popeea ", " A. Rybalchenko"]}, {"title": " \"Program Tailoring: Slicing by Sequential Criteria\"", "authors": ["Y. Li", " T. Tan", " Y. Zhang ", " J. Xue"]}, {"title": " \"Boomerang: Demand-driven flow- and context-sensitive pointer analysis for Java\"", "authors": ["J. Sp\u00e4th", " L. Nguyen Quang Do", " K. Ali ", " E. Bodden"]}, {"title": " \"Compositional dynamic test generation\"", "authors": ["P. Godefroid"]}, {"title": " \"Statically- directed dynamic automated test generation\"", "authors": ["D. Babic", " L. Martignoni", " S. McCamant ", " D. Song"]}, {"title": " \"PSE: Explaining program failures via postmortem static analysis\"", "authors": ["R. Manevich", " M. Sridharan", " S. Adams", " M. Das ", " Z. Yang"]}, {"title": " \"A system and language for building system-specific static analyses\"", "authors": ["S. Hallem", " B. Chelf", " Y. Xie ", " D. Engler"]}, {"title": " \"Static detection of cross-site scripting vulnerabilities\"", "authors": ["G. Wassermann ", " Z. Su"]}, {"title": " \"Effective inter-component communication mapping in Android: An essential step towards holistic security analysis\"", "authors": ["D. Octeau", " P. McDaniel", " S. Jha", " A. Bartel", " E. Bodden", " J. Klein", " ."]}, {"title": " \"TAJ: Effective taint analysis of web applications\"", "authors": ["O. Tripp", " M. Pistoia", " S. J. Fink", " M. Sridharan ", " O. Weisman"]}, {"title": " \"Flowdroid: Precise context flow field object-sensitive and lifecycle-aware taint analysis for Android apps\"", "authors": ["S. Arzt", " S. Rasthofer", " C. Fritz", " E. Bodden", " A. Bartel", " J. Klein", " ."]}, {"title": " \"IccTA: Detecting inter-component privacy leaks in Android apps\"", "authors": ["L. Li", " A. Bartel", " T. F. Bissy", "e", " J. Klein", " Y. Le Traon", " S. Arzt", " ."]}, {"title": " \"Saving the world wide web from vulnerable JavaScript\"", "authors": ["S. Guarnieri", " M. Pistoia", " O. Tripp", " J. Dolby", " S. Teilhet ", " R. Berg"]}, {"title": " \"Practical extensions to the IFDS algorithm\"", "authors": ["N. A. Naeem", " O. Lhotak ", " J. Rodriguez"]}, {"title": " \"Inter-procedural data-flow analysis with IFDS/IDE and Soot\"", "authors": ["E. Bodden"]}, {"title": " \"Mining apps for abnormal usage of sensitive data\"", "authors": ["V. Avdiienko", " K. Kuznetsov", " A. Gorla", " A. Zeller", " S. Arzt", " S. Rasthofer", " ."]}, {"title": " \"Tricorder: Building a program analysis ecosystem\"", "authors": ["C. Sadowski", " J. Van Gogh", " C. Jaspan", " E. S\u00f6derberg ", " C. Winter"]}, {"title": " \"Why Google stores billions of lines of code in a single repository\"", "authors": ["R. Potvin ", " J. Levenberg"]}, {"title": " \"A unified approach to global program optimization\"", "authors": ["G. A. Kildall"]}, {"title": " \"Effective representation of aliases and indirect memory operations in SSA form\"", "authors": ["F. Chow", " S. Chan", " S.-M. Liu", " R. Lo ", " M. Streich"]}, {"title": " \"Ideal: Efficient and precise alias-aware dataflow analysis\"", "authors": ["J. Sp\u00e4th", " K. Ali ", " E. Bodden"]}, {"title": " \"Precise interprocedural dataflow analysis with applications to constant propagation\"", "authors": ["M. Sagiv", " T. Reps ", " S. Horwitz"]}, {"title": " \"Understanding and detecting evolution-induced compatibility issues in android apps\"", "authors": ["D. He", " L. Li", " L. Wang", " H. Zheng", " G. Li ", " J. Xue"]}, {"title": " \"Soot: A Java bytecode optimization framework\"", "authors": ["R. Vallee-Rai", " P. Co", " E. Gagnon", " L. Hendren", " P. Lam ", " V. Sundaresan"]}, {"title": " \"Implicit flows: Can\u2019t live with \u2018em can\u2019t live without \u2018em\"", "authors": ["D. King", " B. Hicks", " M. Hicks ", " T. Jaeger"]}, {"title": " \"Static analysis of implicit control flow: Resolving Java reflection and android intents\"", "authors": ["P. Barros", " R. Just", " S. Millstein", " P. Vines", " W. Dietl", " M. dAmorim", " ."]}, {"title": " \"Semi-sparse flow-sensitive pointer analysis\"", "authors": ["B. Hardekopf ", " C. Lin"]}, {"title": " \"Flow-sensitive pointer analysis for millions of lines of code\"", "authors": ["B. Hardekopf ", " C. Lin"]}, {"title": " \"Static memory leak detection using fullsparse value-flow analysis\"", "authors": ["Y. Sui", " D. Ye ", " J. Xue"]}, {"title": " \"On-demand strong update analysis via valueflow refinement\"", "authors": ["Y. Sui ", " J. Xue"]}, {"title": " \"Amandroid: A precise and general inter-component data flow analysis framework for security vetting of Android apps\"", "authors": ["F. Wei", " S. Roy", " X. Ou ."]}, {"title": " \"Android taint flow analysis for app sets\"", "authors": ["W. Klieber", " L. Flynn", " A. Bhosale", " L. Jia ", " L. Bauer"]}, {"title": " \"Information flow analysis of Android applications in DroidSafe\"", "authors": ["M. I. Gordon", " D. Kim", " J. H. Perkins", " L. Gilham", " N. Nguyen ", " M. C. Rinard"]}, {"title": " \"Leveraging historical versions of Android apps for efficient and precise taint analysis\"", "authors": ["H. Cai ", " J. Jenkins"]}, {"title": " \"Do Android taint analysis tools keep their promises?\"", "authors": ["F. Pauck", " E. Bodden ", " H. Wehrheim"]}, {"title": " \"Scalable and precise taint analysis for Android\"", "authors": ["W. Huang", " Y. Dong", " A. Milanova ", " J. Dolby"]}]},
{"doi": "10.1109/ASE.2002.1115018", "title": "System testing for object-oriented frameworks using hook technology", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["System testing", "Automatic testing", "Object oriented modeling", "Application software", "Software systems", "Fault detection", "Concrete", "Automation", "Software engineering", "Sparks"], "abstract": "An application framework provides a reusable design and implementation for a family of software systems. If the framework contains defects, the defects will be passed on to the applications developed from the framework. Framework defects are hard to discover at the time the framework is instantiated. Therefore, it is important to remove all defects before instantiating the framework. The problem addressed in this paper is developing an automated state-based test suite generator technique that uses hook technology to produce test suites to test frameworks at the system level. A case study is reported and its results show that the proposed technique is reasonably effective at detecting faults. A supporting tool that automatically produces framework test cases, executes them, and evaluates the results is presented.", "author": [{"name": "J. Al Dallal", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}, {"name": "P. Sorenson", "affiliation": "Department of Computing Science, University of Alberta, Edmonton, AB, Canada"}], "time": "2002", "citationCount": "5", "references": [{"title": " \"Patterns generated architectures\"", "authors": ["K. Beck ", " R Johnson"]}, {"title": " \"Using Object-Oriented Frameworks\" in CRC Handbook of Object Technology", "authors": ["G. Froehlich", " H.J. Hoover", " L. Liu ", " P.G. Sorenson"]}, {"title": " \"Managing object-oriented frameworks reuse\"", "authors": ["S. Sparks", " K. Benner ", " C. Faris"]}, {"title": " \"From custom applications to domain-specific frameworks\"", "authors": ["W. Codenie", " K. De Hondt", " P. Steyaert ", " A. Vercammen"]}, {"title": " \"Hooking into Object-Oriented Application Frameworks\"", "authors": ["G. Froehlich", " H.J. Hoover", " L. Liu ", " P.G. Sorenson"]}, {"title": " \"Hooks: an aid to the reuse of object-oriented frameworks\"", "authors": ["G. Froehlich"]}, {"title": " \"Design by contracts\"", "authors": ["B. Meyer"]}, {"title": " \"Pattern-based object-oriented parallel programming\"", "authors": ["S. McDonald", " J. Schaeffer ", " D. Szafron"]}, {"title": " \"The rigorous generation of Java mutation using HAZOP\"", "authors": ["S. Kim", " J.A. Clarck ", " J.A. McDermid"]}]},
{"doi": "10.1109/ASE.2019.00035", "title": "Characterizing Android App Signing Issues", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Security", "Google", "Taxonomy", "Computer bugs", "Malware", "Tools", "Systematics"], "abstract": "In the app releasing process, Android requires all apps to be digitally signed with a certificate before distribution. Android uses this certificate to identify the author and ensure the integrity of an app. However, a number of signature issues have been reported recently, threatening the security and privacy of Android apps. In this paper, we present the first large-scale systematic measurement study on issues related to Android app signatures. We first create a taxonomy covering four types of app signing issues (21 anti-patterns in total), including vulnerabilities, potential attacks, release bugs and compatibility issues. Then we developed an automated tool to characterize signature-related issues in over 5 million app items (3 million distinct apks) crawled from Google Play and 24 alternative Android app markets. Our empirical findings suggest that although Google has introduced apk-level signing schemes (V2 and V3) to overcome some of the known security issues, more than 93% of the apps still use only the JAR signing scheme (V1), which poses great security threats. Besides, we also revealed that 7% to 45% of the apps in the 25 studied markets have been found containing at least one signing issue, while a large number of apps have been exposed to security vulnerabilities, attacks and compatibility issues. Among them a considerable number of apps we identified are popular apps with millions of downloads. Finally, our evolution analysis suggested that most of the issues were not mitigated after a considerable amount of time across markets. The results shed light on the emergency for detecting and repairing the app signing issues.", "author": [{"name": "Haoyu Wang", "affiliation": "Beijing University of Posts and Telecommunications, Beijing, China"}, {"name": "Hongxuan Liu", "affiliation": "Key Lab of High-Confidence Software Technologies (MOE), Peking University, China"}, {"name": "Xusheng Xiao", "affiliation": "Case Western Reserve University"}, {"name": "Guozhu Meng", "affiliation": "Chinese Academy of Sciences, SKLOIS, Institute of Information Engineering, China"}, {"name": "Yao Guo", "affiliation": "Key Lab of High-Confidence Software Technologies (MOE), Peking University, China"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Beyond google play: A large-scale comparative study of chinese android app markets\"", "authors": ["H. Wang", " Z. Liu", " J. Liang", " N. Vallina-Rodriguez", " Y. Guo", " L. Li", " ."]}, {"title": " \"Deep ground truth analysis of current android malware\"", "authors": ["F. Wei", " Y. Li", " S. Roy", " X. Ou ", " W. Zhou"]}, {"title": " \"Understanding the evolution of mobile app ecosystems: A longitudinal measurement study of google play\"", "authors": ["H. Wang", " H. Li ", " Y. Guo"]}, {"title": " \"Rmvdroid: towards a reliable android malware dataset with app metadata\"", "authors": ["H. Wang", " J. Si", " H. Li ", " Y. Guo"]}, {"title": " \"Appraiser: A large scale analysis of android clone apps\"", "authors": ["Y. Ishii", " T. Watanabe", " M. Akiyama ", " T. Mori"]}, {"title": " \"Wukong: A scalable and accurate two-phase approach to android app clone detection\"", "authors": ["H. Wang", " Y. Guo", " Z. Ma ", " X. Chen"]}, {"title": " \"On identifying and explaining similarities in android apps\"", "authors": ["L. Li", " T. F. Bissy", "\u00e9", " H.-Y. Wang ", " J. Klein"]}, {"title": " \"Why are android apps removed from google play?: a large-scale empirical study\"", "authors": ["H. Wang", " H. Li", " L. Li", " Y. Guo ", " G. Xu"]}, {"title": " \"Factors influencing quality of mobile apps: Role of mobile app development life cycle\"", "authors": ["V. N. Inukollu", " D. D. Keshamoni", " T. Kang ", " M. Inukollu"]}, {"title": " \"50 ways to leak your data: An exploration of apps\u2019 circumvention of the android permissions system\"", "authors": ["J. Reardon", " \u00c1. Feal", " P. Wijesekera", " A. E. B. On", " N. Vallina-Rodriguez ", " S. Egelman"]}, {"title": " \"Understanding the purpose of permission use in mobile apps\"", "authors": ["H. Wang", " Y. Li", " Y. Guo", " Y. Agarwal ", " J. I. Hong"]}, {"title": " \"Reevaluating android permission gaps with static and dynamic analysis\"", "authors": ["H. Wang", " Y. Guo", " Z. Tang", " G. Bai ", " X. Chen"]}, {"title": " \"Using text mining to infer the purpose of permission use in mobile apps\"", "authors": ["H. Wang", " J. Hong ", " Y. Guo"]}, {"title": " \"Apps trackers privacy and regulators\"", "authors": ["A. Razaghpanah", " R. Nithyan", "", " N. Vallina-Rodriguez", " S. Sundaresan", " M. Allman ", " C. K. P. Gill"]}, {"title": " \"Following devil\u2019s footprints: Cross-platform analysis of potentially harmful libraries on android and ios\"", "authors": ["K. Chen", " X. Wang", " Y. Chen", " P. Wang", " Y. Lee", " X. Wang", " ."]}, {"title": " \"Libradar: fast and accurate detection of third-party libraries in android apps\"", "authors": ["Z. Ma", " H. Wang", " Y. Guo ", " X. Chen"]}, {"title": " \"Revisiting the impact of common libraries for android-related investigations\"", "authors": ["L. Li", " T. Riom", " T. F. Bissy", "\u00e9", " H. Wang", " J. Klein ."]}, {"title": " \"Libd: scalable and precise third-party library detection in android markets\"", "authors": ["M. Li", " W. Wang", " P. Wang", " S. Wang", " D. Wu", " J. Liu", " ."]}, {"title": " \"A study of grayware on google play\"", "authors": ["B. Andow", " A. Nadkarni", " B. Bassett", " W. Enck ", " T. Xie"]}, {"title": " \"Dating with scambots: Understanding the ecosystem of fraudulent dating applications\"", "authors": ["Y. Hu", " H. Wang", " Y. Zhou", " Y. Guo", " L. Li", " B. Luo", " ."]}, {"title": " \"Want to earn a few extra bucks? a first look at money-making apps\"", "authors": ["Y. Hu", " H. Wang", " L. Li", " Y. Guo", " G. Xu ", " R. He"]}, {"title": " \"Frauddroid: Automated ad fraud detection for android apps\"", "authors": ["F. Dong", " H. Wang", " L. Li", " Y. Guo", " T. F. Bissy", "\u00e9", " T. Liu", " ."]}, {"title": " \"Discovery of ranking fraud for mobile apps\"", "authors": ["H. Zhu", " H. Xiong", " Y. Ge ", " E. Chen"]}, {"title": " \"Padetective: A systematic approach to automate detection of promotional attackers in mobile app store\"", "authors": ["B. Sun", " X. Luo", " M. Akiyama", " T. Watanabe ", " T. Mori"]}, {"title": " \"Appnet: understanding app recommendation in google play\"", "authors": ["Q. Guo", " H. Wang", " C. Zhang", " Y. Guo ", " G. Xu"]}, {"title": " \"An empirical study of cryptographic misuse in android applications\"", "authors": ["M. Egele", " D. Brumley", " Y. Fratantonio ", " C. Kruegel"]}, {"title": " \"icryptotracer: Dynamic analysis on misuse of cryptography functions in ios applications\"", "authors": ["Y. Li", " Y. Zhang", " J. Li ", " D. Gu"]}, {"title": " \"Reliable third-party library detection in android and its security applications\"", "authors": ["M. Backes", " S. Bugiel ", " E. Derr"]}, {"title": " \"Cognicrypt: Supporting developers in using cryptography\"", "authors": ["S. Kr\u00fcger", " S. Nadi", " M. Reif", " K. Ali", " M. Mezini", " E. Bodden", " F. G\u00f6pfert", " F. G\u00fcnther", " C. Weinert", " D. Demmler ."]}, {"title": " \"Vulnerability assessment of oauth implementations in android applications\"", "authors": ["H. Wang", " Y. Zhang", " J. Li", " H. Liu", " W. Yang", " B. Li", " ."]}, {"title": " \"Why eve and mallory love android: An analysis of android ssl (in) security\"", "authors": ["S. Fahl", " M. Harbach", " T. Muders", " L. Baumg\u00e4rtner", " B. Freisleben ", " M. Smith"]}, {"title": " \"Smv-hunter: Large scale automated detection of ssl/tls man-in-the-middle vulnerabilities in android apps\"", "authors": ["D. Sounthiraraj", " J. Sahs", " G. Greenwood", " Z. Lin ", " L. Khan"]}, {"title": " \"Danger is my middle name: experimenting with ssl vulnerabilities in android apps\"", "authors": ["L. Onwuzurike ", " E. De Cristofaro"]}, {"title": " \"Open doors for bob and mallory: Open port usage in android apps and security implications\"", "authors": ["Y. J. Jia", " Q. A. Chen", " Y. Lin", " C. Kong ", " Z. M. Mao"]}, {"title": " \"Iccta: Detecting inter-component privacy leaks in android apps\"", "authors": ["L. Li", " A. Bartel", " T. F. Bissy", "\u00e9", " J. Klein", " Y. Le Traon", " S. Arzt", " ."]}, {"title": " \"Collusive data leak and more: Large-scale threat analysis of inter-app communications\"", "authors": ["A. Bosu", " F. Liu", " D. D. Yao ", " G. Wang"]}, {"title": " \"Analysis of android inter-app security vulnerabilities using covert\"", "authors": ["A. Sadeghi", " H. Bagheri ", " S. Malek"]}, {"title": " \"A sealant for inter-app security holes in android\"", "authors": ["Y. K. Lee", " J. Y. Bang", " G. Safi", " A. Shahbazian", " Y. Zhao ", " N. Medvidovic"]}, {"title": " \"The rise of the citizen developer: Assessing the security impact of online app generators\"", "authors": ["M. Oltrogge", " E. Derr", " C. Stransky", " Y. Acar", " S. Fahl", " C. Rossow", " ."]}, {"title": " \"Harvesting developer credentials in android apps\"", "authors": ["Y. Zhou", " L. Wu", " Z. Wang ", " X. Jiang"]}, {"title": " \"Authorship attribution of android apps\"", "authors": ["H. Gonzalez", " N. Stakhanova ", " A. A. Ghorbani"]}, {"title": " \"An explorative study of the mobile app ecosystem from app developers\u2019 perspective\"", "authors": ["H. Wang", " Z. Liu", " Y. Guo", " X. Chen", " M. Zhang", " G. Xu", " ."]}, {"title": " \"Characterizing the global mobile app developers: a large-scale empirical study\"", "authors": ["H. Wang", " X. Wang ", " Y. Guo"]}, {"title": " \"Understanding and improving app installation security mechanisms through empirical analysis of android\"", "authors": ["D. Barrera", " J. Clark", " D. McCarney ", " P. C. van Oorschot"]}, {"title": " \"Baton: Certificate agility for android\u2019s decentralized signing infrastructure\"", "authors": ["D. Barrera", " D. McCarney", " J. Clark ", " P. C. van Oorschot"]}]},
{"doi": "10.1109/ASE.2002.1115019", "title": "What makes finite-state models more (or less) testable?", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software testing", "Stochastic processes", "Search engines", "Costs", "Software engineering", "Computer science", "Design for experiments", "Automata", "Mechanical factors", "Machine learning"], "abstract": "This paper studies how details of a particular model can effect the efficacy of a search for detects. We find that if the test method is fixed, we can identity classes of software that are more or less testable. Using a combination of model mutators and machine learning, we find that we can isolate topological features that significantly change the effectiveness of a defect detection tool. More specifically, we show that for one defect detection tool (a stochastic search engine) applied to a certain representation (finite state machines), we can increase the average odds of finding a defect from 69% to 91%. The method used to change those odds is quite general and should apply to other defect detection tools being applied to other representations.", "author": [{"name": "D. Owen", "affiliation": "Lane Department of Computer Science, West Virginia University, Morgantown, WV, USA"}, {"name": "T. Menzies", "affiliation": "Lane Department of Computer Science, West Virginia University, Morgantown, WV, USA"}, {"name": "B. Cukic", "affiliation": "Lane Department of Computer Science, West Virginia University, Morgantown, WV, USA"}], "time": "2002", "citationCount": "2", "references": [{"title": " \"On the use of tesability measures for dependability assessment\"", "authors": ["L. S. A. Bertolino"]}, {"title": " \"Basic SPIN Manual\"", "authors": ["Gerard J. Holzmann"]}, {"title": " \"Solving combinatorial auctions using stochastic local search\"", "authors": ["H. Hoos ", " C. Boutilier"]}, {"title": " \"A fast search for temporal properties of requirements\"", "authors": ["M. Houle", " T. Menzies ", " J. Powell"]}, {"title": " \"Pushing the envelope: Planning propositional logic and stochastic search\"", "authors": ["H. Kautz ", " B. Selman"]}, {"title": " \"Towards a theory for integration of mathematical verification and empirical testing\"", "authors": ["M. Lowry", " M. Boyd ", " D. Kulkarni"]}, {"title": " \"How many tests are enough?\"", "authors": ["T. Menzies ", " B. Cukic"]}, {"title": " \"Constraining discussions in requirements engineering\"", "authors": ["T. Menzies ", " Y. Hu"]}, {"title": " \"Saturation effects in testing of formal models\"", "authors": ["T. Menzies", " D. Owen ", " B. Cukic"]}, {"title": " \"Locating the phase transition in binary constraint satisfaction problems\"", "authors": ["B. Smith ", " M. Dyer"]}, {"title": " \"Software testability: The new verification\"", "authors": ["J. Voas ", " K. Miller"]}, {"title": "\"ANSI/IEEE standard 610.12\"", "authors": []}]},
{"doi": "10.1109/ASE.2019.00036", "title": "OAUTHLINT: An Empirical Study on OAuth Bugs in Android Applications", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Protocols", "Authorization", "Mobile applications", "Authentication", "Google", "Computer bugs"], "abstract": "Mobile developers use OAuth APIs to implement Single-Sign-On services. However, the OAuth protocol was originally designed for the authorization for third-party websites not to authenticate users in third-party mobile apps. As a result, it is challenging for developers to correctly implement mobile OAuth securely. These vulnerabilities due to the misunderstanding of OAuth and inexperience of developers could lead to data leakage and account breach. In this paper, we perform an empirical study on the usage of OAuth APIs in Android applications and their security implications. In particular, we develop OAUTHLINT, that incorporates a query-driven static analysis to automatically check programs on the Google Play marketplace. OAUTHLINT takes as input an anti-protocol that encodes a vulnerable pattern extracted from the OAuth specifications and a program P. Our tool then generates a counter-example if the anti-protocol can match a trace of Ps possible executions. To evaluate the effectiveness of our approach, we perform a systematic study on 600+ popular apps which have more than 10 millions of downloads. The evaluation shows that 101 (32%) out of 316 applications that use OAuth APIs make at least one security mistake.", "author": [{"name": "Tamjid Al Rahat", "affiliation": "Dept. of Computer Science, University of Virginia, U.S.A"}, {"name": "Yu Feng", "affiliation": "Dept. of Computer Science, University of California, Santa Barbara, U.S.A"}, {"name": "Yuan Tian", "affiliation": "Dept. of Computer Science, University of Virginia, U.S.A"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Oauth demystified for mobile application developers\"", "authors": ["Eric Y. Chen", " Yutong Pei", " Shuo Chen", " Yuan Tian", " Robert Kotcher ", " Patrick Tague"]}, {"title": " \"Vetting single sign-on SDK implementations via symbolic reasoning\"", "authors": ["Ronghai Yang", " Wing Cheong Lau", " Jiongyi Chen ", " Kehuan Zhang"]}, {"title": " \"Security issues in oauth 2.0 SSO implementations\"", "authors": ["Li Wanpeng ", " Chris J. Mitchell"]}, {"title": " \"Towards enhancing the security of oauth implementations in smart phones\"", "authors": ["Mohamed Shehab ", " Fadi Mohsen"]}, {"title": " \"The oauth 1.0 protocol\"", "authors": ["Eran Hammer-Lahav"]}, {"title": " \"The oauth 2.0 authorization framework\"", "authors": ["Dick Hardt"]}, {"title": " \"The oauth 2.0 authorization frame-work: Bearer token usage\"", "authors": ["Michael B. Jones ", " Dick Hardt"]}, {"title": " \"Precise context flow field object-sensitive and lifecycle-aware taint analysis for android apps\"", "authors": ["Steven Arzt", " Siegfried Rasthofer", " Christian Fritz", " Eric Bodden", " Alex", "re Bartel", " Jacques Klein", " ."]}, {"title": " \"The devil is in the (implementation) details: an empirical analysis of oauth SSO systems\"", "authors": ["Sun San-Tsai ", " Konstantin Beznosov"]}, {"title": " \"Model-based security testing: An empirical study on oauth 2.0 implementations\"", "authors": ["Ronghai Yang", " Li Guanchen", " Wing Cheong Lau", " Kehuan Zhang ", " Pili Hu"]}, {"title": " \"More guidelines than rules: CSRF vulnerabilities from noncompliant oauth 2.0 implementations\"", "authors": ["Ethan Shernan", " Henry Carter", " Dave Tian", " Patrick Traynor ", " R. B. Butler. Kevin"]}, {"title": " \"O single sign-off where art thou? an empirical analysis of single sign-on account hijacking and session management on the web\"", "authors": ["Mohammad Ghasemisharif", " Amrutha Ramesh", " Stephen Checkoway", " Chris Kanich ", " Jason Polakis"]}, {"title": " \"A privacy-enhanced oauth 2.0 based protocol for smart city mobile applications\"", "authors": ["Victor Sucasas", " Georgios Mantas", " Saud Althunibat", " Leonardo Oliveira", " Angelos Antonopoulos", " Ifiok Otung", " ."]}, {"title": " \"Authscope: Towards automatic discovery of vulnerable authorizations in online services\"", "authors": ["Chaoshun Zuo", " Qingchuan Zhao ", " Zhiqiang Lin"]}, {"title": " \"Vulnerability assessment of oauth implementations in android applications\"", "authors": ["Hui Wang", " Yuanyuan Zhang", " Li Juanru", " Hui Liu", " Wenbo Yang", " Li Bodong", " ."]}, {"title": " \"A comprehensive formal security analysis of oauth 2.0\"", "authors": ["Daniel Fett", " Ralf K\u00fcsters ", " Guido Schmitz"]}, {"title": " \"Formal verification of oauth 2.0 using alloy framework\"", "authors": ["Suhas Pai", " Yash Sharma", " Sunil Kumar ", " Sanjay Singh"]}, {"title": " \"Formal analysis of a single sign-on protocol implementation for android\"", "authors": ["Ye Quanqi", " Guangdong Bai", " Kailong Wang ", " Jin Song Dong"]}, {"title": " \"An empirical study of cryptographic misuse in android applications\"", "authors": ["Manuel Egele", " David Brumley", " Yanick Fratantonio ", " Christopher Kruegel"]}, {"title": " \"Vetting SSL usage in applications with SSLINT\"", "authors": ["He Boyuan", " Vaibhav Rastogi", " Yinzhi Cao", " Yan Chen", " V. N. Venkatakrishnan", " Runqing Yang", " ."]}, {"title": " \"Flowdroid: precise context flow field object-sensitive and lifecycle-aware taint analysis for android apps\"", "authors": ["Steven Arzt", " Siegfried Rasthofer", " Christian Fritz", " Eric Bodden", " Alex", "re Bartel", " Jacques Klein", " ."]}, {"title": " \"EXPLORER: query- and demand-driven exploration of interprocedural control flow properties\"", "authors": ["Yu Feng", " Xinyu Wang", " Isil Dillig ", " Calvin Lin"]}, {"title": " \"Finding application errors and security flaws using PQL: a program query language\"", "authors": ["Michael C. Martin", " V. Benjamin Livshits ", " Monica S. Lam"]}, {"title": " \"Demand-driven points-to analysis for java\"", "authors": ["Manu Sridharan", " Denis Gopan", " Lexin Shan ", " Rastislav Bod\u00edk"]}, {"title": " \"Apposcopy: semantics-based detection of android malware through static analysis\"", "authors": ["Yu Feng", " Saswat An", "", " Isil Dillig ", " Alex Aiken"]}]},
{"doi": "10.1109/ASE.2002.1115020", "title": "Analyzing dependencies in large component-based systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["XML", "Information analysis", "Software engineering", "Computer science", "Performance evaluation", "Life testing", "System testing", "Documentation", "Large-scale systems", "Independent component analysis"], "abstract": "Component-based development has become an important area in the software engineering field. In spite of this, there has been little effort to understand and to manage the different forms of dependencies that can occur in systems built from components. Dependencies reflect the potential for one component to affect or be affected by the elements (e.g., other components) that compose the system. Understanding dependencies is an essential requirement to perform important tasks, such as evolution and testing, during a component-based system's life cycle. In this paper, we present a technique to analyze dependencies in large component-based systems.", "author": [{"name": "M. Vieira", "affiliation": "Information and Computer Science, University of California, Irvine, CA, USA"}, {"name": "D. Richardson", "affiliation": "Information and Computer Science, University of California, Irvine, CA, USA"}], "time": "2002", "citationCount": "16", "references": [{"title": " \"Component Software - Beyond Object-Oriented Programming\"", "authors": ["C. Szyperski"]}, {"title": " \"Describing Dependencies in Component Access Points\"", "authors": ["M. Vieira", " M. Dias ", " D. J. Richardson"]}, {"title": " \"Issues in Describing and Analyzing Component Dependencies\"", "authors": ["M. Vieira ", " D. J. Richardson"]}, {"title": " \"The Equational Theory of Pomsets. Theoretical Computer Science\"", "authors": ["J.L. Gischer"]}, {"title": " \"Modeling Concurrency with Partial Orders\"", "authors": ["V.R. Pratt"]}, {"title": " \"Partially Ordered Multisets\"", "authors": ["Basten T. Parsing"]}]},
{"doi": "10.1109/ASE.2019.00037", "title": "History-Guided Configuration Diversification for Compiler Test-Program Generation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Testing", "Program processors", "Generators", "Companies", "Software systems"], "abstract": "Compilers, like other software systems, contain bugs, and compiler testing is the most widely-used way to assure compiler quality. A critical task of compiler testing is to generate test programs that could effectively and efficiently discover bugs. Though we can configure test generators such as Csmith to control the features of the generated programs, it is not clear what test configuration is effective. In particular, an effective test configuration needs to generate test programs that are bug-revealing, i.e., likely to trigger bugs, and diverse, i.e., able to discover different types of bugs. It is not easy to satisfy both properties. In this paper, we propose a novel test-program generation approach, called HiCOND, which utilizes historical data for configuration diversification to solve this challenge. HiCOND first infers the range for each option in a test configuration where bug-revealing test programs are more likely to be generated based on historical data. Then, it identifies a set of test configurations that can lead to diverse test programs through a search method (particle swarm optimization). Finally, based on the set of test configurations for compiler testing, HiCOND generates test programs, which are likely to be bug-revealing and diverse. We have conducted experiments on two popular compilers GCC and LLVM, and the results confirm the effectiveness of our approach. For example, HiCOND detects 75.00%, 133.33%, and 145.00% more bugs than the three existing approaches, respectively. Moreover, HiCOND has been successfully applied to actual compiler testing in a global IT company and detected 11 bugs during the practical evaluation.", "author": [{"name": "Junjie Chen", "affiliation": "College of Intelligence and Computing, Tianjin University, Tianjin, China"}, {"name": "Guancheng Wang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Peking University), MoE"}, {"name": "Dan Hao", "affiliation": "Key Laboratory of High Confidence Software Technologies, Peking University), MoE"}, {"name": "Yingfei Xiong", "affiliation": "Key Laboratory of High Confidence Software Technologies, Peking University), MoE"}, {"name": "Hongyu Zhang", "affiliation": "The University of Newcastle, NSW, Australia"}, {"name": "Lu Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Peking University), MoE"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Finding and understanding bugs in c compilers\"", "authors": ["X. Yang", " Y. Chen", " E. Eide ", " J. Regehr"]}, {"title": " \"Compiler validation via equivalence modulo inputs\"", "authors": ["V. Le", " M. Afshari ", " Z. Su"]}, {"title": " \"An empirical comparison of compiler testing techniques\"", "authors": ["J. Chen", " W. Hu", " D. Hao", " Y. Xiong", " H. Zhang", " L. Zhang", " ."]}, {"title": " \"Taming compiler fuzzers\"", "authors": ["Y. Chen", " A. Groce", " C. Zhang", " W.-K. Wong", " X. Fern", " E. Eide", " ."]}, {"title": " \"Test-case reduction for c compiler bugs\"", "authors": ["J. Regehr", " Y. Chen", " P. Cuoq", " E. Eide", " C. Ellison ", " X. Yang"]}, {"title": " \"Perses: Syntax-guided program reduction\"", "authors": ["C. Sun", " Y. Li", " Q. Zhang", " T. Gu ", " Z. Su"]}, {"title": " \"Compiler bug isolation via effective witness test program generation\"", "authors": ["J. Chen", " J. Han", " P. Sun", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Learning to prioritize test programs for compiler testing\"", "authors": ["J. Chen", " Y. Bai", " D. Hao", " Y. Xiong", " H. Zhang ", " B. Xie"]}, {"title": " \"Automated testing of graphics shader compilers\"", "authors": ["A. F. DONALDSON", " H. EVRARD", " A. LASCU ", " P. THOMSON"]}, {"title": " \"Random testing of c compilers targeting arithmetic optimization\"", "authors": ["E. Nagai", " H. Awazu", " N. Ishiura ", " N. Takeda"]}, {"title": " \"RUGRAT: evaluating program analysis and testing tools and compilers with large generated random benchmark applications\"", "authors": ["I. Hussain", " C. Csallner", " M. Grechanik", " Q. Xie", " S. Park", " K. Taneja", " ."]}, {"title": " \"Balancing soundness and efficiency for practical testing of configurable systems\"", "authors": ["S. Souto", " M. d\u2019Amorim ", " R. Gheyi"]}, {"title": " \"Time-space efficient regression testing for configurable systems\"", "authors": ["S. Souto ", " M. d\u2019Amorim"]}, {"title": " \"Finding deep compiler bugs via guided stochastic program mutation\"", "authors": ["V. Le", " C. Sun ", " Z. Su"]}, {"title": " \"Many-core compiler fuzzing\"", "authors": ["C. Lidbury", " A. Lascu", " N. Chong ", " A. F. Donaldson"]}, {"title": " \"Toward understanding compiler bugs in gcc and llvm\"", "authors": ["C. Sun", " V. Le", " Q. Zhang ", " Z. Su"]}, {"title": " \"Swarm testing\"", "authors": ["A. Groce", " C. Zhang", " E. Eide", " Y. Chen ", " J. Regehr"]}, {"title": " \"Differential testing for software\"", "authors": ["W. M. McKeeman"]}, {"title": " \"Compiler test case generation methods: a survey and assessment\"", "authors": ["A. S. Boujarwah ", " K. Saleh"]}, {"title": " \"Generating focused random tests using directed swarm testing\"", "authors": ["M. A. Alipour", " A. Groce", " R. Gopinath ", " A. Christi"]}, {"title": " \"Scaling up size and number of expressions in random testing of arithmetic optimization of c compilers\"", "authors": ["E. Nagai", " A. Hashimoto ", " N. Ishiura"]}, {"title": " \"Detecting change in categorical data: Mining contrast sets\"", "authors": ["S. D. Bay ", " M. J. Pazzani"]}, {"title": " \"Efficient mining of emerging patterns: Discovering trends and differences\"", "authors": ["G. Dong ", " J. Li"]}, {"title": " \"Comparison of similarity metrics for texture image retrieval\"", "authors": ["M. Kokare", " B. Chatterji ", " P. Biswas"]}, {"title": " \"Particle swarm optimization\"", "authors": ["R. Poli", " J. Kennedy ", " T. Blackwell"]}, {"title": " \"Search-based inference of polynomial metamorphic relations\"", "authors": ["J. Zhang", " J. Chen", " D. Hao", " Y. Xiong", " B. Xie", " L. Zhang", " ."]}, {"title": " \"Automatic discovery and cleansing of numerical metamorphic relations\"", "authors": ["B. Zhang", " H. Zhang", " J. Chen", " D. Hao ", " P. Moscato"]}, {"title": " \"Finding and analyzing compiler warning defects\"", "authors": ["C. Sun", " V. Le ", " Z. Su"]}, {"title": " \"Finding compiler bugs via live code mutation\"", "authors": ["C. Sun", " V. Le ", " Z. Su"]}, {"title": " \"Static duplicate bug report identification for compilers\"", "authors": ["J. Chen", " W. Hu", " D. Hao", " Y. Xiong", " H. Zhang ", " L. Zhang"]}, {"title": " \"Coverage prediction for accelerating compiler testing\"", "authors": ["J. Chen", " G. Wang", " D. Hao", " Y. Xiong", " H. Zhang", " L. Zhang", " ."]}, {"title": " \"Test case prioritization for compilers: A text-vector based approach\"", "authors": ["J. Chen", " Y. Bai", " D. Hao", " Y. Xiong", " H. Zhang", " L. Zhang", " ."]}, {"title": " \"Randomized stress-testing of link-time optimizers\"", "authors": ["V. Le", " C. Sun ", " Z. Su"]}, {"title": " \"Cause reduction: delta debugging even without bugs\"", "authors": ["A. Groce", " M. A. Alipour", " C. Zhang", " Y. Chen ", " J. Regehr"]}, {"title": " \"Cause reduction for quick testing\"", "authors": ["A. Groce", " M. A. Alipour", " C. Zhang", " Y. Chen ", " J. Regehr"]}, {"title": " \"A new optimizer using particle swarm theory\"", "authors": ["R. Eberhart ", " J. Kennedy"]}, {"title": " \"A modified particle swarm optimizer\"", "authors": ["Y. Shi ", " R. Eberhart"]}, {"title": " \"Particle swarm optimization\"", "authors": ["J. Kennedy"]}, {"title": " \"Skeletal program enumeration for rigorous compiler testing\"", "authors": ["Q. Zhang", " C. Sun ", " Z. Su"]}, {"title": " \"Help help i\u2019m being suppressed! the significance of suppressors in software testing\"", "authors": ["A. Groce", " C. Zhang", " M. A. Alipour", " E. Eide", " Y. Chen ", " J. Regehr"]}, {"title": " \"A history-based test prioritization technique for regression testing in resource constrained environments\"", "authors": ["J.-M. Kim ", " P. Adam"]}, {"title": " \"Learning to accelerate compiler testing\"", "authors": ["J. Chen"]}, {"title": " \"A history-based cost-cognizant test case prioritization technique in regression testing\"", "authors": ["Y.-C. Huang", " K.-L. Peng ", " C.-Y. Huang"]}, {"title": " \"Improving regression testing transparency and efficiency with history-based prioritization\u2013an industrial case study\"", "authors": ["E. Engstr\u00f6m", " P. Runeson ", " A. Ljung"]}, {"title": " \"Efficient regression testing based on test history: An industrial evaluation\"", "authors": ["E. D. Ekelund ", " E. Engstrom"]}, {"title": " \"History-based test case prioritization for black box testing using ant colony optimization\"", "authors": ["T. Noguchi", " H. Washizaki", " Y. Fukazawa", " A. Sato ", " K. Ota"]}, {"title": " \"History-driven build failure fixing: how far are we?\"", "authors": ["Y. Lou", " J. Chen", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Optimizing test prioritization via test distribution analysis\"", "authors": ["J. Chen", " Y. Lou", " L. Zhang", " J. Zhou", " X. Wang", " D. Hao", " ."]}, {"title": " \"Continuous incident triage for large-scale online service systems\"", "authors": ["J. Chen", " X. He", " Q. Lin", " H. Zhang", " D. Hao", " F. Gao", " ."]}, {"title": " \"Search-based software testing: Past present and future\"", "authors": ["P. McMinn"]}, {"title": " \"Search-based software test data generation: a survey\"", "authors": ["P. McMinn"]}, {"title": " \"Coverage-based grey-box fuzzing as markov chain\"", "authors": ["M. B\u00f6hme", " V.-T. Pham ", " A. Roychoudhury"]}, {"title": " \"Directed greybox fuzzing\"", "authors": ["M. B\u00f6hme", " V.-T. Pham", " M.-D. Nguyen ", " A. Roychoudhury"]}, {"title": " \"Seeding strategies in search-based unit test generation\"", "authors": ["J. M. Rojas", " G. Fraser ", " A. Arcuri"]}, {"title": " \"Search-based system testing: high coverage no false alarms\"", "authors": ["F. Gross", " G. Fraser ", " A. Zeller"]}, {"title": " \"Search-based stress testing the elastic resource provisioning for cloud-based applications\"", "authors": ["A. Alourani", " M. A. N. Bikas ", " M. Grechanik"]}, {"title": " \"An approach for search based testing of null pointer exceptions\"", "authors": ["D. Romano", " M. D. Penta ", " G. Antoniol"]}, {"title": " \"Evosuite: automatic test suite generation for object-oriented software\"", "authors": ["G. Fraser ", " A. Arcuri"]}]},
{"doi": "10.1109/ASE.2002.1115021", "title": "Identifying cause and effect relations between events in concurrent event-based components", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Protocols", "Monitoring", "Context", "Yarn", "Computer science", "Communication system software", "Software systems", "Humans", "Instruments"], "abstract": "Concurrent event-based components present characteristics that impose difficulties in understanding their dynamic behavior, mainly for interpreting the cause and effect relations between input and output events in component interactions. In this paper, we propose a technique to help in the process of understanding the dynamic behavior of concurrent event-based components. It checks the event trace (generated by monitoring the component execution) against a specification of the component communication protocol (even with a possibly incomplete or incorrect specification). The technique identifies and presents the more probable cause and effect relations between the component events, providing also a measurement related to this probability.", "author": [{"name": "M.S. Dias", "affiliation": "Information and Computer Science, University of California, Irvine, CA, USA"}, {"name": "D.J. Richardson", "affiliation": "Information and Computer Science, University of California, Irvine, CA, USA"}], "time": "2002", "citationCount": "3", "references": [{"title": " \"Identifying Cause & Effect Relations between Events in Concurrent Event-Based Components\"", "authors": ["M. Dias ", " D. Richardson"]}, {"title": " \"Go To Statement Considered Harmful\"", "authors": ["Dijkstra"]}, {"title": " \"Monitoring Software Components and Component-Based Software\"", "authors": ["J. Gao", " E. Zhu", " S. Shim ", " L. Chang"]}, {"title": " \"Time Clocks and the Ordering of Events in a Distributed System\"", "authors": ["L. Lamport"]}, {"title": " \"On Formalism in Specifications\"", "authors": ["B. Meyer"]}, {"title": " \"Application-Dependent Dynamic Monitoring of Distributed and Parallel Systems\"", "authors": ["D. Ogle", " K. Schwan ", " R. Snodgrass"]}, {"title": " \"Protocol Conformance Testing Using Unique Input/Output Sequences\" in Advanced Series in Electrical and Computer Engineering \u2013", "authors": ["X. Sun", " Y. Shen", " C. Feng ", " F. Lombardi"]}]},
{"doi": "10.1109/ASE.2019.00038", "title": "ReduKtor: How We Stopped Worrying About Bugs in Kotlin Compiler", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Debugging", "Program processors", "Computer bugs", "Tools", "Computer languages", "Software engineering", "Prototypes"], "abstract": "Bug localization is well-known to be a difficult problem in software engineering, and specifically in compiler development, where it is beneficial to reduce the input program to a minimal reproducing example; this technique is more commonly known as delta debugging. What additionally contributes to the problem is that every new programming language has its own unique quirks and foibles, making it near impossible to reuse existing tools and approaches with full efficiency. In this experience paper we tackle the delta debugging problem w.r.t. Kotlin, a relatively new programming language from JetBrains. Our approach is based on a novel combination of program slicing, hierarchical delta debugging and Kotlin-specific transformations, which are synergistic to each other. We implemented it in a prototype called ReduKtor and did extensive evaluation on both synthetic and real Kotlin programs; we also compared its performance with classic delta debugging techniques. The evaluation results support the practical usability of our approach to Kotlin delta debugging and also shows the importance of using both language-agnostic and language-specific techniques to achieve best reduction efficiency and performance.", "author": [{"name": "Daniil Stepanov", "affiliation": "JetBrains Research, Saint Petersburg Polytechnic University, Saint Petersburg, Russia"}, {"name": "Marat Akhin", "affiliation": "JetBrains Research, Saint Petersburg Polytechnic University, Saint Petersburg, Russia"}, {"name": "Mikhail Belyaev", "affiliation": "JetBrains Research, Saint Petersburg Polytechnic University, Saint Petersburg, Russia"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Simplifying and isolating failure-inducing input\"", "authors": ["A Zeller ", " R Hildebr"]}, {"title": " \"Program slicing\"", "authors": ["M Weiser"]}, {"title": " \"HDD: Hierarchical delta debugging\"", "authors": ["G Misherghi ", " Z Su"]}, {"title": " \"Automatically reducing tree-structured test inputs\"", "authors": ["S Herfert", " J Patra ", " M Pradel"]}, {"title": " \"ORBS: Language-independent program slicing\"", "authors": ["D Binkley", " N Gold", " M Harman", " S Islam", " J Krinke ", " S Yoo"]}, {"title": " \"Automated bug isolation via program chipping\"", "authors": ["C. D. Sterling ", " R. A. Olsson"]}, {"title": " \"Testcase reduction for C compiler bugs\"", "authors": ["J Regehr", " Y Chen", " P Cuoq", " E Eide", " C Ellison ", " X Yang"]}, {"title": " \"An O(ND) difference algorithm and its variations\"", "authors": ["E. W. Myers"]}, {"title": " \"Using compressed bytecode traces for slicing Java programs\"", "authors": ["T Wang ", " A Roychoudhury"]}, {"title": " \"Pardis: Priority aware test case reduction\"", "authors": ["G Gharachorlu ", " N Sumner"]}, {"title": " \"Finding and understanding bugs in C compilers\"", "authors": ["X Yang", " Y Chen", " E Eide ", " J Regehr"]}, {"title": " \"Cause reduction: Delta debugging even without bugs\"", "authors": ["A Groce", " M. A. Alipour", " C Zhang", " Y Chen ", " J Regehr"]}, {"title": " \"Kaveri: Delivering the Indus Java program slicer to Eclipse\"", "authors": ["G Jayaraman", " V. P. Ranganath ", " J Hatcliff"]}, {"title": " \"JavaBST: Java backward slicing tool\"", "authors": ["M Abdallah", " B Alokush", " M Alrefaee", " M Salah", " R Bader ", " K Awad"]}, {"title": " \"CodeSurfer/Path inspector\"", "authors": ["P Anderson"]}, {"title": " \"Efficient unit test case minimization\"", "authors": ["A Leitner", " M Oriol", " A Zeller", " I Ciupa ", " B Meyer"]}, {"title": " \"Locating faulty code using failure-inducing chops\"", "authors": ["N Gupta", " H He", " X Zhang ", " R Gupta"]}, {"title": " \"Tree preprocessing and test outcome caching for efficient hierarchical delta debugging\"", "authors": ["R Hodov\u00e1n", " \u00c1. Kiss ", " T. Gyim\u00f3thy"]}, {"title": " \"Minimization of randomized unit test cases\"", "authors": ["Y Lei ", " J. H. Andrews"]}, {"title": " \"Isolating relevant component interactions with JINSI\"", "authors": ["A Orso", " S Joshi", " M Burger ", " A Zeller"]}, {"title": " \"Perses: Syntax-guided program reduction\"", "authors": ["C Sun", " Y Li", " Q Zhang", " T Gu ", " Z Su"]}]},
{"doi": "10.1109/ASE.2002.1115022", "title": "Systematic bridging the gap between requirements and OO design", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Object oriented modeling", "Design for disassembly", "Programming", "Impedance", "Design engineering", "Bridges", "Process design", "Software engineering"], "abstract": "Today, most of the OO software development methodologies analyze requirements in terms of objects and their interactions. As a result, they have the problem of forcing analysts to make design decisions on objects and their interactions at the early stage of requirements analysis. This paper gives a brief introduction of an enhanced DFD model called data flow net (DF net) that resolves the impeding mismatch between DFD based models and OO models. It also gives a brief introduction of an approach that uses DF net to specify use-cases in the requirements analysis stage without the need of making the above-mentioned major design decisions. In the design stage, the proposed approach transforms the DF nets specified during the requirements analysis stage systematically and precisely into OO designs. It bridges the gap between requirements and OO design. A significant part of the transformation can be automated.", "author": [{"name": "Hee Beng Kuan Tan", "affiliation": "School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore, Singapore"}, {"name": "Weihong Li", "affiliation": "School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore, Singapore"}], "time": "2002", "citationCount": 0, "references": [{"title": " \"Transforming of data flow analysis models to object oriented design\"", "authors": ["B. Alabiso"]}, {"title": " \"Structured Analysis and System Specification\" in ", "authors": ["T. Demarco"]}, {"title": " \"The Unified Software Development Process\" in ", "authors": ["I. Jacobson", " G. Booch ", " I. Rumbaugh"]}, {"title": " \"Software Requirements and Specification \u2013 a lexicon of practise\" in principles and prejudices", "authors": ["M. Jackson"]}, {"title": " \"Conceptual predesign: bridging the gap between requirements and conceptual design\"", "authors": ["C. Kop ", " H. C. Mayr"]}, {"title": " \"The impact of experience on individual performance and workload differences using OO and process-oriented systems analysis techniques\"", "authors": ["M. G. Morris ."]}, {"title": " \"Object-Oriented Modeling and Design\" in ", "authors": ["J. Rumbaugh ."]}, {"title": " \"A conceptual basis for feature engineering\"", "authors": ["C. R. Turner", " A. Fuggetta", " L. Lavazza ", " A. L. Wolf"]}, {"title": " \"A survey of structured and object-oriented software specification methods and techniques\"", "authors": ["R. Wieringa"]}, {"title": " \"Modern Structured Analysis\" in ", "authors": ["E. Yourdon"]}]},
{"doi": "10.1109/ASE.2019.00039", "title": "Targeted Example Generation for Compilation Errors", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Maintenance engineering", "Tools", "Programming", "Neural networks", "Program processors", "Training", "Particle separators"], "abstract": "We present TEGCER, an automated feedback tool for novice programmers. TEGCER uses supervised classification to match compilation errors in new code submissions with relevant pre-existing errors, submitted by other students before. The dense neural network used to perform this classification task is trained on 15000+ error-repair code examples. The proposed model yields a test set classification Pred@3 accuracy of 97.7% across 212 error category labels. Using this model as its base, TEGCER presents students with the closest relevant examples of solutions for their specific error on demand. A large scale (N>230) usability study shows that students who use TEGCER are able to resolve errors more than 25% faster on average than students being assisted by human tutors.", "author": [{"name": "Umair Z. Ahmed", "affiliation": "IIT Kanpur"}, {"name": "Renuka Sindhgatta", "affiliation": "Queensland University of Technology"}, {"name": "Nisheeth Srivastava", "affiliation": "IIT Kanpur"}, {"name": "Amey Karkare", "affiliation": "IIT Kanpur"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Booming enrollments: Good times?\"", "authors": ["T. Camp", " S. Zweben", " E. Walker ", " L. Barker"]}, {"title": " \"Debugging: a review of the literature from an educational perspective\"", "authors": ["R. McCauley", " S. Fitzgerald", " G. Lew", "owski", " L. Murphy", " B. Simon", " L. Thomas", " ."]}, {"title": " \"Unexpected tokens: A review of programming error messages and design guidelines for the future\"", "authors": ["B. A. Becker", " P. Denny", " R. Pettit", " D. Bouchard", " D. J. Bouvier", " B. Harrington", " ."]}, {"title": " \"The effects of enhanced compiler error messages on a syntax error debugging test\"", "authors": ["B. A. Becker", " K. Goslin ", " G. Glanville"]}, {"title": " \"Automatic Software Repair: a Bibliography\"", "authors": ["M. Monperrus"]}, {"title": " \"Compilation error repair: For the student programs from the student programs\"", "authors": ["U. Z. Ahmed", " P. Kumar", " A. Karkare", " P. Kar ", " S. Gulwani"]}, {"title": " \"A study of the difficulties of novice programmers\"", "authors": ["E. Lahtinen", " K. Ala-Mutka ", " H.-M. J\u00e4rvinen"]}, {"title": " \"Deep reinforcement learning for syntactic error repair in student programs\"", "authors": ["R. Gupta", " A. Kanade ", " S. K. Shevade"]}, {"title": " \"Deepfix: Fixing common c language errors by deep learning\"", "authors": ["R. Gupta", " S. Pal", " A. Kanade ", " S. Shevade"]}, {"title": " \"Automated Correction for Syntax Errors in Programming Assignments using Recurrent Neural Networks\"", "authors": ["S. Bhatia ", " R. Singh"]}, {"title": " \"Compiler error messages: What can help novices?\"", "authors": ["M.-H. Nienaltowski", " M. Pedroni ", " B. Meyer"]}, {"title": " \"Prutor: A System for Tutoring CS1 and Collecting Student Programs for Analysis\"", "authors": ["R. Das", " U. Z. Ahmed", " A. Karkare ", " S. Gulwani"]}, {"title": " \"LLVM: A compilation framework for lifelong program analysis & transformation\"", "authors": ["C. Lattner ", " V. Adve"]}, {"title": " \"Toward an instructionally oriented theory of example-based learning\"", "authors": ["A. Renkl"]}, {"title": " \"What would other programmers do: Suggesting solutions to error messages\"", "authors": ["B. Hartmann", " D. MacDougall", " J. Br", "t "]}, {"title": " \"Automated clustering and program repair for introductory programming assignments\"", "authors": ["S. Gulwani", " I. Radi\u010dek ", " F. Zuleger"]}, {"title": " \"All syntax errors are not equal\"", "authors": ["P. Denny", " A. Luxton-Reilly ", " E. Tempero"]}, {"title": " \"A survey of machine learning for big code and naturalness\"", "authors": ["M. Allamanis", " E. T. Barr", " P. Devanbu ", " C. Sutton"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"Imagenet classification with deep convolutional neural networks\"", "authors": ["A. Krizhevsky", " I. Sutskever ", " G. E. Hinton"]}, {"title": " \"Dropout: A simple way to prevent neural networks from over-fitting\"", "authors": ["N. Srivastava", " G. Hinton", " A. Krizhevsky", " I. Sutskever ", " R. Salakhutdinov"]}, {"title": " \"Tensorflow: A system for large-scale machine learning\"", "authors": ["M. Abadi", " P. Barham", " J. Chen", " Z. Chen", " A. Davis", " J. Dean", " ."]}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}, {"title": " \"sk_p: a neural program corrector for moocs\"", "authors": ["Y. Pu", " K. Narasimhan", " A. Solar-Lezama ", " R. Barzilay"]}, {"title": " \"Enhancing syntax error messages appears ineffectual\"", "authors": ["P. Denny", " A. Luxton-Reilly ", " D. Carpenter"]}, {"title": " \"Automatic grading and feedback using program repair for introductory programming courses\"", "authors": ["S. Parihar", " Z. Dadachanji", " P. K. Singh", " R. Das", " A. Karkare ", " A. Bhattacharya"]}, {"title": " \"Do enhanced compiler error messages help students?: Results inconclusive\"", "authors": ["R. S. Pettit", " J. Homer ", " R. Gee"]}, {"title": " \"Compiler Error Notifications Revisited: An Interaction-First Approach for Helping Developers More Effectively Comprehend and Resolve Error Notification\"", "authors": ["T. Barik", " J. Witschey", " B. Johnson ", " E. Murphy-Hill"]}, {"title": " \"Do developers read compiler error messages?\"", "authors": ["T. Barik", " J. Smith", " K. Lubick", " E. Holmes", " J. Feng", " E. Murphy-Hill", " ."]}, {"title": " \"How should compilers explain problems to developers?\"", "authors": ["T. Barik", " D. Ford", " E. Murphy-Hill ", " C. Parnin"]}, {"title": " \"Learning user friendly type-error messages\"", "authors": ["B. Wu", " J. P. Campora ", " S. Chen"]}, {"title": " \"Syntax and Sensibility: Using Language Models to Detect and Correct Syntax Errors\"", "authors": ["Eddie Antonio Santos", " Joshua Charles Campbell", " Dhvani Patel", " Abram Hindle ", " J. N. Amaral"]}, {"title": " \"Enhancing Python Compiler Error Messages via Stack Overflow\"", "authors": ["E. Thiselton ", " C. Treude"]}]},
{"doi": "10.1109/ASE.2002.1115023", "title": "Automatic test case optimization using a bacteriological adaptation model: application to .NET components", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automatic testing", "Computer aided software engineering", "Adaptation model", "Genetic mutations", "Artificial intelligence", "System testing", "Spine", "Genetic algorithms", "Computational intelligence", "Robustness"], "abstract": "In this paper, we present several complementary computational intelligence techniques that we explored in the field of .Net component testing. Mutation testing serves as the common backbone for applying classical and new artificial intelligence (AI) algorithms. With mutation tools, we know how to estimate the revealing power of test cases. With AI, we aim at automatically improving test case efficiency. We therefore looked first at genetic algorithms (GA) to solve the problem of test. The aim of the selection process is to generate test cases able to kill as many mutants as possible. We then propose a new AI algorithm that fits better to the test optimization problem, called bacteriological algorithm (BA): BAs behave better that GAs for this problem. However, between GAs and BAs, a family of intermediate algorithms exists: we explore the whole spectrum of these intermediate algorithms to determine whether an algorithm exists that would be more efficient than BAs.: the approaches are compared on a .Net system.", "author": [{"name": "B. Baudry", "affiliation": "IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France"}, {"name": "F. Fleurey", "affiliation": "IFSIC, Campus Universitaire de Beaulieu, Rennes Cedex, France"}, {"name": "J.-M. Jezequel", "affiliation": "IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France"}, {"name": "Y. Le Traon", "affiliation": "IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France"}], "time": "2002", "citationCount": "16", "references": [{"title": " \"Applying Design by Contract\"", "authors": ["B. Meyer"]}, {"title": " \"The Revealing Power of a Test Case\"", "authors": ["J. M. Voas ", " K. Miller"]}, {"title": " \"Hints on Test Data Selection: Help For The Practicing Programmer\"", "authors": ["R. DeMilio", " R. Lipton ", " F. Sayward"]}, {"title": " \"Reliable Objects: a Lightweight Approach Applied to Java\"", "authors": ["J.-M. J\u00e9z\u00e9quel", " D. Deveaux ", " Y. Le Traon"]}, {"title": " \"Genes and Bacteria for Automatic Test Cases Optimization in the. NET Environment\"", "authors": ["B. Baudry", " F. Fleurey", " Y. L. Traon ", " J. Jean-Marc"]}]},
{"doi": "10.1109/ASE.2019.00040", "title": "Understanding Exception-Related Bugs in Large-Scale Cloud Systems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Yarn", "Tools", "Java", "Software", "Static analysis"], "abstract": "Exception mechanism is widely used in cloud systems. This is mainly because it separates the error handling code from main business logic. However, the huge space of potential error conditions and the sophisticated logic of cloud systems present a big hurdle to the correct use of exception mechanism. As a result, mistakes in the exception use may lead to severe consequences, such as system downtime and data loss. To address this issue, the communities direly need a better understanding of the exception-related bugs, i.e., eBugs, which are caused by the incorrect use of exception mechanism, in cloud systems. In this paper, we present a comprehensive study on 210 eBugs from six widely-deployed cloud systems, including Cassandra, HBase, HDFS, Hadoop MapReduce, YARN, and ZooKeeper. For all the studied eBugs, we analyze their triggering conditions, root causes, bug impacts, and their relations. To the best of our knowledge, this is the first study on eBugs in cloud systems, and the first one that focuses on triggering conditions. We find that eBugs are severe in cloud systems: 74% of our studied eBugs affect system availability or integrity. Luckily, exposing eBugs through testing is possible: 54% of the eBugs are triggered by non-semantic conditions, such as network errors; 40% of the eBugs can be triggered by simulating the triggering conditions at simple system states. Furthermore, we find that the triggering conditions are useful for detecting eBugs. Based on such relevant findings, we build a static analysis tool, called DIET, and apply it to the latest versions of the studied systems. Our results show that DIET reports 31 bugs and bad practices, and 23 of them are confirmed by the developers as \"previously-unknown\" ones.", "author": [{"name": "Haicheng Chen", "affiliation": "Department of Computer Science and Engineering, The Ohio State University, United States"}, {"name": "Wensheng Dou", "affiliation": "State Key Lab of Computer Science, Institute of Software, Chinese Academy of Sciences, China"}, {"name": "Yanyan Jiang", "affiliation": "State Key Lab for Novel Software Technology, Nanjing University, China"}, {"name": "Feng Qin", "affiliation": "Department of Computer Science and Engineering, The Ohio State University, United States"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Simple testing can prevent most critical failures: An analysis of production failures in distributed data-intensive systems\"", "authors": ["D. Yuan", " Y. Luo", " X. Zhuang", " G. R. Rodrigues", " X. Zhao", " Y. Zhang", " ."]}, {"title": " \"What bugs live in the cloud? A study of 3000+ issues in cloud systems\"", "authors": ["H. S. Gunawi", " M. Hao", " T. Leesatapornwongsa", " T. Patana-anake", " T. Do", " J. Adityatama", " K. J. Eliazar", " A. Laksono", " J. F. Lukman", " V. Martin ."]}, {"title": " \"An exploratory study on exception handling bugs in Java programs\"", "authors": ["F. Ebert", " F. Castor ", " A. Serebrenik"]}, {"title": " \"Do Android developers neglect error handling? A maintenance-centric study on the relationship between Android abstractions and uncaught exceptions\"", "authors": ["J. Oliveira", " D. Borges", " T. Silva", " N. Cacho ", " F. Castor"]}, {"title": " \"Unveiling exception handling bug hazards in Android based on GitHub and Google code issues\"", "authors": ["R. Coelho", " L. Almeida", " G. Gousios ", " A. van Deursen"]}, {"title": " \"Large-scale analysis of framework-specific exceptions in Android Apps\"", "authors": ["L. Fan", " T. Su", " S. Chen", " G. Meng", " Y. Liu", " L. Xu", " ."]}, {"title": " \"A catalogue of bug patterns for exception handling in aspect-oriented programs\"", "authors": ["R. Coelho", " A. Rashid", " A. von Staa", " J. Noble", " U. Kulesza ", " C. Lucena"]}, {"title": " \"Towards robust file system checkers\"", "authors": ["O. R. Gatla", " M. Hameed", " M. Zheng", " V. Dubeyko", " A. Manzanares", " F. Blagojevi\u0107", " ."]}, {"title": " \"An empirical study on crash recovery bugs in large-scale distributed systems\"", "authors": ["Y. Gao", " W. Dou", " F. Qin", " C. Gao", " D. Wang", " J. Wei", " ."]}, {"title": " \"KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs\"", "authors": ["C. Cadar", " D. Dunbar", " D. R. Engler ."]}, {"title": " \"Automated whitebox fuzz testing\"", "authors": ["P. Godefroid", " M. Y. Levin", " D. A. Molnar ."]}, {"title": " \"Torturing databases for fun and profit\"", "authors": ["M. Zheng", " J. Tucek", " D. Huang", " F. Qin", " M. Lillibridge", " E. S. Yang", " ."]}, {"title": " \"FATE and DESTINI: A framework for cloud recovery testing\"", "authors": ["H. S. Gunawi", " T. Do", " P. Joshi", " P. Alvaro", " J. M. Hellerstein", " A. C. ArpaciDusseau", " ."]}, {"title": " \"Correlated crash vulnerabilities\"", "authors": ["R. Alagappan", " A. Ganesan", " Y. Patel", " T. S. Pillai", " A. C. Arpaci-Dusseau ", " R. H. Arpaci-Dusseau"]}, {"title": " \"FCatch: Automatically detecting time-of-fault bugs in cloud systems\"", "authors": ["H. Liu", " X. Wang", " G. Li", " S. Lu", " F. Ye ", " C. Tian"]}, {"title": " \"An analysis of network-partitioning failures in cloud systems\"", "authors": ["A. Alquraan", " H. Takruri", " M. Alfatafta ", " S. Al-Kiswany"]}, {"title": " \"SAMC: Semantic-aware model checking for fast discovery of deep bugs in cloud systems\"", "authors": ["T. Leesatapornwongsa", " M. Hao", " P. Joshi", " J. F. Lukman ", " H. S. Gunawi"]}, {"title": " \"Redundancy does not imply fault tolerance: Analysis of distributed storage reactions to single errors and corruptions\"", "authors": ["A. Ganesan", " R. Alagappan", " A. C. Arpaci-Dusseau ", " R. H. ArpaciDusseau"]}, {"title": " \"Revisiting exception handling practices with exception flow analysis\"", "authors": ["G. B. de P\u00e1dua ", " W. Shang"]}, {"title": " \"Understanding the exception handling strategies of Java libraries: An empirical study\"", "authors": ["D. Sena", " R. Coelho", " U. Kulesza ", " R. Bonif\u00e1cio"]}, {"title": " \"Pruning pushdown exception-flow analysis\"", "authors": ["S. Liang", " W. Sun", " M. Might", " A. Keep ", " D. Van Horn"]}, {"title": " \"In-depth characterization of exception flows in software product lines: An empirical study\"", "authors": ["H. Melo", " R. Coelho", " U. Kulesza ", " D. Sena"]}, {"title": " \"Interprocedural exception analysis for C++\"", "authors": ["P. Prabhu", " N. Maeda", " G. Balakrishnan", " F. Ivan\u010di\u0107 ", " A. Gupta"]}, {"title": " \"Exception analysis and points-to analysis: Better together\"", "authors": ["M. Bravenboer ", " Y. Smaragdakis"]}, {"title": " \"Mining exception-handling rules as sequence association rules\"", "authors": ["S. Thummalapenta ", " T. Xie"]}, {"title": " \"Improving developers awareness of the exception handling policy\"", "authors": ["T. Montenegro", " H. Melo", " R. Coelho ", " E. Barbosa"]}, {"title": " \"Analysis of exception handling patterns in Java projects: An empirical study\"", "authors": ["S. Nakshatri", " M. Hegde ", " S. Th"]}, {"title": " \"Challenging analytical knowledge on exception-handling: An empirical study of 32 Java software packages\"", "authors": ["M. Monperrus", " M. G. de Montauzan", " B. Cornu", " R. Marvie ", " R. Rouvoy"]}, {"title": " \"Examining programmer practices for locally handling exceptions\"", "authors": ["M. B. Kery", " C. Le Goues ", " B. A. Myers"]}, {"title": " \"TaxDC: A taxonomy of non-deterministic concurrency bugs in datacenter distributed systems\"", "authors": ["T. Leesatapornwongsa", " J. F. Lukman", " S. Lu ", " H. S. Gunawi"]}, {"title": " \"Understanding real-world timeout problems in cloud server systems\"", "authors": ["T. Dai", " J. He", " X. Gu ", " S. Lu"]}, {"title": " \"Learning from mistakes: A comprehensive study on real world concurrency bug characteristics\"", "authors": ["S. Lu", " S. Park", " E. Seo ", " Y. Zhou"]}, {"title": " \"An empirical study of operating systems errors\"", "authors": ["A. Chou", " J. Yang", " B. Chelf", " S. Hallem ", " D. Engler"]}, {"title": " \"How do fixes become bugs?\"", "authors": ["Z. Yin", " D. Yuan", " Y. Zhou", " S. Pasupathy ", " L. Bairavasundaram"]}, {"title": " \"CTrigger: Exposing atomicity violation bugs from their hiding places\"", "authors": ["S. Park", " S. Lu ", " Y. Zhou"]}, {"title": " \"ConMem: Detecting severe concurrency bugs through an effect-oriented approach\"", "authors": ["W. Zhang", " C. Sun ", " S. Lu"]}, {"title": " \"Failure sketching: A technique for automated root cause diagnosis of in-production failures\"", "authors": ["B. Kasikci", " B. Schubert", " C. Pereira", " G. Pokam ", " G. C"]}]},
{"doi": "10.1109/ASE.2002.1115025", "title": "From early requirements to user interface prototyping: a methodological approach", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["User interfaces", "Prototypes", "Unified modeling language", "Software prototyping", "Production systems", "Business communication", "Software systems", "Application software", "Embedded software", "Programming"], "abstract": "The objective of this paper is to define a software production process which represents the correspondence between the primitive elements of a business model (represented in the framework i*) and the user interface of the software system. The representation of the user interface is compliant with the Unified Model Language (UML). We use a use case model as an intermediary between the business requirements and the application software. By doing this, we go a step further in the process of properly embedding early requirements engineering into the software production process, because organizational users can validate their requirements as early as possible. This is done through the validation of the user interfaces which are generated as a software representation of these requirements. These interfaces can also be reused for further refinement as a useful starting point in the software development process.", "author": [{"name": "A. Martinez", "affiliation": "Spain I.T. Zacatepec, Valencia University of Technology, Spain"}, {"name": "H. Estrada", "affiliation": "Spain CENIDET, Valencia University of Technology, Spain"}, {"name": "J. Sanchez", "affiliation": "Valencia University of Technology, Spain"}, {"name": "O. Pastor", "affiliation": "Valencia University of Technology, Spain"}], "time": "2002", "citationCount": "8", "references": [{"title": " \"Software for Use: A practical Guide to the Models and Methods of Usage-Centered Design\" in ", "authors": ["L.L Constantine ", " L.A.D. Lockwood"]}, {"title": "\"ITU: Recommendation Z. 120: Message Sequence Chart (MSC)\" in ", "authors": []}, {"title": " \"an software production environment combining conventional and formal methods\"", "authors": ["O. Pastor", " E. Insfr\u00e1n", " V. Pelechano ", " O O Method"]}, {"title": " \"A Hierarchical Use Case Model with Graphical Representation\"", "authors": ["B Regnell", " M Andersson ", " J. Bergstr"]}, {"title": " \"From User Requirements to User Interfaces: a methodological approach\"", "authors": ["J S\u00e1nchez", " O Pastor ", " J.J. Fons"]}, {"title": " \"OBLOG Object-Oriented Logic: An informal introduction\"", "authors": ["A. Serdanas", " C. Serdanas ", " Gouveia"]}, {"title": " \"Automated Support for Constructing OMT Scenarios and State Diagrams\"", "authors": ["T. Systa"]}, {"title": " \"Modelling Strategic Relationships for Process Reengineering\"", "authors": ["Yu Eric"]}]},
{"doi": "10.1109/ASE.2019.00041", "title": "iFeedback: Exploiting User Feedback for Real-Time Issue Detection in Large-Scale Online Service Systems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Monitoring", "Real-time systems", "Task analysis", "Computer bugs", "Runtime", "Anomaly detection"], "abstract": "Large-scale online systems are complex, fast-evolving, and hardly bug-free despite the testing efforts. Backend system monitoring cannot detect many types of issues, such as UI related bugs, bugs with small impact on backend system indicators, or errors from third-party co-operating systems, etc. However, users are good informers of such issues: They will provide their feedback for any types of issues. This experience paper discusses our design of iFeedback, a tool to perform real-time issue detection based on user feedback texts. Unlike traditional approaches that analyze user feedback with computation-intensive natural language processing algorithms, iFeedback is focusing on fast issue detection, which can serve as a system life-condition monitor. In particular, iFeedback extracts word combination-based indicators from feedback texts. This allows iFeedback to perform fast system anomaly detection with sophisticated machine learning algorithms. iFeedback then further summarizes the texts with an aim to effectively present the anomaly to the developers for root cause analysis. We present our representative experiences in successfully applying iFeedback in tens of large-scale production online service systems in ten months.", "author": [{"name": "Wujie Zheng", "affiliation": "School of Computer Science, Fudan University, Shanghai, China"}, {"name": "Haochuan Lu", "affiliation": "School of Computer Science, Fudan University, Shanghai, China"}, {"name": "Yangfan Zhou", "affiliation": "School of Computer Science, Fudan University, Shanghai, China"}, {"name": "Jianming Liang", "affiliation": "Tencent Inc., Shenzhen, China"}, {"name": "Haibing Zheng", "affiliation": "Tencent Inc., Shenzhen, China"}, {"name": "Yuetang Deng", "affiliation": "Tencent Inc., Shenzhen, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Behavioral execution comparison: Are tests representative of field behavior?\"", "authors": ["Q. Wang", " Y. Brun ", " A. Orso"]}, {"title": " \"Predicting defects using test execution logs in an industrial setting\"", "authors": ["A. Tosun", " O. Turkgulu", " D. Razon", " H. Y. Aydemir ", " A. Gureller"]}, {"title": " \"On\u00a8 rapid releases and software testing: a case study and a semi-systematic literature review\"", "authors": ["M. V. Mantyl\u00e4", " B. Adams", " F. Khomh", " E. Engstr\u00f6m ", " K. Petersen"]}, {"title": " \"Toward fine-grained unsupervised scalable performance diagnosis for production cloud computing systems\"", "authors": ["H. Mi", " H. Wang", " Y. Zhou", " M. Lyu ", " H. Cai"]}, {"title": " \"User feedback in the appstore: An empirical study\"", "authors": ["D. Pagano ", " W. Maalej"]}, {"title": " \"AR-Miner: mining informative reviews for developers from mobile app marketplace\"", "authors": ["N. Chen", " J. Lin", " S. C. Hoi", " X. Xiao ", " B. Zhang"]}, {"title": " \"User reviews matter! tracking crowdsourced reviews to support evolution of successful apps\"", "authors": ["F. Palomba", " M. L. Vasquez", " G. Bavota", " R. Oliveto", " M. D. Penta", " D. Poshyvanyk", " ."]}, {"title": " \"Release planning of mobile apps based on user reviews\"", "authors": ["L. Villarroel", " G. Bavota", " B. Russo", " R. Oliveto ", " M. D. Penta"]}, {"title": " \"Online app review analysis for identifying emerging issues\"", "authors": ["C. Gao", " J. Zeng", " M. R. Lyu ", " I. King"]}, {"title": " \"It operations and ai\"", "authors": ["S. Mohanty ", " S. Vyas"]}, {"title": " \"Efficient discovery of abnormal event sequences in enterprise security systems\"", "authors": ["B. Dong", " Z. Chen", " H. Wang", " L.-A. Tang", " K. Zhang", " Y. Lin", " ."]}, {"title": " \"Correlating events with time series for incident diagnosis\"", "authors": ["C. Luo", " J.-G. Lou", " Q. Lin", " Q. Fu", " R. Ding", " D. Zhang", " ."]}, {"title": " \"PreFix: Switch failure prediction in datacenter networks\"", "authors": ["S. Zhang", " Y. Liu", " W. Meng", " Z. Luo", " J. Bu", " S. Yang", " ."]}, {"title": " \"DeepLog: Anomaly detection and diagnosis from system logs through deep learning\"", "authors": ["M. Du", " F. Li", " G. Zheng ", " V. Srikumar"]}, {"title": " \"Log clustering based problem identification for online service systems\"", "authors": ["Q. Lin", " H. Zhang", " J.-G. Lou", " Y. Zhang ", " X. Chen"]}, {"title": " \"CherryPick: Adaptively unearthing the best cloud configurations for big data analytics\"", "authors": ["O. Alipourfard", " H. H. Liu", " J. Chen", " S. Venkataraman", " M. Yu ", " M. Zhang"]}, {"title": " \"What would users change in my app? summarizing app reviews for recommending software changes\"", "authors": ["A. Di Sorbo", " S. Panichella", " C. V. Alex", "ru", " J. Shimagaki", " C. A. Visaggio", " G. Canfora", " ."]}, {"title": " \"Phrase-based extraction of user opinions in mobile app reviews\"", "authors": ["P. M. Vu", " H. V. Pham", " T. T. Nguyen ", " T. T. Nguyen"]}, {"title": " \"Why people hate your app: Making sense of user feedback in a mobile app store\"", "authors": ["B. Fu", " J. Lin", " L. Li", " C. Faloutsos", " J. Hong ", " N. Sadeh"]}, {"title": " \"Sequential anomaly detection in the presence of noise and limited feedback\"", "authors": ["M. Raginsky", " R. M. Willett", " C. Horn", " J. Silva ", " R. F. Marcia"]}, {"title": " \"Time series anomaly detection for trustworthy services in cloud computing systems\"", "authors": ["C. Huang", " G. Min", " Y. Wu", " Y. Ying", " K. Pei ", " Z. Xiang"]}, {"title": " \"Feedback-guided anomaly discovery via online optimization\"", "authors": ["M. A. Siddiqui", " A. Fern", " T. G. Dietterich", " R. Wright", " A. Theriault ", " D. W. Archer"]}, {"title": " \"Robust and rapid adaption for concept drift in software system anomaly detection\"", "authors": ["M. Ma", " S. Zhang", " D. Pei", " X. Huang ", " H. Dai"]}, {"title": " \"Robust and rapid clustering of kpis for large-scale anomaly detection\"", "authors": ["Z. Li", " Y. Zhao", " R. Liu ", " D. Pei"]}, {"title": " \"Hotspot: Anomaly localization for additive kpis with multi-dimensional attributes\"", "authors": ["Y. Sun", " Y. Zhao", " Y. Su", " D. Liu", " X. Nie", " Y. Meng", " ."]}, {"title": " \"Generic and scalable framework for automated time-series anomaly detection\"", "authors": ["N. Laptev", " S. Amizadeh ", " I. Flint"]}, {"title": " \"Unsupervised anomaly detection via variational auto-encoder for seasonal kpis in web applications\"", "authors": ["H. Xu", " W. Chen", " N. Zhao", " Z. Li", " J. Bu", " Z. Li", " ."]}, {"title": " \"Opprentice: Towards practical and automatic anomaly detection through machine learning\"", "authors": ["D. Liu", " Y. Zhao", " H. Xu", " Y. Sun", " D. Pei", " J. Luo", " ."]}, {"title": " \"YADING: Fast clustering of large-scale time series data\"", "authors": ["R. Ding", " Q. Wang", " Y. Dang", " Q. Fu", " H. Zhang ", " D. Zhang"]}, {"title": " \"iDice: Problem identification for emerging issues\"", "authors": ["Q. Lin", " J.-G. Lou", " H. Zhang ", " D. Zhang"]}, {"title": " \"Identifying security bug reports via text mining: An industrial case study\"", "authors": ["M. Gegick", " P. Rotella ", " T. Xie"]}, {"title": " \"Automated severity assessment of software defect reports\"", "authors": ["T. Menzies ", " A. Marcus"]}, {"title": " \"Combining text mining and data mining for bug report classification\"", "authors": ["Y. Zhou", " Y. Tong", " R. Gu ", " H. Gall"]}, {"title": " \"Is it a bug or an enhancement?: A text-based approach to classify change requests\"", "authors": ["G. Antoniol", " K. Ayari", " M. D. Penta", " F. Khomh ", " Y.-G. Guhneuc"]}, {"title": " \"Predicting the severity of a reported bug\"", "authors": ["A. Lamkanfi", " S. Demeyer", " E. Giger ", " B. Goethals"]}, {"title": " \"Dependency-based gated recursive neural network for chinese word segmentation\"", "authors": ["J. Xu ", " X. Sun"]}, {"title": " \"Arima models to predict next-day electricity prices\"", "authors": ["J. Contreras", " R. Espinola", " F. J. Nogales ", " A. J. Conejo"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"Xgboost: A scalable tree boosting system\"", "authors": ["T. Chen ", " C. Guestrin"]}]},
{"doi": "10.1109/ASE.2002.1115026", "title": "SeDiTeC-testing based on sequence diagrams", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automatic testing", "Software testing", "Unified modeling language", "Programming", "Application software", "Java", "Software engineering", "Collaboration", "Software systems"], "abstract": "In this paper we present a concept for automated testing of object-oriented applications and a tool called SeDiTeC that implements these concepts for Java applications. SeDiTeC uses UML sequence diagrams, that are complemented by test case data sets consisting of parameters and return values for the method calls, as test specification and therefore can easily be integrated into the development process as soon as the design phase starts. SeDiTeC supports specification of several test case data sets for each sequence diagram as well as to combine several sequence diagrams to so-called combined sequence diagrams thus reducing the number of diagrams needed. For classes and their methods whose behavior is specified in sequence diagrams and the corresponding test case data sets SeDiTeC can automatically generate test stubs thus enabling testing right from the beginning of the implementation phase. Validation is not restricted to comparing the test case data sets with the observed data, but can also include validation of pre- and postconditions.", "author": [{"name": "F. Fraikin", "affiliation": "Software Engineering Research Group, Darmstadt University of Technology"}, {"name": "T. Leonhardt", "affiliation": "Software Engineering Research Group, Darmstadt University of Technology"}], "time": "2002", "citationCount": "30", "references": [{"title": " \"Is Design Dead?\"", "authors": ["Martin Fowler"]}, {"title": " \"Test Infected: Programmers Love Writing Tests\"", "authors": ["Erich Gamma ", " Kent Beck"]}, {"title": " \"UM L-Based Integration Testing\"", "authors": ["Jean Hartmann", " Claudio Imoberdorf ", " Michael Meisinger"]}, {"title": " \"Generating Tests from UML Specifications\"", "authors": ["J. Offutt ", " A. Abdurazik"]}, {"title": " \"Sequence Diagrams: One Step at a Time\"", "authors": ["Doug Rosenberg ", " Kendall Scott"]}]},
{"doi": "10.1109/ASE.2019.00042", "title": "Continuous Incident Triage for Large-Scale Online Service Systems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Deep learning", "Industries", "Software", "Economics", "Logic gates", "Computer bugs", "Monitoring"], "abstract": "In recent years, online service systems have become increasingly popular. Incidents of these systems could cause significant economic loss and customer dissatisfaction. Incident triage, which is the process of assigning a new incident to the responsible team, is vitally important for quick recovery of the affected service. Our industry experience shows that in practice, incident triage is not conducted only once in the beginning, but is a continuous process, in which engineers from different teams have to discuss intensively among themselves about an incident, and continuously refine the incident-triage result until the correct assignment is reached. In particular, our empirical study on 8 real online service systems shows that the percentage of incidents that were reassigned ranges from 5.43% to 68.26% and the number of discussion items before achieving the correct assignment is up to 11.32 on average. To improve the existing incident triage process, in this paper, we propose DeepCT, a Deep learning based approach to automated Continuous incident Triage. DeepCT incorporates a novel GRU-based (Gated Recurrent Unit) model with an attention-based mask strategy and a revised loss function, which can incrementally learn knowledge from discussions and update incident-triage results. Using DeepCT, the correct incident assignment can be achieved with fewer discussions. We conducted an extensive evaluation of DeepCT on 14 large-scale online service systems in Microsoft. The results show that DeepCT is able to achieve more accurate and efficient incident triage, e.g., the average accuracy identifying the responsible team precisely is 0.641~0.729 with the number of discussion items increasing from 1 to 5. Also, DeepCT statistically significantly outperforms the state-of-the-art bug triage approach.", "author": [{"name": "Junjie Chen", "affiliation": "College of Intelligence and Computing, Tianjin University, Tianjin, China"}, {"name": "Xiaoting He", "affiliation": "Microsoft Research, Beijing, China"}, {"name": "Qingwei Lin", "affiliation": "Microsoft Research, Beijing, China"}, {"name": "Hongyu Zhang", "affiliation": "The University of Newcastle, NSW, Australia"}, {"name": "Dan Hao", "affiliation": "Key Laboratory of High Confidence Software Technologies, (Peking University), MoE"}, {"name": "Feng Gao", "affiliation": "Microsoft Azure, Redmond, Washington, USA"}, {"name": "Zhangwei Xu", "affiliation": "Microsoft Azure, Redmond, Washington, USA"}, {"name": "Yingnong Dang", "affiliation": "Microsoft Azure, Redmond, Washington, USA"}, {"name": "Dongmei Zhang", "affiliation": "Microsoft Research, Beijing, China"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"An empirical investigation of incident triage for online service systems\"", "authors": ["J. Chen", " X. He", " Q. Lin", " Y. Xu", " H. Zhang", " D. Hao", " ."]}, {"title": " \"Outage prediction and diagnosis for cloud service systems\"", "authors": ["Y. Chen", " X. Yang", " Q. Lin", " H. Zhang", " F. Gao", " Z. Xu", " ."]}, {"title": " \"Robust log-based anomaly detection on unstable log data\"", "authors": ["X. Zhang", " Y. Xu", " Q. Lin", " B. Qiao", " H. Zhang", " Y. Dang", " ."]}, {"title": " \"Compiler bug isolation via effective witness test program generation\"", "authors": ["J. Chen", " J. Han", " P. Sun", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"An empirical comparison of compiler testing techniques\"", "authors": ["J. Chen", " W. Hu", " D. Hao", " Y. Xiong", " H. Zhang", " L. Zhang", " ."]}, {"title": " \"History-guided configuration diversification for compiler test-program generation\"", "authors": ["J. Chen", " G. Wang", " D. Hao", " Y. Xiong", " H. Zhang ", " L. Zhang"]}, {"title": " \"Learning phrase representations using RNN encoder-decoder for statistical machine translation\"", "authors": ["K. Cho", " B. van Merrienboer", " \u00c7. G\u00fcl\u00e7ehre", " F. Bougares", " H. Schwenk ", " Y. Bengio"]}, {"title": " \"Applying deep learning based automatic bug triager to industrial projects\"", "authors": ["S.-R. Lee", " M.-J. Heo", " C.-G. Lee", " M. Kim ", " G. Jeong"]}, {"title": " \"Fasttext.zip: Compressing text classification models\"", "authors": ["A. Joulin", " E. Grave", " P. Bojanowski", " M. Douze", " H. J\u00e9gou ", " T. Mikolov"]}, {"title": " \"Convolutional neural networks for sentence classification\"", "authors": ["Y. Kim"]}, {"title": " \"Deep pyramid convolutional neural networks for text categorization\"", "authors": ["R. Johnson ", " T. Zhang"]}, {"title": " \"Representation learning: A review and new perspectives\"", "authors": ["Y. Bengio", " A. Courville ", " P. Vincent"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\"", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. S. Corrado ", " J. Dean"]}, {"title": " \"Deep convolutional neural networks for sentiment analysis of short texts\"", "authors": ["C. dos Santos ", " M. Gatti"]}, {"title": " \"Fuzzy set and cache-based approach for bug triaging\"", "authors": ["A. Tamrawi", " T. T. Nguyen", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"Improving automated bug triaging with specialized topic model\"", "authors": ["X. Xia", " D. Lo", " Y. Ding", " J. M. Al-Kofahi", " T. N. Nguyen ", " X. Wang"]}, {"title": " \"Individual comparisons by ranking methods\"", "authors": ["F. Wilcoxon"]}, {"title": " \"Improving bug triage with bug tossing graphs\"", "authors": ["G. Jeong", " S. Kim ", " T. Zimmermann"]}, {"title": " \"Effective bug triage based on historical bug-fix information\"", "authors": ["H. Hu", " H. Zhang", " J. Xuan ", " W. Sun"]}, {"title": " \"Towards effective bug triage with software data reduction techniques\"", "authors": ["J. Xuan", " H. Jiang", " Y. Hu", " Z. Ren", " W. Zou", " Z. Luo", " ."]}, {"title": " \"Optimized assignment of developers for fixing bugs an initial evaluation for eclipse projects\"", "authors": ["M. M. Rahman", " G. Ruhe ", " T. Zimmermann"]}, {"title": " \"The eclipse and mozilla defect tracking dataset: A genuine dataset for mining bug information\"", "authors": ["A. Lamkanfi", " J. P\u00e9rez ", " S. Demeyer"]}, {"title": " \"Fingerprinting the datacenter: automated classification of performance crises\"", "authors": ["P. Bodik", " M. Goldszmidt", " A. Fox", " D. B. Woodard ", " H. Andersen"]}, {"title": " \"Correlating instrumentation data to system states: A building block for automated diagnosis and control\"", "authors": ["I. Cohen", " J. S. Chase", " M. Goldszmidt", " T. Kelly ", " J. Symons"]}, {"title": " \"Capturing indexing clustering and retrieving system history\"", "authors": ["I. Cohen", " S. Zhang", " M. Goldszmidt", " J. Symons", " T. Kelly ", " A. Fox"]}, {"title": " \"Guided problem diagnosis through active learning\"", "authors": ["S. Duan ", " S. Babu"]}, {"title": " \"Automated debugging of SLO violations in enterprise systems\"", "authors": ["M. Natu", " S. Patil", " V. Sadaphal ", " H. Vin"]}, {"title": " \"Software analytics for incident management of online services: An experience report\"", "authors": ["J.-G. Lou", " Q. Lin", " R. Ding", " Q. Fu", " D. Zhang ", " T. Xie"]}, {"title": "\"Experience report on applying software analytics in incident management of online service\"", "authors": []}, {"title": " \"How to tame your online services\"", "authors": ["Q. Lin", " J.-G. Lou", " H. Zhang ", " D. Zhang"]}, {"title": " \"Who should fix this bug?\"", "authors": ["J. Anvik", " L. Hiew ", " G. C. Murphy"]}, {"title": " \"Learning to rank for bug report assignee recommendation\"", "authors": ["Y. Tian", " D. Wijedasa", " D. Lo ", " C. Le Goues"]}, {"title": " \"Automated bug assignment: Ensemble-based machine learning in large scale industrial contexts\"", "authors": ["L. Jonsson", " M. Borg", " D. Broman", " K. S", "ahl", " S. Eldh ", " P. Runeson"]}, {"title": " \"Bug report assignee recommendation using activity profiles\"", "authors": ["H. Naguib", " N. Narayan", " B. Br\u00fcgge ", " D. Helal"]}, {"title": " \"An empirical study on bug assignment automation using chinese bug data\"", "authors": ["Z. Lin", " F. Shu", " Y. Yang", " C. Hu ", " Q. Wang"]}, {"title": " \"Porchlight: A tag-based approach to bug triaging\"", "authors": ["G. Bortis ", " A. v. d. Hoek"]}, {"title": " \"Reducing the effort of bug report triage: Recommenders for development-oriented decisions\"", "authors": ["J. Anvik ", " G. C. Murphy"]}, {"title": " \"Crowdsourced bug triaging: Leveraging q&a platforms for bug assignment\"", "authors": ["A. S. Badashian", " A. Hindle ", " E. Stroulia"]}, {"title": " \"Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging\"", "authors": ["P. Bhattacharya ", " I. Neamtiu"]}, {"title": " \"A time-based approach to automatic bug report assignment\"", "authors": ["R. Shokripour", " J. Anvik", " Z. M. Kasirun ", " S. Zamani"]}, {"title": " \"Bug report assignee recommendation using activity profiles\"", "authors": ["H. Naguib", " N. Narayan", " B. Br\u00fcgge ", " D. Helal"]}, {"title": " \"Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation\"", "authors": ["R. Shokripour", " J. Anvik", " Z. M. Kasirun ", " S. Zamani"]}, {"title": " \"Assigning bug reports using a vocabulary-based expertise model of developers\"", "authors": ["D. Matter", " A. Kuhn ", " O. Nierstrasz"]}, {"title": " \"Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging\"", "authors": ["P. Bhattacharya ", " I. Neamtiu"]}, {"title": " \"Fixercache: unsupervised caching active developers for diverse bug triage\"", "authors": ["S. Wang", " W. Zhang ", " Q. Wang"]}, {"title": " \"Triaging incoming change requests: Bug or commit history or code authorship?\"", "authors": ["M. L. V\u00e1squez", " K. Hossen", " H. Dang", " H. H. Kagdi", " M. Gethers ", " D. Poshyvanyk"]}, {"title": " \"Crowdsourced bug triaging\"", "authors": ["A. S. Badashian", " A. Hindle ", " E. Stroulia"]}, {"title": " \"Support vector machines for classification and regression\"", "authors": ["S. R. Gunn ."]}, {"title": " \"Probabilistic topic models\"", "authors": ["M. Steyvers ", " T. Griffiths"]}]},
{"doi": "10.1109/ASE.2002.1115027", "title": "VIATRA - visual automated transformations for formal verification and validation of UML models", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Formal verification", "Unified modeling language", "Mathematical model", "Object oriented modeling", "Application software", "Software architecture", "Computer aided software engineering", "System analysis and design", "Mathematical analysis", "Environmental economics"], "abstract": "The VIATRA (visual automated model transformations) framework is the core of a transformation-based verification and validation environment for improving the quality of systems designed using the Unified Modeling Language by automatically checking consistency, completeness, and dependability requirements. In the current paper, we present an overview of (i) the major design goals and decisions, (ii) the underlying formal methodology based on metamodeling and graph transformation, (iii) the software architecture based upon the XMI standard, and (iv) several benchmark applications of the VIATRA framework.", "author": [{"name": "G. Csertan", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}, {"name": "G. Huszerl", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}, {"name": "I. Majzik", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}, {"name": "Z. Pap", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}, {"name": "A. Pataricza", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}, {"name": "D. Varro", "affiliation": "Department of Measurement and Information Systems, Budapest University\u00a0of\u00a0Technology\u00a0and\u00a0Economics, Hungary"}], "time": "2002", "citationCount": "58", "references": [{"title": " \"An overview of SAL\"", "authors": ["S. Bensalem", " V. Ganesh", " Y. Lakhnech", " C. Munoz", " S. Owre", " H. Rue\u00df", " ."]}, {"title": " \"Dependability analysis in the early phases of UML based system design\"", "authors": ["A. Bondavalli", " M. Dal Cin", " D. Latella", " I. Majzik", " A. Pataricza ", " G. Savoia"]}, {"title": " \"The model checker SPIN\"", "authors": ["G. Holzmann"]}, {"title": " \"Automatic verification of UML statechart diagrams using the SPIN model-checker\"", "authors": ["D. Latella", " I. Majzik ", " M. Massink"]}, {"title": " \"SAFEWARE: System Safety and Computers\" in ", "authors": ["N. G. Leveson"]}, {"title": " \"Checking general safety criteria on UML statecharts\"", "authors": ["Z. Pap", " I. Majzik ", " A. Pataricza"]}, {"title": "\"Handbook of Graph Grammars and Computing by Graph Transformations\" in ", "authors": []}, {"title": " \"The Unified Modeling Language Reference Manual\" in ", "authors": ["J. Rumbaugh", " I. Jacobson ", " G. Booch"]}, {"title": " \"Automatic program generation for and by model transformation systems\"", "authors": ["D. Varr\u00f3"]}, {"title": " \"Designing the automatic transformation of visual languages\"", "authors": ["D. Varr\u00f3", " G. Varr\u00f3 ", " A. Pataricza"]}]},
{"doi": "10.1109/ASE.2019.00043", "title": "Apricot: A Weight-Adaptation Approach to Fixing Deep Learning Models", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Training", "Neurons", "Deep learning", "Biological neural networks", "Computational modeling", "Debugging", "Maintenance engineering"], "abstract": "A deep learning (DL) model is inherently imprecise. To address this problem, existing techniques retrain a DL model over a larger training dataset or with the help of fault injected models or using the insight of failing test cases in a DL model. In this paper, we present Apricot, a novel weight-adaptation approach to fixing DL models iteratively. Our key observation is that if the deep learning architecture of a DL model is trained over many different subsets of the original training dataset, the weights in the resultant reduced DL model (rDLM) can provide insights on the adjustment direction and magnitude of the weights in the original DL model to handle the test cases that the original DL model misclassifies. Apricot generates a set of such reduced DL models from the original DL model. In each iteration, for each failing test case experienced by the input DL model (iDLM), Apricot adjusts each weight of this iDLM toward the average weight of these rDLMs correctly classifying the test case and/or away from that of these rDLMs misclassifying the same test case, followed by training the weight-adjusted iDLM over the original training dataset to generate a new iDLM for the next iteration. The experiment using five state-of-the-art DL models shows that Apricot can increase the test accuracy of these models by 0.87%-1.55% with an average of 1.08%. The experiment also reveals the complementary nature of these rDLMs in Apricot.", "author": [{"name": "Hao Zhang", "affiliation": "Department of Computer Science, City University of Hong Kong, Hong Kong"}, {"name": "W.K. Chan", "affiliation": "Department of Computer Science, City University of Hong Kong, Hong Kong"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Artificial neural network development by means of a novel combination of grammatical evolution and genetic algorithm\"", "authors": ["F. Ahmadizar", " K. Soltanian", " F. AkhlaghianTab ", " L. Tsoulos"]}, {"title": " \"Designing Neural Network Architectures using Reinforcement Learning\"", "authors": ["B. Baker", " O. Gupta", " N. Naik ", " R. Rakar"]}, {"title": " \"An empirical comparison of combinations of evolutionary algorithms and neural networks for classification problems\"", "authors": ["E. Cant\u00fa-Paz ", " C. Kamath"]}, {"title": " \"Prune Deep Neural Networks With the Modified L1/2 Penalty\"", "authors": ["J. Chang ", " J. Sha"]}, {"title": " \"A computationally efficient evolutionary algorithm for real-parameter optimization\"", "authors": ["K. Deb", " A. An", " "]}, {"title": " \"ImageNet: A Large-Scale Hierarchical Image Database\"", "authors": ["J. Deng", " W. Dong", " R. Socher", " L. Li", " K. Li ", " L. Fei-Fei"]}, {"title": " \"Adaptive subgradient methods for online learning and stochastic optimization\"", "authors": ["J. Duchi", " E. Hazan ", " Y. Singer"]}, {"title": " \"Dynamic recurrent neural networks: Theory and applications\"", "authors": ["C. L. Giles", " G. M. Kuhn ", " R. J. Williams"]}, {"title": " \"Understanding the difficulty of training deep feedforward neural networks\"", "authors": ["X. Glorot ", " Y. Bengio"]}, {"title": " \"Generative Adversarial Nets\"", "authors": ["I. Goodfellow", " J. Pouget-Abadie", " M. Mirza ."]}, {"title": " \"Explaining and Harnessing Adversarial Examples\"", "authors": ["I. J. Goodfellow", " J. Shlens ", " C. Szegedy"]}, {"title": " \"Towards deep neural network architectures robust to adversarial examples\"", "authors": ["S. Gu ", " L. Rigazio"]}, {"title": " \"DSD: regularizing deep neural networks with dense-sparse-dense training flow\"", "authors": ["S. Han", " J. Pool", " S. Narang ."]}, {"title": " \"Deep residual learning for image recognition\"", "authors": ["K. He", " X. Zhang", " S. Ren ", " J. Sun"]}, {"title": " \"Neuroevolution strategies for episodic reinforcement learning\"", "authors": ["V. Heidrich-Meisner ", " C. Igel"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"A proposed iteration optimization approach integrating backpropagation neural network with genetic algorithm\"", "authors": ["H. X. Huang", " J. C. Li ", " C. L. Xiao"]}, {"title": " \"Neuroevolution for reinforcement learning using evolution strategies\"", "authors": ["C. Igel"]}, {"title": " \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\"", "authors": ["S. Ioffe ", " C. Szegedy"]}, {"title": " \"Adam: A Method for Sthochastic Optimization\"", "authors": ["D. Kingma ", " J. Ba"]}, {"title": " \"Imagenet classification with deep convolutional neural networks\"", "authors": ["A. Krizhevsky", " I. Sutskever ", " G. E. Hinton"]}, {"title": " \"Deep learning\"", "authors": ["Y. LeCun", " Y. Bengio ", " G. Hinton"]}, {"title": " \"Gradient-based learning applied to document recognition\"", "authors": ["Y. LeCun", " L. Bottou", " Y. Bengio ", " P. Haffner"]}, {"title": " \"Input Layer Regularization of Multilayer Feedforward Neural Networks\"", "authors": ["F. Li", " J. M. Zurada", " Y. Liu ", " W. Wu"]}, {"title": " \"Deepgauge: Multi-granularity testing criteria for deep learning systems\"", "authors": ["L. Ma", " F. Juefei-Xu", " F. Zhang ."]}, {"title": " \"DeepMutation: Mutation testing of deep learning systems\"", "authors": ["L. Ma", " F. Zhang", " J. Sun ."]}, {"title": " \"MODE: automated neural network model debugging via state differential analysis and input selection\"", "authors": ["S. Ma", " Y. Liu", " W. C. Lee", " X. Zhang ", " A. Grama"]}, {"title": " \"Training Feedforward Neural Networks Using Genetic Algorithms\"", "authors": ["D. J. Montana ", " L. Davis"]}, {"title": " \"DeepFool: a simple and accurate method to fool deep neural networks\"", "authors": ["S. M. Moosavi-Dezfooli", " A. Fawzi ", " P. Frossard"]}, {"title": " \"Simple black-box adversarial attacks on deep neural networks\"", "authors": ["N. Narodytska ", " S. Kasiviswanathan"]}, {"title": " \"Tensorfuzz: Debugging neural networks with coverage-guided fuzzing\"", "authors": ["A. Odena ", " I. Goodfellow"]}, {"title": " \"Practical Black-Box Attacks against Machine Learning\"", "authors": ["N. Papernot", " P. McDaniel", " I. Goodfellow", " S. Jha", " Z. B. Celik ", " A. Swami"]}, {"title": " \"DeepXplore: Automated Whitebox Testing of Deep Learning Systems\"", "authors": ["K. Pei", " Y. Cao", " J. Yang ", " S. Jana"]}, {"title": " \"Large-scale evolution of image classifiers\"", "authors": ["E. Real", " S. Moore", " A. Selle", " S. Saxena", " Y. L. Suematsu", " J. Tan", " ."]}, {"title": " \"Group sparse regularization for deep neural networks\"", "authors": ["S. Scardapane", " D. Comminiello", " A. Hussain ", " A. Uncini"]}, {"title": " \"Very Deep convolutional networks for large-scale image recognition\"", "authors": ["K. Simonyan ", " A. Zisserman"]}, {"title": " \"Artificial neural networks generation using grammatical evolution\"", "authors": ["K. Soltanian", " F. A. Tab", " F. A. Zar ", " I. Tsoulos"]}, {"title": " \"One pixel attack for fooling deep neural networks\"", "authors": ["J. Su", " D. V. Vargas ", " K. Sakurai"]}, {"title": " \"Testing deep neural networks\"", "authors": ["Y. Sun", " X. Huang ", " D. Kroening"]}, {"title": " \"Intriguing properties of neural networks\"", "authors": ["C. Szegedy", " W. Zaremba", " I. Sutskever", " J. Bruna", " D. Erhan", " I. Goodfellow", " ."]}, {"title": " \"DeepTest: Automated testing of deepneural-network-driven autonomous cars\"", "authors": ["Y. Tian", " K. Pei", " S. Jana ", " B. Ray"]}, {"title": " \"Neural network training by means of cooperative evolutionary search Nuclear Instruments and Methods\"", "authors": ["A. P. Topchy ", " O. A. Lebedko"]}, {"title": " \"Regularization of Neural Networks using DropConnect\"", "authors": ["L. Wan", " M. Zeiler", " S. Zhang", " Y. LeCun ", " R. Fergus"]}, {"title": " \"Generating adversarial examples with adversarial networks\"", "authors": ["C. Xiao", " B. Li", " J. Y. Zhu", " W. He", " M. Liu ", " D. Song"]}, {"title": " \"An evolutionary constructive and pruning algorithm for artificial neural networks and its prediction applications\"", "authors": ["S. H. Yang ", " Y. P. Chen"]}, {"title": " \"Recurrent Neural Network Regularization\"", "authors": ["W. Zaremba", " I. Sutskever ", " O. Vinyals"]}, {"title": " \"ADADELTA: An Adaptive Learning Rate Method\"", "authors": ["M. Zeiler"]}, {"title": " \"Neural Architecture Search with Reinforcement Learning\"", "authors": ["B. Zoph ", " Q. Le"]}]},
{"doi": "10.1109/ASE.2002.1115028", "title": "A temporal logic approach to the specification of reconfigurable component-based systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Reconfigurable logic", "Mechanical factors", "Connectors", "Computer science", "Educational institutions", "Formal specifications", "Specification languages", "Architecture description languages", "LAN interconnection", "Knowledge engineering"], "abstract": "We propose a formal specification language for dynamically reconfigurable component-based systems, based on temporal logic. The main aim of the language is to allow one to specify behaviours of component-based systems declaratively, with special emphasis on behaviours in which the architectural structure of the system changes dynamically. Due to the semantics and organisation of our language, it is straightforward to hierarchically build reconfigurable systems in terms of subsystems and basic component parts, and reason about them within the language. Despite its expressive power, the language is rather simple.", "author": [{"name": "N. Aguirre", "affiliation": "Departamento de Computaci\u00f3n, Universidad Nacional de R\u00edo Cuarto, C\u00f3rdoba, Argentina"}, {"name": "T. Maibaum", "affiliation": "Department of Computer Science, King's College, London, United Kingdom"}], "time": "2002", "citationCount": "20", "references": [{"title": " \"Reasoning about Reconfigurable Object-Based Systems in a Temporal Logic Setting\"", "authors": ["N. Aguirre ", " T. Maibaum"]}, {"title": " \"Formalizing Architectural Connection\"", "authors": ["R. Allen ", " D. Garlan"]}, {"title": " \"Temporal Theories as Modularisation Units for Concurrent System Specification\" in Formal Aspects of Computing", "authors": ["J. Fiadeiro ", " T. Maibaum"]}, {"title": " \"Design Structures for Object-Based Systems\" in Formal Methods and Object Technology", "authors": ["J. Fiadeiro ", " T. Maibaum"]}, {"title": " \"Categorical Semantics of Parallel Program Design\"", "authors": ["J. Fiadeiro ", " T. Maibaum"]}, {"title": " \"Formal Specification and Analysis of Software Architetures using the Chemical Abstract Machine\"", "authors": ["P. Inverardi ", " A. Wolf"]}, {"title": " \"The Temporal Logic of Reactive and Concurrent Systems\" in ", "authors": ["Z. Manna ", " A. Pnueli"]}, {"title": " \"ADLs and Dynamic Architecture Changes\"", "authors": ["N. Medvidovic"]}, {"title": " \"A Framework for Classifying and Comparing Architecture Description Languages\"", "authors": ["N. Medvidovic ", " R. Taylor"]}, {"title": " \"Algebraic Software Architecture Reconfiguration\" in ESEC/FSE'99", "authors": ["M. Wermelinger ", " J. Fiadeiro"]}, {"title": " \"A Graph Based Architectural (Re)configuration Language\"", "authors": ["M. Wermelinger", " A. Lopes ", " J. Fiadeiro"]}]},
{"doi": "10.1109/ASE.2019.00044", "title": "Re-Factoring Based Program Repair Applied to Programming Assignments", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Maintenance engineering", "Lead", "Programming profession", "Tools", "Search problems", "Scalability"], "abstract": "Automated program repair has been used to provide feedback for incorrect student programming assignments, since program repair captures the code modification needed to make a given buggy program pass a given test-suite. Existing student feedback generation techniques are limited because they either require manual effort in the form of providing an error model, or require a large number of correct student submissions to learn from, or suffer from lack of scalability and accuracy. In this work, we propose a fully automated approach for generating student program repairs in real-time. This is achieved by first re-factoring all available correct solutions to semantically equivalent solutions. Given an incorrect program, we match the program with the closest matching refactored program based on its control flow structure. Subsequently, we infer the input-output specifications of the incorrect program's basic blocks from the executions of the correct program's aligned basic blocks. Finally, these specifications are used to modify the blocks of the incorrect program via search-based synthesis. Our dataset consists of almost 1,800 real-life incorrect Python program submissions from 361 students for an introductory programming course at a large public university. Our experimental results suggest that our method is more effective and efficient than recently proposed feedback generation approaches. About 30% of the patches produced by our tool Refactory are smaller than those produced by the state-of-art tool Clara, and can be produced given fewer correct solutions (often a single correct solution) and in a shorter time. We opine that our method is applicable not only to programming assignments, and could be seen as a general-purpose program repair method that can achieve good results with just a single correct reference solution.", "author": [{"name": "Yang Hu", "affiliation": "The University of Texas at Austin"}, {"name": "Umair Z. Ahmed", "affiliation": "National University of Singapore"}, {"name": "Sergey Mechtaev", "affiliation": "University College London"}, {"name": "Ben Leong", "affiliation": "The University of Texas at Austin"}, {"name": "Abhik Roychoudhury", "affiliation": "The University of Texas at Austin"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A feasibility study of using automated program repair for introductory programming assignments\"", "authors": ["J. Yi", " U. Z. Ahmed", " A. Karkare", " S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"Example-based learning in computer-aided stem education\"", "authors": ["S. Gulwani"]}, {"title": " \"Automated clustering and program repair for introductory programming assignments\"", "authors": ["S. Gulwani", " I. Radicek ", " F. Zuleger"]}, {"title": " \"Search align and repair: data-driven feedback generation for introductory programming exercises\"", "authors": ["K. Wang", " R. Singh ", " Z. Su"]}, {"title": " \"Automated feedback generation for introductory programming assignments\"", "authors": ["R. Singh", " S. Gulwani ", " A. Solar-Lezama"]}, {"title": " \"Neuro-symbolic program repair for correcting introductory programming assignments\"", "authors": ["S. Bhatia", " P. Kohli ", " R. Singh"]}, {"title": " \"Learning syntactic program transformations from examples\"", "authors": ["R. Rolim", " G. Soares", " L. D\u2019Antoni", " O. Polozov", " S. Gulwani", " R. Suzki", " ."]}, {"title": " \"Skp: A neural program corrector for moocs\"", "authors": ["Y. Pu", " K. Narasimhan", " A. Solar-Lezama ", " R. Barzilay"]}, {"title": " \"Test-equivalence analysis for automatic patch generation\"", "authors": ["S. Mechtaev", " X. Gao", " S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"Automatic diagnosis and correction of logical errors for functional programming assignments\"", "authors": ["J. Lee", " D. Song", " S. So ", " H. Oh"]}, {"title": " \"Automated program repair\"", "authors": ["C. Le Goues", " M. Pradel ", " A. Roychoudhury"]}, {"title": " \"Genprog: A generic method for automatic software repair\"", "authors": ["C. Le Goues", " T. Nguyen", " S. Forrest ", " W. Weimer"]}, {"title": " \"Automatic patch generation learned from human-written patches\"", "authors": ["D. Kim", " J. Nam", " J. Song ", " S. Kim"]}, {"title": " \"Semfix: Program repair via semantic analysis\"", "authors": ["H. D. T. Nguyen", " D. Qi", " A. Roychoudhury ", " S. Ch"]}, {"title": " \"Angelix: Scalable multiline program patch synthesis via symbolic analysis\"", "authors": ["S. Mechtaev", " J. Yi ", " A. Roychoudhury"]}, {"title": " \"Shaping program repair space with existing patches and similar code\"", "authors": ["J. Jiang", " Y. Xiong", " H. Zhang", " Q. Gao ", " X. Chen"]}, {"title": " \"Semantic program repair using a reference implementation\"", "authors": ["S. Mechtaev", " M.-D. Nguyen", " Y. Noller", " L. Grunske ", " A. Roychoudhury"]}]},
{"doi": "10.1109/ASE.2002.1115029", "title": "Adding value to formal test oracles", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automatic testing", "Wireless application protocol", "Software testing", "Formal specifications", "Heat engines", "Software measurement", "Temperature sensors", "Computer science", "Application software", "Thermal sensors"], "abstract": "Test oracles are programs which check the output of test cases run on other programs. We describe techniques which add value to formally-defined test oracles in three ways: (a) by measuring functional coverage of test suites, (b) by giving automated support to the process of validating the oracles, and (c) by automating the generation of test cases from the oracles. The techniques involve the use of coverage measures and AI-based search algorithms. We describe the application of these techniques in the verification and validation of a complex piece of real-world software.", "author": [{"name": "J.H. Andrews", "affiliation": "Department of Computer Science, University of Western Ontario, London, Canada"}, {"name": "Rui Fu", "affiliation": "Department of Computer Science, University of Western Ontario, London, Canada"}, {"name": "V.D. Liu", "affiliation": "Department of Computer Science, University of Western Ontario, London, Canada"}], "time": "2002", "citationCount": "3", "references": [{"title": " \"Testing using log file analysis: Tools methods and issues\"", "authors": ["J. H. Andrews"]}, {"title": " \"Broad-spectrum studies of log file analysis\"", "authors": ["J. H. Andrews ", " Y. Zhang"]}, {"title": " \"The ASTOOT approach to testing object-oriented programs\"", "authors": ["R.-K. Doong ", " P. G. Frankl"]}, {"title": " \"Derivation of test cases for LAP-B from a LOTOS specification\"", "authors": ["D. Gueraichi ", " L. Logrippo"]}, {"title": " \"Conformance analysis of communications protocol software using log files\"", "authors": ["V. D. Liu"]}, {"title": " \"Using test oracles generated from program documentation\"", "authors": ["D. K. Peters ", " D. L. Parnas"]}, {"title": " \"Specification-based test oracles for reactive systems\"", "authors": ["D. J. Richardson", " S. L. Aha ", " T. O. O'Malley"]}, {"title": " \"Protocol testing: Review of methods and relevance for software testing\"", "authors": ["G. von Bochmann ", " A. Petrenko"]}, {"title": " \"On testing non-testable programs\"", "authors": ["E. J. Weyuker"]}, {"title": "\"Wireless Application Protocol Forum\"", "authors": []}]},
{"doi": "10.1109/ASE.2019.00045", "title": "InFix: Automatically Repairing Novice Program Inputs", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Maintenance engineering", "Python", "Debugging", "Syntactics", "Semantics", "Open area test sites"], "abstract": "This paper presents InFix, a technique for automatically fixing erroneous program inputs for novice programmers. Unlike comparable existing approaches for automatic debugging and maintenance tasks, InFix repairs input data rather than source code, does not require test cases, and does not require special annotations. Instead, we take advantage of patterns commonly used by novice programmers to automatically create helpful, high quality input repairs. InFix iteratively applies error-message based templates and random mutations based on insights about the debugging behavior of novices. This paper presents an implementation of InFix for Python. We evaluate on 29,995 unique scenarios with input-related errors collected from four years of data from Python Tutor, a free online programming tutoring environment. Our results generalize and scale; compared to previous work, we consider an order of magnitude more unique programs. Overall, InFix is able to repair 94.5% of deterministic input errors. We also present the results of a human study with 97 participants. Surprisingly, this simple approach produces high quality repairs; humans judged the output of InFix to be equally helpful and within 4% of the quality of human-generated repairs.", "author": [{"name": "Madeline Endres", "affiliation": "Computer Science and Engineering, University of Michigan, Ann Arbor, MI, USA"}, {"name": "Georgios Sakkas", "affiliation": "Computer Science and Engineering UC San Diego, La Jolla, CA, USA"}, {"name": "Benjamin Cosman", "affiliation": "Computer Science and Engineering UC San Diego, La Jolla, CA, USA"}, {"name": "Ranjit Jhala", "affiliation": "Computer Science and Engineering UC San Diego, La Jolla, CA, USA"}, {"name": "Westley Weimer", "affiliation": "Computer Science and Engineering, University of Michigan, Ann Arbor, MI, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Compilation error repair: for the student programs from the student programs\"", "authors": ["U. Z. Ahmed", " P. Kumar", " A. Karkare", " P. Kar ", " S. Gulwani"]}, {"title": " \"Semantic differential repair for input validation and sanitization\"", "authors": ["M. Alkhalaf", " A. Aydin ", " T. Bultan"]}, {"title": " \"Toward automatic hint generation for logic proof tutoring using historical student data\"", "authors": ["T. Barnes ", " J. C. Stamper"]}, {"title": " \"Synthesizing program input grammars\"", "authors": ["O. Bastani", " R. Sharma", " A. Aiken ", " P. Liang"]}, {"title": " \"Towards deriving programming competencies from student errors\"", "authors": ["M. Berges", " M. Striewe", " P. Shah", " M. Goedicke ", " P. Hubwieser"]}, {"title": " \"Using fast model-based fault localisation to aid students in self-guided program repair and to improve assessment\"", "authors": ["G. Birch", " B. Fischer ", " M. Poppleton"]}, {"title": " \"Understanding the self-directed online learning p goals achievements and challenges of MIT opencourseware subscribers\"", "authors": ["C. J. Bonk", " M. M. Lee", " X. Kou", " S. Xu ", " F. Sheu"]}, {"title": " \"A web-based bayesian intelligent tutoring system for computer programming\"", "authors": ["C. J. Butz", " S. Hua ", " R. B. Maguire"]}, {"title": " \"EXE: automatically generating inputs of death\"", "authors": ["C. Cadar", " V. Ganesh", " P. M. Pawlowski", " D. L. Dill ", " D. R. Engler"]}, {"title": " \"Enhancing syntax error messages appears ineffectual\"", "authors": ["P. Denny", " A. Luxton-Reilly ", " D. Carpenter"]}, {"title": " \"Are your participants gaming the system?: screening Mechanical Turk workers\"", "authors": ["J. S. Downs", " M. B. Holbrook", " S. Sheng ", " L. F. Cranor"]}, {"title": " \"A human study of fault localization accuracy\"", "authors": ["Z. P. Fry ", " W. Weimer"]}, {"title": " \"DART: directed automated random testing\"", "authors": ["P. Godefroid", " N. Klarlund ", " K. Sen"]}, {"title": " \"SAGE: whitebox fuzzing for security testing\"", "authors": ["P. Godefroid", " M. Y. Levin ", " D. A. Molnar"]}, {"title": " \"Sample-free learning of input grammars for comprehensive software fuzzing\"", "authors": ["R. Gopinath", " B. Mathis", " M. H\u00f6schele", " A. Kampmann ", " A. Zeller"]}, {"title": " \"Online Python Tutor: embeddable web-based program visualization for CS education\"", "authors": ["P. J. Guo"]}, {"title": " \"DeepFix: Fixing common C language errors by deep learning\"", "authors": ["R. Gupta", " S. Pal", " A. Kanade ", " S. K. Shevade"]}, {"title": " \"What would other programmers do: suggesting solutions to error messages\"", "authors": ["B. Hartmann", " D. MacDougall", " J. Br", "t "]}, {"title": " \"J-LATTE: a constraint-based tutor for Java\"", "authors": ["J. Holl", "", " A. Mitrovic ", " B. Martin"]}, {"title": " \"Mining input grammars with AUTOGRAM\"", "authors": ["M. H\u00f6schele ", " A. Zeller"]}, {"title": " \"Automatic patch generation learned from human-written patches\"", "authors": ["D. Kim", " J. Nam", " J. Song ", " S. Kim"]}, {"title": " \"The future of crowd work\"", "authors": ["A. Kittur", " J. V. Nickerson", " M. S. Bernstein", " E. Gerber", " A. D. Shaw", " J. Zimmerman", " ."]}, {"title": " \"Data-driven program synthesis for hint generation in programming tutors\"", "authors": ["T. Lazar ", " I. Bratko"]}, {"title": " \"The ManyBugs and IntroClass benchmarks for automated repair of C programs\"", "authors": ["C. Le Goues", " N. Holtschulte", " E. K. Smith", " Y. Brun", " P. T. Devanbu", " S. Forrest", " ."]}, {"title": " \"GenProg: A generic method for automatic software repair\"", "authors": ["C. Le Goues", " T. Nguyen", " S. Forrest ", " W. Weimer"]}, {"title": " \"Automatic input rectification\"", "authors": ["F. Long", " V. Ganesh", " M. Carbin", " S. Sidiroglou ", " M. C. Rinard"]}, {"title": " \"Automatic patch generation by learning correct code\"", "authors": ["F. Long ", " M. Rinard"]}, {"title": " \"Mind your language: on novices\u2019 interactions with error messages\"", "authors": ["G. Marceau", " K. Fisler ", " S. Krishnamurthi"]}, {"title": " \"KATCH: High-coverage testing of software patches\"", "authors": ["P. D. Marinescu ", " C. Cadar"]}, {"title": " \"Angelix: scalable multiline program patch synthesis via symbolic analysis\"", "authors": ["S. Mechtaev", " J. Yi ", " A. Roychoudhury"]}, {"title": " \"Tutoring: Guided learning by doing\"", "authors": ["D. C. Merrill", " B. J. Reiser", " S. K. Merrill ", " S. L"]}, {"title": " \"Automatic software repair: A bibliography\"", "authors": ["M. Monperrus"]}, {"title": " \"Automatic grading and feedback using program repair for introductory programming courses\"", "authors": ["S. Parihar", " Z. Dadachanji", " P. K. Singh", " R. Das", " A. Karkare ", " A. Bhattacharya"]}, {"title": " \"Data-driven hint generation in vast solution spaces: a self-improving Python programming tutor\"", "authors": ["K. Rivers ", " K. R. Koedinger"]}, {"title": " \"Coarse-grained detection of student frustration in an introductory programming course\"", "authors": ["M. M. T. Rodrigo ", " R. S. J. de Baker"]}, {"title": " \"Automated repair of binary and assembly programs for cooperating embedded devices\"", "authors": ["E. M. Schulte", " J. DiLorenzo", " W. Weimer ", " S. Forrest"]}, {"title": " \"Learning to blame: localizing novice type errors with data-driven diagnosis\"", "authors": ["E. L. Seidel", " H. Sibghat", " K. Chaudhuri", " W. Weimer ", " R. Jhala"]}, {"title": " \"CUTE: a concolic unit testing engine for C\"", "authors": ["K. Sen", " D. Marinov ", " G. Agha"]}, {"title": " \"Measuring and modeling programming experience\"", "authors": ["J. Siegmund", " C. Kastner", " J. Liebig", " S. Apel ", " S. Hanenberg"]}, {"title": " \"Automated feedback generation for introductory programming assignments\"", "authors": ["R. Singh", " S. Gulwani ", " A. Solar-Lezama"]}, {"title": " \"Pex \u2014 white box test generation for.NET\"", "authors": ["N. Tillmann ", " J. de Halleux"]}, {"title": " \"Pex4Fun: A web-based environment for educational gaming via automated test generation\"", "authors": ["N. Tillmann", " J. de Halleux", " T. Xie ", " J. Bishop"]}, {"title": " \"Constructing coding duels in Pex4Fun and code hunt\"", "authors": ["N. Tillmann", " J. de Halleux", " T. Xie ", " J. Bishop"]}, {"title": " \"BlueFix: Using crowd-sourced feedback to support programming students in error diagnosis and repair\"", "authors": ["C. Watson", " F. W. B. Li ", " J. L. Godwin"]}, {"title": " \"A feasibility study of using automated program repair for introductory programming assignments\"", "authors": ["J. Yi", " U. Z. Ahmed", " A. Karkare", " S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"Yesterday my program worked. Today it does not. Why?\"", "authors": ["A. Zeller"]}]},
{"doi": "10.1109/ASE.2002.1115030", "title": "Dependence management for dynamic reconfiguration of component-based distributed systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Vehicle dynamics", "Runtime", "Personal digital assistants", "Computer science", "Research and development", "IP networks", "Mobile handsets", "Telematics", "Vehicles", "Internet"], "abstract": "The growing popularity of wired and wireless Internet requires distributed systems to be more flexible, adaptive and easily extensible. Dynamic reconfiguration of component-based distributed systems is one possible solution to meet these demands. However, there are some challenges for building dynamically reconfigurable distributed systems. Managing dependencies among components is one of the most crucial problems we have to solve before a system can be dynamically reconfigured at runtime. This paper describes a dependence management for dynamic reconfiguration of distributed systems. The dependence management analyzes not only the static dependencies among components, but also the dynamic dependencies that take place at runtime, in order to support an efficient consistent reconfiguration of distributed systems. In addition, the dependence management can deal with nested dependencies during a dynamic reconfiguration.", "author": [{"name": "Xuejun Chen", "affiliation": "Research and Development, Nokia Networks, Stuttgart, Germany"}], "time": "2002", "citationCount": "7", "references": [{"title": " \"Transformations for High-Performance Computing\"", "authors": ["D.F. Bacon", " S.L. Graham ", " Sharp O.J. Compiler"]}, {"title": " \"A Dynamic Reconfiguration Service for CORBA\"", "authors": ["Ch. Bidan", " V. Issarny", " T. Saridakis ", " A. Zarras"]}, {"title": " \"Extending RMI to Support Dynamic Reconfiguration of Distributed Systems\"", "authors": ["X. Chen"]}, {"title": " \"Slicing Concurrent Programs - A Graph- Theoretical Approach\" in Automated and Algorithmic Debugging", "authors": ["J. Cheng"]}, {"title": " \"Program Dependence Graph and its Use in Optimization\"", "authors": ["J. Ferrante", " K.J. Ottenstein ", " Warren J.D. The"]}, {"title": " \"Interprocedural Dataflow Analysis in an Executable Optimizer\"", "authors": ["D.W. Goodwin"]}, {"title": " \"Computation of Interprocedural Control Dependence\"", "authors": ["M.J. Harrold", " G. Rothermel ", " S. Sinha"]}, {"title": " \"Efficient Computation of Interprocedural Definition-Use Chains\"", "authors": ["M.J. Harrold ", " M.L. Soffa"]}, {"title": " \"Formal Study of Slicing for Multi-threaded Programs with JVM Concurrency Primitives\"", "authors": ["J. Hatcliff", " J.C. Corbett", " M.B. Dwyer", " S. Sokolowski ", " H. A Zheng"]}, {"title": " \"The Evolving Philosophers Problem: Dynamic Change Management\"", "authors": ["J. Kramer ", " J. Magee"]}, {"title": " \"Middleware's role today and tomorrow\"", "authors": ["D. Milojicic"]}, {"title": " \"Configuration Management in the Guide Object-Oriented Distributed System\"", "authors": ["I. Oueichek", " P. Rousset ", " S. Dynamic"]}, {"title": " \"A Formal Model of Program Dependences and its Implications for Software Testing Debugging and Maintenance\"", "authors": ["A. Podgurski ", " L.A. Clarke"]}, {"title": " \"Architecture-Level Dependence Analysis for Software Systems\"", "authors": ["J. A. Stafford ", " A. L. Wolf"]}, {"title": " \"Model for Dynamic Configuration which Preserves Application Integrity\"", "authors": ["I. Warren ", " I. A Sommerville"]}]},
{"doi": "10.1109/ASE.2019.00046", "title": "Understanding Automatically-Generated Patches Through Symbolic Invariant Differences", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Maintenance engineering", "Semantics", "Computer bugs", "Software", "Syntactics", "Software engineering"], "abstract": "Developer trust is a major barrier to the deployment of automatically-generated patches. Understanding the effect of a patch is a key element of that trust. We find that differences in sets of formal invariants characterize patch differences and that implication-based distances in invariant space characterize patch similarities. When one patch is similar to another it often contains the same changes as well as additional behavior; this pattern is well-captured by logical implication. We can measure differences using a theorem prover to verify implications between invariants implied by separate programs. Although effective, theorem provers are computationally intensive; we find that string distance is an efficient heuristic for implication-based distance measurements. We propose to use distances between patches to construct a hierarchy highlighting patch similarities. We evaluated this approach on over 300 patches and found that it correctly categorizes programs into semantically similar clusters. Clustering programs reduces human effort by reducing the number of semantically distinct patches that must be considered by over 50%, thus reducing the time required to establish trust in automatically generated repairs.", "author": [{"name": "Padraic Cashin", "affiliation": "Arizona State University, Tempe, AZ"}, {"name": "Carianne Martinez", "affiliation": "University of New Mexico, Albuquerque, NM"}, {"name": "Westley Weimer", "affiliation": "University of Michigan, Ann Arbor, MI"}, {"name": "Stephanie Forrest", "affiliation": "Arizona State University, Tempe, AZ"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"A descriptive model of computer code trustworthiness\"", "authors": ["G. M. Alarcon", " L. G. Militello", " P Ryan", " S. A. Jessup", " C. S. Calhoun ", " J. B. Lyons"]}, {"title": " \"Automatically validating temporal safety properties of interfaces\"", "authors": ["T Ball ", " S. K. Rajamani"]}, {"title": " \"Z3: An efficient smt solver\"", "authors": ["L. De Moura ", " N. Bj\u00f8rner"]}, {"title": " \"Leveraging program invariants to promote population diversity in search-based automatic program repair\"", "authors": ["Z. Y. Ding", " Y Lyu", " C. S. Timperley ", " C. L. Goues"]}, {"title": " \"The daikon system for dynamic detection of likely invariants\"", "authors": ["M. D. Ernst", " J. H. Perkins", " P. J. Guo", " S McCamant", " C Pacheco", " M. S. Tschantz", " ."]}, {"title": " \"Optimal implementations of upgma and other common clustering algorithms\"", "authors": ["I Gronau ", " S Moran"]}, {"title": " \"Fixing bugs in your sleep: How genetic improvement became an overnight success\"", "authors": ["S. O. Haraldsson", " J. R. Woodward", " A. E. I. Brownlee ", " K Siggeirsdottir"]}, {"title": " \"Defects4j: A database of existing faults to enable controlled testing studies for java programs\"", "authors": ["R Just", " D Jalali ", " M. D. Ernst"]}, {"title": " \"The manybugs and introclass benchmarks for automated repair of c programs\"", "authors": ["C. Le Goues", " N Holtschulte", " E. K. Smith", " Y Brun", " P Devanbu", " S Forrest", " ."]}, {"title": " \"Genprog: A genetic method for automatic software repair\"", "authors": ["C. Le Goues", " T Nguyen", " S Forrest ", " W Weimer"]}, {"title": " \"Automatic patch generation by learning correct code\"", "authors": ["F Long ", " M Rinard"]}, {"title": " \"Sapfix: Automated end-to-end repair at scale\"", "authors": ["A Marginean", " J Bader", " S Ch", "ra", " M Harman", " Y Jia", " K Mao", " ."]}, {"title": " \"Astor: A program repair library for java\"", "authors": ["M Martinez ", " M Monperrus"]}, {"title": " \"Automatic software repair: a bibliography\"", "authors": ["M Monperrus"]}, {"title": " \"A guided tour to approximate string matching\"", "authors": ["G Navarro"]}, {"title": " \"Semfix: Program repair via semantic analysis\"", "authors": ["H. D. T. Nguyen", " D Qi", " A Roychoudhury ", " S Ch"]}, {"title": " \"An analysis of patch plausibility and correctness for generate-and-validate patch generation systems\"", "authors": ["Z Qi", " F Long", " S Achour ", " M Rinard"]}, {"title": " \"Is the cure worse than the disease? overfitting in automated program repair\"", "authors": ["E. K. Smith", " E. T. Barr", " C. Le Goues ", " Y Brun"]}, {"title": " \"Formal verification by reverse synthesis\"", "authors": ["X Yin", " J. C. Knight", " E. A. Nguyen ", " W Weimer"]}, {"title": " \"ARJA: automated repair of java programs via multi-objective genetic programming\"", "authors": ["Y Yuan ", " W Banzhaf"]}]},
{"doi": "10.1109/ASE.2002.1115031", "title": "Combining and adapting software quality predictive models by genetic algorithms", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software quality", "Predictive models", "Genetic algorithms", "Computer science", "Q factor", "Testing", "Software engineering", "Performance evaluation", "Decision trees", "Classification tree analysis"], "abstract": "The goal of quality models is to predict a quality factor starting from a set of direct measures. Selecting an appropriate quality model for a particular software is a difficult, non-trivial decision. In this paper, we propose an approach to combine and/or adapt existing models (experts) in such way that the combined/adapted model works well on the particular system. Test results indicate that the models perform significantly better than individual experts in the pool.", "author": [{"name": "D. Azar", "affiliation": "School of Computer Science, McGill University, Canada"}, {"name": "D. Precup", "affiliation": "School of Computer Science, McGill University, Canada"}, {"name": "S. Bouktif", "affiliation": "Dept. of Computer Science and Op. Res, Centre-Ville, University of Montreal, Canada"}, {"name": "B. Kegl", "affiliation": "Dept. of Computer Science and Op. Res, Centre-Ville, University of Montreal, Canada"}, {"name": "H. Sahraoui", "affiliation": "Dept. of Computer Science and Op. Res, Centre-Ville, University of Montreal, Canada"}], "time": "2002", "citationCount": "9", "references": [{"title": " \"An investigation into coupling measures for C++\"", "authors": ["L. Bri", "", " P. Devanbu ", " W. Melo"]}, {"title": " \"Exploring the relationships between design measures and software quality in object-oriented systems\"", "authors": ["L. Bri", "", " J. W. Daly ", " V. Porter"]}, {"title": " \"A metrics suite for object oriented design\"", "authors": ["S. R. Chidamber ", " C. F. Kemerer"]}, {"title": "\"How to evaluate accuracy. Materials Research and Standards", "authors": []}]},
{"doi": "10.1109/ASE.2019.00047", "title": "Regexes are Hard: Decision-Making, Difficulties, and Risks in Programming Regular Expressions", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Programming profession", "Interviews", "Face", "Software", "Tools", "Decision making"], "abstract": "Regular expressions (regexes) are a powerful mechanism for solving string-matching problems. They are supported by all modern programming languages, and have been estimated to appear in more than a third of Python and JavaScript projects. Yet existing studies have focused mostly on one aspect of regex programming: readability. We know little about how developers perceive and program regexes, nor the difficulties that they face. In this paper, we provide the first study of the regex development cycle, with a focus on (1) how developers make decisions throughout the process, (2) what difficulties they face, and (3) how aware they are about serious risks involved in programming regexes. We took a mixed-methods approach, surveying 279 professional developers from a diversity of backgrounds (including top tech firms) for a high-level perspective, and interviewing 17 developers to learn the details about the difficulties that they face and the solutions that they prefer. In brief, regexes are hard. Not only are they hard to read, our participants said that they are hard to search for, hard to validate, and hard to document. They are also hard to master: the majority of our studied developers were unaware of critical security risks that can occur when using regexes, and those who knew of the risks did not deal with them in effective manners. Our findings provide multiple implications for future work, including semantic regex search engines for regex reuse and improved input generators for regex validation.", "author": [{"name": "Louis G. Michael", "affiliation": "Virginia Tech"}, {"name": "James Donohue", "affiliation": "University of Bradford"}, {"name": "James C. Davis", "affiliation": "Virginia Tech"}, {"name": "Dongyoon Lee", "affiliation": "Stony Brook University & Virginia Tech"}, {"name": "Francisco Servant", "affiliation": "Virginia Tech"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Using grounded theory to study the experience of software development\"", "authors": ["S. Adolph", " W. Hall ", " P. Kruchten"]}, {"title": " \"MutRex: A Mutation-Based Generator of Fault Detecting Strings for Regular Expressions\"", "authors": ["P. Arcaini", " A. Gargantini ", " E. Riccobene"]}, {"title": " \"Expectations Outcomes and Challenges of Modern Code Review\"", "authors": ["Bacchelli ", " Bird"]}, {"title": " \"Inference of Regular Expressions for Text Extraction from Examples\"", "authors": ["A. Bartoli", " A. De Lorenzo", " E. Medvet ", " F. Tarlao"]}, {"title": " \"Snowball Sampling: Problems and Techniques of Chain Referral Sampling\"", "authors": ["P. Biernacki ", " D. Waldorf"]}, {"title": " \"Information needs in bug reports\"", "authors": ["S. Breu", " R. Premraj", " J. Sillito ", " T. Zimmermann"]}, {"title": " \"Information Needs for Software Development Analytics\"", "authors": ["R. P. L. Buse ", " T. Zimmermann"]}, {"title": " \"Exploring regular expression usage and context in Python\"", "authors": ["C. Chapman ", " K. T. Stolee"]}, {"title": " \"Exploring regular expression usage and context in Python\"", "authors": ["C. Chapman ", " K. T. Stolee"]}, {"title": " \"Exploring Regular Expression Comprehension\"", "authors": ["C. Chapman", " P. Wang ", " K. T. Stolee"]}, {"title": " \"Denial of service through regular expressions\"", "authors": ["S. Crosby"]}, {"title": " \"Denial of Service via Algorithmic Complexity Attacks\"", "authors": ["S. A. Crosby ", " D. S. Wallach"]}, {"title": " \"The Impact of Regular Expression Denial of Service (ReDoS) in Practice: an Empirical Study at the Ecosystem Scale\"", "authors": ["J. C. Davis", " C. A. Coghlan", " F. Servant ", " D. Lee"]}, {"title": " \"Why aren\u2019t regular expressions a lingua franca? an empirical study on the re-use and portability of regular expressions\"", "authors": ["J. C. Davis", " L. G. Michael IV", " C. A. Coghlan", " F. Servant ", " D. Lee"]}, {"title": " \"Testing regex generalizability and its implications: A large-scale many-language measurement study\"", "authors": ["J. C. Davis", " D. Moyer", " A. Kazerouni ", " D. Lee"]}, {"title": " \"A Sense of Time for JavaScript and Node.js: First-Class Timeouts as a Cure for Event Handler Poisoning\"", "authors": ["J. C. Davis", " E. R. Williamson ", " D. Lee"]}, {"title": " \"Towards organisational learning enhancement: assessing software engineering practice\"", "authors": ["S. Fannoun ", " J. Kerins"]}, {"title": " \"Design Patterns: Abstraction and Reuse of Object-Oriented Design\"", "authors": ["E. Gamma", " R. Helm", " R. Johnson ", " J. Vlissides"]}, {"title": " \"Work practices and challenges in pull-based development: The integrator\u2019s perspective\"", "authors": ["G. Gousios", " A. Zaidman", " M. A. Storey ", " A. Van Deursen"]}, {"title": " \"Regular expressions on the web\"", "authors": ["R. Hodov\u00e1n", " Z. Herczeg ", " \u00c1. Kiss"]}, {"title": " \"Personal opinion surveys\"", "authors": ["B. A. Kitchenham ", " S. L. Pfleeger"]}, {"title": " \"Information needs in collocated software development teams\"", "authors": ["A. J. Ko", " R. DeLine ", " G. Venolia"]}, {"title": " \"Automatic Checking of Regular Expressions\"", "authors": ["E. Larson"]}, {"title": " \"Generating Evil Test Strings for Regular Expressions\"", "authors": ["E. Larson ", " A. Kirk"]}, {"title": " \"What makes a great software engineer?\"", "authors": ["P. L. Li", " A. J. Ko ", " J. Zhu"]}, {"title": " \"A Complexity Measure\"", "authors": ["T. McCabe"]}, {"title": " \"Research Article: Recruitment of hard-to-reach population subgroups via adaptations of the snowball sampling strategy\"", "authors": ["G. R. Sadler", " H.-C. Lee", " R. S.-H. Lim ", " J. Fullerton"]}, {"title": " \"ReScue: Crafting Regular Expression DoS Attacks\"", "authors": ["Y. Shen", " Y. Jiang", " C. Xu", " P. Yu", " X. Ma ", " J. Lu"]}, {"title": " \"Measuring and modeling programming experience\"", "authors": ["J. Siegmund", " C. K\u00e4stner", " J. Liebig", " S. Apel ", " S. Hanenberg"]}, {"title": " \"Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers\"", "authors": ["C.-A. Staicu ", " M. Pradel"]}, {"title": " \"Rex: Symbolic regular expression explorer\"", "authors": ["M. Veanes", " P. De Halleux ", " N. Tillmann"]}, {"title": " \"Exploring Regular Expression Evolution\"", "authors": ["P. Wang", " G. R. Bai ", " K. T. Stolee"]}, {"title": " \"How well are regular expressions tested in the wild?\"", "authors": ["P. Wang ", " K. T. Stolee"]}, {"title": " \"Analyzing matching time behavior of backtracking regular expression matchers by using ambiguity of NFA\"", "authors": ["N. Weideman", " B. van der Merwe", " M. Berglund ", " B. Watson"]}, {"title": " \"Static Detection of DoS Vulnerabilities in Programs that use Regular Expressions\"", "authors": ["V. Wustholz", " O. Olivo", " M. J. H. Heule ", " I. Dillig"]}]},
{"doi": "10.1109/ASE.2002.1115032", "title": "Towards certifying domain-specific properties of synthesized code", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["State estimation", "Extraterrestrial measurements", "NASA", "Space technology", "Testing", "Costs", "Mission critical systems", "Safety", "Sensor phenomena and characterization", "Equations"], "abstract": "We present a technique for certifying domain-specific properties of code generated using program synthesis technology. Program synthesis is a maturing technology that generates code from high-level specifications in particular domains. For acceptance in safety-critical applications, the generated code must be thoroughly tested which is a costly process. We show how the program synthesis system AUTOFILTER can be extended to generate not only code but also proofs that properties hold in the code. This technique has the potential to reduce the costs of testing generated code.", "author": [{"name": "G. Rosu", "affiliation": "NASA Ames Research Center, USA"}, {"name": "J. Whittle", "affiliation": "NASA Ames Research Center, USA"}], "time": "2002", "citationCount": "1", "references": [{"title": " \"Scinapse: A problem-solving environment for partial differential equations\"", "authors": ["R. Akers", " E. Kant", " C. R", "all", " S. Steinberg ", " R. Young"]}, {"title": " \"The ITP tool\"", "authors": ["M. Clavel ."]}, {"title": " \"Certifying domain-specific policies\" in Automated Software Engineering (ASE'01)", "authors": ["M. Lowry", " T. Pressburger ", " G. Ro\u015fu"]}, {"title": " \"Proof-carrying code\"", "authors": ["G. C. Necula"]}, {"title": " \"Specware: Formal support for composing software\" in Mathematics of Program Construction (MPC'95)", "authors": ["Y. V. Srinivas ", " R. J\u00fcllig"]}, {"title": " \"Amphi phion/NAV: Deductive synthesis of state estimation software\" in Automated Software Engineering (ASE'01)", "authors": ["J. Whittle", " J. van Baalen", " J. Schumann", " P. Robinson", " T. Press-burger", " J. Penix", " ."]}]},
{"doi": "10.1109/ASE.2019.00048", "title": "Testing Regex Generalizability And Its Implications: A Large-Scale Many-Language Measurement Study", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer languages", "Engines", "Measurement", "Software", "Tools", "Static analysis", "Automata"], "abstract": "The regular expression (regex) practices of software engineers affect the maintainability, correctness, and security of their software applications. Empirical research has described characteristics like the distribution of regex feature usage, the structural complexity of regexes, and worst-case regex match behaviors. But researchers have not critically examined the methodology they follow to extract regexes, and findings to date are typically generalized from regexes written in only 1-2 programming languages. This is an incomplete foundation. Generalizing existing research depends on validating two hypotheses: (1) Various regex extraction methodologies yield similar results, and (2) Regex characteristics are similar across programming languages. To test these hypotheses, we defined eight regex metrics to capture the dimensions of regex representation, string language diversity, and worst-case match complexity. We report that the two competing regex extraction methodologies yield comparable corpuses, suggesting that simpler regex extraction techniques will still yield sound corpuses. But in comparing regexes across programming languages, we found significant differences in some characteristics by programming language. Our findings have bearing on future empirical methodology, as the programming language should be considered, and generalizability will not be assured. Our measurements on a corpus of 537,806 regexes can guide data-driven designs of a new generation of regex tools and regex engines.", "author": [{"name": "James C Davis", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Daniel Moyer", "affiliation": "Department of Computer Science, Virginia Tech"}, {"name": "Ayaan M Kazerouni", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Dongyoon Lee", "affiliation": "Department of Computer Science, Stony Brook University and Virginia Tech"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Exploring regular expression usage and context in Python\"", "authors": ["C. Chapman ", " K. T. Stolee"]}, {"title": " \"The Impact of Regular Expression Denial of Service (ReDoS) in Practice: an Empirical Study at the Ecosystem Scale\"", "authors": ["J. C. Davis", " C. A. Coghlan", " F. Servant ", " D. Lee"]}, {"title": " \"Exploring Regular Expression Comprehension\"", "authors": ["C. Chapman", " P. Wang ", " K. T. Stolee"]}, {"title": " \"How well are regular expressions tested in the wild\"", "authors": ["P. Wang ", " K. T. Stolee"]}, {"title": " \"Exploring Regular Expression Evolution\"", "authors": ["P. Wang", " G. R. Bai ", " K. T. Stolee"]}, {"title": " \"Static Detection of DoS Vulnerabilities in Programs that use Regular Expressions\"", "authors": ["V. Wustholz", " O. Olivo", " M. J. H. Heule ", " I. Dillig"]}, {"title": " \"Why arent regular expressions a lingua franca? an empirical study on the re-use and portability of regular expressions\"", "authors": ["J. C. Davis", " L. G. Michael", " C. A. Coghlan", " F. Servant ", " D. Lee"]}, {"title": " \"An examination of software engineering work practices\"", "authors": ["J. Singer", " T. Lethbridge", " N. Vinson ", " N. Anquetil"]}, {"title": " \"Introduction to the Theory of Computation\"", "authors": ["M. Sipser"]}, {"title": " \"A regular-expression matcher\"", "authors": ["H. Spencer"]}, {"title": " \"Regular Expression Search Algorithm\"", "authors": ["K. Thompson"]}, {"title": " \"A Formal Study of Practical Regular Expressions\"", "authors": ["C. CAMPEANU", " K. SALOMAA ", " S. YU"]}, {"title": " \"On the intersection of regex languages with regular languages\"", "authors": ["C. Campeanu ", " N. Santean"]}, {"title": " \"On the Semantics of Regular Expression parsing in the Wild\"", "authors": ["M. Berglund ", " B. van der Merwe"]}, {"title": " \"On the Semantics of Atomic Subgroups in Practical Regular Expressions\"", "authors": ["M. Berglund", " B. Van Der Merwe", " B. Watson ", " N. Weideman"]}, {"title": " \"Denial of service through regular expressions\"", "authors": ["S. Crosby ", " T. H. E. U. Magazine"]}, {"title": " \"Static Analysis for Regular Expression Exponential Runtime via Substructural Logics\"", "authors": ["A. Rathnayake ", " H. Thielecke"]}, {"title": " \"Denial of Service via Algorithmic Complexity Attacks\"", "authors": ["S. A. Crosby ", " D. S. Wallach"]}, {"title": " \"VAC - ReDoS: Regular Expression Denial Of Service\"", "authors": ["A. Roichman ", " A. Weidman"]}, {"title": " \"SWYN: A visual representation for regular expressions\"", "authors": ["A. Blackwell"]}, {"title": " \"RegViz: Visual Debugging of Regular Expressions\"", "authors": ["F. Beck", " S. Gulan", " B. Biegel", " S. Baltes ", " D. Weiskopf"]}, {"title": " \"Rex: Symbolic regular expression explorer\"", "authors": ["M. Veanes", " P. De Halleux ", " N. Tillmann"]}, {"title": " \"Generating Evil Test Strings for Regular Expressions\"", "authors": ["E. Larson ", " A. Kirk"]}, {"title": " \"MutRex: A Mutation-Based Generator of Fault Detecting Strings for Regular Expressions\"", "authors": ["P. Arcaini", " A. Gargantini ", " E. Riccobene"]}, {"title": " \"Analyzing matching time behavior of backtracking regular expression matchers by using ambiguity of NFA\"", "authors": ["N. Weideman", " B. van der Merwe", " M. Berglund ", " B. Watson"]}, {"title": " \"ReScue: Crafting Regular Expression DoS Attacks\"", "authors": ["Y. Shen", " Y. Jiang", " C. Xu", " P. Yu", " X. Ma ", " J. Lu"]}, {"title": " \"A Tale of Two Greps\"", "authors": ["A. Hume"]}, {"title": " \"Towards faster string matching for intrusion detection or exceeding the speed of Snort\"", "authors": ["C. J. Coit", " S. Staniford ", " J. McAlerney"]}, {"title": " \"Turning Evil Regexes Harmless\"", "authors": ["B. Van Der Merwe", " N. Weideman ", " M. Berglund"]}, {"title": " \"A Sense of Time for JavaScript and Node.js: First-Class Timeouts as a Cure for Event Handler Poisoning\"", "authors": ["J. C. Davis", " E. R. Williamson ", " D. Lee"]}, {"title": " \"The Computer Scientist as Toolsmith II\"", "authors": ["J. Brooks ", " P. Frederick"]}, {"title": " \"Software artifacts recovery using abstract regular expressions\"", "authors": ["G. Rasool ", " N. Asif"]}, {"title": " \"Scripting: Higher level programming for the 21st century\"", "authors": ["J. K. Ousterhout"]}, {"title": " \"An empirical comparison of seven programming languages\"", "authors": ["L. Prechelt"]}, {"title": " \"Descriptional and computational complexity of finite automata - A survey\"", "authors": ["M. Holzer ", " M. Kutrib"]}, {"title": " \"Derivatives of Regular Expressions\"", "authors": ["J. A. Brzozowski"]}, {"title": " \"Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers\"", "authors": ["C.-A. Staicu ", " M. Pradel"]}, {"title": " \"What\u2019s in a GitHub Star? Understanding Repository Starring Practices in a Social Coding Platform\"", "authors": ["H. Borges ", " M. Tulio Valente"]}, {"title": " \"Why Do Developers Use Trivial Packages? An Empirical Case Study on npm\"", "authors": ["R. Abdalkareem", " O. Nourry", " S. Wehaibi", " S. Mujahid ", " E. Shihab"]}, {"title": " \"Use of ranks in one-criterion variance analysis\"", "authors": ["W. H. Kruskal ", " W. A. Wallis"]}, {"title": " \"A power primer\"", "authors": ["J. Cohen"]}, {"title": " \"An alternative to cohen\u2019s standardized mean difference effect size: a robust parameter and confidence interval in the two independent groups case\"", "authors": ["J. Algina", " H. Keselman ", " R. D. Penfield"]}, {"title": " \"Effect size measures in a two-independent-samples case with nonnormal and nonhomogeneous data\"", "authors": ["J. C.-H. Li"]}, {"title": " \"Regexes are hard: Decision-making difficulties and risks in programming regular expressions\"", "authors": ["L. G. Michael IV", " J. Donohue", " J. C. Davis", " D. Lee ", " F. Servant"]}, {"title": " \"Towards a theory of software development expertise\"", "authors": ["S. Baltes ", " S. Diehl"]}, {"title": " \"Snort - Lightweight Intrusion Detection for Networks\"", "authors": ["M. Roesch"]}]},
{"doi": "10.1109/ASE.2002.1115033", "title": "Predicting software stability using case-based reasoning", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Stability", "Software maintenance", "Predictive models", "Software engineering", "Decision trees", "Computer industry", "Q factor", "Software quality", "Software testing", "Object oriented programming"], "abstract": "Predicting stability in object-oriented (OO) software, i.e., the ease with which a software item can evolve while preserving its design, is a key feature for software maintenance. We present a novel approach which relies on the case-based reasoning (CBR) paradigm. Thus, to predict the chances of an OO software item breaking downward compatibility, our method uses knowledge of past evolution extracted from different software versions. A comparison of our similarity-based approach to a classical inductive method such as decision trees, is presented which includes various tests on large datasets from existing software.", "author": [{"name": "D. Grosser", "affiliation": " DIRO, University of Montreal, Montreal, QUE, Canada"}, {"name": "H.A. Sahraoui", "affiliation": " DIRO, University of Montreal, Montreal, QUE, Canada"}, {"name": "P. Valtchev", "affiliation": " DIRO, University of Montreal, Montreal, QUE, Canada"}], "time": "2002", "citationCount": "18", "references": [{"title": " \"Case-based reasoning: Foundational issues methodological variations and system approaches\"", "authors": ["A. Aamodt ", " E. Plaza"]}, {"title": " \"An investigation on the use of machine learned models for estimating software correctability\"", "authors": ["M. D. Almeida", " H. Lounis ", " W. Melo"]}, {"title": " \"Cbr for experimental software engineering\"", "authors": ["K.-D. Althoff", " A. Birk", " C. Wangenheim ", " C. Tautz"]}, {"title": " \"Exploring the relationships between design measures and software quality in object-oriented systems\"", "authors": ["L. Bri", "", " J. Wust", " J. W. Daly ", " V. Porter"]}, {"title": " \"A metrics suite for object oriented design\"", "authors": ["S. Chidamber ", " C. Kemerer"]}, {"title": " \"Metrics do they really help?\"", "authors": ["S. Demeyer ", " S. Ducasse"]}, {"title": " \"Identifying reusable software components by induction\"", "authors": ["J. Esteva ", " R. Reynolds"]}, {"title": " \"Case-Based Software Quality Prediction\"", "authors": ["K. Ganesan", " T. Khoshgoftaar ", " E. Allen"]}, {"title": " \"Object-oriented metrics that predict maintainability\"", "authors": ["W. Li ", " S. Henry"]}, {"title": " \"How to evaluate accuracy\"", "authors": ["W. J. Youden"]}]},
{"doi": "10.1109/ASE.2019.00049", "title": "Accurate String Constraints Solution Counting with Weighted Automata", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": [], "abstract": "As an important extension of symbolic execution (SE), probabilistic symbolic execution (PSE) computes execution probabilities of program paths. Using this information, PSE can prioritize path exploration strategies. To calculate the probability of a path PSE relies on solution counting approaches for the path constraint. The correctness of a solution counting approach depends on the methodology used to count solutions and whether a path constraint maintains a one-to-one relation with program input values. This work focuses on the latter aspect of the solution counting correctness for string constraints. In general, maintaining a one-to-one relation is not always possible, especially in the presence of non-linear constraints. To deal with this issue, researchers that work on PSE for numerical domains either analyze programs with linear constraints, or develop novel techniques to handle solution counting of non-linear constraints. For the string domain, however, previous work on PSE mainly focuses on efficient and accurate solution counting for automata-based string models and has not investigated whether a one-to-one relationship between the strings encoded by automata and input string values is preserved. In this work we demonstrate that traditional automata-based string models fail to maintain one-to-one relations and propose to use the weighted automata model, which preserves the one-to-one relation between the path constraint it encodes and the input string values. We use this model to implement a string constraint solver and show its correctness on a set of non-trivial synthetic benchmarks. We also present an empirical evaluation of traditional and proposed automata solvers on real-world string constraints. The evaluations show that while being less efficient than traditional automata models, the weighted automata model maintains correct solution counts.", "author": [{"name": "Elena Sherman", "affiliation": "Computer Science Department, Boise State University, Boise, ID, USA"}, {"name": "Andrew Harris", "affiliation": "Computer Science Department, Boise State University, Boise, ID, USA"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Symbolic execution and program testing\"", "authors": ["J. C. King"]}, {"title": " \"A system to generate test data and symbolically execute programs\"", "authors": ["L. A. Clarke"]}, {"title": " \"Combining unit-level symbolic execution and system-level concrete execution for testing nasa software\"", "authors": ["C. S. P\u0103s\u0103reanu", " P. C. Mehlitz", " D. H. Bushnell", " K. GundyBurlet", " M. Lowry", " S. Person", " ."]}, {"title": " \"Practical and effective symbolic analysis for buffer overflow detection\"", "authors": ["L. Li", " C. Cifuentes ", " N. Keynes"]}, {"title": " \"Efficient testing of concurrent programs with abstraction-guided symbolic execution\"", "authors": ["N. Rungta", " E. G. Mercer ", " W. Visser"]}, {"title": " \"Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs\"", "authors": ["C. Cadar", " D. Dunbar ", " D. Engler"]}, {"title": " \"Dart: Directed automated random testing\"", "authors": ["P. Godefroid", " N. Klarlund ", " K. Sen"]}, {"title": " \"Cute: A concolic unit testing engine for c\"", "authors": ["K. Sen", " D. Marinov ", " G. Agha"]}, {"title": " \"Automating mimicry attacks using static binary analysis\"", "authors": ["C. Kruegel", " E. Kirda", " D. Mutz", " W. Robertson ", " G. Vigna"]}, {"title": " \"A symbolic execution framework for javascript\"", "authors": ["P. Saxena", " D. Akhawe", " S. Hanna", " F. Mao", " S. McCamant ", " D. Song"]}, {"title": " \"Path sensitive static analysis of web applications for remote code execution vulnerability detection\"", "authors": ["Y. Zheng ", " X. Zhang"]}, {"title": " \"Probabilistic symbolic execution\"", "authors": ["J. Geldenhuys", " M. B. Dwyer ", " W. Visser"]}, {"title": " \"Reliability analysis in symbolic pathfinder\"", "authors": ["A. Filieri", " C. S. P\u0103s\u0103reanu ", " W. Visser"]}, {"title": " \"Compositional solution space quantification for probabilistic software analysis\"", "authors": ["M. Borges", " A. Filieri", " M. d\u2019Amorim", " C. S. P\u0103s\u0103reanu ", " W. Visser"]}, {"title": " \"Iterative distribution-aware sampling for probabilistic symbolic execution\"", "authors": ["M. Borges", " A. Filieri", " M. d\u2019Amorim ", " C. S. P\u0103s\u0103reanu"]}, {"title": " \"Symbolic string verification: An automata-based approach\"", "authors": ["F. Yu", " T. Bultan", " M. Cova ", " O. H. Ibarra"]}, {"title": " \"Automata-based symbolic string analysis for vulnerability detection\"", "authors": ["F. Yu", " M. Alkhalaf", " T. Bultan ", " O. H. Ibarra"]}, {"title": " \"Fast and precise sanitizer analysis with bek\"", "authors": ["P. Hooimeijer", " B. Livshits", " D. Molnar", " P. Saxena ", " M. Veanes"]}, {"title": " \"Precise analysis of string expressions\"", "authors": ["A. S. Christensen", " A. M\u00f8ller ", " M. I. Schwartzbach"]}, {"title": " \"Stranger: An automata-based string analysis tool for php\"", "authors": ["F. Yu", " M. Alkhalaf ", " T. Bultan"]}, {"title": " \"Z3-str: a z3-based string solver for web application analysis\"", "authors": ["Y. Zheng", " X. Zhang ", " V. Ganesh"]}, {"title": " \"S3: A symbolic string solver for vulnerability detection in web applications\"", "authors": ["M.-T. Trinh", " D.-H. Chu ", " J. Jaffar"]}, {"title": " \"Progressive reasoning over recursively-defined strings\"", "authors": ["M.-T. Trinh", " D.-H. Chu ", " J. Jaffar"]}, {"title": " \"Path feasibility analysis for string-manipulating programs\"", "authors": ["N. Bj\u00f8rner", " N. Tillmann ", " A. Voronkov"]}, {"title": " \"Hampi: A solver for word equations over strings regular expressions and context-free grammars\"", "authors": ["A. Kiezun", " V. Ganesh", " S. Artzi", " P. J. Guo", " P. Hooimeijer ", " M. D. Ernst"]}, {"title": " \"Lightweight string reasoning in model finding\"", "authors": ["F. B\u00fcttner ", " J. Cabot"]}, {"title": " \"Automata-based model counting for string constraints\"", "authors": ["A. Aydin", " L. Bang ", " T. Bultan"]}, {"title": " \"Evaluation of string constraint solvers in the context of symbolic execution\"", "authors": ["S. Kausler ", " E. Sherman"]}, {"title": " \"A model counter for constraints over unbounded strings\"", "authors": ["L. Luu", " S. Shinde", " P. Saxena ", " B. Demsky"]}, {"title": " \"Constraint normalization and parameterized caching for quantitative program analysis\"", "authors": ["T. Brennan", " N. Tsiskaridze", " N. Rosner", " A. Aydin ", " T. Bultan"]}, {"title": " \"Automatic discovery and quantification of information leaks\"", "authors": ["M. Backes", " B. Kopf ", " A. Rybalchenko"]}, {"title": " \"Symbolic quantitative information flow\"", "authors": ["Q.-S. Phan", " P. Malacaria", " O. Tkachuk ", " C. S. P\u0103s\u0103reanu"]}, {"title": " \"Precisely measuring quantitative information flow: 10k lines of code and beyond\"", "authors": ["C. G. Val", " M. A. Enescu", " S. Bayless", " W. Aiello ", " A. J. Hu"]}, {"title": " \"Parameterized model counting for string and numeric constraints\"", "authors": ["A. Aydin", " W. Eiers", " L. Bang", " T. Brennan", " M. Gavrilov", " T. Bultan", " ."]}, {"title": " \"Finite-state transducers in language and speech processing\"", "authors": ["M. Mohri"]}, {"title": " \"Testing metrics for password creation policies by attacking large sets of revealed passwords\"", "authors": ["M. Weir", " S. Aggarwal", " M. Collins ", " H. Stern"]}, {"title": " \"Finding and understanding bugs in c compilers\"", "authors": ["X. Yang", " Y. Chen", " E. Eide ", " J. Regehr"]}, {"title": " \"Automatic testing of symbolic execution engines via program generation and differential testing\"", "authors": ["T. Kapus ", " C. Cadar"]}, {"title": " \"Model counting for recursively-defined strings\"", "authors": ["M.-T. Trinh", " D.-H. Chu ", " J. Jaffar"]}]},
{"doi": "10.1109/ASE.2002.1115038", "title": "Report on the workshop on the state of the art in automated software engineering", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": [], "abstract": "", "author": [{"name": "Y. Ledru", "affiliation": "Universite Grenoble, France"}, {"name": "D.F. Redmiles", "affiliation": "Information and Computer Science, University of California, Irvine, CA, USA"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00050", "title": "Subformula Caching for Model Counting and Quantitative Program Analysis", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Automata", "Syntactics", "Analytical models", "Task analysis", "Software engineering", "Computational modeling", "Password"], "abstract": "Quantitative program analysis is an emerging area with applications to software reliability, quantitative information flow, side-channel detection and attack synthesis. Most quantitative program analysis techniques rely on model counting constraint solvers, which are typically the bottleneck for scalability. Although the effectiveness of formula caching in expediting expensive model-counting queries has been demonstrated in prior work, our key insight is that many subformulas are shared across non-identical constraints generated during program analyses. This has not been utilized by prior formula caching approaches. In this paper we present a subformula caching framework and integrate it into a model counting constraint solver. We experimentally evaluate its effectiveness under three quantitative program analysis scenarios: 1) model counting constraints generated by symbolic execution, 2) reliability analysis using probabilistic symbolic execution, 3) adaptive attack synthesis for side-channels. Our experimental results demonstrate that our subformula caching approach significantly improves the performance of quantitative program analysis.", "author": [{"name": "William Eiers", "affiliation": "UC Santa Barbara Verification Lab, Santa Barbara, CA"}, {"name": "Seemanta Saha", "affiliation": "UC Santa Barbara Verification Lab, Santa Barbara, CA"}, {"name": "Tegan Brennan", "affiliation": "UC Santa Barbara Verification Lab, Santa Barbara, CA"}, {"name": "Tevfik Bultan", "affiliation": "UC Santa Barbara Verification Lab, Santa Barbara, CA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Reusing constraint proofs in program analysis\"", "authors": ["Andrea Aquino", " Francesco A Bianchi", " Meixian Chen", " Giovanni Denaro ", " Mauro Pezz\u00e8"]}, {"title": " \"Heuristically matching solution spaces of arithmetic formulas to efficiently reuse solutions\"", "authors": ["Andrea Aquino", " Giovanni Denaro ", " Mauro Pezz\u00e8"]}, {"title": " \"Automata-based model counting for string constraints\"", "authors": ["Abdulbaki Aydin", " Lucas Bang ", " Tevfik Bultan"]}, {"title": " \"Parameterized model counting for string and numeric constraints\"", "authors": ["Abdulbaki Aydin", " William Eiers", " Lucas Bang", " Tegan Brennan", " Miroslav Gavrilov", " Tevfik Bultan", " ."]}, {"title": " \"Automatic discovery and quantification of information leaks\"", "authors": ["Michael Backes", " Boris K\u00f6pf ", " Andrey Rybalchenko"]}, {"title": " \"String analysis for side channels with segmented oracles\"", "authors": ["Lucas Bang", " Abdulbaki Aydin", " Quoc-Sang Phan", " Corina S. Pasareanu ", " Tevfik Bultan"]}, {"title": " \"Online synthesis of adaptive side-channel attacks based on noisy observations\"", "authors": ["Lucas Bang", " Nicol\u00e1s Rosner ", " Tevfik Bultan"]}, {"title": " \"Cvc4\"", "authors": ["Clark Barrett", " Christopher L Conway", " Morgan Deters", " Liana Hadarean", " Dejan Jovanovi\u0107", " Tim King", " ."]}, {"title": " \"Efficient symbolic representations for arithmetic constraints in verification\"", "authors": ["Constantinos Bartzis ", " Tevfik Bultan"]}, {"title": " \"A polynomial time algorithm for counting integral points in polyhedra when the dimension is fixed\"", "authors": ["Alex", "er I. Barvinok"]}, {"title": " \"Iterative distribution-aware sampling for probabilistic symbolic execution\"", "authors": ["Mateus Borges", " Antonio Filieri", " Marcelo d\u2019Amorim ", " Corina S. Pasareanu"]}, {"title": " \"Model-counting approaches for nonlinear numerical constraints\"", "authors": ["Mateus Borges", " Quoc-Sang Phan", " Antonio Filieri ", " Corina S. Pasareanu"]}, {"title": " \"Constraint normalization and parameterized caching for quantitative program analysis\"", "authors": ["Tegan Brennan", " Nestan Tsiskaridze", " Nicol\u00e1s Rosner", " Abdulbaki Aydin ", " Tevfik Bultan"]}, {"title": " \"Distribution-aware sampling and weighted model counting for SAT\"", "authors": ["Supratik Chakraborty", " Daniel J. Fremont", " Kuldeep S. Meel", " Sanjit A. Seshia ", " Moshe Y. Vardi"]}, {"title": " \"Approximate probabilistic inference via word-level counting\"", "authors": ["Supratik Chakraborty", " Kuldeep S. Meel", " Rakesh Mistry ", " Moshe Y. Vardi"]}, {"title": " \"The mathsat5 smt solver\"", "authors": ["Aless", "ro Cimatti", " Alberto Griggio", " Bastiaan Joost Schaafsma ", " Roberto Sebastiani"]}, {"title": " \"Z3: an efficient SMT solver\"", "authors": ["Leonardo De Moura ", " Nikolaj Bj\u00f8rner"]}, {"title": " \"Reliability analysis in symbolic pathfinder\"", "authors": ["Antonio Filieri", " Corina S. Pasareanu ", " Willem Visser"]}, {"title": " \"Reliability analysis in symbolic pathfinder\"", "authors": ["Antonio Filieri", " S. P\u0103s\u0103reanu Corina ", " Willem Visser"]}, {"title": " \"Multi-terminal binary decision diagrams: An efficient data structure for matrix representation\"", "authors": ["Masahiro Fujita", " Patrick C. McGeer ", " Jerry Chih-Yuan Yang"]}, {"title": " \"Probabilistic symbolic execution\"", "authors": ["Jaco Geldenhuys", " Matthew B. Dwyer ", " Willem Visser"]}, {"title": " \"Enhancing reuse of constraint solutions to improve symbolic execution\"", "authors": ["Xiangyang Jia", " Carlo Ghezzi ", " Shi Ying"]}, {"title": " \"A model counter for constraints over unbounded strings\"", "authors": ["Loi Luu", " Shweta Shinde", " Prateek Saxena ", " Brian Demsky"]}, {"title": " \"Synthesis of adaptive side-channel attacks\"", "authors": ["Quoc-Sang Phan", " Lucas Bang", " Corina S. Pasareanu", " Pasquale Malacaria ", " Tevfik Bultan"]}, {"title": " \"Quantifying information leaks using reliability analysis\"", "authors": ["Quoc-Sang Phan", " Pasquale Malacaria", " Corina S. Pasareanu ", " Marcelo d\u2019Amorim"]}, {"title": " \"Symbolic quantitative information flow\"", "authors": ["Quoc-Sang Phan", " Pasquale Malacaria", " Oksana Tkachuk ", " Corina S. Pasareanu"]}, {"title": " \"Attack synthesis for strings using meta-heuristics\"", "authors": ["Seemanta Saha", " Ismet Burak Kadron", " William Eiers", " Lucas Bang ", " Tevfik Bultan"]}, {"title": " \"A symbolic execution framework for javascript\"", "authors": ["Prateek Saxena", " Devdatta Akhawe", " Steve Hanna", " Feng Mao", " Stephen McCamant ", " Dawn Song"]}, {"title": " \"Model counting for recursively-defined strings\"", "authors": ["Minh-Thai Trinh", " Duc-Hiep Chu ", " Joxan Jaffar"]}, {"title": " \"Green: reducing reusing and recycling constraints in program analysis\"", "authors": ["Willem Visser", " Jaco Geldenhuys ", " Matthew B Dwyer"]}]},
{"doi": "10.1109/ASE.2002.1115040", "title": "A model of planning and enactment support in complex software development projects", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Programming", "Software engineering"], "abstract": "Summary form only given. We propose an approach to facilitating not only project enactment but also project planning and monitoring, by tracking all decisions made during project planning and enactment and managing dependencies between these decisions. In order to identify those dependencies relevant for a decision, we established an extendable model of planning and plan enactment, which explicitly describes the activities likely to occur while planning and enacting a software development project, as well as standard dependencies between these activities. We formalized this model by adapting an existing dependency management system, the Redux Model of Design, to record planning and plan enactment decisions and their dependencies. Furthermore, we are currently identifying heuristics to automatically capture typical dependencies, and defining rules to provide automatic planning support where possible. This approach allows to interleave planning and plan enactment, and to feed enactment data back into the plan, either by automatically reacting to enactment events and plan changes, or by notifying the appropriate person(s). Thus, we provide extensive support for the process of planning and enacting software development projects, in the form of dependency management, user notifications, and, where possible, automation of selective process steps.", "author": [{"name": "S. Goldmann", "affiliation": "Knowledge-Based Systems Group, University of Kaiserslautern, Germany"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00051", "title": "ACTGAN: Automatic Configuration Tuning for Software Systems with Generative Adversarial Networks", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tuning", "Software systems", "Predictive models", "Generative adversarial networks", "Time factors", "Sparks", "Gallium nitride"], "abstract": "Complex software systems often provide a large number of parameters so that users can configure them for their specific application scenarios. However, configuration tuning requires a deep understanding of the software system, far beyond the abilities of typical system users. To address this issue, many existing approaches focus on exploring and learning good performance estimation models. The accuracy of such models often suffers when the number of available samples is small, a thorny challenge under a given tuning-time constraint. By contrast, we hypothesize that good configurations often share certain hidden structures. Therefore, instead of trying to improve the performance estimation of a given configuration, we focus on capturing the hidden structures of good configurations and utilizing such learned structure to generate potentially better configurations. We propose ACTGAN to achieve this goal. We have implemented and evaluated ACTGAN using 17 workloads with eight different software systems. Experimental results show that ACTGAN outperforms default configurations by 76.22% on average, and six state-of-the-art configuration tuning algorithms by 6.58%-64.56%. Furthermore, the ACTGAN-generated configurations are often better than those used in training and show certain features consisting with domain knowledge, both of which supports our hypothesis.", "author": [{"name": "Liang Bao", "affiliation": "School of Computer Science and Technology, XiDian University, Xi\u2019an, ShaanXi, China"}, {"name": "Xin Liu", "affiliation": "Department of Computer Science, University of California, Davis, Davis, California, USA"}, {"name": "Fangzheng Wang", "affiliation": "School of Computer Science and Technology, XiDian University, Xi\u2019an, ShaanXi, China"}, {"name": "Baoyin Fang", "affiliation": "School of Computer Science and Technology, XiDian University, Xi\u2019an, ShaanXi, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Starfish: A self-tuning system for big data analytics\"", "authors": ["H. Herodotou", " H. Lim", " G. Luo", " N. Borisov", " L. Dong", " F. B. Cetin", " ."]}, {"title": " \"Bestconfig: tapping the performance potential of systems via automatic configuration tuning\"", "authors": ["Y. Zhu", " J. Liu", " M. Guo", " Y. Bao", " W. Ma", " Z. Liu", " ."]}, {"title": " \"Rfhoc: A random-forest approach to auto-tuning hadoop\u2019s configuration\"", "authors": ["Z. Bei", " Z. Yu", " H. Zhang", " W. Xiong", " C. Xu", " L. Eeckhout", " ."]}, {"title": " \"Data-efficient performance learning for configurable systems\"", "authors": ["J. Guo", " D. Yang", " N. Siegmund", " S. Apel", " A. Sarkar", " P. Valov", " ."]}, {"title": " \"Mr-cof: a genetic mapreduce configuration optimization framework\"", "authors": ["C. Liu", " D. Zeng", " H. Yao", " C. Hu", " X. Yan ", " Y. Fan"]}, {"title": " \"Performance prediction for apache spark platform\"", "authors": ["K. Wang ", " M. M. H. Khan"]}, {"title": " \"Hey you have given me too many knobs!: understanding and dealing with over-designed configuration in system software\"", "authors": ["T. Xu", " L. Jin", " X. Fan", " Y. Zhou", " S. Pasupathy ", " R. Talwadker"]}, {"title": " \"A recursive random search algorithm for large-scale network parameter configuration\"", "authors": ["T. Ye ", " S. Kalyanaraman"]}, {"title": " \"The future of software performance engineering\" in 2007 Future of Software Engineering", "authors": ["M. Woodside", " G. Franks ", " D. C. Petriu"]}, {"title": " \"Model-based performance prediction in software development: A survey\"", "authors": ["S. Balsamo", " A. Di Marco", " P. Inverardi ", " M. Simeoni"]}, {"title": " \"Performance evaluation of component-based software systems: A survey\"", "authors": ["H. Koziolek"]}, {"title": " \"A workload-dependent performance analysis of an in-memory database in a multi-tenant configuration\"", "authors": ["D. Paluch", " H. Kienegger ", " H. Krcmar"]}, {"title": " \"Generating performance distributions via probabilistic symbolic execution\"", "authors": ["B. Chen", " Y. Liu ", " W. Le"]}, {"title": " \"Comparative analysis of software performance prediction approaches in context of component-based system\"", "authors": ["A. Abdelaziz", " W. Kadir ", " A. Osman"]}, {"title": " \"Random search for hyper-parameter optimization\"", "authors": ["J. Bergstra ", " Y. Bengio"]}, {"title": " \"Searching for better configurations: a rigorous approach to clone evaluation\"", "authors": ["T. Wang", " M. Harman", " Y. Jia ", " J. Krinke"]}, {"title": " \"Using bad learners to find good configurations\"", "authors": ["V. Nair", " T. Menzies", " N. Siegmund ", " S. Apel"]}, {"title": " \"Finding near-optimal configurations in product lines by random sampling\"", "authors": ["J. Oh", " D. Batory", " M. Myers ", " N. Siegmund"]}, {"title": " \"Comparison of exact and approximate multi-objective optimization for software product lines\"", "authors": ["R. Olaechea", " D. Rayside", " J. Guo ", " K. Czarnecki"]}, {"title": " \"Deep parameter optimisation\"", "authors": ["F. Wu", " W. Weimer", " M. Harman", " Y. Jia ", " J. Krinke"]}, {"title": " \"A smart hillclimbing algorithm for application server configuration\"", "authors": ["B. Xi", " Z. Liu", " M. Raghavachari", " C. H. Xia ", " L. Zhang"]}, {"title": " \"Practical bayesian optimization of machine learning algorithms\"", "authors": ["J. Snoek", " H. Larochelle ", " R. P. Adams"]}, {"title": " \"Costefficient sampling for performance prediction of configurable systems\"", "authors": ["A. Sarkar", " J. Guo", " N. Siegmund", " S. Apel ", " K. Czarnecki"]}, {"title": " \"On modelling and prediction of total cpu usage for applications in mapreduce environments\"", "authors": ["N. B. Rizv", "i", " J. Taheri", " R. Moraveji ", " A. Y. Zomaya"]}, {"title": " \"Fast inference in nonlinear dynamical systems using gradient matching\"", "authors": ["M. Niu", " S. Rogers", " M. Filippone ", " D. Husmeier"]}, {"title": " \"Understanding and auto-adjusting performance-sensitive configurations\"", "authors": ["S. Wang", " C. Li", " H. Hoffmann", " S. Lu", " W. Sentosa ", " A. I. Kistijantoro"]}, {"title": " \"Aroma: Automated resource allocation and configuration of mapreduce environment in the cloud\"", "authors": ["P. Lama ", " X. Zhou"]}, {"title": " \"Performance modeling for spark using svm\"", "authors": ["N. Luo", " Z. Yu", " Z. Bei", " C. Xu", " C. Jiang ", " L. Lin"]}, {"title": " \"Performance prediction of configurable software systems by fourier learning\"", "authors": ["Y. Zhang", " J. Guo", " E. Blais ", " K. Czarnecki"]}, {"title": " \"System performance optimization via design and configuration space exploration\"", "authors": ["C. Tang"]}, {"title": " \"Automated planning for feature model configuration based on stakeholders\u2019 business concerns\"", "authors": ["S. Soltani", " M. Asadi", " M. Hatala", " D. Ga\u0161evic ", " E. Bagheri"]}, {"title": " \"Faster discovery of faster system configurations with spectral learning\"", "authors": ["V. Nair", " T. Menzies", " N. Siegmund ", " S. Apel"]}, {"title": " \"Automated parameter optimization of classification techniques for defect prediction models\"", "authors": ["C. Tantithamthavorn", " S. McIntosh", " A. E. Hassan ", " K. Matsumoto"]}, {"title": " \"BOHB: Robust and efficient hyperparameter optimization at scale\"", "authors": ["S. Falkner", " A. Klein ", " F. Hutter"]}, {"title": " \"Sequential model based optimization for general algorithm configuration\"", "authors": ["F. Hutter", " H. Hoos ", " K. L-Brown"]}, {"title": " \"Hyperopt: A python library for optimizing the hyperparameters of machine learning algorithms\"", "authors": ["J. Bergstra", " D. Yamins ", " D. D. Cox"]}, {"title": " \"A reinforcement learning approach to map reduce auto-configuration under networked environment\"", "authors": ["C. Peng", " C. Zhang", " C. Peng ", " J. Man"]}, {"title": " \"Autoconfig: Automatic configuration tuning for distributed message systems\"", "authors": ["L. Bao", " X. Liu", " Z. Xu ", " B. Fang"]}, {"title": " \"Experience transfer for the configuration tuning in large-scale computing systems\"", "authors": ["H. Chen", " W. Zhang ", " G. Jiang"]}, {"title": " \"Transfer learning for performance modeling of configurable systems: An exploratory analysis\"", "authors": ["P. Jamshidi", " N. Siegmund", " M. Velez ", " C. K\u00e4stner"]}, {"title": " \"Metaheuristics in combinatorial optimization: Overview and conceptual comparison\"", "authors": ["C. Blum ", " A. Roli"]}, {"title": " \"A tutorial on bayesian optimization\"", "authors": ["P. I. Frazier"]}, {"title": " \"Cooperatively coevolving particle swarms for large scale optimization\"", "authors": ["X. Li ", " X. Yao"]}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}, {"title": " \"The hibench benchmark suite: Characterization of the mapreduce-based data analysis\"", "authors": ["S. Huang", " J. Huang", " J. Dai", " T. Xie ", " B. Huang"]}, {"title": " \"Benchmarking cloud serving systems with ycsb\"", "authors": ["B. F. Cooper", " A. Silberstein", " E. Tam", " R. Ramakrishnan ", " R. Sears"]}]},
{"doi": "10.1109/ASE.2002.1115041", "title": "Distributed modular model checking", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Software engineering"], "abstract": "Summary form only given. Model checking is a formal method that verifies whether a finite state model of a system satisfies a specification given as a temporal logic formula. The most severe problem model checking suffers from is the so called state explosion problem. Distribution is one of the techniques that combat the state explosion. The aim is to distribute the state space among a number of computers so as to be able to verify larger systems. Another approach that deals with the state explosion problem is modularity, i.e. exploiting the structure of the system. We propose to employ modular techniques to the distributed model checking problem. This can be useful especially for software, as the software model checking algorithms suffer from state explosion more severely than the hardware model checking techniques even when the system consists of one sequential finite-state component. Moreover, software programs have typically richer syntactic structure that can be exploited. Besides elaborating a theoretical background for distributed model checking based on the modular approach, we also intend to develop modular approaches to partitioning the state space, in particular to define partition functions that reduce the necessary communication in the distributed environment.", "author": [{"name": "J. Crhova", "affiliation": "Department of Computer Science Informatics, Masaryk University Brno, Czech Republic"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00052", "title": "V2: Fast Detection of Configuration Drift in Python", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Runtime", "Semantics", "Python", "Documentation", "Indexes", "Standards", "Computer crashes"], "abstract": "Code snippets are prevalent, but are hard to reuse because they often lack an accompanying environment configuration. Most are not actively maintained, allowing for drift between the most recent possible configuration and the code snippet as the snippet becomes out-of-date over time. Recent work has identified the problem of validating and detecting out-of-date code snippets as the most important consideration for code reuse. However, determining if a snippet is correct, but simply out-of-date, is a non-trivial task. In the best case, breaking changes are well documented, allowing developers to manually determine when a code snippet contains an out-of-date API usage. In the worst case, determining if and when a breaking change was made requires an exhaustive search through previous dependency versions. We present V2, a strategy for determining if a code snippet is out-of-date by detecting discrete instances of configuration drift, where the snippet uses an API which has since undergone a breaking change. Each instance of configuration drift is classified by a failure encountered during validation and a configuration patch, consisting of dependency version changes, which fixes the underlying fault. V2 uses feedback-directed search to explore the possible configuration space for a code snippet, reducing the number of potential environment configurations that need to be validated. When run on a corpus of public Python snippets from prior research, V2 identifies 248 instances of configuration drift.", "author": [{"name": "Eric Horton", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Chris Parnin", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Blogging developer knowledge: Motivations challenges and future directions\"", "authors": ["C. Parnin", " C. Treude ", " M. A. Storey"]}, {"title": " \"What is the gist?: Understanding the use of public gists on github\"", "authors": ["W. Wang", " G. Poo-Caama\u00f1o", " E. Wilde ", " D. M. German"]}, {"title": " \"Gistable: Evaluating the executability of python code snippets on github\"", "authors": ["E. Horton ", " C. Parnin"]}, {"title": " \"Exploration and explanation in computational notebooks\"", "authors": ["A. Rule", " A. Tabard ", " J. D. Hollan"]}, {"title": " \"Where does google find api documentation?\"", "authors": ["C. Treude ", " M. Aniche"]}, {"title": " \"Stack overflow in github: Any snippets there?\"", "authors": ["D. Yang", " P. Martins", " V. Saini ", " C. Lopes"]}, {"title": " \"From query to usable code: An analysis of stack overflow code snippets\"", "authors": ["D. Yang", " A. Hussain ", " C. V. Lopes"]}, {"title": " \"A quantitative study of java software buildability\"", "authors": ["M. Sul\u00edr ", " J. Porub\u00e4n"]}, {"title": " \"Dockerizeme: Automatic inference of environment dependencies for python code snippets\"", "authors": ["E. Horton ", " C. Parnin"]}, {"title": " \"A large-scale study about quality and reproducibility of jupyter notebooks\"", "authors": ["J. F. Pimentel", " L. Murta", " V. Braganholo ", " J. Freire"]}, {"title": " \"How do developers utilize source code from stack overflow?\"", "authors": ["Y. Wu", " S. Wang", " C.-P. Bezemer ", " K. Inoue"]}, {"title": " \"Automatically repairing dependency-related build breakage\"", "authors": ["C. Macho", " S. McIntosh ", " M. Pinzger"]}, {"title": " \"Hirebuild: An automatic approach to history-driven repair of build scripts\"", "authors": ["F. Hassan ", " X. Wang"]}, {"title": " \"Leveraging program equivalence for adaptive program repair: Models and first results\"", "authors": ["W. Weimer", " Z. P. Fry ", " S. Forrest"]}, {"title": " \"The oracle problem in software testing: A survey\"", "authors": ["E. T. Barr", " M. Harman", " P. McMinn", " M. Shahbaz ", " S. Yoo"]}, {"title": " \"When it breaks it breaks: How ecosystem developers reason about the stability of dependencies\"", "authors": ["C. Bogart", " C. K\u00e4stner ", " J. Herbsleb"]}, {"title": " \"Programmers\u2019 build errors: A case study (at google)\"", "authors": ["H. Seo", " C. Sadowski", " S. Elbaum", " E. Aft", "ilian "]}, {"title": " \"How to design a program repair bot? insights from the repairnator project\"", "authors": ["S. Urli", " Z. Yu", " L. Seinturier ", " M. Monperrus"]}, {"title": " \"Patches as better bug reports\"", "authors": ["W. Weimer"]}, {"title": " \"An empirical study of build maintenance effort\"", "authors": ["S. McIntosh", " B. Adams", " T. H. Nguyen", " Y. Kamei ", " A. E. Hassan"]}, {"title": " \"Why do we break apis? first answers from developers\"", "authors": ["L. Xavier", " A. Hora ", " M. T. Valente"]}, {"title": " \"An empirical analysis of the docker container ecosystem on github\"", "authors": ["J. Cito", " G. Schermann", " J. E. Wittern", " P. Leitner", " S. Zumberi ", " H. C. Gall"]}, {"title": " \"An empirical comparison of dependency issues in oss packaging ecosystems\"", "authors": ["A. Decan", " T. Mens ", " M. Claes"]}, {"title": " \"Can automated pull requests encourage software developers to upgrade out-of-date dependencies?\"", "authors": ["S. Mirhosseini ", " C. Parnin"]}, {"title": " \"Api-evolution support with diff-catchup\"", "authors": ["Z. Xing ", " E. Stroulia"]}, {"title": " \"Catchup!: Capturing and replaying refactorings to support api evolution\"", "authors": ["J. Henkel ", " A. Diwan"]}, {"title": " \"Recommending adaptive changes for framework evolution\"", "authors": ["B. Dagenais ", " M. P. Robillard"]}, {"title": " \"Tortoise: Interactive system configuration repair\"", "authors": ["A. Weiss", " A. Guha ", " Y. Brun"]}, {"title": " \"Finding faster configurations using flash\"", "authors": ["V. Nair", " Z. Yu", " T. Menzies", " N. Siegmund ", " S. Apel"]}, {"title": " \"History driven program repair\"", "authors": ["X. B. D. Le", " D. Lo ", " C. L. Goues"]}]},
{"doi": "10.1109/ASE.2002.1115042", "title": "Adapting applications on the fly", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Runtime", "Joining processes", "Java", "Dynamic programming", "Automation", "Bibliographies", "Reliability engineering", "Application software", "USA Councils", "Software engineering"], "abstract": "Summary form only given. Adapting a component-based application means adapting one or more of its components, and in general, adapting a component at run-time means disconnecting it from the application and connecting a new version of this component. Many approaches like OLAN and DCUP are based on component models in which each component is constituted by a functional part and a control part. This last part provides a set of services to administrate the component. In our approach we aim to separate the control part outside the component. The benefit is the possibility to apply our solutions to existing models that have not been designed to support the dynamic adaptation. Through a first experimentation on the JavaBeans component model, we define an adaptation process composed of several steps: (1) defining the mapping rules between the old and the new component (correspondence between properties and services); (2) passivating the old and the new components; (3) transferring the state of the old component into the new one according to the mapping rules defined before; (4) disconnecting the old component and connecting the new one; (5) activating the new component. These steps may constitute the basic activities of an adaptation machine.", "author": [{"name": "A. Ketfi", "affiliation": "Adele Team Bat C, Domaine Universitaire, Grenoble, France"}, {"name": "N. Belkhatir", "affiliation": "Adele Team Bat C, Domaine Universitaire, Grenoble, France"}, {"name": "P.-Y. Cunin", "affiliation": "Adele Team Bat C, Domaine Universitaire, Grenoble, France"}], "time": "2002", "citationCount": "7", "references": [{"title": " \"An Agent platform for Reliable Asynchronous Distributed Programming\"", "authors": ["L. Bellissard", " N. De Palma", " A. Freyssinet", " M. Herrmann ", " S. Lacourte"]}, {"title": " \"DCUP: Dynamic Component Updating in Java/CORBA Environment\"", "authors": ["F. Plasil", " D. Balek ", " R. Janecek"]}, {"title": " \"Dynamic updating of component-based applications\"", "authors": ["A. Ketfi", " N. Belkhatir ", " P.Y. Cunin"]}]},
{"doi": "10.1109/ASE.2019.00053", "title": "Feature-Interaction Aware Configuration Prioritization for Configurable Code", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Feature extraction", "Linux", "Kernel", "Databases", "Benchmark testing"], "abstract": "Unexpected interactions among features induce most bugs in a configurable software system. Exhaustively analyzing all the exponential number of possible configurations is prohibitively costly. Thus, various sampling techniques have been proposed to systematically narrow down the exponential number of legal configurations to be analyzed. Since analyzing all selected configurations can require a huge amount of effort, fault-based configuration prioritization, that helps detect faults earlier, can yield practical benefits in quality assurance. In this paper, we propose CoPro, a novel formulation of feature-interaction bugs via common program entities enabled/disabled by the features. Leveraging from that, we develop an efficient feature-interaction-aware configuration prioritization technique for a configurable system by ranking the configurations according to their total number of potential bugs. We conducted several experiments to evaluate CoPro on the ability to detect configuration-related bugs in a public benchmark. We found that CoPro outperforms the state-of-the-art configuration prioritization techniques when we add them on advanced sampling algorithms. In 78% of the cases, CoPro ranks the buggy configurations at the top 3 positions in the resulting list. Interestingly, CoPro is able to detect 17 not-yet-discovered feature-interaction bugs.", "author": [{"name": "Son Nguyen", "affiliation": "Computer Science Department, The University of Texas at Dallas, USA"}, {"name": "Hoan Nguyen", "affiliation": "Amazon Corporation, USA"}, {"name": "Ngoc Tran", "affiliation": "Computer Science Department, The University of Texas at Dallas, USA"}, {"name": "Hieu Tran", "affiliation": "Computer Science Department, The University of Texas at Dallas, USA"}, {"name": "Tien Nguyen", "affiliation": "University of Texas at Dallas, Dallas, TX, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"42 Variability Bugs in the Linux Kernel: A Qualitative Analysis\"", "authors": ["Iago Abal", " Claus Brabr", " "]}, {"title": " \"Similarity-based prioritization in software product-line testing\"", "authors": ["Mustafa Al-Hajjaji", " Thomas Th\u00fcm", " Jens Meinicke", " Malte Lochau ", " Gunter Saake"]}, {"title": " \"An overview of feature-oriented software development\"", "authors": ["Sven Apel ", " Christian K\u00e4stner"]}, {"title": " \"Exploring feature interactions in the wild: The new feature-interaction challenge\"", "authors": ["Sven Apel", " Sergiy Kolesnikov", " Norbert Siegmund", " Christian K\u00e4stner ", " Brady Garvin"]}, {"title": " \"Detection of Feature Interactions Using Feature-aware Verification\"", "authors": ["Sven Apel", " Hendrik Speidel", " Philipp Wendler", " Alex", "er von Rhein "]}, {"title": " \"Feature models grammars and propositional formulas\"", "authors": ["Don Batory"]}, {"title": " \"A study of variability models and languages in the systems software domain\"", "authors": ["T. Berger", " S. She", " R. Lotufo", " A. Wasowski ", " K. Czarnecki"]}, {"title": " \"A survey of variability modeling in industrial practice\"", "authors": ["Thorsten Berger", " Ralf Rublack", " Divya Nair", " Joanne M. Atlee", " Martin Becker", " Krzysztof Czarnecki", " ."]}, {"title": " \"Spllift: Statically analyzing software product lines in minutes instead of years\"", "authors": ["Eric Bodden", " T\u00e1rsis Tol\u00eado", " M\u00e1rcio Ribeiro", " Claus Brabr", "", " Paulo Borba ", " Mira Mezini"]}, {"title": " \"Intraprocedural dataflow analysis for software product lines\"", "authors": ["Claus Brabr", "", " M\u00e1rcio Ribeiro", " T\u00e1rsis Tol\u00eado ", " Paulo Borba"]}, {"title": " \"Improving the testing and testability of software product lines\"", "authors": ["Isis Cabral", " Myra B. Cohen ", " Gregg Rothermel"]}, {"title": " \"Extending type inference to variational programs\"", "authors": ["Sheng Chen", " Martin Erwig ", " Eric Walkingshaw"]}, {"title": " \"Symbolic model checking of software product lines\"", "authors": ["Andreas Classen", " Patrick Heymans", " Pierre-Yves Schobbens ", " Axel Legay"]}, {"title": " \"Model checking lots of systems: Efficient verification of temporal properties in software product lines\"", "authors": ["Andreas Classen", " Patrick Heymans", " Pierre-Yves Schobbens", " Axel Legay ", " Raskin. Jean-Fran\u00e7ois"]}, {"title": " \"Model checking lots of systems: Efficient verification of temporal properties in software product lines\"", "authors": ["Andreas Classen", " Patrick Heymans", " Pierre-Yves Schobbens", " Axel Legay ", " Jean-Francois Raskin"]}, {"title": " \"Interaction testing of highly-configurable systems in the presence of constraints\"", "authors": ["Myra B. Cohen", " Matthew B. Dwyer ", " Jiangfan Shi"]}, {"title": " \"Verifying feature-based model templates against well-formedness OCL constraints\"", "authors": ["Krzysztof Czarnecki ", " Krzysztof Pietroszek"]}, {"title": " \"Test case prioritization: a family of empirical studies\"", "authors": ["S. Elbaum", " A. G. Malishevsky ", " G. Rothermel"]}, {"title": " \"The choice calculus: A representation for software variation\"", "authors": ["Martin Erwig ", " Eric Walkingshaw"]}, {"title": " \"Variation programming with the choice calculus\"", "authors": ["Martin Erwig ", " Eric Walkingshaw"]}, {"title": " \"Feature interaction faults revisited: An exploratory study\"", "authors": ["Brady J. Garvin ", " Myra B. Cohen"]}, {"title": " \"Test confessions: A study of testing practices for plug-in systems\"", "authors": ["Michaela Greiler", " Arie van Deursen ", " Margaret-Anne Storey"]}, {"title": " \"Modeling and model checking software product lines\"", "authors": ["Alex", "er Gruler", " Martin Leucker ", " Kathrin Scheidemann"]}, {"title": " \"An algorithm for generating t-wise covering arrays from large feature models\"", "authors": ["Martin Fagereng Johansen", " Oystein Haugen ", " Franck Fleurey"]}, {"title": " \"Type checking annotation-based product lines\"", "authors": ["Christian K\u00e4stner", " Sven Apel", " Thomas Th\u00fcm ", " Gunter Saake"]}, {"title": " \"Variability-aware parsing in the presence of lexical macros and conditional compilation\"", "authors": ["Christian K\u00e4stner", " Paolo G. Giarrusso", " Tillmann Rendel", " Sebastian Erdweg", " Klaus Ostermann ", " Thorsten Berger"]}, {"title": " \"TypeChef: Toward Type Checking #Ifdef Variability in C\"", "authors": ["Andy Kenner", " Christian K\u00e4stner", " Steffen Haase ", " Thomas Leich"]}, {"title": " \"Model checking of domain artifacts in product line engineering\"", "authors": ["Kim Lauenroth", " Klaus Pohl ", " Simon Toehning"]}, {"title": " \"Ipog-ipog-d: Efficient test generation for multi-way combinatorial testing\"", "authors": ["Yu Lei", " Raghu Kacker", " D. Richard Kuhn", " Vadim Okun ", " James Lawrence"]}, {"title": " \"Scalable analysis of variable software\"", "authors": ["J\u00f6rg Liebig", " Alex", "er von Rhein", " Christian K\u00e4stner", " Sven Apel", " Jens D\u00f6rre ", " Christian Lengauer"]}, {"title": " \"On strategies for testing software product lines: A systematic literature review\"", "authors": ["Ivan Do Carmo Machado", " John D. Mcgregor", " Yguarat\u00e3 Cerqueira Cavalcanti ", " Eduardo Santana De Almeida"]}, {"title": " \"Practical pairwise testing for software product lines\"", "authors": ["Dusica Marijan", " Arnaud Gotlieb", " Sagar Sen ", " Aymeric Hervieu"]}, {"title": " \"A comparison of 10 sampling algorithms for configurable systems\"", "authors": ["Fl\u00e1vio Medeiros", " Christian K\u00e4stner", " M\u00e1rcio Ribeiro", " Rohit Gheyi ", " Sven Apel"]}, {"title": " \"On essential configuration complexity: Measuring interactions in highly-configurable systems\"", "authors": ["Jens Meinicke", " Chu-Pan Wong", " Christian K\u00e4stner", " Thomas Th\u00fcm ", " Gunter Saake"]}, {"title": " \"SAT-based analysis of feature models is easy\"", "authors": ["Marc\u00edlio Mendon\u00e7a", " Andrzej Wkasowski ", " Krzysztof Czarnecki"]}, {"title": " \"Exploring variability-aware execution for testing plugin-based web applications\"", "authors": ["Hung Viet Nguyen", " Christian K\u00e4stner ", " Tien N. Nguyen"]}, {"title": " \"A survey of combinatorial testing\" in ACM Comput. Surv.", "authors": ["Changhai Nie ", " Hareton Leung"]}, {"title": " \"Automated incremental pairwise testing of software product lines\"", "authors": ["Sebastian Oster", " Florian Markert ", " Philipp Ritter"]}, {"title": " \"Automated and scalable t-wise test case generation strategies for software product lines\"", "authors": ["Gilles Perrouin", " Sagar Sen", " Jacques Klein", " Benoit Baudry ", " Yves le Traon"]}, {"title": " \"Configuration lifting: Verification meets software configuration\"", "authors": ["H. Post ", " C. Sinz"]}, {"title": " \"Priori-tizing test cases for regression testing\"", "authors": ["G. Rothermel", " R. H. Untch", " Chengyun Chu ", " M. J. Harrold"]}, {"title": " \"Configuration coverage in the analysis of large-scale system software\"", "authors": ["Reinhard Tartler", " Daniel Lohmann", " Christian Dietrich", " Christoph Egger ", " Julio Sincero"]}, {"title": " \"Safe composition of product lines\"", "authors": ["Sahil Thaker", " Don Batory", " David Kitchin ", " William Cook"]}, {"title": " \"A classification and survey of analysis strategies for software product lines\"", "authors": ["Thomas Th\u00fcm", " Sven Apel", " Christian K\u00e4stner", " Ina Schaefer ", " Gunter Saake"]}, {"title": " \"Acts: A combinatorial test generation tool\"", "authors": ["Linbin Yu", " Yu Lei", " Raghu N Kacker ", " D Richard Kuhn"]}]},
{"doi": "10.1109/ASE.2002.1115043", "title": "Process support for tools interoperability", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Concrete", "Application software", "Software engineering", "Collaborative tools", "Collaborative work"], "abstract": "Summary form only given. Our work seeks to build a platform that makes entities of various types (component, COTS, tools, etc.) interoperate in order to build a new application. We call this new kind of application a federation. Our federations use workflow as a support for application integration and interoperability. In this approach, the process is not defined in term of tools and their parameters; instead, the process is high level and describes only abstract steps without knowledge on how these steps will be carried out. Therefore, the federation offers a means to describe and control the synchronization between the abstract and executable process, and a set of concrete tools. The federation ensures that the execution of the abstract level involves a compatible real execution at the concrete level. Indeed, the real execution requires the collaboration of several tools. The description on how the abstract level is refined into the real execution satisfies consistency rules and interoperability paradigms. We think our work contributes by providing a high level view in which the application can be described, independently from the real tools specificities, and by providing the means to describe the application behavior and the tools can be used and modified flexibly and dynamically.", "author": [{"name": "Le A-T", "affiliation": "Lab. Logiciels, Systemes Reseaux - IMAG, Domaine Univ., Grenoble, France"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00054", "title": "Combining Spectrum-Based Fault Localization and Statistical Debugging: An Empirical Study", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Debugging", "Data collection", "Instruments", "Runtime", "Systematics", "Computational modeling", "Data models"], "abstract": "Program debugging is a time-consuming task, and researchers have proposed different kinds of automatic fault localization techniques to mitigate the burden of manual debugging. Among these techniques, two popular families are spectrum-based fault localization (SBFL) and statistical debugging (SD), both localizing faults by collecting statistical information at runtime. Though the ideas are similar, the two families have been developed independently and their combinations have not been systematically explored. In this paper we perform a systematical empirical study on the combination of SBFL and SD. We first build a unified model of the two techniques, and systematically explore four types of variations, different predicates, different risk evaluation formulas, different granularities of data collection, and different methods of combining suspicious scores. Our study leads to several findings. First, most of the effectiveness of the combined approach contributed by a simple type of predicates: branch conditions. Second, the risk evaluation formulas of SBFL significantly outperform that of SD. Third, fine-grained data collection significantly outperforms coarse-grained data collection with a little extra execution overhead. Fourth, a linear combination of SBFL and SD predicates outperforms both individual approaches. According to our empirical study, we propose a new fault localization approach, PREDFL (Predicate-based Fault Localization), with the best configuration for each dimension under the unified model. Then, we explore its complementarity to existing techniques by integrating PREDFL with a state-of-the-art fault localization framework. The experimental results show that PREDFL can further improve the effectiveness of state-of-the-art fault localization techniques. More concretely, integrating PREDFL results in an up to 20.8% improvement w.r.t the faults successfully located at Top-1, which reveals that PREDFL complements existing techniques.", "author": [{"name": "Jiajun Jiang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU)"}, {"name": "Ran Wang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU)"}, {"name": "Yingfei Xiong", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU)"}, {"name": "Xiangping Chen", "affiliation": "Guangdong Key Laboratory for Big Data Analysis and Simulation of Public Opinion"}, {"name": "Lu Zhang", "affiliation": "Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU)"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Visualization of test information to assist fault localization\"", "authors": ["J. A. Jones", " M. J. Harrold ", " J. Stasko"]}, {"title": " \"Empirical evaluation of the tarantula automatic fault-localization technique\"", "authors": ["J. A. Jones ", " M. J. Harrold"]}, {"title": " \"On the accuracy of spectrum-based fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. Van Gemund"]}, {"title": " \"Bug isolation via remote program sampling\"", "authors": ["B. Liblit", " A. Aiken", " A. X. Zheng ", " M. I. Jordan"]}, {"title": " \"Scalable statistical bug isolation\"", "authors": ["B. Liblit", " M. Naik", " A. X. Zheng", " A. Aiken ", " M. I. Jordan"]}, {"title": " \"Adaptive bug isolation\"", "authors": ["P. Arumuga Nainar ", " B. Liblit"]}, {"title": " \"Sober: Statistical model-based bug localization\"", "authors": ["C. Liu", " X. Yan", " L. Fei", " J. Han ", " S. P. Midkiff"]}, {"title": " \"A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization\"", "authors": ["X. Xie", " T. Y. Chen", " F.-C. Kuo ", " B. Xu"]}, {"title": " \"Theory and practice do they match? a case with spectrum-based fault localization\"", "authors": ["T. D. B. Le", " F. Thung ", " D. Lo"]}, {"title": " \"Statistical debugging using compound boolean predicates\"", "authors": ["P. Arumuga Nainar", " T. Chen", " J. Rosin ", " B. Liblit"]}, {"title": " \"Holmes: Effective statistical debugging via efficient path profiling\"", "authors": ["T. M. Chilimbi", " B. Liblit", " K. Mehra", " A. V. Nori ", " K. Vaswani"]}, {"title": " \"Statistical debugging: Simultaneous identification of multiple bugs\"", "authors": ["A. X. Zheng", " M. I. Jordan", " B. Liblit", " M. Naik ", " A. Aiken"]}, {"title": " \"Statistical debugging: A hypothesis testing-based approach\"", "authors": ["C. Liu", " L. Fei", " X. Yan", " J. Han ", " S. P. Midkiff"]}, {"title": " \"Context-aware statistical debugging: From bug predictors to faulty control flow paths\"", "authors": ["L. Jiang ", " Z. Su"]}, {"title": " \"Defects4j: A database of existing faults to enable controlled testing studies for java programs\"", "authors": ["R. Just", " D. Jalali ", " M. D. Ernst"]}, {"title": " \"Evaluating and improving fault localization\"", "authors": ["S. Pearson", " J. Campos", " R. Just", " G. Fraser", " R. Abreu", " M. D. Ernst", " ."]}, {"title": " \"Fluccs: Using code and change metrics to improve fault localization\"", "authors": ["J. Sohn ", " S. Yoo"]}, {"title": " \"An empirical study of fault localization families and their combinations\"", "authors": ["D. Zou", " J. Liang", " Y. Xiong", " M. D. Ernst ", " L. Zhang"]}, {"title": " \"Nopol: Automatic repair of conditional statement bugs in java programs\"", "authors": ["J. Xuan", " M. Martinez", " F. Demarco", " M. Cl\u00e9ment", " S. Lamelas", " T. Durieux", " ."]}, {"title": " \"Precise condition synthesis for program repair\"", "authors": ["Y. Xiong", " J. Wang", " R. Yan", " J. Zhang", " S. Han", " G. Huang", " ."]}, {"title": " \"History driven program repair\"", "authors": ["X.-B. D. Le", " D. Lo ", " C. Le Goues"]}, {"title": " \"Leveraging syntax-related code for automated program repair\"", "authors": ["Q. Xin ", " S. P. Reiss"]}, {"title": " \"An evaluation of similarity coefficients for software fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. C. v. Gemund"]}, {"title": " \"A learning-to-rank based fault localization approach using likely invariants\"", "authors": ["T.-D. B. Le", " D. Lo", " C. Le Goues ", " L. Grunske"]}, {"title": " \"Automatic repair of real bugs in java: A large-scale experiment on the Defects4J dataset\"", "authors": ["M. Martinez", " T. Durieux", " R. Sommerard", " J. Xuan ", " M. Monperrus"]}, {"title": " \"Contract-based program repair without the contracts\"", "authors": ["L. Chen", " Y. Pei ", " C. A. Furia"]}, {"title": " \"Elixir: Effective object oriented program repair\"", "authors": ["R. K. Saha", " Y. Lyu", " H. Yoshida ", " M. R. Prasad"]}, {"title": " \"Context-aware patch generation for better automated program repair\"", "authors": ["M. Wen", " J. Chen", " R. Wu", " D. Hao ", " S.-C. Cheung"]}, {"title": " \"Shaping program repair space with existing patches and similar code\"", "authors": ["J. Jiang", " Y. Xiong", " H. Zhang", " Q. Gao ", " X. Chen"]}, {"title": " \"Towards practical program repair with on-demand candidate generation\"", "authors": ["J. Hua", " M. Zhang", " K. Wang ", " S. Khurshid"]}, {"title": " \"Practical program repair via bytecode mutation\"", "authors": ["A. Ghanbari", " S. Benton ", " L. Zhang"]}, {"title": " \"A manual inspection of defects4j bugs and its implications for automatic program repair\"", "authors": ["J. Jiang", " Y. Xiong ", " X. Xia"]}, {"title": " \"Practitioners\u2019 expectations on automated fault localization\"", "authors": ["P. S. Kochhar", " X. Xia", " D. Lo ", " S. Li"]}, {"title": " \"Spectrum-based multiple fault localization\"", "authors": ["R. Abreu", " P. Zoeteweij ", " A. J. C. v. Gemund"]}, {"title": " \"The dstar method for effective software fault localization\"", "authors": ["W. E. Wong", " V. Debroy", " R. Gao ", " Y. Li"]}, {"title": " \"A model for spectra-based software diagnosis\"", "authors": ["L. Naish", " H. J. Lee ", " K. Ramamohanarao"]}, {"title": " \"Learning to combine multiple ranking metrics for fault localization\"", "authors": ["J. Xuan ", " M. Monperrus"]}, {"title": " \"Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators\"", "authors": ["F. Steimann", " M. Frenkel ", " R. Abreu"]}, {"title": " \"A survey on software fault localization\"", "authors": ["W. E. Wong", " R. Gao", " Y. Li", " R. Abreu ", " F. Wotawa"]}, {"title": " \"Effective software fault localization using an rbf neural network\"", "authors": ["W. E. Wong", " V. Debroy", " R. Golden", " X. Xu ", " B. Thuraisingham"]}, {"title": " \"A crosstab-based statistical method for effective fault localization\"", "authors": ["E. Wong", " T. Wei", " Y. Qi ", " L. Zhao"]}, {"title": " \"A deeper look into bug fixes: Patterns replacements deletions and additions\"", "authors": ["M. Soto", " F. Thung", " C.-P. Wong", " C. Le Goues ", " D. Lo"]}, {"title": " \"Locating faults through automated predicate switching\"", "authors": ["X. Zhang", " N. Gupta ", " R. Gupta"]}, {"title": " \"Ask the mutants: Mutating faulty programs for fault localization\"", "authors": ["S. Moon", " Y. Kim", " M. Kim ", " S. Yoo"]}, {"title": " \"Pruning dynamic slices with confidence\"", "authors": ["X. Zhang", " N. Gupta ", " R. Gupta"]}, {"title": " \"Metallaxis-fl: Mutation-based fault localization\"", "authors": ["M. Papadakis ", " Y. Le Traon"]}, {"title": " \"Bugcache for inspections: Hit or miss?\"", "authors": ["F. Rahman", " D. Posnett", " A. Hindle", " E. Barr ", " P. Devanbu"]}, {"title": " \"Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports\"", "authors": ["J. Zhou", " H. Zhang ", " D. Lo"]}, {"title": " \"Do stack traces help developers fix bugs?\"", "authors": ["A. Schroter", " A. Schrter", " N. Bettenburg ", " R. Premraj"]}, {"title": " \"Using compressed bytecode traces for slicing java programs\"", "authors": ["T. Wang ", " A. Roychoudhury"]}, {"title": " \"Heuristics for automatic localization of software faults\"", "authors": ["H. Pan ", " E. H. Spafford"]}, {"title": " \"Comparing developer-provided to user-provided tests for fault localization and automated program repair\"", "authors": ["R. Just", " C. Parnin", " I. Drosos ", " M. D. Ernst"]}, {"title": " \"A model for spectra-based software diagnosis\"", "authors": ["L. Naish", " H. J. Lee ", " K. Ramamohanarao"]}, {"title": " \"Exoneration-based fault localization for sql predicates\"", "authors": ["Y. Guo", " N. Li", " J. Offutt ", " A. Motro"]}, {"title": " \"Spectrum-based fault localization in model transformations\"", "authors": ["J. Troya", " S. Segura", " J. A. Parejo ", " A. Ruiz-Cort\u00e9s"]}, {"title": " \"Spectrum-based fault localization for logic-based reasoning\"", "authors": ["I. Pill ", " F. Wotawa"]}, {"title": " \"Compiler bug isolation via effective witness test program generation\"", "authors": ["J. Chen", " J. Han", " P. Sun", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Spectrum-based fault localization in software product lines\"", "authors": ["A. Arrieta", " S. Segura", " U. Markiegi", " G. Sagardui ", " L. Etxeberria"]}, {"title": " \"Vfl: Variable-based fault localization\"", "authors": ["J. Kim", " J. Kim ", " E. Lee"]}, {"title": " \"Reduce before you localize: Delta-debugging and spectrum-based fault localization\"", "authors": ["A. Christi", " M. L. Olson", " M. A. Alipour ", " A. Groce"]}, {"title": " \"Data-augmented software diagnosis\"", "authors": ["A. Elmishali", " R. Stern ", " M. Kalech"]}, {"title": " \"A kernel density estimate-based approach to component goodness modeling\"", "authors": ["N. Cardoso ", " R. Abreu"]}, {"title": " \"Context-aware statistical debugging: From bug predictors to faulty control flow paths\"", "authors": ["L. Jiang ", " Z. Su"]}, {"title": " \"Low-overhead and fully automated statistical debugging with abstraction refinement\"", "authors": ["Z. Zuo", " L. Fang", " S.-C. Khoo", " G. Xu ", " S. Lu"]}, {"title": " \"An empirical study of the effects of test-suite reduction on fault localization\"", "authors": ["Y. Yu", " J. Jones ", " M. J. Harrold"]}, {"title": " \"Lightweight fault-localization using multiple coverage types\"", "authors": ["R. Santelices", " J. A. Jones", " Y. Yu ", " M. J. Harrold"]}, {"title": " \"On the analysis of spectrum based fault localization using hitting sets\"", "authors": ["J. Tu", " X. Xie", " T. Y. Chen ", " B. Xu"]}, {"title": " \"Fusion fault localizers\"", "authors": ["Lucia", " D. Lo ", " X. Xia"]}, {"title": " \"Search-based fault localization\"", "authors": ["Shaowei Wang", " D. Lo", " L. Jiang", " Lucia ", " H. C. Lau"]}, {"title": " \"Information retrieval and spectrum based bug localization: Better together\"", "authors": ["T.-D. B. Le", " R. J. Oentaryo ", " D. Lo"]}, {"title": " \"Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization\"", "authors": ["X. Li", " W. Li", " Y. Zhang ", " L. Zhang"]}, {"title": " \"An empirical investigation of the relationship between spectra differences and regression faults\"", "authors": ["M. J. Harrold", " G. Rothermel", " K. Sayre", " R. Wu ", " L. Yi"]}, {"title": " \"A revisit of a theoretical analysis on spectrum-based fault localization\"", "authors": ["T. Y. Chen", " X. Xie", " F. C. Kuo ", " B. Xu"]}, {"title": " \"Are automated debugging techniques actually helping programmers?\"", "authors": ["C. Parnin ", " A. Orso"]}, {"title": " \"Revisit of automatic debugging via human focus-tracking analysis\"", "authors": ["X. Xie", " Z. Liu", " S. Song", " Z. Chen", " J. Xuan ", " B. Xu"]}, {"title": " \"automated debugging considered harmful considered harmful: A user study revisiting the usefulness of spectra-based fault localization techniques with professionals using real bugs from large systems\"", "authors": ["X. Xia", " L. Bao", " D. Lo ", " S. Li"]}, {"title": " \"Combining mutation and fault localization for automated program debugging\"", "authors": ["V. Debroy ", " W. E. Wong"]}]},
{"doi": "10.1109/ASE.2002.1115044", "title": "Automatic synthesis of distributed systems", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automata", "Algorithm design and analysis", "Circuit synthesis", "Specification languages", "Logic design", "Logic circuits", "Heuristic algorithms", "Reliability theory", "Distributed algorithms", "Protocols"], "abstract": "Summary form only given. Our research aims towards a new method of synthesis for distributed systems using Mazurkiewicz traces for specification and asynchronous automata for models. Mazurkiewicz trace languages are languages closed under an explicit independence relation between actions and therefore they are suitable to describe concurrent behaviour. The main objectives of this work are: (a) to develop a specification language based on a distributed version of temporal logic on traces that is able to express properties about the independence of actions; (b) to design a synthesis procedure based on improvements and heuristics of the algorithms for asynchronous automata; (c) to implement the new procedure efficiently (and so to turn the theory into a reliable tool that can be used in practice); (d) to apply it to case studies in areas like small distributed algorithms (e.g. mutual exclusion, communication protocols) and asynchronous circuit design. The idea used for the core of the synthesis procedure is that of unfoldings, a successful technique based on branching time partial order semantics. Promising preliminary results were obtained: we were able to automatically synthesize mutual exclusion algorithms from regular trace specifications.", "author": [{"name": "A. Stefanescu", "affiliation": "LFCS, University of Edinburgh, Edinburgh"}], "time": "2002", "citationCount": "1", "references": [{"title": " \"Using branching time temporal logic to synthesize synchronization skeletons\"", "authors": ["E. A. Emerson ", " E. M. Clarke"]}, {"title": " \"An improvement of McMillan's unfolding algorithm\"", "authors": ["J. Esparza", " S. R\u00f6mer ", " W. Vogler"]}, {"title": " \"Distributed versions of linear time temporal logic: A trace perspective\"", "authors": ["P.S. Thiagarajan ", " J.G. Henriksen"]}, {"title": " \"Notes on finite asynchronous automata\"", "authors": ["W. Zielonka"]}]},
{"doi": "10.1109/ASE.2019.00055", "title": "SCMiner: Localizing System-Level Concurrency Faults from Large System Call Traces", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Concurrent computing", "Production", "Principal component analysis", "Computer bugs", "Tools", "Debugging", "Instruments"], "abstract": "Localizing concurrency faults that occur in production is hard because, (1) detailed field data, such as user input, file content and interleaving schedule, may not be available to developers to reproduce the failure; (2) it is often impractical to assume the availability of multiple failing executions to localize the faults using existing techniques; (3) it is challenging to search for buggy locations in an application given limited runtime data; and, (4) concurrency failures at the system level often involve multiple processes or event handlers (e.g., software signals), which can not be handled by existing tools for diagnosing intra-process(thread-level) failures. To address these problems, we present SCMiner, a practical online bug diagnosis tool to help developers understand how a system-level concurrency fault happens based on the logs collected by the default system audit tools. SCMiner achieves online bug diagnosis to obviate the need for offline bug reproduction. SCMiner does not require code instrumentation on the production system or rely on the assumption of the availability of multiple failing executions. Specifically, after the system call traces are collected, SCMiner uses data mining and statistical anomaly detection techniques to identify the failure-inducing system call sequences. It then maps each abnormal sequence to specific application functions. We have conducted an empirical study on 19 real-world benchmarks. The results show that SCMiner is both effective and efficient at localizing system-level concurrency faults.", "author": [{"name": "Tarannum Shaila Zaman", "affiliation": "Department of Computer Science, University of Kentucky"}, {"name": "Xue Han", "affiliation": "Department of Computer Science, University of Kentucky"}, {"name": "Tingting Yu", "affiliation": "Department of Computer Science, University of Kentucky"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Interactive visualization of concurrents programs\"", "authors": ["R. Capuano"]}, {"title": " \"Odr: Output-deterministic replay for multicore debugging\"", "authors": ["G. Altekar ", " I. Stoica"]}, {"title": " \"Locating causes of program failures\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"A technique for enabling and supporting debugging of field failures\"", "authors": ["J. Clause ", " A. Orso"]}, {"title": " \"Cooperative crug isolation\"", "authors": ["A. V. Thakur", " R. Sen", " B. Liblit ", " S. Lu"]}, {"title": " \"Falcon: fault localization in concurrent programs\"", "authors": ["S. Park", " R. W. Vuduc ", " M. J. Harrold"]}, {"title": " \"Isolating failure-inducing thread schedules\"", "authors": ["J.-D. Choi ", " A. Zeller"]}, {"title": " \"Locating causes of program failures\"", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"A trace simplification technique for effective debugging of concurrent programs\"", "authors": ["N. Jalbert ", " K. Sen"]}, {"title": " \"LEAP: lightweight deterministic multi-processor replay of concurrent java programs\"", "authors": ["J. Huang", " P. Liu ", " C. Zhang"]}, {"title": " \"Pervasive detection of process races in deployed systems\"", "authors": ["O. Laadan", " N. Viennot", " C.-C. Tsai", " C. Blinn", " J. Yang ", " J. Nieh"]}, {"title": " \"Execution synthesis: A technique for automated software debugging\"", "authors": ["C. Zamfir ", " G. C"]}, {"title": " \"Cooperative crug isolation\"", "authors": ["A. Thakur", " R. Sen", " B. Liblit ", " S. Lu"]}, {"title": " \"Falcon: Fault localization in concurrent programs\"", "authors": ["S. Park", " R. W. Vuduc ", " M. J. Harrold"]}, {"title": " \"Concurrency bug localization using shared memory access pairs\"", "authors": ["W. Wang", " C. Wu", " P. Yew", " X. Yuan", " Z. Wang", " J. Li", " ."]}, {"title": " \"A unified approach for localizing non-deadlock concurrency bugs\"", "authors": ["S. Park", " R. W. Vuduc ", " M. J. Harrold"]}, {"title": " \"DESCRY: reproducing system-level concurrency failures\"", "authors": ["T. Yu", " T. S. Zaman ", " C. Wang"]}, {"title": " \"Simracer: An automated framework to support testing for process-level races\"", "authors": ["T. Yu", " W. Srisa-an ", " G. Rothermel"]}, {"title": " \"Racerx: Effective static detection of race conditions and deadlocks\"", "authors": ["D. Engler ", " K. Ashcraft"]}, {"title": " \"Effective static race detection for java\"", "authors": ["M. Naik", " A. Aiken ", " J. Whaley"]}, {"title": " \"Pervasive detection of process races in deployed systems\"", "authors": ["O. Laadan", " N. Viennot", " C.-C. Tsai", " C. Blinn", " J. Yang ", " J. Nieh"]}, {"title": " \"Principal component analysis\"", "authors": ["H. Abdi ", " L. J. Williams"]}, {"title": " \"A tutorial on principal component analysis\"", "authors": ["J. Shlens"]}, {"title": " \"Diagnosing network-wide traffic anomalies\"", "authors": ["A. Lakhina", " M. Crovella ", " C. Diot"]}, {"title": " \"Detecting large-scale system problems by mining console logs\"", "authors": ["W. Xu", " L. Huang", " A. Fox", " D. Patterson ", " M. I. Jordan"]}, {"title": " \"Learning from mistakes: A comprehensive study on real world concurrency bug characteristics\"", "authors": ["S. Lu", " S. Park", " E. Seo ", " Y. Zhou"]}, {"title": " \"Fast algorithms for mining association rules in large databases\"", "authors": ["R. Agrawal ", " R. Srikant"]}, {"title": " \"Mining maximal frequent itemsets: A java implementation of fpmax algorithm\"", "authors": ["B. Ziani ", " Y. Ouinten"]}, {"title": " \"Spmf: A java open-source pattern mining library\"", "authors": ["P. Fournier-Viger", " A. Gomariz", " T. Gueniche", " A. Soltani", " C.-W. Wu ", " V. S. Tseng"]}, {"title": " \"An industrial survey on contemporary aspects of software testing\"", "authors": ["A. Causevic", " D. Sundmark ", " S. Punnekkat"]}, {"title": " \"The category-partition method for specifying and generating fuctional tests\"", "authors": ["T. J. Ostr", " "]}, {"title": " \"JITProf: Pinpointing JIT-unfriendly JavaScript code\"", "authors": ["L. Gong", " M. Pradel ", " K. Sen"]}, {"title": " \"Toddler: Detecting performance problems via similar memory-access patterns\"", "authors": ["A. Nistor", " L. Song", " D. Marinov ", " S. Lu"]}, {"title": " \"Mining sequential patterns by pattern-growth: The prefixspan approach\"", "authors": ["J. Pei", " J. Han", " B. Mortazavi-Asl", " J. Wang", " H. Pinto", " Q. Chen", " ."]}, {"title": " \"Online system problem detection by mining patterns of console logs\"", "authors": ["W. Xu", " L. Huang", " A. Fox", " D. Patterson ", " M. Jordan"]}, {"title": " \"An integrated method for anomaly detection from massive system logs\"", "authors": ["Z. Liu", " T. Qin", " X. Guan", " H. Jiang ", " C. Wang"]}, {"title": " \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\"", "authors": ["M. Du", " F. Li", " G. Zheng ", " V. Srikumar"]}]},
{"doi": "10.1109/ASE.2002.1115045", "title": "Automatic inter-procedural test case generation", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Automatic testing", "Computer aided software engineering", "Software engineering", "Prototypes", "Logic programming", "Logic testing", "Flow graphs", "Software prototyping"], "abstract": "Summary form only given. Our work is based on a new approach of the automatic structural test case generation problem defined previously. It uses constraint logic programming (CLP) to try and solve the problem of generating test cases in order to attain the structural covering of a procedure. A test tool prototype, named Inka has been developed by Thales Systemes Aeroportes. Inka. is designed for automatic structural test case generation for C programs. The operating cycle of Inka is cut in three parts. Our work in the Inka project is to find a way to treat large programs. Our approach of this problem is to find an alternative between stubs and complete unfolding.", "author": [{"name": "K.-C. Griche", "affiliation": "Laboratoire LSR-IMAG, Saint Martin d'Heres, France"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00056", "title": "Root Cause Localization for Unreproducible Builds via Causality Analysis Over System Call Tracing", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Runtime", "Noise measurement", "Process control", "Monitoring", "Task analysis", "Software packages"], "abstract": "Localization of the root causes for unreproducible builds during software maintenance is an important yet challenging task, primarily due to limited runtime traces from build processes and high diversity of build environments. To address these challenges, in this paper, we propose RepTrace, a framework that leverages the uniform interfaces of system call tracing for monitoring executed build commands in diverse build environments and identifies the root causes for unreproducible builds by analyzing the system call traces of the executed build commands. Specifically, from the collected system call traces, RepTrace performs causality analysis to build a dependency graph starting from an inconsistent build artifact (across two builds) via two types of dependencies: read/write dependencies among processes and parent/child process dependencies, and searches the graph to find the processes that result in the inconsistencies. To address the challenges of massive noisy dependencies and uncertain parent/child dependencies, RepTrace includes two novel techniques: (1) using differential analysis on multiple builds to reduce the search space of read/write dependencies, and (2) computing similarity of the runtime values to filter out noisy parent/child process dependencies. The evaluation results of RepTrace over a set of real-world software packages show that RepTrace effectively finds not only the root cause commands responsible for the unreproducible builds, but also the files to patch for addressing the unreproducible issues. Among its Top-10 identified commands and files, RepTrace achieves high accuracy rate of 90.00% and 90.56% in identifying the root causes, respectively.", "author": [{"name": "Zhilei Ren", "affiliation": "Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province; School of Software, Dalian University of Technology"}, {"name": "Changlin Liu", "affiliation": "Department of Computer and Data Sciences, Case Western Reserve University"}, {"name": "Xusheng Xiao", "affiliation": "Department of Computer and Data Sciences, Case Western Reserve University"}, {"name": "He Jiang", "affiliation": "School of Software, Dalian University of Technology"}, {"name": "Tao Xie", "affiliation": "Department of Computer Science and Technology, Peking University"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Nix as HPC package management system\"", "authors": ["B. Bzeznik", " O. Henriot", " V. Reis", " O. Richard ", " L. Tavard"]}, {"title": " \"Automated localization for unreproducible builds\"", "authors": ["Z. Ren", " H. Jiang", " J. Xuan ", " Z. Yang"]}, {"title": " \"A large-scale empirical study of the relationship between build technology and build maintenance\"", "authors": ["S. McIntosh", " M. Nagappan", " B. Adams", " A. Mockus ", " A. E. Hassan"]}, {"title": " \"Morbig: A static parser for POSIX shell\"", "authors": ["Y. R\u00e9gis-Gianas", " N. Jeannerod ", " R. Treinen"]}, {"title": " \"NodeMerge: Template based efficient data reduction for big-data causality analysis\"", "authors": ["Y. Tang", " D. Li", " Z. Li", " M. Zhang", " K. Jee", " X. Xiao", " ."]}, {"title": " \"ReproZip: Using provenance to support computational reproducibility\"", "authors": ["F. Chirigati", " D. Shasha ", " J. Freire"]}, {"title": " \"Coz: Finding code that counts with causal profiling\"", "authors": ["C. Curtsinger ", " E. D. Berger"]}, {"title": " \"Behavior query discovery in system-generated temporal graphs\"", "authors": ["B. Zong", " X. Xiao", " Z. Li", " Z. Wu", " Z. Qian", " X. Yan", " ."]}, {"title": " \"Learning to rank relevant files for bug reports using domain knowledge\"", "authors": ["X. Ye", " R. Bunescu ", " C. Liu"]}, {"title": " \"The simple difference formula: An approach to teaching nonparametric correlation\"", "authors": ["D. S. Kerby"]}, {"title": " \"AIQL: Enabling efficient attack investigation from system monitoring data\"", "authors": ["P. Gao", " X. Xiao", " Z. Li", " F. Xu", " S. R. Kulkarni ", " P. Mittal"]}, {"title": " \"SAQL: A stream-based query system for realtime abnormal system behavior detection\"", "authors": ["P. Gao", " X. Xiao", " D. Li", " Z. Li", " K. Jee", " Z. Wu", " ."]}, {"title": " \"Detecting incorrect build rules\"", "authors": ["N. Licker ", " A. Rice"]}, {"title": " \"Falcon: A practical log-based analysis tool for distributed systems\"", "authors": ["F. Neves", " N. Machado ", " J. Pereira"]}, {"title": " \"Practical whole-system provenance capture\"", "authors": ["T. Pasquier", " X. Han", " M. Goldstein", " T. Moyer", " D. Eyers", " M. Seltzer", " ."]}, {"title": " \"Tracing software build processes to uncover license compliance inconsistencies\"", "authors": ["S. Van Der Burg", " E. Dolstra", " S. McIntosh", " J. Davies", " D. M. German ", " A. Hemel"]}, {"title": " \"Host-based intrusion detection system with system calls: Review and future trends\"", "authors": ["M. Liu", " Z. Xue", " X. Xu", " C. Zhong ", " J. Chen"]}, {"title": " \"CDE: Run any linux application on-demand without installation\"", "authors": ["P. J. Guo"]}, {"title": " \"A templating system to generate provenance\"", "authors": ["L. Moreau", " B. V. Batlajery", " T. D. Huynh", " D. Michaelides ", " H. Packer"]}, {"title": " \"Reproducibility in scientific computing\"", "authors": ["P. Ivie ", " D. Thain"]}]},
{"doi": "10.1109/ASE.2002.1115046", "title": "Semantic links and co-evolution in object-oriented software development", "publisher": "Proceedings 17th IEEE International Conference on Automated Software Engineering,", "keyword": ["Programming", "Object oriented modeling", "Application software", "Joining processes", "Unified modeling language", "Software engineering", "Logic design", "Software design", "Software maintenance", "Software reusability"], "abstract": "Summary form only given. This research focuses on the problem of the semantic linking and co-evolution of the different design diagrams and models of an object-oriented software application. The blueprint of an object-oriented software application consists mainly of models drawn in a modeling language. The state-of-the-art modeling language in object-oriented software development is the Unified Modeling Language (UML). Our research hypothesis is that using decidable fragments of first order logic to express the different UML diagrams enables the semantic linking of the different diagrams and models and enables the support of co-evolution which can be semi-automated, enhancing the reusability, maintainability and understandability of the design of the software application and of the software application in general. We propose to develop a formal framework to support the linking of the different diagrams and models within the software development life cycle (SDLC). The advantages of such a framework are: reasoning capabilities are provided, co-evolution is more guaranteed, adaptability of the design is improved and reuse and understandability of the software design increases. To support co-evolution of the design models in a semi-automatic way we investigate the query capabilities of these logic families.", "author": [{"name": "R. van der Straeten", "affiliation": "System and Software Engineering Laboratory SSEL, Vrije Universiteit Brussel, Brussels, Belgium"}], "time": "2002", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00057", "title": "Mutation Analysis for Coq", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Testing", "Syntactics", "Tools", "Computer bugs", "Libraries", "Software systems", "Computer languages"], "abstract": "Mutation analysis, which introduces artificial defects into software systems, is the basis of mutation testing, a technique widely applied to evaluate and enhance the quality of test suites. However, despite the deep analogy between tests and formal proofs, mutation analysis has seldom been considered in the context of deductive verification. We propose mutation proving, a technique for analyzing verification projects that use proof assistants. We implemented our technique for the Coq proof assistant in a tool dubbed mCoq. mCoq applies a set of mutation operators to Coq definitions of functions and datatypes, inspired by operators previously proposed for functional programming languages. mCoq then checks proofs of lemmas affected by operator application. To make our technique feasible in practice, we implemented several optimizations in mCoq such as parallel proof checking. We applied mCoq to several medium and large scale Coq projects, and recorded whether proofs passed or failed when applying different mutation operators. We then qualitatively analyzed the mutants, finding many instances of incomplete specifications. For our evaluation, we made several improvements to serialization of Coq files and even discovered a notable bug in Coq itself, all acknowledged by developers. We believe mCoq can be useful both to proof engineers for improving the quality of their verification projects and to researchers for evaluating proof engineering techniques.", "author": [{"name": "Ahmet Celik", "affiliation": "The University of Texas at Austin"}, {"name": "Karl Palmskog", "affiliation": "The University of Texas at Austin"}, {"name": "Marinela Parovic", "affiliation": "The University of Texas at Austin"}, {"name": "Emilio Jes\u00fas Gallego Arias", "affiliation": "MINES ParisTech"}, {"name": "Milos Gligoric", "affiliation": "The University of Texas at Austin"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Mutation testing advances: An analysis and survey\"", "authors": ["M. Papadakis", " M. Kintis", " J. Zhang", " Y. Jia", " Y. Le Traon ", " M. Harman"]}, {"title": " \"Formal verification of a realistic compiler\"", "authors": ["X. Leroy"]}, {"title": " \"seL4: Formal verification of an OS kernel\"", "authors": ["G. Klein", " K. Elphinstone", " G. Heiser", " J. Andronick", " D. Cock", " P. Derrin", " ."]}, {"title": " \"Planning for change in a formal verification of the Raft consensus protocol\"", "authors": ["D. Woos", " J. R. Wilcox", " S. Anton", " Z. Tatlock", " M. D. Ernst ", " T. Anderson"]}, {"title": " \"QED at large: A survey of engineering of formally verified software\"", "authors": ["T. Ringer", " K. Palmskog", " I. Sergey", " M. Gligoric ", " Z. Tatlock"]}, {"title": " \"An empirical study on the correctness of formally verified distributed systems\"", "authors": ["P. Fonseca", " K. Zhang", " X. Wang ", " A. Krishnamurthy"]}, {"title": " \"Finding and understanding bugs in C compilers\"", "authors": ["X. Yang", " Y. Chen", " E. Eide ", " J. Regehr"]}, {"title": " \"How verified (or tested) is my code? Falsification-driven verification and testing\"", "authors": ["A. Groce", " I. Ahmed", " C. Jensen", " P. E. McKenney ", " J. Holmes"]}, {"title": " \"Vacuity in testing\"", "authors": ["T. Ball ", " O. Kupferman"]}, {"title": " \"MuCheck: An extensible tool for mutation testing of Haskell programs\"", "authors": ["D. Le", " M. A. Alipour", " R. Gopinath ", " A. Groce"]}, {"title": " \"Empirical evaluation of test coverage for functional programs\"", "authors": ["Y. Cheng", " M. Wang", " Y. Xiong", " D. Hao ", " L. Zhang"]}, {"title": " \"iCoq: Regression proof selection for large-scale verification projects\"", "authors": ["A. Celik", " K. Palmskog ", " M. Gligoric"]}, {"title": " \"An extensible regular-expression-based tool for multi-language mutant generation\"", "authors": ["A. Groce", " J. Holmes", " D. Marinov", " A. Shi ", " L. Zhang"]}, {"title": " \"SerAPI: Machine-Friendly Data-Centric Serialization for Coq\"", "authors": ["E. J. Gallego Arias"]}, {"title": " \"Recursive functions of symbolic expressions and their computation by machine part I\"", "authors": ["J. McCarthy"]}, {"title": " \"The new Quickcheck for Isabelle: Random exhaustive and symbolic testing under one roof\"", "authors": ["L. Bulwahn"]}, {"title": " \"Nitpick: A counterexample generator for higher-order logic based on a relational model finder\"", "authors": ["J. C. Blanchette ", " T. Nipkow"]}, {"title": " \"Extending Nunchaku to dependent type theory\"", "authors": ["S. Cruanes ", " J. C. Blanchette"]}, {"title": " \"Foundational property-based testing\"", "authors": ["Z. Paraskevopoulou", " C. Hritcu", " M. D\u00e9n\u00e9s", " L. Lampropoulos ", " B. C. Pierce"]}, {"title": " \"The Cogent case for property-based testing\"", "authors": ["Z. Chen", " L. O\u2019Connor", " G. Keller", " G. Klein ", " G. Heiser"]}, {"title": " \"Automated theory exploration for interactive theorem proving\"", "authors": ["M. Johansson"]}, {"title": " \"A tactic language for the system Coq\"", "authors": ["D. Delahaye"]}, {"title": " \"jsCoq: Towards hybrid theorem proving interfaces\"", "authors": ["E. J. Gallego Arias", " B. Pin ", " P. Jouvelot"]}, {"title": " \"Hints on test data selection: Help for the practicing programmer\"", "authors": ["R. A. DeMillo", " R. J. Lipton ", " F. G. Sayward"]}, {"title": " \"Theoretical and empirical studies on using program mutation to test the functional correctness of programs\"", "authors": ["T. A. Budd", " R. A. DeMillo", " R. J. Lipton ", " F. G. Sayward"]}, {"title": " \"An analysis and survey of the development of mutation testing\"", "authors": ["Y. Jia ", " M. Harman"]}, {"title": " \"Are mutants a valid substitute for real faults in software testing?\"", "authors": ["R. Just", " D. Jalali", " L. Inozemtseva", " M. D. Ernst", " R. Holmes ", " G. Fraser"]}, {"title": " \"Are mutation scores correlated with real fault detection?: A large scale empirical study on the relationship between mutants and real faults\"", "authors": ["M. Papadakis", " D. Shin", " S. Yoo ", " D.-H. Bae"]}, {"title": " \"The Major mutation framework: Efficient and scalable mutation analysis for Java\"", "authors": ["R. Just"]}, {"title": " \"Efficient mutation analysis by propagating and partitioning infected execution states\"", "authors": ["R. Just", " M. D. Ernst ", " G. Fraser"]}, {"title": " \"Mutation reduction strategies considered harmful\"", "authors": ["R. Gopinath", " I. Ahmed", " M. A. Alipour", " C. Jensen ", " A. Groce"]}, {"title": " \"Predictive mutation testing\"", "authors": ["J. Zhang", " L. Zhang", " M. Harman", " D. Hao", " Y. Jia ", " L. Zhang"]}, {"title": " \"Topsy-Turvy: A smarter and faster parallelization of mutation analysis\"", "authors": ["R. Gopinath", " C. Jensen ", " A. Groce"]}, {"title": " \"Faster mutation analysis via equivalence modulo states\"", "authors": ["B. Wang", " Y. Xiong", " Y. Shi", " L. Zhang ", " D. Hao"]}, {"title": " \"Speeding up mutation testing via regression test selection: An extensive study\"", "authors": ["L. Chen ", " L. Zhang"]}, {"title": " \"piCoq: Parallel regression proving for large-scale verification projects\"", "authors": ["K. Palmskog", " A. Celik ", " M. Gligoric"]}, {"title": " \"Constructing subtle faults using higher order mutation testing\"", "authors": ["Y. Jia ", " M. Harman"]}, {"title": " \"An introduction to small scale reflection in Coq\"", "authors": ["G. Gonthier ", " A. Mahboubi"]}, {"title": " \"Asynchronous processing of Coq documents: From the kernel up to the user interface\"", "authors": ["B. Barras", " C. Tankink ", " E. Tassi"]}, {"title": " \"The Lean theorem prover (system description)\"", "authors": ["L. de Moura", " S. Kong", " J. Avigad", " F. van Doorn ", " J. von Raumer"]}, {"title": " \"Mitigating the effects of equivalent mutants with mutant classification strategies\"", "authors": ["M. Papadakis", " M. Delamaro ", " Y. Le Traon"]}, {"title": " \"Elaboration in dependent type theory\"", "authors": ["L. de Moura", " J. Avigad", " S. Kong ", " C. Roux"]}, {"title": " \"FitSpec: Refining property sets for functional testing\"", "authors": ["R. Braquehais ", " C. Runciman"]}, {"title": " \"Measuring coverage of Prolog programs using mutation testing\"", "authors": ["A. Efremidis", " J. Schmidt", " S. Krings ", " P. Korner"]}, {"title": " \"Random testing in Isabelle/HOL\"", "authors": ["S. Berghofer ", " T. Nipkow"]}]},
{"doi": "10.1109/ASE.2019.00058", "title": "Verifying Arithmetic in Cryptographic C Programs", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Reactive power", "Tools", "Computer bugs", "Elliptic curve cryptography", "NIST"], "abstract": "Cryptographic primitives are ubiquitous for modern security. The correctness of their implementations is crucial to resist malicious attacks. Typical arithmetic computation of these C programs contains large numbers of non-linear operations, hence is challenging existing automatic C verification tools. We present an automated approach to verify cryptographic C programs. Our approach successfully verifies C implementations of various arithmetic operations used in NIST P-224, P-256, P-521 and Curve25519 in OpenSSL. During verification, we expose a bug and a few anomalies that have been existing for a long time. They have been reported to and confirmed by the OpenSSL community. Our results establish the functional correctness of these C implementations for the first time.", "author": [{"name": "Jiaxiang Liu", "affiliation": "College of Computer Science and Software Engineering, Shenzhen University"}, {"name": "Xiaomu Shi", "affiliation": "College of Computer Science and Software Engineering, Shenzhen University"}, {"name": "Ming-Hsien Tsai", "affiliation": "Academia Sinica, Institute of Information Science"}, {"name": "Bow-Yaw Wang", "affiliation": "Academia Sinica, Institute of Information Science"}, {"name": "Bo-Yin Yang", "affiliation": "Academia Sinica, Institute of Information Science"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Practical realisation and elimination of an ECC-related software bug attack\"", "authors": ["B. B. Brumley", " M. Barbosa", " D. Page ", " F. Vercauteren"]}, {"title": " \"Elliptic curve cryptosystems\"", "authors": ["N. Koblitz"]}, {"title": " \"Use of elliptic curves in cryptography\"", "authors": ["V. S. Miller"]}, {"title": " \"Curve25519: New Diffie-Hellman speed records\"", "authors": ["D. J. Bernstein"]}, {"title": " \"Modular multiplication without trial division\"", "authors": ["P. L. Montgomery"]}, {"title": " \"CPAchecker: A tool for configurable software verification\"", "authors": ["D. Beyer ", " M. E. Keremoglu"]}, {"title": " \"PeSCo: Predicting sequential combinations of verifiers - (competition contribution)\"", "authors": ["C. Richter ", " H. Wehrheim"]}, {"title": " \"Ultimate Automizer with an on-demand construction of Floyd-Hoare automata - (competition contribution)\"", "authors": ["M. Heizmann", " Y. Chen", " D. Dietsch", " M. Greitschus", " A. Nutz", " B. Musa", " ."]}, {"title": " \"SMACK: decoupling source language details from verifier implementations\"", "authors": ["Z. Rakamaric ", " M. Emmi"]}, {"title": " \"Verifying arithmetic assembly programs in cryptographic primitives (invited talk)\"", "authors": ["A. Polyakov", " M. Tsai", " B. Wang ", " B. Yang"]}, {"title": " \"Separation logic: A logic for shared mutable data structures\"", "authors": ["J. C. Reynolds"]}, {"title": " \"Speeding the Pollard and elliptic curve methods of factorization\"", "authors": ["P. L. Montgomery"]}, {"title": " \"2LS for program analysis - (competition contribution)\"", "authors": ["P. Schrammel ", " D. Kroening"]}, {"title": " \"CBMC - C bounded model checker - (competition contribution)\"", "authors": ["D. Kroening ", " M. Tautschnig"]}, {"title": " \"ESBMC v6.0: Verifying C programs using k-induction and invariant inference - (competition contribution)\"", "authors": ["M. Y. R. Gadelha", " F. R. Monteiro", " L. C. Cordeiro ", " D. A. Nicole"]}, {"title": " \"The software model checker BLAST\"", "authors": ["D. Beyer", " T. A. Henzinger", " R. Jhala ", " R. Majumdar"]}, {"title": " \"VeriAbs: Verification by abstraction (competition contribution)\"", "authors": ["B. Chimdyalwar", " P. Darke", " A. Chauhan", " P. Shah", " S. Kumar ", " R. Venkatesh"]}, {"title": " \"Automatic verification of C and Java programs: SV-COMP 2019\"", "authors": ["D. Beyer"]}, {"title": " \"Boogie: A modular reusable verifier for object-oriented programs\"", "authors": ["M. Barnett", " B. E. Chang", " R. DeLine", " B. Jacobs ", " K. R. M. Leino"]}, {"title": " \"Frama-C: A software analysis perspective\"", "authors": ["F. Kirchner", " N. Kosmatov", " V. Prevosto", " J. Signoles ", " B. Yakobowski"]}, {"title": " \"Automated verification of real-world cryptographic implementations\"", "authors": ["A. Tomb"]}, {"title": " \"HACL*: A verified modern cryptographic library\"", "authors": ["J. K. Zinzindohoue", " K. Bhargavan", " J. Protzenko ", " B. Beur-douche"]}, {"title": " \"Vale: Verifying high-performance cryptographic assembly code\"", "authors": ["B. Bond", " C. Hawblitzel", " M. Kapritsos", " K. R. M. Leino", " J. R. Lorch", " B. Parno", " ."]}, {"title": " \"Simple high-level code for cryptographic arithmetic - with proofs without compromises\"", "authors": ["A. Erbsen", " J. Philipoom", " J. Gross", " R. Sloan ", " A. Chlipala"]}, {"title": " \"On construction of a library of formally verified low-level arithmetic functions\"", "authors": ["R. Affeldt"]}, {"title": " \"Certifying assembly with formal security proofs: The case of BBS\"", "authors": ["R. Affeldt", " D. Nowak ", " K. Yamada"]}, {"title": " \"An approach to formal verification of arithmetic functions in assembly\"", "authors": ["R. Affeldt ", " N. Marti"]}, {"title": " \"Hoare logic for realistically modelled machine code\"", "authors": ["M. O. Myreen ", " M. J. C. Gordon"]}, {"title": " \"Proof pearl: A verified bignum implementation in x86-64 machine code\"", "authors": ["M. O. Myreen ", " G. Curello"]}, {"title": " \"Verification of a cryptographic primitive: SHA-256\"", "authors": ["A. W. Appel"]}, {"title": " \"Verified correctness and security of OpenSSL HMAC\"", "authors": ["L. Beringer", " A. Petcher", " K. Q. Ye ", " A. W. Appel"]}, {"title": " \"Verified correctness and security of mbedTLS HMAC-DRBG\"", "authors": ["K. Q. Ye", " M. Green", " N. Sanguansin", " L. Beringer", " A. Petcher ", " A. W. Appel"]}, {"title": " \"Verifying Curve25519 software\"", "authors": ["Y.-F. Chen", " C.-H. Hsu", " H.-H. Lin", " P. Schwabe", " M.-H. Tsai", " B.Y. Wang", " ."]}, {"title": " \"Certified verification of algebraic properties on low-level mathematical constructs in cryptographic programs\"", "authors": ["M.-H. Tsai", " B.-Y. Wang ", " B.-Y. Yang"]}]},
{"doi": "10.1109/ASE.2019.00059", "title": "Model Checking Embedded Control Software using OS-in-the-Loop CEGAR", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Task analysis", "Multitasking", "Kernel", "Model checking", "Embedded software"], "abstract": "Verification of multitasking embedded software requires taking into account its underlying operating system w.r.t. its scheduling policy and handling of task priorities in order to achieve a higher degree of accuracy. However, such comprehensive verification of multitasking embedded software together with its underlying operating system is very costly and impractical. To reduce the verification cost while achieving the desired accuracy, we propose a variant of CEGAR, named OiL-CEGAR (OS-in-the-Loop Counterexample-Guided Abstraction Refinement), where a composition of a formal OS model and an abstracted application program is used for comprehensive verification and is successively refined using the counterexamples generated from the composition model. The refinement process utilizes the scheduling information in the counterexample, which acts as a mini-OS to check the executability of the counterexample trace on the concrete program. Our experiments using a prototype implementation of OiL-CEGAR show that OiL-CEGAR greatly improves the accuracy and efficiency of property checking in this domain. It automatically removed all false alarms and accomplished property checking within an average of 476 seconds over a set of multitasking programs, whereas model checking using existing approaches over the same set of programs either showed an accuracy of under 11.1% or was unable to finish the verification due to timeout.", "author": [{"name": "Dongwoo Kim", "affiliation": "School of Computer Science and Engineering, Kyungpook National University, Daegu, South Korea"}, {"name": "Yunja Choi", "affiliation": "School of Computer Science and Engineering, Kyungpook National University, Daegu, South Korea"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Behavioral consistency of c and verilog programs using bounded model checking\"", "authors": ["E. Clarke", " D. Kroening ", " K. Yorav"]}, {"title": " \"Bounded model checking of concurrent programs\"", "authors": ["I. Rabinovitz ", " O. Grumberg"]}, {"title": " \"Bounded model checking of multi-threaded c programs via lazy sequentialization\"", "authors": ["O. Inverso", " E. Tomasco", " B. Fischer", " S. La Torre ", " G. Parlato"]}, {"title": " \"Scheduling constraint based abstraction refinement for multi-threaded program verification\"", "authors": ["L. Yin", " W. Dong", " W. Liu ", " J. Wang"]}, {"title": " \"Toward compositional verification of interruptible OS kernels and device drivers\"", "authors": ["H. Chen", " X. N. Wu", " Z. Shao", " J. Lockerman ", " R. Gu"]}, {"title": " \"Model checking trampoline OS: a case study on safety analysis for automotive software\"", "authors": ["Y. Choi"]}, {"title": " \"Automatic verification of application-tailored OSEK kernels\"", "authors": ["H.-P. Deifel", " M. G\u00f6ttlinger", " S. Milius", " L. Schr\u00f6der", " C. Dietrich ", " D. L\u00f6hmann"]}, {"title": " \"Modeling and verifying the code-level OSEK/VDX operating system with CSP\"", "authors": ["Y. Huang", " Y. Zhao", " L. Zhu", " Q. Li", " H. Zhu ", " J. Shi"]}, {"title": " \"Counterexample-guided abstraction refinement\"", "authors": ["E. Clarke", " O. Grumberg", " S. Jha", " Y. Lu ", " H. Veith"]}, {"title": " \"Lazy abstraction\"", "authors": ["T. A. Henzinger", " R. Jhala", " R. Majumdar ", " G. Sutre"]}, {"title": " \"Nusmv: A new symbolic model verifier\"", "authors": ["A. Cimatti", " E. Clarke", " F. Giunchiglia ", " M. Roveri"]}, {"title": " \"A hybrid testing environment between execution test and model checking for IoT system\"", "authors": ["T. Kuroiwa", " Y. Aoyama ", " N. Kushiro"]}, {"title": " \"Lazy abstraction with interpolants\"", "authors": ["K. L. McMillan"]}, {"title": " \"Interpolation guided compositional verification (t)\"", "authors": ["S.-W. Lin", " J. Sun", " T. K. Nguyen", " Y. Liu ", " J. S. Dong"]}, {"title": " \"Refinement of trace abstraction\"", "authors": ["M. Heizmann", " J. Hoenicke ", " A. Podelski"]}, {"title": " \"Verification of concurrent programs using trace abstraction refinement\"", "authors": ["F. Cassez ", " F. Ziegler"]}, {"title": " \"The software model checker Blast: Applications to software engineering\"", "authors": ["D. Beyer", " T. A. Henzinger", " R. Jhala ", " R. Majumdar"]}, {"title": " \"Thorough static analysis of device drivers\"", "authors": ["T. Ball", " E. Bounimova", " B. Cook", " V. Levin", " J. Lichtenberg", " C. McGarvey", " ."]}, {"title": " \"seL4: Formal verification of an OS kernel\"", "authors": ["G. Klein", " K. Elphinstone", " G. Heiser", " J. Andronick", " D. Cock", " P. Derrin", " D. Elkaduwe", " K. Engelhardt", " R. Kolanski", " M. Norrish ."]}, {"title": " \"Verifying OSEK/VDX automotive applications: A spin-based model checking approach\"", "authors": ["H. Zhang", " G. Li", " Z. Cheng ", " J. Xue"]}, {"title": " \"A configurable V&V framework using formal behavioral patterns for OSEK/VDX operating systems\"", "authors": ["Y. Choi"]}, {"title": " \"Uppaal\u2014a tool suite for automatic verification of real-time systems\"", "authors": ["J. Bengtsson", " K. Larsen", " F. Larsson", " P. Pettersson ", " W. Yi"]}, {"title": " \"Toward a unified executable formal automobile OS kernel and its applications\"", "authors": ["X. Zhu", " M. Zhang", " J. Guo", " X. Li", " H. Zhu ", " J. He"]}, {"title": " \"The model checker SPIN\"", "authors": ["G. J. Holzmann"]}, {"title": " \"Using partial orders for the efficient verification of deadlock freedom and safety properties\"", "authors": ["P. Godefroid ", " P. Wolper"]}, {"title": " \"A two-step approach for pattern-based API-call constraint checking\"", "authors": ["D. Kim ", " Y. Choi"]}, {"title": " \"Constraint-based test generation for automotive operating systems\"", "authors": ["Y. Choi ", " T. Byun"]}, {"title": " \"Control and data abstraction: The cornerstones of practical formal verification\"", "authors": ["Y. Kesten ", " A. Pnueli"]}, {"title": " \"A value analysis for c programs\"", "authors": ["G. Canet", " P. Cuoq ", " B. Monate"]}, {"title": " \"Data race detection for interrupt-driven programs via bounded model checking\"", "authors": ["X. Wu", " Y. Wen", " L. Chen", " W. Dong ", " J. Wang"]}, {"title": " \"Formal verification of software for the Contiki operating system considering interrupts\"", "authors": ["T. V\u00f6rtler", " B. H\u00f6ckner", " P. Hofstedt ", " T. Klotz"]}, {"title": " \"Yes! you can use your model checker to verify OSEK/VDX applications\"", "authors": ["H. Zhang", " T. Aoki ", " Y. Chiba"]}, {"title": " \"Modeling OSEK/VDX OS requirements in C\"", "authors": ["Y. Chung", " D. Kim ", " Y. Choi"]}, {"title": " \"LazyCSeq: a lazy sequentialization tool for C\"", "authors": ["O. Inverso", " E. Tomasco", " B. Fischer", " S. La Torre ", " G. Parlato"]}, {"title": " \"Concurrent program verification with lazy sequentialization and interval analysis\"", "authors": ["T. L. Nguyen", " B. Fischer", " S. La Torre ", " G. Parlato"]}, {"title": " \"Threader: a verifier for multi-threaded programs\"", "authors": ["C. Popeea ", " A. Rybalchenko"]}, {"title": " \"Shared memory consistency models: A tutorial\"", "authors": ["S. V. Adve ", " K. Gharachorloo"]}, {"title": " \"Formal verification of multitasking applications based on timed automata model\"", "authors": ["L. Waszniowski ", " Z. Hanz\u00e1lek"]}, {"title": " \"Core minimization in SAT-based abstraction\"", "authors": ["A. Belov", " H. Chen", " A. Mishchenko ", " J. Marques-Silva"]}]},
{"doi": "10.1109/ASE.2019.00060", "title": "Get Rid of Inline Assembly through Verification-Oriented Lifting", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Registers", "Software", "Semantics", "Optimization", "Encoding", "Syntactics", "Tools"], "abstract": "Formal methods for software development have made great strides in the last two decades, to the point that their application in safety-critical embedded software is an undeniable success. Their extension to non-critical software is one of the notable forthcoming challenges. For example, C programmers regularly use inline assembly for low-level optimizations and system primitives. This usually results in rendering state-of-the-art formal analyzers developed for C ineffective. We thus propose TINA, the first automated, generic, verification-friendly and trustworthy lifting technique turning inline assembly into semantically equivalent C code amenable to verification, in order to take advantage of existing C analyzers. Extensive experiments on real-world code (including GMP and ffmpeg) show the feasibility and benefits of TINA.", "author": [{"name": "Fr\u00e9d\u00e9ric Recoules", "affiliation": "Paris-Saclay, Paris, France"}, {"name": "S\u00e9bastien Bardin", "affiliation": "Paris-Saclay, Paris, France"}, {"name": "Richard Bonichon", "affiliation": "CEA LIST, Paris-Saclay, France"}, {"name": "Laurent Mounier", "affiliation": "VERIMAG, Univ. Grenoble Alpes, Grenoble, France"}, {"name": "Marie-Laure Potet", "affiliation": "VERIMAG, Univ. Grenoble Alpes, Grenoble, France"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Frama-c: A software analysis perspective\"", "authors": ["F. Kirchner", " N. Kosmatov", " V. Prevosto", " J. Signoles ", " B. Yakobowski"]}, {"title": " \"Astr\u00e9e: From research to industry\"", "authors": ["D. Delmas ", " J. Souyris"]}, {"title": " \"SAGE: whitebox fuzzing for security testing\"", "authors": ["P. Godefroid", " M. Y. Levin ", " D. A. Molnar"]}, {"title": " \"KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs in\"", "authors": ["C. Cadar", " D. Dunbar ", " D. R. Engler"]}, {"title": " \"From categorical logic to facebook engineering in\"", "authors": ["P W O\u2019Hearn"]}, {"title": " \"The static driver verifier research platform\"", "authors": ["T Ball", " E. Bounimova", " V Levin", " R. Kumar ", " J. Lichtenberg"]}, {"title": " \"An analysis of x86-64 inline assembly in c programs\"", "authors": ["M. Rigger", " S. Marr", " S. Kell", " D. Leopoldseder ", " H. M\u00d6ssenb\u00d6ck"]}, {"title": " \"Symbolic Execution and Program Testing\"", "authors": ["J. C. Kng"]}, {"title": " \"Symbolic execution for software testing: three decades later\"", "authors": ["C. Cadar ", " K. Sen"]}, {"title": " \"Assigning meanings to programs\"", "authors": ["R. W. Floyd"]}, {"title": " \"An axiomatic basis for computer programming\"", "authors": ["C. A. R. Hoare"]}, {"title": " \"Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints in\"", "authors": ["P. Cousot ", " R. Cousot"]}, {"title": " \"Inception: System-wide security testing of real-world embedded systems software\"", "authors": ["N. Corteggiani", " G. Camurati ", " A. Francillon"]}, {"title": " \"Assembly to High-Level Language Translation\"", "authors": ["C. Cifuentes", " D. Simon ", " A. Fraboulet"]}, {"title": " \"Interprocedural data flow decompilation\"", "authors": ["C. Cifuentes"]}, {"title": " \"Decompilation of Binary Programs\"", "authors": ["C. Cifuentes ", " K. J. Gough"]}, {"title": " \"Evolving exact decompilation\"", "authors": ["E. Schulte", " J. Ruchti", " M. Noonan", " D. Ciarletta ", " A. Logino"]}, {"title": " \"Native x86 decompilation using semantics-preserving structural analysis and iterative control-flow structuring\"", "authors": ["D. Brumley", " J. Lee", " E. J. Schwartz ", " M. Woo"]}, {"title": " \"The BINCOA framework for binary code analysis\"", "authors": ["S. Bardin", " P. Herrmann", " J. Leroux", " O. Ly", " R. Tabary ", " A. Vincent"]}, {"title": " \"Testing intermediate representations for binary analysis\"", "authors": ["S. Kim", " M. Faerevaag", " M. Jung", " S. Jung", " D. Oh", " J. Lee", " ."]}, {"title": " \"Translation validation for an optimizing compiler\"", "authors": ["G. C. Necula"]}, {"title": " \"BINSEC/SE: A dynamic symbolic execution toolkit for binary-level analysis\"", "authors": ["R. David", " S. Bardin", " T. D. Ta", " L. Mounier", " J. Feist", " M. Potet", " ."]}, {"title": " \"Satisfiability modulo theories\"", "authors": ["C. Barrett ", " C. Tinelli"]}, {"title": " \"Abstract interpretation: past present and future\"", "authors": ["P. Cousot ", " R. Cousot"]}, {"title": " \"Formal verification of klibc with the WP frama-c plug-in\"", "authors": ["N. Carvalho", " C. da Silva Sousa", " J. S. Pinto ", " A. Tomb"]}, {"title": " \"Some assembly required \u2013 program analysis of embedded system code\"", "authors": ["A. Fehnker", " R. Huuck", " F. Rauch ", " S. Seefried"]}, {"title": " \"Machine-code verification for multiple architectures \u2013 an application of decompilation into logic\"", "authors": ["M. O. Myreen", " M. J. C. Gordon ", " K. Slind"]}, {"title": " \"Tie: Principled reverse engineering of types in binary programs\"", "authors": ["J. Lee", " T. Avgerinos ", " D. Biumley"]}, {"title": " \"From minx to minc: Semantics-driven decompilation of recursive datatypes\"", "authors": ["E. Robbins", " A. King ", " T. Schrijvers"]}, {"title": " \"An in-depth analysis of disassembly on full-scale x86/x64 binaries\"", "authors": ["D. Andriesse", " X. Chen", " V. van der Veen", " A. Slowinska ", " H. Bos"]}, {"title": " \"Binary code is not easy\"", "authors": ["X. Meng ", " B. P. Miller"]}, {"title": " \"WYSINWYX: what you see is not what you execute\"", "authors": ["G. Balakrishnan ", " T. W. Reps"]}, {"title": " \"Refinement-Based CFG Reconstruction from Unstructured Programs\"", "authors": ["S. Bardin", " P. Herrmann ", " F. V\u00e9drine"]}, {"title": " \"Altemating Control Flow Reconstiuction\"", "authors": ["J. Kinder ", " D. Kravchenko"]}, {"title": " \"Precise control flow reconstruction using boolean logic\"", "authors": ["T. Reinbacher ", " J. Brauer"]}, {"title": " \"Precise Static Analysis of Binaries by Extracting Relational Information\"", "authors": ["A. Sepp", " B. Mihaila ", " A. Simon"]}, {"title": " \"Trustworthy specifications of ARMO v8-A and v8-M system level architecture\"", "authors": ["A. Reid"]}, {"title": " \"From system F to typed assembly language\"", "authors": ["J. G. Morrisett", " D. Walker", " K. Crary ", " N. Glew"]}, {"title": " \"Funtal: Reasonably mixing a functional language with assembly\"", "authors": ["D. Patterson", " J. Perconti", " C. Dimoulas ", " A. Ahmed"]}, {"title": " \"Translation validation for a verified OS kernel\"", "authors": ["T. A. L. Sewell", " M. O. Myreen ", " G. Klein"]}, {"title": " \"Certification of compiled assembly code by invariant translation\"", "authors": ["X. Rival"]}, {"title": " \"Formal verification of coalescing graph-coloring register allocation\"", "authors": ["S. Blazy", " B. Robillard ", " A. W. Appel"]}, {"title": " \"Simple relational correctness proofs for static analyses and program transformations\"", "authors": ["N. Benton"]}, {"title": " \"Shadow of a doubt: testing for divergences between software versions\"", "authors": ["H. Palikareva", " T. Kuchta ", " C. Cadar"]}]},
{"doi": "10.1109/ASE.2019.00061", "title": "CodeKernel: A Graph Kernel Based Approach to the Selection of API Usage Examples", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Kernel", "Cloning", "Java", "Programming", "Libraries", "Indexes", "Redundancy"], "abstract": "Developers often want to find out how to use a certain API (e.g., FileReader.read in JDK library). API usage examples are very helpful in this regard. Over the years, many automated methods have been proposed to generate code examples by clustering and summarizing relevant code snippets extracted from a code corpus. These approaches simplify source code as method invocation sequences or feature vectors. Such simplifications only model partial aspects of the code and tend to yield inaccurate examples. We propose CodeKernel, a graph kernel based approach to the selection of API usage examples. Instead of approximating source code as method invocation sequences or feature vectors, CodeKernel represents source code as object usage graphs. Then, it clusters graphs by embedding them into a continuous space using a graph kernel. Finally, it outputs code examples by selecting a representative graph from each cluster using designed ranking metrics. Our empirical evaluation shows that CodeKernel selects more accurate code examples than the related work (MUSE and eXoaDocs). A user study involving 25 developers in a multinational company also confirms the usefulness of CodeKernel in selecting API usage examples.", "author": [{"name": "Xiaodong Gu", "affiliation": "Hong Kong University of Science and Technology, Hong Kong"}, {"name": "Hongyu Zhang", "affiliation": "The University of Newcastle, Australia"}, {"name": "Sunghun Kim", "affiliation": "Hong Kong University of Science and Technology, Hong Kong"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Mining idioms from source code\"", "authors": ["M. Allamanis ", " C. Sutton"]}, {"title": " \"Shortest-path kernels on graphs\"", "authors": ["K. M. Borgwardt ", " H.-P. Kriegel"]}, {"title": " \"Protein function prediction via graph kernels\"", "authors": ["K. M. Borgwardt", " C. S. Ong", " S. Sch\u00f6nauer", " S. Vishwanathan", " A. J. Smola ", " H.-P. Kriegel"]}, {"title": " \"Learning from examples to improve code completion systems\"", "authors": ["M. Bruch", " M. Monperrus ", " M. Mezini"]}, {"title": " \"Synthesizing API usage examples\"", "authors": ["R. P. Buse ", " W. Weimer"]}, {"title": " \"Enzyme family classification by support vector machines\"", "authors": ["C. Cai", " L. Han", " Z. Ji ", " Y. Chen"]}, {"title": " \"Document clustering using locality preserving indexing\"", "authors": ["D. Cai", " X. He ", " J. Han"]}, {"title": " \"Parameter-free probabilistic api mining at github scale\"", "authors": ["J. Fowkes ", " C. Sutton"]}, {"title": " \"A survey of kernels for structured data\"", "authors": ["T. G\u00e4rtner"]}, {"title": " \"Mining unit test cases to synthesize api usage examples\"", "authors": ["M. Ghafari", " K. Rubinov ", " M. M. Pourhashem K"]}, {"title": " \"Deep code search\"", "authors": ["X. Gu", " H. Zhang ", " S. Kim"]}, {"title": " \"Deep API learning\"", "authors": ["X. Gu", " H. Zhang", " D. Zhang ", " S. Kim"]}, {"title": " \"The influence of the sigmoid function parameters on the speed of backpropagation learning\"", "authors": ["J. Han ", " C. Moraga"]}, {"title": " \"Index-based code clone detection: incremental distributed scalable\"", "authors": ["B. Hummel", " E. Juergens", " L. Heinemann ", " M. Conradt"]}, {"title": " \"Spotting working code examples\"", "authors": ["I. Keivanloo", " J. Rilling ", " Y. Zou"]}, {"title": " \"Towards an intelligent code search engine\"", "authors": ["J. Kim", " S. Lee", " S.-w. Hwang ", " S. Kim"]}, {"title": " \"Crash graphs: An aggregated view of multiple crashes to improve crash triage\"", "authors": ["S. Kim", " T. Zimmermann ", " N. Nagappan"]}, {"title": " \"Semantic clustering: Identifying topics in source code\"", "authors": ["A. Kuhn", " S. Ducasse ", " T. G\u00edrba"]}, {"title": " \"Semi-supervised graph clustering: a kernel approach\"", "authors": ["B. Kulis", " S. Basu", " I. Dhillon ", " R. Mooney"]}, {"title": " \"Codehow: Effective code search based on API understanding and extended boolean model\"", "authors": ["F. Lv", " H. Zhang", " J. Lou", " S. Wang", " D. Zhang ", " J. Zhao"]}, {"title": " \"Efficient clustering of high-dimensional data sets with application to reference matching\"", "authors": ["A. McCallum", " K. Nigam ", " L. H. Ungar"]}, {"title": " \"How can I use this method?\"", "authors": ["L. Moreno", " G. Bavota", " M. Di Penta", " R. Oliveto ", " A. Marcus"]}, {"title": " \"Contextual weisfeiler-lehman graph kernel for malware detection\"", "authors": ["A. Narayanan", " G. Meng", " L. Yang", " J. Liu ", " L. Chen"]}, {"title": " \"Api code recommendation using statistical learning from fine-grained changes\"", "authors": ["A. T. Nguyen", " M. Hilton", " M. Codoban", " H. A. Nguyen", " L. Mast", " E. Rademacher", " ."]}, {"title": " \"A deep neural network language model with contexts for source code\"", "authors": ["A. T. Nguyen", " T. D. Nguyen", " H. D. Phan ", " T. N. Nguyen"]}, {"title": " \"Graph-based statistical language model for code\"", "authors": ["A. T. Nguyen ", " T. N. Nguyen"]}, {"title": " \"Graph-based pattern-oriented context-sensitive source code completion\"", "authors": ["A. T. Nguyen", " T. T. Nguyen", " H. A. Nguyen", " A. Tamrawi", " H. V. Nguyen", " J. Al-Kofahi", " ."]}, {"title": " \"Accurate and efficient structural characteristic feature extraction for clone detection\"", "authors": ["H. A. Nguyen", " T. T. Nguyen", " N. H. Pham", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"Focus: A recommender system for mining API function calls and usage patterns\"", "authors": ["P. Nguyen", " J. Di Rocco", " D. Ruscio", " L. Ochoa", " T. Degueule ", " M. Di Penta"]}, {"title": " \"Graph-based mining of multiple object usage patterns\"", "authors": ["T. T. Nguyen", " H. A. Nguyen", " N. H. Pham", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"Learning API usages from bytecode: A statistical approach\"", "authors": ["T. T. Nguyen", " H. V. Pham", " P. M. Vu ", " T. T. Nguyen"]}, {"title": " \"Learning to rank code examples for code search engines\"", "authors": ["H. Niu", " I. Keivanloo ", " Y. Zou"]}, {"title": " \"A simple and fast algorithm for k-medoids clustering\"", "authors": ["H.-S. Park ", " C.-H. Jun"]}, {"title": " \"Autoalbum: Clustering digital photographs using probabilistic model merging\"", "authors": ["J. C. Platt"]}, {"title": " \"An introduction to hidden markov models\"", "authors": ["L. R. Rabiner ", " B.-H. Juang"]}, {"title": " \"Graph kernels for chemical informatics\"", "authors": ["L. Ralaivola", " S. J. Swamidass", " H. Saigo ", " P. Baldi"]}, {"title": " \"Topical clustering of tweets\"", "authors": ["K. D. Rosa", " R. Shah", " B. Lin", " A. Gershman ", " R. Frederking"]}, {"title": " \"Comparison and evaluation of code clone detection techniques and tools: A qualitative approach\"", "authors": ["C. K. Roy", " J. R. Cordy ", " R. Koschke"]}, {"title": " \"Graph kernels\"", "authors": ["S. V. N. Vishwanathan", " N. N. Schraudolph", " R. Kondor ", " K. M. Borgwardt"]}, {"title": " \"Mining succinct and high-coverage API usage patterns from source code\"", "authors": ["J. Wang", " Y. Dang", " H. Zhang", " K. Chen", " T. Xie ", " D. Zhang"]}, {"title": " \"Heterogeneous metric learning with content-based regularization for software artifact retrieval\"", "authors": ["L. Wu", " L. Du", " B. Liu", " G. Xu", " Y. Ge", " Y. Fu", " ."]}, {"title": " \"Mapo: Mining API usages from open source repositories\"", "authors": ["T. Xie ", " J. Pei"]}, {"title": " \"Multiple instance learning on structured data\"", "authors": ["D. Zhang", " Y. Liu", " L. Si", " J. Zhang ", " R. D. Lawrence"]}, {"title": " \"Semantic video clustering across sources using bipartite spectral clustering\"", "authors": ["D.-Q. Zhang", " C.-Y. Lin", " S.-F. Chang ", " J. R. Smith"]}, {"title": " \"Bing developer assistant: Improving developer productivity by recommending sample code\"", "authors": ["H. Zhang", " A. Jain", " G. Kh", "elwal", " C. Kaushik", " S. Ge ", " W. Hu"]}, {"title": " \"Mapo: Mining and recommending API usage patterns\"", "authors": ["H. Zhong", " T. Xie", " L. Zhang", " J. Pei ", " H. Mei"]}]},
{"doi": "10.1109/ASE.2019.00062", "title": "Machine Learning Based Recommendation of Method Names: How Far are We", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Machine learning", "Software", "Neural networks", "Computational modeling", "Semantics", "Syntactics", "Java"], "abstract": "High quality method names are critical for the readability and maintainability of programs. However, constructing concise and consistent method names is often challenging, especially for inexperienced developers. To this end, advanced machine learning techniques have been recently leveraged to recommend method names automatically for given method bodies/implementation. Recent large-scale evaluations also suggest that such approaches are accurate. However, little is known about where and why such approaches work or don't work. To figure out the state of the art as well as the rationale for the success/failure, in this paper we conduct an empirical study on the state-of-the-art approach code2vec. We assess code2vec on a new dataset with more realistic settings. Our evaluation results suggest that although switching to new dataset does not significantly influence the performance, more realistic settings do significantly reduce the performance of code2vec. Further analysis on the successfully recommended method names also reveals the following findings: 1) around half (48.3%) of the accepted recommendations are made on getter/setter methods; 2) a large portion (19.2%) of the successfully recommended method names could be copied from the given bodies. To further validate its usefulness, we ask developers to manually score the difficulty in naming methods they developed. Code2vec is then applied to such manually scored methods to evaluate how often it works in need. Our evaluation results suggest that code2vec rarely works when it is really needed. Finally, to intuitively reveal the state of the art and to investigate the possibility of designing simple and straightforward alternative approaches, we propose a heuristics based approach to recommending method names. Evaluation results on large-scale dataset suggest that this simple heuristics-based approach significantly outperforms the state-of-the-art machine learning based approach, improving precision and recall by 65.25% and 22.45%, respectively. The comparison suggests that machine learning based recommendation of method names may still have a long way to go.", "author": [{"name": "Lin Jiang", "affiliation": "School of Computer Science and Technology, Beijing Institute of Technology, Beijing, China"}, {"name": "Hui Liu", "affiliation": "School of Computer Science and Technology, Beijing Institute of Technology, Beijing, China"}, {"name": "He Jiang", "affiliation": "School of Software Technology, Dalian University of Technology, Dalian, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Concise and consistent naming\"", "authors": ["F. Deissenboeck ", " M. Pizka"]}, {"title": " \"What\u2019s in a name? a study of identifiers\"", "authors": ["D. Lawrie", " C. Morrell", " H. Feild ", " D. Binkley"]}, {"title": " \"The role of concepts in program comprehension\"", "authors": ["V. Rajlich ", " N. Wilde"]}, {"title": " \"Effects of variable names on comprehension an empirical study\"", "authors": ["E. Avidan ", " D. G. Feitelson"]}, {"title": " \"Debugging method names\"", "authors": ["E. W. H\u00f8st ", " B. M. \u00d8stvold"]}, {"title": " \"Suggesting accurate method and class names\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"A convolutional attention network for extreme summarization of source code\"", "authors": ["M. Allamanis", " H. Peng ", " C. Sutton"]}, {"title": " \"A general path-based representation for predicting program properties\"", "authors": ["U. Alon", " M. Zilberstein", " O. Levy ", " E. Yahav"]}, {"title": " \"Code 2vec: Learning distributed representations of code\"", "authors": ["U. Alon", " M. Zilberstein", " O. Levy ", " E. Yahav"]}, {"title": " \"Shorter identifier names take longer to comprehend\"", "authors": ["J. Hofmeister", " J. Siegmund ", " D. V. Holt"]}, {"title": " \"Descriptive compound identifier names improve source code comprehension\"", "authors": ["A. Schankin", " A. Berger", " D. V. Holt", " J. C. Hofmeister", " T. Riedel ", " M. Beigl"]}, {"title": " \"Neural machine translation by jointly learning to align and translate\"", "authors": ["D. Bahdanau", " K. Cho ", " Y. Bengio"]}, {"title": " \"Learning to spot and refactor inconsistent method names\"", "authors": ["K. Liu", " D. Kim", " T. F. Bissy", "\u00e9", " T. Kim", " K. Kim", " A. Koyuncu", " ."]}, {"title": " \"Restructuring program identifier names\"", "authors": ["Caprile ", " Tonella"]}, {"title": " \"An empirical study of rules for well-formed identifiers: Research articles\"", "authors": ["D. Lawrie", " H. Feild ", " D. Binkley"]}, {"title": " \"Recommending rename refactorings\"", "authors": ["A. Thies ", " C. Roth"]}, {"title": " \"Learning natural coding conventions\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"Investigating the use of code analysis and nlp to promote a consistent usage of identifiers\"", "authors": ["B. Lin", " S. Scalabrino", " A. Mocci", " R. Oliveto", " G. Bavota ", " M. Lanza"]}, {"title": " \"Predicting program properties from \u201cbig code\"", "authors": ["V. Raychev", " M. Vechev ", " A. Krause"]}, {"title": " \"Deepbugs: A learning approach to name-based bug detection\"", "authors": ["M. Pradel ", " K. Sen"]}, {"title": " \"Recommendation systems in software engineering\"", "authors": ["I. Avazpour", " T. Pitakrat", " L. Grunske ", " J. Grundy"]}, {"title": " \"Source code-based recommendation systems\"", "authors": ["K. Mens ", " A. Lozano"]}, {"title": " \"A study of visual studio usage in practice\"", "authors": ["S. Amann", " S. Proksch", " S. Nadi ", " M. Mezini"]}, {"title": " \"On the naturalness of software\"", "authors": ["A. Hindle", " E. T. Barr", " Z. Su", " M. Gabel ", " P. Devanbu"]}, {"title": " \"Mining source code repositories at massive scale using language modeling\"", "authors": ["M. Allamanis ", " C. Sutton"]}, {"title": " \"A statistical semantic language model for source code\"", "authors": ["T. T. Nguyen", " A. T. Nguyen", " H. A. Nguyen ", " T. N. Nguyen"]}, {"title": " \"Code completion with statistical language models\"", "authors": ["V. Raychev", " M. Vechev ", " E. Yahav"]}, {"title": " \"On the localness of software\"", "authors": ["Z. Tu", " Z. Su ", " P. Devanbu"]}, {"title": " \"Are deep neural networks the best choice for modeling source code?\"", "authors": ["V. J. Hellendoorn ", " P. Devanbu"]}, {"title": " \"Graph-based statistical language model for code\"", "authors": ["A. T. Nguyen ", " T. N. Nguyen"]}, {"title": " \"Learning api usages from bytecode: A statistical approach\"", "authors": ["T. T. Nguyen", " H. V. Pham", " P. M. Vu ", " T. T. Nguyen"]}, {"title": " \"Graph-based mining of multiple object usage patterns\"", "authors": ["T. T. Nguyen", " H. A. Nguyen", " N. H. Pham", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"Recurrent neural network based language model\"", "authors": ["T. Mikolov", " M. Karafi\u00e1t", " L. Burget", " J. \u010cernock\u1ef3 ", " S. Khudanpur"]}, {"title": " \"Toward deep learning software repositories\"", "authors": ["M. White", " C. Vendome", " M. Linares-V\u00e1squez ", " D. Poshyvanyk"]}, {"title": " \"Code completion with neural attention and pointer networks\"", "authors": ["J. Li", " Y. Wang", " M. R. Lyu ", " I. King"]}, {"title": " \"Pointer networks\"", "authors": ["O. Vinyals", " M. Fortunato ", " N. Jaitly"]}, {"title": " \"Lexicon bad smells in software\"", "authors": ["S. L. Abebe", " S. Haiduc", " P. Tonella ", " A. Marcus"]}, {"title": " \"The programmer\u2019s lexicon volume i: The verbs\"", "authors": ["E. W. Host ", " B. M. Ostvold"]}, {"title": " \"Practitioners\u2019 expectations on automated fault localization\"", "authors": ["P. S. Kochhar", " X. Xia", " D. Lo ", " S. Li"]}, {"title": " \"Using runtime traces to improve documentation and unit test authoring for dynamic languages\"", "authors": ["J.-P. Kr\u00e4mer", " J. Br", "t "]}, {"title": " \"Autocomment: Mining question and answer sites for automatic comment generation\"", "authors": ["E. Wong"]}, {"title": " \"Neural-machine-translation-based commit message generation: How far are we?\"", "authors": ["Z. Liu", " X. Xia", " A. E. Hassan", " D. Lo", " Z. Xing ", " X. Wang"]}, {"title": " \"When code completion fails: A case study on real-world completions\"", "authors": ["V. J. Hellendoorn", " S. Proksch", " H. C. Gall ", " A. Bacchelli"]}, {"title": " \"Easy over hard: A case study on deep learning\"", "authors": ["W. Fu ", " T. Menzies"]}]},
{"doi": "10.1109/ASE.2019.00063", "title": "MARBLE: Mining for Boilerplate Code to Identify API Usability Problems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Usability", "Data mining", "Cloning", "Java", "Tools", "Google", "Software algorithms"], "abstract": "Designing usable APIs is critical to developers' productivity and software quality, but is quite difficult. One of the challenges is that anticipating API usability barriers and real-world usage is difficult, due to a lack of automated approaches to mine usability data at scale. In this paper, we focus on one particular grievance that developers repeatedly express in online discussions about APIs: \"boilerplate code.\" We investigate what properties make code count as boilerplate, the reasons for boilerplate, and how programmers can reduce the need for it. We then present MARBLE, a novel approach to automatically mine boilerplate code candidates from API client code repositories. MARBLE adapts existing techniques, including an API usage mining algorithm, an AST comparison algorithm, and a graph partitioning algorithm. We evaluate MARBLE with 13 Java APIs, and show that our approach successfully identifies both already-known and new API-related boilerplate code instances.", "author": [{"name": "Daye Nam", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Amber Horvath", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Andrew Macvean", "affiliation": "Google, Inc., USA"}, {"name": "Brad Myers", "affiliation": "Carnegie Mellon University, USA"}, {"name": "Bogdan Vasilescu", "affiliation": "Carnegie Mellon University, USA"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"How to design a good API and why it matters\"", "authors": ["J. Bloch"]}, {"title": " \"A systematic approach to API usability: Taxonomy-derived criteria and a case study\"", "authors": ["E. Mosqueira-Rey", " D. Alonso-R\u00edos", " V. Moret-Bonillo", " I. Fern\u00e1", "ez-Varela "]}, {"title": " \"The implications of method placement on API learnability\"", "authors": ["J. Stylos ", " B. A. Myers"]}, {"title": " \"API peer reviews: A method for evaluating usability of application programming interfaces\"", "authors": ["U. Farooq ", " D. Zirkler"]}, {"title": " \"API design reviews at scale\"", "authors": ["A. Macvean", " M. Maly ", " J. Daughtry"]}, {"title": " \"API designers in the field: Design practices and challenges for creating usable APIs\"", "authors": ["L. Murphy", " M. B. Kery", " O. Alliyu", " A. Macvean ", " B. A. Myers"]}, {"title": " \"Improving API usability\"", "authors": ["B. A. Myers ", " J. Stylos"]}, {"title": " \"Automated API property inference techniques\"", "authors": ["M. P. Robillard", " E. Bodden", " D. Kawrykow", " M. Mezini ", " T. Ratchford"]}, {"title": " \"Are code examples on an online Q&A forum reliable?\u201d\"", "authors": ["T. Zhang", " G. Upadhyaya", " A. Reinhardt", " H. Rajan ", " M. Kim"]}, {"title": " \"Visualizing API usage examples at scale\"", "authors": ["E. L. Glassman", " T. Zhang", " B. Hartmann ", " M. Kim"]}, {"title": " \"Parameter-free probabilistic API mining across GitHub\"", "authors": ["J. Fowkes ", " C. Sutton"]}, {"title": " \"Using concept maps to evaluate the usability of APIs\"", "authors": ["J. Gerken", " H.-C. Jetter ", " H. Reiterer"]}, {"title": " \"An empirical study of API usability\"", "authors": ["M. Piccioni", " C. A. Furia ", " B. Meyer"]}, {"title": " \"A case study of using HCI methods to improve tools for programmers\"", "authors": ["A. Faulring", " B. A. Myers", " Y. Oren ", " K. Rotenberg"]}, {"title": " \"Methods towards API usability: A structural analysis of usability problem categories\"", "authors": ["T. Grill", " O. Polacek ", " M. Tscheligi"]}, {"title": " \"Some structural measures of API usability\"", "authors": ["G. M. Rama ", " A. Kak"]}, {"title": " \"Automated measurement of API usability: The API concepts framework\"", "authors": ["T. Scheller ", " E. Kuhn"]}, {"title": " \"Detecting missing method calls as violations of the majority rule\"", "authors": ["M. Monperrus ", " M. Mezini"]}, {"title": " \"Detecting object usage anomalies\"", "authors": ["A. Wasylkowski", " A. Zeller ", " C. Lindig"]}, {"title": " \"Graph-based mining of multiple object usage patterns\"", "authors": ["T. T. Nguyen", " H. A. Nguyen", " N. H. Pham", " J. M. Al-Kofahi ", " T. N. Nguyen"]}, {"title": " \"Investigating next steps in static API-misuse detection\"", "authors": ["A. Sven", " H. A. Nguyen", " S. Nadi", " T. N. Nguyen ", " M. Mezini"]}, {"title": " \"MAPO: Mining and recommending API usage patterns\"", "authors": ["H. Zhong", " T. Xie", " L. Zhang", " J. Pei ", " H. Mei"]}, {"title": " \"Summarizing software API usage examples using clustering techniques\"", "authors": ["N. Katirtzis", " T. Diamantopoulos ", " C. Sutton"]}, {"title": " \"Frequent closed sequence mining without candidate maintenance\"", "authors": ["J. Wang", " J. Han ", " C. Li"]}, {"title": " \"Discovering API usability problems at scale\"", "authors": ["E. Murphy-Hill", " C. Sadowski", " A. Head", " J. Daughtry", " A. Macvean", " C. Jaspan", " ."]}, {"title": " \"cloning considered harmful\u201d considered harmful: patterns of cloning in software\"", "authors": ["C. J. Kapser ", " M. W. Godfrey"]}, {"title": " \"Comparison and evaluation of code clone detection techniques and tools: A qualitative approach\"", "authors": ["C. K. Roy", " J. R. Cordy ", " R. Koschke"]}, {"title": " \"Sourcerercc: scaling code clone detection to big-code\u201d\"", "authors": ["H. Sajnani", " V. Saini", " J. Svajlenko", " C. K. Roy ", " C. V. Lopes"]}, {"title": " \"An empirical study of code clone genealogies\"", "authors": ["M. Kim", " V. Sazawal", " D. Notkin ", " G. Murphy"]}, {"title": " \"Deckard: Scalable and accurate tree-based detection of code clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"Deep learning code fragments for code clone detection\"", "authors": ["M. White", " M. Tufano", " C. Vendome ", " D. Poshyvanyk"]}, {"title": " \"A survey on software clone detection research\"", "authors": ["C. K. Roy ", " J. R. Cordy"]}, {"title": " \"The expectation-maximization algorithm\"", "authors": ["T. K. Moon"]}, {"title": " \"Tree edit distance: Robust and memory-efficient\"", "authors": ["M. Pawlik ", " N. Augsten"]}, {"title": " \"Fine-grained and accurate source code differencing\"", "authors": ["J.-R. Falleri", " F. Mor", "at", " X. Blanc", " M. Martinez ", " M. Monperrus"]}, {"title": " \"Fast unfolding of communities in large networks\"", "authors": ["V. D. Blondel", " J.-L. Guillaume", " R. Lambiotte ", " E. Lefebvre"]}, {"title": " \"Building effective defect-prediction models in practice\"", "authors": ["A. G. Koru ", " H. Liu"]}, {"title": " \"Why don\u2019t software developers use static analysis tools to find bugs?\"", "authors": ["B. Johnson", " Y. Song", " E. Murphy-Hill ", " R. Bowdidge"]}, {"title": " \"GHTorrent: GitHub\u2019s data from a fire-hose\"", "authors": ["G. Gousios ", " D. Spinellis"]}, {"title": " \"Program slicing\"", "authors": ["M. Weiser"]}]},
{"doi": "10.1109/ASE.2019.00064", "title": "DIRE: A Neural Approach to Decompiled Identifier Naming", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Recurrent neural networks", "Reverse engineering", "Training", "Software", "Analytical models"], "abstract": "The decompiler is one of the most common tools for examining binaries without corresponding source code. It transforms binaries into high-level code, reversing the compilation process. Decompilers can reconstruct much of the information that is lost during the compilation process (e.g., structure and type information). Unfortunately, they do not reconstruct semantically meaningful variable names, which are known to increase code understandability. We propose the Decompiled Identifier Renaming Engine (DIRE), a novel probabilistic technique for variable name recovery that uses both lexical and structural information recovered by the decompiler. We also present a technique for generating corpora suitable for training and evaluating models of decompiled code renaming, which we use to create a corpus of 164,632 unique x86-64 binaries generated from C projects mined from GitHub. Our results show that on this corpus DIRE can predict variable names identical to the names in the original source code up to 74.3% of the time.", "author": [{"name": "Jeremy Lacomis", "affiliation": "Carnegie Mellon University"}, {"name": "Pengcheng Yin", "affiliation": "Carnegie Mellon University"}, {"name": "Edward Schwartz", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Miltiadis Allamanis", "affiliation": "Microsoft Research"}, {"name": "Claire Le Goues", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Graham Neubig", "affiliation": "Carnegie Mellon University"}, {"name": "Bogdan Vasilescu", "affiliation": "Carnegie Mellon University"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"No more gotos: Decompilation using pattern-independent control-flow structuring and semantics-preserving transformations\"", "authors": ["K. Yakdan", " S. Eschweiler", " E. Gerhards-Padilla ", " M. Smith"]}, {"title": " \"Helping Johnny to analyze malware: A usability-optimized decompiler and malware analysis user study\"", "authors": ["K. Yakdan", " S. Dech", "", " E. Gerhards-Padilla ", " M. Smith"]}, {"title": " \"PsybOt malware: A step-by-step decompilation case study\"", "authors": ["L. Durfina", " J. Kroustek ", " P. Zemek"]}, {"title": " \"Native x86 decompilation using semantics-preserving structural analysis and iterative controlflow structuring\"", "authors": ["E. J. Schwartz", " J. Lee", " M. Woo ", " D. Brumley"]}, {"title": " \"Your botnet is my botnet: Analysis of a botnet takeover\"", "authors": ["B. Stone-Gross", " M. Cova", " L. Cavallaro", " B. Gilbert", " M. Szydlowski", " R. Kemmerer", " ."]}, {"title": " \"SoK: P2PWNED \u2014 Modeling and evaluating the resilience of peer-to-peer botnets\"", "authors": ["C. Rossow", " D. Andriesse", " T. Werner", " B. Stone-Gross", " D. Plohmann", " C. J. Dietrich", " ."]}, {"title": " \"An investigation of procedure and variable names as beacons during program comprehension\"", "authors": ["E. M. Gellenbeck ", " C. R. Cook"]}, {"title": " \"What\u2019s in a name? A study of identifiers\"", "authors": ["D. Lawrie", " C. Morrell", " H. Feild ", " D. Binkley"]}, {"title": " \"On the naturalness of software\"", "authors": ["A. Hindle", " E. T. Barr", " Z. Su", " M. Gabel ", " P. Devanbu"]}, {"title": " \"New initiative: The naturalness of software\"", "authors": ["P. Devanbu"]}, {"title": " \"Predicting program properties from \u201cBig Code\u201d\"", "authors": ["V. Raychev", " M. Vechev ", " A. Krause"]}, {"title": " \"Recovering clear natural identifiers from obfuscated JavaScript names\"", "authors": ["B. Vasilescu", " C. Casalnuovo ", " P. Devanbu"]}, {"title": " \"A general path-based representation for predicting program properties\"", "authors": ["U. Alon", " M. Zilberstein", " O. Levy ", " E. Yahav"]}, {"title": " \"Meaningful variable names for decompiled code: A machine translation approach\"", "authors": ["A. Jaffe", " J. Lacomis", " E. J. Schwartz", " C. Le Goues ", " B. Vasilescu"]}, {"title": " \"DEBIN: Predicting debug information in stripped binaries\"", "authors": ["J. He", " P. Ivanov", " P. Tsankov", " V. Raychev ", " M. Vechev"]}, {"title": " \"Using recurrent neural networks for decompilation\"", "authors": ["D. S. Katz", " J. Ruchti ", " E. Schulte"]}, {"title": " \"Introduction to the DWARF debugging format\"", "authors": ["M. J. Eager"]}, {"title": " \"A survey of machine learning for big code and naturalness\"", "authors": ["M. Allamanis", " E. T. Barr", " P. Devanbu ", " C. Sutton"]}, {"title": " \"Learning natural coding conventions\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"Suggesting accurate method and class names\"", "authors": ["M. Allamanis", " E. T. Barr", " C. Bird ", " C. Sutton"]}, {"title": " \"Learning to represent programs with graphs\"", "authors": ["M. Allamanis", " M. Brockschmidt ", " M. Khademi"]}, {"title": " \"code2seq: Generating sequences from structured representations of code\"", "authors": ["U. Alon", " O. Levy ", " E. Yahav"]}, {"title": " \"Learning representations by back-propagating errors\"", "authors": ["D. E. Rumelhart", " G. E. Hinton", " R. J. Williams ."]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"The graph neural network model\"", "authors": ["F. Scarselli", " M. Gori", " A. C. Tsoi", " M. Hagenbuchner ", " G. Monfardini"]}, {"title": " \"Gated graph sequence neural networks\"", "authors": ["Y. Li", " D. Tarlow", " M. Brockschmidt ", " R. Zemel"]}, {"title": " \"Neural message passing for quantum chemistry\"", "authors": ["J. Gilmer", " S. S. Schoenholz", " P. F. Riley", " O. Vinyals ", " G. E. Dahl"]}, {"title": " \"Learning phrase representations using RNN encoder-decoder for statistical machine translation\"", "authors": ["K. Cho", " B. van Merri\u00ebnboer", " C. Gulcehre", " D. Bahdanau", " F. Bougares", " H. Schwenk", " ."]}, {"title": " \"SentencePiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\"", "authors": ["T. Kudo ", " J. Richardson"]}, {"title": " \"Effective approaches to attention-based neural machine translation\"", "authors": ["T. Luong", " H. Pham ", " C. D. Manning"]}, {"title": " \"Describing multimedia content using attention-based encoder-decoder networks\"", "authors": ["K. Cho", " A. Courville ", " Y. Bengio"]}, {"title": " \"CharacTer: Translation edit rate on character level\"", "authors": ["W. Wang", " J.-T. Peter", " H. Rosendahl ", " H. Ney"]}, {"title": " \"The adverse effects of code duplication in machine learning models of code\"", "authors": ["M. Allamanis"]}]},
{"doi": "10.1109/ASE.2019.00065", "title": "Accurate Modeling of Performance Histories for Evolving Software Systems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["History", "Software systems", "Time series analysis", "Market research", "Benchmark testing", "Standards"], "abstract": "Learning from the history of a software system's performance behavior does not only help discovering and locating performance bugs, but also identifying evolutionary performance patterns and general trends, such as when technical debt accumulates. Exhaustive regression testing is usually impractical, because rigorous performance benchmarking requires executing a realistic workload per revision, which results in large execution times. In this paper, we propose a novel active revision sampling approach, which aims at tracking and understanding a system's performance history by approximating the performance behavior of a software system across all of its revisions. In a nutshell, we iteratively sample and measure the performance of specific revisions that help us building an exact performance-evolution model, and we use Gaussian Process models to assess in which revision ranges our model is most uncertain with the goal to sample further revisions for measurement. We have conducted an empirical analysis of the evolutionary performance behavior modeled as a time series of the histories of six real-world software systems. Our evaluation demonstrates that Gaussian Process models are able to accurately estimate the performance-evolution history of real-world software systems with only few measurements and to reveal interesting behaviors and trends.", "author": [{"name": "Stefan M\u00fchlbauer", "affiliation": "Bauhaus-University Weimar, Weimar, Germany"}, {"name": "Sven Apel", "affiliation": "Saarland University, Germany"}, {"name": "Norbert Siegmund", "affiliation": "Bauhaus-University Weimar, Germany"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Time is bandwidth? Narrowing the gap between subjective time perception and Quality of Experience\"", "authors": ["S. Egger", " P. Reichl", " T. Ho\u00dffeld ", " R. Schatz"]}, {"title": " \"A Study on Tolerable Waiting Time: How Long Are Web Users Willing to Wait?\"", "authors": ["F. F.-H. Nah"]}, {"title": " \"A Systematic Review of Software Architecture Evolution Research\"", "authors": ["H. P. Breivold", " I. Crnkovic ", " M. Larsson"]}, {"title": " \"A Genetic Algorithm for Optimized Feature Selection with Resource Constraints in Software Product Lines\"", "authors": ["J. Guo", " J. White", " G. Wang", " J. Li ", " Y. Wang"]}, {"title": " \"Performance Testing of Software Systems\"", "authors": ["F. I. Vokolos ", " E. J. Weyuker"]}, {"title": " \"How to Detect Performance Changes in Software History: Performance Analysis of Software System Versions\"", "authors": ["D. G. Reichelt ", " S. K\u00fchne"]}, {"title": " \"Mining Performance Regression Testing Repositories for Automated Performance Analysis\"", "authors": ["K. C. Foo", " Z. M. Jiang", " B. Adams", " A. E. Hassan", " Y. Zou ", " P. Flora"]}, {"title": " \"Automating the Assessment of the Performance Quality Attribute for Evolving Software Systems: An Exploratory Study\"", "authors": ["F. Pinto", " U. Kulesza", " L. Silva ", " E. Guerra"]}, {"title": " \"Repeated Results Analysis for Middleware Regression Benchmarking\"", "authors": ["L. Bulej", " T. Kalibera ", " P. Tma"]}, {"title": " \"A Performance Anomaly Detection and Analysis Framework for DBMS Development\"", "authors": ["D. Lee", " S. K. Cha ", " A. H. Lee"]}, {"title": " \"Automated Root Cause Isolation of Performance Regressions During Software Development\"", "authors": ["C. Heger", " J. Happe ", " R. Farahbod"]}, {"title": " \"An Industrial Case Study of Automatically Identifying Performance Regression-Causes\"", "authors": ["T. H. D. Nguyen", " M. Nagappan", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"Continuous Inspection Schemes\"", "authors": ["E. S. Page"]}, {"title": " \"An Empirical Study on Performance Bugs for Highly Configurable Software Systems\"", "authors": ["X. Han ", " T. Yu"]}, {"title": " \"Gaussian Processes for time-series modelling\"", "authors": ["S. Roberts", " M. Osborne", " M. Ebden", " S. Reece", " N. Gibson ", " S. Aigrain"]}, {"title": " \"Performance-Influence Models for Highly Configurable Systems\"", "authors": ["N. Siegmund", " A. Grebhahn", " S. Apel ", " C. K\u00e4stner"]}, {"title": " \"The Design of Optimum Multifactorial Experiments\"", "authors": ["J. Burman ", " R. Plackett"]}, {"title": " \"Distance-based Sampling of Software Configuration Spaces\"", "authors": ["C. Kaltenecker", " A. Grebhahn", " N. Siegmund", " J. Guo ", " S. Apel"]}, {"title": " \"Using Control Charts for Detecting and Understanding Performance Regressions in Large Software\"", "authors": ["T. H. Nguyen"]}, {"title": " \"Automated Detection of Performance Regressions Using Statistical Process Control Techniques\"", "authors": ["T. H. Nguyen", " B. Adams", " Z. M. Jiang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"Automatic Detection of Performance Deviations in the Load Testing of Large Scale Systems\"", "authors": ["H. Malik", " H. Hemmati ", " A. E. Hassan"]}, {"title": " \"Statistically Rigorous Java Performance Evaluation\"", "authors": ["A. Georges", " D. Buytaert ", " L. Eeckhout"]}, {"title": " \"An Industrial Case Study on the Automated Detection of Performance Regressions in Heterogeneous Environments\"", "authors": ["K. C. Foo", " Z. M. Jiang", " B. Adams", " A. E. Hassan", " Y. Zou ", " P. Flora"]}, {"title": " \"Identifying Root Causes of Web Performance Degradation Using Changepoint Analysis\"", "authors": ["J. Cito", " D. Suljoti", " P. Leitner ", " S. Dustdar"]}, {"title": " \"Sequential Bayesian Prediction in the Presence of Changepoints and Faults\"", "authors": ["R. Garnett", " M. A. Osborne", " S. Reece", " A. Rogers ", " S. J. Roberts"]}, {"title": " \"Real-time Information Processing of Environmental Sensor Network Data Using Bayesian Gaussian Processes\"", "authors": ["M. A. Osborne", " S. J. Roberts", " A. Rogers ", " N. R. Jennings"]}, {"title": " \"Variability-aware Performance Prediction: A Statistical Learning Approach\"", "authors": ["J. Guo", " K. Czarnecki", " S. Apely", " N. Siegmund ", " A. Wasowski"]}, {"title": " \"Cost-Efficient Sampling for Performance Prediction of Configurable Systems (T)\"", "authors": ["A. Sarkar", " J. Guo", " N. Siegmund", " S. Apel ", " K. Czarnecki"]}, {"title": " \"Using Bad Learners to Find Good Configurations\"", "authors": ["V. Nair", " T. Menzies", " N. Siegmund ", " S. Apel"]}, {"title": " \"DeepPerf: Performance Prediction for Configurable Software with Deep Sparse Neural Network\"", "authors": ["H. Ha ", " H. Zhang"]}, {"title": " \"Predicting Performance via Automated Feature-Interaction Detection\"", "authors": ["N. Siegmund", " S. S. Kolesnikov", " C. Kastner", " S. Apel", " D. Batory", " M. Rosenmuller", " ."]}, {"title": " \"Finding Faster Configurations using FLASH\"", "authors": ["V. Nair", " Z. Yu", " T. Menzies", " N. Siegmund ", " S. Apel"]}, {"title": " \"Finding Near-Optimal Configurations in Product Lines by Random Sampling\"", "authors": ["J. Oh", " D. Batory", " M. Myers ", " N. Siegmund"]}]},
{"doi": "10.1109/ASE.2019.00066", "title": "An Industrial Experience Report on Performance-Aware Refactoring on a Database-Centric Web Application", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Databases", "Computer languages", "Focusing", "Browsers", "Task analysis", "Writing", "Rails"], "abstract": "Modern web applications rely heavily on databases to query and update information. To ease the development efforts, Object Relational Mapping (ORM) frameworks provide an abstraction for developers to manage databases by writing in the same Object-Oriented programming languages. Prior studies have shown that there are various types of performance issues caused by inefficient accesses to databases via different ORM frameworks (e.g., Hibernate and ActiveRecord). However, it is not clear whether the reported performance anti-patterns (common performance issues) can be generalizable across various frameworks. In particular, there is no study focusing on detecting performance issues for applications written in PHP, which is the choice of programming languages for the majority (79%) of web applications. In this experience paper, we detail our process on conducting performance-aware refactoring of an industrial web application written in Laravel, the most popular web framework in PHP. We have derived a complete catalog of 17 performance anti-patterns based on prior research and our experimentation. We have found that some of the reported anti-patterns and refactoring techniques are framework or programming language specific, whereas others are general. The performance impact of the anti-pattern instances are highly dependent on the actual usage context (workload and database settings). When communicating the performance differences before and after refactoring, the results of the complex statistical analysis may be sometimes confusing. Instead, developers usually prefer more intuitive measures like percentage improvement. Experiments show that our refactoring techniques can reduce the response time up to 93.0% and 93.4% for the industrial and the open source application under various scenarios.", "author": [{"name": "Boyuan Chen", "affiliation": "York University, Toronto, Canada"}, {"name": "Zhen Ming Jiang", "affiliation": "York University, Toronto, ON, Canada"}, {"name": "Paul Matos", "affiliation": "Copywell Inc., Toronto, Canada"}, {"name": "Michael Lacaria", "affiliation": "Copywell Inc., Toronto, Canada"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Detecting performance anti-patterns for applications developed using object-relational mapping\"", "authors": ["T.-H. Chen", " W. Shang", " Z. M. Jiang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"How Not to Structure Your Database-backed Web Applications: A Study of Performance Bugs in the Wild\"", "authors": ["J. Yang", " P. Subramaniam", " S. Lu", " C. Yan ", " A. Cheung"]}, {"title": " \"Detecting problems in the database access code of large scale systems: An industrial experience report\"", "authors": ["T.-H. Chen", " W. Shang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"Performance Analysis Using Subsuming Methods: An Industrial Case Study\"", "authors": ["D. Maplesden", " K. von R", "ow", " E. Tempero", " J. Hosking ", " J. Grundy"]}, {"title": " \"Understanding Database Performance Inefficiencies in Real-world Web Applications\"", "authors": ["C. Yan", " A. Cheung", " J. Yang ", " S. Lu"]}, {"title": " \"Powerstation: automatically detecting and fixing inefficiencies of database-backed web applications in IDE\"", "authors": ["J. Yang", " C. Yan", " P. Subramaniam", " S. Lu ", " A. Cheung"]}, {"title": " \"Finding and evaluating the performance impact of redundant data access for applications that are developed using object-relational mapping frameworks\"", "authors": ["T.-H. Chen", " W. Shang", " Z. M. Jiang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"View-centric performance optimization for database-backed web applications\"", "authors": ["J. Yang", " C. Yan", " C. cheng Wan", " S. Lu ", " A. Cheung"]}, {"title": " \"Statistically Rigorous Java Performance Evaluation\"", "authors": ["A. Georges", " D. Buytaert ", " L. Eeckhout"]}, {"title": " \"Appropriate statistics for ordinal level data: Should we really be using t-test and Cohen\u2019sd for evaluating group differences on the NSSE and other surveys?\"", "authors": ["J. Romano", " J. D. Kromrey", " J. Coraggio ", " J. Skowronek"]}, {"title": " \"A framework to evaluate the effectiveness of different load testing analysis techniques\"", "authors": ["R. Gao", " Z. M. Jiang", " C. Barna ", " M. Litoiu"]}, {"title": " \"New software performance antipatterns: More ways to shoot yourself in the foot\"", "authors": ["C. U. Smith ", " L. G. Williams"]}, {"title": " \"More New Software Antipatterns: Even More Ways to Shoot Yourself in the Foot\"", "authors": ["C. U. Smith ", " L. G. Williams"]}, {"title": " \"The effectiveness of test coverage criteria for relational database schema integrity constraints\"", "authors": ["P. Mcminn", " C. J. Wright ", " G. M. Kapfhammer"]}, {"title": " \"A family of test adequacy criteria for database-driven applications\"", "authors": ["G. M. Kapfhammer ", " M. L. Soffa"]}, {"title": " \"Testing DatabaseCentric Applications for Causes of Database Deadlocks\"", "authors": ["M. Grechanik", " B. M. M. Hossain ", " U. Buy"]}, {"title": " \"Preventing database deadlocks in applications\"", "authors": ["M. Grechanik", " B. M. M. Hossain", " U. Buy ", " H. Wang"]}, {"title": " \"Testing Software in Age of Data Privacy: A Balancing Act\"", "authors": ["K. Taneja", " M. Grechanik", " R. Ghani ", " T. Xie"]}, {"title": " \"Sanitizing and Minimizing Databases for Software Application Test Outsourcing\"", "authors": ["B. L. M. G. D. Poshyvanyk"]}]},
{"doi": "10.1109/ASE.2019.00067", "title": "How Do API Selections Affect the Runtime Performance of Data Analytics Tasks?", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Data analysis", "Task analysis", "Libraries", "Runtime", "Data mining", "Python", "Programming"], "abstract": "As data volume and complexity grow at an unprecedented rate, the performance of data analytics programs is becoming a major concern for developers. We observed that developers sometimes use alternative data analytics APIs to improve program runtime performance while preserving functional equivalence. However, little is known on the characteristics and performance attributes of alternative data analytics APIs. In this paper, we propose a novel approach to extracting alternative implementations that invoke different data analytics APIs to solve the same tasks. A key appeal of our approach is that it exploits the comparative structures in Stack Overflow discussions to discover programming alternatives. We show that our approach is promising, as 86% of the extracted code pairs were validated as true alternative implementations. In over 20% of these pairs, the faster implementation was reported to achieve a 10x or more speedup over its slower alternative. We hope that our study offers a new perspective of API recommendation and motivates future research on optimizing data analytics programs.", "author": [{"name": "Yida Tao", "affiliation": "College of Computer Science and Software Engineering, Shenzhen University, Shenzhen, China"}, {"name": "Shan Tang", "affiliation": "College of Computer Science and Software Engineering, Shenzhen University, Shenzhen, China"}, {"name": "Yepang Liu", "affiliation": "Department of Computer Science & Engineering, Southern University of Science and Technology, Shenzhen, China"}, {"name": "Zhiwu Xu", "affiliation": "College of Computer Science and Software Engineering, Shenzhen University, Shenzhen, China"}, {"name": "Shengchao Qin", "affiliation": "School of Computing & Digital Technologies, Teesside University, UK"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Research directions for engineering big data analytics software\"", "authors": ["C. E. Otero ", " A. Peter"]}, {"title": " \"Measuring software redundancy\"", "authors": ["A. Carzaniga", " A. Mattavelli ", " M. Pezz\u00e8"]}, {"title": " \"Performance issues and optimizations in javascript: An empirical study\"", "authors": ["M. Selakovic ", " M. Pradel"]}, {"title": " \"How not to structure your database-backed web applications: A study of performance bugs in the wild\"", "authors": ["J. Yang", " P. Subramaniam", " S. Lu", " C. Yan ", " A. Cheung"]}, {"title": " \"Automatic mining of functionally equivalent code fragments via random testing\"", "authors": ["L. Jiang ", " Z. Su"]}, {"title": " \"Identifying functionally similar code in complex codebases\"", "authors": ["F.-H. Su", " J. Bell", " G. Kaiser ", " S. Sethumadhavan"]}, {"title": " \"The Stanford CoreNLP natural language processing toolkit\"", "authors": ["C. D. Manning", " M. Surdeanu", " J. Bauer", " J. Finkel", " S. J. Bethard ", " D. McClosky"]}, {"title": " \"Discovering essential code elements in informal documentation\"", "authors": ["P. C. Rigby ", " M. P. Robillard"]}]},
{"doi": "10.1109/ASE.2019.00068", "title": "An Experience Report of Generating Load Tests Using Log-Recovered Workloads at Varying Granularities of User Behaviour", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software engineering", "Large-scale systems", "Testing", "Software systems", "Task analysis", "Google"], "abstract": "Designing field-representative load tests is an essential step for the quality assurance of large-scale systems. Practitioners may capture user behaviour at different levels of granularity. A coarse-grained load test may miss detailed user behaviour, leading to a non-representative load test; while an extremely fine-grained load test would simply replay user actions step by step, leading to load tests that are costly to develop, execute and maintain. Workload recovery is at core of these load tests. Prior research often captures the workload as the frequency of user actions. However, there exists much valuable information in the context and sequences of user actions. Such richer information would ensure that the load tests that leverage such workloads are more field-representative. In this experience paper, we study the use of different granularities of user behaviour, i.e., basic user actions, basic user actions with contextual information and user action sequences with contextual information, when recovering workloads for use in the load testing of large-scale systems. We propose three approaches that are based on the three granularities of user behaviour and evaluate our approaches on four subject systems, namely Apache James, OpenMRS, Google Borg, and an ultra-large-scale industrial system (SA) from Alibaba. Our results show that our approach that is based on user action sequences with contextual information outperforms the other two approaches and can generate more representative load tests with similar throughput and CPU usage to the original field workload (i.e., mostly statistically insignificant or with small/trivial effect sizes). Such representative load tests are generated only based on a small number of clusters of users, leading to a low cost of conducting/maintaining such tests. Finally, we demonstrate that our approaches can detect injected users in the original field workloads with high precision and recall. Our paper demonstrates the importance of user action sequences with contextual information in the workload recovery of large-scale systems.", "author": [{"name": "Jinfu Chen", "affiliation": "Department of Computer Science and Software Engineering, Concordia University, Montre\u00e1, Canada"}, {"name": "Weiyi Shang", "affiliation": "Department of Computer Science and Software Engineering, Concordia University, Montre\u00e1, Canada"}, {"name": "Ahmed E. Hassan", "affiliation": "School of Computing, Queen\u2019s University, Kingston, Canada"}, {"name": "Yong Wang", "affiliation": "Alibaba Group, Hangzhou, China"}, {"name": "Jiangbin Lin", "affiliation": "Alibaba Group, Hangzhou, China"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"Experience with performance testing of software systems: issues an approach and case study\"", "authors": ["E. J. Weyuker ", " F. I. Vokolos"]}, {"title": " \"Characterizing computer systems workloads\"", "authors": ["S. Elnaffar ", " P. Martin"]}, {"title": " \"Workload characterization: A survey revisited\"", "authors": ["M. C. Calzarossa", " L. Massari ", " D. Tessera"]}, {"title": " \"Design and testing of scalable web-based systems with performance constraints\"", "authors": ["M. Andreolini", " M. Colajanni ", " P. Valente"]}, {"title": " \"A synthetic workload generation technique for stress testing session-based systems\"", "authors": ["D. Krishnamurthy", " J. A. Rolia ", " S. Majumdar"]}, {"title": " \"Towards automatic performance and scalability testing of rich internet applications in the cloud\"", "authors": ["N. Snellman", " A. Ashraf ", " I. Porres"]}, {"title": " \"Stress testing of transactional database systems\"", "authors": ["J. A. Meira", " E. C. de Almeida", " G. Suny\u00e9", " Y. L. Traon ", " P. Valduriez"]}, {"title": " \"Continuous validation of performance test workloads\"", "authors": ["M. D. Syer", " W. Shang", " Z. M. Jiang ", " A. E. Hassan"]}, {"title": " \"Automated detection of performance regressions using regression models on clustered performance counters\"", "authors": ["W. Shang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"Capturing indexing clustering and retrieving system history\"", "authors": ["I. Cohen", " S. Zhang", " M. Goldszmidt", " J. Symons", " T. Kelly ", " A. Fox"]}, {"title": " \"WESSBAS: extraction of probabilistic workload specifications for load testing and performance prediction - a model-driven approach for session-based application systems\"", "authors": ["C. V\u00f6gele", " A. van Hoorn", " E. Schulz", " W. Hasselbring ", " H. Krcmar"]}, {"title": " \"Characterizing the workload of a netflix streaming video server\"", "authors": ["J. Summers", " T. Brecht", " D. Eager ", " A. Gutarin"]}, {"title": " \"Characterization of real workloads of web search engines\"", "authors": ["H. Xi", " J. Zhan", " Z. Jia", " X. Hong", " L. Wang", " L. Zhang", " ."]}, {"title": " \"An industrial case study of customizing operational profiles using log compression\"", "authors": ["A. E. Hassan", " D. J. Martin", " P. Flora", " P. Mansfield ", " D. Dietz"]}, {"title": " \"Finding and evaluating the performance impact of redundant data access for applications that are developed using object-relational mapping frameworks\"", "authors": ["T.-H. Chen", " W. Shang", " Z. M. Jiang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"On the accuracy and scalability of intensive I/O workload replay\"", "authors": ["A. Haghdoost", " W. He", " J. Fredin ", " D. H. C. Du"]}, {"title": " \"Discovery of application workloads from network file traces\"", "authors": ["N. J. Yadwadkar", " C. Bhattacharyya", " K. Gopinath", " T. Niranjan ", " S. Susarla"]}, {"title": " \"Automated workload characterization for I/O performance analysis in virtualized environments\"", "authors": ["A. Busch", " Q. Noorshams", " S. Kounev", " A. Koziolek", " R. H. Reussner ", " E. Amrehn"]}, {"title": " \"IO workload characterization revisited: A data-mining approach\"", "authors": ["B. Seo", " S. Kang", " J. Choi", " J. Cha", " Y. Won ", " S. Yoon"]}, {"title": " \"Resource central: Understanding and predicting workloads for improved resource management in large cloud platforms\"", "authors": ["E. Cortez", " A. Bonde", " A. Muzio", " M. Russinovich", " M. Fontoura ", " R. Bianchini"]}, {"title": " \"The bones of the system: A case study of logging and telemetry at microsoft\"", "authors": ["T. Barik", " R. DeLine", " S. Drucker ", " D. Fisher"]}, {"title": " \"Advances and challenges in log analysis\"", "authors": ["A. Oliner", " A. Ganapathi ", " W. Xu"]}, {"title": " \"Automatic identification of load testing problems\"", "authors": ["Z. M. Jiang", " A. E. Hassan", " G. Hamann ", " P. Flora"]}, {"title": " \"Automated performance analysis of load tests\"", "authors": ["Z. M. Jiang", " A. E. Hassan", " G. Hamann ", " P. Flora"]}, {"title": " \"Logmaster: Mining event correlations in logs of large-scale cluster systems\"", "authors": ["X. Fu", " R. Ren", " J. Zhan", " W. Zhou", " Z. Jia ", " G. Lu"]}, {"title": " \"Leveraging existing instrumentation to automatically infer invariantconstrained models\"", "authors": ["I. Beschastnikh", " Y. Brun", " S. Schneider", " M. Sloan ", " M. D. Ernst"]}, {"title": " \"Inferring models of concurrent systems from logs of their behavior with csight\"", "authors": ["I. Beschastnikh", " Y. Brun", " M. D. Ernst ", " A. Krishnamurthy"]}, {"title": " \"Assisting developers of big data analytics applications when deploying on hadoop clouds\"", "authors": ["W. Shang", " Z. M. Jiang", " H. Hemmati", " B. Adams", " A. E. Hassan ", " P. Martin"]}, {"title": " \"Log clustering based problem identification for online service systems\"", "authors": ["Q. Lin", " H. Zhang", " J.-G. Lou", " Y. Zhang ", " X. Chen"]}, {"title": " \"Identifying impactful service system problems via log analysis\"", "authors": ["S. He", " Q. Lin", " J.-G. Lou", " H. Zhang", " M. R. Lyu ", " D. Zhang"]}, {"title": " \"An automated approach for abstracting execution logs to execution events\"", "authors": ["Z. M. Jiang", " A. E. Hassan", " G. Hamann ", " P. Flora"]}, {"title": " \"The data model concept in statistical mapping\"", "authors": ["G. F. Jenks"]}, {"title": " \"Efficiently extracting operational profiles from execution logs using suffix arrays\"", "authors": ["M. Nagappan", " K. Wu ", " M. A. Vouk"]}, {"title": " \"Application of string similarity ratio and edit distance in automatic metabolite reconciliation comparing reconstructions and models\"", "authors": ["M. Mednis ", " M. Aurich"]}, {"title": " \"A comprehensive survey of clustering algorithms\"", "authors": ["D. Xu ", " Y. Tian"]}, {"title": " \"Automated detection of performance regressions using regression models on clustered performance counters\"", "authors": ["W. Shang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"A dendrite method for cluster analysis\"", "authors": ["T. Cali\u0144ski ", " J. Harabasz"]}, {"title": " \"Continuous validation of load test suites\"", "authors": ["M. D. Syer", " Z. M. Jiang", " M. Nagappan", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"A framework to evaluate the effectiveness of different load testing analysis techniques\"", "authors": ["R. Gao", " Z. M. Jiang", " C. Barna ", " M. Litoiu"]}, {"title": " \"Cacheoptimizer: Helping developers configure caching frameworks for hibernate-based database-centric web applications\"", "authors": ["T.-H. Chen", " W. Shang", " A. E. Hassan", " M. Nasser ", " P. Flora"]}, {"title": " \"Studying the effectiveness of application performance management (apm) tools for detecting performance regressions for web applications: an experience report\"", "authors": ["T. M. Ahmed", " C.-P. Bezemer", " T.-H. Chen", " A. E. Hassan ", " W. Shang"]}, {"title": " \"Large-scale cluster management at Google with Borg\"", "authors": ["A. Verma", " L. Pedrosa", " M. R. Korupolu", " D. Oppenheimer", " E. Tune ", " J. Wilkes"]}, {"title": " \"Validating clusters using the hopkins statistic\"", "authors": ["A. Banerjee ", " R. N. Dave"]}, {"title": " \"The mann-whitney u: A test for assessing whether two independent samples come from the same distribution\"", "authors": [" ."]}, {"title": " \"Effect size (es)\"", "authors": ["L. A. Becker"]}, {"title": " \"Analytics-driven load testing: An industrial experience report on load testing of large-scale systems\"", "authors": ["T. Chen", " M. D. Syer", " W. Shang", " Z. M. Jiang", " A. E. Hassan", " M. N. Nasser", " ."]}, {"title": " \"Separating performance anomalies from workload-explained failures in streaming servers\"", "authors": ["C. A. Cunha ", " L. M. e Silva"]}, {"title": " \"Anomaly? application change? or workload change? towards automated detection of application performance anomaly and change\"", "authors": ["L. Cherkasova", " K. Ozonat", " N. Mi", " J. Symons ", " E. Smirni"]}, {"title": " \"Mean shift: A robust approach toward feature space analysis\"", "authors": ["D. Comaniciu ", " P. Meer"]}, {"title": " \"A mutation analysis based benchmarking framework for clone detectors\"", "authors": ["J. Svajlenko", " C. K. Roy ", " J. R. Cordy"]}, {"title": " \"Evaluating clone detection tools with bigclonebench\"", "authors": ["J. Svajlenko ", " C. K. Roy"]}]},
{"doi": "10.1109/ASE.2019.00069", "title": "Demystifying Application Performance Management Libraries for Android", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Monitoring", "Message systems", "Runtime", "Computer crashes", "Libraries", "Servers", "Google"], "abstract": "Since the performance issues of apps can influence users' experience, developers leverage application performance management (APM) tools to locate the potential performance bottleneck of their apps. Unfortunately, most developers do not understand how APMs monitor their apps during the runtime and whether these APMs have any limitations. In this paper, we demystify APMs by inspecting 25 widely-used APMs that target on Android apps. We first report how these APMs implement 8 key functions as well as their limitations. Then, we conduct a large-scale empirical study on 500,000 Android apps from Google Play to explore the usage of APMs. This study has some interesting observations about existing APMs for Android, including 1) some APMs still use deprecated permissions and approaches so that they may not always work properly; 2) some app developers use APMs to collect users' privacy information.", "author": [{"name": "Yutian Tang", "affiliation": "Department of Computing, The Hong Kong Polytechnic University"}, {"name": "Xian Zhan", "affiliation": "Department of Computing, The Hong Kong Polytechnic University"}, {"name": "Hao Zhou", "affiliation": "Department of Computing, The Hong Kong Polytechnic University"}, {"name": "Xiapu Luo", "affiliation": "Department of Computing, The Hong Kong Polytechnic University"}, {"name": "Zhou Xu", "affiliation": "Department of Computer Science and Technology, Wuhan University"}, {"name": "Yajin Zhou", "affiliation": "Department of Computer Science and Technology, Zhejiang University"}, {"name": "Qiben Yan", "affiliation": "Computer Science and Engineering, Michigan State University"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Log4perf: Suggesting Logging Locations for Web-based Systems\u2019 Performance Monitoring\"", "authors": ["K. Yao", " G. B. de", " P\u00e1dua", " W. Shang", " S. Sporea", " A. Toma", " ."]}, {"title": " \"Behavioral Analysis of Android Applications Using Automated Instrumentation\"", "authors": ["M. Karami", " M. Elsabagh", " P. Najafiborazjani ", " A. Stavrou"]}, {"title": " \"Studying the effectiveness of application performance management (apm) tools for detecting performance regressions for web applications: An experience report\"", "authors": ["T. M. Ahmed", " C.-P. Bezemer", " T.-H. Chen", " A. E. Hassan ", " W. Shang"]}, {"title": " \"Application Performance Management: State of the art and challenges for the Future\"", "authors": ["C. Heger", " A. van Hoorn", " M. Mann ", " D. Okanovic"]}, {"title": " \"Exploiting Load Testing and Profiling for Performance Antipattern Detection\"", "authors": ["C. Trubiani", " A. Bran", " A. van Hoorn", " A. Avritzer ", " H. Knoche"]}, {"title": " \"Using Dynatrace Monitoring Data for Generating Performance Models of Java EE Applications\"", "authors": ["F. Willnecker", " A. Brunnert", " W. Gottesheim ", " H. Krcmar"]}, {"title": " \"Flowdroid: Precise context flow field object-sensitive and lifecycle-aware taint analysis for android apps\"", "authors": ["S. Arzt", " S. Rasthofer", " C. Fritz", " E. Bodden", " A. Bartel", " J. Klein", " ."]}, {"title": " \"Iccta: Detecting Inter-Component Privacy Leaks in Android Apps\"", "authors": ["L. Li", " A. Bartel", " T. F. Bissy", "\u00c1l\u2019", " J. Klein", " Y. L. Traon", " S. Arzt", " ."]}, {"title": " \"Mopeye: Opportunistic monitoring of per-app mobile network performance\"", "authors": ["D. Wu", " R. K. C. Chang", " W. Li", " E. K. T. Cheng ", " D. Gao"]}, {"title": " \"Is what you measure what you expect? factors affecting smartphone-based mobile network measurement\"", "authors": ["L. Xue", " X. Ma", " X. Luo", " L. Yu", " S. Wang ", " T. Chen"]}, {"title": " \"Appinsight: Mobile app performance monitoring in the wild\"", "authors": ["L. Ravindranath", " J. Padhye", " S. Agarwal", " R. Mahajan", " I. Obermiller ", " S. Shay"]}, {"title": " \"User interaction-based profiling system for android application tuning\"", "authors": ["S. Lee", " C. Yoon ", " H. Cha"]}, {"title": " \"Androidperf: A cross-layer profiling system for android applications\"", "authors": ["L. Xue", " C. Qian ", " X. Luo"]}, {"title": " \"Diagdroid: Android performance diagnosis via anatomizing asynchronous executions\"", "authors": ["Y. Kang", " Y. Zhou", " H. Xu ", " M. R. Lyu"]}]},
{"doi": "10.1109/ASE.2019.00070", "title": "Predicting Licenses for Changed Source Code", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Licenses", "Multiprotocol label switching", "Feature extraction", "Software systems", "Tools", "Java"], "abstract": "Open source software licenses regulate the circumstances under which software can be redistributed, reused and modified. Ensuring license compatibility and preventing license restriction conflicts among source code during software changes are the key to protect their commercial use. However, selecting the appropriate licenses for software changes requires lots of experience and manual effort that involve examining, assimilating and comparing various licenses as well as understanding their relationships with software changes. Worse still, there is no state-of-the-art methodology to provide this capability. Motivated by this observation, we propose in this paper Automatic License Prediction (ALP), a novel learning-based method and tool for predicting licenses as software changes. An extensive evaluation of ALP on predicting licenses in 700 open source projects demonstrate its effectiveness: ALP can achieve not only a high overall prediction accuracy (92.5% in micro F1 score) but also high accuracies across all license types.", "author": [{"name": "Xiaoyu Liu", "affiliation": "Southern Methodist University, Dallas, TX, USA"}, {"name": "LiGuo Huang", "affiliation": "Southern Methodist University, Dallas, TX, USA"}, {"name": "Jidong Ge", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China"}, {"name": "Vincent Ng", "affiliation": "Human Language Technology Research Institute, University of Texas at Dallas, Richardson, TX, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"License usage and changes: A large-scale study on GitHub\"", "authors": ["C. Vendome", " G. Bavota", " M. Di Penta", " M. Linares-V\u00e1squez", " D. German ", " D. Poshyvanyk"]}, {"title": " \"License integration patterns: Addressing license mismatches in component-based development\"", "authors": ["D. M. German ", " A. E. Hassan"]}, {"title": " \"Automated software license analysis\"", "authors": ["T. Tuunanen", " J. Koskinen ", " T. K\u00e4rkk\u00e4inen"]}, {"title": " \"A sentence-matching method for automatic license identification of source code files\"", "authors": ["D. M. German", " Y. Manabe ", " K. Inoue"]}, {"title": " \"Identifying licensing of jar archives using a code-search approach\"", "authors": ["M. Di Penta", " D. M. German ", " G. Antoniol"]}, {"title": " \"Machine learning-based detection of open source license exceptions\"", "authors": ["C. Vendome", " M. Linares-V\u00e1squez", " G. Bavota", " M. Di Penta", " D. German ", " D. Poshyvanyk"]}, {"title": " \"A coefficient of agreement for nominal scales\"", "authors": ["J. Cohen"]}, {"title": " \"Understanding interobserver agreement: The Kappa statistic\"", "authors": ["A. J. Viera", " J. M. Garrett ."]}, {"title": " \"Understanding and auditing the licensing of open source software distributions\"", "authors": ["D. M. German", " M. Di Penta ", " J. Davies"]}, {"title": " \"The Stanford CoreNLP natural language processing toolkit\"", "authors": ["C. Manning", " M. Surdeanu", " J. Bauer", " J. Finkel", " S. Bethard ", " D. McClosky"]}, {"title": " \"Practical very large scale CRFs\"", "authors": ["T. Lavergne", " O. Capp\u00e9 ", " F. Yvon"]}, {"title": " \"Error bounds for convolutional codes and an asymptotically optimum decoding algorithm\"", "authors": ["A. Viterbi"]}, {"title": " \"LIBSVM: A library for support vector machines\"", "authors": ["C.-C. Chang ", " C.-J. Lin"]}, {"title": " \"Significant and highly significant\"", "authors": ["D. A. Miller"]}, {"title": " \"Dominance statistics: Ordinal analyses to answer ordinal questions\"", "authors": ["N. Cliff"]}, {"title": " \"Appropriate statistics for ordinal level data: Should we really be using t-test and Cohens d for evaluating group differences on the NSSE and other surveys\"", "authors": ["J. Romano", " J. D. Kromrey", " J. Coraggio ", " J. Skowronek"]}, {"title": " \"An exploratory study of the evolution of software licensing\"", "authors": ["M. Di Penta", " D. M. German", " Y.-G. Gu\u00e9h\u00e9neuc ", " G. Antoniol"]}, {"title": " \"A dual model of open source license growth\"", "authors": ["G. Hofmann", " D. Riehle", " C. Kolassa ", " W. Mauerer"]}, {"title": " \"Impacts of license choice and organizational sponsorship on user interest and development activity in open source software projects\"", "authors": ["K. J. Stewart", " A. P. Ammeter ", " L. M. Maruping"]}, {"title": " \"Software licenses in context: The challenge of heterogeneously-licensed systems\"", "authors": ["T. A. Alspaugh", " W. Scacchi ", " H. U. Asuncion"]}, {"title": " \"On the detection of licenses violations in the Android ecosystem\"", "authors": ["O. Mlouki", " F. Khomh ", " G. Antoniol"]}, {"title": " \"Code siblings: Technical and legal implications of copying code between applications\"", "authors": ["D. M. German", " M. Di Penta", " Y.-G. Gueheneuc ", " G. Antoniol"]}, {"title": " \"Evolutional analysis of licenses in FOSS\"", "authors": ["Y. Manabe", " Y. Hayase ", " K. Inoue"]}, {"title": " \"A method to detect license inconsistencies in large-scale open source projects\"", "authors": ["Y. Wu", " Y. Manabe", " T. K", "a", " D. M. German ", " K. Inoue"]}, {"title": " \"When and why developers adopt and change software licenses\"", "authors": ["C. Vendome", " M. Linares-V\u00e1squez", " G. Bavota", " M. Di Penta", " D. M. German ", " D. Poshyvanyk"]}]},
{"doi": "10.1109/ASE.2019.00071", "title": "Empirical Evaluation of the Impact of Class Overlap on Software Defect Prediction", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software", "Measurement", "Predictive models", "Cleaning", "NASA", "Data models", "Training data"], "abstract": "Software defect prediction (SDP) utilizes the learning models to detect the defective modules in project, and their performance depends on the quality of training data. The previous researches mainly focus on the quality problems of class imbalance and feature redundancy. However, training data often contains some instances that belong to different class but have similar values on features, and this leads to class overlap to affect the quality of training data. Our goal is to investigate the impact of class overlap on software defect prediction. At the same time, we propose an improved K-Means clustering cleaning approach (IKMCCA) to solve both the class overlap and class imbalance problems. Specifically, we check whether K-Means clustering cleaning approach (KMCCA) or neighborhood cleaning learning (NCL) or IKMCCA is feasible to improve defect detection performance for two cases (i) within-project defect prediction (WPDP) (ii) cross-project defect prediction (CPDP). To have an objective estimate of class overlap, we carry out our investigations on 28 open source projects, and compare the performance of state-of-the-art learning models for the above-mentioned cases by using IKMCCA or KMCCA or NCL VS. without cleaning data. The experimental results make clear that learning models obtain significantly better performance in terms of balance, Recall and AUC for both WPDP and CPDP when the overlapping instances are removed. Moreover, it is better to consider both class overlap and class imbalance.", "author": [{"name": "Lina Gong", "affiliation": "School of Computer Science and Technology, China University of Mining and Technology, Xuzhou, China"}, {"name": "Shujuan Jiang", "affiliation": "School of Computer Science and Technology, China University of Mining and Technology, Xuzhou, China"}, {"name": "Rongcun Wang", "affiliation": "School of Computer Science and Technology, China University of Mining and Technology, Xuzhou, China"}, {"name": "Li Jiang", "affiliation": "School of Computer Science and Technology, China University of Mining and Technology, Xuzhou, China"}], "time": "Nov. 2019", "citationCount": "2", "references": [{"title": " \"Learning from open-source projects: An empirical study on defect prediction\"", "authors": ["H. Zhimin", " P. Fayola", " M. T ", " Y. Ye"]}, {"title": " \"An investigation on the feasibility of cross-project defect prediction\"", "authors": ["H. Zhimin", " S. Fengdi", " Y. Ye", " L. Mingshu ", " W. Qing"]}, {"title": " \"Sample-based software defect prediction with active and semi-supervised learning\"", "authors": ["L. Ming", " Z. Hongyu", " W. Rongxin ", " Z. Zhihua"]}, {"title": " \"Transfer learning for cross-company software defect prediction\"", "authors": ["M. Ying", " L. Guangchun", " Z. Xue ", " C. Aiguo"]}, {"title": " \"Local vs. global models for effort estimation and defect prediction\"", "authors": ["T. Menzies", " A. Butcher", " A. Marcus", " T. Zimmermann ", " D. Cok"]}, {"title": " \"Transfer defect learning\"", "authors": ["J. Nam", " Sinno", " J. Pan ", " S. Kim"]}, {"title": " \"On the relative value of cross-company and within-company data for defect prediction\"", "authors": ["B. Turhan", " T. Menzies", " B. Ayse ", " D. Justin"]}, {"title": " \"Adapting a fault prediction model to allow inter language reuse\"", "authors": ["S. Watanabe", " H. Kaiya ", " K. Kaijiri"]}, {"title": " \"Multi: Multi-objective effort-aware just-in-time software defect prediction\"", "authors": ["X. Chen", " Y. Zhao", " Q. Wang ", " Z. Yuan"]}, {"title": " \"Data quality: some comments on the nasa software defect datasets\"", "authors": ["M. Shepperd", " Q. Song ", " Z. Sun"]}, {"title": " \"Evaluating defect prediction approaches: a benchmark and an extensive comparison\"", "authors": ["D. Marco", " L. Michele ", " R. Romain"]}, {"title": " \"Relink: recovering links between bugs and changes\"", "authors": ["R. Wu", " H. Zhang", " S. Kim ", " S. Cheung"]}, {"title": " \"Clami: Defect prediction on unlabeled datasets\"", "authors": ["J. Nam ", " S. Kim"]}, {"title": " \"Researcher bias: the use of machine learning in software defect prediction\"", "authors": ["M. Shepperd", " D. Bowes ", " T. Hall"]}, {"title": " \"Feature selection for text categorization on imbalanced data\"", "authors": ["Z. Zheng", " X. Wu ", " R. Srihari"]}, {"title": " \"Tackling class overlap and imbalance problems in software defect prediction\"", "authors": ["L. Chen", " B. Fang", " Z. Shang ", " Y. Tang"]}, {"title": " \"Dictionary learning based software defect prediction\"", "authors": ["X. Jing", " S. Ying", " S. Wu ", " J. Liu"]}, {"title": " \"Defect prediction from static code features: current results limitations new approaches\"", "authors": ["T. Menzies", " Z. Milton", " B. Turhan", " B. Cukic", " Y. Jiang ", " A. Bener"]}, {"title": " \"Software defect prediction using feature selection and random forest algorithm\"", "authors": ["D. Ibrahim", " R. Ghnemat ", " A. Hudaib"]}, {"title": " \"Software component quality prediction using knn andfuzzy logic\"", "authors": ["L. Hribar ", " D. Duka"]}, {"title": " \"Cost-sensitive feature selection with application in software defect prediction\"", "authors": ["L. Miao", " M. Liu ", " D. ZHang"]}, {"title": " \"A systematic review of machine learning techniques for software fault prediction\"", "authors": ["R. Malhotra"]}, {"title": " \"Cross-project defect prediction models: L\u2019union fait la force\"", "authors": ["A. Panichella", " R. Oliveto ", " L. AD"]}, {"title": " \"A comparative study to benchmark cross-project defect prediction approaches\"", "authors": ["S. Herbold ", " J. Grabowski"]}, {"title": " \"How far we have progressed in the journey? an examination of cross-project defect prediction\"", "authors": ["Y. Zhou", " Y. Yang", " H. Lu", " L. Chen", " Y. Li ", " Y. Zhao"]}, {"title": " \"On the relative value of cross-company and within-company data for defect prediction\"", "authors": ["B. Turhan", " A. Bener ", " J. Stefano"]}, {"title": " \"Negative samples reduction in cross-company software defects prediction\"", "authors": ["L. Chen", " B. Fang", " Z. Shang ", " Y. Tang"]}, {"title": " \"Empirical evaluation of the effects of mixed project data on learning defect predictors\"", "authors": ["B. Turhan", " A. Misirli ", " A. Bener"]}, {"title": " \"Value-cognitive boosting with a support vector machine for cross-project defect prediction\"", "authors": ["D. Ryu ", " J. Baik"]}, {"title": " \"Hydra: Massively compositional model for cross-project defect prediction\"", "authors": ["X. Xia", " D. Lo", " S. Pan ", " N. Nagappan"]}, {"title": " \"Exploiting the essential assumptions of analogy-based effort estimation\"", "authors": ["E. Kocaguneli", " T. Menzies", " A. Bener ", " J. Keung"]}, {"title": " \"Noise identification with the kmeans algorithm\"", "authors": ["T. Tang ", " W amd Khoshhgoftaar"]}, {"title": " \"Dealing with noise in defect prediction\"", "authors": ["S. Kim", " T. Zimmemann ", " A. Zeller"]}, {"title": " \"Better cross company defect prediction\"", "authors": ["F. Peters", " T. Menzies ", " A. Marcus"]}, {"title": " \"When do changes induce fixes?\"", "authors": ["J. Sliwerski", " T. Zimmermann ", " A. Zeller"]}, {"title": " \"The meaning and use of the area under a receiver operating characteristic (roc) curve\"", "authors": ["J. A Hanley ", " B. J McNeil"]}, {"title": " \"Evaluating defect prediction approaches: a benchmark and an extensive comparison\"", "authors": ["D. Marco", " L. Michele ", " R. Romain"]}, {"title": " \"A comparative study to benchmark cross-project defect prediction approaches\"", "authors": ["H. Steffen", " T. Alex", "er "]}, {"title": " \"Cliff\u2019s delta calculator: A non-parametric effect size program for two groups of observations\"", "authors": ["G. Macbeth", " E. Razumiejczyk ", " R. Ledesma"]}]},
{"doi": "10.1109/ASE.2013.6693058", "title": "BOOM: Experiences in language and tool design for distributed systems (keynote)", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": [], "abstract": "With the rapid expansion of cloud infrastructure and mobile devices, distributed systems have quickly emerged as a dominant computing platform. Distributed systems bring significant complexity to programming, due to platform issues including asynchrony, concurrency, and partial failure. Meanwhile, scalable distributed infrastructure\u2014notably \u201cNoSQL\u201d systems\u2014have put additional burdens on programmers by sacrificing traditional infrastructure contracts like linearizable or transactional I/O in favor of high availability. A growing segment of the developer community needs to deal with these issues today, and for the most part developers are still using languages and tools designed for sequential computation on tightly coupled architectures. This has led to software that is increasingly hard to test and hard to trust. Over the past 5 years, the BOOM project at Berkeley has focused on making it easier to write correct and maintainable code for distributed systems. Our work has taken a number of forms, including the development of the Bloom programming language for distributed systems, tools for testing and checking distributed programs, and the CALM Theorem, which connects programmer level concerns of determinism to system-level concerns about the need for distributed coordination. This talk will reflect on this work, and highlight opportunities for improved collaboration between the software engineering and distributed systems research communities.", "author": [{"name": "Joseph M. Hellerstein", "affiliation": "University of California at Berkeley, USA"}], "time": "Nov. 2013", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00072", "title": "Combining Program Analysis and Statistical Language Model for Code Statement Completion", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Task analysis", "Lenses", "Semantics", "Analytical models", "Programming", "Faces"], "abstract": "Automatic code completion helps improve developers' productivity in their programming tasks. A program contains instructions expressed via code statements, which are considered as the basic units of program execution. In this paper, we introduce AutoSC, which combines program analysis and the principle of software naturalness to fill in a partially completed statement. AutoSC benefits from the strengths of both directions, in which the completed code statement is both frequent and valid. AutoSC is first trained on a large code corpus to derive the templates of candidate statements. Then, it uses program analysis to validate and concretize the templates into syntactically and type-valid candidate statements. Finally, these candidates are ranked by using a language model trained on the lexical form of the source code in the code corpus. Our empirical evaluation on the large datasets of real-world projects shows that AutoSC achieves 38.9-41.3% top-1 accuracy and 48.2-50.1% top-5 accuracy in statement completion. It also outperforms a state-of-the-art approach from 9X-69X in top-1 accuracy.", "author": [{"name": "Son Nguyen", "affiliation": "Computer Science Department, The University of Texas at Dallas, USA"}, {"name": "Tien Nguyen", "affiliation": "The University of Texas at Dallas"}, {"name": "Yi Li", "affiliation": "Department of Informatics, New Jersey Institute of Technology, USA"}, {"name": "Shaohua Wang", "affiliation": "Department of Informatics, New Jersey Institute of Technology, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Learning from examples to improve code completion systems\"", "authors": ["Marcel Bruch", " Martin Monperrus ", " Mira Mezini"]}, {"title": " \"Enabling static analysis for partial java programs\"", "authors": ["Barth\u00e9l\u00e9my Dagenais ", " Laurie Hendren"]}, {"title": " \"A deep language model for software code\"", "authors": ["Hoa Khanh Dam", " Truyen Tran ", " Trang Pham"]}, {"title": " \"Automatic method completion\"", "authors": ["Rosco Hill ", " Joe Rideout"]}, {"title": " \"On the naturalness of software\"", "authors": ["Abram Hindle", " Earl T. Barr", " Su Zhendong", " Mark Gabel ", " Premkumar Devanbu"]}, {"title": " \"Using structural context to recommend source code examples\"", "authors": ["Reid Holmes ", " Gail C. Murphy"]}, {"title": " \"An evaluation of the strategies of sorting filtering and grouping API methods for code completion\"", "authors": ["Daqing Hou ", " David M. Pletcher"]}, {"title": " \"Using task context to improve programmer productivity\"", "authors": ["Mik Kersten ", " Gail C. Murphy"]}, {"title": " \"Manning and Hinrich Schutze\"", "authors": ["D. Christopher"]}, {"title": " \"A deep neural network language model with contexts for source code\"", "authors": ["A. T. Nguyen", " T. D. Nguyen", " H. D. Phan ", " T. N. Nguyen"]}, {"title": " \"Graph-based statistical language model for code\"", "authors": ["Anh Tuan Nguyen ", " Tien N. Nguyen"]}, {"title": " \"Graph-based pattern-oriented context-sensitive source code completion\"", "authors": ["Anh Tuan Nguyen", " Tung Thanh Nguyen", " Hoan Anh Nguyen", " Ahmed Tamrawi", " Hung Viet Nguyen", " Jafar Al-Kofahi", " ."]}, {"title": " \"A statistical semantic language model for source code\"", "authors": ["Tung Thanh Nguyen", " Anh Tuan Nguyen", " Hoan Anh Nguyen ", " Tien N. Nguyen"]}, {"title": " \"Active code completion\"", "authors": ["Cyrus Omar", " YoungSeok Yoon", " Thomas D. LaToza ", " Brad A. Myers"]}, {"title": " \"Code completion with statistical language models\"", "authors": ["Veselin Raychev", " Martin Vechev ", " Eran Yahav"]}, {"title": " \"How program history can improve code completion\"", "authors": ["R. Robbes ", " M. Lanza"]}, {"title": " \"On the localness of software\"", "authors": ["Tu Zhaopeng", " Su Zhendong ", " Premkumar Devanbu"]}, {"title": " \"Toward deep learning software repositories\"", "authors": ["Martin White", " Christopher Vendome", " Mario Linares-Vasquez ", " Denys Poshyvanyk"]}, {"title": " \"A language model for statements of software code\"", "authors": ["Yixiao Yang", " Yu Jiang", " Gu Ming", " Jiaguang Sun", " Jian Gao ", " Han Liu"]}, {"title": " \"Automatic parameter recommendation for practical API usage\"", "authors": ["Cheng Zhang", " Juyuan Yang", " Yi Zhang", " Jing Fan", " Xin Zhang", " Jianjun Zhao", " ."]}, {"title": " \"MAPO: Mining and Recommending API Usage Patterns\"", "authors": ["Hao Zhong", " Tao Xie", " Lu Zhang", " Jian Pei ", " Hong Mei"]}]},
{"doi": "10.1109/ASE.2013.6693059", "title": "The challenges of verification and validation of automated planning systems (keynote)", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": [], "abstract": "Mission planning is central to space mission operations, and has benefited from advances in model-based planning software. A model is a description of the objects, actions, constraints and preferences that the planner reasons over to generate plans. Developing, verifying and validating a planning model is, however, a difficult task. Mission planning constraints and preferences arise from many sources, including simulators and engineering specification documents. As mission constraints evolve, planning domain modelers must add and update model constraints efficiently using the available source data, catching errors quickly, and correcting the model. The consequences of erroneous models are very high, especially in the space operations environment. We first describe the space operations environment, particularly the role of the mission planning system. We then describe model-based planning, and briefly review the current state of the practice in designing model-based mission planning tools and the challenges facing model developers. We then describe an Interactive Model Development Environment (IMDE) approach to developing mission planning systems. This approach integrates modeling and simulation environments to reduce model editing time, generate simulations automatically to evaluate plans, and identify modeling errors automatically by evaluating simulation output. The IMDE approach was tested on a small subset of the Lunar Atmosphere and Dust Environment Explorer (LADEE) flight software to demonstrate how to develop the LADEE mission planning system.", "author": [{"name": "Jeremy Frank", "affiliation": "NASA Ames Research Center, USA"}], "time": "Nov. 2013", "citationCount": 0, "references": []},
{"doi": "10.1109/ASE.2019.00073", "title": "MAP-Coverage: A Novel Coverage Criterion for Testing Thread-Safe Classes", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Concurrent computing", "Instruction sets", "Programming", "Guidelines", "Test pattern generators"], "abstract": "Concurrent programs must be thoroughly tested, as concurrency bugs are notoriously hard to detect. Code coverage criteria can be used to quantify the richness of a test suite (e.g., whether a program has been tested sufficiently) or provide practical guidelines on test case generation (e.g., as objective functions used in program fuzzing engines). Traditional code coverage criteria are, however, designed for sequential programs and thus ineffective for concurrent programs. In this work, we introduce a novel code coverage criterion for testing thread-safe classes called MAP-coverage (short for memory-access patterns). The motivation is that concurrency bugs are often correlated with certain memory-access patterns, and thus it is desirable to comprehensively cover all memory-access patterns. Furthermore, we propose a testing method for maximizing MAP-coverage. Our method has been implemented as a self-contained toolkit, and the experimental results on 20 benchmark programs show that our toolkit outperforms existing testing methods. Lastly, we show empirically that there exists positive correlation between MAP-coverage and the effectiveness of a set of test executions.", "author": [{"name": "Zan Wang", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Yingquan Zhao", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Shuang Liu", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Jun Sun", "affiliation": "School of Information Systems, Singapore Management University"}, {"name": "Xiang Chen", "affiliation": "School of Information Science and Technology, Nantong University, China"}, {"name": "Huarui Lin", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Fundamental statistics in psychology and education\"", "authors": ["J B. Stroud"]}, {"title": " \"A survey of recent trends in testing concurrent software systems\"", "authors": ["Francesco Adalberto Bianchi", " Aless", "ro Margara "]}, {"title": " \"Applications of synchronization coverage\"", "authors": ["Arkady Bron", " Eitan Farchi", " Yonit Magid", " Yarden Nir ", " Shmuel Ur"]}, {"title": " \"A randomized scheduler with probabilistic guarantees of finding bugs\"", "authors": ["Sebastian Burckhardt", " Pravesh Kothari", " Madanlal Musuvathi ", " Santosh Nagarakatte"]}, {"title": " \"Efficient and precise datarace detection for multithreaded object-oriented programs\"", "authors": ["Jong-Deok Choi", " Keunwoo Lee", " Alexey Loginov", " Robert O\u2019 Callahan", " Vivek Sarkar ", " Manu Sridharan"]}, {"title": " \"Efficient detection of thread safety violations via coverage-guided generation of concurrent tests\"", "authors": ["Ankit Choudhary", " Shan Lu ", " Michael Pradel"]}, {"title": " \"Goldilocks: a race and transaction-aware Java runtime\"", "authors": ["Tayfun Elmas", " Shaz Qadeer ", " Serdar Tasiran"]}, {"title": " \"RacerX: effective static detection of race conditions and deadlocks\"", "authors": ["Dawson Engler ", " Ken Ashcraft"]}, {"title": " \"FastTrack: efficient and precise dynamic race detection\"", "authors": ["Cormac Flanagan ", " Stephen N. Freund"]}, {"title": " \"Extended static checking for Java\"", "authors": ["Cormac Flanagan", " K. Rustan M. Leino", " Mark Lillibridge", " Greg Nelson", " James B. Saxe ", " Raymie Stata"]}, {"title": " \"Guidelines for coverage-based comparisons of non-adequate test suites\"", "authors": ["Milos Gligoric", " Alex Groce", " Chaoqiang Zhang", " Rohan Sharma", " Mohammad Amin Alipour ", " Darko Marinov"]}, {"title": " \"Testing concurrent programs to achieve high synchronization coverage\"", "authors": ["Shin Hong", " Jaemin Ahn", " Sangmin Park", " Moonzoo Kim ", " Mary Jean Harrold"]}, {"title": " \"Debugging concurrent software: Advances and challenges\"", "authors": ["Jeff Huang ", " Charles Zhang"]}, {"title": " \"Coverage is not strongly correlated with test suite effectiveness\"", "authors": ["Laura Inozemtseva ", " Reid Holmes"]}, {"title": " \"A randomized dynamic program analysis technique for detecting real deadlocks\"", "authors": ["Pallavi Joshi", " Chang-Seo Park", " Koushik Sen ", " Mayur Naik"]}, {"title": " \"A new measure of rank correlation\"", "authors": ["Maurice G. Kendall"]}, {"title": " \"Coverage metrics for saturation-based and search-based testing of concurrent software\"", "authors": ["Bohuslav Krena", " Zdenek Letko ", " Tomas Vojnar"]}, {"title": " \"Time clocks and the ordering of events in a distributed system\"", "authors": ["Leslie Lamport"]}, {"title": " \"Wei. Pfix: Fixing concurrency bugs based on memory access patterns\"", "authors": ["Huarui Lin", " Zan Wang", " Shuang Liu", " Jun Sun", " Dongdi Zhang ", " Guangning"]}, {"title": " \"Towards using concurrent java api correctly\"", "authors": ["Shuang Liu", " Guangdong Bai", " Jun Sun ", " Jin Song Dong"]}, {"title": " \"Racechecker: efficient identification of harmful data races\"", "authors": ["Kai Lu", " Zhendong Wu", " Xiaoping Wang", " Chen Chen ", " Xu Zhou"]}, {"title": " \"Detecting data races using dynamic escape analysis based on read barrier\"", "authors": ["Hiroyasu Nishiyama"]}, {"title": " \"Feedback-Directed Random Test Generation\"", "authors": ["Carlos Pacheco", " Shuvendu K. Lahiri", " Michael D. Ernst ", " Thomas Ball"]}, {"title": " \"Randomized active atomicity violation detection in concurrent programs\"", "authors": ["Chang-Seo Park ", " Koushik Sen"]}, {"title": " \"UNICORN: a unified approach for localizing non-deadlock concurrency bugs\"", "authors": ["Sangmin Park", " Richard W. Vuduc ", " Mary Jean Harrold"]}, {"title": " \"Notes on the history of correlation\"", "authors": ["Karl Pearson"]}, {"title": " \"Online data-race detection via coherency guarantees\"", "authors": ["Dejan Perkovic ", " Peter J Keleher"]}, {"title": " \"Multirace: efficient on-the-fly data race detection in multithreaded C++ programs\"", "authors": ["Eli Pozniansky ", " Assaf Schuster"]}, {"title": " \"Fully automatic and precise detection of thread safety violations\"", "authors": ["Michael Pradel ", " Thomas R. Gross"]}, {"title": " \"Synthesizing racy tests\"", "authors": ["Malavika Samak", " Murali Krishna Ramanathan ", " Suresh Jagannathan"]}, {"title": " \"Eraser: A dynamic data race detector for multithreaded programs\"", "authors": ["Stefan Savage", " Michael Burrows", " Greg Nelson", " Patrick Sobalvarro ", " Thomas Anderson"]}, {"title": " \"Effective random testing of concurrent programs\"", "authors": ["Koushik Sen"]}, {"title": " \"Race directed random testing of concurrent programs\"", "authors": ["Koushik Sen"]}, {"title": " \"Coverage metrics for requirements-based testing: Evaluation of effectiveness\"", "authors": ["Matt Staats", " Michael W. Whalen", " Ajitha Rajan ", " Mats Per Erik Heimdahl"]}, {"title": " \"Generating unit tests for concurrent classes\"", "authors": ["Sebastian Steenbuck ", " Gordon Fraser"]}, {"title": " \"Structural testing of concurrent programs\"", "authors": ["Richard N. Taylor", " David L. Levine ", " Cheryl D. Kelly"]}, {"title": " \"Coverage-driven test code generation for concurrent classes\"", "authors": ["Valerio Terragni ", " Shing-Chi Cheung"]}, {"title": " \"Associating synchronization constraints with data in an object-oriented language\"", "authors": ["M", "ana Vaziri", " Frank Tip ", " Julian Dolby"]}, {"title": " \"Object race detection\"", "authors": ["Christoph von Praun ", " Thomas R. Gross"]}, {"title": " \"Static conflict analysis for multi-threaded object-oriented programs\"", "authors": ["Christoph von Praun ", " Thomas R. Gross"]}, {"title": " \"Coverage guided systematic concurrency testing\"", "authors": ["Chao Wang", " Mahmoud Said ", " Aarti Gupta"]}, {"title": " \"All-dupath coverage for parallel programs\"", "authors": ["D. Yang Cheer-Sun", " Amie L. Souter ", " Lori L. Pollock"]}, {"title": " \"Racetrack: efficient detection of data race conditions via adaptive tracking\"", "authors": ["Yuan Yu", " Tom Rodeheffer ", " Wei Chen"]}, {"title": " \"Software unit test coverage and adequacy\"", "authors": ["Hong Zhu", " A. V. Hall Patrick ", " H. R. May. John"]}]},
{"doi": "10.1109/ASEW.2015.16", "title": "Probabilistic Quality Models to Improve Communication and Actionability", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Measurement", "Aggregates", "Computational modeling", "Probability density function", "Couplings", "Complexity theory", "Software quality"], "abstract": "We need to aggregate metric values to make quality assessment actionable. However, due to properties of metric values, i.e., unknown distributions and different measurement scales, they are difficult to aggregate. We present and evaluate a method to aggregate metric values based on observed numerical distributions that are converted into cumulative density functions. We use these to determine the probability of each metric and file, and aggregate these. Our limited study suggests that the method improves correctness, communication, and the ability to take action. However, more evaluation is required.", "author": [{"name": "Morgan Ericsson", "affiliation": "Dept. of Computer Science, Linnaeus University, V\u00e4xj\u00f6 and Kalmar, Sweden"}, {"name": "Welf L\u00f6we", "affiliation": "Dept. of Computer Science, Linnaeus University, V\u00e4xj\u00f6 and Kalmar, Sweden"}, {"name": "Anna Wingkvist", "affiliation": "Dept. of Computer Science, Linnaeus University, V\u00e4xj\u00f6 and Kalmar, Sweden"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"Software measurement: a necessary scientific basis\"", "authors": ["N. Fenton"]}, {"title": " \"Power law distributions in class relationships\"", "authors": ["R. Wheeldon ", " S. Counsell"]}, {"title": " \"Software modeling studies\"", "authors": ["A. Laemmel ", " M. Shooman"]}, {"title": " \"Understanding the shape of Java software\"", "authors": ["G. Baxter", " M. Frean", " J. Noble", " M. Rickerby", " H. Smith", " M. Visser", " ."]}, {"title": " \"A study of the effect of data normalization on software and information quality assessment\"", "authors": ["M. Ericsson", " W. L\u00f6we", " T. Olsson", " D. Toll ", " A. Wingkvist"]}, {"title": " \"A method to test the information quality of technical documentation on websites\"", "authors": ["O. Shpak", " W. L\u00f6we", " A. Wingkvist ", " M. Ericsson"]}, {"title": " \"Fine-grained recording of student programming sessions to improve teaching and time estimations\"", "authors": ["D. Toll", " T. Ohlsson", " M. Ericsson ", " A. Wingkvist"]}]},
{"doi": "10.1109/ASE.2013.6693060", "title": "Big problems in industry (panel)", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": [], "abstract": "Software Engineering in practice deals with scale in a variety of dimensions. We build large scale systems operating on vast amount of data. We have millions of customers with billions of queries and transactions. We have distributed teams making thousands of changes, running millions of tests and releasing multiple times per day. These dimensions of scale interact to provide challenges for software development tools and processes. The panelists will describe the challenging aspects of scale in their specific problem domains and discuss which software engineering methods work and which leave room for improvement.", "author": [{"name": "John Penix", "affiliation": "Google, USA"}], "time": "Nov. 2013", "citationCount": "1", "references": []},
{"doi": "10.1109/ASE.2019.00074", "title": "Automating Non-Blocking Synchronization In Concurrent Data Abstractions", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Synchronization", "Data structures", "Instruction sets", "C++ languages", "Programming", "Springs"], "abstract": "This paper investigates using compiler technology to automatically convert sequential C++ data abstractions, e.g., queues, stacks, maps, and trees, to concurrent lock-free implementations. By automatically tailoring a number of state-of-the-practice synchronization methods to the underlying sequential implementations of different data structures, our automatically synchronized code can attain performance competitive to that of manually-written concurrent data structures by experts and much better performance than heavier-weight support by software transactional memory (STM).", "author": [{"name": "Jiange Zhang", "affiliation": "University of Colorado at Colorado Springs, CO, USA"}, {"name": "Qing Yi", "affiliation": "University of Colorado at Colorado Springs, CO, USA"}, {"name": "Damian Dechev", "affiliation": "University of Central Florida Orlando, FL, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Solution of a problem in concurrent programming control\"", "authors": ["E. W. Dijkstra"]}, {"title": " \"Empirical studies of competitve spinning for a shared-memory multiprocessor\"", "authors": ["A. Karlin", " K. Li", " M. Manasse ", " S. Owicki"]}, {"title": " \"Algorithms for scalable synchronization on shared-memory multiprocessors\"", "authors": ["J. M. Mellor-Crummey ", " M. L. Scott"]}, {"title": " \"Nonblocking algorithms and preemption-safe locking on multiprogrammed shared memory multiprocessors\"", "authors": ["M. M. Michael ", " M. L. Scott"]}, {"title": " \"Simple fast and practical non-blocking and blocking concurrent queue algorithms\"", "authors": ["M. M. Michael ", " M. L. Scott"]}, {"title": " \"Obstruction-free synchronization: Double-ended queues as an example\"", "authors": ["M. Herlihy", " V. Luchangco ", " M. Moir"]}, {"title": " \"A lazy concurrent list-based set algorithm\"", "authors": ["V. L. M. M. W. N. S. I. Steve Heller", " Maurice Herlihy ", " N. Shavit"]}, {"title": " \"Safe memory reclamation for dynamic lockfree objects using atomic reads and writes\"", "authors": ["M. M. Michael"]}, {"title": " \"Transactional predication: High-performance concurrent sets and maps for stm\"", "authors": ["N. G. Bronson", " J. Casper", " H. Chafi ", " K. Olukotun"]}, {"title": " \"Concurrent programming without locks\"", "authors": ["K. Fraser ", " T. Harris"]}, {"title": " \"Nonblocking binary search trees\"", "authors": ["F. Ellen", " P. Fatourou", " E. Ruppert ", " F. van Breugel"]}, {"title": " \"A contention-friendly binary search tree\" in Euro-Par 2013 Parallel Processing", "authors": ["T. Crain", " V. Gramoli ", " M. Raynal"]}, {"title": " \"Concurrent updates with rcu: Search tree as an example\"", "authors": ["M. Arbel ", " H. Attiya"]}, {"title": " \"Software transactional memory\"", "authors": ["N. Shavit ", " D. Touitou"]}, {"title": " \"III Software transactional memory for dynamic-sized data structures\"", "authors": ["M. Herlihy", " V. Luchangco", " M. Moir ", " W. N. Scherer"]}, {"title": " \"Composable memory transactions\"", "authors": ["T. Harris", " S. Marlow", " S. Peyton-Jones ", " M. Herlihy"]}, {"title": " \"Adaptive software transactional memory\"", "authors": ["V. J. Marathe", " W. N. Scherer ", " M. L. Scott"]}, {"title": " \"Read-copy-update: Using execution history to solve concurrency problems\"", "authors": ["P. E. McKenney ", " J. D. Slingwine"]}, {"title": " \"Read-logupdate: A lightweight synchronization mechanism for concurrent programming\"", "authors": ["A. Matveev", " N. Shavit", " P. Felber ", " P. Marlier"]}, {"title": " \"A methodology for implementing highly concurrent data objects\"", "authors": ["M. Herlihy"]}, {"title": " \"Jr. Lock-free reference counting\"", "authors": ["D. L. Detlefs", " P. A. Martin", " M. Moir ", " G. L. Steele"]}, {"title": " \"Efficient and reliable lock-free memory reclamation based on reference counting\"", "authors": ["A. Gidenstam", " M. Papatriantafilou", " H. Sundell ", " P. Tsigas"]}, {"title": " \"Understanding and effectively preventing the aba problem in descriptor-based lock-free designs\"", "authors": ["D. Dechev", " P. Pirkelbauer ", " B. Stroustrup"]}, {"title": " \"POET: A scripting language for applying parameterized source-to-source program transformations\"", "authors": ["Q. Yi"]}, {"title": " \"Annotating user-defined abstractions for optimization\"", "authors": ["D. Quinlan", " M. Schordan", " R. Vuduc ", " Q. Yi"]}, {"title": " \"Lowering the overhead of nonblocking software transactional memory\"", "authors": ["V. J. Marathe", " M. F. Spear", " C. Heriot", " A. Acharya", " D. Eisenstat", " W. N. Scherer", " ."]}, {"title": " \"Flat combining and the synchronization-parallelism tradeoff\"", "authors": ["D. Hendler", " I. Incze", " N. Shavit ", " M. Tzafrir"]}, {"title": " \"A highly-efficient waitfree universal construction\"", "authors": ["P. Fatourou ", " N. D. Kallimanis"]}, {"title": " \"An efficient lock-free logarithmic search data structure based on multi-dimensional list\"", "authors": ["D. Zhang ", " D. Dechev"]}, {"title": " \"Mv-rlu: Scaling read-log-update with multiversioning\"", "authors": ["J. Kim", " A. Mathew", " S. Kashyap", " M. K. Ramanathan ", " C. Min"]}, {"title": " \"Wait-free synchronization\"", "authors": ["M. Herlihy"]}, {"title": " \"Locking without blocking: Making lock based concurrent data structure algorithms nonblocking\"", "authors": ["J. Turek", " D. Shasha ", " S. Prakash"]}, {"title": " \"Wait-free made fast\"", "authors": ["Y. Afek", " D. Dauber ", " D. Touitou"]}, {"title": " \"Reagents: Expressing and composing fine-grained concurrency\"", "authors": ["A. Turon"]}, {"title": " \"Predicate rcu: An rcu for scalable concurrent updates\"", "authors": ["M. Arbel ", " A. Morrison"]}, {"title": " \"Speculative synchronization: Applying thread-level speculation to explicitly parallel applications\"", "authors": ["J. F. Mart\u00ednez ", " J. Torrellas"]}, {"title": " \"Transactional memory: Architectural support for lock-free data structures\"", "authors": ["M. Herlihy ", " J. E. B. Moss"]}, {"title": " \"Haswell: The fourth-generation intel core processor\"", "authors": ["P. Hammarlund", " A. J. Martinez", " A. A. Bajwa", " D. L. Hill", " E. Hallnor", " H. Jiang", " ."]}, {"title": " \"Evaluation of amd\u2019s advanced synchronization facility within a complete transactional memory stack\"", "authors": ["D. Christie", " J.-W. Chung", " S. Diestelhorst", " M. Hohmuth", " M. Pohlack", " C. Fetzer", " ."]}, {"title": " \"Software transactional memory\"", "authors": ["N. Shavit ", " D. Touitou"]}, {"title": " \"Language support for lightweight transactions\"", "authors": ["T. Harris ", " K. Fraser"]}, {"title": " \"Transactional monitors for concurrent objects\"", "authors": ["A. Welc", " S. Jagannathan ", " A. L. Hosking"]}, {"title": " \"Transparent support for wait-free transactions\"", "authors": ["M. Moir"]}, {"title": " \"Mcrt-stm: A high performance software transactional memory system for a multi-core runtime\"", "authors": ["B. Saha", " A.-R. Adl-Tabatabai", " R. L. Hudson", " C. C. Minh ", " B. Hertzberg"]}, {"title": " \"Advanced contention management for dynamic software transactional memory\"", "authors": ["W. N. Scherer ", " M. L. Scott"]}, {"title": " \"Understanding tradeoffs in software transactional memory\"", "authors": ["D. Dice ", " N. Shavit"]}, {"title": " \"Refactoring sequential java code for concurrency via concurrent libraries\"", "authors": ["D. Dig", " J. Marrero ", " M. D. Ernst"]}, {"title": " \"Automated concurrency-bug fixing\"", "authors": ["G. Jin", " W. Zhang", " D. Deng", " B. Liblit ", " S. Lu"]}, {"title": " \"Efficient synthesis for concurrency by semanticspreserving transformations\"", "authors": ["P. \u0106ern\u00fd", " T. A. Henzinger", " A. Radhakrishna", " L. Ryzhyk ", " T. Tarrach"]}, {"title": " \"Pfix: Fixing concurrency bugs based on memory access patterns\"", "authors": ["H. Lin", " Z. Wang", " S. Liu", " J. Sun", " D. Zhang ", " G. Wei"]}, {"title": " \"Sketching concurrent data structures\"", "authors": ["A. Solar-Lezama", " C. G. Jones ", " R. Bodik"]}, {"title": " \"Abstraction-guided synthesis of synchronization\"", "authors": ["M. Vechev", " E. Yahav ", " G. Yorsh"]}, {"title": " \"Deriving linearizable fine-grained concurrent objects\"", "authors": ["M. Vechev ", " E. Yahav"]}]},
{"doi": "10.1109/ASEW.2015.27", "title": "Data Mining Methods and Cost Estimation Models: Why is it So Hard to Infuse New Ideas?", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["NASA", "Estimation", "Data mining", "Software", "Stakeholders", "Solid modeling", "Cognitive science"], "abstract": "Infusing new technologies and methods is hard and can often be described as \"banging ones head on a brick wall\". The is especially true when trying to get project managers, systems, engineers and cost analysts to add a radically new tool to their tool box. In this paper we suggest that the underlying causes are rooted in the fact that the different players have fundamental differences in mental models, vocabulary and objectives. We based this work on lessons learned from ten years of working on the infusion of software costing models into NASA. The good news is that, lately, a crack has begun to appear in what was previously a brick wall.", "author": [{"name": "Jaitus Hihn", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA, USA"}, {"name": "Tim Menzies", "affiliation": "Department of Computer Science, North Carolina State University, Raleigh, NC, USA"}], "time": "Nov. 2015", "citationCount": "4", "references": [{"title": " \"Bes software production data final technical report rade-tr-77\u2013116\"", "authors": ["R. Black", " R. Curnow", " R. Katz ", " M. Bray"]}, {"title": " \"Software Cost Estimation Using a Decision Graph Process: A Knowledge Engineering Approach\"", "authors": ["S. Stukes ", " J. Spagnuolo"]}, {"title": " \"The Inductive Software Engineering Manifesto: Principles for Industrial Data Mining\"", "authors": ["T. Menzies ."]}, {"title": " \"Local versus Global Lessons for Defect Prediction and Effort Estimation\"", "authors": ["T. Menzies", " A. Butcher ", " D. Cok"]}]},
{"doi": "10.1109/ASE.2013.6693061", "title": "Round-up: Runtime checking quasi linearizability of concurrent data structures", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["History", "Data structures", "Standards", "Law", "Instruction sets", "Runtime"], "abstract": "We propose a new method for runtime checking of a relaxed consistency property called quasi linearizability for concurrent data structures. Quasi linearizability generalizes the standard notion of linearizability by intentionally introducing nondeterminism into the parallel computations and exploiting such nondeterminism to improve the performance. However, ensuring the quantitative aspects of this correctness condition in the low level code is a difficult task. Our method is the first fully automated method for checking quasi linearizability in the unmodified C/C++ code of concurrent data structures. It guarantees that all the reported quasi linearizability violations are real violations. We have implemented our method in a software tool based on LLVM and a concurrency testing tool called Inspect. Our experimental evaluation shows that the new method is effective in detecting quasi linearizability violations in the source code of concurrent data structures.", "author": [{"name": "Lu Zhang", "affiliation": "Department of ECE, Virginia Tech Blacksburg, VA, USA"}, {"name": "Arijit Chattopadhyay", "affiliation": "Department of ECE, Virginia Tech Blacksburg, VA, USA"}, {"name": "Chao Wang", "affiliation": "Department of ECE, Virginia Tech Blacksburg, VA, USA"}], "time": "Nov. 2013", "citationCount": "6", "references": [{"title": " \"Linearizability: A correctness condition for concurrent objects", "authors": ["M. Herlihy ", " J. M. Wing"]}, {"title": " \"Quasi-Linearizability: Relaxed consistency for improved concurrency", "authors": ["Y. Afek", " G. Korl", "", " ", " E. Yanovsky"]}, {"title": " \"Quantitative relaxation of concurrent data structures", "authors": ["T. A. Henzinger", " A. Sezgin", " C. M. Kirsch", " H. Payer", " ", " A. Sokolova"]}, {"title": " \"Distributed queues in shared memory: multicore performance and scalability through quantitative relaxation", "authors": ["A. Haas", " M. Lippautz", " T. A. Henzinger", " H. Payer", " A. Sokolova", " C. M. Kirsch", " ", " A. Sezgin"]}, {"title": " \"Performance", "authors": ["C. M. Kirsch", " H. Payer", " H. R\u00f6ck", " ", " A. Sokolova"]}, {"title": " \"Incorrect systems: it's not the problem", "authors": ["C. M. Kirsch ", " H. Payer"]}, {"title": " \"Scalability versus semantics of concurrent fifo queues", "authors": ["H. Payer", " H. R\u00f6ck", " C. M. Kirsch", " ", " A. Sokolova"]}, {"title": " \"Shape-value abstraction for verifying linearizability", "authors": ["V. Vafeiadis"]}, {"title": " \"Proving correctness of highly-concurrent linearisable objects", "authors": ["V. Vafeiadis", " M. Herlihy", " T. Hoare", " ", " M. Shapiro"]}, {"title": " \"Model checking linearizability via refinement", "authors": ["Y. Liu", " W. Chen", " Y. A. Liu", " ", " J. Sun"]}, {"title": " \"Experience with model checking linearizability", "authors": ["M. T. Vechev", " E. Yahav", " ", " G. Yorsh"]}, {"title": " \"Model checking of linearizability of concurrent list implementations", "authors": ["P. Cern\u00fd", " A. Radhakrishna", " D. Zufferey", " S. Chaudhuri", " ", " R. Alur"]}, {"title": " \"Inspect: A runtime model checker for multithreaded C programs", "authors": ["Y. Yang", " X. Chen", " ", " G. Gopalakrishnan"]}, {"title": " \"Scal: High-performance multicore-scalable data structures. URL: http://scal.cs.uni-salzburg.at/.", "authors": ["U. Salzburg"]}, {"title": " \"Line-up: a complete and automatic linearizability checker", "authors": ["S. Burckhardt", " C. Dern", " M. Musuvathi", " ", " R. Tan"]}, {"title": " \"Verifying a quantitative relaxation of linearizability via refinement", "authors": ["K. Adhikari", " J. Street", " C. Wang", " Y. Liu", " ", " S. Zhang"]}, {"title": " \"How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": ["L. Lamport"]}, {"title": " \"Counting networks", "authors": ["J. Aspnes", " M. Herlihy", " ", " N. Shavit"]}, {"title": " \"Eventually consistent", "authors": ["W. Vogels"]}, {"title": " \"A type and effect system for atomicity", "authors": ["C. Flanagan ", " S. Qadeer"]}, {"title": " \"Causal atomicity", "authors": ["A. Farzan ", " P. Madhusudan"]}, {"title": " \"Predictive analysis for detecting serializability violations through trace segmentation", "authors": ["A. Sinha", " S. Malik", " C. Wang", " ", " A. Gupta"]}, {"title": " \"Atomizer: A dynamic atomicity checker for multithreaded programs", "authors": ["C. Flanagan ", " S. N. Freund"]}, {"title": " \"A serializability violation detector for shared-memory server programs", "authors": ["M. Xu", " R. Bod\u00edk", " ", " M. D. Hill"]}, {"title": " \"AVIO: detecting atomicity violations via access interleaving invariants", "authors": ["S. Lu", " J. Tucek", " F. Qin", " ", " Y. Zhou"]}, {"title": " \"Runtime analysis of atomicity for multithreaded programs", "authors": ["L. Wang ", " S. D. Stoller"]}, {"title": " \"Parametric and sliced causality", "authors": ["F. Chen ", " G. Rosu"]}, {"title": " \"Monitoring atomicity in concurrent programs", "authors": ["A. Farzan ", " P. Madhusudan"]}, {"title": " \"Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs", "authors": ["C. Flanagan", " S. N. Freund", " ", " J. Yi"]}, {"title": " \"Symbolic predictive analysis for concurrent programs", "authors": ["C. Wang", " S. Kundu", " M. Ganai", " ", " A. Gupta"]}, {"title": " \"Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis", "authors": ["Y. Yang", " X. Chen", " G. Gopalakrishnan", " ", " C. Wang"]}, {"title": " \"Trace-based symbolic analysis for atomicity violations", "authors": ["C. Wang", " R. Limaye", " M. Ganai", " ", " A. Gupta"]}, {"title": " \"Coverage guided systematic concurrency testing", "authors": ["C. Wang", " M. Said", " ", " A. Gupta"]}, {"title": " \"Using concurrency to check concurrency: Checking serializability in software transactional memory", "authors": ["A. Sinha ", " S. Malik"]}, {"title": " \"On interference abstractions", "authors": ["N. Sinha ", " C. Wang"]}, {"title": " \"Generating data race witnesses by an SMT-based analysis", "authors": ["M. Said", " C. Wang", " Z. Yang", " ", " K. Sakallah"]}, {"title": " \"Predicting concurrency failures in generalized traces of x86 executables", "authors": ["C. Wang ", " M. Ganai"]}, {"title": " \"Universal Causality Graphs: A precise happens-before model for detecting bugs in concurrent programs", "authors": ["V. Kahlon ", " C. Wang"]}, {"title": " \"Persuasive prediction of concurrency access anomalies", "authors": ["J. Huang ", " C. Zhang"]}, {"title": " \"Lock removal for concurrent trace programs", "authors": ["V. Kahlon ", " C. Wang"]}, {"title": " \"Maximal causal models for sequentially consistent systems", "authors": ["T.-F. Serbanuta", " F. Chen", " ", " G. Rosu"]}, {"title": " \"Scaling predictive analysis of concurrent programs by removing trace redundancy", "authors": ["J. Huang", " J. Zhou", " ", " C. Zhang"]}]},
{"doi": "10.1109/ASE.2019.00075", "title": "Automating CUDA Synchronization via Program Transformation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Graphics processing units", "Synchronization", "Computer bugs", "Kernel", "Instruction sets", "Parallel processing", "Computer science"], "abstract": "While CUDA has been the most popular parallel computing platform and programming model for general purpose GPU computing, CUDA synchronization undergoes significant challenges for GPU programmers due to its intricate parallel computing mechanism and coding practices. In this paper, we propose AuCS, the first general framework to automate synchronization for CUDA kernel functions. AuCS transforms the original LLVM-level CUDA program control flow graph in a semantic-preserving manner for exploring the possible barrier function locations. Accordingly, AuCS develops mechanisms to correctly place barrier functions for automating synchronization in multiple erroneous (challenging-to-be-detected) synchronization scenarios, including data race, barrier divergence, and redundant barrier functions. To evaluate the effectiveness and efficiency of AuCS, we conduct an extensive set of experiments and the results demonstrate that AuCS can automate 20 out of 24 erroneous synchronization scenarios.", "author": [{"name": "Mingyuan Wu", "affiliation": "Department of Computer Science and Engineering, Southern University of Science and Technology, Shenzhen, China"}, {"name": "Lingming Zhang", "affiliation": "Department of Computer Science, University of Texas at Dallas, Dallas, USA"}, {"name": "Cong Liu", "affiliation": "Department of Computer Science, University of Texas at Dallas, Dallas, USA"}, {"name": "Shin Hwei Tan", "affiliation": "Department of Computer Science and Engineering, Southern University of Science and Technology, Shenzhen, China"}, {"name": "Yuqun Zhang", "affiliation": "Department of Computer Science and Engineering, Southern University of Science and Technology, Shenzhen, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Curd: A dynamic cuda race detector\"", "authors": ["Y. Peng", " V. Grover ", " J. Devietti"]}, {"title": " \"Barracuda: Binary-level analysis of runtime races in cuda programs\"", "authors": ["A. Eizenberg", " Y. Peng", " T. Pigli", " W. Mansky ", " J. Devietti"]}, {"title": " \"Gklee: Concolic verification and test generation for gpus\"", "authors": ["G. Li", " P. Li", " G. Sawaya", " G. Gopalakrishnan", " I. Ghosh ", " S. P. Rajan"]}, {"title": " \"Ld: Low-overhead gpu race detection without access monitoring\"", "authors": ["P. Li", " X. Hu", " D. Chen", " J. Brock", " H. Luo", " E. Z. Zhang", " ."]}, {"title": " \"Efficient and precise datarace detection for multithreaded object-oriented programs\"", "authors": ["J.-D. Choi", " K. Lee", " A. Loginov", " R. O\u2019Callahan", " V. Sarkar ", " M. Sridharan"]}, {"title": " \"Eraser: A dynamic data race detector for multithreaded programs\"", "authors": ["S. Savage", " M. Burrows", " G. Nelson", " P. Sobalvarro ", " T. Anderson"]}, {"title": " \"An empirical comparison of monitoring algorithms for access anomaly detection\"", "authors": ["A. Dinning ", " E. Schonberg"]}, {"title": " \"Improving the accuracy of data race detection\"", "authors": ["R. H. B. Netzer ", " B. P. Miller"]}, {"title": " \"Compiler transformations for high-performance computing\"", "authors": ["D. F. Bacon", " S. L. Graham ", " O. J. Sharp"]}, {"title": " \"Characterizing and detecting cuda program bugs\"", "authors": ["M. Wu", " H. Zhou", " L. Zhang", " C. Liu ", " Y. Zhang"]}, {"title": " \"Automatic synchronization for gpu kernels\"", "authors": ["S. An", " "]}, {"title": " \"Interleaving and lock-step semantics for analysis and verification of gpu kernels\"", "authors": ["P. Collingbourne", " A. F. Donaldson", " J. Ketema ", " S. Qadeer"]}, {"title": "\"arrayfire\"", "authors": []}, {"title": " \"LLVM: A compilation framework for lifelong program analysis & transformation\"", "authors": ["C. Lattner ", " V. Adve"]}, {"title": " \"Evolutionary programming made faster\"", "authors": ["X. Yao", " Y. Liu ", " G. Lin"]}, {"title": " \"Gpuverify: A verifier for gpu kernels\"", "authors": ["A. Betts", " N. Chong", " A. Donaldson", " S. Qadeer ", " P. Thomson"]}, {"title": " \"Civl: formal verification of parallel programs\"", "authors": ["M. Zheng", " M. S. Rogers", " Z. Luo", " M. B. Dwyer ", " S. F. Siegel"]}, {"title": " \"Esbmc-gpu a context-bounded model checking tool to verify cuda programs\"", "authors": ["F. R. Monteiro", " E. H. d. S. Alves", " I. S. Silva", " H. I. Ismail", " L. C. Cordeiro ", " E. B. de Lima Filho"]}, {"title": " \"Avio: Detecting atomicity violations via access interleaving invariants\"", "authors": ["S. Lu", " J. Tucek", " F. Qin ", " Y. Zhou"]}, {"title": " \"Kivati: Fast detection and prevention of atomicity violations\"", "authors": ["L. Chew ", " D. Lie"]}, {"title": " \"Specification and verification of synchronization with condition variables\"", "authors": ["P. d. C. Gomes", " D. Gurov", " M. Huisman ", " C. Artho"]}, {"title": " \"Verifying multi-threaded software using smt-based context-bounded model checking\"", "authors": ["L. Cordeiro ", " B. Fischer"]}, {"title": " \"Deepfl: integrating multiple fault diagnosis dimensions for deep fault localization\"", "authors": ["X. Li", " W. Li", " Y. Zhang ", " L. Zhang"]}, {"title": " \"An empirical study of boosting spectrum-based fault localization via pagerank\"", "authors": ["M. Zhang", " Y. Li", " X. Li", " L. Chen", " Y. Zhang", " L. Zhang", " ."]}, {"title": " \"Transforming programs and tests in tandem for fault localization\"", "authors": ["X. Li ", " L. Zhang"]}, {"title": " \"An empirical study of fault localization families and their combinations\"", "authors": ["D. Zou", " J. Liang", " Y. Xiong", " M. D. Ernst ", " L. Zhang"]}, {"title": " \"Evaluating and improving fault localization\"", "authors": ["S. Pearson", " J. Campos", " R. Just", " G. Fraser", " R. Abreu", " M. D. Ernst", " ."]}, {"title": " \"Injecting mechanical faults to localize developer faults for evolving software\"", "authors": ["L. Zhang", " L. Zhang ", " S. Khurshid"]}, {"title": " \"Fluccs: Using code and change metrics to improve fault localization\"", "authors": ["J. Sohn ", " S. Yoo"]}, {"title": " \"Practical program repair via bytecode mutation\"", "authors": ["A. Ghanbari", " S. Benton ", " L. Zhang"]}, {"title": " \"History-driven build failure fixing: how far are we?\"", "authors": ["Y. Lou", " J. Chen", " L. Zhang", " D. Hao ", " L. Zhang"]}, {"title": " \"Repairing crashes in android apps\"", "authors": ["S. H. Tan", " Z. Dong", " X. Gao ", " A. Roychoudhury"]}, {"title": " \"Precise condition synthesis for program repair\"", "authors": ["Y. Xiong", " J. Wang", " R. Yan", " J. Zhang", " S. Han", " G. Huang", " ."]}, {"title": " \"Automatic patch generation learned from human-written patches\"", "authors": ["D. Kim", " J. Nam", " J. Song ", " S. Kim"]}, {"title": " \"Antipatterns in search-based program repair\"", "authors": ["S. H. Tan", " H. Yoshida", " M. R. Prasad ", " A. Roychoudhury"]}, {"title": " \"Relifix: Automated repair of software regressions\"", "authors": ["S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"Avatar: Fixing semantic bugs with fix patterns of static analysis violations\"", "authors": ["K. Liu", " A. Koyuncu", " D. Kim ", " T. F. Bissy"]}, {"title": " \"Codeflaws: a programming competition benchmark for evaluating automated program repair tools\"", "authors": ["S. H. Tan", " J. Yi", " S. Mechtaev ", " A. Roychoudhury"]}, {"title": " \"A correlation study between automated program repair and test-suite metrics\"", "authors": ["J. Yi", " S. H. Tan", " S. Mechtaev", " M. Bo\u00f6hme ", " A. Roychoudhury"]}, {"title": " \"A feasibility study of using automated program repair for introductory programming assignments\"", "authors": ["J. Yi", " U. Z. Ahmed", " A. Karkare", " S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"Reassert: a tool for repairing broken unit tests\"", "authors": ["B. Daniel", " D. Dig", " T. Gvero", " V. Jagannath", " J. Jiaa", " D. Mitchell", " ."]}, {"title": " \"Inferring program transformations from singular examples via big code\"", "authors": ["J. Jiang", " L. Ren", " Y. Xiong ", " L. Zhang"]}, {"title": " \"Automated concurrency-bug fixing\"", "authors": ["G. Jin", " W. Zhang ", " D. Deng"]}, {"title": " \"Pfix: fixing concurrency bugs based on memory access patterns\"", "authors": ["H. Lin", " Z. Wang", " S. Liu", " J. Sun", " D. Zhang ", " G. Wei"]}, {"title": " \"Semfix: Program repair via semantic analysis\"", "authors": ["H. D. T. Nguyen", " D. Qi", " A. Roychoudhury ", " S. Ch"]}, {"title": " \"Angelix: Scalable multiline program patch synthesis via symbolic analysis\"", "authors": ["S. Mechtaev", " J. Yi ", " A. Roychoudhury"]}, {"title": " \"Directfix: Looking for simple program repairs\"", "authors": ["S. Mechtaev", " J. Yi ", " A. Roychoudhury"]}, {"title": " \"Testequivalence analysis for automatic patch generation\"", "authors": ["S. Mechtaev", " X. Gao", " S. H. Tan ", " A. Roychoudhury"]}, {"title": " \"S3: syntax-and semantic-guided repair synthesis via programming by examples\"", "authors": ["X.-B. D. Le", " D.-H. Chu", " D. Lo", " C. Le Goues ", " W. Visser"]}]},
{"doi": "10.1109/ASEW.2015.25", "title": "Software Development Analytics: Experiences and the Way Forward", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Measurement", "Testing", "Cloud computing", "Actuators", "Data models", "Data collection"], "abstract": "Software development analytics plays an important role in bridging the gap between purely process-centric software development management and the on-ground realities resulting from the inherent complexities of software development. Lack of high-fidelity data, potential data manipulation by humans, absence of real-time / near real-time analysis and sub-optimal insights design causes issues in governing software development. We have worked with development projects to understand the gaps, and design insights and tools for offering early warnings to different project stakeholders. In this paper, we discuss our approach to designing a insights framework and learning from pilots with industrial software development projects. Going forward our work is influenced by changes in technology and new workforce models. We present them, as they would have a significant impact on the future actionable insights research.", "author": [{"name": "Vikrant Kaulgud", "affiliation": "Accenture Technology Labs, Accenture Services Private Limited, Bangalore, India"}, {"name": "Vibhu Saujanya Sharma", "affiliation": "Accenture Technology Labs, Accenture Services Private Limited, Bangalore, India"}], "time": "Nov. 2015", "citationCount": "2", "references": [{"title": "\"Measurement within the CMMI\".", "authors": []}, {"title": " \"Research on cmmi-based software process metrics\"", "authors": ["R. Xu", " Y. Xue", " P. Nie", " Y. Zhang ", " D. Li"]}, {"title": "\"Earned value management\".", "authors": []}, {"title": " \"Pivot: Project insights and visualization toolkit\"", "authors": ["V. S. Sharma ", " V. Kaulgud"]}, {"title": " \"Insights into component testing process\"", "authors": ["V. Kaulgud ", " V. S. Sharma"]}, {"title": " \"Studying team evolution during software testing\"", "authors": ["V. S. Sharma ", " V. Kaulgud"]}, {"title": " \"Cdi: Cost of development index\"", "authors": ["V. Kaulgud ", " V. S. Sharma"]}, {"title": " \"Adoption and use of new metrics in a large organization: A case study\"", "authors": ["V. S. Sharma ", " V. Kaulgud"]}, {"title": " \"Micro process adherence for delivering reliable software\"", "authors": ["V. Sharma ", " V. Kaulgud"]}, {"title": " \"A vision of crowd development\"", "authors": ["T. D. aToza ", " A. van der Hoek"]}, {"title": " \"Palantir: Increasing awareness in distributed software development\"", "authors": ["A. Sarma ", " A. Hoek"]}, {"title": "\"Nitrous 10\".", "authors": []}, {"title": "\"Cloud 9\".", "authors": []}, {"title": " \"New opportunities for extracting insights from cloud based ides\"", "authors": ["Y. Wang", " P. Wagstrom", " E. Duesterwald ", " D. F. Redmiles"]}, {"title": " \"Codeaware: Sensor-based fine-grained monitoring and management of software artifacts\"", "authors": ["R. Abreu", " H. Erdogmus ", " A. Perez"]}]},
{"doi": "10.1109/ASE.2013.6693062", "title": "Constraint-based automatic symmetry detection", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Arrays", "Protocols", "Color", "Space exploration", "Transforms", "Cost accounting", "Lead"], "abstract": "We present an automatic approach to detecting symmetry relations for general concurrent models. Despite the success of symmetry reduction in mitigating state explosion problem, one essential step towards its soundness and effectiveness, i.e., how to discover sufficient symmetries with least human efforts, is often either overlooked or oversimplified. In this work, we show how a concurrent model can be viewed as a constraint satisfaction problem (CSP), and present an algorithm capable of detecting symmetries arising from the CSP which induce automorphisms of the model. To the best of our knowledge, our method is the first approach that can automatically detect both process and data symmetries as demonstrated via a number of systems.", "author": [{"name": "Shao Jie Zhang", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Jun Sun", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Chengnian Sun", "affiliation": "National University of Singapore, Singapore"}, {"name": "Yang Liu", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Junwei Ma", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Jin Song Dong", "affiliation": "National University of Singapore, Singapore"}], "time": "Nov. 2013", "citationCount": "1", "references": []},
{"doi": "10.1109/ASE.2019.00076", "title": "Efficient Transaction-Based Deterministic Replay for Multi-threaded Programs", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Instruction sets", "Runtime", "Clocks", "Synchronization", "Computer science", "Urban areas", "Benchmark testing"], "abstract": "Existing deterministic replay techniques propose strategies which attempt to reduce record log sizes and achieve successful replay. However, these techniques still generate large logs and achieve replay only under certain conditions. We propose a solution based on the division of the sequence of events of each thread into sequential blocks called transactions. Our insight is that there are usually few to no atomicity violations among transactions reported during a program execution. We present TPLAY, a novel deterministic replay technique which records thread access interleavings on shared memory locations at the transactional level. TPLAY also generates an artificial pair of interleavings when an atomicity violation is reported on a transaction. We present an experiment using the Splash2x extension of the PARSEC benchmark suite. Experimental results indicate that TPLAY experiences a 13-fold improvement in record log sizes and achieves a higher replay probability in comparison to existing work.", "author": [{"name": "Ernest Pobee", "affiliation": "Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong"}, {"name": "Xiupei Mei", "affiliation": "Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong"}, {"name": "W.K. Chan", "affiliation": "Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Odr: Output-deterministic replay for multicore debugging\"", "authors": ["G. Altekar ", " I. Stoica"]}, {"title": " \"The parsec benchmark suite: Characterization and architectural implications\"", "authors": ["C. Bienia", " S. Kumar", " J. P. Singh ", " K. Li"]}, {"title": " \"Doublechecker: Efficient sound and precise atomicity checking\"", "authors": ["S. Biswas", " J. Huang", " A. Sengupta ", " M. D. Bond"]}, {"title": " \"Octet: Capturing and controlling cross-thread dependences efficiently\"", "authors": ["M. D. Bond", " M. Kulkarni", " M. Cao", " M. Zhang", " M. Fathi Salmi", " S. Biswas", " ."]}, {"title": " \"Deterministic replay: A survey\"", "authors": ["Y. Chen", " S. Zhang", " Q. Guo", " L. Li", " R. Wu ", " T. Chen"]}, {"title": " \"Partial replay of long-running applications\"", "authors": ["A. Cheung", " A. Solar-Lezama ", " S. Madden"]}, {"title": " \"Deterministic replay of java multithreaded applications\"", "authors": ["J.-D. Choi ", " H. Srinivasan"]}, {"title": " \"Z3: An efficient smt solver\"", "authors": ["L. De Moura ", " N. Bj\u00f8rner"]}, {"title": " \"Velodrome: A sound and complete dynamic atomicity checker for multithreaded programs\"", "authors": ["C. Flanagan", " S. N. Freund ", " J. Yi"]}, {"title": " \"Leap: Lightweight deterministic multi-processor replay of concurrent java programs\"", "authors": ["J. Huang", " P. Liu ", " C. Zhang"]}, {"title": " \"Clap: Recording local executions to reproduce concurrency failures\"", "authors": ["J. Huang", " C. Zhang ", " J. Dolby"]}, {"title": " \"Care: Cache guided deterministic replay for concurrent java programs\"", "authors": ["Y. Jiang", " T. Gu", " C. Xu", " X. Ma ", " J. Lu"]}, {"title": " \"Time clocks and the ordering of events in a distributed system\"", "authors": ["L. Lamport"]}, {"title": " \"DETER: Deterministic TCP replay for performance diagnosis\"", "authors": ["Y. Li", " R. Miao", " M. Alizadeh ", " M. Yu"]}, {"title": " \"ireplayer: In-situ and identical record-and-replay for multithreaded applications\"", "authors": ["H. Liu", " S. Silvestro", " W. Wang", " C. Tian ", " T. Liu"]}, {"title": " \"Light: Replay via tightly bounded recording\"", "authors": ["P. Liu", " X. Zhang", " O. Tripp ", " Y. Zheng"]}, {"title": " \"Doubletake: Fast and precise error detection via evidence-based dynamic analysis\"", "authors": ["T. Liu", " C. Curtsinger ", " E. D. Berger"]}, {"title": " \"Pin: Building customized program analysis tools with dynamic instrumentation\"", "authors": ["C.-K. Luk", " R. Cohn", " R. Muth", " H. Patil", " A. Klauser", " G. Lowney", " ."]}, {"title": " \"Delorean: Recording and deterministically replaying shared-memory multiprocessor execution efficiently\"", "authors": ["P. Montesinos", " L. Ceze ", " J. Torrellas"]}, {"title": " \"Bugnet: Continuously recording program execution for deterministic replay debugging\"", "authors": ["S. Narayanasamy", " G. Pokam ", " B. Calder"]}, {"title": " \"Optimal tracing and replay for debugging shared-memory parallel programs\"", "authors": ["R. H. B. Netzer"]}, {"title": " \"Pres: Probabilistic replay with execution sketching on multiprocessors\"", "authors": ["S. Park", " Y. Zhou", " W. Xiong", " Z. Yin", " R. Kaushik", " K. H. Lee", " ."]}, {"title": " \"Aggreplay: Efficient record and replay of multi-threaded programs\"", "authors": ["E. Pobee ", " W. K. Chan"]}, {"title": " \"Mobiplay: A remote execution based record-and-replay tool for mobile applications\"", "authors": ["Z. Qin", " Y. Tang", " E. Novak ", " Q. Li"]}, {"title": " \"Leveraging hardware-assisted virtualization for deterministic replay on commodity multi-core processors\"", "authors": ["S. Ren", " L. Tan", " C. Li", " Z. Xiao ", " W. Song"]}, {"title": " \"Processor-oblivious record and replay\"", "authors": ["R. Utterback", " K. Agrawal", " I.-T. A. Lee ", " M. Kulkarni"]}, {"title": " \"Efficient and sound dynamic atomicity violation checking\"", "authors": ["S. Wu"]}, {"title": " \"A\u201d flight data recorder\u201c for enabling full-system multiprocessor deterministic replay\"", "authors": ["M. Xu", " R. Bodik ", " M. D. Hill"]}, {"title": " \"A regulated transitive reduction (rtr) for longer memory race recording\"", "authors": ["M. Xu", " M. D. Hill ", " R. Bodik"]}, {"title": " \"Stride: Search-based deterministic replay in polynomial time via bounded linkage\"", "authors": ["J. Zhou", " X. Xiao ", " C. Zhang"]}]},
{"doi": "10.1109/ASEW.2015.23", "title": "Actionable = Cluster + Contrast?", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Decision trees", "Clustering algorithms", "Data mining", "Business", "Clustering methods", "Planning", "Stability analysis"], "abstract": "There are many algorithms for data classification such as C4.5, Naive Bayes, etc. Are these enough for learning actionable analytics? Or should we be supporting another kind of reasoning? This paper explores two approaches for learning minimal, yet effective, changes to software project artifacts.", "author": [{"name": "Rahul Krishna", "affiliation": "Computer Science, North Carolina State University, USA"}, {"name": "Tim Menzies", "affiliation": "Computer Science, North Carolina State University, USA"}], "time": "Nov. 2015", "citationCount": "1", "references": [{"title": " \"Learning Actionable Analytics (with applications for reducing defects and reducing runtimes)\" in Submitted to ASE '15", "authors": ["Rahul Krishna", " Tim Menzies", " Xipeng Shen ", " Andrian Marcus"]}, {"title": " \"Defect prediction from static code features: Current results limitations new approaches\"", "authors": ["Tim Menzies", " Zach Milton", " Burak Turhan", " Bojan Cukic", " Yue Jiang ", " Aye Bener"]}, {"title": " \"Cross trees: Visualizing estimations using decision trees\"", "authors": ["Naveen Lekkalapudi"]}, {"title": " \"Local versus global lessons for defect prediction and effort estimation\"", "authors": ["Tim Menzies", " Andrew Butcher", " David Cok", " Andrian Marcus", " Lucas Layman", " Forrest Shull", " ."]}, {"title": " \"Multi-Interval Discretization of Continuous-Valued Attributes for Classification learning\"", "authors": ["KB Irani ", " UM Fayyad"]}, {"title": " \"Learning project management decisions: A case study with case-based reasoning versus data farming\"", "authors": ["T. Menzies", " A. Brady", " J. Keung", " J. Hihn", " S. Williams", " O. El-Rawas", " ."]}, {"title": " \"Learning to Change Projects\"", "authors": ["R Borges ", " T Menzies"]}, {"title": " \"Towards identifying software project clusters with regard to defect prediction\"", "authors": ["Marian Jureczko ", " Lech Madeyski"]}, {"title": " \"Ranking and clustering software cost estimation models through a multiple comparisons algorithm\"", "authors": ["Nikolaos Mittas ", " Lefteris Angelis"]}, {"title": " \"An introduction to the bootstrap\" in Mono. Stat. Appl. Probab.", "authors": ["Bradley Efron ", " Robert J Tibshirani"]}]},
{"doi": "10.1109/ASE.2013.6693063", "title": "Proving MCAPI executions are correct using SMT", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Encoding", "Semantics", "Schedules", "Runtime", "Message passing", "Multicore processing", "Complexity theory"], "abstract": "Asynchronous message passing is an important paradigm in writing applications for embedded heterogeneous multicore systems. The Multicore Association (MCA), an industry consortium promoting multicore technology, is working to standardize message passing into a single API, MCAPI, for bare metal implementation and portability across platforms. Correctness in such an API is difficult to reason about manually, and testing against reference solutions is equally difficult as reference solutions implement an unknown set of allowed behaviors, and programmers have no way to directly control API internals to expose or reproduce errors. This paper provides a way to encode an MCAPI execution as a Satisfiability Modulo Theories (SMT) problem, which if satisfiable, yields a feasible execution schedule on the same trace, such that it resolves non-determinism in the MCAPI runtime in a way that it now fails user provided assertions. The paper proves the problem is NP-complete. The encoding is useful for test, debug, and verification of MCAPI program execution. The novelty in the encoding is the direct use of match pairs (potential send and receive couplings). Match-pair encoding for MCAPI executions, when compared to other encoding strategies, is simpler to reason about, results in significantly fewer terms in the SMT problem, and captures feasible behaviors that are ignored in previously published techniques. Further, to our knowledge, this is the first SMT encoding that is able to run in infinite-buffer semantics, meaning the runtime has unlimited internal buffering as opposed to no internal buffering. Results demonstrate that the SMT encoding, restricted to zero-buffer semantics, uses fewer clauses when compared to another zero-buffer technique, and it runs faster and uses less memory. As a result the encoding scales well for programs with high levels of non-determinism in how sends and receives may potentially match.", "author": [{"name": "Yu Huang", "affiliation": "Department of Computer Science, Brigham Young University, Provo, UT, USA"}, {"name": "Eric Mercer", "affiliation": "Department of Computer Science, Brigham Young University, Provo, UT, USA"}, {"name": "Jay McCarthy", "affiliation": "Department of Computer Science, Brigham Young University, Provo, UT, USA"}], "time": "Nov. 2013", "citationCount": "5", "references": []},
{"doi": "10.1109/ASE.2019.00077", "title": "Wuji: Automatic Online Combat Game Testing Using Evolutionary Deep Reinforcement Learning", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Games", "Computer bugs", "Testing", "Space exploration", "Reinforcement learning", "Manuals", "Sociology"], "abstract": "Game testing has been long recognized as a notoriously challenging task, which mainly relies on manual playing and scripting based testing in game industry. Even until recently, automated game testing still remains to be largely untouched niche. A key challenge is that game testing often requires to play the game as a sequential decision process. A bug may only be triggered until completing certain difficult intermediate tasks, which requires a certain level of intelligence. The recent success of deep reinforcement learning (DRL) sheds light on advancing automated game testing, without human competitive intelligent support. However, the existing DRLs mostly focus on winning the game rather than game testing. To bridge the gap, in this paper, we first perform an in-depth analysis of 1349 real bugs from four real-world commercial game products. Based on this, we propose four oracles to support automated game testing, and further propose Wuji, an on-the-fly game testing framework, which leverages evolutionary algorithms, DRL and multi-objective optimization to perform automatic game testing. Wuji balances between winning the game and exploring the space of the game. Winning the game allows the agent to make progress in the game, while space exploration increases the possibility of discovering bugs. We conduct a large-scale evaluation on a simple game and two popular commercial games. The results demonstrate the effectiveness of Wuji in exploring space and detecting bugs. Moreover, Wuji found 3 previously unknown bugs, which have been confirmed by the developers, in the commercial games.", "author": [{"name": "Yan Zheng", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Xiaofei Xie", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Ting Su", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Lei Ma", "affiliation": "Kyushu University, Japan"}, {"name": "Jianye Hao", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Zhaopeng Meng", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Yang Liu", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Ruimin Shen", "affiliation": "Fuxi AI Lab, Netease, Inc., Hangzhou, China"}, {"name": "Yingfeng Chen", "affiliation": "Fuxi AI Lab, Netease, Inc., Hangzhou, China"}, {"name": "Changjie Fan", "affiliation": "Fuxi AI Lab, Netease, Inc., Hangzhou, China"}], "time": "Nov. 2019", "citationCount": "6", "references": [{"title": " \"Reinforcement learning for android GUI testing\"", "authors": ["David Adamo", " Sreedevi Koppula ", " Ren\u00e9e C. Bryce"]}, {"title": " \"Critical success factors to improve the game development process from a developer\u2019s perspective\"", "authors": ["Saiqa Aleem", " Luiz Fern", "o Capretz "]}, {"title": " \"Deploying search based software engineering with sapienz at facebook\"", "authors": ["Nadia Alshahwan", " Xinbo Gao", " Mark Harman", " Yue Jia", " Ke Mao", " Alex", "er Mols", " ."]}, {"title": " \"Graphical user interface (GUI) testing: Systematic mapping and repository\"", "authors": ["Ishan Banerjee", " Bao N. Nguyen", " Vahid Garousi ", " M. Memon"]}, {"title": " \"Coverage-based greybox fuzzing as markov chain\"", "authors": ["Marcel B\u00f6hme", " Van-Thuan Pham ", " Abhik Roychoudhury"]}, {"title": " \"Deep reinforcement fuzzing\"", "authors": ["Konstantin B\u00f6ttinger", " Patrice Godefroid ", " Rishabh Singh"]}, {"title": " \"Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs\"", "authors": ["Cristian Cadar", " Daniel Dunbar", " Dawson R Engler ."]}, {"title": " \"Hawkeye: Towards a desired directed greybox fuzzer\"", "authors": ["Hongxu Chen", " Yinxing Xue", " Yuekang Li", " Bihuan Chen", " Xiaofei Xie", " Wu Xiuheng", " ."]}, {"title": " \"Automated test input generation for android: Are we there yet? (E)\"", "authors": ["Shauvik Roy Choudhary", " Aless", "ra Gorla "]}, {"title": " \"Simulated binary crossover for continuous search space\"", "authors": ["Kalyanmoy Deb ", " Ram Bhusan Agrawal"]}, {"title": " \"A fast elitist non-dominated sorting genetic algorithm for multi-objective optimization: Nsga-ii\"", "authors": ["Kalyanmoy Deb", " Samir Agrawal", " Amrit Pratap ", " Tanaka Meyarivan"]}, {"title": " \"Deepstellar: model-based quantitative analysis of stateful deep learning systems\"", "authors": ["Xiaoning Du", " Xiaofei Xie", " Yi Li", " Lei Ma", " Yang Liu ", " Jianjun Zhao"]}, {"title": " \"Evosuite: automatic test suite generation for object-oriented software\"", "authors": ["Gordon Fraser ", " Andrea Arcuri"]}, {"title": " \"An automated model based testing approach for platform games\"", "authors": ["Sidra Iftikhar", " Muhammad Zohaib Iqbal", " Muhammad Uzair Khan ", " Wardah Mahmood"]}, {"title": " \"Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift\"", "authors": ["Sergey Ioffe ", " Christian Szegedy"]}, {"title": " \"Prioritizing the devices to test your app on: a case study of android game apps\"", "authors": ["Hammad Khalid", " Meiyappan Nagappan", " Emad Shihab ", " Ahmed E. Hassan"]}, {"title": " \"A Method for Stochastic Optimization\"", "authors": ["Diederik P Kingma ", " Jimmy Ba. Adam"]}, {"title": " \"QBE: qlearning-based exploration of android applications\"", "authors": ["Yavuz K\u00f6roglu", " Alper Sen", " Ozlem Muslu", " Yunus Mete", " Ceyda Ulker", " Tolga Tanriverdi", " ."]}, {"title": " \"Cerebro: context-aware adaptive fuzzing for effective vulnerability detection\"", "authors": ["Yuekang Li", " Yinxing Xue", " Hongxu Chen", " Xiuheng Wu", " Cen Zhang", " Xiaofei Xie", " ."]}, {"title": " \"Studying the urgent updates of popular games on the steam platform\"", "authors": ["Dayi Lin", " Cor-Paul Bezemer ", " Ahmed E. Hassan"]}, {"title": " \"Automated tests for mobile games: An experience report\"", "authors": ["Gabriel Lovreto", " Andr\u00e9 Takeshi Endo", " Paulo Nardi ", " Vinicius H. S. Durelli"]}, {"title": " \"Sapienz: multi-objective automated testing for android applications\"", "authors": ["Ke Mao", " Mark Harman ", " Yue Jia"]}, {"title": " \"Genetic algorithms tournament selection and the effects of noise\"", "authors": ["Brad L Miller", " David E Goldberg ."]}, {"title": " \"Asynchronous methods for deep reinforcement learning\"", "authors": ["Volodymyr Mnih", " Adria Puigdomenech Badia", " Mehdi Mirza", " Alex Graves", " Timothy Lillicrap", " Tim Harley", " ."]}, {"title": " \"Human-level control through deep reinforcement learning\"", "authors": ["Volodymyr Mnih", " Koray Kavukcuoglu", " David Silver", " Andrei A. Rusu", " Joel Veness", " Marc G. Bellemare", " ."]}, {"title": " \"Rectified linear units improve restricted boltzmann machines\"", "authors": ["Vinod Nair ", " Geoffrey E Hinton"]}, {"title": " \"Mastering the game of go with deep neural networks and tree search\"", "authors": ["David Silver", " Aja Huang", " Chris J Maddison", " Arthur Guez", " Laurent Sifre", " George Van Den Driessche", " Julian Schrittwieser", " Ioannis Antonoglou", " Veda Panneershelvam", " Marc Lanctot ."]}, {"title": " \"Reinforcement learning for automatic test case prioritization and selection in continuous integration\"", "authors": ["Helge Spieker", " Arnaud Gotlieb", " Dusica Marijan ", " Morten Mossige"]}, {"title": " \"Guided stochastic model-based gui testing of android apps\"", "authors": ["Ting Su", " Guozhu Meng", " Yuting Chen", " Ke Wu", " Weiming Yang", " Yao Yao", " ."]}, {"title": " \"Guided stochastic model-based GUI testing of android apps\"", "authors": ["Ting Su", " Guozhu Meng", " Yuting Chen", " Ke Wu", " Weiming Yang", " Yao Yao", " ."]}, {"title": " \"Deep neuroevolution: Genetic algorithms are a competitive alternative for training deep neural networks for reinforcement learning\"", "authors": ["Felipe Petroski Such", " Vashisht Madhavan", " Edoardo Conti", " Joel Lehman", " Kenneth O. Stanley ", " Jeff Clune"]}, {"title": " \"A reinforcement learning based approach to automated testing of android applications\"", "authors": ["Thi Anh Tuyet Vuong ", " Shingo Takada"]}, {"title": " \"Skyfire: Data-driven seed generation for fuzzing\"", "authors": ["Junjie Wang", " Bihuan Chen", " Lei Wei ", " Yang Liu"]}, {"title": " \"Deephunter: a coverage-guided fuzz testing framework for deep neural networks\"", "authors": ["Xiaofei Xie", " Lei Ma", " Felix Juefei-Xu", " Minhui Xue", " Hongxu Chen", " Yang Liu", " ."]}, {"title": " \"Diffchaser: Detecting disagreements for deep neural networks\"", "authors": ["Xiaofei Xie", " Lei Ma", " Haijun Wang", " Yuekang Li", " Yang Liu ", " Xiaohong Li"]}, {"title": " \"Towards Efficient Detection and Optimal Response against Sophisticated Opponents\"", "authors": ["Tianpei Yang", " Jianye Hao", " Zhaopeng Meng", " Chongjie Zhang", " Yan Zheng ", " Ze Zheng"]}, {"title": " \"Bayes-ToMoP - A Fast Detection and Best Response Algorithm Towards Sophisticated Opponents\"", "authors": ["Tianpei Yang", " Jianye Hao", " Zhaopeng Meng", " Yan Zheng", " Chongjie Zhang ", " Ze Zheng"]}, {"title": " \"Weighted Double Deep Multiagent Reinforcement Learning in Stochastic Cooperative Environments\"", "authors": ["Yan Zheng", " Zhaopeng Meng", " Jianye Hao ", " Zongzhang Zhang"]}, {"title": " \"A Deep Bayesian Policy Reuse Approach Against Non-Stationary Agents\"", "authors": ["Yan Zheng", " Zhaopeng Meng", " Jianye Hao", " Zongzhang Zhang", " Tianpei Yang ", " Changjie Fan"]}]},
{"doi": "10.1109/ASEW.2015.28", "title": "Analytics for Software Project Management -- Where are We and Where do We Go?", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Software", "Project management", "Systematics", "Data mining", "Data models", "Data analysis", "Bibliographies"], "abstract": "Software project management is a decision intensive process. Success or failure of the project is highly dependent on these decisions. Analytical techniques and tools can support project managers throughout the software project life cycle by increasing the predictability and chance of success in these projects. In this paper, we report the results of a systematic mapping study within which we investigate the usage of different types of analytics for software project management. We analyze the accessibility of the data as well as the degree of validation reported in the 115 studies selected for final analysis. This resulted in a picture of the status quo (Where are we?) of analytics in software project management. From comparing this status quo with the results of an industrial survey on the industrial needs of different types of analysis, we propose an agenda on future work (Where do we go?).", "author": [{"name": "Maleknaz Nayebi", "affiliation": "Decision support laboratory, University of Calgary"}, {"name": "Guenther Ruhe", "affiliation": "Decision support laboratory, University of Calgary"}, {"name": "Roberta Cabral Mota", "affiliation": "University of Calgary"}, {"name": "Mujeeb Mufti", "affiliation": "University of Calgary"}], "time": "Nov. 2015", "citationCount": "4", "references": [{"title": " \"Rethinking Success in Software Projects: Looking Beyond the Failure Factors\" in Software Project Management in a Changing World", "authors": ["D. Dalcher"]}, {"title": " \"Software Analytics: Going beyond Developers\"", "authors": ["AE Hassan"]}, {"title": " \"Information Needs for Software Development Analytics\"", "authors": ["R. Buse ", " T. Zimmermann"]}, {"title": " \"Introduction to big data: Challenges opportunities and realities minitrack\"", "authors": ["S. Kaisler", " F. Armour ", " J. A. Espinosa"]}, {"title": "\"Software Extension to the PMBOK Guide\" in PMI", "authors": []}, {"title": " \"Beyond data mining; towards idea engineering\"", "authors": ["T. Menzies"]}]},
{"doi": "10.1109/ASE.2013.6693064", "title": "Efficient data race prediction with incremental reasoning on time-stamped lock history", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Instruction sets", "Testing", "History", "Synchronization", "Cognition", "Accuracy", "Vectors"], "abstract": "We present an efficient data race prediction algorithm that uses lock-reordering based incremental search on time-stamped lock histories for solving multiple races effectively. We balance prediction accuracy, coverage, and performance with a specially designed pairwise reachability algorithm that can store and re-use past search results, thereby, amortizing the cost of reasoning over redundant and overlapping search space. Compared to graph-based search algorithms, our algorithm incurs much smaller overhead due to amortization, and can potentially be used while a program under test is executing. To demonstrate such a possibility, we implemented our approach as an incremental Predictive Analysis (iPA) module in a predictive testing framework. Our approach can handle traces with a few hundreds to half a million events, and predict known/unknown real data races with a performance penalty of less than 4% in addition to what is incurred by runtime race detectors.", "author": [{"name": "Malay K. Ganai", "affiliation": "NEC Labs America, Princeton, USA"}], "time": "Nov. 2013", "citationCount": "1", "references": []},
{"doi": "10.1109/ASE.2019.00078", "title": "A Study of Oracle Approximations in Testing Deep Learning Libraries", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Libraries", "Python", "Testing", "Deep learning", "C++ languages", "Maintenance engineering", "Approximation algorithms"], "abstract": "Due to the increasing popularity of deep learning (DL) applications, testing DL libraries is becoming more and more important. Different from testing general software, for which output is often asserted definitely (e.g., an output is compared with an oracle for equality), testing deep learning libraries often requires to perform oracle approximations, i.e., the output is allowed to be within a restricted range of the oracle. However, oracle approximation practices have not been studied in prior empirical work that focuses on traditional testing practices. The prevalence, common practices, maintenance and evolution challenges of oracle approximations remain unknown in literature. In this work, we study oracle approximation assertions implemented to test four popular DL libraries. Our study shows that there exists a non-negligible portion of assertions that leverage oracle approximation in the test cases of DL libraries. Also, we identify the common sources of oracles on which oracle approximations are being performed through a comprehensive manual study. Moreover, we find that developers frequently modify code related to oracle approximations, i.e., using a different approximation API, modifying the oracle or the output from the code under test, and using a different approximation threshold. Last, we performed an in-depth study to understand the reasons behind the evolution of oracle approximation assertions. Our findings reveal important maintenance challenges that developers may face when maintaining oracle approximation practices as code evolves in DL libraries.", "author": [{"name": "Mahdi Nejadgholi", "affiliation": "Department of Computer Science and Software Engineering, Concordia University"}, {"name": "Jinqiu Yang", "affiliation": "Department of Computer Science and Software Engineering, Concordia University"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": "\"Theano: A Python framework for fast computation of mathematical expressions\"", "authors": []}, {"title": " \"Cradle: Cross-backend validation to detect and localize bugs in deep learning libraries\"", "authors": ["H. Pham", " T. Lutellier", " W. Qi ", " L. Tan"]}, {"title": " \"An empirical analysis of flaky tests\"", "authors": ["Q. Luo", " F. Hariri", " L. Eloussi ", " D. Marinov"]}, {"title": " \"Understanding myths and realities of test-suite evolution\"", "authors": ["L. S. Pinto", " S. Sinha ", " A. Orso"]}, {"title": " \"Error and computer arithmetic\" in Elementary Numerical Analysis", "authors": ["K. Atkinson ", " W. Han"]}, {"title": " \"The oracle problem in software testing: A survey\"", "authors": ["E. T. Barr", " M. Harman", " P. McMinn", " M. Shahbaz ", " S. Yoo"]}, {"title": " \"Coverage-directed differential testing of jvm implementations\"", "authors": ["Y. Chen", " T. Su", " C. Sun", " Z. Su ", " J. Zhao"]}, {"title": " \"Testing scientific software: A systematic literature review\"", "authors": ["U. Kanewala ", " J. M. Bieman"]}, {"title": " \"How do scientists develop and use scientific software?\"", "authors": ["J. E. Hannay", " C. MacLeod", " J. Singer", " H. P. Langtangen", " D. Pfahl ", " G. Wilson"]}, {"title": " \"Software development environments for scientific and engineering software: A series of case studies\"", "authors": ["J. C. Carver", " R. P. Kendall", " S. E. Squires ", " D. E. Post"]}, {"title": " \"Testing for trustworthiness in scientific software\"", "authors": ["D. Hook ", " D. Kelly"]}, {"title": " \"Metamorphic testing of programs on partial differential equations: a case study\"", "authors": ["T. Y. Chen", " Jianqiang Feng ", " T. H. Tse"]}, {"title": " \"Techniques for testing scientific programs without an oracle\"", "authors": ["U. Kanewala ", " J. M. Bieman"]}, {"title": " \"An empirical study of bugs in test code\"", "authors": ["A. Vahabzadeh", " A. M. Fard ", " A. Mesbah"]}, {"title": " \"Mining software repositories to study co-evolution of production and test code\"", "authors": ["A. Zaidman", " B. V. Rompaey", " S. Demeyer ", " A. v. Deursen"]}, {"title": " \"When how and why developers (do not) test in their ides\"", "authors": ["M. Beller", " G. Gousios", " A. Panichella ", " A. Zaidman"]}, {"title": " \"Oops my tests broke the build: An explorative analysis of travis ci with github\"", "authors": ["M. Beller", " G. Gousios ", " A. Zaidman"]}, {"title": " \"Deepxplore: Automated whitebox testing of deep learning systems\"", "authors": ["K. Pei", " Y. Cao", " J. Yang ", " S. Jana"]}, {"title": " \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\"", "authors": ["Y. Tian", " K. Pei", " S. Jana ", " B. Ray"]}, {"title": " \"Deepgauge: Multigranularity testing criteria for deep learning systems\"", "authors": ["L. Ma", " F. Juefei-Xu", " F. Zhang", " J. Sun", " M. Xue", " B. Li", " ."]}, {"title": " \"Deepstellar: Model-based quantitative analysis of stateful deep learning systems\"", "authors": ["X. Du", " X. Xie", " Y. Li", " L. Ma", " Y. Liu ", " J. Zhao"]}, {"title": " \"Deepmutation: Mutation testing of deep learning systems\"", "authors": ["L. Ma", " F. Zhang", " J. Sun", " M. Xue", " B. Li", " F. Juefei-Xu", " ."]}, {"title": " \"An empirical study on tensorflow program bugs\"", "authors": ["Y. Zhang", " Y. Chen", " S.-C. Cheung", " Y. Xiong ", " L. Zhang"]}]},
{"doi": "10.1109/ASEW.2015.26", "title": "A Method to Evaluate Estimates Produced by the Capture-Recapture Model", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Inspection", "Correlation", "Software", "Estimation", "Reliability", "Statistical analysis", "Data models"], "abstract": "The capture-recapture techniques could be used for post-inspection estimation of residual defects in the inspected software artifacts. However, adoption this approach in real world software inspections may still face several challenges. On one hand, most of the capture-recapture estimators could easily produce extreme estimates on residual defects, on the other, there are very limited studies on the evaluation on the estimates so as to identify these extreme estimates. As a result, quality management decisions(e.g., whether a re-inspection is required) rely on the estimates produced by the capture-recapture techniques may possess high risk of mistakes. In this paper, we propose and verify an approach to evaluate the capture-recapture estimates, which could help practitioners identify extreme estimates to a certain degree.", "author": [{"name": "Guoping Rong", "affiliation": "Software Institute, Nanjing University, Nanjing"}, {"name": "He Zhang", "affiliation": "Software Institute, Nanjing University, Nanjing"}, {"name": "Dong Shao", "affiliation": "Software Institute, Nanjing University, Nanjing"}, {"name": "Ou Wu", "affiliation": "Software Institute, Nanjing University, Nanjing"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"How many errors remain in a software design document after inspection?\"", "authors": ["S. G. Eick", " C. R. Loader", " S. A. V", "er Wiel "]}, {"title": " \"Evaluating the Accuracy of Defect Estimation Models Based on Inspection Data From Two Inspection Cycles\"", "authors": ["Grossmann Biffl"]}, {"title": " \"A Comparison and Integration of Capture-Recapture Models and the Detection Profile Method\"", "authors": ["El-Emam Bri", " "]}, {"title": " \"A Comprehensive Evaluation of Capture-Recapture Models for Estimating Software Defect Content\" in IEEE Transactions on Software Engineering", "authors": ["E1-Emam Bri", " "]}, {"title": " \"Empirical interval estimates for the defect content after an inspection\"", "authors": ["Frank Padberg"]}, {"title": " \"Estimating the number of undetected software errors via the correlated capturerecapture model\"", "authors": ["Young H. Chun"]}]},
{"doi": "10.1109/ASE.2013.6693065", "title": "PIEtrace: Platform independent executable trace", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Registers", "Libraries", "Malware", "Linux", "Virtualization", "Operating systems"], "abstract": "To improve software dependability, a large number of software engineering tools have been developed over years. Many of them are difficult to apply in practice because their system and library requirements are incompatible with those of the subject software. We propose a technique called platform independent executable trace. Our technique traces and virtualizes a regular program execution that is platform dependent, and generates a stand-alone program called the trace program. Running the trace program re-generates the original execution. More importantly, trace program execution is completely independent of the underlying operating system and libraries such that it can be compiled and executed on arbitrary platforms. As such, it can be analyzed by a third party tool on a platform preferred by the tool. We have implemented the technique on x86 and sensor platforms. We show that buggy executions of 10 real-world Windows and sensor applications can be traced and virtualized, and later analyzed by existing Linux tools. We also demonstrate how the technique can be used in cross-platform malware analysis.", "author": [{"name": "Yonghwi Kwon", "affiliation": "Department of Computer Science, Purdue University, West Lafayette, Indiana, USA"}, {"name": "Xiangyu Zhang", "affiliation": "Department of Computer Science, Purdue University, West Lafayette, Indiana, USA"}, {"name": "Dongyan Xu", "affiliation": "Department of Computer Science, Purdue University, West Lafayette, Indiana, USA"}], "time": "Nov. 2013", "citationCount": "2", "references": [{"title": " and Dongyan Xu. Stealthy malware detection through vmm-based \"out-of-the-box\" semantic view reconstruction. In CCS '07", "authors": ["Xuxian Jiang", " Xinyuan Wang"]}, {"title": " and Mark D. Hill. A \"flight data recorder\" for enabling full-system multiprocessor deterministic replay. In ISCA '03", "authors": ["Min Xu", " Rastislav Bodik"]}]},
{"doi": "10.1109/ASE.2019.00079", "title": "Property Inference for Deep Neural Networks", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Neurons", "Feeds", "Biological neural networks", "Feature extraction", "Task analysis", "Robustness", "Safety"], "abstract": "We present techniques for automatically inferring formal properties of feed-forward neural networks. We observe that a significant part (if not all) of the logic of feed forward networks is captured in the activation status (on or off) of its neurons. We propose to extract patterns based on neuron decisions as preconditions that imply certain desirable output property e.g., the prediction being a certain class. We present techniques to extract input properties, encoding convex predicates on the input space that imply given output properties and layer properties, representing network properties captured in the hidden layers that imply the desired output behavior. We apply our techniques on networks for the MNIST and ACASXU applications. Our experiments highlight the use of the inferred properties in a variety of tasks, such as explaining predictions, providing robustness guarantees, simplifying proofs, and network distillation.", "author": [{"name": "Divya Gopinath", "affiliation": "divgml@gmail.com, Carnegie Mellon University and NASA Ames"}, {"name": "Hayes Converse", "affiliation": "University of Texas at Austin"}, {"name": "Corina Pasareanu", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Ankur Taly", "affiliation": "Google AI (now at Fiddler labs)"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Towards evaluating the robustness of neural networks\"", "authors": ["N Carlini ", " D Wagner"]}, {"title": " \"How important is a neuron\"", "authors": ["K Dhamdhere", " M Sundararajan ", " Q Yan"]}, {"title": " \"Minimum satisfying assignments for smt\"", "authors": ["I Dillig", " T Dillig", " K. L. McMillan ", " A Aiken"]}, {"title": " \"Towards a rigorous science of interpretable machine learning\"", "authors": ["B. Doshi-Velez", " Finale ", " Kim"]}, {"title": " \"Output range analysis for deep feedforward neural networks\"", "authors": ["S Dutta", " S Jha", " S Sankaranarayanan ", " A Tiwari"]}, {"title": " \"The Daikon system for dynamic detection of likely invariants\"", "authors": ["M. D. Ernst", " J. H. Perkins", " P. J. Guo", " S McCamant", " C Pacheco", " M. S. Tschantz", " ."]}, {"title": " \"Deep neural networks as 0-1 mixed integer linear programs: A feasibility study\"", "authors": ["M Fischetti ", " J Jo"]}, {"title": " \"Houdini an annotation assistant for esc/java\"", "authors": ["C Flanagan ", " K. R. M. Leino"]}, {"title": " \"ICE: A robust framework for learning invariants\"", "authors": ["P Garg", " C Loding", " P Madhusudan ", " D Neider"]}, {"title": " \"Learning invariants using decision trees and implication counterexamples\"", "authors": ["P Garg", " D Neider", " P Madhusudan ", " D Roth"]}, {"title": " \"AI2: safety and robustness certification of neural networks with abstract interpretation\"", "authors": ["T Gehr", " M Mirman", " D Drachsler-Cohen", " P Tsankov", " S Chaudhuri ", " M. T. Vechev"]}, {"title": " \"Property inference for deep neural networks\"", "authors": ["D Gopinath", " H Converse", " C. S. Pasareanu ", " A Taly"]}, {"title": " \"A survey of methods for explaining black box models\"", "authors": ["R Guidotti", " A Monreale", " S Ruggieri", " F Turini", " F Giannotti ", " D Pedreschi"]}, {"title": " \"Distilling the knowledge in a neural network\"", "authors": ["G Hinton", " O Vinyals ", " J Dean"]}, {"title": " \"Safety verification of deep neural networks\"", "authors": ["X Huang", " M Kwiatkowska", " S Wang ", " M Wu"]}, {"title": " \"Learning how to explain neural networks: Patternnet and patternattribution\"", "authors": ["P. jan Kindermans", " K. T. Schutt", " M Alber", " K.-R. M\u00fcller", " D Erhan", " B Kim", " ."]}, {"title": " \"Policy compression for aircraft collision avoidance systems\"", "authors": ["K Julian", " J Lopez", " J Brush", " M Owen ", " M Kochenderfer"]}, {"title": " \"Reluplex: An efficient SMT solver for verifying deep neural networks\"", "authors": ["G Katz", " C Barrett", " D Dill", " K Julian ", " M Kochenderfer"]}, {"title": " \"Influence-directed explanations for deep convolutional networks\"", "authors": ["K Leino", " S Sen", " A Datta", " M Fredrikson ", " L Li"]}, {"title": " \"The mythos of model interpretability\"", "authors": ["Z. C. Lipton"]}, {"title": " \"A unified approach to interpreting model predictions\"", "authors": ["S. M. Lundberg ", " S.-I. Lee"]}, {"title": " \"Interpolation and model checking\"", "authors": ["K. L. McMillan"]}, {"title": " \"DeepFool: A simple and accurate method to fool deep neural networks\"", "authors": ["S. Moosavi-Dezfooli", " A Fawzi ", " P Frossard"]}, {"title": " \"The limitations of deep learning in adversarial settings\"", "authors": ["N Papernot", " P. D. McDaniel", " S Jha", " M Fredrikson", " Z. B. Celik ", " A Swami"]}, {"title": " \"\u201dWhy Should I Trust You?\u201d: Explaining the Predictions of Any Classifier\"", "authors": ["M. T. Ribeiro", " S Singh ", " C Guestrin"]}, {"title": " \"Anchors: High-precision model-agnostic explanations\"", "authors": ["M. T. Ribeiro", " S Singh ", " C Guestrin"]}, {"title": " \"Nic: Detecting adversarial samples with neural network invariant checking\"", "authors": ["G. T. W.-C. L. X. Z. Shiqing Ma ", " Yingqi Liu"]}, {"title": " \"Not just a black box: Learning important features through propagating activation differences\"", "authors": ["A Shrikumar", " P Greenside", " A Shcherbina ", " A Kundaje"]}, {"title": " \"Deep inside convolutional networks: Visualising image classification models and saliency maps\"", "authors": ["K Simonyan", " A Vedaldi ", " A Zisserman"]}, {"title": " \"Axiomatic attribution for deep networks\"", "authors": ["M Sundararajan", " A Taly ", " Q Yan"]}, {"title": " \"Efficient formal safety analysis of neural networks\"", "authors": ["S Wang", " K Pei", " J Whitehouse", " J Yang ", " S Jana"]}, {"title": " \"Formal security analysis of neural networks using symbolic intervals\"", "authors": ["S Wang", " K Pei", " J Whitehouse", " J Yang ", " S Jana"]}]},
{"doi": "10.1109/ASEW.2015.22", "title": "Empirical Analysis on Parallel Tasks in Crowdsourcing Software Development", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Crowdsourcing", "Software", "Market research", "Parallel processing", "Production", "Complexity theory", "Measurement"], "abstract": "Crowdsourcing has become a popular option for rapid acquisition, with reported benefits such as shortened schedule due to mass parallel development, innovative solutions based on the \"wisdom of crowds\", and reduced cost due to the pre-pricing and bidding effects. However, most of existing studies on software crowdsourcing are focusing on individual task level, providing limited insights on the practice as well as outcomes at overall project level. To develop better understanding of crowdsourcing-based software projects, this paper reports an empirical study on analyzing four largest projects on Topcoder platform that intensively leverage crowdsourcing throughout the product implementation, testing, and assembly phases. The analysis results conclude that: (1) crowdsourcing task scheduling follows typical patterns including prototyping, component development, bug hunt, and assembly and coding (2) budget phase distribution patterns does not following traditional patterns, and uploading task rate is not representing same budget rate associated with them as about 75% of uploaded tasks would price under 67% of total project budget, (3) Higher degree of parallelism would lead to higher demand for competing on tasks and shorter planning schedule to complete the project consequently better resource allocation.", "author": [{"name": "Razieh Lotfalian Saremi", "affiliation": "School of Systems and Enterprises Stevens Institute of Technology Hoboken, NJ, USA"}, {"name": "Ye Yang", "affiliation": "School of Systems and Enterprises Stevens Institute of Technology Hoboken, NJ, USA"}], "time": "Nov. 2015", "citationCount": "4", "references": [{"title": " \"Crowdsourcing: Why the Power of the Crowd Is Driving the Future of Business\"", "authors": ["J. Howe"]}, {"title": " \"The Wisdom of Crowds\"", "authors": ["J. Surowiecki"]}, {"title": " \"Jeffery: Toward trustworthy software process models: an exploratory study on transformable process modeling\"", "authors": ["Zhang He", " Kitchenham Barbara ", " D. Ross"]}, {"title": " \"What's the Right Price? Pricing Tasks for Finishing on Time\"", "authors": ["S. Faradani", " B. Hartmann ", " P.G. Ipeirotis"]}, {"title": " \"Money glory and cheap talk: analyzing strategic behavior of contestants in simultaneous crowdsourcing contests on topcoder.com\"", "authors": ["N. Archak"]}, {"title": " \"Effects of Award on Worker Behaviors in Crowdsourcing\" in ESEM", "authors": ["Y. Yang ", " R.L. Saremi"]}, {"title": " \"Borrowing from the Crowd: A Study of Recombination in Software Design Competitions\" in ICS-SE 2015", "authors": ["T. LAtoza", " M. Chen", " L. Jiang", " M. Zhao", " A. Van", " der Hoek", " ."]}, {"title": " \"Dynamic Simulation of Software Workers and Task Completion\" in Crowdsourcing in Software Engineering", "authors": ["R.L. Saremi ", " Y. Yang"]}, {"title": " \"More than fun and money. Worker Motivation in Crowdsourcing - A Study on Mechanical Turk\"", "authors": ["N. Kaufmann", " T. Schulze ", " D. Veit"]}, {"title": " \"Collaboratively Crowdsourcing Workflows with Turkomatic\"", "authors": ["A. Kulkarni", " M. Can ", " B. Hartman"]}, {"title": " \"Analyzing the economic efficiency of eBay-like online reputation reporting mechanisms\"", "authors": ["C. Dellarocas"]}, {"title": " \"Social networking meets software development: perspectives from github msdn stack exchange and topcoder\"", "authors": ["A. Begel", " J. Bosch ", " M. A. Storey"]}]},
{"doi": "10.1109/ASE.2013.6693066", "title": "Improving efficiency of dynamic analysis with dynamic dependence summaries", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Arrays", "Concrete", "Abstracts", "Libraries", "Indexes", "Java", "Accuracy"], "abstract": "Modern applications make heavy use of third-party libraries and components, which poses new challenges for efficient dynamic analysis. To perform such analyses, transitive dependent components at all layers of the call stack must be monitored and analyzed, and as such may be prohibitively expensive for systems with large libraries and components. As an approach to address such expenses, we record, summarize, and reuse dynamic dataflows between inputs and outputs of components, based on dynamic control and data traces. These summarized dataflows are computed at a fine-grained instruction level; the result of which, we call \u201cdynamic dependence summaries.\u201d Although static summaries have been proposed, to the best of our knowledge, this work presents the first technique for dynamic dependence summaries. The benefits to efficiency of such summarization may be afforded with losses of accuracy. As such, we evaluate the degree of accuracy loss and the degree of efficiency gain when using dynamic dependence summaries of library methods. On five large programs from the DaCapo benchmark (for which no existing whole-program dynamic dependence analyses have been shown to scale) and 21 versions of NANOXML, the summarized dependence analysis provided 90% accuracy and a speed-up of 100% (i.e., \u00d72), on average, when compared to traditional exhaustive dynamic dependence analysis.", "author": [{"name": "Vijay Krishna Palepu", "affiliation": "University of California, Irvine, USA"}, {"name": "Guoqing Xu", "affiliation": "University of California, Irvine, USA"}, {"name": "James A. Jones", "affiliation": "University of California, Irvine, USA"}], "time": "Nov. 2013", "citationCount": "6", "references": []},
{"doi": "10.1109/ASE.2019.00080", "title": "An Empirical Study Towards Characterizing Deep Learning Development and Deployment Across Different Frameworks and Platforms", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software", "Predictive models", "Quantization (signal)", "Training", "Mobile handsets", "Computational modeling", "Runtime"], "abstract": "Deep Learning (DL) has recently achieved tremendous success. A variety of DL frameworks and platforms play a key role to catalyze such progress. However, the differences in architecture designs and implementations of existing frameworks and platforms bring new challenges for DL software development and deployment. Till now, there is no study on how various mainstream frameworks and platforms influence both DL software development and deployment in practice. To fill this gap, we take the first step towards understanding how the most widely-used DL frameworks and platforms support the DL software development and deployment. We conduct a systematic study on these frameworks and platforms by using two types of DNN architectures and three popular datasets. (1) For development process, we investigate the prediction accuracy under the same runtime training configuration or same model weights/biases. We also study the adversarial robustness of trained models by leveraging the existing adversarial attack techniques. The experimental results show that the computing differences across frameworks could result in an obvious prediction accuracy decline, which should draw the attention of DL developers. (2) For deployment process, we investigate the prediction accuracy and performance (refers to time cost and memory consumption) when the trained models are migrated/quantized from PC to real mobile devices and web browsers. The DL platform study unveils that the migration and quantization still suffer from compatibility and reliability issues. Meanwhile, we find several DL software bugs by using the results as a benchmark. We further validate the results through bug confirmation from stakeholders and industrial positive feedback to highlight the implications of our study. Through our study, we summarize practical guidelines, identify challenges and pinpoint new research directions, such as understanding the characteristics of DL frameworks and platforms, avoiding compatibility and reliability issues, detecting DL software bugs, and reducing time cost and memory consumption towards developing and deploying high quality DL systems effectively.", "author": [{"name": "Qianyu Guo", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Sen Chen", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Xiaofei Xie", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Lei Ma", "affiliation": "Kyushu University, Japan"}, {"name": "Qiang Hu", "affiliation": "Kyushu University, Japan"}, {"name": "Hongtao Liu", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}, {"name": "Yang Liu", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Jianjun Zhao", "affiliation": "Kyushu University, Japan"}, {"name": "Xiaohong Li", "affiliation": "College of Intelligence and Computing, Tianjin University, China"}], "time": "Nov. 2019", "citationCount": "3", "references": [{"title": " \"Tensorflow: A system for large-scale machine learning\"", "authors": ["M. Abadi", " P. Barham", " J. Chen", " Z. Chen", " A. Davis", " J. Dean", " ."]}, {"title": " \"An in-depth performance characterization of CPU-and GPU-based DNN training on modern architectures\"", "authors": ["A. A. Awan", " H. Subramoni ", " D. K. P"]}, {"title": " \"Comparative study of deep learning software frameworks\"", "authors": ["S. Bahrampour", " N. Ramakrishnan", " L. Schott ", " M. Shah"]}, {"title": " \"Comparative study of caffe neon theano and torch for deep learning\"", "authors": ["S. Bahrampour", " N. Ramakrishnan", " L. Schott ", " M. Shah"]}, {"title": " \"Decision-based adversarial attacks: Reliable attacks against black-box machine learning models\"", "authors": ["W. Brendel", " J. Rauber ", " M. Bethge"]}, {"title": " \"Towards evaluating the robustness of neural networks\"", "authors": ["N. Carlini ", " D. Wagner"]}, {"title": " \"Deepdriving: Learning affordance for direct perception in autonomous driving\"", "authors": ["C. Chen", " A. Seff", " A. Kornhauser ", " J. Xiao"]}, {"title": " \"Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems\"", "authors": ["T. Chen", " M. Li", " Y. Li", " M. Lin", " N. Wang", " M. Wang", " ."]}, {"title": " \"Empirical evaluation of gated recurrent neural networks on sequence modeling\"", "authors": ["J. Chung", " C. Gulcehre", " K. Cho ", " Y. Bengio"]}, {"title": " \"Dawnbench: An end-to-end deep learning benchmark and competition\"", "authors": ["C. Coleman", " D. Narayanan", " D. Kang", " T. Zhao", " J. Zhang", " L. Nardi", " ."]}, {"title": " \"Deepstellar: model-based quantitative analysis of stateful deep learning systems\"", "authors": ["X. Du", " X. Xie", " Y. Li", " L. Ma", " Y. Liu ", " J. Zhao"]}, {"title": " \"Explaining and harnessing adversarial examples (2014)\"", "authors": ["I. J. Goodfellow", " J. Shlens ", " C. Szegedy"]}, {"title": " \"Lstm: A search space odyssey\"", "authors": ["K. Greff", " R. K. Srivastava", " J. Koutnlk", " B. R. Steunebrink ", " J. Schmid-huber"]}, {"title": " \"Deep residual learning for image recognition\"", "authors": ["K. He", " X. Zhang", " S. Ren ", " J. Sun"]}, {"title": " \"Speech and language processing\"", "authors": ["D. Jurafsky ", " J. H. Martin"]}, {"title": " \"Reluplex: An efficient smt solver for verifying deep neural networks\"", "authors": ["G. Katz", " C. Barrett", " D. L. Dill", " K. Julian ", " M. J. Kochenderfer"]}, {"title": " \"Comparative analysis of open source frameworks for machine learning with use case in single-threaded and multi-threaded modes\"", "authors": ["Y. Kochura", " S. Stirenko", " O. Alienin", " M. Novotarskiy ", " Y. Gordienko"]}, {"title": " \"Gradient-based learning applied to document recognition\"", "authors": ["Y. LeCun", " L. Bottou", " Y. Bengio ", " P. Haffner"]}, {"title": " \"Evaluating the energy efficiency of deep convolutional neural networks on cpus and gpus\"", "authors": ["D. Li", " X. Chen", " M. Becchi ", " Z. Zong"]}, {"title": " \"Benchmarking deep learning frameworks: Design considerations metrics and beyond\"", "authors": ["L. Liu", " Y. Wu", " W. Wei", " W. Cao", " S. Sahin ", " Q. Zhang"]}, {"title": " \"Deepct: Tomographic combinatorial testing for deep learning systems\"", "authors": ["L. Ma", " F. Juefei-Xu", " M. Xue", " B. Li", " L. Li", " Y. Liu", " ."]}, {"title": " \"Deepgauge: Multi-granularity testing criteria for deep learning systems\"", "authors": ["L. Ma", " F. Juefei-Xu", " F. Zhang", " J. Sun", " M. Xue", " B. Li", " C. Chen", " T. Su", " L. Li", " Y. Liu ."]}, {"title": " \"Deepmutation: Mutation testing of deep learning systems\"", "authors": ["L. Ma", " F. Zhang", " J. Sun", " M. Xue", " B. Li", " F. Juefei-Xu", " C. Xie", " L. Li", " Y. Liu", " J. Zhao ."]}, {"title": " \"Moving deep learning into web browser: How far can we go?\"", "authors": ["Y. Ma", " D. Xiang", " S. Zheng", " D. Tian ", " X. Liu"]}, {"title": " \"TensorFuzz: Debugging neural networks with coverage-guided fuzzing\"", "authors": ["A. Odena", " C. Olsson", " D. Andersen ", " I. Goodfellow"]}, {"title": " \"Deep learning for mobile multimedia: A survey\"", "authors": ["K. Ota", " M. S. Dao", " V. Mezaris ", " F. G. De Natale"]}, {"title": " \"Practical black-box attacks against deep learning systems using adversarial examples\"", "authors": ["N. Papernot", " P. McDaniel", " I. Goodfellow", " S. Jha", " Z. B. Celik ", " A. Swami"]}, {"title": " \"Automatic differentiation in PyTorch\"", "authors": ["A. Paszke", " S. Gross", " S. Chintala", " G. Chanan", " E. Yang", " Z. DeVito", " ."]}, {"title": " \"Deepxplore: Automated whitebox testing of deep learning systems\"", "authors": ["K. Pei", " Y. Cao", " J. Yang ", " S. Jana"]}, {"title": " \"Foolbox: A python toolbox to benchmark the robustness of machine learning models\"", "authors": ["J. Rauber", " W. Brendel ", " M. Bethge"]}, {"title": " \"Software engineering for machine learning: A case study\"", "authors": ["A. B. Saleema Amershi", " H. G. Christian Bird", " Rob DeLine", " B. N. Ece Kamar", " Nachiappan Nagappan ", " T. Zimmermann"]}, {"title": " \"CNTK: Microsoft\u2019s open-source deeplearning toolkit\"", "authors": ["F. Seide ", " A. Agarwal"]}, {"title": " \"Evaluation of deep learning frameworks over different HPC architectures\"", "authors": ["S. Shams", " R. Platania", " K. Lee ", " S.-J. Park"]}, {"title": " \"A comparative study of open source deep learning frameworks\"", "authors": ["A. Shatnawi", " G. Al-Bdour", " R. Al-Qurran ", " M. Al-Ayyoub"]}, {"title": " \"Benchmarking state-of-the-art deep learning software tools\"", "authors": ["S. Shi", " Q. Wang", " P. Xu ", " X. Chu"]}, {"title": " \"Very deep convolutional networks for large-scale image recognition\"", "authors": ["K. Simonyan ", " A. Zisserman"]}, {"title": " \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\"", "authors": ["Y. Tian", " K. Pei", " S. Jana ", " B. Ray"]}, {"title": " \"Deep learning towards mobile applications\"", "authors": ["J. Wang", " B. Cao", " P. Yu", " L. Sun", " W. Bao ", " X. Zhu"]}, {"title": " \"Deephunter: a coverage-guided fuzz testing framework for deep neural networks\"", "authors": ["X. Xie", " L. Ma", " F. Juefei-Xu", " M. Xue", " H. Chen", " Y. Liu", " ."]}, {"title": " \"Diffchaser: Detecting disagreements for deep neural networks\"", "authors": ["X. Xie", " L. Ma", " H. Wang", " Y. Li", " Y. Liu ", " X. Li"]}, {"title": " \"A first look at deep learning apps on smartphones\"", "authors": ["M. Xu", " J. Liu", " Y. Liu", " F. X. Lin", " Y. Liu ", " X. Liu"]}, {"title": " \"An empirical study on TensorFlow program bugs\"", "authors": ["Y. Zhang", " Y. Chen", " S.-C. Cheung", " Y. Xiong ", " L. Zhang"]}]},
{"doi": "10.1109/ASEW.2015.17", "title": "Extending Manual GUI Testing Beyond Defects by Building Mental Models of Software Behavior", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Graphical user interfaces", "Cognitive science", "Testing", "Software", "Androids", "Humanoid robots", "Security"], "abstract": "Manual GUI testing involves providing inputs to the software via its GUI and determining the software's correctness using its outputs, one of them being the GUI itself. Because of its human-in-the-loop nature, GUI testing is known to be a time-consuming activity. In practice, it is done by junior, inexpensive testers to keep costs low at the very tail-end of the software development process. In this paper, we posit that the importance of GUI testing has suffered due to its traditional narrow role -- to detect residual software defects. Because of its human-in-the-loop nature, GUI testing has the potential to provide outputs other than defects and to be used as inputs to several downstream activities, e.g., security analysis. One such output is the mental model that the GUI tester creates during testing, a model that implicitly informs the tester of the software designer's intent. To evaluate our claim, we consider an important question used for security assessment of Android apps: \"What permission-sensitive behaviors does this app exhibit?\" Our assessment is based on the comparison of 2 mental models of 12 Android apps -- one derived from the app's usage and the other from its public description. We compare these two models with a third, automatically derived model -- the permissions the app seeks from the Android OS. Our results show that the usage-based model provides unique insights into app behavior. This model may be an important outcome of GUI testing, and its consistency with other behavioral information about the app could later be used in software quality assurance activities such as security assessment.", "author": [{"name": "Emily Kowalczyk", "affiliation": "Department of Computer Science, University of Maryland, College Park, College Park, MD"}, {"name": "Atif Memon", "affiliation": "Department of Computer Science, University of Maryland, College Park, College Park, MD"}], "time": "Nov. 2015", "citationCount": "4", "references": [{"title": " \"A framework for automated testing of javascript web applications\"", "authors": ["S. Artzi", " J. Dolby", " S. H. Jensen", " A. Moller ", " F. Tip"]}, {"title": " \"A systematic capture and replay strategy for testing complex gui based java applications\"", "authors": ["O. El Ariss", " D. Xu", " S. D", "ey", " B. Vender", " P. McClean ", " B. Slator"]}, {"title": " \"Hierarchical gui test case generation using automated planning\"", "authors": ["A. M. Memon", " M. E. Pollack ", " M. L. Soffa"]}, {"title": " \"Modeling and testing hierarchical guis\" in Abstract State Machines.", "authors": ["A. C. Paiva", " N. Tillmann", " J. C. Faria ", " R. F. Vidal"]}, {"title": " \"Designing and comparing automated test oracles for gui-based software applications\"", "authors": ["Q. Xie ", " A. M. Memon"]}, {"title": " \"Verification and validation in industry - a qualitative survey on the state of practice\"", "authors": ["C. Andersson ", " P. Runeson"]}, {"title": " \"Top five (wrong) reasons you don't have testers\"", "authors": ["J. Spolsky"]}, {"title": " \"Mental models in human-computer interaction\"", "authors": ["S. J. Payne"]}, {"title": " \"Flowdroid: Precise context flow field object-sensitive and lifecycle-aware taint analysis for android apps\"", "authors": ["S. Arzt", " S. Rasthofer", " C. Fritz", " E. Bodden", " A. Bartel", " J. Klein", " ."]}, {"title": " \"Android permissions demystified\"", "authors": ["A. P. Felt", " E. Chin", " S. Hanna", " D. Song ", " D. Wagner"]}, {"title": " \"Unsafe exposure analysis of mobile in-app advertisements\"", "authors": ["M. C. Grace", " W. Zhou", " X. Jiang ", " A.-R. Sadeghi"]}, {"title": " \"Drebin: Effective and explainable detection of android malware in your pocket\"", "authors": ["D. Arp", " M. Spreitzenbarth", " M. H\u00fcbner", " H. Gascon", " K. Rieck ", " C. Siemens"]}, {"title": " \"Asdroid: Detecting stealthy behaviors in android applications by user interface and program behavior contradiction\"", "authors": ["J. Huang", " X. Zhang", " L. Tan", " P. Wang ", " B. Liang"]}, {"title": " \"Android apps consistency scrutinized\"", "authors": ["K. Alharbi", " S. Blackshear", " E. Kowalczyk", " A. M. Memon", " B.-Y. E. Chang ", " T. Yeh"]}, {"title": " \"Permission-based android malware detection\"", "authors": ["Z. Aung ", " W. Zaw"]}, {"title": " \"Checking app behavior against app descriptions\"", "authors": ["A. Gorla", " I. Tavecchia", " F. Gross ", " A. Zeller"]}, {"title": " \"Whyper: Towards automating risk assessment of mobile applications\"", "authors": ["R. P", "ita", " X. Xiao", " W. Yang", " W. Enck ", " T. Xie"]}, {"title": "\"Appbrain stats\"", "authors": []}, {"title": " \"Addroid: Privilege separation for applications and advertisers in android\"", "authors": ["P. Pearce", " A. P. Felt", " G. Nunez ", " D. Wagner"]}, {"title": " \"Inves-tigating user privacy in android ad libraries\"", "authors": ["R. Stevens", " C. Gibler", " J. Crussell", " J. Erickson ", " H. Chen"]}, {"title": " \"I've got 99 problems but vibration ain't one: a survey of smartphone users' concerns\"", "authors": ["A. P. Felt", " S. Egelman ", " D. Wagner"]}, {"title": " \"Expectation and purpose: Understanding users' mental models of mobile app privacy through crowdsourcing\"", "authors": ["J. Lin", " S. Amini", " J. I. Hong", " N. Sadeh", " J. Lindqvist ", " J. Zhang"]}, {"title": " \"Android permissions: User attention comprehension and behavior\"", "authors": ["A. P. Felt", " E. Ha", " S. Egelman", " A. Haney", " E. Chin ", " D. Wagner"]}, {"title": " \"A conundrum of permissions: installing applications on an android smartphone\" in Financial Cryptography and Data Security.", "authors": ["P. G. Kelley", " S. Consolvo", " L. F. Cranor", " J. Jung", " N. Sadeh ", " D. Wetherall"]}, {"title": " \"Au-tocog: Measuring the description-to-permission fidelity in android applications\"", "authors": ["Z. Qu", " V. Rastogi", " X. Zhang", " Y. Chen", " T. Zhu ", " Z. Chen"]}, {"title": " \"Scandroid: Automated security certification of android applications\"", "authors": ["A. P. Fuchs", " A. Chaudhuri ", " J. S. Foster"]}, {"title": " \"Using probabilistic generative models for ranking risks of android apps\"", "authors": ["H. Peng", " C. Gates", " B. Sarma", " N. Li", " Y. Qi", " R. Potharaju", " ."]}, {"title": "\"Apktool\".", "authors": []}, {"title": "\"Official android documentation\".", "authors": []}, {"title": " \"Pscout: analyzing the android permission specification\"", "authors": ["K. W. Y. Au", " Y. F. Zhou", " Z. Huang ", " D. Lie"]}, {"title": "\"Venndiagram\".", "authors": []}]},
{"doi": "10.1109/ASE.2013.6693067", "title": "Efficient parametric runtime verification with deterministic string rewriting", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Monitoring", "Runtime", "Pattern matching", "Automata", "Safety", "Algorithm design and analysis", "Java"], "abstract": "Early efforts in runtime verification show that parametric regular and temporal logic specifications can be monitored efficiently. These approaches, however, have limited expressiveness: their specifications always reduce to monitors with finite state. More recent developments showed that parametric context-free properties can be efficiently monitored with overheads generally lower than 12-15%. While context-free grammars are more expressive than finite-state languages, they still do not allow every computable safety property. This paper presents a monitor synthesis algorithm for string rewriting systems (SRS). SRSs are well known to be Turing complete, allowing for the formal specification of any computable safety property. Earlier attempts at Turing complete monitoring have been relatively inefficient. This paper demonstrates that monitoring parametric SRSs is practical. The presented algorithm uses a modified version of Aho-Corasick string searching for quick pattern matching with an incremental rewriting approach that avoids reexamining parts of the string known to contain no redexes.", "author": [{"name": "Patrick Meredith", "affiliation": "University of Illinois at Urbana-Champaign, United States of America"}, {"name": "Grigore Ro\u015fu", "affiliation": "University of Illinois at Urbana-Champaign, United States of America"}], "time": "Nov. 2013", "citationCount": "7", "references": []},
{"doi": "10.1109/ASE.2019.00081", "title": "RefBot: Intelligent Software Refactoring Bot", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software", "Tools", "Bot (Internet)", "Measurement", "Manuals", "Pipelines", "Object oriented modeling"], "abstract": "The adoption of refactoring techniques for continuous integration received much less attention from the research community comparing to root-canal refactoring to fix the quality issues in the whole system. Several recent empirical studies show that developers, in practice, are applying refactoring incrementally when they are fixing bugs or adding new features. There is an urgent need for refactoring tools that can support continuous integration and some recent development processes such as DevOps that are based on rapid releases. Furthermore, several studies show that manual refactoring is expensive and existing automated refactoring tools are challenging to configure and integrate into the development pipelines with significant disruption cost. In this paper, we propose, for the first time, an intelligent software refactoring bot, called RefBot. Integrated into the version control system (e.g. GitHub), our bot continuously monitors the software repository, and it is triggered by any \"open\" or \"merge\" action on pull requests. The bot analyzes the files changed during that pull request to identify refactoring opportunities using a set of quality attributes then it will find the best sequence of refactorings to fix the quality issues if any. The bot recommends all these refactorings through an automatically generated pull-request. The developer can review the recommendations and their impacts in a detailed report and select the code changes that he wants to keep or ignore. After this review, the developer can close and approve the merge of the bot's pull request. We quantitatively and qualitatively evaluated the performance and effectiveness of RefBot by a survey conducted with experienced developers who used the bot on both open source and industry projects.", "author": [{"name": "Vahid Alizadeh", "affiliation": "Software Engineering Intelligence Lab, University of Michigan, USA"}, {"name": "Mohamed Amine Ouali", "affiliation": "Software Engineering Intelligence Lab, University of Michigan, USA"}, {"name": "Marouane Kessentini", "affiliation": "Software Engineering Intelligence Lab, University of Michigan, USA"}, {"name": "Meriem Chater", "affiliation": "Software Engineering Intelligence Lab, University of Michigan, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Software change impact analysis\"", "authors": ["S. A. Bohner ", " R. S. Arnold"]}, {"title": " \"Interactive and guided architectural refactoring with search-based recommendation\"", "authors": ["Y. Lin", " X. Peng", " Y. Cai", " D. Dig", " D. Zheng ", " W. Zhao"]}, {"title": " \"A survey of software refactoring\"", "authors": ["T. Mens ", " T. Tourw\u00e9"]}, {"title": " \"Improving usability of software refactoring tools\"", "authors": ["E. Mealy", " D. Carrington", " P. Strooper ", " P. Wyeth"]}, {"title": " \"High dimensional search-based software engineering: finding tradeoffs among 15 objectives for automating software refactoring using nsga-iii\"", "authors": ["M. W. Mkaouer", " M. Kessentini", " S. Bechikh", " K. Deb ", " M. \u00d3 Cinn\u00e9ide"]}, {"title": " \"Search-based refactoring for software maintenance\"", "authors": ["M. OKeeffe ", " M. O. Cinneide"]}, {"title": " \"A comparison of software refactoring tools\"", "authors": ["J. Simmonds ", " T. Mens"]}, {"title": " \"How we refactor and how we know it\"", "authors": ["E. Murphy-Hill", " C. Parnin ", " A. P. Black"]}, {"title": " \"An empirical study of refactoringchallenges and benefits at microsoft\"", "authors": ["M. Kim", " T. Zimmermann ", " N. Nagappan"]}, {"title": " \"A comparative study of manual and automated refactorings\"", "authors": ["S. Negara", " N. Chen", " M. Vakilian", " R. E. Johnson ", " D. Dig"]}, {"title": " \"Reconciling manual and automatic refactoring\"", "authors": ["X. Ge", " Q. L. DuBose ", " E. Murphy-Hill"]}, {"title": " \"A survey of software refactoring\"", "authors": ["T. Mens ", " T. Tourwe"]}, {"title": " \"Use disuse and misuse of automated refactorings\"", "authors": ["M. Vakilian", " N. Chen", " S. Negara", " B. A. Rajkumar", " B. P. Bailey ", " R. E. Johnson"]}, {"title": " \"Fault-buster: An automatic code smell refactoring toolset\"", "authors": ["G. Sz\u0151ke", " C. Nagy", " L. J. F\u00fcl\u00f6p", " R. Ferenc ", " T. Gyim\u00f3thy"]}, {"title": " \"On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation\"", "authors": ["F. Palomba", " G. Bavota", " M. D. Penta", " F. Fasano", " R. Oliveto ", " A. De Lucia"]}, {"title": " \"Identification of move method refactoring opportunities\"", "authors": ["N. Tsantalis ", " A. Chatzigeorgiou"]}, {"title": " \"Recommendation system for software refactoring using innovization and interactive dynamic optimization\"", "authors": ["M. W. Mkaouer", " M. Kessentini", " S. Bechikh", " K. Deb ", " M. \u00d3 Cinn\u00e9ide"]}, {"title": " \"Many-objective software remodularization using nsga-iii\"", "authors": ["W. Mkaouer", " M. Kessentini", " A. Shaout", " P. Koligheu", " S. Bechikh", " K. Deb", " ."]}, {"title": " \"Reducing interactive refactoring effort via clustering-based multi-objective search\"", "authors": ["V. Alizadeh ", " M. Kessentini"]}, {"title": " \"An interactive and dynamic search-based approach to software refactoring recommendations\"", "authors": ["V. Alizadeh", " M. Kessentini", " W. Mkaouer", " M. Ocinneide", " A. Ouni ", " Y. Cai"]}, {"title": " \"Recommending refactoring operations in large software systems\" in Recommendation Systems in Software Engineering", "authors": ["G. Bavota", " A. De Lucia", " A. Marcus ", " R. Oliveto"]}, {"title": " \"A stochastic approach to automated design improvement\"", "authors": ["M. O\u2019Keeffe ", " M. \u00d3 Cinn\u00e9ide"]}, {"title": " \"Pareto optimal search based refactoring at the design level\"", "authors": ["M. Harman ", " L. Tratt"]}, {"title": " \"Search-based determination of refactorings for improving the class structure of object-oriented systems\"", "authors": ["O. Seng", " J. Stammel ", " D. Burkhart"]}, {"title": " \"Design defects detection and correction by example\"", "authors": ["M. Kessentini", " W. Kessentini", " H. Sahraoui", " M. Boukadoum ", " A. Ouni"]}, {"title": " \"Search-based refactoring using recorded code changes\"", "authors": ["A. Ouni", " M. Kessentini ", " H. Sahraoui"]}, {"title": " \"Multicriteria code refactoring using search-based software engineering: an industrial case study\"", "authors": ["A. Ouni", " M. Kessentini", " H. Sahraoui", " K. Inoue ", " K. Deb"]}, {"title": " \"Model transformation modularization as a many-objective optimization problem\"", "authors": ["M. Fleck", " J. Troya", " M. Kessentini", " M. Wimmer ", " B. Alkhazi"]}, {"title": " \"Search-based software library recommendation using multiobjective optimization\"", "authors": ["A. Ouni", " R. G. Kula", " M. Kessentini", " T. Ishio", " D. M. German ", " K. Inoue"]}, {"title": " \"Web service antipatterns detection using genetic programming\"", "authors": ["A. Ouni", " R. Gaikovina Kula", " M. Kessentini ", " K. Inoue"]}, {"title": " \"Prioritizing codesmells correction tasks using chemical reaction optimization\"", "authors": ["A. Ouni", " M. Kessentini", " S. Bechikh ", " H. Sahraoui"]}, {"title": " \"Generating transformation rules from examples for behavioral models\"", "authors": ["M. Kessentini", " M. Wimmer", " H. Sahraoui ", " M. Boukadoum"]}, {"title": " \"Search-based detection of high-level model changes\"", "authors": ["A. ben Fadhel", " M. Kessentini", " P. Langer ", " M. Wimmer"]}, {"title": " \"Search-based design defects detection by example\"", "authors": ["M. Kessentini", " H. Sahraoui", " M. Boukadoum ", " M. Wimmer"]}, {"title": " \"Example-based sequence diagrams to colored petri nets transformation using heuristic search\"", "authors": ["M. Kessentini", " A. Bouchoucha", " H. Sahraoui ", " M. Boukadoum"]}, {"title": " \"Software bots\"", "authors": ["C. Lebeuf", " M.-A. Storey ", " A. Zagalsky"]}, {"title": " \"How software developers mitigate collaboration friction with chatbots\"", "authors": ["C. Lebeuf", " M.-A. Storey ", " A. Zagalsky"]}, {"title": " \"The power of bots: Understanding bots in oss projects\"", "authors": ["M. WESSEL", " B. M. DE SOUZA", " I. STEINMACHER", " I. S. WIESE", " I. POLATO", " A. P. CHAVES", " ."]}, {"title": " \"How to design a program repair bot?: insights from the repairnator project\"", "authors": ["S. Urli", " Z. Yu", " L. Seinturier ", " M. Monperrus"]}, {"title": " \"Fix-it: An extensible code auto-fix component in review bot\"", "authors": ["V. Balach", "ran"]}, {"title": " \"A hierarchical model for object-oriented design quality assessment\"", "authors": ["J. Bansiya ", " C. G. Davis"]}, {"title": " \"Empirical validation of three software metrics suites to predict fault-proneness of object-oriented classes developed using highly iterative or agile software development processes\"", "authors": ["H. M. Olague", " L. H. Etzkorn", " S. Gholston ", " S. Quattlebaum"]}, {"title": " \"A fast and elitist multiobjective genetic algorithm: NSGA-II\"", "authors": ["K. Deb", " A. Pratap", " S. Agarwal ", " T. Meyarivan"]}, {"title": " \"Jdeodorant: identification and application of extract class refactorings\"", "authors": ["M. Fokaefs", " N. Tsantalis", " E. Stroulia ", " A. Chatzigeorgiou"]}, {"title": " \"A cooperative parallel search-based software engineering approach for code-smells detection\"", "authors": ["W. Kessentini", " M. Kessentini", " H. Sahraoui", " S. Bechikh ", " A. Ouni"]}, {"title": " \"Do they really smell bad? A study on developers\u2019 perception of bad code smells\"", "authors": ["F. Palomba", " G. Bavota", " M. D. Penta", " R. Oliveto ", " A. D. Lucia"]}, {"title": " \"A practical guide for using statistical tests to assess randomized algorithms in software engineering\"", "authors": ["A. Arcuri ", " L. Bri"]}]},
{"doi": "10.1109/ASEW.2015.11", "title": "Testing Approach for Mobile Applications through Reverse Engineering of UI Patterns", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Testing", "Reverse engineering", "Mobile communication", "Mobile applications", "Smart phones", "Graphical user interfaces", "Androids"], "abstract": "It is increasingly important to assess and ensure the correct behaviour of mobile applications as their importance in everyday life keeps increasing. This paper presents an automatic testing approach combining reverse engineering with testing. The algorithm tries to identify existing User Interface (UI) patterns on a mobile application under test through a reverse engineering process and then tests them using generic test strategies called Test Patterns. The overall testing approach was implemented in the iMPAcT (Mobile PAttern Testing) tool and is illustrated in a case study performed over some mobile applications as a proof-of-concept.", "author": [{"name": "In\u00eas Coimbra Morgado", "affiliation": "Department of Informatics Engineering, Faculty of Engineering of University of Porto, Porto, Portugal"}, {"name": "Ana C. R. Paiva", "affiliation": "Department of Informatics Engineering, Faculty of Engineering of University of Porto, Porto, Portugal"}], "time": "Nov. 2015", "citationCount": "12", "references": [{"title": " \"Improving Code Coverage in Android Apps Testing by Exploiting Patterns and Automatic Test Case Generation\"", "authors": ["D. Amalfitano", " N. Amatucci", " A. R. Fasolino", " U. Gentile", " G. Mele", " R. Nardone", " ."]}, {"title": " \"Experimenting a reverse engineering technique for modelling the behaviour of rich internet applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino ", " P. Tramontana"]}, {"title": " \"Considering Context Events in Event-Based Testing of Mobile Applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana ", " N. Amatucci"]}, {"title": " \"A toolset for GUI testing of Android applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana", " S. De Carmine ", " G. Imparato"]}, {"title": " \"Using GUI ripping for automated testing of Android applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana", " S. De Carmine ", " A. M. Memon"]}, {"title": " \"Behind the Scenes: An Approach to Incorporate Context in GUI Test Case Generation\"", "authors": ["S. Arlt", " C. Bertolini ", " M. Schaf"]}, {"title": " \"Using static analysis for automatic assessment and mitigation of unwanted and malicious activities within Android applications\"", "authors": ["L. Batyuk", " M. Herpich", " S. A. Camtepe", " K. Raddatz", " A.-D. Schmidt ", " S. Albayrak"]}, {"title": " \"Reverse Engineering and Design Recovery: a Taxonomy\"", "authors": ["E. Chikofsky ", " J. Cross"]}, {"title": " \"Automated Pattern-Based Testing of Mobile Applications\"", "authors": ["I. Coimbra Morgado", " A. C. Paiva ", " J. P. Faria"]}, {"title": " \"Test Patterns for Android Mobile Applications\"", "authors": ["I. Coimbra Morgado ", " A. C. R. Paiva"]}, {"title": " \"Dynamic Reverse Engineering of Graphical User Interfaces\"", "authors": ["I. Coimbra Morgado", " A. C. R. Paiva ", " J. a. Pascoal Faria"]}, {"title": " \"Pattern Based GUI Testing for Mobile Applications\"", "authors": ["P. Costa", " A. C. R. Paiva ", " M. Nabuco"]}, {"title": " \"Reverse Engineering of Business Processes exposed as Web Applications\"", "authors": ["C. Di Francescomarino", " A. Marchetto ", " P. Tonella"]}, {"title": " \"Reverse Engineering of Mobile Application Lifecycles\"", "authors": ["D. Franke", " C. EIsemann", " S. Kowalewski ", " C. Weise"]}, {"title": " \"Mobile application testing - a Tutorial\"", "authors": ["J. Gao", " X. Bai", " W.-T. Tsai ", " T. Uehara"]}, {"title": " \"Reverse engineering of GUI models for testing\"", "authors": ["A. M. P. Grilo", " A. C. R. Paiva ", " J. P. Faria"]}, {"title": " \"Companion of the 13th international conference on Software engineering (ICSE Companion '08)\"", "authors": ["D. R. Hackner ", " A. M. Memon"]}, {"title": " \"Automating gui testing for android applications\"", "authors": ["C. Hu ", " I. Neamtiu"]}, {"title": " \"Reverse Engineering iOS Mobile Applications\"", "authors": ["M. E. Joorabchi ", " A. Mesbah"]}, {"title": " \"Model-Based Testing Through a GUI\"", "authors": ["A. Kervinen", " M. Maunumaa", " T. Paakkonen", " M. Katara", " W. Grieskamp ", " C. Weise"]}, {"title": " \"Dynodroid: an input generation system for Android apps\"", "authors": ["A. Machiry", " R. Tahiliani ", " M. Naik"]}, {"title": " \"Extracting Interaction-Based Stateful Behavior in Rich Internet Applications\"", "authors": ["Y. Maezawa", " H. Washizaki ", " S. Honiden"]}, {"title": " \"Under and Over Approximation of State Models Recovered for Ajax Applications\"", "authors": ["A. Marchetto", " P. Tonella ", " F. Ricca"]}, {"title": " \"PBGT tool: an integrated modeling and testing environment for pattern-based GUI testing\"", "authors": ["R. M. L. M. Moreira ", " A. C. R. Paiva"]}, {"title": " \"A pattern-based approach for GUI modeling and testing\"", "authors": ["R. M. L. M. Moreira", " A. C. R. Paiva ", " A. Memon"]}, {"title": " \"Software testing of mobile applications: Challenges and future research directions\"", "authors": ["H. Muccini", " A. di Francesco ", " P. Esposito"]}, {"title": " \"Uncovering Self Code Modification in Android\"", "authors": ["F. Nasim", " B. Aslam", " W. Ahmed ", " T. Naeem"]}, {"title": " \"Design patterns for user interface for mobile applications\"", "authors": ["E. G. Nilsson"]}, {"title": " \"An Approach for Mapping Features to Code Based on Static and Dynamic Analysis\"", "authors": ["A. Rohatgi", " A. Hamou-Lhadj ", " J. Rilling"]}, {"title": " \"Web Application Model Generation through Reverse Engineering and UI Pattern Inferring\"", "authors": ["C. Sacramento ", " A. C. R. Paiva"]}, {"title": " \"Insights Into Layout Patterns Of Mobile User Interfaces By An Automatic Analysis Of Android Apps\"", "authors": ["A. Sahami Shirazi", " N. Henze", " A. Schmidt", " R. Goldberg", " B. Schmidt ", " H. Schmauder"]}, {"title": " \"Automation of GUI testing using a model-driven approach\"", "authors": ["M. Vieira", " J. Leduc", " B. Hasling", " R. Subramanyan ", " J. Kazmeier"]}, {"title": " \"T-Mobile G\"", "authors": ["M. Wilson"]}, {"title": " \"Developing cost-effective model-based techniques for GUI testing\"", "authors": ["Q. Xie"]}, {"title": " \"A Grey-Box Approach for Automated GUI-Model Generation of Mobile Applications\"", "authors": ["W. Yang", " M. R. Prasad ", " T. Xie"]}]},
{"doi": "10.1109/ASE.2013.6693069", "title": "Identifying execution points for dynamic analyses", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Context", "Radiation detectors", "Instruments", "Runtime", "Silicon carbide", "Core dumps", "Indexing"], "abstract": "Dynamic analyses rely on the ability to identify points within or across executions. In spite of this being a core task for dynamic analyses, new solutions are frequently developed without an awareness of existing solutions, their strengths, their weaknesses, or their caveats. This paper surveys the existing approaches for identifying execution points and examines their analytical and empirical properties that researchers and developers should be aware of when using them within an analysis. In addition, based on limitations in precision, correctness, and efficiency for techniques that identify corresponding execution points across multiple executions, we designed and implemented a new technique, Precise Execution Point IDs. This technique avoids correctness and precision issues in prior solutions, enabling analyses that use our approach to also produce more correct results. Empirical comparison with the surveyed techniques shows that our approach has 25% overhead on average, several times less than existing solutions.", "author": [{"name": "William N. Sumner", "affiliation": "School of Computing Science, Simon Fraser University"}, {"name": "Xiangyu Zhang", "affiliation": "Department of Computer Science, Purdue University"}], "time": "Nov. 2013", "citationCount": "4", "references": [{"title": " \"Comparative causality: Explaining the differences between executions", "authors": ["W. N. Sumner ", " X. Zhang"]}, {"title": " \"Synergy: a new algorithm for property checking", "authors": ["B. S. Gulavani", " T. A. Henzinger", " Y. Kannan", " A. V. Nori", " ", " S. K. Rajamani"]}, {"title": " \"Economics of software verification", "authors": ["G. J. Holzmann"]}, {"title": " \"Using Valgrind to detect undefined value errors with bit-precision", "authors": ["J. Seward ", " N. Nethercote"]}, {"title": " \"Address- Sanitizer: a fast address sanity checker", "authors": ["K. Serebryany", " D. Bruening", " A. Potapenko", " ", " D. Vyukov"]}, {"title": " \"Analyzing concurrency bugs using dual slicing", "authors": ["D. Weeratunge", " X. Zhang", " W. N. Sumner", " ", " S. Jagannathan"]}, {"title": " \"Race frontier: reproducing data races in parallel-program debugging", "authors": ["J.-D. Choi ", " S. L. Min"]}, {"title": " \"Record/replay for nondeterministic program executions", "authors": ["M. Ronsse", " K. De Bosschere", " M. Christiaens", " J. C. de Kergommeaux", " ", " D. Kranzlm\u00fcller"]}, {"title": " \"Doubleplay: parallelizing sequential logging and replay", "authors": ["K. Veeraraghavan", " D. Lee", " B. Wester", " J. Ouyang", " P. M. Chen", " J. Flinn", " ", " S. Narayanasamy"]}, {"title": " \"Debugging operating systems with time-traveling virtual machines", "authors": ["S. T. King", " G. W. Dunlap", " ", " P. M. Chen"]}, {"title": " \"Algorithms for automatically computing the causal paths of failures", "authors": ["W. N. Sumner ", " X. Zhang"]}, {"title": " \"Differential slicing: Identifying causal execution differences for security applications", "authors": ["N. M. Johnson", " J. Caballero", " K. Z. Chen", " S. McCamant", " P. Poosankam", " D. Reynaud", " ", " D. Song"]}, {"title": " \"Efficient program execution indexing", "authors": ["B. Xin", " W. N. Sumner", " ", " X. Zhang"]}, {"title": " \"Scalable temporal order analysis for large scale debugging", "authors": ["D. H. Ahn", " B. R. de Supinski", " I. Laguna", " G. L. Lee", " B. Liblit", " B. P. Miller", " ", " M. Schulz"]}, {"title": " \"Precise calling context encoding", "authors": ["W. N. Sumner", " Y. Zheng", " D. Weeratunge", " ", " X. Zhang"]}, {"title": " \"Valgrind: a framework for heavyweight dynamic binary instrumentation", "authors": ["N. Nethercote ", " J. Seward"]}, {"title": " \"CTrigger: exposing atomicity violation bugs from their hiding places", "authors": ["S. Park", " S. Lu", " ", " Y. Zhou"]}, {"title": " \"Isolating cause-effect chains from computer programs", "authors": ["A. Zeller"]}, {"title": " \"Accurate", "authors": ["X. Zhuang", " M. J. Serrano", " H. W. Cain", " ", " J.-D. Choi"]}, {"title": " \"Probabilistic calling context", "authors": ["M. D. Bond ", " K. S. McKinley"]}, {"title": " \"Breadcrumbs: efficient context sensitivity for dynamic bug detection analyses", "authors": ["M. D. Bond", " G. Z. Baker", " ", " S. Z. Guyer"]}, {"title": " \"Inferred call path profiling", "authors": ["T. Mytkowicz", " D. Coughlin", " ", " A. Diwan"]}, {"title": " \"Efficient path profiling", "authors": ["T. Ball ", " J. R. Larus"]}, {"title": " \"A software instruction counter", "authors": ["J. M. Mellor-Crummey ", " T. J. LeBlanc"]}, {"title": " \"Fast loop-level data dependence profiling", "authors": ["H. Yu ", " Z. Li"]}, {"title": " \"Pin: building customized program analysis tools with dynamic instrumentation", "authors": ["C.-K. Luk", " R. Cohn", " R. Muth", " H. Patil", " A. Klauser", " G. Lowney", " S. Wallace", " V. J. Reddi", " ", " K. Hazelwood"]}, {"title": " \"The program dependence graph and its use in optimization", "authors": ["J. Ferrante", " K. J. Ottenstein", " ", " J. D. Warren"]}, {"title": " \"Accurately choosing execution runs for software fault localization", "authors": ["L. Guo", " A. Roychoudhury", " ", " T. Wang"]}, {"title": " \"Alchemist: A transparent dependence distance profiling infrastructure", "authors": ["X. Zhang", " A. Navabi", " ", " S. Jagannathan"]}, {"title": " \"An effective dynamic analysis for detecting generalized deadlocks", "authors": ["P. Joshi", " M. Naik", " K. Sen", " ", " D. Gay"]}, {"title": " \"Locating causes of program failures", "authors": ["H. Cleve ", " A. Zeller"]}, {"title": " \"Symbolic model checking without bdds", "authors": ["A. Biere", " A. Cimatti", " E. M. Clarke", " ", " Y. Zhu"]}, {"title": " \"A tool for checking ANSI-C programs", "authors": ["E. Clarke", " D. Kroening", " ", " F. Lerda"]}, {"title": " \"Sequentializing program dependence graphs for irreducible programs", "authors": ["B. Steensgaard"]}, {"title": " \"On loops", "authors": ["G. Ramalingam"]}, {"title": " \"Time", "authors": ["L. Lamport"]}, {"title": " \"Diablo: a reliable", "authors": ["L. Van Put", " D. Chanet", " B. De Bus", " B. De Sutter", " ", " K. De Bosschere"]}, {"title": " \"Pruning dynamic slices with confidence", "authors": ["X. Zhang", " N. Gupta", " ", " R. Gupta"]}, {"title": " \"Control-flow analysis of higher-order languages", "authors": ["O. Shivers"]}]},
{"doi": "10.1109/ASE.2019.00082", "title": "Automated Refactoring to Reactive Programming", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Programming", "Java", "Observers", "Libraries", "Instruction sets", "Loading"], "abstract": "Reactive programming languages and libraries, such as ReactiveX, have been shown to significantly improve software design and have seen important industrial adoption over the last years. Asynchronous applications - which are notoriously error-prone to implement and to maintain - greatly benefit from reactive programming because they can be defined in a declarative style, which improves code clarity and extensibility. In this paper, we tackle the problem of refactoring existing software that has been designed with traditional abstractions for asynchronous programming. We propose 2Rx, a refactoring approach to automatically convert asynchronous code to reactive programming. Our evaluation on top-starred GitHub projects shows that 2Rx is effective with the most common asynchronous constructs, covering 12.7% of projects with asynchronous computations, and it can provide a refactoring for 91.7% of their occurrences.", "author": [{"name": "Mirko K\u00f6hler", "affiliation": "Technische Universitat Darmstadt, Darmstadt, Germany"}, {"name": "Guido Salvaneschi", "affiliation": "Reactive Programming Technology Technische Universit\u00e4t Darmstadt, Darmstadt, Germany"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Refactoring for asynchronous execution on mobile devices\"", "authors": ["D Dig"]}, {"title": " \"The java.util.concurrent synchronizer framework\"", "authors": ["D Lea"]}, {"title": " \"A survey on reactive programming\"", "authors": ["E Bainomugisha", " A. L. Carreton", " T. v. Cutsem", " S Mostinckx ", " W. d. Meuter"]}, {"title": " \"Embedding dynamic dataflow in a call-by-value language\"", "authors": ["G. H. Cooper ", " S Krishnamurthi"]}, {"title": " \"Flapjax: A programming language for Ajax applications\"", "authors": ["L. A. Meyerovich", " A Guha", " J Baskin", " G. H. Cooper", " M Greenberg", " A Bromfield", " ."]}, {"title": " \"An empirical study on program comprehension with reactive programming\"", "authors": ["G Salvaneschi", " S Amann", " S Proksch ", " M Mezini"]}, {"title": " \"On the positive effect of reactive programming on software comprehension: An empirical study\"", "authors": ["G Salvaneschi", " S Proksch", " S Amann", " S Nadi ", " M Mezini"]}, {"title": " \"Asynchronous functional reactive programming for GUIs\"", "authors": ["E Czaplicki ", " S Chong"]}, {"title": " \"A comparative study of manual and automated refactorings\"", "authors": ["S Negara", " N Chen", " M Vakilian", " R. E. Johnson ", " D Dig"]}, {"title": " \"Retrofitting concurrency for Android applications through refactoring\"", "authors": ["Y Lin", " C Radoi ", " D Dig"]}, {"title": " \"A study and toolkit for asynchronous programming in C#\"", "authors": ["S Okur", " D. L. Hartveld", " D Dig ", " A. van Deursen"]}, {"title": " \"Crossing the gap from imperative to functional programming through refactoring\"", "authors": ["A Gyori", " L Franklin", " D Dig ", " J Lahoda"]}, {"title": " \"LAMBDAFICATOR: From imperative to functional programming through automated refactoring\"", "authors": ["L Franklin", " A Gyori", " J Lahoda ", " D Dig"]}, {"title": " \"A comprehensive approach to naming and accessibility in refactoring Java programs\"", "authors": ["M Schafer", " A Thies", " F Steimann ", " F Tip"]}, {"title": " \"Abstract execution\"", "authors": ["D Steinhofel ", " R. H\u00e4hnle"]}, {"title": " \"Refactoring for reentrancy\"", "authors": ["J Wloka", " M Sridharan ", " F Tip"]}, {"title": " \"Refactoring Java programs for flexible locking\"", "authors": ["M Schafer", " M Sridharan", " J Dolby ", " F Tip"]}, {"title": " \"Clone refactoring with lambda expressions\"", "authors": ["N Tsantalis", " D Mazinanian ", " S Rostami"]}, {"title": " \"Automated refactoring of legacy java software to default methods\"", "authors": ["R Khatchadourian ", " H Masuhara"]}, {"title": " \"AD-ROOM: A tool for automatic detection of refactorings in object-oriented models\"", "authors": ["D. E. Khelladi", " R Bendraou ", " M.-P. Gervais"]}, {"title": " \"JDeodorant: Clone refactoring\"", "authors": ["D Mazinanian", " N Tsantalis", " R Stein ", " Z Valenta"]}, {"title": " \"Improving refactoring speed by 10x\"", "authors": ["J Kim", " D Batory", " D Dig ", " M Azanza"]}, {"title": " \"Study and refactoring of android asynchronous programming\"", "authors": ["Y Lin", " S Okur ", " D Dig"]}, {"title": " \"Toward automatic update from\u00b4 callbacks to promises\"", "authors": ["E Brodu", " S Frenot ", " F Obl\u00e9"]}, {"title": " \"Promises: Linguistic support for efficient asynchronous procedure calls in distributed systems\"", "authors": ["B Liskov ", " L Shrira"]}, {"title": " \"Refactorings for Android asynchronous programming\"", "authors": ["Y Lin ", " D Dig"]}, {"title": " \"Declarative intraprocedural flow analysis of Java source code\"", "authors": ["E. Nilsson-Nyman", " G Hedin", " E Magnusson ", " T Ekman"]}, {"title": " \"Boa: A language and infrastructure for analyzing ultra-large-scale software repositories\"", "authors": ["R Dyer", " H. A. Nguyen", " H Rajan ", " T. N. Nguyen"]}, {"title": " \"Github projects. quality analysis of open-source software\"", "authors": ["O Jarczyk", " B Gruszka", " S Jaroszewicz", " L Bukowski ", " A Wierzbicki"]}, {"title": " \"Feedback-directed random test generation\"", "authors": ["C Pacheco", " S. K. Lahiri", " M. D. Ernst ", " T Ball"]}, {"title": " \"Automated behavioral testing of refactoring engines\"", "authors": ["G Soares", " R Gheyi ", " T Massoni"]}, {"title": " \"Views on internal and external validity in empirical software engineering\"", "authors": ["J Siegmund", " N Siegmund ", " S Apel"]}, {"title": " \"Constraint-based refactoring\"", "authors": ["F Steimann"]}, {"title": " \"Functional reactive animation\"", "authors": ["C Elliott ", " P Hudak"]}, {"title": " \"REScala: Bridging between object-oriented and functional style in reactive applications\"", "authors": ["G Salvaneschi", " G Hintz ", " M Mezini"]}, {"title": " \"Higher-order reactive programming with incremental lists\"", "authors": ["I Maier ", " M Odersky"]}, {"title": " \"On the semantics of distributed reactive programming: The cost of consistency\"", "authors": ["A Margara ", " G Salvaneschi"]}, {"title": " \"Debugging data flows in reactive programs\"", "authors": ["H Banken", " E Meijer ", " G Gousios"]}, {"title": " \"Debugging for reactive programming\"", "authors": ["G Salvaneschi ", " M Mezini"]}, {"title": " \"Refactoring a legacy component for reuse in a software product line: a case study\"", "authors": ["R Kolb", " D Muthig", " T Patzke ", " K Yamauchi"]}, {"title": " \"Does refactoring improve reusability?\"", "authors": ["R Moser", " A Sillitti", " P Abrahamsson ", " G Succi"]}, {"title": " \"Refactoring with synthesis\"", "authors": ["V Raychev", " M Schafer", " M Sridharan ", " M Vechev"]}, {"title": " \"Correct refactoring of concurrent Java code\"", "authors": ["M Schafer", " J Dolby", " M Sridharan", " E Torlak ", " F Tip"]}, {"title": " \"Morpheus: Variability-aware refactoring in the wild\"", "authors": ["J Liebig", " A Janker", " F Garbe", " S Apel ", " C Lengauer"]}, {"title": " \"Does automated refactoring obviate systematic editing?\"", "authors": ["N Meng", " L Hua", " M Kim ", " K. S. McKinley"]}, {"title": " \"Scripting parametric refactorings in Java to retrofit design patterns\"", "authors": ["J Kim", " D Batory ", " D Dig"]}, {"title": " \"Finding broken promises in asynchronous javascript programs\"", "authors": ["S Alimadadi", " D Zhong", " M Madsen ", " F Tip"]}]},
{"doi": "10.1109/ASEW.2015.19", "title": "A Conceptual Framework for the Comparison of Fully Automated GUI Testing Techniques", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Graphical user interfaces", "Testing", "Androids", "Humanoid robots", "Systematics"], "abstract": "Fully automated GUI testing techniques play an important role in the modern software development life cycles. These techniques are implemented by algorithms that automatically traverse the GUI by interacting with it, like robots discovering unexplored spaces. These algorithms are able to define and run test cases on the fly, while the application is in execution. Testing adequacy, performance or costs of such techniques may differ on the basis of different factors. In this paper we will propose an approach for comparing fully automated GUI testing techniques in a systematic manner. The approach is based on a generalized parametric algorithm that abstracts the key aspects of these techniques and provides a conceptual framework that can be used to define and compare different testing approaches. To validate the framework, we exploit it to compare the testing adequacy and the GUI models inferred by 9 fully automated testing techniques obtained by varying the configuration of the algorithm. The experiment is performed on a real Android application.", "author": [{"name": "Domenico Amalfitano", "affiliation": "Department of Electrical Engineering and Information Technologies, University Federico II of Naples, Naples, Italy"}, {"name": "Nicola Amatucci", "affiliation": "Department of Electrical Engineering and Information Technologies, University Federico II of Naples, Naples, Italy"}, {"name": "Anna Rita Fasolino", "affiliation": "Universita degli Studi di Napoli Federico II, Napoli, Campania, IT"}, {"name": "Porfirio Tramontana", "affiliation": "Department of Electrical Engineering and Information Technologies, University Federico II of Naples, Naples, Italy"}], "time": "Nov. 2015", "citationCount": "3", "references": [{"title": " \"Guitar: an innovative tool for automated testing of gui-driven software\"", "authors": ["B. Nguyen", " B. Robbins", " I. Banerjee ", " A. Memon"]}, {"title": " \"Crawling ajax-based web applications through dynamic analysis of user interface state changes\"", "authors": ["A. Mesbah", " A. Van Deursen ", " S. Lenselink"]}, {"title": " \"Rich internet application testing using execution trace data\"", "authors": ["D. Amalfitano", " A. R. Fasolino ", " P. Tramontana"]}, {"title": " \"Applying concept analysis to user-session-based testing of web applications\"", "authors": ["S. Sampath", " S. Sprenkle", " E. Gibson", " L. Pollock ", " A. Greenwald"]}, {"title": " \"A pattern-based approach for gui modeling and testing\"", "authors": ["R. Moreira", " A. Paiva ", " A. Memon"]}, {"title": " \"Dynamic testing via automata learning\"", "authors": ["H. Raffelt", " M. Merten", " B. Steffen ", " T. Margaria"]}, {"title": " \"Guided gui testing of android apps with minimal restart and approximate learning\"", "authors": ["W. Choi", " G. Necula ", " K. Sen"]}, {"title": " \"An empirical study of the robustness of macos applications using random testing\"", "authors": ["B. P. Miller", " G. Cooksey ", " F. Moore"]}, {"title": "\"Monkey\".", "authors": []}, {"title": " \"Dynodroid: An input generation system for android apps\"", "authors": ["A. Machiry", " R. Tahiliani ", " M. Naik"]}, {"title": " \"Automated testing with targeted event sequence generation\"", "authors": ["C. S. Jensen", " M. R. Prasad ", " A. M\u00f8ller"]}, {"title": " \"Using gui ripping for automated testing of android applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " S. D. Carmine", " A. Memon ", " P. Tramontana"]}, {"title": " \"Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps\"", "authors": ["S. Hao", " B. Liu", " S. Nath", " W. G. Halfond ", " R. Govindan"]}, {"title": " \"How to learn an unknown environment. i: The rectilinear case\"", "authors": ["X. Deng", " T. Kameda ", " C. Papadimitriou"]}, {"title": " \"Optimal constrained graph exploration\"", "authors": ["C. A. Duncan", " S. G. Kobourov ", " V. S. A. Kumar"]}, {"title": " \"Graph exploration by a finite automaton\"", "authors": ["P. Fraigniaud", " D. Ilcinkas", " G. Peer", " A. Pelc ", " D. Peleg"]}, {"title": " \"Exploiting the saturation effect in automatic random testing of android applications\"", "authors": ["D. Amalfitano", " N. Amatucci", " A. R. Fasolino", " P. Tramontana", " E. Kowalczyk ", " A. Memon"]}, {"title": " \"Mobile application testing: A tutorial\"", "authors": ["J. Gao", " X. Bai", " W.-T. Tsai ", " T. Uehara"]}, {"title": " \"Targeted and depth-first exploration for systematic testing of android apps\"", "authors": ["T. Azim ", " I. Neamtiu"]}, {"title": " \"Automatic android gui traversal with high coverage\"", "authors": ["P. Wang", " B. Liang", " W. You", " J. Li ", " W. Shi"]}, {"title": "\"Android monkey library\".", "authors": []}, {"title": " \"Mobiguitar - a tool for automated model-based testing of mobile apps\"", "authors": ["D. Amalfitano", " A. Fasolino", " P. Tramontana", " B. Ta ", " A. Memon"]}, {"title": " \"Evodroid: Segmented evolutionary testing of android apps\"", "authors": ["R. Mahmood", " N. Mirzaei ", " S. Malek"]}]},
{"doi": "10.1109/ASE.2013.6693070", "title": "Operator-based and random mutant selection: Better together", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Testing", "Standards", "Java", "Power measurement", "Correlation", "Educational institutions", "Libraries"], "abstract": "Mutation testing is a powerful methodology for evaluating the quality of a test suite. However, the methodology is also very costly, as the test suite may have to be executed for each mutant. Selective mutation testing is a well-studied technique to reduce this cost by selecting a subset of all mutants, which would otherwise have to be considered in their entirety. Two common approaches are operator-based mutant selection, which only generates mutants using a subset of mutation operators, and random mutant selection, which selects a subset of mutants generated using all mutation operators. While each of the two approaches provides some reduction in the number of mutants to execute, applying either of the two to medium-sized, real-world programs can still generate a huge number of mutants, which makes their execution too expensive. This paper presents eight random sampling strategies defined on top of operator-based mutant selection, and empirically validates that operator-based selection and random selection can be applied in tandem to further reduce the cost of mutation testing. The experimental results show that even sampling only 5% of mutants generated by operator-based selection can still provide precise mutation testing results, while reducing the average mutation testing time to 6.54% (i.e., on average less than 5 minutes for this study).", "author": [{"name": "Lingming Zhang", "affiliation": "University of Texas, Austin, TX"}, {"name": "Milos Gligoric", "affiliation": "University of Illinois, Urbana, IL"}, {"name": "Darko Marinov", "affiliation": "University of Illinois, Urbana, IL"}, {"name": "Sarfraz Khurshid", "affiliation": "University of Texas, Austin, TX"}], "time": "Nov. 2013", "citationCount": "30", "references": [{"title": " \"Testing programs with the aid of a compiler", "authors": ["R. G. Hamlet"]}, {"title": " \"Hints on test data selection: Help for the practicing programmer", "authors": ["R. A. DeMillo", " R. J. Lipton", " ", " F. G. Sayward"]}, {"title": " \"An experimental determination of sufficient mutation operators", "authors": ["A. J. Offutt", " A. Lee", " G. Rothermel", " R. Untch", " ", " C. Zapf"]}, {"title": " \"Toward the determination of sufficient mutant operators for C", "authors": ["E. F. Barbosa", " J. C. Maldonado", " ", " A. M. R. Vincenzi"]}, {"title": " \"Sufficient mutation operators for measuring test effectiveness", "authors": ["A. Siami Namin", " J. H. Andrews", " ", " D. J. Murdoch"]}, {"title": " \"Efficient mutation testing by checking invariant violations", "authors": ["D. Schuler", " V. Dallmeier", " ", " A. Zeller"]}, {"title": " \"Is operator-based mutant selection superior to random mutant selection?\" in Proc. of ICSE", "authors": ["L. Zhang", " S.-S. Hou", " J.-J. Hu", " T. Xie", " ", " H. Mei"]}, {"title": " \"An analysis and survey of the development of mutation testing", "authors": ["Y. Jia ", " M. Harman"]}, {"title": " \"Selective mutation testing for concurrent code", "authors": ["M. Gligoric", " L. Zhang", " C. Pereira", " ", " G. Pokam"]}, {"title": " \"Regression mutation testing", "authors": ["L. Zhang", " D. Marinov", " L. Zhang", " ", " S. Khurshid"]}, {"title": " \"Is mutation an appropriate tool for testing experiments?\" in Proc. of ICSE", "authors": ["J. H. Andrews", " L. C. Bri", "", " ", " Y. Labiche"]}, {"title": " \"Using mutation analysis for assessing and comparing testing coverage criteria", "authors": ["J. H. Andrews", " L. C. Bri", "", " Y. Labiche", " ", " A. S. Namin"]}, {"title": " \"Higher order mutation testing", "authors": ["Y. Jia ", " M. Harman"]}, {"title": " \"Strong higher order mutationbased test data generation", "authors": ["M. Harman", " Y. Jia", " ", " W. B. Langdon"]}, {"title": " \"The dynamic domain reduction procedure for test data generation", "authors": ["A. J. Offutt", " Z. Jin", " ", " J. Pan"]}, {"title": " \"Test generation via dynamic symbolic execution for mutation testing", "authors": ["L. Zhang", " T. Xie", " L. Zhang", " N. Tillmann", " J. De Halleux", " ", " H. Mei"]}, {"title": " \"Towards automating the generation of mutation tests", "authors": ["M. Papadakis", " N. Malevris", " ", " M. Kallia"]}, {"title": " \"Automatic test generation for mutation testing on database applications", "authors": ["K. Pan", " X. Wu", " ", " T. Xie"]}, {"title": " \"Proteum/im 2.0: An integrated mutation testing environment", "authors": ["M. E. Delamaro", " J. C. Maldonado", " ", " A. M. R. Vincenzi"]}, {"title": " \"An experimental evaluation of selective mutation", "authors": ["A. J. Offutt", " G. Rothermel", " ", " C. Zapf"]}, {"title": " \"Reducing the cost of mutation testing: An empirical study", "authors": ["W. E. Wong ", " A. P. Mathur"]}, {"title": "\"Time and Money home", "authors": []}, {"title": "\"JDepend home", "authors": []}, {"title": "\"JTopas home", "authors": []}, {"title": "\"Barbecue home", "authors": []}, {"title": "\"Apache Mime4J home", "authors": []}, {"title": "\"Jaxen home", "authors": []}, {"title": "\"XStream home", "authors": []}, {"title": "\"Santuario home", "authors": []}, {"title": "\"Apache Commons home", "authors": []}, {"title": "\"Joda Time home", "authors": []}, {"title": "\"Apache JMeter home", "authors": []}, {"title": " \"Javalanche: efficient mutation testing for Java", "authors": ["D. Schuler ", " A. Zeller"]}, {"title": " \"Automated documentation inference to explain failed tests", "authors": ["S. Zhang", " C. Zhang", " ", " M. D. Ernst"]}, {"title": " \"Bridging the gap between the total and additional test-case prioritization strategies", "authors": ["L. Zhang", " D. Hao", " L. Zhang", " G. Rothermel", " ", " H. Mei"]}, {"title": " \"Faster mutation testing inspired by test prioritization and reduction", "authors": ["L. Zhang", " D. Marinov", " ", " S. Khurshid"]}, {"title": "\"JavaSourceMetric home", "authors": []}, {"title": "\"Our project", "authors": []}, {"title": " \"Automated oracle creation support", "authors": ["M. Staats", " G. Gay", " ", " M. P. Heimdahl"]}, {"title": " \"Using simulation to empirically investigate test coverage criteria based on statechart", "authors": ["L. Bri", "", " Y. Labiche", " ", " Y. Wang"]}, {"title": " \"Testing container classes: Random or systematic?\" in Proc. of FASE", "authors": ["R. Sharma", " M. Gligoric", " A. Arcuri", " G. Fraser", " ", " D. Marinov"]}, {"title": " \"Multi objective higher order mutation testing with genetic programming", "authors": ["W. B. Langdon", " M. Harman", " ", " Y. Jia"]}, {"title": " \"Performance", "authors": ["A. P. Mathur"]}, {"title": " \"The Mothra software testing environment users manual", "authors": ["R. DeMillo ", " R. Martin"]}, {"title": " \"Mutation analysis.\" DTIC Document", "authors": ["A. T. Acree", " T. A. Budd", " R. A. DeMillo", " R. J. Lipton", " ", " F. G. Sayward"]}, {"title": " \"Mutation analysis of program test data[ph. d. thesis]", "authors": ["T. A. Budd"]}, {"title": " \"Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact", "authors": ["H. Do", " S. Elbaum", " ", " G. Rothermel"]}, {"title": " \"Weak mutation testing and completeness of test sets", "authors": ["W. E. Howden"]}, {"title": " \"From weak to strong", "authors": ["M. Woodward ", " K. Halewood"]}, {"title": " \"An empirical evaluation of weak mutation", "authors": ["A. J. Offutt ", " S. D. Lee"]}, {"title": " \"Compiler-integrated program mutation", "authors": ["R. A. DeMillo", " E. W. Krauser", " ", " A. P. Mathur"]}, {"title": " \"Mutation analysis using mutant schemata", "authors": ["R. H. Untch", " A. J. Offutt", " ", " M. J. Harrold"]}, {"title": " \"High performance software testing on SIMD machines", "authors": ["E.W. Krauser", " A. P. Mathur", " ", " V. J. Rego"]}, {"title": " \"Mutation testing of software using a MIMD computer", "authors": ["A. J. Offutt", " R. P. Pargas", " S. V. Fichter", " ", " P. K. Khambekar"]}, {"title": " \"Prioritizing test cases for regression testing", "authors": ["G. Rothermel", " R. H. Untch", " C. Chu", " ", " M. J. Harrold"]}, {"title": " \"Scaling regression testing to large software systems", "authors": ["A. Orso", " N. Shi", " ", " M. J. Harrold"]}, {"title": " \"On-demand test suite reduction", "authors": ["D. Hao", " L. Zhang", " X. Wu", " H. Mei", " ", " G. Rothermel"]}, {"title": " \"Constraint-based automatic test data generation", "authors": ["R. DeMillo ", " A. J. Offutt"]}, {"title": " \"Mutation-driven generation of unit tests and oracles", "authors": ["G. Fraser ", " A. Zeller"]}, {"title": " \"On the use of mutation faults in empirical assessments of test case prioritization techniques", "authors": ["H. Do ", " G. Rothermel"]}, {"title": " \"Injecting mechanical faults to localize developer faults for evolving software", "authors": ["L. Zhang", " L. Zhang", " ", " S. Khurshid"]}, {"title": " \"On the danger of coverage directed test case generation", "authors": ["M. Staats", " G. Gay", " M. Whalen", " ", " M. Heimdahl"]}, {"title": " \"A static approach to prioritizing JUnit test cases", "authors": ["H. Mei", " D. Hao", " L. Zhang", " L. Zhang", " J. Zhou", " ", " G. Rothermel"]}, {"title": " \"Comparing non-adequate test suites using coverage criteria", "authors": ["M. Gligoric", " A. Groce", " C. Zhang", " R. Sharma", " A. Alipour", " ", " D. Marinov"]}]},
{"doi": "10.1109/ASE.2019.00083", "title": "Empirical Study of Programming to an Interface", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Java", "History", "Couplings", "Programming", "Open source software", "Production facilities"], "abstract": "A popular recommendation to programmers in object-oriented software is to \"program to an interface, not an implementation\" (PTI). Expected benefits include increased simplicity from abstraction, decreased dependency on implementations, and higher flexibility. Yet, interfaces must be immutable, excessive class hierarchies can be a form of complexity, and \"speculative generality\" is a known code smell. To advance the empirical knowledge of PTI, we conducted an empirical investigation that involves 126 Java projects on GitHub, aiming to measuring the decreased dependency benefits (in terms of cochange).", "author": [{"name": "Beno\u00eet Verhaeghe", "affiliation": "Berger-Levrault, Champigneulles, France"}, {"name": "Christopher Fuhrman", "affiliation": "Dept. of Software Engineering and IT, \u00c9cole de technologie sup\u00e9rieure, Montreal, Canada"}, {"name": "Latifa Guerrouj", "affiliation": "Dept. of Software Engineering and IT, \u00c9cole de technologie sup\u00e9rieure, Montreal, Canada"}, {"name": "Nicolas Anquetil", "affiliation": "Univ. Lille, CNRS, Centrale Lille, Inria, UMR 9189 - CRIStAL, Lille, France"}, {"name": "St\u00e9phane Ducasse", "affiliation": "Inria Nord Europe, Lille, France"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Public versus published interfaces\"", "authors": ["M Fowler"]}, {"title": " \"A hierarchical model for object-oriented design quality assessment\"", "authors": ["J Bansiya ", " C Davis"]}, {"title": " \"Visualizing protected variations in evolving software designs\"", "authors": ["S Rufiange ", " C. P. Fuhrman"]}, {"title": " \"On the criteria to be used in decomposing systems into modules\"", "authors": ["D. L. Parnas"]}, {"title": " \"Protected variation: The importance of being closed\"", "authors": ["C Larman"]}, {"title": " \"Inversion of control containers and the dependency injection pattern\"", "authors": ["M Fowler"]}, {"title": " \"The factory pattern in API design: A usability evaluation\"", "authors": ["B Ellis", " J Stylos ", " B Myers"]}, {"title": " \"The link between dependency and cochange: Empirical evidence\"", "authors": ["M. M. Geipel ", " F Schweitzer"]}, {"title": " \"Understanding the interplay between the logical and structural coupling of software classes\"", "authors": ["N Ajienka ", " A Capiluppi"]}, {"title": " \"Integrating conceptual and logical couplings for change impact analysis in software\"", "authors": ["H Kagdi", " M Gethers ", " D Poshyvanyk"]}, {"title": " \"The promises and perils of mining git\"", "authors": ["C Bird", " P. C. Rigby", " E. T. Barr", " D. J. Hamilton", " D. M. German ", " P Devanbu"]}, {"title": " \"How we design interfaces and how to assess it\"", "authors": ["H Abdeen", " H Sahraoui ", " O Shata"]}, {"title": " \"Fragile base-class problem problem?\"", "authors": ["A. Saban\u00e9", " Y. Gu\u00e9h\u00e9neuc", " V Arnaoudova ", " G Antoniol"]}]},
{"doi": "10.1109/ASEW.2015.13", "title": "Towards Automatic Constraint Elicitation in Test Design: Preliminary Evaluation Based on Collective Intelligence", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Browsers", "Testing", "Linux", "Media", "Web search", "Engines"], "abstract": "Constraint elicitation is an important process in test design since constraints determine the test space, however, the constraint elicitation process, which is known as a daunting task, has not been well studied. It usually requires manual capturing and precise definition of constraints. In this paper, we try to automate a part of the constraint elicitation process in combinatorial test design. Pair-wise testing, a common combinatorial testing approach, is an effective test planning technique for finding interaction faults using a small set of test cases. We propose a collective intelligence approach to determining which value combinations are potential constraints. We conduct preliminary experiments on two examples, a traditional cross-browser testing example and an ATM system example, and evaluate the feasibility of our approach.", "author": [{"name": "Hiroyuki Nakagawa", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Osaka, Japan"}, {"name": "Tatsuhiro Tsuchiya", "affiliation": "Graduate School of Information Science and Technology, Osaka University, Osaka, Japan"}], "time": "Nov. 2015", "citationCount": "1", "references": [{"title": " \"The AETG system: An approach to testing based on combinatorial design\"", "authors": ["D. M. Cohen", " S. R. Dalal", " M. L. Fredman ", " G. C. Patton"]}, {"title": " \"A survey of combinatorial testing\"", "authors": ["C. Nie ", " H. Leung"]}, {"title": " \"Interaction-based test-suite minimization\"", "authors": ["D. Blue", " I. Segall", " R. Tzoref-Brill ", " A. Zlotnick"]}, {"title": " \"Towards automatic constraints elicitation in pair-wise testing based on a linguistic approach: Elicitation support using coupling strength\"", "authors": ["H. Nakagawa ", " T. Tsuchiya"]}, {"title": " \"ATM simulation links\".", "authors": ["R. C. Bjork"]}]},
{"doi": "10.1109/ASE.2013.6693071", "title": "Testing properties of dataflow program operators", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Testing", "Aggregates", "Optimization", "Semantics", "Ports (Computers)", "System recovery", "Program processors"], "abstract": "Dataflow programming languages, which represent programs as graphs of data streams and operators, are becoming increasingly popular and being used to create a wide array of commercial software applications. The dependability of programs written in these languages, as well as the systems used to compile and run these programs, hinges on the correctness of the semantic properties associated with operators. Unfortunately, these properties are often poorly defined, and frequently are not checked, and this can lead to a wide range of problems in the programs that use the operators. In this paper we present an approach for improving the dependability of dataflow programs by checking operators for necessary properties. Our approach is dynamic, and involves generating tests whose results are checked to determine whether specific properties hold or not. We present empirical data that shows that our approach is both effective and efficient at assessing the status of properties.", "author": [{"name": "Zhihong Xu", "affiliation": "University of Nebraska, Lincoln, NE"}, {"name": "Martin Hirzel", "affiliation": "IBM Watson Research, Yorktown Heights, NY"}, {"name": "Gregg Rothermel", "affiliation": "University of Nebraska, Lincoln, NE"}, {"name": "Kun-Lung Wu", "affiliation": "IBM Watson Research, Yorktown Heights, NY"}], "time": "Nov. 2013", "citationCount": "8", "references": []},
{"doi": "10.1109/ASE.2019.00084", "title": "Statistical Log Differencing", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Probability", "Testing", "Software algorithms", "Software engineering", "Software", "Security", "Sensitivity"], "abstract": "Recent works have considered the problem of log differencing: given two or more system's execution logs, output a model of their differences. Log differencing has potential applications in software evolution, testing, and security. In this paper we present statistical log differencing, which accounts for frequencies of behaviors found in the logs. We present two algorithms, s2KDiff for differencing two logs, and snKDiff, for differencing of many logs at once, both presenting their results over a single inferred model. A unique aspect of our algorithms is their use of statistical hypothesis testing: we let the engineer control the sensitivity of the analysis by setting the target distance between probabilities and the statistical significance value, and report only (and all) the statistically significant differences. Our evaluation shows the effectiveness of our work in terms of soundness, completeness, and performance. It also demonstrates its effectiveness compared to previous work via a user-study and its potential applications via a case study using real-world logs.", "author": [{"name": "Lingfeng Bao", "affiliation": "Zhejiang University City College, China"}, {"name": "Nimrod Busany", "affiliation": "Te1 Aviv University, Israel"}, {"name": "David Lo", "affiliation": "Singapore Management University, Singapore"}, {"name": "Shahar Maoz", "affiliation": "Te1 Aviv University, Israel"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Using finite-state models for log differencing\"", "authors": ["H. Amar", " L. Bao", " N. Busany", " D. Lo ", " S. Maoz"]}, {"title": " \"Using declarative specification to improve the understanding extensibility and comparison of model-inference algorithms\"", "authors": ["I. Beschastnikh", " Y. Brun", " J. Abrahamson", " M. D. Ernst ", " A. Krishnamurthy"]}, {"title": " \"Leveraging existing instrumentation to automatically infer invariantconstrained models\"", "authors": ["I. Beschastnikh", " Y. Brun", " S. Schneider", " M. Sloan ", " M. D. Ernst"]}, {"title": " \"On the synthesis of finitestate machines from samples of their behavior\"", "authors": ["A. W. Biermann ", " J. A. Feldman"]}, {"title": " \"Behavioral log analysis with statistical guarantees\"", "authors": ["N. Busany ", " S. Maoz"]}, {"title": " \"Rule-based specification mining leveraging learning to rank\"", "authors": ["Z. Cao", " Y. Tian", " T. B. Le ", " D. Lo"]}, {"title": " \"Have we seen enough traces?\"", "authors": ["H. Cohen ", " S. Maoz"]}, {"title": " \"Discovering models of software processes from event-based data\"", "authors": ["J. E. Cook ", " A. L. Wolf"]}, {"title": " \"Automatically generating test cases for specification mining\"", "authors": ["V. Dallmeier", " N. Knopp", " C. Mallon", " G. Fraser", " S. Hack ", " A. Zeller"]}, {"title": " \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\"", "authors": ["M. Du", " F. Li", " G. Zheng ", " V. Srikumar"]}, {"title": " \"Mining behavior models from user-intensive web applications\"", "authors": ["C. Ghezzi", " M. Pezz\u00e8", " M. Sama ", " G. Tamburrelli"]}, {"title": " \"Experience report: Log-based behavioral differencing\"", "authors": ["M. Goldstein", " D. Raz ", " I. Segall"]}, {"title": " \"Instrumenting scenarios in a model-driven development environment\"", "authors": ["W. Grieskamp", " N. Tillmann ", " M. Veanes"]}, {"title": " \"Synergizing specification miners through model fissions and fusions (T)\"", "authors": ["T. B. Le", " X. D. Le", " D. Lo ", " I. Beschastnikh"]}, {"title": " \"Deep specification mining\"", "authors": ["T. B. Le ", " D. Lo"]}, {"title": " \"General LTL specification mining (T)\"", "authors": ["C. Lemieux", " D. Park ", " I. Beschastnikh"]}, {"title": " \"Empirical assessment of automaton-based specification miners\"", "authors": ["D. Lo ", " S.-C. Khoo. Quark"]}, {"title": " \"Scenario-based and value-based specification mining: better together\"", "authors": ["D. Lo ", " S. Maoz"]}, {"title": " \"Automatic steering of behavioral model inference\"", "authors": ["D. Lo", " L. Mariani ", " M. Pezz\u00e8"]}, {"title": " \"Learning extended FSA from software: An empirical assessment\"", "authors": ["D. Lo", " L. Mariani ", " M. Santoro"]}, {"title": " \"Automatic generation of software behavioral models\"", "authors": ["D. Lorenzoli", " L. Mariani ", " M. Pezz\u00e8"]}, {"title": " \"Mining invariants from console logs for system problem detection\"", "authors": ["J. Lou", " Q. Fu", " S. Yang", " Y. Xu ", " J. Li"]}, {"title": " \"Dynamic analysis for diagnosing integration faults\"", "authors": ["L. Mariani", " F. Pastore ", " M. Pezz\u00e8"]}, {"title": " \"Assessing comparing and combining state machine-based testing and structural testing: A series of experiments\"", "authors": ["S. Mouchawrab", " L. C. Bri", "", " Y. Labiche ", " M. Di Penta"]}, {"title": " \"Verifying an implementation of SSH\"", "authors": ["E. Poll ", " A. Schubert"]}, {"title": " \"Transmission control protocol\"", "authors": ["J. Postel"]}, {"title": " \"A cluster analysis method for grouping means in the analysis of variance\"", "authors": ["A. Scott ", " M. Knott"]}, {"title": " \"Design synthesis from interaction and statebased specifications\"", "authors": ["J. Sun ", " J. Song Dong"]}, {"title": " \"An empirical comparison of model validation techniques for defect prediction models\"", "authors": ["C. Tantithamthavorn", " S. McIntosh", " A. E. Hassan ", " K. Matsumoto"]}, {"title": " \"Probabilistic finite-state machines-part i\"", "authors": ["E. Vidal", " F. Thollard", " C. de la Higuera", " F. Casacuberta ", " R. C. Carrasco"]}, {"title": " \"Mimicry attacks on host-based intrusion detection systems\"", "authors": ["D. A. Wagner ", " P. Soto"]}, {"title": " \"Behavioral execution comparison: Are tests representative of field behavior\"", "authors": ["Q. Wang", " Y. Brun ", " A. Orso"]}, {"title": " \"Cloudseer: Workflow monitoring of cloud infrastructures via interleaved logs\"", "authors": ["X. Yu", " P. Joshi", " J. Xu", " G. Jin", " H. Zhang ", " G. Jiang"]}]},
{"doi": "10.1109/ASEW.2015.7", "title": "Which of My Failures are Real? Using Relevance Ranking to Raise True Failures to the Top", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Graphical user interfaces", "Testing", "Software", "Computer bugs", "Entropy", "Computer science", "Electronic mail"], "abstract": "GUI reference testing is performed to detect regression errors in a modified or patched GUI software. Test cases are executed on the original and modified GUIs, differences in the states of GUI widgets across versions indicate potential defects. However, various factors (e.g., position, flakiness, resolution) create problems for accurate GUI state collection, leading to spurious state mismatches, and hence false positives, these need to be weeded out manually. In this paper, we show that the problem of false positives is significant, often inundating the tester with a large number of false bug reports, requiring a disproportionate amount of manual effort. We develop an entropy-based approach to rank each GUI widget property, and use it to determine whether a state mismatch (indicative of a bug) is real or a false positive. Our empirical evaluation shows that this ranking helps to percolate real bugs to the top of a set of reported bugs, thereby helping to economize tester time.", "author": [{"name": "Zebao Gao", "affiliation": "Department of Computer Science, University of Maryland, College Park"}, {"name": "Atif M. Memon", "affiliation": "Department of Computer Science, University of Maryland, College Park"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"Entropy-based test generation for improved fault localization\"", "authors": ["J. Campos", " R. Abreu", " G. Fraser ", " M. D'Amorim"]}, {"title": " \"Jcrasher: an automatic robustness tester for java\"", "authors": ["C. Csallner ", " Y. Smaragdakis"]}, {"title": " \"Generating oracles from your favorite temporal logic specifications\"", "authors": ["L. K. Dillon ", " Y. Ramakrishna"]}, {"title": " \"Making system user interactive tests repeatable: When and what should we control?\"", "authors": ["Z. Gao", " Y. Liang", " M. B. Cohen", " A. M. Memon ", " Z. Wang"]}, {"title": " \"Test case generator for GUITAR\"", "authors": ["D. Hackner ", " A. M. Memon"]}, {"title": " \"An empirical investigation of the relationship between spectra differences and regression faults\"", "authors": ["M. J. Harrold", " G. Rothermel", " K. Sayre", " R. Wu ", " L. Yi"]}, {"title": " \"DART: A framework for regression testing nightly/daily builds of GUI applications\"", "authors": ["A. M. Memon", " I. Banerjee ", " A. Nagarajan"]}, {"title": " \"GUI ripping: Reverse engineering of graphical user interfaces for testing\"", "authors": ["A. M. Memon", " I. Banerjee ", " A. Nagarajan"]}, {"title": " \"Automated test oracles for GUIs\"", "authors": ["A. M. Memon", " M. E. Pollack ", " M. L. Soffa"]}, {"title": " \"Regression testing of GUIs\"", "authors": ["A. M. Memon ", " M. L. Soffa"]}, {"title": " \"Coverage criteria for GUI testing\"", "authors": ["A. M. Memon", " M. L. Soffa ", " M. E. Pollack"]}, {"title": " \"Guitar: an innovative tool for automated testing of gui-driven software\"", "authors": ["B. Nguyen", " B. Robbins", " I. Banerjee ", " A. Memon"]}, {"title": " \"Taos: Testing with analysis and oracle support\"", "authors": ["D. J. Richardson"]}, {"title": " \"Prioritizing test cases for regression testing\"", "authors": ["G. Rothermel", " R. H. Untch", " C. Chu ", " M. J. Harrold"]}, {"title": " \"A study of effective regression testing in practice\"", "authors": ["W. E. Wong", " J. R. Horgan", " S. London ", " H. Agrawal"]}, {"title": " \"Designing and comparing automated test oracles for gui-based software applications\"", "authors": ["Q. Xie ", " A. M. Memon"]}, {"title": " \"Augmenting automatically generated unit-test suites with regression oracle checking\" in ECOOP 2006\u2014Object-Oriented Programming", "authors": ["T. Xie"]}, {"title": " \"Checking inside the black box: Regression testing by comparing value spectra\"", "authors": ["T. Xie ", " D. Notkin"]}]},
{"doi": "10.1109/ASE.2013.6693072", "title": "Bita: Coverage-guided, automatic testing of actor programs", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Schedules", "Receivers", "Concurrent computing", "Computer bugs", "Testing", "Programming", "Postal services"], "abstract": "Actor programs are concurrent programs where concurrent entities communicate asynchronously by exchanging messages. Testing actor programs is challenging because the order of message receives depends on the non-deterministic scheduler and because exploring all schedules does not scale to large programs. This paper presents Bita, a scalable, automatic approach for testing non-deterministic behavior of actor programs. The key idea is to generate and explore schedules that are likely to reveal concurrency bugs because these schedules increase the schedule coverage. We present three schedule coverage criteria for actor programs, an algorithm to generate feasible schedules that increase coverage, and a technique to force a program to comply with a schedule. Applying Bita to real-world actor programs implemented in Scala reveals eight previously unknown concurrency bugs, of which six have already been fixed by the developers. Furthermore, we show our approach to find bugs 122\u00d7 faster than random scheduling, on average.", "author": [{"name": "Samira Tasharofi", "affiliation": "Department of Computer Science, University of Illinois, Urbana, IL, USA"}, {"name": "Michael Pradel", "affiliation": "Department of Computer Science, University of Illinois, Urbana, IL, USA"}, {"name": "Yu Lin", "affiliation": "Department of Computer Science, University of Illinois, Urbana, IL, USA"}, {"name": "Ralph Johnson", "affiliation": "Department of Computer Science, University of Illinois, Urbana, IL, USA"}], "time": "Nov. 2013", "citationCount": "11", "references": [{"title": "\"Fyrie redis", "authors": []}, {"title": "\"Gatling stress tool", "authors": []}, {"title": "\"Geotrellis", "authors": []}, {"title": "\"Signal/collect", "authors": []}, {"title": " \"Making reliable distributed systems in the presence of software errors", "authors": ["J. Armstrong"]}, {"title": " \"Akka library", "authors": ["J. Bon\u00e9r", " V. Klang", " R. Kuhn ."]}, {"title": " \"Applications of synchronization coverage", "authors": ["A. Bron", " E. Farchi", " Y. Magid", " Y. Nir", " ", " S. Ur"]}, {"title": " \"A randomized scheduler with probabilistic guarantees of finding bugs", "authors": ["S. Burckhardt", " P. Kothari", " M. Musuvathi", " ", " S. Nagarakatte"]}, {"title": " \"Orleans: cloud computing for everyone", "authors": ["S. Bykov", " A. Geller", " G. Kliot", " J. R. Larus", " R. P", "ya", " ", " J. Thelin"]}, {"title": " \"jPredictor: a predictive runtime analysis tool for java", "authors": ["F. Chen", " T. F. Serbanuta", " ", " G. Rosu"]}, {"title": " \"Detection of asynchronous message passing errors using static analysis", "authors": ["M. Christakis ", " K. Sagonas"]}, {"title": " \"Detection of asynchronous message passing errors using static analysis", "authors": ["M. Christakis ", " K. F. Sagonas"]}, {"title": " \"Finding race conditions in Erlang with QuickCheck and PULSE", "authors": ["K. Claessen", " M. Palka", " N. Smallbone", " J. Hughes", " H. Svensson", " T. Arts", " ", " U. T. Wiger"]}, {"title": " \"GAMBIT: effective unit testing for concurrency libraries", "authors": ["K. E. Coons", " S. Burckhardt", " ", " M. Musuvathi"]}, {"title": " \"Verification and coverage of message passing multicore applications.\" ACM T Des Automat El", "authors": ["E. Deniz", " A. Sen", " ", " J. Holt"]}, {"title": " \"Multithreaded Java program test generation", "authors": ["O. Edelstein", " E. Farchi", " Y. Nir", " G. Ratsaby", " ", " S. Ur"]}, {"title": " \"Adversarial memory for detecting destructive races", "authors": ["C. Flanagan ", " S. N. Freund"]}, {"title": " \"Mcerlang: a model checker for a distributed functional programming language", "authors": ["L.-\u00c5. Fredlund ", " H. Svensson"]}, {"title": " \"2ndstrike: toward manifesting hidden concurrency typestate bugs", "authors": ["Q. Gao", " W. Zhang", " Z. Chen", " M. Zheng", " ", " F. Qin"]}, {"title": " \"Concurrency at Microsoft - an exploratory survey", "authors": ["P. Godefroid ", " N. Nagappan"]}, {"title": " \"A universal modular actor formalism for artificial intelligence", "authors": ["C. Hewitt", " P. Bishop", " ", " R. Steiger"]}, {"title": " \"Testing concurrent programs to achieve high synchronization coverage", "authors": ["S. Hong", " J. Ahn", " S. Park", " M. Kim", " ", " M. J. Harrold"]}, {"title": " \"Persuasive prediction of concurrency access anomalies", "authors": ["J. Huang ", " C. Zhang"]}, {"title": " \"Improved multithreaded unit testing", "authors": ["V. Jagannath", " M. Gligoric", " D. Jin", " Q. Luo", " G. Rosu", " ", " D. Marinov"]}, {"title": " \"CalFuzzer: An extensible active testing framework for concurrent programs", "authors": ["P. Joshi", " M. Naik", " C.-S. Park", " ", " K. Sen"]}, {"title": " \"Actor frameworks for the JVM platform: a comparative analysis", "authors": ["R. K. Karmani", " A. Shali", " ", " G. Agha"]}, {"title": " \"Coverage metrics for saturationbased and search-based testing of concurrent software", "authors": ["B. Krena", " Z. Letko", " ", " T. Vojnar"]}, {"title": " \"Detecting atomic-set serializability violations in multithreaded programs through active randomized testing", "authors": ["Z. Lai", " S.-C. Cheung", " ", " W. K. Chan"]}, {"title": " \"A framework for state-space exploration of Java-based actor programs", "authors": ["S. Lauterburg", " M. Dotta", " D. Marinov", " ", " G. A. Agha"]}, {"title": " \"A novel framework for non-deterministic testing of message-passing programs.\" in HASE", "authors": ["Y. Lei ", " W. E. Wong"]}, {"title": " \"Tool support for testing concurrent Java components", "authors": ["B. Long", " D. Hoffman", " ", " P. Strooper"]}, {"title": " \"A study of interleaving coverage criteria", "authors": ["S. Lu", " W. Jiang", " ", " Y. Zhou"]}, {"title": " \"Finding and reproducing Heisenbugs in concurrent programs", "authors": ["M. Musuvathi", " S. Qadeer", " T. Ball", " G. Basler", " P. A. Nainar", " ", " I. Neamtiu"]}, {"title": " \"Randomized active atomicity violation detection in concurrent programs", "authors": ["C.-S. Park ", " K. Sen"]}, {"title": " \"CTrigger: exposing atomicity violation bugs from their hiding places", "authors": ["S. Park", " S. Lu", " ", " Y. Zhou"]}, {"title": " \"GPars", "authors": ["V. Pech", " D. K\u00f6nig", " R. Winder ."]}, {"title": " \"Unit testing concurrent software", "authors": ["W. Pugh ", " N. Ayewah"]}, {"title": " \"Effective random testing of concurrent programs", "authors": ["K. Sen"]}, {"title": " \"Race directed random testing of concurrent programs", "authors": ["-"]}, {"title": " \"Automated systematic testing of open distributed programs", "authors": ["K. Sen ", " G. Agha"]}, {"title": " \"PENELOPE: weaving threads to expose atomicity violations", "authors": ["F. Sorrentino", " A. Farzan", " ", " P. Madhusudan"]}, {"title": " \"Structural testing criteria for message-passing parallel programs", "authors": ["S. R. S. Souza", " S. R. Vergilio", " P. S. L. Souza", " A. S. Sim\u00e3o", " ", " A. C. Hausen"]}, {"title": " \"Efficient testing of actor programs with non-deterministic behavior", "authors": ["S. Tasharofi"]}, {"title": " \"Setac: A framework for phased deterministic testing of scala actor programs", "authors": ["S. Tasharofi", " M. Gligoric", " D. Marinov", " ", " R. Johnson"]}, {"title": " \"TransDPOR: A novel dynamic partial-order reduction technique for testing actor programs", "authors": ["S. Tasharofi", " R. K. Karmani", " S. Lauterburg", " A. Legay", " D. Marinov", " ", " G. Agha"]}, {"title": " \"Structural testing of concurrent programs", "authors": ["R. N. Taylor", " D. L. Levine", " ", " C. D. Kelly"]}, {"title": " \"Model checking programs", "authors": ["W. Visser", " K. Havelund", " G. P. Brat", " S. Park", " ", " F. Lerda"]}, {"title": " \"All-du-path coverage for parallel programs", "authors": ["C.-S. D. Yang", " A. L. Souter", " ", " L. L. Pollock"]}, {"title": " \"Maple: a coveragedriven testing tool for multithreaded programs", "authors": ["J. Yu", " S. Narayanasamy", " C. Pereira", " ", " G. Pokam"]}, {"title": " \"ConSeq: detecting concurrency bugs through sequential errors", "authors": ["W. Zhang", " J. Lim", " R. Olich", "ran", " J. Scherpelz", " G. Jin", " S. Lu", " ", " T. W. Reps"]}, {"title": " \"ConMem: detecting severe concurrency bugs through an effect-oriented approach", "authors": ["W. Zhang", " C. Sun", " ", " S. Lu"]}]},
{"doi": "10.1109/ASE.2019.00085", "title": "Logzip: Extracting Hidden Structures via Iterative Clustering for Log Compression", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Clustering algorithms", "Iterative algorithms", "Sparks", "Software engineering", "Software systems"], "abstract": "System logs record detailed runtime information of software systems and are used as the main data source for many tasks around software engineering. As modern software systems are evolving into large scale and complex structures, logs have become one type of fast-growing big data in industry. In particular, such logs often need to be stored for a long time in practice (e.g., a year), in order to analyze recurrent problems or track security issues. However, archiving logs consumes a large amount of storage space and computing resources, which in turn incurs high operational cost. Data compression is essential to reduce the cost of log storage. Traditional compression tools (e.g., gzip) work well for general texts, but are not tailed for system logs. In this paper, we propose a novel and effective log compression method, namely logzip. Logzip is capable of extracting hidden structures from raw logs via fast iterative clustering and further generating coherent intermediate representations that allow for more effective compression. We evaluate logzip on five large log datasets of different system types, with a total of 63.6 GB in size. The results show that logzip can save about half of the storage space on average over traditional compression tools. Meanwhile, the design of logzip is highly parallel and only incurs negligible overhead. In addition, we share our industrial experience of applying logzip to Huawei's real products.", "author": [{"name": "Jinyang Liu", "affiliation": "Sun Yat-Sen University, Guangzhou, China"}, {"name": "Jieming Zhu", "affiliation": "Huawei Noah\u2019s Ark Lab, Shenzhen, China"}, {"name": "Shilin He", "affiliation": "The Chinese University of Hong Kong, Hong Kong, China"}, {"name": "Pinjia He", "affiliation": "ETH Zurich, Switzerland"}, {"name": "Zibin Zheng", "affiliation": "Sun Yat-Sen University, Guangzhou, China"}, {"name": "Michael R. Lyu", "affiliation": "The Chinese University of Hong Kong, Hong Kong, China"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Be conservative: Enhancing failure diagnosis with proactive logging\"", "authors": ["D. Yuan", " S. Park", " P. Huang", " Y. Liu", " M. M. Lee", " X. Tang", " ."]}, {"title": " \"Pensieve: Nonintrusive failure reproduction for distributed systems using the event chaining approach\"", "authors": ["Y. Zhang", " S. Makarov", " X. Ren", " D. Lion ", " D. Yuan"]}, {"title": " \"The mystery machine: End-to-end performance analysis of large-scale internet services\"", "authors": ["M. Chow", " D. Meisner", " J. Flinn", " D. Peek ", " T. F. Wenisch"]}, {"title": " \"Structured comparative analysis of systems logs to diagnose performance problems\"", "authors": ["K. Nagaraj", " C. E. Killian ", " J. Neville"]}, {"title": " \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\"", "authors": ["M. Du", " F. Li", " G. Zheng ", " V. Srikumar"]}, {"title": " \"Detection of early-stage enterprise infection by mining large-scale log data\"", "authors": ["A. Oprea", " Z. Li", " T. Yen", " S. H. Chin ", " S. A. Alrwais"]}, {"title": " \"The unified logging infrastructure for data analytics at twitter\"", "authors": ["G. Lee", " J. J. Lin", " C. Liu", " A. Lorek ", " D. V. Ryaboy"]}, {"title": " \"Advances and challenges in log analysis\"", "authors": ["A. J. Oliner", " A. Ganapathi ", " W. Xu"]}, {"title": " \"Operational-log analysis for big data systems: Challenges and solutions\"", "authors": ["A. V. Miranskyy", " A. Hamou-Lhadj", " E. Cialini ", " A. Larsson"]}, {"title": " \"In-situ mapreduce for log processing\"", "authors": ["D. Logothetis", " C. Trezzo", " K. C. Webb ", " K. Yocum"]}, {"title": " \"Identifying recurrent and unknown performance issues\"", "authors": ["M. Lim", " J. Lou", " H. Zhang", " Q. Fu", " A. B. J. Teoh", " Q. Lin", " ."]}, {"title": " \"Learning to log: Helping developers make informed logging decisions\"", "authors": ["J. Zhu", " P. He", " Q. Fu", " H. Zhang", " M. R. Lyu ", " D. Zhang"]}, {"title": " \"Which log level should developers choose for a new logging statement?\"", "authors": ["H. Li", " W. Shang ", " A. E. Hassan"]}, {"title": " \"Where do developers log? an empirical study on logging practices in industry\"", "authors": ["Q. Fu", " J. Zhu", " W. Hu", " J. Lou", " R. Ding", " Q. Lin", " ."]}, {"title": " \"Log20: Fully automated optimal placement of log printing statements under specified overhead threshold\"", "authors": ["X. Zhao", " K. Rodrigues", " Y. Luo", " M. Stumm", " D. Yuan ", " Y. Zhou"]}, {"title": " \"Cowic: A column-wise independent compression for log stream analysis\"", "authors": ["H. Lin", " J. Zhou", " B. Yao", " M. Guo ", " J. Li"]}, {"title": " \"Tools and benchmarks for automated log parsing\"", "authors": ["J. Zhu", " S. He", " J. Liu", " P. He", " Q. Xie", " Z. Zheng", " ."]}, {"title": " \"Identifying impactful service system problems via log analysis\"", "authors": ["S. He", " Q. Lin", " J. Lou", " H. Zhang", " M. R. Lyu ", " D. Zhang"]}, {"title": " \"Spell: Streaming parsing of system event logs\"", "authors": ["M. Du ", " F. Li"]}, {"title": " \"Execution anomaly detection in distributed systems through unstructured log analysis\"", "authors": ["Q. Fu", " J. Lou", " Y. Wang ", " J. Li"]}, {"title": " \"Detecting large-scale system problems by mining console logs\"", "authors": ["W. Xu", " L. Huang", " A. Fox", " D. A. Patterson ", " M. I. Jordan"]}, {"title": " \"Cowic: A column-wise independent compression for log stream analysis\"", "authors": ["H. Lin", " J. Zhou", " B. Yao", " M. Guo ", " J. Li"]}, {"title": " \"Adaptive log compression for massive log data\"", "authors": ["R. Christensen ", " F. Li"]}, {"title": " \"Detecting large-scale system problems by mining console logs\"", "authors": ["W. Xu", " L. Huang", " A. Fox", " D. A. Patterson ", " M. I. Jordan"]}, {"title": " \"What supercomputers say: A study of five system logs\"", "authors": ["A. Oliner ", " J. Stearley"]}, {"title": " \"An automated approach to estimating code coverage measures via execution logs\"", "authors": ["B. Chen", " J. Song", " P. Xu", " X. Hu ", " Z. M. J. Jiang"]}, {"title": " \"Log clustering based problem identification for online service systems\"", "authors": ["Q. Lin", " H. Zhang", " J. Lou", " Y. Zhang ", " X. Chen"]}, {"title": " \"Characterizing and detecting anti-patterns in the logging code\"", "authors": ["B. Chen ", " Z. M. J. Jiang"]}, {"title": " \"Prediction of web user behavior by discovering temporal relational rules from web log data\"", "authors": ["X. Yu", " M. Li", " I. Paik ", " K. H. Ryu"]}, {"title": " \"Business process mining from e-commerce web logs\"", "authors": ["N. Poggi", " V. Muthusamy", " D. Carrera ", " R. Khalaf"]}, {"title": " \"Evidence of log integrity in policy-based security monitoring\"", "authors": ["M. Montanari", " J. H. Huh", " D. Dagit", " R. Bobba ", " R. H. Campbell"]}, {"title": " \"A data clustering algorithm for mining patterns from event logs\"", "authors": ["R. Vaar", "i"]}, {"title": " \"Clustering event logs using iterative partitioning\"", "authors": ["A. Makanju", " A. N. Zincir-Heywood ", " E. E. Milios"]}, {"title": " \"Drain: An online log parsing approach with fixed depth tree\"", "authors": ["P. He", " J. Zhu", " Z. Zheng ", " M. R. Lyu"]}, {"title": " \"A directed acyclic graph approach to online log parsing\"", "authors": ["P. He", " J. Zhu", " P. Xu", " Z. Zheng ", " M. R. Lyu"]}, {"title": " \"A universal algorithm for sequential data compression\"", "authors": ["J. Ziv ", " A. Lempel"]}, {"title": " \"Compression of individual sequences via variable-rate coding\"", "authors": ["J. Ziv ", " A. Lempel"]}, {"title": " \"Text compression and encryption through smart devices for mobile communication\"", "authors": ["R. Pizzolante", " B. Carpentieri", " A. Castiglione", " A. Castiglione ", " F. Palmieri"]}, {"title": " \"A lempel-ziv-style compression method for repetitive texts\"", "authors": ["M. Mauer", " T. Beller ", " E. Ohlebusch"]}, {"title": " \"A guaranteed compression scheme for repetitive dna sequences\"", "authors": ["E. Rivals", " J.-P. Delahaye", " M. Dauchet ", " O. Delgrange"]}, {"title": " \"An optimal text compression algorithm based on frequent pattern mining\"", "authors": ["C. Oswald ", " B. Sivaselvan"]}, {"title": " \"Comprehensive log compression with frequent patterns\"", "authors": ["K. H\u00e4t\u00f6nen", " J. Boulicaut", " M. Klemettinen", " M. Miettinen ", " C. Masson"]}, {"title": " \"High density compression of log files\"", "authors": ["B. R\u00e1cz ", " A. Luk\u00e1cs"]}, {"title": " \"MLC: an efficient multi-level log compression method for cloud backup systems\"", "authors": ["B. Feng", " C. Wu ", " J. Li"]}, {"title": " \"Towards automated log parsing for large-scale log data analysis\"", "authors": ["P. He", " J. Zhu", " S. He", " J. Li ", " M. R. Lyu"]}, {"title": " \"An evaluation study on log parsing and its use in log mining\"", "authors": ["P. He", " J. Zhu", " S. He", " J. Li ", " M. R. Lyu"]}, {"title": " \"Experience report: System log analysis for anomaly detection\"", "authors": ["S. He", " J. Zhu", " P. He ", " M. R. Lyu"]}, {"title": " \"Characterizing the natural language descriptions in software logging statements\"", "authors": ["P. He", " Z. Chen", " S. He ", " M. R. Lyu"]}]},
{"doi": "10.1109/ASEW.2015.18", "title": "Comparing Model Coverage and Code Coverage in Model Driven Testing: An Exploratory Study", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Unified modeling language", "Testing", "Computational modeling", "Measurement", "Software systems", "Computer architecture"], "abstract": "The Model Driven Architecture (MDA) approach is emerged in the last years as a novel software design methodology for the development of software systems. In this approach the focus of software development is shifted from writing code to modeling. In MDA, developers implement models that are automatically transformed into the target code of the system. Alongside MDA, the Model Driven Testing (MDT) is emerging as a relevant research topic in both industrial and scientific communities. MDT is a methodology where test cases for the system are automatically obtained starting from test models to maximize specific model coverage criteria. Eventually, test cases are executed to verify the system code that is generated through an MDA approach. In this paper, we conduct an exploratory study in order to evaluate the differences that may exist between the model coverage guaranteed by the test cases and the code coverage reached when they are executed on the auto-generated code. Moreover, we identify the main factors that may influence these differences.", "author": [{"name": "Domenico Amalfitano", "affiliation": "Department of Electrical Engineering and Information Technologies, University of Naples Federico II, Naples, Italy"}, {"name": "Vincenzo De Simone", "affiliation": "Department of Electrical Engineering and Information Technologies, University of Naples Federico II, Naples, Italy"}, {"name": "Anna Rita Fasolino", "affiliation": "Department of Electrical Engineering and Information Technologies, University of Naples Federico II, Naples, Italy"}, {"name": "Vincenzo Riccio", "affiliation": "CeRICT - Centro Regionale Information and Communication Technology, Complesso Universitario di Monte Sant\u2019 Angelo, Naples, Italy"}], "time": "Nov. 2015", "citationCount": "1", "references": [{"title": " \"Guest editor's introduction: Model-driven engineering\"", "authors": ["D. Schmidt"]}, {"title": " \"From u2tp models to executable tests with ttcn-3 - an approach to model driven testing -\" in Testing of Communicating Systems ser. Lecture Notes in Computer Science", "authors": ["J. Z", "er", " Z. Dai", " I. Schieferdecker ", " G. Din"]}, {"title": " \"The Interplay between Model Coverage and Code Coverage\"", "authors": ["A. Baresel", " M. Conrad", " S. Sadeghipour ", " J. Wegener"]}, {"title": " \"Transforming software development: an mda road map\"", "authors": ["T. Meservy ", " K. Fenstermacher"]}, {"title": " \"Improving model driven architecture with requirements models\"", "authors": ["N. Debnath", " M. Leonardi", " M. Mauco", " G. Montejano ", " D. Riesco"]}, {"title": "\"MDA Specifications\"", "authors": []}, {"title": " \"Model-driven testing with uml 2.0\"", "authors": ["Z. R. Dai"]}, {"title": " \"Test coverage analysis of uml state machines\"", "authors": ["R. D. F. Ferreira", " J. A. P. Faria ", " A. C. R. Paiva"]}, {"title": "\"UML Specifications\"", "authors": []}]},
{"doi": "10.1109/ASE.2013.6693073", "title": "SABRINE: State-based robustness testing of operating systems", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Robustness", "Testing", "Kernel", "Probes", "Hardware", "Monitoring"], "abstract": "The assessment of operating systems robustness with respect to unexpected or anomalous events is a fundamental requirement for mission-critical systems. Robustness can be tested by deliberately exposing the system to erroneous events during its execution, and then analyzing the OS behavior to evaluate its ability to gracefully handle these events. Since OSs are complex and stateful systems, robustness testing needs to account for the timing of erroneous events, in order to evaluate the robust behavior of the OS under different states. This paper presents SABRINE (StAte-Based Robustness testIng of operatiNg systEms), an approach for state-aware robustness testing of OSs. SABRINE automatically extracts state models from execution traces, and generates a set of test cases that cover different OS states. We evaluate the approach on a Linux-based Real-Time Operating System adopted in the avionic domain. Experimental results show that SABRINE can automatically identify relevant OS states, and find robustness vulnerabilities while keeping low the number of test cases.", "author": [{"name": "Domenico Cotroneo", "affiliation": "Complesso Univ. Monte S. Angelo, Napoli, Italy"}, {"name": "Domenico Di Leo", "affiliation": "Complesso Univ. Monte S. Angelo, Napoli, Italy"}, {"name": "Francesco Fucci", "affiliation": "DIETI department, Universit\u00e0 degli Studi di Napoli Federico II, Napoli, Italy"}, {"name": "Roberto Natella", "affiliation": "Complesso Univ. Monte S. Angelo, Napoli, Italy"}], "time": "Nov. 2013", "citationCount": "12", "references": []},
{"doi": "10.1109/ASE.2019.00086", "title": "Code-First Model-Driven Engineering: On the Agile Adoption of MDE Tooling", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Object oriented modeling", "Biological system modeling", "Unified modeling language", "Java", "Tools", "Software", "Synchronization"], "abstract": "Domain models are the most important asset in widely accepted software development approaches, like Domain-Driven Design (DDD), yet those models are still implicitly represented in programs. Model-Driven Engineering (MDE) regards those models as representable entities that are amenable to automated analysis and processing, facilitating quality assurance while increasing productivity in software development processes. Although this connection is not new, very few approaches facilitate adoption of MDE tooling without compromising existing value, their data. Moreover, switching to MDE tooling usually involves re-engineering core parts of an application, hindering backward compatibility and, thereby, continuous integration, while requiring an up-front investment in training in specialized modeling frameworks. In those approaches that overcome the previous problem, there is no clear indication - from a quantitative point of view - of the extent to which adopting state-of-the-art MDE practices and tooling is feasible or advantageous. In this work, we advocate a code-first approach to modeling through an approach for applying MDE techniques and tools to existing object-oriented software applications that fully preserves the semantics of the original application, which need not be modified. Our approach consists both of a semi-automated method for specifying explicit view models out of existing object-oriented applications and of a conservative extension mechanism that enables the use of such view models at run time, where view model queries are resolved on demand and view model updates are propagated incrementally to the original application. This mechanism enables an iterative, flexible application of MDE tooling to software applications, where metamodels and models do not exist explicitly. An evaluation of this extension mechanism, implemented for Java applications and for view models atop the Eclipse Modeling Framework (EMF), has been conducted with an industry-targeted benchmark for decision support systems, analyzing performance and scalability of the synchronization mechanism. Backward propagation of large updates over very large views is instant.", "author": [{"name": "Artur Boronat", "affiliation": "School of Informatics, University of Leicester, UK"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Agile in distress: Architecture to the rescue\"", "authors": ["R. L. Nord", " I Ozkaya ", " P Kruchten"]}, {"title": " \"Supporting large-scale agile development with domain-driven design\"", "authors": ["\u00d6. Uludag", " M Hauder", " M Kleehaus", " C Schimpfle ", " F Matthes"]}, {"title": " \"Agile enterprise software development using domain-driven design and test first\"", "authors": ["E L", "re", " H Wesenberg ", " J Olmheim"]}, {"title": " \"Model driven engineering\"", "authors": ["S Kent"]}, {"title": " \"Guest editor's introduction: Model-driven engineering\"", "authors": ["D. C. Schmidt"]}, {"title": " \"Modeldriven engineering practices in industry\"", "authors": ["J. E. Hutchinson", " M Rouncefield ", " J Whittle"]}, {"title": " \"Empirical assessment of MDE in industry\"", "authors": ["J. E. Hutchinson", " J Whittle", " M Rouncefield ", " S Kristoffersen"]}, {"title": " \"Industrial adoption of model-driven engineering: Are the tools really the problem?\"", "authors": ["J Whittle", " J. E. Hutchinson", " M Rouncefield", " H Burden ", " R Heldal"]}, {"title": " \"The state of practice in model-driven engineering\"", "authors": ["J Whittle", " J. E. Hutchinson ", " M Rouncefield"]}, {"title": " \"Modeldriven engineering practices in industry: Social organizational and managerial factors that lead to success or failure\"", "authors": ["J. E. Hutchinson", " J Whittle ", " M Rouncefield"]}, {"title": " \"Experiences of models@runtime with EMF and CDO\"", "authors": ["D Seybold", " J Domaschka", " A Rossini", " C. B. Hauser", " F Griesinger ", " A Tsitsipas"]}, {"title": " \"The problems with eclipse modeling tools: a topic analysis of eclipse forums\"", "authors": ["N Kahani", " M Bagherzadeh", " J Dingel ", " J. R. Cordy"]}, {"title": " \"Industrial adoption of model-driven engineering: Are the tools really the problem?\"", "authors": ["J Whittle", " J. E. Hutchinson", " M Rouncefield", " H Burden ", " R Heldal"]}, {"title": " \"Assessing the Use of Eclipse MDE Technologies in Open-Source Software Projects\"", "authors": ["D. S. Kolovos", " N. D. Matragkas", " I Korkontzelos", " S Ananiadou ", " R. F. Paige"]}, {"title": " \"Model-driven reverse engineering\"", "authors": ["S Rugaber ", " K Stirewalt"]}, {"title": " \"Experiences from designing and validating a software modernization transformation (E)\"", "authors": ["A. F. Iosif-Lazar", " A. S. Al-Sibahi", " A. S. Dimovski", " J. E. Savolainen", " K Sierszecki ", " A Wasowski"]}, {"title": " \"Ecoreification: Making Arbitrary Java Code Accessible to Metamodel-Based Tools\"", "authors": ["H Klare", " E Burger", " M Kramer", " M Langhammer", " T Saglam ", " R Reussner"]}, {"title": " \"Bridging proprietary modelling and opensource model management tools: The case of PTC integrity modeller and epsilon\"", "authors": ["A Zolotas", " H. H. Rodriguez", " D. S. Kolovos", " R. F. Paige ", " S Hutchesson"]}, {"title": " \"Applying MDE tools at runtime: Experiments upon runtime models\"", "authors": ["H Song", " G Huang", " F Chauvel ", " Y Sun"]}, {"title": " \"Combinators for Bi-directional Tree Transformations: a Linguistic Approach to the View Update Problem\"", "authors": ["J. N. Foster", " M. B. Greenwald", " J. T. Moore", " B. C. Pierce ", " A Schmitt"]}, {"title": " \"Generating synchronization engines between running systems and their model-based views\"", "authors": ["H Song", " Y Xiong", " F Chauvel", " G Huang", " Z Hu ", " H Mei"]}, {"title": " \"Sm@rt: representing run-time system data as mofcompliant models\"", "authors": ["H Song", " G Huang", " F Chauvel", " Y Sun ", " H Mei"]}, {"title": " \"Supporting runtime software architecture: A bidirectional-transformation-based approach\"", "authors": ["H Song", " G Huang", " F Chauvel", " Y Xiong", " Z Hu", " Y Sun", " ."]}, {"title": " \"Instant and incremental QVT transformation for runtime models\"", "authors": ["H Song", " G Huang", " F Chauvel", " W Zhang", " Y Sun", " W Shao", " ."]}, {"title": " \"A feature-based survey of model view approaches\"", "authors": ["H Bruneliere", " E Burger", " J Cabot ", " M Wimmer"]}, {"title": " \"Reverse engineering and design recovery: A taxonomy\"", "authors": ["E. J. Chikofsky ", " J. H. C"]}, {"title": " \"Domain-retargetable reverse engineering. III. layered modeling\"", "authors": ["S. R. Tilley"]}, {"title": " \"Reusing domains for the construction of reverse engineering tools\"", "authors": ["F Gouveia de Freitas ", " J. C. Sampaio do Prado Leite"]}, {"title": " \"A reverse-engineering approach to subsystem structure identification\"", "authors": ["H. A. M\u00fcller", " M. A. Orgun", " S. R. Tilley ", " J. S. Uhl"]}, {"title": " \"Extracting architectural features from source code\"", "authors": ["D. R. Harris", " A. S. Yeh ", " H. B. Reubenstein"]}, {"title": " \"Pattern-based reverse-engineering of design components\"", "authors": ["R. K. Keller", " R Schauer", " S Robitaille ", " P. Pag\u00e9"]}, {"title": " \"Reverse engineering a large component-based software product\"", "authors": ["J. Favre", " F Duclos", " J Estublier", " R Sanlaville ", " J. Auffret"]}, {"title": " \"Reverse engineering software-models of component-based systems\"", "authors": ["L Chouambe", " B Klatt ", " K Krogmann"]}, {"title": " \"Domain analysis and reverse engineering\"", "authors": ["J DeBaud", " B Moopen ", " S Rugaber"]}, {"title": " \"A software re-engineering method using domain models\"", "authors": ["J DeBaud ", " S Rugaber"]}, {"title": " \"Modisco: A model driven reverse engineering framework\"", "authors": ["H. Bruneli\u00e8re", " J Cabot", " G. Dup\u00e9 ", " F Madiot"]}, {"title": " \"Models from code or code as models?\"", "authors": ["A. Garc\u00eda-Dom\u00ednguez ", " D. S. Kolovos"]}]},
{"doi": "10.1109/ASEW.2015.24", "title": "An Automated Contextual Collaboration Approach for Distributed Agile Delivery", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Collaboration", "Context", "Stakeholders", "Organizations", "Electronic mail", "Feeds", "Planning"], "abstract": "The Agile way of developing and delivering software systems is gaining mainstream adoption due to the imperatives of a quickly changing technical landscape, business requirements and customer expectations. To truly leverage the power of Agile, big organizations need to be able to utilize distributed teams effectively. However, Agile delivery relies hugely on collaboration among team members and this can become a stumbling block among such geographically dispersed teams. Moreover, in such large projects the development and process layer needs to be monitored for any problematic patterns or events that could potentially cause the Sprints to fail. Here, we describe an automated approach which allows for contextual collaboration in such distributed Agile projects. The approach captures important events from the process and the development environment and uses a rule based approach to then automatically create awareness regarding them to appropriate roles in the project. Every team member receives an actionable feed in a MyContext pane which then leads the team member to navigate to an Activity centric context where collaboration specific to that activity can take place. This approach has been implemented in a process guidance and awareness workbench that we are piloting within our organization.", "author": [{"name": "Vibhu Saujanya Sharma", "affiliation": "Accenture Technology Labs, Accenture Services Private Limited, Bangalore, India"}, {"name": "Vikrant Kaulgud", "affiliation": "Accenture Technology Labs, Accenture Services Private Limited, Bangalore, India"}], "time": "Nov. 2015", "citationCount": "2", "references": [{"title": "\"jIra agile \u2014 atlassian\".", "authors": []}, {"title": " \"Implementing scrum in a distributed software development organization\"", "authors": ["H. Smits ", " G. Pshigoda"]}, {"title": "\"Manifesto for agile software development\".", "authors": []}, {"title": " \"An empirical study of speed and communication in globally distributed software development\"", "authors": ["J. D. Herbsleb ", " A. Mockus"]}, {"title": " \"Have agile techniques been the silver bullet for software development at microsoft?\"", "authors": ["B. Murphy", " C. Bird", " T. Zimmermann", " L. Williams", " N. Nagappan ", " A. Begel"]}, {"title": " \"Towards an understanding of tailoring scrum in global software development: A multi-case study\"", "authors": ["E. Hossain", " P. L. Bannerman ", " R. Jeffery"]}, {"title": " \"Nextmove: A framework for distributed task coordination\"", "authors": ["D. Mak ", " P. Kruchten"]}, {"title": " \"Context-aware task allocation for distributed agile team\"", "authors": ["J. Lin"]}, {"title": " \"Supporting public availability and accessibility with elvin: Experiences and reflections\"", "authors": ["G. Fitzpatrick", " S. Kaplan", " T. Mansfield", " D. Arnold ", " B. Segall"]}, {"title": " \"Codebook: discovering and exploiting relationships in software repositories\"", "authors": ["A. Begel", " Y. P. Khoo ", " T. Zimmermann"]}, {"title": " \"Context is key\"", "authors": ["J. Coutaz", " J. L. Crowley", " S. Dobson ", " D. Garlan"]}, {"title": " \"Designing tools to support trust in distributed software teams\"", "authors": ["S. Marczak", " B. Al-Ani", " D. Redmiles ", " R. Prikladnicki"]}]},
{"doi": "10.1109/ASE.2013.6693074", "title": "BLITZ: Compositional bounded model checking for real-world programs", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Input variables", "Computer bugs", "Semantics", "Model checking", "Software", "Indium phosphide", "Internet"], "abstract": "Bounded Model Checking (BMC) for software is a precise bug-finding technique that builds upon the efficiency of modern SAT and SMT solvers. BMC currently does not scale to large programs because the size of the generated formulae exceeds the capacity of existing solvers. We present a new, compositional and property-sensitive algorithm that enables BMC to automatically find bugs in large programs. A novel feature of our technique is to decompose the behaviour of a program into a sequence of BMC instances and use a combination of satisfying assignments and unsatisfiability proofs to propagate information across instances. A second novelty is to use the control- and data-flow of the program as well as information from proofs to prune the set of variables and procedures considered and hence, generate smaller instances. Our tool BLITZ outperforms existing tools and scales to programs with over 100,000 lines of code. BLITZ automatically and efficiently discovers bugs in widely deployed software including new vulnerabilities in Internet infrastructure software.", "author": [{"name": "Chia Yuan Cho", "affiliation": "DSO National Laboratories, Singapore"}, {"name": "Vijay D'Silva", "affiliation": "University of California, Berkeley, USA"}, {"name": "Dawn Song", "affiliation": "University of California, Berkeley, USA"}], "time": "Nov. 2013", "citationCount": "13", "references": []},
{"doi": "10.1109/ASE.2019.00087", "title": "Size and Accuracy in Model Inference", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Context modeling", "Knowledge engineering", "Inference algorithms", "Task analysis", "Radio frequency", "Analytical models", "Computer bugs"], "abstract": "Many works infer finite-state models from execution logs. Large models are more accurate but also more difficult to present and understand. Small models are easier to present and understand but are less accurate. In this work we investigate the tradeoff between model size and accuracy in the context of the classic k-Tails model inference algorithm. First, we define mk-Tails, a generalization of k-Tails from one to many parameters, which enables fine-grained control over the tradeoff. Second, we extend mk-Tails with a reduction based on past-equivalence, which effectively reduces the size of the model without decreasing its accuracy. We implemented our work and evaluated its performance and effectiveness on real-world logs as well as on models and generated logs from the literature.", "author": [{"name": "Nimrod Busany", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "Shahar Maoz", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "Yehonatan Yulazari", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Using finite-state models for log differencing\"", "authors": ["H. Amar", " L. Bao", " N. Busany", " D. Lo ", " S. Maoz"]}, {"title": " \"Statebased model slicing: A survey\"", "authors": ["K. Androutsopoulos", " D. Clark", " M. Harman", " J. Krinke ", " L. Tratt"]}, {"title": " \"Using declarative specification to improve the understanding extensibility and comparison of model-inference algorithms\"", "authors": ["I. Beschastnikh", " Y. Brun", " J. Abrahamson", " M. D. Ernst ", " A. Krishnamurthy"]}, {"title": " \"Leveraging existing instrumentation to automatically infer invariantconstrained models\"", "authors": ["I. Beschastnikh", " Y. Brun", " S. Schneider", " M. Sloan ", " M. D. Ernst"]}, {"title": " \"On the synthesis of finitestate machines from samples of their behavior\"", "authors": ["A. W. Biermann ", " J. A. Feldman"]}, {"title": " \"Behavioral log analysis with statistical guarantees\"", "authors": ["N. Busany ", " S. Maoz"]}, {"title": " \"Have we seen enough traces?\"", "authors": ["H. Cohen ", " S. Maoz"]}, {"title": " \"Discovering models of software processes from event-based data\"", "authors": ["J. E. Cook ", " A. L. Wolf"]}, {"title": " \"Inferring extended probabilistic finite-state automaton models from software executions\"", "authors": ["S. S. Emam ", " J. Miller"]}, {"title": " \"Experience report: Log-based behavioral differencing\"", "authors": ["M. Goldstein", " D. Raz ", " I. Segall"]}, {"title": " \"On NFA reductions\"", "authors": ["L. Ilie", " G. Navarro ", " S. Yu"]}, {"title": " \"CCS expressions finite state processes and three problems of equivalence\"", "authors": ["P. C. Kanellakis ", " S. A. Smolka"]}, {"title": " \"Synergizing specification miners through model fissions and fusions\"", "authors": ["T. B. Le", " X. D. Le", " D. Lo ", " I. Beschastnikh"]}, {"title": " \"Quark: Empirical assessment of automaton-based specification miners\"", "authors": ["D. Lo ", " S.-C. Khoo"]}, {"title": " \"SMArTIC: towards building an accurate robust and scalable specification miner\"", "authors": ["D. Lo ", " S.-C. Khoo"]}, {"title": " \"Automatic steering of behavioral model inference\"", "authors": ["D. Lo", " L. Mariani ", " M. Pezz\u00e9"]}, {"title": " \"Learning extended FSA from software: An empirical assessment\"", "authors": ["D. Lo", " L. Mariani ", " M. Santoro"]}, {"title": " \"Dynamic analysis for diagnosing integration faults\"", "authors": ["L. Mariani", " F. Pastore ", " M. Pezz\u00e9"]}, {"title": " \"Dynamic detection of COTS component incompatibility\"", "authors": ["L. Mariani ", " M. Pezz\u00e9"]}, {"title": " \"Three partition refinement algorithms\"", "authors": ["R. Paige ", " R. E. Tarjan"]}, {"title": " \"A framework for the evaluation of specification miners based on finite state machines\"", "authors": ["M. Pradel", " P. Bichsel ", " T. R. Gross"]}, {"title": " \"Encoding program executions\"", "authors": ["S. P. Reiss ", " M. Renieris"]}, {"title": " \"Automated comparison of state-based software models in terms of their language and structure\"", "authors": ["N. Walkinshaw ", " K. Bogdanov"]}, {"title": " \"Behavioral execution comparison: Are tests representative of field behavior?\"", "authors": ["Q. Wang", " Y. Brun ", " A. Orso"]}]},
{"doi": "10.1109/ASEW.2015.20", "title": "RepMine: A System for Transferrable Analyses of Collaboration Activities in Software Engineering", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Ontologies", "Collaboration", "Measurement", "Software engineering", "Software", "Data mining", "Databases"], "abstract": "Vast amounts of knowledge exist about collaboration activities in software engineering and their effects on development projects. Much of this knowledge is captured in research papers, and a subset of it is implemented in collaboration support and analysis tools. The main challenge for the development of these tools is thereby to simultaneously keep up with latest research and changing collaboration infrastructures. If tools are not compatible with recent collaboration tools, or provide outdated analyses, software engineering teams will stop using them. The RepMine system, which we present in this paper, provides a means to store analyses of collaboration activities using a graph-based query abstraction and transfer them to other representations of collaboration data through a semi-automatic ontology matching approach. This decoupling of analyses from data collection reduces the efforts for supporting emerging or changing infrastructures. As the system implements a catalogue for collaboration activity analyses, it can also be readily kept up-to-date with latest research.", "author": [{"name": "Thomas Kowark", "affiliation": "Hasso Plattner Institute University of Potsdam, Germany"}, {"name": "Ralf Teusner", "affiliation": "Hasso Plattner Institute University of Potsdam, Germany"}, {"name": "Keven Richly", "affiliation": "Hasso Plattner Institute University of Potsdam, Germany"}, {"name": "Hasso Plattner", "affiliation": "Hasso Plattner Institute University of Potsdam, Germany"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"Studying the impact of social structures on software quality\"", "authors": ["N. Bettenburg ", " A. E. Hassan"]}, {"title": " \"Lessons learned from deploying a code review analytics platform\"", "authors": ["C. Bird", " T. Carnahan ", " M. Greiler"]}, {"title": " \"Don't touch my code!: Examining the effects of ownership on software quality\"", "authors": ["C. Bird", " N. Nagappan", " B. Murphy", " H. Gall ", " P. Devanbu"]}, {"title": "\"The AgreementMakerLight Ontology Matching System\"", "authors": []}, {"title": " \"Code ownership in open-source software\"", "authors": ["M. Foucault", " J.-R. Falleri ", " X. Blanc"]}, {"title": " \"Sofas: A lightweight architecture for software analysis as a service\"", "authors": ["G. Ghezzi ", " H. C. Gall"]}, {"title": " \"Code Ownership and Software Quality: A Replication Study\"", "authors": ["M. Greiler", " K. Herzig ", " J. Czerwonka"]}, {"title": " \"TA-RE: an exchange language for mining software repositories\"", "authors": ["S. Kim", " T. Zimmermann", " M. Kim", " A. Hassan", " A. Mockus", " T. Girba", " ."]}, {"title": "\"Towards a Shared Platform for Virtual Collaboration Monitoring in Design Research\" in Design Thinking - Envisioning Co-Creation", "authors": []}, {"title": " \"Linking data to ontologies\" in Journal on Data Semantics X", "authors": ["A. Poggi", " D. Lembo", " D. Calvanese", " G. De Giacomo", " M. Lenzerini ", " R. Rosati"]}, {"title": " \"Ontology-based data access: Ontop of databases\"", "authors": ["M. Rodriguez-Muro", " R. Kontchakov ", " M. Zakharyaschev"]}]},
{"doi": "10.1109/ASE.2013.6693075", "title": "Ranger: Parallel analysis of alloy models by range partitioning", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Metals", "Analytical models", "Partitioning algorithms", "Computational modeling", "Hardware", "Vectors", "Scalability"], "abstract": "We present a novel approach for parallel analysis of models written in Alloy, a declarative extension of first-order logic based on relations. The Alloy language is supported by the fully automatic Alloy Analyzer, which translates models into propositional formulas and uses off-the-shelf SAT technology to solve them. Our key insight is that the underlying constraint satisfaction problem can be split into subproblems of lesser complexity by using ranges of candidate solutions, which partition the space of all candidate solutions. Conceptually, we define a total ordering among the candidate solutions, split this space of candidates into ranges, and let independent SAT searches take place within these ranges' endpoints. Our tool, Ranger, embodies our insight. Experimental evaluation shows that Ranger provides substantial speedups (in several cases, superlinear ones) for a variety of hard-to-solve Alloy models, and that adding more hardware reduces analysis costs almost linearly.", "author": [{"name": "Nicol\u00e1s Rosner", "affiliation": "Department of Computer Science, UBA, Argentina"}, {"name": "Junaid H. Siddiqui", "affiliation": "Department of Computer Science, LUMS School of Science and Engineering, Pakistan"}, {"name": "Nazareno Aguirre", "affiliation": "Department of Computer Science, UNRC, Argentina"}, {"name": "Sarfraz Khurshid", "affiliation": "Department of Electrical and Computer Engineering, The University of Texas at Austin, USA"}, {"name": "Marcelo F. Frias", "affiliation": "Department of Software Engineering, Instituto Tecnol\u00f3gico de Buenos Aires, Argentina"}], "time": "Nov. 2013", "citationCount": "8", "references": []},
{"doi": "10.1109/ASE.2019.00088", "title": "Debreach: Mitigating Compression Side Channels via Static Analysis and Transformation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Instruments", "Cryptography", "Static analysis", "Servers", "Annotations", "Uniform resource locators"], "abstract": "Compression is an emerging source of exploitable side-channel leakage that threatens data security, particularly in web applications where compression is indispensable for performance reasons. Current approaches to mitigating compression side channels have drawbacks in that they either degrade compression ratio drastically or require too much effort from developers to be widely adopted. To bridge the gap, we develop Debreach, a static analysis and program transformation based approach to mitigating compression side channels. Debreach consists of two steps. First, it uses taint analysis to soundly identify flows of sensitive data in the program and uses code instrumentation to annotate data before feeding them to the compressor. Second, it enhances the compressor to exploit the freedom to not compress of standard compression protocols, thus removing the dependency between sensitive data and the size of the compressor's output. Since Debreach automatically instruments applications and does not change the compression protocols, it has the advantage of being non-disruptive and compatible with existing systems. We have evaluated Debreach on a set of web server applications written in PHP. Our experiments show that, while ensuring leakage-freedom, Debreach can achieve significantly higher compression performance than state-of-the-art approaches.", "author": [{"name": "Brandon Paulsen", "affiliation": "University of Southern California, Los Angeles, CA, USA"}, {"name": "Chungha Sung", "affiliation": "University of Southern California, Los Angeles, CA, USA"}, {"name": "Peter A.H. Peterson", "affiliation": "University of Minnesota Duluth, Duluth, MN, USA"}, {"name": "Chao Wang", "affiliation": "University of Southern California, Los Angeles, CA, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Energy-aware lossless data compression\"", "authors": ["K. C. Barr ", " K Asanovic"]}, {"title": " \"A method for the construction of minimum-redundancy codes\"", "authors": ["D Huffman"]}, {"title": " \"A universal algorithm for sequential data compression\"", "authors": ["J Ziv ", " A Lempel"]}, {"title": " \"Compression and information leakage of plaintext\"", "authors": ["J Kelsey"]}, {"title": " \"HEIST: HTTP encrypted information can be stolen through TCP-windows\"", "authors": ["M Vanhoef ", " T. V. Goethem"]}, {"title": " \"Request and conquer: Exposing cross-origin resource size\"", "authors": ["T. Van Goethem", " M Vanhoef", " F Piessens ", " W Joosen"]}, {"title": " \"Cloning-based context-sensitive pointer alias analysis using binary decision diagrams\"", "authors": ["J Whaley ", " M. S. Lam"]}, {"title": " \"Context-sensitive program analysis as database queries\"", "authors": ["M. S. Lam", " J Whaley", " V. B. Livshits", " M. C. Martin", " D Avots", " M Carbin", " ."]}, {"title": " \"Finding security vulnerabilities in java applications with static analysis\"", "authors": ["B Livshits ", " M Lam"]}, {"title": " \"A user-guided approach to program analysis\"", "authors": ["R Mangal", " X Zhang", " A. V. Nori ", " M Naik"]}, {"title": " \"CTX: Eliminating BREACH with context hiding\"", "authors": ["D Karakostas", " A Kiayias", " E Sarafianou ", " D Zindros"]}, {"title": " \"Practical new developments on BREACH\"", "authors": ["D Karakostas ", " D Zindros"]}, {"title": " \"Protecting encrypted cookies from compression side-channel attacks\"", "authors": ["J Alawatugoda", " D Stebila ", " C Boyd"]}, {"title": " \"SafeDeflate: compression without leaking secrets\"", "authors": ["M Zieliski"]}, {"title": " \"Sidebuster: automated detection and quantification of side-channel leaks in web application development\"", "authors": ["K Zhang", " Z Li", " R Wang", " X Wang ", " S Chen"]}, {"title": " \"Verifying constant-time implementations\"", "authors": ["J. B. Almeida", " M Barbosa", " G Barthe", " F Dupressoir ", " M Emmi"]}, {"title": " \"Language-based information-flow security\"", "authors": ["A Sabelfeld ", " A. C. Myers"]}, {"title": " \"Security policies and security models\"", "authors": ["J. A. Goguen ", " J. Meseguer"]}, {"title": " \"In defense of soundiness: a manifesto\"", "authors": ["B Livshits", " M Sridharan", " Y Smaragdakis", " O Lhotak", " J. N. Amaral", " B. E. Chang", " ."]}, {"title": " \"Efficient and flexible discovery of PHP application vulnerabilities\"", "authors": ["M Backes", " K Rieck", " M Skoruppa", " B Stock ", " F Yamaguchi"]}, {"title": " \"The clock is still ticking: Timing attacks in the modern web\"", "authors": ["T. Van Goethem", " W Joosen ", " N Nikiforakis"]}, {"title": " \"Cross-site search attacks\"", "authors": ["N Gelernter ", " A Herzberg"]}, {"title": " \"Exposing private information by timing web applications\"", "authors": ["A Bortz ", " D Boneh"]}, {"title": " \"A challenging but feasible blockwise-adaptive chosenplaintext attack on SSL\"", "authors": ["G. V. Bard"]}, {"title": " \"Blockwise-adaptive attackers revisiting the (in) security of some provably secure encryption modes: CBC GEM IACBC\"", "authors": ["A Joux", " G Martinet ", " F Valette"]}, {"title": " \"String analysis for side channels with segmented oracles\"", "authors": ["L Bang", " A Aydin", " Q.-S. Phan", " C. S. Pas\u0103reanu ", " T Bultan"]}, {"title": " \"Static evaluation of noninterference using approximate model counting\"", "authors": ["Z Zhou", " Z Qian", " M. K. Reiter ", " Y Zhang"]}, {"title": " \"Synthesis of adaptive side-channel attacks\"", "authors": ["Q.-S. Phan", " L Bang", " C. S. Pasareanu", " P Malacaria ", " T Bultan"]}, {"title": " \"Decomposition instead of self-composition for proving the absence of timing channels\"", "authors": ["T Antonopoulos", " P Gazzillo", " M Hicks", " E Koskinen", " T Terauchi ", " S Wei"]}, {"title": " \"Precise detection of side-channel vulnerabilities using quantitative cartesian hoare logic\"", "authors": ["J Chen", " Y Feng ", " I Dillig"]}, {"title": " \"Eliminating timing sidechannel leaks using program repair\"", "authors": ["M Wu", " S Guo", " P Schaumont ", " C Wang"]}, {"title": " \"Symbolic path cost analysis for side-channel detection\"", "authors": ["T Brennan", " S Saha", " T Bultan ", " C. S. Pasareanu"]}, {"title": " \"Abstract interpretation under speculative execution\"", "authors": ["M Wu ", " C Wang"]}, {"title": " \"Leakage resilience against concurrent cache attacks\"", "authors": ["G Barthe", " B Kopf", " L Mauborgne ", " M Ochoa"]}, {"title": " \"CANAL: A cache timing analysis framework via LLVM transformation\"", "authors": ["C Sung", " B Paulsen ", " C Wang"]}, {"title": " \"Adversarial symbolic execution for detecting concurrency-related cache timing leaks\"", "authors": ["S Guo", " M Wu ", " C Wang"]}, {"title": " \"Sleuth: Automated verification of software power analysis countermeasures\"", "authors": ["A. G. Bayrak", " F Regazzoni", " D Novo ", " P Ienne"]}, {"title": " \"Formal verification of software countermeasures against side-channel attacks\"", "authors": ["H Eldib", " C Wang ", " P Schaumont"]}, {"title": " \"SC-Infer: Refinement-based verification of software countermeasures against side-channel attacks\"", "authors": ["J Zhang", " P Gao", " F Song ", " C Wang"]}, {"title": " \"Mitigating power side channels during compilation\"", "authors": ["J Wang", " C Sung ", " C Wang"]}, {"title": " \"Finding security vulnerabilities in Java applications with static analysis\"", "authors": ["B Livshits ", " M Lam"]}, {"title": " \"Effective static race detection for Java\"", "authors": ["M Naik", " A Aiken ", " J Whaley"]}, {"title": " \"Strictly declarative specification of sophisticated points-to analyses\"", "authors": ["M Bravenboer ", " Y Smaragdakis"]}, {"title": " \"Static DOM event dependency analysis for testing web applications\"", "authors": ["C Sung", " M Kusano", " N Sinha ", " C Wang"]}, {"title": " \"Datalog-based scalable semantic diffing of concurrent programs\"", "authors": ["C Sung", " S. K. Lahiri", " C Enea ", " C Wang"]}, {"title": " \"On fast large-scale\u00b4 program analysis in Datalog\"", "authors": ["B Scholz", " H Jordan", " P Subotic ", " T Westmann"]}, {"title": " \"Static detection of security vulnerabilities in scripting languages\"", "authors": ["Y Xie ", " A Aiken"]}, {"title": " \"Precise alias analysis for static detection of web application vulnerabilities\"", "authors": ["N Jovanovic", " C Kruegel ", " E Kirda"]}, {"title": " \"Simulation of built-in PHP features for precise static code analysis\"", "authors": ["J Dahse ", " T Holz"]}, {"title": " \"Static detection of second-order vulnerabilities in web applications\"", "authors": ["J Dahse ", " T Holz"]}, {"title": " \"Code reuse attacks in PHP: Automated pop chain generation\"", "authors": ["J Dahse", " N Krein ", " T Holz"]}, {"title": " \"Building call graphs for embedded client-side code in dynamic web applications\"", "authors": ["H. V. Nguyen", " C Kastner ", " T. N. Nguyen"]}, {"title": " \"NAVEX: Precise and scalable exploit generation for dynamic web applications\"", "authors": ["A Alhuzali", " R Gjomemo", " B Eshete ", " V Venkatakrishnan"]}]},
{"doi": "10.1109/ASEW.2015.12", "title": "Using Collective Intelligence to Support Multi-objective Decisions: Collaborative and Online Preferences", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Optimization", "Collaboration", "Statistics", "Sociology", "Benchmark testing", "Evolutionary computation"], "abstract": "This research indicates a novel approach of evolutionary multi-objective optimization algorithms meant for integrating collective intelligence methods into the optimization process. The new algorithms allow groups of decision makers to improve the successive stages of evolution via users' preferences and collaboration in a direct crowdsourcing fashion. They can, also, highlight the regions of Pareto frontier that are more relevant to the group of decision makers as to focus the search process mainly on those areas. As part of this work we test the algorithms performance when face with some synthetic problem as well as a real-world case scenario.", "author": [{"name": "Daniel Cinalli", "affiliation": "UFF - Universidade Federal Fluminense"}, {"name": "Luis Mart\u00ed", "affiliation": "UFF - Universidade Federal Fluminense"}, {"name": "Nayat Sanchez-Pi", "affiliation": "UERJ - Universidade Estadual do Rio de Janeiro"}, {"name": "Ana Cristina Bicharra Garcia", "affiliation": "unknow"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"A fast and elitist multiobjective genetic algorithm: Nsga-ii\"", "authors": ["K. Deb", " A. Pratap", " S. Agarwal ", " T. Meyarivan"]}, {"title": " \"Sms-emoa: Multiobjective selection based on dominated hypervolume\"", "authors": ["N. Beume", " B. Naujoks ", " M. Emmerich"]}, {"title": " \"An emo algorithm using the hypervolume measure as selection criterion\" in Evolutionary Multi-Criterion Optimization", "authors": ["M. Emmerich", " N. Beume ", " B. Naujoks"]}, {"title": " \"Spea2: Improving the strength pareto evolutionary algorithm\"", "authors": ["E. Zitzler", " M. Laumanns", " L. Thiele", " E. Zitzler", " E. Zitzler", " L. Thiele", " ."]}, {"title": " \"Comparison of multiobjective evolutionary algorithms: Empirical results\"", "authors": ["E. Zitzler", " K. Deb ", " L. Thiele"]}, {"title": " \"The balance between proximity and diversity in multiobjective evolutionary algorithms\"", "authors": ["P. A. Bosman ", " D. Thierens"]}]},
{"doi": "10.1109/ASE.2013.6693076", "title": "Automated verification of pattern-based interaction invariants in Ajax applications", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Usability", "Servers", "Context", "Testing", "Debugging", "Web pages", "Educational institutions"], "abstract": "When developing asynchronous JavaScript and XML (Ajax) applications, developers implement Ajax design patterns for increasing the usability of the applications. However, unpredictable contexts of running applications might conceal faults that will break the design patterns, which decreases usability. We propose a support tool called JSVerifier that auto-matically verifies interaction invariants; the applications handle their interactions in invariant occurrence and order. We also present a selective set of interaction invariants derived from Ajax design patterns, as input. If the application behavior breaks the design patterns, JSVerifier automatically outputs faulty execution paths for debugging. The results of our case studies show that JSVerifier can verify the interaction invariants in a feasible amount of time, and we conclude that it can help developers increase the usability of Ajax applications.", "author": [{"name": "Yuta Maezawa", "affiliation": "The University of Tokyo"}, {"name": "Hironori Washizaki", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Yoshinori Tanabe", "affiliation": "National Institute of Informatics, Tokyo, Japan"}, {"name": "Shinichi Honiden", "affiliation": "National Institute of Informatics, Tokyo, Japan"}], "time": "Nov. 2013", "citationCount": "1", "references": [{"title": " \"Xulrunner: A new approach for developing rich internet applications", "authors": ["B. Stearn"]}, {"title": " \"Building rich web applications with ajax", "authors": ["L. D. Paulson"]}, {"title": " \"Assessing web site usability in retail electronic commerce", "authors": ["C. E. Downing ", " C. Liu"]}, {"title": " \"State-based testing of ajax web applications", "authors": ["A. Marchetto", " P. Tonella", " ", " F. Ricca"]}, {"title": " \"Invariant-based automatic testing of ajax user interfaces", "authors": ["A. Mesbah ", " A. van Deursen"]}, {"title": " \"An iterative approach for the reverse engineering of rich internet application user interfaces", "authors": ["D. Amalfitano", " A. R. Fasolino", " ", " P. Tramontana"]}, {"title": " \"A framework for automated testing of javascript web applications", "authors": ["S. Artzi", " J. Dolby", " S. H. Jensen", " A. Moller", " ", " F. Tip"]}, {"title": " \"Using static analysis for ajax intrusion detection", "authors": ["A. Guha", " S. Krishnamurthi", " ", " T. Jim"]}, {"title": " \"Extracting interactionbased stateful behavior in rich internet applications", "authors": ["Y. Maezawa", " H. Washizaki", " ", " S. Honiden"]}, {"title": " \"White paper: Rich internet applicationb", "authors": ["J. Duhl"]}, {"title": " \"Rich internet application are the next evolution of the web", "authors": ["M. Driver", " R. Valdes", " ", " G. Phifer"]}, {"title": " \"Rich internet applications the next stage of application development", "authors": ["J. Farrell ", " G. S. Nezlek"]}, {"title": " \"Automatic verification of design pattern in java", "authors": ["A. Blewitt", " A. Bundy", " ", " I. Stark"]}, {"title": " \"New frontiers of reverse engineering", "authors": ["G. Canfora ", " M. D. Penta"]}, {"title": " \"Enhancing program comprehension with recovered state models", "authors": ["S. S. Som\u00e9 ", " T. C. Lethbridge"]}, {"title": " \"Analysis and testing of web applications", "authors": ["F. Ricca ", " P. Tonella"]}, {"title": " \"Reajax: a reverse engineering tool for ajax web applications", "authors": ["A. Marchetto", " P. Tonella", " ", " F. Ricca"]}, {"title": " \"Automated cross-browser compatibility testing", "authors": ["A. Mesbah ", " M. R. Prasad"]}, {"title": " \"Automated analysis of css rules to support style maintenance", "authors": ["A. Mesbah ", " S. Mirshokraie"]}, {"title": " \"Code patterns for automatically validating requirements-to-code traces", "authors": ["A. Ghabi ", " A. Egyed"]}]},
{"doi": "10.1109/ASE.2019.00089", "title": "Fine-Grain Memory Object Representation in Symbolic Execution", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Engines", "Indexes", "Memory management", "Resource management", "Explosions", "MIMICs", "Search problems"], "abstract": "Dynamic Symbolic Execution (DSE) has seen rising popularity as it allows to check applications for behaviours such as error patterns automatically. One of its biggest challenges is the state space explosion problem: DSE tries to evaluate all possible execution paths of an application. For every path, it needs to represent the allocated memory and its accesses. Even though different approaches have been proposed to mitigate the state space explosion problem, DSE still needs to represent a multitude of states in parallel to analyse them. If too many states are present, they cannot fit into memory, and DSE needs to terminate them prematurely or store them on disc intermediately. With a more efficient representation of allocated memory, DSE can handle more states simultaneously, improving its performance. In this work, we introduce an enhanced, fine-grain and efficient representation of memory that mimics the allocations of tested applications. We tested Coreutils using three different search strategies with our implementation on top of the symbolic execution engine KLEE. We achieve a significant reduction of the memory consumption of states by up to 99.06% (mean DFS: 2%, BFS: 51%, Cov.: 49%), allowing to represent more states in memory more efficiently. The total execution time is reduced by up to 97.81% (mean DFS: 9%, BFS: 7%, Cov.:4%)-a speedup of 49x in comparison to baseline KLEE.", "author": [{"name": "Martin Nowack", "affiliation": "Department of Computing, Imperial College, London"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"EXE: Automatically Generating Inputs of Death\"", "authors": ["C Cadar", " V Ganesh", " P. M. Pawlowski", " D. L. Dill ", " D. R. Engler"]}, {"title": " \"KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs\"", "authors": ["C Cadar", " D Dunbar ", " D Engler"]}, {"title": " \"Symbolic PathFinder: symbolic execution of Java bytecode\"", "authors": ["C. S. Pas\u0103rean\u016d ", " N Rungta"]}, {"title": " \"Unleashing Mayhem on Binary Code\"", "authors": ["S. K. Cha", " T Avgerinos", " A Rebert ", " D Brumley"]}, {"title": " \"Automatic exploit generation\"", "authors": ["T Avgerinos", " S. K. Cha", " A. Rebert", " E. J. Schwartz", " M Woo ", " D Brumley"]}, {"title": " \"Efficient State Merging in Symbolic Execution\"", "authors": ["V Kuznetsov", " J Kinder", " S Bucur ", " G C"]}, {"title": " \"Directed Symbolic Execution\"", "authors": ["K.-K. Ma", " K. Yit Phang", " J. S. Foster ", " M Hicks"]}, {"title": " \"Lambda Calculus Notation with Nameless Dummies a Tool for Automatic Formula Manipulation with Application to the Church-Rosser Theorem\"", "authors": ["N. G. de Bruijn"]}, {"title": " \"A Decision Procedure for Bit-Vectors and Arrays\"", "authors": ["V Ganesh ", " D. L. Dill"]}, {"title": " \"JPF-SE: A Symbolic Execution Extension to Java PathFinder\"", "authors": ["S An", "", " C. S. Pasareanu ", " W Visser"]}, {"title": " \"Multise: multi-path symbolic execution using value summaries\"", "authors": ["K Sen", " G Necula", " L Gong ", " W Choi"]}, {"title": " \"Compositional dynamic test generation\"", "authors": ["P Godefroid"]}, {"title": " \"Demand-driven compositional symbolic execution\"", "authors": ["S An", "", " P Godefroid ", " N Tillmann"]}, {"title": " \"Compositional may-must program analysis: Unleashing the power of alternation\"", "authors": ["P Godefroid", " A. V. Nori", " S. K. Rajamani ", " S. D. Tetali"]}, {"title": " \"Compositional Symbolic Execution with Memoized Replay\"", "authors": ["R Qiu", " G Yang", " C. S. Pasareanu ", " S Khurshid"]}, {"title": " \"RWset: Attacking Path Explosion in Constraint-Based Test Generation\"", "authors": ["P Boonstoppel", " C Cadar ", " D. R. Engler"]}, {"title": " \"Fitness-guided path exploration in dynamic symbolic execution\"", "authors": ["T Xie", " N Tillmann", " J. de Halleux ", " W Schulte"]}]},
{"doi": "10.1109/ASEW.2015.21", "title": "When It Breaks, It Breaks: How Ecosystem Developers Reason about the Stability of Dependencies", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Ecosystems", "Software", "History", "Interviews", "Stability analysis", "Computer science", "Planning"], "abstract": "Dependencies among software projects and libraries are an indicator of the often implicit collaboration among many developers in software ecosystems. Negotiating change can be tricky: changes to one module may cause ripple effects to many other modules that depend on it, yet insisting on only backward-compatible changes may incur significant opportunity cost and stifle change. We argue that awareness mechanisms based on various notions of stability can enable developers to make decisions that are independent yet wise and provide stewardship rather than disruption to the ecosystem. In ongoing interviews with developers in two software ecosystems (CRAN and Node.js), we are finding that developers in fact struggle with change, that they often use adhoc mechanisms to negotiate change, and that existing awareness mechanisms like Github notification feeds are rarely used due to information overload. We study the state of the art and current information needs and outline a vision toward a change-based awareness system.", "author": [{"name": "Christopher Bogart", "affiliation": "School of Computer Science, Carnegie Mellon University"}, {"name": "Christian K\u00e4stner", "affiliation": "School of Computer Science, Carnegie Mellon University"}, {"name": "James Herbsleb", "affiliation": "School of Computer Science, Carnegie Mellon University"}], "time": "Nov. 2015", "citationCount": "13", "references": [{"title": " \"Expectations Outcomes and Challenges of Modern Code Review\"", "authors": ["A. Bacchelli ", " C. Bird"]}, {"title": " \"Proactive Detection of Collaboration Conflicts\"", "authors": ["Y. Brun", " R. Holmes", " M. D. Ernst ", " D. Notkin"]}, {"title": " \"Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity\"", "authors": ["M. Cataldo", " J. D. Herbsleb ", " K. M. Carley"]}, {"title": " \"Seeking the Ground Truth: A Retroactive Study on the Evolution and Migration of Software Libraries\"", "authors": ["B. E. Cossette ", " R. J. Walker"]}, {"title": " \"Social Coding in GitHub: Transparency and Collaboration in an Open Software Repository\"", "authors": ["L. Dabbish", " C. Stuart", " J. Tsay ", " J. Herbsleb"]}, {"title": " \"An Empirical Study of Software Developers' Management of Dependencies and Changes\"", "authors": ["C. R. B. de Souza ", " D. F. Redmiles"]}, {"title": " \"Does Code Decay? Assessing the Evidence from Change Management Data\"", "authors": ["S. G. Eick", " T. L. Graves", " A. F. Karr", " J. Marron ", " A. Mockus"]}, {"title": " \"Group Awareness in Distributed Software Development\"", "authors": ["C. Gutwin", " R. Penner ", " K. Schneider"]}, {"title": " \"Customized Awareness: Recommending Relevant External Change Events\"", "authors": ["R. Holmes ", " R. J. Walker"]}, {"title": " \"The metropolis model and its implications for the engineering of software ecosystems\"", "authors": ["R. Kazman ", " H.-M. Chen"]}, {"title": " \"Programs Life Cycles and Laws of Software Evolution\"", "authors": ["M. Lehman"]}, {"title": " \"API Change and Fault Proneness: A Threat to the Success of Android Apps\"", "authors": ["M. Linares-Vasquez", " G. Bavota", " C. Bernal-Cardenas", " M. Di Penta", " R. Oliveto ", " D. Poshyvanyk"]}, {"title": " \"NeedFeed: Taming Change Notifications by Modeling Code Relevance\"", "authors": ["R. Padhye", " S. Mani ", " V. S. Sinha"]}, {"title": " \"On the Criteria to be used in Decomposing Systems into Modules\"", "authors": ["D. L. Parnas"]}, {"title": " \"Measuring Software Library Stability Through Historical Version Analysis\"", "authors": ["S. Raemaekers", " A. Van der Hoek ", " J. Visser"]}, {"title": " \"Palantir: Early Detection of Development Conflicts Arising from Parallel Code Changes\"", "authors": ["A. Sarma", " D. F. Redmiles ", " A. Van der Hoek"]}, {"title": " \"Some Stability Measures for Software Maintenance\"", "authors": ["S. S. Yau ", " J. S. Collofello"]}]},
{"doi": "10.1109/ASE.2013.6693077", "title": "Software model checking for distributed systems with selector-based, non-blocking communication", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Servers", "Java", "Software", "Message systems", "Libraries", "Model checking", "Computer architecture"], "abstract": "Many modern software systems are implemented as client/server architectures, where a server handles multiple clients concurrently. Testing does not cover the outcomes of all possible thread and communication schedules reliably. Software model checking, on the other hand, covers all possible outcomes but is often limited to subsets of commonly used protocols and libraries. Earlier work in cache-based software model checking handles implementations using socket-based TCP/IP networking, with one thread per client connection using blocking input/output. Recently, servers using non-blocking, selector-based input/output have become prevalent. This paper describes our work extending the Java PathFinder extension net-iocache to such software, and the application of our tool to modern server software.", "author": [{"name": "Cyrille Artho", "affiliation": "AIST/RISEC, Amagasaki, Japan"}, {"name": "Masami Hagiya", "affiliation": "Tokyo Daigaku, Bunkyo-ku, Tokyo, JP"}, {"name": "Richard Potter", "affiliation": "Tokyo Daigaku, Bunkyo-ku, Tokyo, JP"}, {"name": "Yoshinori Tanabe", "affiliation": "National Institute of Informatics, Tokyo, Japan"}, {"name": "Franz Weitl", "affiliation": "Chiba University, Chiba, Japan"}, {"name": "Mitsuharu Yamamoto", "affiliation": "Chiba University, Chiba, Japan"}], "time": "Nov. 2013", "citationCount": "12", "references": [{"title": " \"Model checking programs", "authors": ["W. Visser", " K. Havelund", " G. Brat", " S. Park", " ", " F. Lerda"]}, {"title": " \"Efficient model checking of networked applications", "authors": ["C. Artho", " W. Leungwattanakit", " M. Hagiya", " ", " Y. Tanabe"]}, {"title": " \"Cache-based model checking of networked applications: From linear to branching time", "authors": ["C. Artho", " W. Leungwattanakit", " M. Hagiya", " Y. Tanabe", " ", " M. Yamamoto"]}, {"title": " \"Model checking distributed systems by combining caching and process checkpointing", "authors": ["W. Leungwattanakit", " C. Artho", " M. Hagiya", " Y. Tanabe", " ", " M. Yamamoto"]}, {"title": " \"Nginx: the high-performance web server and reverse proxy", "authors": ["W. Reese"]}, {"title": " \"The C10K problem", "authors": ["D. Kegel"]}, {"title": " \"Modbat: A model-based API tester for event-driven systems", "authors": ["C. Artho", " A. Biere", " M. Hagiya", " E. Platon", " M. Seidl", " Y. Tanabe", " ", " M. Yamamoto"]}, {"title": " \"rupy - A tiny Java nio HTTP application server", "authors": ["M. Larue", " E. Martino", " M. Funk", " A. Chen", " A. Lee", " C. Lung", " D. Hoyt", " ", " H. Baghdasaryan"]}, {"title": " \"Overview (Java platform SE 7)", "authors": ["Oracle"]}, {"title": " \"Software model checking: The VeriSoft approach", "authors": ["P. Godefroid"]}, {"title": " \"Finding and reproducing Heisenbugs in concurrent programs", "authors": ["M. Musuvathi", " S. Qadeer", " T. Ball", " G. Basler", " P. A. Nainar", " ", " I. Neamtiu"]}, {"title": " \"Dynamic model checking with property driven pruning to detect race conditions", "authors": ["C. Wang", " Y. Yang", " A. Gupta", " ", " G. Gopalakrishnan"]}, {"title": " \"Model checking of concurrent algorithms: From Java to C", "authors": ["C. Artho", " W. Leungwattanakit", " M. Hagiya", " Y. Tanabe", " ", " M. Yamamoto"]}, {"title": " \"Model checking of multi-process applications using SBUML and GDB", "authors": ["Y. Nakagawa", " R. Potter", " M. Yamamoto", " M. Hagiya", " ", " K. Kato"]}, {"title": " \"Transformations for model checking distributed Java programs", "authors": ["S. D. Stoller ", " Y. A. Liu"]}, {"title": " \"Accurate centralization for applying model checking on networked applications", "authors": ["C. Artho ", " P. Garoche"]}, {"title": " \"Analyzing distributed Java applications by automatic centralization", "authors": ["L. Ma", " C. Artho", " ", " H. Sato"]}, {"title": " \"NetStub: A framework for verification of distributed Java applications", "authors": ["E. D. Barlas ", " T. Bultan"]}, {"title": " \"Random test case generation and manual unit testing: Substitute or complement in retrofitting tests for legacy code?", "authors": ["R. Ramler", " D. Winkler", " ", " M. Schmidt"]}]},
{"doi": "10.1109/ASE.2019.00090", "title": "RENN: Efficient Reverse Execution with Neural-Network-Assisted Alias Analysis", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer crashes", "Core dumps", "Software", "Neural networks", "Runtime", "Testing", "Computer architecture"], "abstract": "Reverse execution and coredump analysis have long been used to diagnose the root cause of software crashes. Each of these techniques, however, face inherent challenges, such as insufficient capability when handling memory aliases. Recent works have used hypothesis testing to address this drawback, albeit with high computational complexity, making them impractical for real world applications. To address this issue, we propose a new deep neural architecture, which could significantly improve memory alias resolution. At the high level, our approach employs a recurrent neural network (RNN) to learn the binary code pattern pertaining to memory accesses. It then infers the memory region accessed by memory references. Since memory references to different regions naturally indicate a non-alias relationship, our neural architecture can greatly reduce the burden of doing hypothesis testing to track down non-alias relation in binary code. Different from previous researches that have utilized deep learning for other binary analysis tasks, the neural network proposed in this work is fundamentally novel. Instead of simply using off-the-shelf neural networks, we designed a new recurrent neural architecture that could capture the data dependency between machine code segments. To demonstrate the utility of our deep neural architecture, we implement it as RENN, a neural network-assisted reverse execution system. We utilize this tool to analyze software crashes corresponding to 40 memory corruption vulnerabilities from the real world. Our experiments show that RENN can significantly improve the efficiency of locating the root cause for the crashes. Compared to a state-of-the-art technique, RENN has 36.25% faster execution time on average, detects an average of 21.35% more non-alias pairs, and successfully identified the root cause of 12.5% more cases.", "author": [{"name": "Dongliang Mu", "affiliation": "National Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Wenbo Guo", "affiliation": "College of Information Sciences and Technology, The Pennsylvania State University, USA"}, {"name": "Alejandro Cuevas", "affiliation": "College of Information Sciences and Technology, The Pennsylvania State University, USA"}, {"name": "Yueqi Chen", "affiliation": "College of Information Sciences and Technology, The Pennsylvania State University, USA"}, {"name": "Jinxuan Gai", "affiliation": "College of Information Sciences and Technology, The Pennsylvania State University, USA"}, {"name": "Xinyu Xing", "affiliation": "College of Information Sciences and Technology, The Pennsylvania State University, USA"}, {"name": "Bing Mao", "affiliation": "National Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Chengyu Song", "affiliation": "University of California, Riverside, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Retracer: Triaging crashes by reverse execution from partial memory dumps\u201d\"", "authors": ["W. Cui", " M. Peinado", " S. K. Cha", " Y. Fratantonio ", " V. P. Kemerlis"]}, {"title": " \"Postmortem program analysis with hardware-enhanced post-crash artifacts\"", "authors": ["J. Xu", " D. Mu", " X. Xing", " P. Liu", " P. Chen ", " B. Mao"]}, {"title": " \"Credal: Towards locating a memory corruption vulnerability with your core dump\"", "authors": ["J. Xu", " D. Mu", " P. Chen", " X. Xing", " P. Wang ", " P. Liu"]}, {"title": " \"Analyzing multicore dumps to facilitate concurrency bug reproduction\"", "authors": ["D. Weeratunge", " X. Zhang ", " S. Jagannathan"]}, {"title": " \"Clap: Recording local executions to reproduce concurrency failures\"", "authors": ["J. Huang", " C. Zhang ", " J. Dolby"]}, {"title": " \"Bugredux: Reproducing field failures for in-house debugging\"", "authors": ["W. Jin ", " A. Orso"]}, {"title": " \"Recrash: Making software failures reproducible by preserving object states\"", "authors": ["S. Artzi", " S. Kim ", " M. D. Ernst"]}, {"title": " \"Doubleplay: parallelizing sequential logging and replay\"", "authors": ["K. Veeraraghavan", " D. Lee", " B. Wester", " J. Ouyang", " P. M. Chen", " J. Flinn", " ."]}, {"title": " \"Coreracer: a practical memory race recorder for multicore x86 tso processors\"", "authors": ["G. Pokam", " C. Pereira", " S. Hu", " A.-R. Adl-Tabatabai", " J. Gottschlich", " J. Ha", " ."]}, {"title": " \"REPT: Reverse debugging of failures in deployed software\"", "authors": ["W. Cui", " X. Ge", " B. Kasikci", " B. Niu", " U. Sharma", " R. Wang", " ."]}, {"title": " \"Analyzing memory accesses in x86 executables\"", "authors": ["G. Balakrishnan ", " T. W. Reps"]}, {"title": " \"Wysinwyx: What you see is not what you execute\"", "authors": ["G. Balakrishnan ", " T. Reps"]}, {"title": " \"Deep learning\"", "authors": ["Y. LeCun", " Y. Bengio ", " G. Hinton"]}, {"title": " \"Learning precise timing with lstm recurrent networks\"", "authors": ["F. A. Gers", " N. N. Schraudolph ", " J. Schmidhuber"]}, {"title": " \"Learning phrase representations using rnn encoderdecoder for statistical machine translation\"", "authors": ["K. Cho", " B. Van Merrie\u00ebnboer", " C. Gulcehre", " D. Bahdanau", " F. Bougares", " H. Schwenk", " ."]}, {"title": " \"Rectifier nonlinearities improve neural network acoustic models\"", "authors": ["A. L. Maas", " A. Y. Hannun ", " A. Y. Ng"]}, {"title": " \"Minimum cross entropy thresholding\"", "authors": ["C. H. Li ", " C. Lee"]}, {"title": " \"Large-scale machine learning with stochastic gradient descent\"", "authors": ["L. Bottou"]}, {"title": " \"Adam: A method for stochastic optimization\"", "authors": ["D. P. Kingma ", " J. Ba"]}, {"title": " \"The vanishing gradient problem during learning recurrent neural nets and problem solutions\"", "authors": ["S. Hochreiter"]}, {"title": " \"Recognizing functions in binaries with neural networks\"", "authors": ["E. C. R. Shin", " D. Song ", " R. Moazzezi"]}, {"title": " \"Long short-term memory\"", "authors": ["S. Hochreiter ", " J. Schmidhuber"]}, {"title": " \"Gated feedback recurrent neural networks\"", "authors": ["J. Chung", " C. Gulcehre", " K. Cho ", " Y. Bengio"]}, {"title": " \"Neural nets can learn function type signatures from binaries\"", "authors": ["Z. L. Chua", " S. Shen", " P. Saxena ", " Z. Liang"]}, {"title": " \"Bidirectional recurrent neural networks\"", "authors": ["M. Schuster ", " K. K. Paliwal"]}, {"title": " \"Deep api learning\"", "authors": ["X. Gu", " H. Zhang", " D. Zhang ", " S. Kim"]}, {"title": " \"An introduction to hidden markov models\"", "authors": ["L. R. Rabiner ", " B.-H. Juang"]}, {"title": " \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\"", "authors": ["J. D. Lafferty", " A. McCallum ", " F. C. N. Pereira"]}, {"title": " \"Speech recognition with deep recurrent neural networks\"", "authors": ["A. Graves", " A.-r. Mohamed ", " G. Hinton"]}, {"title": " \"Pin: building customized program analysis tools with dynamic instrumentation\"", "authors": ["C.-K. Luk", " R. Cohn", " R. Muth", " H. Patil", " A. Klauser", " G. Lowney", " ."]}, {"title": " \"Theano: A python framework for fast computation of mathematical expressions\"", "authors": ["R. Al-Rfou", " G. Alain", " A. Almahairi", " C. Angermueller", " D. Bahdanau", " N. Ballas", " F. Bastien", " J. Bayer", " A. Belikov", " A. Belopolsky ."]}, {"title": " \"Understanding the reproducibility of crowd-reported security vulnerabilities\"", "authors": ["D. Mu", " A. Cuevas", " L. Yang", " H. Hu", " X. Xing", " B. Mao", " ."]}, {"title": " \"Recognizing functions in binaries with neural networks\"", "authors": ["E. C. R. Shin", " D. Song ", " R. Moazzezi"]}, {"title": " \"Assembly instruction level reverse execution for debugging\"", "authors": ["T. Akgul ", " V. J. Mooney"]}, {"title": " \"A fast assembly level reverse execution method via dynamic slicing\"", "authors": ["T. Akgul", " V. J. Mooney ", " S. P"]}, {"title": " \"A new method for program inversion\"", "authors": ["C. Hou", " G. Vulov", " D. Quinlan", " D. Jefferson", " R. Fujimoto ", " R. Vuduc"]}, {"title": " \"Automated debugging for arbitrarily long executions\"", "authors": ["C. Zamfir", " B. Kasikci", " J. Kinder", " E. Bugnion ", " G. C"]}, {"title": " \"Learning to analyze binary computer code\"", "authors": ["N. E. Rosenblum", " X. Zhu", " B. P. Miller ", " K. Hunt"]}, {"title": " \"Byteweight: Learning to recognize functions in binary code\"", "authors": ["T. Bao", " J. Burket", " M. Woo", " R. Turner ", " D. Brumley"]}, {"title": " \"Neural network-based graph embedding for cross-platform binary code similarity detection\"", "authors": ["X. Xu", " C. Liu", " Q. Feng", " H. Yin", " L. Song ", " D. Song"]}, {"title": " \"Using recurrent neural networks for decompilation\"", "authors": ["D. S. Katz", " J. Ruchti ", " E. Schulte"]}]},
{"doi": "10.1109/ASEW.2015.8", "title": "CrossPare: A Tool for Benchmarking Cross-Project Defect Predictions", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Benchmark testing", "Training data", "Data models", "Predictive models", "Program processors", "Java", "Training"], "abstract": "During the last decade, many papers on defect prediction were published. One still for the most part unresolved issue are cross-project defect predictions. Here, the aim is to predict the defects of a project, with data from other projects. Many approaches were suggested and evaluated in recent years. However, due to the usage of different implementations and data sets, the comparison between the work is a hard task. Within this paper, we present the tool CrossPare. CrossPare is designed to facilitate benchmarks for cross-project defect predictions. The tool already implements many techniques proposed within the current state of the art of cross-project defect predictions. Moreover, the tool is able to load different data sets that are commonly used for the evaluation of techniques and supports all major performance metrics. Through the usage of CrossPare other reseachers can improve the comparability of their results and possibly also reduce their implementation efforts for new cross-project defect prediction techniques by reusing features already offered by CrossPare.", "author": [{"name": "Steffen Herbold", "affiliation": "Institute of Computer Science, Georg-August-Universit\u00e4t, G\u00f6ttingen, Germany"}], "time": "Nov. 2015", "citationCount": "10", "references": [{"title": " \"Cross-project defect prediction: a large scale experiment on data vs. domain vs. process\"", "authors": ["T. Zimmermann", " N. Nagappan", " H. Gall", " E. Giger ", " B. Murphy"]}, {"title": " \"On the relative value of cross-company and within-company data for defect prediction\"", "authors": ["B. Turhan", " T. Menzies", " A. Bener ", " J. Di Stefano"]}, {"title": " \"Adapting a fault prediction model to allow inter language reuse\"", "authors": ["S. Watanabe", " H. Kaiya ", " K. Kaijiri"]}, {"title": " \"Transfer defect learning\"", "authors": ["J. Nam", " S. J. Pan ", " S. Kim"]}, {"title": " \"Transfer learning for cross-company software defect prediction\"", "authors": ["Y. Ma", " G. Luo", " X. Zeng ", " A. Chen"]}, {"title": " \"Towards logistic regression models for predicting fault-prone code across software projects\"", "authors": ["A. E. Camargo Cruz ", " K. Ochimizu"]}, {"title": " \"Training data selection for cross-project defect prediction\"", "authors": ["S. Herbold"]}, {"title": " \"Learning from open-source projects: An empirical study on defect prediction\"", "authors": ["Z. He", " F. Peters", " T. Menzies ", " Y. Yang"]}, {"title": " \"The WEKA data mining software: an update\"", "authors": ["M. Hall", " E. Frank", " G. Holmes", " B. Ptahringer", " P. Reutemann ", " I. H. Witten"]}, {"title": " \"Towards identifying software project clusters with regard to defect prediction\"", "authors": ["M. Jureczko ", " L. Madeyski"]}, {"title": " \"Towards building a universal defect prediction model\"", "authors": ["F. Zhang", " A. Mockus", " I. Keivanloo ", " Y. Zou"]}, {"title": " \"Local versus Global Lessons for Defect Prediction and Effort Estimation\"", "authors": ["T. Menzies", " A. Butcher", " D. Cok", " A. Marcus", " L. Layman", " F. Shull", " ."]}, {"title": " \"tera-promise\"", "authors": ["T. Menzies", " C. Pape ", " C. Steele"]}, {"title": " \"Data Quality: Some Comments on the NASA Software Defect Datasets\"", "authors": ["M. Shepperd", " Q. Song", " Z. Sun ", " C. Mair"]}, {"title": " \"A novel industry grade dataset for fault prediction based on model-driven developed automotive embedded software\"", "authors": ["H. Altinger", " S. Siegl", " Y. Dajsuren ", " F. Wotawa"]}, {"title": " \"An Extensive Comparison of Bug Prediction Approaches\"", "authors": ["M. D\u2019Ambros", " M. Lanza ", " R. Robbes"]}, {"title": " \"Amassing and indexing a large sample of version control systems: Towards the census of public source code history\"", "authors": ["A. Mockus"]}, {"title": " \"Towards a model-based software mining infrastructure\"", "authors": ["P. Makedonski", " F. Sudau ", " J. Grabowski"]}, {"title": " \"Recalling the \u201cimprecision\u201d of cross-project defect prediction\"", "authors": ["F. Rahman", " D. Posnett ", " P. Devanbu"]}, {"title": " \"Automated Deployment and Parallel Execution of Legacy Applications in Cloud Environments\"", "authors": ["M. G\u00f6ttsche", " F. Glaser", " S. Herbold ", " J. Grabowski"]}]},
{"doi": "10.1109/ASE.2013.6693078", "title": "A study of repetitiveness of code changes in software evolution", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software", "Vegetation", "Databases", "History", "Maintenance engineering", "Libraries", "Programming"], "abstract": "In this paper, we present a large-scale study of repetitiveness of code changes in software evolution. We collected a large data set of 2,841 Java projects, with 1.7 billion source lines of code (SLOC) at the latest revisions, 1.8 million code change revisions (0.4 million fixes), 6.2 million changed files, and 2.5 billion changed SLOCs. A change is considered repeated within or cross-project if it matches another change having occurred in the history of the project or another project, respectively. We report the following important findings. First, repetitiveness of changes could be as high as 70-100% at small sizes and decreases exponentially as size increases. Second, repetitiveness is higher and more stable in the cross-project setting than in the within-project one. Third, fixing changes repeat similarly to general changes. Importantly, learning code changes and recommending them in software evolution is beneficial with accuracy for top-1 recommendation of over 30% and top-3 of nearly 35%. Repeated fixing changes could also be useful for automatic program repair.", "author": [{"name": "Hoan Anh Nguyen", "affiliation": "Iowa State University, USA"}, {"name": "Anh Tuan Nguyen", "affiliation": "Iowa State University, USA"}, {"name": "Tung Thanh Nguyen", "affiliation": "Iowa State University, USA"}, {"name": "Tien N. Nguyen", "affiliation": "Iowa State University, USA"}, {"name": "Hridesh Rajan", "affiliation": "Iowa State University, USA"}], "time": "Nov. 2013", "citationCount": "37", "references": []},
{"doi": "10.1109/ASE.2019.00091", "title": "Batch Alias Analysis", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Resource management", "Paints", "Scalability", "Time factors", "Performance gain", "Sensitivity"], "abstract": "Many program-analysis based tools require precise points-to/alias information only for some program variables. To meet this requirement efficiently, there have been many works on demand-driven analyses that perform only the work necessary to compute the points-to or alias information on the requested variables (queries). However, these demand-driven analyses can be very expensive when applied on large systems where the number of queries can be significant. Such a blow-up in analysis time is unacceptable in cases where scalability with real-time constraints is crucial; for example, when program analysis tools are plugged into an IDE (Integrated Development Environment). In this paper, we propose schemes to improve the scalability of demand-driven analyses without compromising on precision. Our work is based on novel ideas for eliminating irrelevant and redundant data-flow paths for the given queries. We introduce the idea of batch analysis, which can answer multiple given queries in batch mode. Batch analysis suits the environments with strict time constraints, where the queries come in batch. We present a batch alias analysis framework that can be used to speed up given demand-driven alias analysis. To show the effectiveness of this framework, we use two demand-driven alias analyses (1) the existing best performing demand-driven alias analysis tool for race-detection clients and (2) an optimized version thereof that avoids irrelevant computation. Our evaluations on a simulated data-race client, and on a recent program-understanding tool, show that batch analysis leads to significant performance gains, along with minor gains in precision.", "author": [{"name": "Jyothi Vedurada", "affiliation": "Dept. of CSE, IIT Madras"}, {"name": "V. Krishna Nandivada", "affiliation": "Indian Institute of Technology Madras"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Scaling Java Points-to Analysis Using Spark\"", "authors": ["O. Lhot\u00e1k ", " L. Hendren"]}, {"title": " \"Demand-driven Context-sensitive Alias Analysis for Java\"", "authors": ["D. Yan", " G. Xu ", " A. Rountev"]}, {"title": " \"Accurate interprocedural null-dereference analysis for java\"", "authors": ["M. G. N", "a "]}, {"title": " \"Effective Static Race Detection for Java\"", "authors": ["M. Naik", " A. Aiken ", " J. Whaley"]}, {"title": " \"Identifying Refactoring Opportunities for Replacing Type Code with Subclass and State\"", "authors": ["J. Vedurada ", " V. K. N"]}, {"title": " \"Pointer Analysis: Haven\u2019t We Solved This Problem Yet?\u201d\"", "authors": ["M. Hind"]}, {"title": " \"Parameterized Object Sensitivity for Points-to and Side-effect Analyses for Java\"", "authors": ["A. Milanova", " A. Rountev ", " B. G. Ryder"]}, {"title": " \"Client-driven Pointer Analysis\"", "authors": ["S. Z. Guyer ", " C. Lin"]}, {"title": " \"Demanddriven Points-to Analysis for Java\"", "authors": ["M. Sridharan", " D. Gopan", " L. Shan ", " R. Bod\u0131k"]}, {"title": " \"Refinement-based Context-sensitive Points-to Analysis for Java\"", "authors": ["M. Sridharan ", " R. Bod\u0131k"]}, {"title": " \"On-demand dynamic summarybased points-to analysis\"", "authors": ["L. Shang", " X. Xie ", " J. Xue"]}, {"title": " \"Boomerang: Demand-Driven Flow- and Context-Sensitive Pointer Analysis for Java\"", "authors": ["J. Sp\u00e4th", " L. N. Q. Do", " K. Ali ", " E. Bodden"]}, {"title": " \"Parallel Pointer Analysis with CFLReachability\"", "authors": ["Y. Su", " D. Ye ", " J. Xue"]}, {"title": " \"Demand-driven Alias Analysis for C\"", "authors": ["X. Zheng ", " R. Rugina"]}, {"title": " \"Linear Cost is Sometimes Quadratic\"", "authors": ["B. K. Rosen"]}, {"title": " \"Which Pointer Analysis Should I Use?\u201d\"", "authors": ["M. Hind ", " A. Pioli"]}, {"title": " \"Scaling CFL-Reachability- Based Points-To Analysis Using Context-Sensitive Must-Not-Alias Analysis\"", "authors": ["G. Xu", " A. Rountev ", " M. Sridharan"]}, {"title": " \"Context- Flow- and Field-sensitive Data-flow Analysis Using Synchronized Pushdown Systems\"", "authors": ["J. Sp\u00e4th", " K. Ali ", " E. Bodden"]}, {"title": " \"An Incremental Pointsto Analysis with CFL-Reachability\"", "authors": ["Y. Lu", " L. Shang", " X. Xie ", " J. Xue"]}, {"title": " \"The DaCapo Benchmarks: Java Benchmarking Development and Analysis\"", "authors": ["S. M. Blackburn", " R. Garner", " C. Hoffman", " A. M. Khan", " K. S. McKinley", " R. Bentzur", " ."]}, {"title": " \"Taming Reflection: Aiding Static Analysis in the Presence of Reflection and Custom Class Loaders\"", "authors": ["E. Bodden", " A. Sewe", " J. Sinschek", " M. Mezini ", " H. Oueslati"]}, {"title": " \"Refactoring Opportunities for Replacing Type Code with State and Subclass\"", "authors": ["J. Vedurada ", " V. K. N"]}, {"title": " \"Dimensions of Precision in Reference Analysis of Object-Oriented Programming Languages\"", "authors": ["B. G. Ryder"]}, {"title": " \"Compare less defer more: scaling value-contexts based whole-program heap analyses\"", "authors": ["M. Thakur ", " V. K. N"]}, {"title": " \"Selective Contextsensitivity Guided by Impact Pre-analysis\"", "authors": ["H. Oh", " W. Lee", " K. Heo", " H. Yang ", " K. Yi"]}, {"title": " \"Data-driven Contextsensitivity for Points-to Analysis\u201d\"", "authors": ["S. Jeong", " M. Jeon", " S. Cha ", " H. Oh"]}, {"title": " \"Refinement in Object-sensitivity Points-to Analysis via Slicing\u201d\"", "authors": ["G. M. Rama", " R. Komondoor ", " H. Sharma"]}, {"title": " \"On Abstraction Refinement for Program Analyses in Datalog\u201d\"", "authors": ["X. Zhang", " R. Mangal", " R. Grigore", " M. Naik ", " H. Yang"]}, {"title": " \"Type-based Alias Analysis\u201d\"", "authors": ["A. Diwan", " K. S. McKinley ", " J. E. B. Moss"]}]},
{"doi": "10.1109/ASEW.2015.14", "title": "DRAT: An Unobtrusive, Scalable Approach to Large Scale Software License Analysis", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Licenses", "Metadata", "Open source software", "Java", "Open systems", "Government"], "abstract": "The Apache Release Audit Tool (RAT) performs software open source license auditing and checking, however RAT fails to successfully audit today's large code bases. Being a natural language processing (NLP) tool and a crawler, RAT marches through a code base, but uses rudimentary black lists and white lists to navigate source code repositories, and often does a poor job of identifying source code versus binary files. In addition RAT produces no incremental output and thus on code bases that themselves are \"Big Data\", RAT could run for e.g., a month and still not provide any status report. We introduce Distributed \"RAT\" or the Distributed Release Audit Tool (DRAT). DRAT overcomes RAT's limitations by leveraging: (1) Apache Tika to automatically detect and classify files in source code repositories and determine what is a binary file, what is source code, what are notes that need skipping, etc. (2) Apache Solr to interactively perform analytics on a code repository and to extract metadata using Apache Tika, and finally (3) Apache OODT to run RAT on per-MIME type (e.g., C/C++, Java, Javascript, etc.) and per configurable K-file sized chunks in a MapReduce workflow. Each Mapper task is an instance of RAT running on a K-file sized per Multipurpose Internet Mail Extensions (MIME) type chunk (split using Tika) and each mapper produces and incremental and intermediate log file, and where the Reducer aggregates the individual log files.", "author": [{"name": "Chris A. Mattmann", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, USA"}, {"name": "Ji-Hyun Oh", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, USA"}, {"name": "Tyler Palsulich", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, USA"}, {"name": "Lewis John McGibbney", "affiliation": "Jet Propulsion Laboratory, California Institute of Technology, Pasadena, USA"}, {"name": "Yolanda Gil", "affiliation": "USC Information Sciences Institute, University of Southern California, Marina Del Rey, CA"}, {"name": "Varun Ratnakar", "affiliation": "USC Information Sciences Institute, University of Southern California, Marina Del Rey, CA"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"Open Source Licensing: Software Freedom and Intellectual Property Law\" in ", "authors": ["L. Rosen"]}, {"title": " \"MapReduce: simplified data processing on large clusters\"", "authors": ["J. Dean ", " S. Ghemawat"]}, {"title": " \"A software architecture-based framework for highly distributed and data intensive scientific applications\"", "authors": ["C. Mattmann", " D. Crichton", " N. Medvidovic ", " S. Hughes"]}, {"title": " \"Tika in Action\"", "authors": ["C. Mattmann ", " J. Zitting"]}, {"title": " \"Enabling reproducible research: Open licensing for scientific innovation\"", "authors": ["V. Stodden"]}]},
{"doi": "10.1109/ASE.2013.6693079", "title": "Consistency-preserving edit scripts in model versioning", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Unified modeling language", "Merging", "Semantics", "Concrete", "Adaptation models", "Abstracts", "Syntactics"], "abstract": "In model-based software development, models are iteratively evolved. To optimally support model evolution, developers need adequate tools for model versioning tasks, including comparison, patching, and merging of models. A significant disadvantage of tools currently available is that they display, and operate with, low-level model changes which refer to internal model representations and which can lead to intermediate inconsistent states. Higher-level consistency-preserving edit operations including refactorings are better suited to explain changes or to resolve conflicts. This paper presents an automatic procedure which transforms a low-level difference into an executable edit script which uses consistency-preserving edit operations only. Edit scripts support consistent model patching and merging on a higher abstraction level. Our approach to edit script generation has been evaluated in a larger real-world case study.", "author": [{"name": "Timo Kehrer", "affiliation": "Software Engineering Group, University of Siegen, Germany"}, {"name": "Udo Kelter", "affiliation": "Software Engineering Group, University of Siegen, Germany"}, {"name": "Gabriele Taentzer", "affiliation": "Philipps-Universit\u00e4t Marburg, Germany"}], "time": "Nov. 2013", "citationCount": "24", "references": []},
{"doi": "10.1109/ASE.2019.00092", "title": "Improving the Decision-Making Process of Self-Adaptive Systems by Accounting for Tactic Volatility", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Decision making", "Time factors", "Servers", "Adaptive systems", "Unmanned aerial vehicles", "Batteries", "Tools"], "abstract": "When self-adaptive systems encounter changes withintheir surrounding environments, they enacttacticsto performnecessary adaptations. For example, a self-adaptive cloud-basedsystem may have a tactic that initiates additional computingresources when response time thresholds are surpassed, or theremay be a tactic to activate a specific security measure when anintrusion is detected. In real-world environments, these tacticsfrequently experiencetactic volatilitywhich is variable behaviorduring the execution of the tactic.Unfortunately, current self-adaptive approaches do not accountfor tactic volatility in their decision-making processes, and merelyassume that tactics do not experience volatility. This limitationcreates uncertainty in the decision-making process and mayadversely impact the system's ability to effectively and efficientlyadapt. Additionally, many processes do not properly account forvolatility that may effect the system's Service Level Agreement(SLA). This can limit the system's ability to act proactively, especially when utilizing tactics that contain latency.To address the challenge of sufficiently accounting for tacticvolatility, we propose aTactic Volatility Aware(TVA) solution.Using Multiple Regression Analysis (MRA), TVA enables self-adaptive systems to accurately estimate the cost and timerequired to execute tactics. TVA also utilizesAutoregressiveIntegrated Moving Average(ARIMA) for time series forecasting, allowing the system to proactively maintain specifications.", "author": [{"name": "Jeffrey Palmerino", "affiliation": "B. Thomas Golisano College of Computing and Information Sciences Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Qi Yu", "affiliation": "B. Thomas Golisano College of Computing and Information Sciences Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Travis Desell", "affiliation": "B. Thomas Golisano College of Computing and Information Sciences Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Daniel Krutz", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A prediction-driven adaptation approach for self-adaptive sensor networks\"", "authors": ["I. D. P. Anaya", " V. Simko", " J. Bourcier", " N. Plouzeau ", " J.-M. J\u00e9z\u00e9equel"]}, {"title": " \"A workload characterization study of the 1998 world cup web site\"", "authors": ["M. Arlitt ", " T. Jin"]}, {"title": " \"Software engineering for self-adaptive systems\"", "authors": ["Y. Brun", " G. Marzo Serugendo", " C. Gacek", " H. Giese", " H. Kienle", " M. Litoiu", " ."]}, {"title": " \"Stochastic game analysis and latency awareness for proactive self-adaptation\"", "authors": ["J. C\u00e1mara", " G. A. Moreno ", " D. Garlan"]}, {"title": " \"Analyzing latencyaware self-adaptation using stochastic games and simulations\"", "authors": ["J. C\u00e1mara", " G. A. Moreno", " D. Garlan ", " B. Schmerl"]}, {"title": " \"Doctor ai: Predicting clinical events via recurrent neural networks\"", "authors": ["E. Choi", " M. T. Bahadori ", " J. Sun"]}, {"title": " \"An effective mechanism to regenerate http flooding ddos attack using real time data set\"", "authors": ["A. Dhanapal ", " P. Nithyan"]}, {"title": " \"Artificial neural networks approach to the forecast of stock market price movements\"", "authors": ["L. Di Persio ", " O. Honchar"]}, {"title": " \"A survey of autonomic communications\"", "authors": ["S. Dobson", " S. Denazis", " A. Fern\u00e1ndez", " D. Gaiti", " E. Gelenbe", " F. Massacci", " ."]}, {"title": " \"Evolving recurrent neural networks for time series data prediction of coal plant parameters\"", "authors": ["A. ElSaid", " S. Benson", " S. Patwardhan", " D. Stadem ", " T. Desell"]}, {"title": " \"optimizing long short-term memory recurrent neural networks using ant colony optimization to predict turbine engine vibration\"", "authors": ["A. ElSaid", " F. El Jamiy", " J. Higgins", " B. Wild ", " T. Desell"]}, {"title": " \"A learning-based framework for engineering feature-oriented self-adaptive software systems\"", "authors": ["N. Esfahani", " A. Elkhodary ", " S. Malek"]}, {"title": " \"Wind power prediction using mixture density recurrent neural networks\"", "authors": ["M. Felder", " A. Kaifel ", " A. Graves"]}, {"title": " \"Learning to Forget: Continual Prediction with LSTM\"", "authors": ["Felix A. Gers", " J\u00fcrgen Schmidhuber ", " Fred Cummins"]}, {"title": " \"model-driven autoscaling for cloud applications\"", "authors": ["A. G", "hi", " P. Dube", " A. Karve", " A. Kochut ", " L. Zhang. Adaptive"]}, {"title": " \"Modeling run-time adaptation at the system architecture level in dynamic serviceoriented environments\"", "authors": ["N. Huber", " A. Hoorn", " A. Koziolek", " F. Brosig ", " S. Kounev"]}, {"title": " \"Machine learning meets quantitative planning: Enabling self-adaptation in autonomous robots\"", "authors": ["P. Jamshidi", " J. J. C\u00e1mara", " B. Schmerl", " C. K\u00e4stner ", " D. Garlan"]}, {"title": " \"Managing uncertainty in autonomic cloud elasticity controllers\"", "authors": ["P. Jamshidi", " C. Pahl ", " N. C. Mendon\u00e7a"]}, {"title": " \"Selflearning cloud controllers: Fuzzy q-learning for knowledge evolution\"", "authors": ["P. Jamshidi", " A. M. Sharifloo", " C. Pahl", " A. Metzger ", " G. Estrada"]}, {"title": " \"A cost-sensitive adaptation engine for server consolidation of multitier applications\"", "authors": ["G. Jung", " K. R. Joshi", " M. A. Hiltunen", " R. D. Schlichting ", " C. Pu"]}, {"title": " \"The vision of autonomic computing\"", "authors": ["J. O. Kephart ", " D. M. Chess"]}, {"title": " \"Self-managed systems: an architectural challenge\"", "authors": ["J. Kramer ", " J. Magee"]}, {"title": " \"Probabilistic symbolic model checking with prism: A hybrid approach\"", "authors": ["M. Kwiatkowska", " G. Norman ", " D. Parker"]}, {"title": " \"Energy efficient gps sensing with cloud offloading\"", "authors": ["J. Liu", " B. Priyantha", " T. Hart", " H. S. Ramos", " A. A. Loureiro ", " Q. Wang"]}, {"title": " \"Program image dissemination protocol for low-energy multihop wireless sensor networks\"", "authors": ["L. H\u00e4am\u00e8al\u00e4ainen", " J. Suhonen", " T. Laukkarinen", " T. D. H\u00e4am\u00e8al\u00e4ainen ", " M. H\u00e4am\u00e8al\u00e4ainen"]}, {"title": " \"Application of neural network for forecasting of exchange rates and forex trading\"", "authors": ["N. Maknickien\u02d9e ", " A. Maknickas"]}, {"title": " \"Proactive selfadaptation under uncertainty: a probabilistic model checking approach\"", "authors": ["G. A. Moreno", " J. C\u00e1mara", " D. Garlan ", " B. Schmerl"]}, {"title": " \"Flexible and efficient decision-making for proactive latency-aware self-adaptation\"", "authors": ["G. A. Moreno", " J. C\u00e1mara", " D. Garlan ", " B. Schmerl"]}, {"title": " \"Efficient decision-making under uncertainty for proactive self-adaptation\"", "authors": ["G. A. Moreno", " J. C\u00e1mara", " D. Garlan ", " B. Schmerl"]}, {"title": " \"Comparing model-based predictive approaches to selfadaptation: Cobra and pla\"", "authors": ["G. A. Moreno", " A. V. Papadopoulos", " K. Angelopoulos", " J. C\u00e1mara ", " B. Schmerl"]}, {"title": " \"Efficient analysis of large adaptation spaces in self-adaptive systems using machine learning\"", "authors": ["F. Quin", " D. Weyns", " T. Bamelis", " S. S. Buttar ", " S. Michiels"]}, {"title": " \"A learning approach to enhance assurances for real-time self-adaptive systems\"", "authors": ["A. Rodrigues", " R. D. Caldas", " G. N. Rodrigues", " T. Vogel ", " P. Pelliccione"]}, {"title": " \"Self-adaptive software: Landscape and research challenges\"", "authors": ["M. Salehie ", " L. Tahvildari"]}, {"title": " \"Architecture-based selfprotection: composing and reasoning about denial-of-service mitigations\"", "authors": ["B. R. Schmerl", " J. C\u00e1mara", " J. Gennari", " D. Garlan", " P. Casanova", " G. A. Moreno", " ."]}, {"title": " \"A cost-sensitive model for preemptive intrusion response systems\"", "authors": ["N. Stakhanova", " S. Basu ", " J. Wong"]}, {"title": " \"An organic computing perspective on self-improving system interweaving at runtime\"", "authors": ["S. Tomforde", " S. Rudolph", " K. Bellman ", " R. W\u00fcrtz"]}]},
{"doi": "10.1109/ASEW.2015.9", "title": "Mining Software Dependency Networks for Agent-Based Simulation of Software Evolution", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Software", "Couplings", "Data mining", "Computational modeling", "Analytical models", "Computer bugs", "Data models"], "abstract": "During the software development process, the time and resources for quality assurance are limited. Therefore, project managers benefit from knowing in advance if a decision leads to decreasing quality. For this, we build an agent-based simulation tool for software processes for testing the effect of changing parameters, e.g., development team size. Since often changed software entities tend to be more defect-prone, we analyze the evolution of common file changes and evaluate its applicability for our agent-based simulation. For the estimation of simulation parameters we performed a case study focusing on change coupling dependency graphs of open source software projects. The analysis of this also provided valuable insights in the structure of these dependencies. By comparing empirical observations with simulation results we support the assumption that file dependencies can be simulated. Moreover, we are able to reproduce the observed patterns with a parameter set from another project which, therefore, indicates the transferability of the simulation for projects similar in size and duration.", "author": [{"name": "Verena Honsel", "affiliation": "Institute of Computer Science, Universtity of Gottingen, Germany"}, {"name": "Daniel Honsel", "affiliation": "Institute of Computer Science, Universtity of Gottingen, Germany"}, {"name": "Steffen Herbold", "affiliation": "Institute of Computer Science, Universtity of Gottingen, Germany"}, {"name": "Jens Grabowski", "affiliation": "Institute of Computer Science, Universtity of Gottingen, Germany"}, {"name": "Stephan Waack", "affiliation": "Institute of Computer Science, Universtity of Gottingen, Germany"}], "time": "Nov. 2015", "citationCount": "6", "references": [{"title": " \"Predicting risk of software changes\"", "authors": ["A. Mockus ", " D. M. Weiss"]}, {"title": " \"If your version control system could talk\"", "authors": ["T. Ball", " J.-M. Kim", " A. A. Porter ", " H. P. Siy"]}, {"title": " \"Software process simulation based on mining software repositories\"", "authors": ["V. Honsel", " D. Honsel ", " J. Grabowski"]}, {"title": " \"K3b-the cd/dvd kreator for linux\"", "authors": ["S. Trueg"]}, {"title": "\"Log4j\"", "authors": []}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " P. Weisgerber", " S. Diehl ", " A. Zeller"]}, {"title": " \"On the relationship between change coupling and software defects\"", "authors": ["M. D\u2019 Ambros", " M. Lanza ", " R. Robbes"]}, {"title": " \"Visualizing software changes\"", "authors": ["S. G. Eick", " P. Schuster", " A. Mockus", " T. L. Graves ", " A. F. Karr"]}, {"title": " \"Detection of logical coupling based on product release history\"", "authors": ["H. Gall", " K. Hajek ", " M. Jazayeri"]}, {"title": " \"The influence of organizational structure on software quality: An empirical case study\"", "authors": ["N. Nagappan", " B. Murphy ", " V. Basili"]}, {"title": " \"Predicting defects using network analysis on dependency graphs\"", "authors": ["T. Zimmermann ", " N. Nagappan"]}, {"title": " \"Can developer-module networks predict failures?\"", "authors": ["M. Pinzger", " N. Nagappan ", " B. Murphy"]}, {"title": " \"Predicting failures with developer networks and social network analysis\"", "authors": ["A. Meneely", " L. Williams", " W. Snipes ", " J. Osborne"]}, {"title": " \"Understanding software processes through system dynamics simulation: A case study\"", "authors": ["C. Andersson", " L. Karlsson", " J. Nedstam", " M. Host ", " B. I. Nilsson"]}, {"title": " \"A Social Network Approach To Free/Open Source Software Simulation\"", "authors": ["P. Wagstrom", " J. Herbsleb ", " K. Carley"]}, {"title": " \"A comprehensive empirical study of count models for software fault prediction\"", "authors": ["K. Gao ", " T. M. Khoshgoftaar"]}, {"title": " \"Agent-based simulation of open source evolution\"", "authors": ["N. Smith ", " J. F. Ramil"]}, {"title": " \"Analysing software repositories to understand software evolution\" in Software Evolution", "authors": ["M. D\u2019 Ambros", " H. Gall", " M. Lanza ", " M. Pinzger"]}, {"title": " \"Node centrality in weighted networks: Generalizing degree and shortest paths\"", "authors": ["T. Opsahl", " F. Agneessens ", " J. Skvoretz"]}, {"title": " \"Community detection in graphs\"", "authors": ["S. Fortunato"]}, {"title": " \"Gephi: an open source software for exploring and manipulating networks\"", "authors": ["M. Bastian", " S. Heymann", " M. Jacomy ."]}, {"title": " \"Complex adaptive systems modeling with repast simphony\"", "authors": ["M. J. North", " N. T. Collier", " J. Ozik", " E. R. Tatara", " C. M. Macal", " M. Bragen", " ."]}, {"title": " \"Bugzilla\"", "authors": ["T. Weissman ."]}, {"title": " \"The kolmogorov-smirnov test for goodness of fit\"", "authors": ["J. Massey ", " J. Frank"]}, {"title": " \"Ownership experience and defects: A fine-grained study of authorship\"", "authors": ["F. Rahman ", " P. Devanbu"]}, {"title": " \"Graph-based analysis and prediction for software evolution\"", "authors": ["P. Bhattacharya", " M. Iliofotou", " I. Neamtiu ", " M. Faloutsos"]}]},
{"doi": "10.1109/ASE.2013.6693080", "title": "JFlow: Practical refactorings for flow-based parallelism", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Parallel processing", "Feature extraction", "Libraries", "Pipelines", "Sensitivity", "Java", "Databases"], "abstract": "Emerging applications in the domains of recognition, mining and synthesis (RMS); image and video processing; data warehousing; and automatic financial trading admit a particular style of parallelism termed flow-based parallelism. To help developers exploit flow-based parallelism, popular parallel libraries such as Groovy's GPars, Intel's TBB Flow Graph and Microsoft's TPL Dataflow have begun introducing many new and useful constructs. However, to reap the benefits of such constructs, developers must first use them. This involves refactoring their existing sequential code to incorporate these constructs - a manual process that overwhelms even experts. To alleviate this burden, we introduce a set of novel analyses and transformations targeting flow-based parallelism. We implemented these ideas in JFlow, an interactive refactoring tool integrated into the Eclipse IDE. We used JFlow to parallelize seven applications: four from a previously known benchmark and three from a suite of large open source projects. JFlow, with minimal interaction from the developer, can successfully parallelize applications from the aforementioned domains with good performance (offering up to 3.45x speedup on a 4-core machine) and is fast enough to be used interactively as part of a developer's workflow.", "author": [{"name": "Nicholas Chen", "affiliation": "Department of Computer Science, University of Illinois at Urbana-Champaign, Urbana, USA"}, {"name": "Ralph E. Johnson", "affiliation": "Department of Computer Science, University of Illinois at Urbana-Champaign, Urbana, USA"}], "time": "Nov. 2013", "citationCount": "2", "references": [{"title": " \"Resources on Parallel Patterns", "authors": ["E.-G. Kim ", " M. Snir"]}, {"title": "\"GPars (Groovy Parallel Systems)", "authors": []}, {"title": " \"Intel Threading Building Blocks", "authors": ["Intel Corporation"]}, {"title": "\"TPL Dataflow", "authors": []}, {"title": " \"Expressing Pipeline Parallelism Using TBB Constructs: A Case Study on What Works and What Doesn't", "authors": ["E. Reed", " N. Chen", " ", " R. Johnson"]}, {"title": " \"Prospector: A Dynamic Data- Dependence Profiler To Help Parallel Programming", "authors": ["M. Kim", " H. Kim", " ", " C.-K. Luk"]}, {"title": " \"The OpenMP Source Code Repository", "authors": ["A. J. Dorta", " C. Rodriguez", " F. d. S", "e", " ", " A. Gonzalez-Escribano"]}, {"title": " \"Effective Static Race Detection for Java", "authors": ["M. Naik", " A. Aiken", " ", " J. Whaley"]}, {"title": " \"Soot - a Java bytecode optimization framework", "authors": ["R. Vall\u00e9e-Rai", " P. Co", " E. Gagnon", " L. Hendren", " P. Lam", " ", " V. Sundaresan"]}, {"title": " \"Parameterized object sensitivity for points-to analysis for java", "authors": ["A. Milanova", " A. Rountev", " ", " B. G. Ryder"]}, {"title": " \"Function allocation: algorithm", "authors": ["T. B. Sheridan"]}, {"title": " \"Lire: Lucene Image retrieval - An Extensible Java CBIR library", "authors": ["M. Lux ", " S. A. Chatzichristofis"]}, {"title": " \"The Paralax Infrastructure: Automatic Parallelization with a Helping Hand", "authors": ["H. V", "ierendonck", " S. Rul", " ", " K. De Bosschere"]}, {"title": " \"Automatic partitioning of a program dependence graph into parallel tasks", "authors": ["V. Sarkar"]}, {"title": " \"The program dependence graph and its use in optimization", "authors": ["J. Ferrante", " K. J. Ottenstein", " ", " J. D. Warren"]}, {"title": " \"A Practical Approach to Exploiting Coarse-Grained Pipeline Parallelism in C Programs", "authors": ["W. Thies", " V. Ch", "rasekhar", " ", " S. Amarasinghe"]}, {"title": " \"OoOJava: Software Out of- order Execution", "authors": ["J. C. Jenista", " Y. h. Eom", " ", " B. C. Demsky"]}, {"title": " \"Ease of use with concurrent collections (CnC)", "authors": ["K. Knobe"]}, {"title": " \"Feedback- Directed Pipeline Parallelism", "authors": ["M. A. Suleman", " M. K. Qureshi", " Khubaib", " ", " Y. N. Patt"]}, {"title": "\"T.J. Watson Libraries for Analysis (WALA)", "authors": []}, {"title": " \"Effective Static Race Detection for Java", "authors": ["M. Naik"]}, {"title": " \"A Schema for Interprocedural Modification Side-Effect Analysis With Pointer Aliasing", "authors": ["B. G. Ryder", " W. A. L", "i", " P. A. Stocks", " S. Zhang", " ", " R. Altucher"]}, {"title": " \"Inferring Ownership Transfer for Efficient Message Passing", "authors": ["S. Negara", " R. K. Karmani", " ", " G. Agha"]}, {"title": " \"Ownership types for flexible alias protection", "authors": ["D. G. Clarke", " J. M. Potter", " ", " J. Noble"]}, {"title": " \"Benchmarking modern multiprocessors", "authors": ["C. Bienia"]}, {"title": " \"Taming Reflection: Aiding Static Analysis in the Presence of Reflection and Custom Class Loaders", "authors": ["E. Bodden", " A. Sewe", " J. Sinschek", " H. Oueslati", " ", " M. Mezini"]}, {"title": " \"Advances in Dataflow Programming Languages", "authors": ["W. M. Johnston", " J. R. P. Hanna", " ", " R. J. Millar"]}, {"title": " \"Data Flow Program Graphs", "authors": ["A. Davis ", " R. Keller"]}, {"title": " \"An Asynchronous Programming Language and Computing Machine", "authors": ["Arvind", " K. P. Gostelow", " ", " W. Plouffe"]}, {"title": " \"What is NI Labview?\" http://www.ni.com/ labview/whatis/.", "authors": ["National Instruments"]}, {"title": " \"PROGRAPH: A preliminary report", "authors": ["S. Matwin ", " T. Pietrzykowski"]}, {"title": " \"Data Flow Languages", "authors": ["W. Ackerman"]}, {"title": " \"Java Flow-Based Programming", "authors": ["J. P. Morrison"]}, {"title": " \"Brook for GPUs: Stream Computing on Graphics Hardware", "authors": ["I. Buck", " T. Foley", " D. Horn", " J. Sugerman", " K. Fatahalian", " M. Houston", " ", " P. Hanrahan"]}, {"title": " \"StreamIt: A Language for Streaming Applications", "authors": ["W. Thies", " M. Karczmarek", " ", " S. P. Amarasinghe"]}, {"title": " \"Programmable stream processors", "authors": ["U. J. Kapasi", " S. Rixner", " W. J. Dally", " B. Khailany", " J. H. Ahn", " P. Mattson", " ", " J. D. Owens"]}, {"title": " \"A Type and Effect System for Deterministic Parallel Java", "authors": ["R. L. Bocchino", " Jr.", " V. S. Adve", " D. Dig", " S. V. Adve", " S. Heumann", " R. Komuravelli", " J. Overbey", " P. Simmons", " H. Sung", " ", " M. Vakilian"]}, {"title": " \"Using Data Groups to Specify and Check Side Effects", "authors": ["K. R. M. Leino", " A. Poetzsch-Heffter", " ", " Y. Zhou"]}, {"title": " \"Polymorphic Effect Systems", "authors": ["J. M. Lucassen ", " D. K. Gifford"]}, {"title": " \"Static Universe Type Inference", "authors": ["N. Kellenberger"]}, {"title": " \"Static universe type inference using a SAT-solver", "authors": ["M. Niklaus"]}, {"title": " \"Inferring Method Effect Summaries for Nested Heap Regions", "authors": ["M. Vakilian", " D. Dig", " R. Bocchino", " J. Overbey", " V. Adve", " ", " R. Johnson"]}, {"title": " \"A Profile-Based Tool for Finding Pipeline Parallelism in Sequential Programs", "authors": ["S. Rul", " H. V", "ierendonck", " ", " K. De Bosschere"]}, {"title": " \"Semi-Automatic Extraction and Exploitation of Hierarchical Pipeline Parallelism using Profiling Information", "authors": ["G. Tournavitis ", " B. Franke"]}, {"title": " \"SD3: A Scalable Approach to Dynamic Data-Dependence Profiling", "authors": ["M. Kim", " H. Kim", " ", " C.-K. Luk"]}, {"title": " \"SUIF Explorer: An Interactive and Interprocedural Parallelizer", "authors": ["S.-W. Liao", " A. Diwan", " R. P. Bosch", " Jr.", " A. Ghuloum", " ", " M. S. Lam"]}, {"title": " \"Interactive Parallel Programming using the ParaScope Editor", "authors": ["K. Kennedy", " K. S. McKinley", " ", " C. W. Tseng"]}, {"title": " \"Concurrencer: A Tool for Retrofitting Concurrency into Sequential Java Applications via Concurrent Libraries", "authors": ["D. Dig", " J. Marrero", " ", " M. D. Ernst"]}, {"title": " \"Relooper: Refactoring for Loop Parallelism in Java", "authors": ["D. Dig", " M. Tarce", " C. Radoi", " M. Minea", " ", " R. Johnson"]}, {"title": " \"Transformation for Class Immutability", "authors": ["F. Kjolstad", " D. Dig", " G. Acevedo", " ", " M. Snir"]}]},
{"doi": "10.1109/ASE.2019.00093", "title": "Learning-Guided Network Fuzzing for Testing Cyber-Physical System Defences", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Fuzzing", "Actuators", "Benchmark testing", "Machine learning", "Predictive models", "Monitoring"], "abstract": "The threat of attack faced by cyber-physical systems (CPSs), especially when they play a critical role in automating public infrastructure, has motivated research into a wide variety of attack defence mechanisms. Assessing their effectiveness is challenging, however, as realistic sets of attacks to test them against are not always available. In this paper, we propose smart fuzzing, an automated, machine learning guided technique for systematically finding 'test suites' of CPS network attacks, without requiring any knowledge of the system's control programs or physical processes. Our approach uses predictive machine learning models and metaheuristic search algorithms to guide the fuzzing of actuators so as to drive the CPS into different unsafe physical states. We demonstrate the efficacy of smart fuzzing by implementing it for two real-world CPS testbeds-a water purification plant and a water distribution system-finding attacks that drive them into 27 different unsafe states involving water flow, pressure, and tank levels, including six that were not covered by an established attack benchmark. Finally, we use our approach to test the effectiveness of an invariant-based defence system for the water treatment plant, finding two attacks that were not detected by its physical invariant checks, highlighting a potential weakness that could be exploited in certain conditions.", "author": [{"name": "Yuqi Chen", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Christopher M. Poskitt", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Jun Sun", "affiliation": "Singapore Management University, Singapore"}, {"name": "Sridhar Adepu", "affiliation": "Singapore University of Technology and Design, Singapore"}, {"name": "Fan Zhang", "affiliation": "Zhejiang University, Zhejiang Lab, and Alibaba-Zhejiang University Joint Institute of Frontier Technologies, China"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Cyber-physical systems: the next computing revolution\"", "authors": ["R Rajkumar", " I Lee", " L Sha ", " J. A. Stankovic"]}, {"title": " \"Water treatment plant hacked chemical mix changed for tap supplies\"", "authors": ["J Leyden"]}, {"title": " \"Orpheus: Enforcing cyber-physical execution semantics to defend against data-oriented attacks\"", "authors": ["L Cheng", " K Tian ", " D. D. Yao"]}, {"title": " \"Log-based anomaly detection of CPS using a statistical method\"", "authors": ["Y Harada", " Y Yamagata", " O Mizuno ", " E Choi"]}, {"title": " \"Anomaly detection for a water treatment system using unsupervised machine learning\"", "authors": ["J Inoue", " Y Yamagata", " Y Chen", " C. M. Poskitt ", " J Sun"]}, {"title": " \"Cyber-physical attacks in power networks: Models fundamental limitations and monitor design\"", "authors": ["F Pasqualetti", " F Dorfler ", " F Bullo"]}, {"title": " \"CORGIDS: A correlation-based generic intrusion detection system\"", "authors": ["E Aggarwal", " M Karimibiuki", " K Pattabiraman ", " A Ivanov"]}, {"title": " \"Truth will out: Departure-based process-level detection of stealthy attacks on control systems\"", "authors": ["W Aoudi", " M Iturbe ", " M Almgren"]}, {"title": " \"Detecting zeroday controller hijacking attacks on the power-grid with enhanced deep learning\"", "authors": ["Z He", " A Raghavan", " S. M. Chai ", " R. B. Lee"]}, {"title": " \"Detecting cyber attacks in industrial control systems using convolutional neural networks\"", "authors": ["M Kravchik ", " A Shabtai"]}, {"title": " \"TABOR: A graphical model-based approach for anomaly detection in industrial control systems\"", "authors": ["Q Lin", " S Adepu", " S Verwer ", " A Mathur"]}, {"title": " \"Learning based anomaly detection for industrial arm applications\"", "authors": ["V Narayanan ", " R. B. Bobba"]}, {"title": " \"High-performance unsupervised anomaly detection for cyber-physical system networks\"", "authors": ["P Schneider ", " K Bottinger"]}, {"title": " \"NoisePrint: Attack detection using sensor and process noise fingerprint in cyber physical systems\"", "authors": ["C. M. Ahmed", " M Ochoa", " J Zhou", " A. P. Mathur", " R Qadeer", " C Murguia", " ."]}, {"title": " \"Noise matters: Using sensor and process noise fingerprint to detect stealthy cyber attacks and authenticate sensors in CPS\"", "authors": ["C. M. Ahmed", " J Zhou ", " A. P. Mathur"]}, {"title": " \"Fingerprinting for cyber-physical system security: Device physics matters too\"", "authors": ["Q Gu", " D Formby", " S Ji", " H Cam ", " R. A. Beyah"]}, {"title": " \"Scission: Signal characteristic-based sender identification and intrusion detection in automotive networks\"", "authors": ["M Kneib ", " C Huth"]}, {"title": " \"Attacks against process control systems: risk assessment detection and response\"", "authors": ["A. A. Cardenas", " S Amin", " Z Lin", " Y Huang", " C Huang ", " S Sastry"]}, {"title": " \"Using process invariants to detect cyber attacks on a water treatment system\"", "authors": ["S Adepu ", " A Mathur"]}, {"title": " \"Distributed detection of single-stage multipoint cyber attacks in a water treatment plant\"", "authors": ["S Adepu ", " A Mathur"]}, {"title": " \"Towards learning and verifying invariants of cyber-physical systems by code mutation\"", "authors": ["Y Chen", " C. M. Poskitt ", " J Sun"]}, {"title": " \"Distributed attack detection in a water treatment plant: Method and case study\"", "authors": ["S Adepu ", " A Mathur"]}, {"title": " \"Learning from mutants: Using code mutation to learn and monitor invariants of a cyber-physical system\"", "authors": ["Y Chen", " C. M. Poskitt ", " J Sun"]}, {"title": " \"Detecting attacks against robotic vehicles: A control invariant approach\"", "authors": ["H Choi", " W Lee", " Y Aafer", " F Fei", " Z Tu", " X Zhang", " ."]}, {"title": " \"A survey of physics-based attack detection in cyber-physical systems\"", "authors": ["J Giraldo", " D. I. Urbina", " A Cardenas", " J Valente", " M. A. Faisal", " J Ruths", " ."]}, {"title": " \"A dataset to support research in the design of secure water treatment systems\"", "authors": ["J Goh", " S Adepu", " K. N. Junejo ", " A Mathur"]}, {"title": " \"Assessing the effectiveness of attack detection at a hackfest on industrial control systems\"", "authors": ["S Adepu ", " A Mathur"]}, {"title": "\"Secure Water Treatment (SWaT)\"", "authors": []}, {"title": " \"WADI: a water distribution testbed for research in the design of secure cyber physical systems\"", "authors": ["C. M. Ahmed", " V. R. Palleti ", " A. P. Mathur"]}, {"title": " \"Program-adaptive mutational fuzzing\"", "authors": ["S. K. Cha", " M Woo ", " D Brumley"]}, {"title": " \"HAMIDS: hierarchical monitoring intrusion detection system for industrial control systems\"", "authors": ["H. R. Ghaeini ", " N. O. Tippenhauer"]}, {"title": " \"Anomaly detection in cyber physical systems using recurrent neural networks\"", "authors": ["J Goh", " S Adepu", " M Tan ", " Z. S. Lee"]}, {"title": " \"A systematic framework to generate invariants for anomaly detection in industrial control systems\"", "authors": ["C Feng", " V. R. Palleti", " A Mathur ", " D Chana"]}, {"title": " \"Internetfacing plcs as a network backdoor\"", "authors": ["J Klick", " S Lau", " D Marzin", " J Malchow ", " V Roth"]}, {"title": " \"Ghost in the PLC: Designing an undetectable programmable logic controller rootkit via pin control attack\"", "authors": ["A Abbasi ", " M Hashemi"]}, {"title": " \"Hey my malware knows physics! Attacking PLCs with physical model aware rootkit\"", "authors": ["L Garcia", " F Brasser", " M. H. Cintuglu", " A. Sadeghi", " O. A. Mohammed ", " S. A. Zonouz"]}, {"title": " \"Learning to forget: Continual prediction with LSTM\"", "authors": ["F. A. Gers", " J Schmidhuber ", " F. A. Cummins"]}, {"title": " \"Support vector regression machines\"", "authors": ["H Drucker", " C. J. C. Burges", " L Kaufman", " A. J. Smola ", " V Vapnik"]}, {"title": " \"API design for machine learning software: experiences from the scikit-learn project\"", "authors": ["L Buitinck", " G Louppe", " M Blondel", " F Pedregosa", " A Mueller", " O Grisel", " ."]}, {"title": " \"False data injection attacks against state estimation in electric power grids\"", "authors": ["Y Liu", " P Ning ", " M. K. Reiter"]}, {"title": " \"Algorithmic attack synthesis using hybrid dynamics of power grid critical infrastructures\"", "authors": ["Z Huang", " S Etigowni", " L Garcia", " S Mitra ", " S. A. Zonouz"]}, {"title": " \"Limiting the impact of stealthy attacks on industrial control systems\"", "authors": ["D. I. Urbina", " J. A. Giraldo", " A. A. Cardenas", " N. O. Tippenhauer", " J Valente", " M. A. Faisal", " ."]}, {"title": " \"Testing the effectiveness of attack detection mechanisms in industrial control systems\"", "authors": ["G Sugumar ", " A Mathur"]}, {"title": " \"A framework for evaluating intrusion detection architectures in advanced metering infrastructures\"", "authors": ["A. A. Cardenas", " R Berthier", " R. B. Bobba", " J. H. Huh", " J. G. Jetcheva", " D. Grochocki", " ."]}, {"title": " \"CyFuzz: A differential testing framework for cyber-physical systems development environments\"", "authors": ["S. A. Chowdhury", " T. T. Johnson ", " C Csallner"]}, {"title": " \"Testing network-based intrusion detection signatures using mutant exploits\"", "authors": ["G Vigna", " W. K. Robertson ", " D Balzarotti"]}, {"title": " \"Model-based security analysis of a water treatment system\"", "authors": ["E Kang", " S Adepu", " D Jackson ", " A. P. Mathur"]}, {"title": " \"Finding dependencies between cyber-physical domains for security testing of industrial control systems\"", "authors": ["J. H. Castellanos", " M Ochoa ", " J Zhou"]}, {"title": " \"A trusted safety verifier for process controller code\"", "authors": ["S. E. McLaughlin", " S. A. Zonouz", " D. J. Pohly ", " P. D. McDaniel"]}, {"title": " \"CPAC: securing critical infrastructure with cyber-physical access control\"", "authors": ["S Etigowni", " D. J. Tian", " G Hern", "ez", " S. A. Zonouz ", " K. R. B. Butler"]}, {"title": " \"SpaceEx: Scalable verification of hybrid systems\"", "authors": ["G Frehse", " C. L. Guernic", " A Donze", " S Cotton", " R Ray", " O Lebeltel", " ."]}, {"title": " \"Towards \u2019verifying\u2019 a water treatment system\"", "authors": ["J Wang", " J Sun", " Y Jia", " S Qin ", " Z Xu"]}, {"title": " \"dReal: An SMT solver for nonlinear theories over the reals\"", "authors": ["S Gao", " S Kong ", " E. M. Clarke"]}, {"title": " \"Exercises in nonstandard static analysis of hybrid systems\"", "authors": ["I Hasuo ", " K Suenaga"]}, {"title": " \"A formal approach to cyber-physical attacks\"", "authors": ["R Lanotte", " M Merro", " R Muradore ", " L Vigano"]}, {"title": " \"Towards concolic testing for hybrid systems\"", "authors": ["P Kong", " Y Li", " X Chen", " J Sun", " M Sun ", " J Wang"]}, {"title": " \"How to model and prove hybrid systems with KeYmaera: a tutorial on safety\"", "authors": ["J Quesel", " S Mitsch", " S. M. Loos", " N Arechiga ", " A Platzer"]}]},
{"doi": "10.1109/ASEW.2015.15", "title": "An Empirical Study of Long Method and God Method in Industrial Projects", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Complexity theory", "Computer bugs", "Java", "Maintenance engineering", "Size measurement", "Business", "Time measurement"], "abstract": "Code smell is any symptom in the source code of a program that possibly indicates a deeper problem. Though code smells are usually not proper bugs which are defined as technically incorrect and functionality block, they indicate poor programming practices in code level which increases risk of bugs in the future. Long method smell is identified as a kind of methods which are have large number of executable statements, at the same time God method smell is identified as a kind of methods which is doing too much. On the previous research and practice, people treat these 2 concepts equivalently. However, the definition of \"large number of executable statements\" shows us the size of the method, and at the same time definition of \"doing too much\" shows us the complexity of the logic which is implemented and nested in this method. Though intuitively the two definitions are equivalent -- methods with large number of statement means it nests much business logic so that the complexity of these methods is high, a dearth of studies suggest the research of difference between these two definitions. In this paper, present 2 research questions to study these 2 definitions. We choose one release of 11 java based web application projects which is in maintenance period respectively. In these releases, we ask the developers to analysis the bug reports and related code, then collect all 125 bugs which is caused by code smell and the related code for fixing these bugs. We get 45 bugs caused by the Long method smell and the related 31 methods, and we analyzed the data compared with the longest methods in these projects. The study highlights the need for a clearer definition of this kind of code smell, and there are many factors not only length which is affecting the code quality. So the real thing which is affecting the code quality is beyond the definition of \"large number of executable statement\", and at the same time the definition of \"doing too much\" should be modeling to illuminate this kind of code smell.", "author": [{"name": "Xiaoqiong Zhao", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Xiao Xuan", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}, {"name": "Shanping Li", "affiliation": "College of Computer Science and Technology, Zhejiang University, Hangzhou, China"}], "time": "Nov. 2015", "citationCount": 0, "references": [{"title": " \"Risk-based code smells detection tool\"", "authors": ["W. Abdelmoez", " E. Kosba ", " A. F. Iesa"]}, {"title": " \"Investigating the evolution of code smells in object-oriented systems\"", "authors": ["A. Chatzigeorgiou ", " A. Manakos"]}, {"title": " \"Common refactorings a dependency graph and some code smells: an empirical study of java oss\"", "authors": ["S. Counsell", " Y. Hassoun", " G. Loizou ", " R. Najjar"]}, {"title": " \"Is a strategy for code smell assessment long overdue?\"", "authors": ["S. Counsell", " R. Hierons", " H. Hamza", " S. Black ", " M. Durr"]}, {"title": " \"Finding refactorings via change metrics\"", "authors": ["S. Demeyer", " S. Ducasse ", " O. Nierstrasz"]}, {"title": " \"Automatic detection of bad smells in code: An experimental assessment\"", "authors": ["F. A. Fontana", " P. Braione ", " M. Zanoni"]}, {"title": " \"Investigating the impact of code smells on system's quality: An empirical study on systems of different application domains\"", "authors": ["F. A. Fontana", " V. Ferme", " A. Marino", " B. Walter ", " P. Martenka"]}, {"title": " \"Code smell detection: Towards a machine learning-based approach\"", "authors": ["F. A. Fontana", " M. Zanoni", " A. Marino ", " M. V. Mantyla"]}, {"title": " \"Domain-specific tailoring of code smells: an empirical study\"", "authors": ["Y. Guo", " C. Seaman", " N. Zazworka ", " F. Shull"]}, {"title": " \"A cooperative parallel search-based software engineering approach for code-smells detection\"", "authors": ["W. Kessentini", " M. Kessentini", " H. Sahraoui", " S. Bechikh ", " A. Ouni"]}, {"title": " \"An exploratory study of the impact of code smells on software change-proneness\"", "authors": ["F. Khomh", " M. Di Penta ", " Y. Gueheneuc"]}, {"title": " \"Identification of refused bequest code smells\"", "authors": ["E. Ligu", " A. Chatzigeorgiou", " T. Chaikalis ", " N. Ygeionomakis"]}, {"title": " \"Code-smells detection using good and bad software design examples\"", "authors": ["U. Mansoor", " M. Kessentini", " S. Bechikh ", " K. Deb"]}, {"title": " \"Detection strategies: Metrics-based rules for detecting design flaws\"", "authors": ["R. Marinescu"]}, {"title": " \"Decor: A method for the specification and detection of code and design smells\"", "authors": ["N. Moha", " Y.-G. Gueheneuc", " L. Duchien ", " A. Le Meur"]}, {"title": " \"On the effectiveness of concern metrics to detect code smells: An empirical study\" in Advanced Information Systems Engineering", "authors": ["J. Padilha", " J. Pereira", " E. Figueiredo", " J. Almeida", " A. Garcia ", " C. SantAnna"]}, {"title": " \"Detecting bad smells in source code using change history information\"", "authors": ["F. Palomba", " G. Bavota", " M. Di Penta", " R. Oliveto", " A. De Lucia ", " D. Poshyvanyk"]}, {"title": " \"Representing concerns in source code\"", "authors": ["M. P. Robillard ", " G. C. Murphy"]}, {"title": " \"Design and implementation of testing tool for code smell rectification using c-mean algorithm\"", "authors": ["G. Singh ", " V. Chopra"]}, {"title": " \"Quantifying the effect of code smells on maintenance effort\"", "authors": ["D. J. Sjoberg", " A. Yamashita", " B. C. D. Anda", " A. Mockus ", " T. Dyba"]}, {"title": " \"Exploring the relationship between cohesion and complexity\"", "authors": ["C. Stein", " G. Cox ", " L. Etzkorn"]}, {"title": " \"Structured testing: A testing methodology using the cyclomatic complexity metric\"", "authors": ["A. H. Watson", " T. J. McCabe ", " D. R. Wallace"]}, {"title": " \"Do developers care about code smells? an exploratory survey\"", "authors": ["A. Yamashita ", " L. Moonen"]}, {"title": " \"Surveying developer knowledge and interest in code smells through online freelance marketplaces\"", "authors": ["A. Yamashita ", " L. Moonen"]}, {"title": " \"To what extent can maintenance problems be predicted by code smell detection?-an empirical study\"", "authors": ["A. Yamashita ", " L. Moonen"]}]},
{"doi": "10.1109/ASE.2013.6693081", "title": "Automated planning for software architecture evolution", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer architecture", "Planning", "Software architecture", "Software", "Connectors", "Measurement", "Availability"], "abstract": "In previous research, we have developed a theoretical framework to help software architects make better decisions when planning software evolution. Our approach is based on representation and analysis of candidate evolution paths-sequences of transitional architectures leading from the current system to a desired target architecture. One problem with this kind of approach is that it imposes a heavy burden on the software architect, who must explicitly define and model these candidate paths. In this paper, we show how automated planning techniques can be used to support automatic generation of evolution paths, relieving this burden on the architect. We illustrate our approach by applying it to a data migration scenario, showing how this architecture evolution problem can be translated into a planning problem and solved using existing automated planning tools.", "author": [{"name": "Jeffrey M. Barnes", "affiliation": "Institute for Software Research Carnegie Mellon University, Pittsburgh, PA"}, {"name": "Ashutosh Pandey", "affiliation": "Institute for Software Research Carnegie Mellon University, Pittsburgh, PA"}, {"name": "David Garlan", "affiliation": "Institute for Software Research Carnegie Mellon University, Pittsburgh, PA"}], "time": "Nov. 2013", "citationCount": "12", "references": [{"title": " \"Evolution styles: Foundations and tool support for software architecture evolution", "authors": ["D. Garlan", " J. M. Barnes", " B. Schmerl", " ", " O. Celiku"]}, {"title": " \"Evolution styles: Foundations and models for software architecture evolution", "authors": ["J. M. Barnes", " D. Garlan", " ", " B. Schmerl"]}, {"title": " \"\u00c6vol: A tool for defining and planning architecture evolution", "authors": ["D. Garlan ", " B. Schmerl"]}, {"title": " \"Challenges in developing a software architecture evolution tool as a plug-in", "authors": ["J. M. Barnes ", " D. Garlan"]}, {"title": " \"Styles d'\u00e9volution dans les architectures logicielles", "authors": ["O. Le Goaer"]}, {"title": " \"Analysis and management of architectural dependencies in iterative release planning", "authors": ["N. Brown", " R. L. Nord", " I. Ozkaya", " ", " M. Pais"]}, {"title": " \"Formalizing architectural refactorings as graph transformation systems", "authors": ["L. Grunske"]}, {"title": " \"PDDL-the Planning Domain Definition Language", "authors": ["D. McDermott", " M. Ghallab", " A. Howe", " C. Knoblock", " A. Ram", " M. Veloso", " D. Weld", " ", " D. Wilkins"]}, {"title": " \"PDDL2.1: An extension to PDDL for expressing temporal planning domains", "authors": ["M. Fox ", " D. Long"]}, {"title": " \"PDDL2.2: The language for the classical part of the 4th International Planning Competition", "authors": ["S. Edelkamp ", " J. Hoffmann"]}, {"title": " \"Preferences and soft constraints in PDDL3", "authors": ["A. Gerevini ", " D. Long"]}, {"title": " \"The loyal opposition comments on Plan Domain Description Languages", "authors": ["J. Frank", " K. Golden", " ", " A. Jonsson"]}, {"title": " \"Compilation of LTL goal formulas into PDDL", "authors": ["S. Cresswell ", " A. Coddington"]}, {"title": " \"An approach to temporal planning and scheduling in domains with predictable exogenous events", "authors": ["A. Gerevini", " A. Saetti", " ", " I. Serina"]}, {"title": " \"Temporal planning with preferences and time-dependent continuous costs", "authors": ["J. Benton", " A. Coles", " ", " A. Coles"]}, {"title": " \"When is temporal planning really temporal?\" Ph.D. dissertation", "authors": ["W. A. Cushing"]}, {"title": " \"Reasoning with time intervals: A logical and computational perspective", "authors": ["G. Sciavicco"]}, {"title": " \"PDDL+: Modelling continuous time-dependent effects", "authors": ["M. Fox ", " D. Long"]}, {"title": " \"TLP-GP: Solving temporally-expressive planning problems", "authors": ["F. Maris ", " P. R\u00e9gnier"]}, {"title": " \"A systematic review of software architecture evolution research", "authors": ["H. P. Breivold", " I. Crnkovic", " ", " M. Larsson"]}, {"title": " \"A framework for classifying and comparing architecture-centric software evolution research", "authors": ["P. Jamshidi", " M. Ghafari", " A. Ahmad", " ", " C. Pahl"]}, {"title": " \"A graph transformation approach to software architecture reconfiguration", "authors": ["M. Wermelinger ", " J. L. Fiadeiro"]}, {"title": " \"Guiding architects in selecting architectural evolution alternatives", "authors": ["S. Ciraci", " H. S\u00f6zer", " ", " M. Aksit"]}, {"title": " \"ACME vs PDDL: Support for dynamic reconfiguration of software architectures", "authors": ["J.-E. M\u00e9hus", " T. Batista", " ", " J. Buisson"]}, {"title": " \"Automated planning for configuration changes", "authors": ["H. Herry", " P. Anderson", " ", " G. Wickler"]}, {"title": " \"Automated planning in a service-oriented architecture", "authors": ["H. Schuschel ", " M. Weske"]}]},
{"doi": "10.1109/ASE.2019.00094", "title": "Cautious Adaptation of Defiant Components", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Drones", "Hospitals", "Payloads", "Batteries", "Software", "Runtime", "Kidney"], "abstract": "Systems-of-systems are formed by the composition of independently created software components. These components are designed to satisfy their individual requirements, rather than the global requirements of the systems-of-systems. We refer to components that cannot be adapted to meet both individual and global requirements as \"defiant\" components. In this paper, we propose a \"cautious\" adaptation approach which supports changing the behaviour of such defiant components under exceptional conditions to satisfy global requirements, while continuing to guarantee the satisfaction of the components' individual requirements. The approach represents both normal and exceptional conditions as scenarios; models the behaviour of exceptional conditions as wrappers implemented using an aspect-oriented technique; and deals with both single and multiple instances of defiant components with different precedence order at runtime. We evaluated an implementation of the approach using drones and boats for an organ delivery application conceived by our industrial partners, in which we assess how the proposed approach help achieve the system-of-systems' global requirements while accommodating increased complexity of hybrid aspects such as multiplicity, precedence ordering, openness and heterogeneity.", "author": [{"name": "Paulo Henrique Maia", "affiliation": "State University of Cear\u00e1, Fortaleza, CE, Brazil"}, {"name": "Lucas Vieira", "affiliation": "State University of Cear\u00e1, Fortaleza, CE, Brazil"}, {"name": "Matheus Chagas", "affiliation": "State University of Cear\u00e1, Fortaleza, CE, Brazil"}, {"name": "Yijun Yu", "affiliation": "Open University, Milton Keynes, United Kingdom"}, {"name": "Andrea Zisman", "affiliation": "Open University, Milton Keynes, United Kingdom"}, {"name": "Bashar Nuseibeh", "affiliation": "Open University, Milton Keynes, United Kingdom"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Awareness requirements for adaptive systems\"", "authors": ["V. E. Silva Souza", " A Lapouchnian", " W. N. Robinson ", " J Mylopoulos"]}, {"title": " \"Run-time efficient probabilistic model checking\"", "authors": ["A Filieri", " C Ghezzi ", " G Tamburrelli"]}, {"title": " \"On the challenges of self-adaptation in systems of systems\"", "authors": ["D Weyns ", " J Andersson"]}, {"title": " \"Software engineering for selfadaptive systems: Research challenges in the provision of assurances\"", "authors": ["R de Lemos", " D Garlan", " C Ghezzi", " H Giese", " J Andersson", " M Litoiu", " ."]}, {"title": " \"Systematic literature review of the objectives techniques kinds and architectures of models at runtime\"", "authors": ["M Szvetits ", " U Zdun"]}, {"title": " \"Lotus@Runtime: A tool for runtime monitoring and verification of selfadaptive systems\"", "authors": ["D. M. Barbosa", " R. G. de Moura Lima", " P. H. M. Maia ", " E. C. Junior"]}, {"title": " \"Formal design and verification of self-adaptive systems with decentralized control\"", "authors": ["P Arcaini", " E Riccobene ", " P Sc"]}, {"title": " \"Identifying conflicting requirements in systems of systems\"", "authors": ["T Viana", " A Zisman ", " A. K. B"]}, {"title": " \"Threat scenario based security risk analysis using use case modeling in information systems\"", "authors": ["K YoungGab ", " C Sungdeok"]}, {"title": " \"Supporting incremental behaviour model elaboration\"", "authors": ["S Uchitel", " D Alrajeh", " S Ben-David", " V Braberman", " M Chechik", " G. De Caso", " ."]}, {"title": " \"A scenario-based information security risk evaluation method\"", "authors": ["X Ban ", " X Tong"]}, {"title": " \"Aspect-oriented programming\"", "authors": ["G Kiczales ", " E Hilsdale"]}, {"title": " \"Model checking aspect-oriented design specification\"", "authors": ["D Xu", " I Alsmadi ", " W Xu"]}, {"title": " \"Inversion of control containers and the dependency injection pattern\"", "authors": ["M Fowler"]}, {"title": " \"Analyzing the evolution of eclipse plugins\"", "authors": ["M Wermelinger ", " Y Yu"]}, {"title": " \"Synthesis of behavioral models from scenarios\"", "authors": ["S Uchitel", " J Kramer ", " J Magee"]}, {"title": " \"Message sequence charts\"", "authors": ["D Harel ", " P. S. Thiagarajan"]}, {"title": " \"Dragonfly: a tool for simulating self-adaptive drone behaviours\"", "authors": ["P. H. Maia", " L Vieira", " M Chagas", " Y Yu", " A Zisman ", " B Nuseibeh"]}, {"title": " \"Adore: An adaptation-oriented requirement modeling approach for systems of systems\"", "authors": ["M Maciel", " P. H. Maia", " F. C. M. B. Oliveira ", " F Maciel"]}, {"title": " \"Mining specifications\"", "authors": ["G Ammons", " R. Bod\u00edk ", " J. R. Larus"]}, {"title": " \"Detecting implied scenarios from execution traces\"", "authors": ["F. C. d. Sousa", " N. C. Mendonca", " S Uchitel ", " J Kramer"]}, {"title": " \"Reverse engineering goal models from legacy code\"", "authors": ["Y Yu", " Y Wang", " J Mylopoulos", " S Liaskos", " A Lapouchnian ", " J. C. S. do Prado Leite"]}, {"title": " \"Mining message sequence graphs\"", "authors": ["S Kumar", " S.-C. Khoo", " A Roychoudhury ", " D Lo"]}, {"title": " \"Goal-oriented requirements engineering: A guided tour\"", "authors": ["A. Van Lamsweerde"]}, {"title": " \"Mining temporal specifications for error detection\"", "authors": ["W. Weimer ", " G. C. Necula"]}, {"title": " \"Engineering trustworthy self-adaptive software with dynamic assurance cases\"", "authors": ["R. Calinescu", " D. Weyns", " S. Gerasimou", " M. U. Iftikhar", " I. Habli ", " T. Kelly"]}, {"title": " \"Fuzzy goals for requirementsdriven adaptation\"", "authors": ["L. Baresi", " L. Pasquale ", " P. Spoletini"]}, {"title": " \"Requirementsdriven design of autonomic application software\"", "authors": ["A. Lapouchnian", " Y. Yu", " S. Liaskos ", " J. Mylopoulos"]}, {"title": " \"Specifying monitoring and switching problems in context\"", "authors": ["M. Salifu", " Y. Yu ", " B. Nuseibeh"]}, {"title": " \"Software engineering for safety: A roadmap\"", "authors": ["R. R. Lutz"]}, {"title": " \"Using obstacle analysis to identify contingency requirements on an unpiloted aerial vehicle\"", "authors": ["R. R. Lutz", " A. Patterson-Hine", " S. Nelson", " C. R. Frost", " D. Tal ", " R. Harris"]}, {"title": " \"Runtime monitoring and resolution of probabilistic obstacles to system goals\"", "authors": ["A. Cailliau ", " A. van Lamsweerde"]}, {"title": " \"Identifying conflicting requirements in systems of systems\"", "authors": ["T. Viana", " A. Zisman ", " A. K. B"]}, {"title": " \"Towards a framework for managing inconsistencies in systems of systems\"", "authors": ["T. Viana", " A. Zisman ", " A. K. B"]}, {"title": " \"Aspect-oriented programming\"", "authors": ["G. Kiczales ", " E. Hilsdale"]}, {"title": " \"Aspect-oriented programming beyond dependency injection\"", "authors": ["S. Chiba ", " R. Ishikawa"]}, {"title": " \"From goals to aspects: Discovering aspects from requirements goal models\"", "authors": ["Y. Yu", " J. C. S. do Prado Leite ", " J. Mylopoulos"]}, {"title": " \"Formal methods for the certification of autonomous unmanned aircraft systems\"", "authors": ["M. Webster", " M. Fisher", " N. Cameron ", " M. Jump"]}, {"title": " \"Security and privacy for the internet of drones: Challenges and solutions\"", "authors": ["C. Lin", " D. He", " N. Kumar", " K. R. Choo", " A. Vinel ", " X. Huang"]}, {"title": " \"Dronology: an incubator for cyber-physical systems research\"", "authors": ["J. Clel", "-Huang", " M. Vierhauser ", " S. Bayley"]}]},
{"doi": "10.1109/ASEW.2015.10", "title": "Automatically Mining Negative Code Examples from Software Developer Q & A Forums", "publisher": "2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)", "keyword": ["Data mining", "Software", "Sentiment analysis", "Computer languages", "Programming", "Education"], "abstract": "In addition to learning good practices and reusing code from mining code examples, programmers can be supported in their learning and code improvement processes through negative, or poorly written, code examples. While it is challenging to identify negative code examples automatically from within source code, we leverage a key insight that the natural language in questions that include code examples posted on forums can provide adequate clues. In this paper, we describe an automatic sentiment analysis-based technique for mining negative code examples from developer question and answer forums along with a technique to automatically mine negative sentiment indicators commonly used by developers, which are used to drive the sentiment-based technique.", "author": [{"name": "Ryan Serva", "affiliation": "University of Delaware, Newark, DE, US"}, {"name": "Zachary R. Senzer", "affiliation": "Computer and Information Sciences University of Delaware, Newark, DE"}, {"name": "Lori Pollock", "affiliation": "Computer and Information Sciences University of Delaware, Newark, DE"}, {"name": "K. Vijay-Shanker", "affiliation": "Computer and Information Sciences University of Delaware, Newark, DE"}], "time": "Nov. 2015", "citationCount": "1", "references": [{"title": " \"What makes apis hard to learn? answers from developers\"", "authors": ["M. Robillard"]}, {"title": " \"Investigating reading techniques for object-oriented framework learning\"", "authors": ["F. Shull", " F. Lanubile ", " V. Basili"]}, {"title": " \"What makes a good code example?: A study of programming q & a in stackoverflow\"", "authors": ["S. Nasehi", " J. Sillito", " F. Maurer ", " C. Burns"]}, {"title": " \"Towards an intelligent code search engine\"", "authors": ["J. Kim", " S. Lee", " S.-w. Hwang ", " S. Kim"]}, {"title": " \"Strathcona example recommendation tool\"", "authors": ["R. Holmes", " R. J. Walker ", " G. C. Murphy"]}, {"title": " \"Mapo: Mining and recommending api usage patterns\"", "authors": ["H. Zhong", " T. Xie", " L. Zhang", " J. Pei ", " H. Mei"]}, {"title": " \"Natural language processing apis and python nltk demos\"", "authors": ["N. Project"]}, {"title": " \"egift: Mining gene information from the literature\"", "authors": ["C. Tudor", " C. Schmidt ", " K. Vijay-Shanker"]}, {"title": " \"Building domain-specific taggers without annotated (domain) data\"", "authors": ["J. Miller", " M. Torii ", " K. Vijay-Shanker"]}, {"title": " \"Spotting working code examples\"", "authors": ["I. Keivanloo", " J. Rilling ", " Y. Zou"]}, {"title": " \"Mining stackoverflow to turn the ide into a self-confident programming prompter\"", "authors": ["L. Ponzanelli", " G. Bavota", " M. Di Penta", " R. Oliveto ", " M. Lanza"]}, {"title": "\"Content analysis of online discussion forums: A comparative analysis of protocols\"", "authors": []}, {"title": " \"Automatic extraction of advice-revealing sentences foradvice mining from online forums\"", "authors": ["A. F. Wicaksono ", " S.-H. Myaeng"]}, {"title": " \"Towards discovering the role of emotions in stack overflow\"", "authors": ["N. Novielli", " F. Calefato ", " F. Lanubile"]}, {"title": " \"Do developers feel emotions? an exploratory analysis of emotions in software artifacts\"", "authors": ["A. Murgia", " P. Tourani", " B. Adams ", " M. Ortu"]}, {"title": " \"On the personality traits of stackoverflow users\"", "authors": ["B. Bazelli", " A. Hindle ", " E. Stroulia"]}]},
{"doi": "10.1109/ASE.2013.6693082", "title": "Automatically synthesizing SQL queries from input-output examples", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Databases", "Skeleton", "Aggregates", "Writing", "Standards", "Syntactics", "Graphical user interfaces"], "abstract": "Many computer end-users, such as research scientists and business analysts, need to frequently query a database, yet lack enough programming knowledge to write a correct SQL query. To alleviate this problem, we present a programming by example technique (and its tool implementation, called SQLSynthesizer) to help end-users automate such query tasks. SQLSynthesizer takes from users an example input and output of how the database should be queried, and then synthesizes a SQL query that reproduces the example output from the example input. If the synthesized SQL query is applied to another, potentially larger, database with a similar schema, the synthesized SQL query produces a corresponding result that is similar to the example output. We evaluated SQLSynthesizer on 23 exercises from a classic database textbook and 5 forum questions about writing SQL queries. SQLSynthesizer synthesized correct answers for 15 textbook exercises and all 5 forum questions, and it did so from relatively small examples.", "author": [{"name": "Sai Zhang", "affiliation": "Computer Science & Engineering, University of Washington, USA"}, {"name": "Yuyin Sun", "affiliation": "Computer Science & Engineering, University of Washington, USA"}], "time": "Nov. 2013", "citationCount": "20", "references": []},
{"doi": "10.1109/ASE.2019.00095", "title": "Active Hotspot: An Issue-Oriented Model to Monitor Software Evolution and Degradation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Software", "Tools", "Computer architecture", "Degradation", "History", "Monitoring"], "abstract": "Architecture degradation has a strong negative impact on software quality and can result in significant losses. Severe software degradation does not happen overnight. Software evolves continuously, through numerous issues, fixing bugs and adding new features, and architecture flaws emerge quietly and largely unnoticed until they grow in scope and significance when the system becomes difficult to maintain. Developers are largely unaware of these flaws or the accumulating debt as they are focused on their immediate tasks of address individual issues. As a consequence, the cumulative impacts of their activities, as they affect the architecture, go unnoticed. To detect these problems early and prevent them from accumulating into severe ones we propose to monitor software evolution by tracking the interactions among files revised to address issues. In particular, we propose and show how we can automatically detect active hotspots, to reveal architecture problems. We have studied hundreds of hotspots along the evolution timelines of 21 open source projects and showed that there exist just a few dominating active hotspots per project at any given time. Moreover, these dominating active hotspots persist over long time periods, and thus deserve special attention. Compared with state-of-the-art design and code smell detection tools we report that, using active hotspots, it is possible to detect signs of software degradation both earlier and more precisely.", "author": [{"name": "Qiong Feng", "affiliation": "Drexel University Philadelphia, PA"}, {"name": "Yuanfang Cai", "affiliation": "Drexel University Philadelphia, PA"}, {"name": "Rick Kazman", "affiliation": "University of Hawaii & SEI/CMU, Honolulu, HI"}, {"name": "Di Cui", "affiliation": "Xi\u2019an Jiaotong University Xi\u2019an, China cuidi"}, {"name": "Ting Liu", "affiliation": "Xi\u2019an Jiaotong University Xi\u2019an, China cuidi"}, {"name": "Hongzhou Fang", "affiliation": "Drexel University Philadelphia, PA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"A cost-benefit framework for making architectural decisions in a business context\"", "authors": ["J. Carriere", " R. Kazman ", " I. Ozkaya"]}, {"title": " \"Estimating the principal of an application's technical debt\"", "authors": ["B. Curtis", " J. Sappidi ", " A. Szynkarski"]}, {"title": " \"Estimating the principal of an application's technical debt\"", "authors": ["B. Curtis", " J. Sappidi ", " A. Szynkarski"]}, {"title": " \"The perception of technical debt in the embedded systems domain: An industrial case study\"", "authors": ["A. Ampatzoglou", " A. Ampatzoglou", " A. Chatzigeorgiou", " P. Avgeriou", " P. Abrahamsson", " A. Martini", " ."]}, {"title": " \"Are developers aware of the architectural impact of their changes?\"", "authors": ["M. Paixao", " J. Krinke", " D. Han", " C. Ragkhitwetsagul ", " M. Harman"]}, {"title": " \"The WyCash portfolio management system\"", "authors": ["W. Cunningham"]}, {"title": " \"A case study in locating the architectural roots of technical debt\"", "authors": ["R. Kazman", " Y. Cai", " R. Mo", " Q. Feng", " L. Xiao", " S. Haziyevy", " ."]}, {"title": " \"On the interest of architectural technical debt: Uncovering the contagious debt phenomenon\"", "authors": ["A. Martini ", " J. Bosch"]}, {"title": " \"Architecture antipatterns: Automatically detectable violations of design principles\"", "authors": ["R. Mo", " Y. Cai", " R. Kazman", " L. Xiao ", " Q. Feng"]}, {"title": " \"Experiences applying automated architecture analysis tool suites\"", "authors": ["R. Mo", " W. Snipes", " Y. Cai", " S. Ramaswamy", " R. Kazman ", " M. Naedele"]}, {"title": " \"Analysing software repositories to understand software evolution\"", "authors": ["M. DAmbros", " H. Gall", " M. Lanza ", " M. Pinzger"]}, {"title": " \"The single responsibility principle\"", "authors": ["R. C. Martin"]}, {"title": " \"The birth growth death and rejuvenation of software maintenance communities\"", "authors": ["Q. Feng", " Y. Cai", " R. Kazman ", " R. Mo"]}, {"title": " \"Quantifying the effect of code smells on maintenance effort\"", "authors": ["D. I. Sj\u00f8berg", " A. Yamashita", " B. C. Anda", " A. Mockus ", " T. Dyba"]}, {"title": " \"Decoupling level: a new metric for architectural maintenance complexity\"", "authors": ["R. Mo", " Y. Cai", " R. Kazman", " L. Xiao ", " Q. Feng"]}, {"title": " \"Hotspot patterns: The formal definition and automatic detection of architecture smells\"", "authors": ["R. Mo", " Y. Cai", " R. Kazman ", " L. Xiao"]}, {"title": " \"The impact of tangled code changes\"", "authors": ["K. Herzig ", " A. Zeller"]}, {"title": " \"Helping developers help themselves: Automatic decomposition of code review change-sets\"", "authors": ["M. Barnett", " C. Bird", " J. Brunet ", " S. K. Lahiri"]}, {"title": " \"Types of software evolution and software maintenance\"", "authors": ["N. Chapin", " J. E. Hale", " K. M. Khan", " J. F. Ramil ", " W.-G. Tan"]}, {"title": " \"The past present and future of software evolution\"", "authors": ["M. W. Godfrey ", " D. M. German"]}, {"title": " \"Evolution in open source software: A case study\"", "authors": ["M. W. Godfrey ", " Q. Tu"]}, {"title": " \"Mining large software compilations over time: another perspective of software evolution\"", "authors": ["G. Robles", " J. M. Gonzalez-Barahona", " M. Michlmayr ", " J. J. Amor"]}, {"title": " \"Forecasting java software evolution trends employing network models\"", "authors": ["T. Chaikalis ", " A. Chatzigeorgiou"]}, {"title": " \"Architectural refactoring: A task-centric view on software evolution\"", "authors": ["O. Zimmermann"]}, {"title": " \"Identifying and quantifying architectural debt\"", "authors": ["L. Xiao", " Y. Cai", " R. Kazman", " R. Mo ", " Q. Feng"]}, {"title": " \"Design rule spaces: A new form of architecture insight\"", "authors": ["L. Xiao", " Y. Cai ", " R. Kazman"]}, {"title": " \"Bug propagation through code cloning: An empirical study\"", "authors": ["M. Mondal", " C. K. Roy ", " K. A. Schneider"]}, {"title": " \"Predicting change propagation in software systems\"", "authors": ["A. E. Hassan ", " R. C. Holt"]}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " A. Zeller", " P. Weissgerber ", " S. Diehl"]}, {"title": " \"Mining software repositories for traceability links\"", "authors": ["H. Kagdi", " J. I. Maletic ", " B. Sharif"]}, {"title": " \"Chianti: a tool for change impact analysis of java programs\"", "authors": ["X. Ren", " F. Shah", " F. Tip", " B. G. Ryder ", " O. Chesley"]}, {"title": " \"An empirical study of multi-entity changes in real bug fixes\"", "authors": ["Y. Wang", " N. Meng ", " H. Zhong"]}, {"title": " \"Technical debt: From metaphor to theory and practice\"", "authors": ["P. Kruchten", " R. L. Nord ", " I. Ozkaya"]}, {"title": " \"A controlled experiment investigation of an object-oriented design heuristic for maintainability\"", "authors": ["I. Deligiannis", " I. Stamelos", " L. Angelis", " M. Roumeliotis ", " M. Shepperd"]}, {"title": " \"Assessing the effect of clones on changeability\"", "authors": ["A. Lozano ", " M. Wermelinger"]}, {"title": " \"An empirical study of the impact of two antipatterns blob and spaghetti code on program comprehension\"", "authors": ["M. Abbes", " F. Khomh", " Y.-G. Gueheneuc ", " G. Antoniol"]}, {"title": " \"An exploratory study of the impact of code smells on software change-proneness\"", "authors": ["F. Khomh", " M. Di ", " Y.-G. Gueheneuc"]}, {"title": " \"Detecting architecturally-relevant code smells in evolving software systems\"", "authors": ["I. M. Bertran"]}, {"title": " \"On the influence of human factors for identifying code smells: A multi-trial empirical study\"", "authors": ["R. M. de Mello", " R. F. Oliveira ", " A. F. Garcia"]}, {"title": " \"Competitive coevolutionary code-smells detection\"", "authors": ["M. Boussaa", " W. Kessentini", " M. Kessentini", " S. Bechikh ", " S. B. Chikha"]}, {"title": " \"Detection strategies: Metrics-based rules for detecting design flaws\"", "authors": ["R. Marinescu"]}, {"title": " \"Decor: A method for the specification and detection of code and design smells\"", "authors": ["N. Moha", " Y.-G. Gueheneuc", " L. Duchien ", " A.-F. Le Meur"]}, {"title": " \"Detecting bad smells in source code using change history information\"", "authors": ["F. Palomba", " G. Bavota", " M. Di Penta", " R. Oliveto", " A. De Lucia ", " D. Poshyvanyk"]}, {"title": " \"When and why your code starts to smell bad\"", "authors": ["M. Tufano", " F. Palomba", " G. Bavota", " R. Oliveto", " M. Di Penta", " A. De Lucia", " ."]}, {"title": " \"Patterns and antipatterns\"", "authors": ["A. Koenig"]}, {"title": " \"An\u00b4 exploratory study of the impact of antipatterns on class change-and fault-proneness\"", "authors": ["F. Khomh", " M. Di Penta", " Y.-G. Gueh\u00e9neuc ", " G. Antoniol"]}, {"title": " \"Exploring the impact of inter-smell relations on software maintainability: An empirical study\"", "authors": ["A. Yamashita ", " L. Moonen"]}]},
{"doi": "10.1109/ASE.2013.6693083", "title": "SEDGE: Symbolic example data generation for dataflow programs", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Concrete", "Cognition", "Benchmark testing", "Programming", "Educational institutions", "Data processing", "Extraterrestrial measurements"], "abstract": "Exhaustive, automatic testing of dataflow (esp. mapreduce) programs has emerged as an important challenge. Past work demonstrated effective ways to generate small example data sets that exercise operators in the Pig platform, used to generate Hadoop map-reduce programs. Although such prior techniques attempt to cover all cases of operator use, in practice they often fail. Our SEDGE system addresses these completeness problems: for every dataflow operator, we produce data aiming to cover all cases that arise in the dataflow program (e.g., both passing and failing a filter). SEDGE relies on transforming the program into symbolic constraints, and solving the constraints using a symbolic reasoning engine (a powerful SMT solver), while using input data as concrete aids in the solution process. The approach resembles dynamic-symbolic (a.k.a. \u201cconcolic\u201d) execution in a conventional programming language, adapted to the unique features of the dataflow domain. In third-party benchmarks, SEDGE achieves higher coverage than past techniques for 5 out of 20 PigMix benchmarks and 7 out of 11 SDSS benchmarks and (with equal coverage for the rest of the benchmarks). We also show that our targeting of the high-level dataflow language pays off: for complex programs, state-of-the-art dynamic-symbolic execution at the level of the generated map-reduce code (instead of the original dataflow program) requires many more test cases or achieves much lower coverage than our approach.", "author": [{"name": "Kaituo Li", "affiliation": "Computer Science Department, University of Massachusetts, Amherst, USA"}, {"name": "Christoph Reichenbach", "affiliation": "Institute of Informatics, Goethe University, Frankfurt, Germany"}, {"name": "Yannis Smaragdakis", "affiliation": "Department of Informatics, University of Athens, Greece"}, {"name": "Yanlei Diao", "affiliation": "Computer Science Department, University of Massachusetts, Amherst, USA"}, {"name": "Christoph Csallner", "affiliation": "Computer Science and Engineering, University of Texas at Arlington, USA"}], "time": "Nov. 2013", "citationCount": "6", "references": []},
{"doi": "10.1109/ASE.2019.00096", "title": "Automated Trainability Evaluation for Smart Software Functions", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Measurement", "Software", "Robustness", "Automotive engineering", "Training", "Machine learning", "Automobiles"], "abstract": "More and more software-intensive systems employ machine learning and runtime optimization to improve their functionality by providing advanced features (e. g. personal driving assistants or recommendation engines). Such systems incorporate a number of smart software functions (SSFs) which gradually learn and adapt to the users' preferences. A key property of SSFs is their ability to learn based on data resulting from the interaction with the user (implicit and explicit feedback)-which we call trainability. Newly developed and enhanced features in a SSF must be evaluated based on their effect on the trainability of the system. Despite recent approaches for continuous deployment of machine learning systems, trainability evaluation is not yet part of continuous integration and deployment (CID) pipelines. In this paper, we describe the different facets of trainability for the development of SSFs. We also present our approach for automated trainability evaluation within an automotive CID framework which proposes to use automated quality gates for the continuous evaluation of machine learning models. The results from our indicative evaluation based on real data from eight BMW cars highlight the importance of continuous and rigorous trainability evaluation in the development of SSFs.", "author": [{"name": "Ilias Gerostathopoulos", "affiliation": "Department of Informatics, Technical University of Munich, Garching b. M\u00fcnchen, Germany"}, {"name": "Stefan Kugele", "affiliation": "Department of Informatics, Technical University of Munich, Garching b. M\u00fcnchen, Germany"}, {"name": "Christoph Segler", "affiliation": "BMW Group Research, New Technologies, Innovations, Garching b. M\u00fcnchen, Germany"}, {"name": "Tomas Bures", "affiliation": "Charles University in Prague"}, {"name": "Alois Knoll", "affiliation": "Department of Informatics, Technical University of Munich, Garching b. M\u00fcnchen, Germany"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Experimental Evaluation of Heuristic Optimization Algorithms: A Tutorial\"", "authors": ["R. L. Rardin ", " R. Uzsoy"]}, {"title": " \"A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering\"", "authors": ["S. Wang", " S. Ali", " T. Yue", " Y. Li ", " M. Liaaen"]}, {"title": " \"Clustering algorithms: A comparative approach\"", "authors": ["M. Z. Rodriguez", " C. H. Comin", " D. Casanova", " O. M. Bruno", " D. R. Amancio", " L. d. F. Costa", " ."]}, {"title": " \"An extensive comparative study of cluster validity indices\"", "authors": ["O. Arbelaitz", " I. Gurrutxaga", " J. Muguerza", " J. M. P\u00e9rez ", " I. Perona"]}, {"title": " \"Online controlled experiments and A/B testing\"", "authors": ["R. Kohavi ", " R. Longbotham"]}, {"title": " \"Trace-based test selection to support continuous integration in the automotive industry\"", "authors": ["S. V\u00f6st ", " S. Wagner"]}, {"title": " \"Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry\"", "authors": ["E. Knauss", " P. Pelliccione", " R. Heldal", " M. \u00c5gren", " S. Hellman ", " D. Maniette"]}, {"title": " \"Transparency and contracts: continuous integration and delivery in the automotive ecosystem\"", "authors": ["R. van der Valk", " P. Pelliccione", " P. Lago", " R. Heldal", " E. Knauss ", " J. Juul"]}, {"title": " \"Continuous integration of machine learning models with ease.ml/ci: Towards a rigorous yet practical treatment\"", "authors": ["C. Renggli", " B. Karlas", " B. Ding", " F. Liu", " K. Schawinski", " W. Wu", " ."]}]},
{"doi": "10.1109/ASE.2013.6693084", "title": "Characteristic studies of loop problems for structural test generation via symbolic execution", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Security", "Open source software", "Software testing", "Search problems", "Debugging"], "abstract": "Dynamic Symbolic Execution (DSE) is a state-of-the-art test-generation approach that systematically explores program paths to generate high-covering tests. In DSE, the presence of loops (especially unbound loops) can cause an enormous or even infinite number of paths to be explored. There exist techniques (such as bounded iteration, heuristics, and summarization) that assist DSE in addressing loop problems. However, there exists no literature-survey or empirical work that shows the pervasiveness of loop problems or identifies challenges faced by these techniques on real-world open-source applications. To fill this gap, we provide characteristic studies to guide future research on addressing loop problems for DSE. Our proposed study methodology starts with conducting a literature-survey study to investigate how technical problems such as loop problems compromise automated software-engineering tasks such as test generation, and which existing techniques are proposed to deal with such technical problems. Then the study methodology continues with conducting an empirical study of applying the existing techniques on real-world software applications sampled based on the literature-survey results and major open-source project hostings. This empirical study investigates the pervasiveness of the technical problems and how well existing techniques can address such problems among real-world software applications. Based on such study methodology, our two-phase characteristic studies identify that bounded iteration and heuristics are effective in addressing loop problems when used properly. Our studies further identify challenges faced by these techniques and provide guidelines for effectively addressing these challenges.", "author": [{"name": "Xusheng Xiao", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Sihan Li", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Tao Xie", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Nikolai Tillmann", "affiliation": "Microsoft Research, Redmond, WA, USA"}], "time": "Nov. 2013", "citationCount": "21", "references": []},
{"doi": "10.1109/ASE.2019.00097", "title": "The Impact of Structure on Software Merging: Semistructured Versus Structured Merge", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Merging", "Software", "Syntactics", "Interference", "Semantics", "Periodic structures"], "abstract": "Merge conflicts often occur when developers concurrently change the same code artifacts. While state of practice unstructured merge tools (e.g Git merge) try to automatically resolve merge conflicts based on textual similarity, semistructured and structured merge tools try to go further by exploiting the syntactic structure and semantics of the artifacts involved. Although there is evidence that semistructured merge has significant advantages over unstructured merge, and that structured merge reports significantly fewer conflicts than unstructured merge, it is unknown how semistructured merge compares with structured merge. To help developers decide which kind of tool to use, we compare semistructured and structured merge in an empirical study by reproducing more than 40,000 merge scenarios from more than 500 projects. In particular, we assess how often the two merge strategies report different results, we identify conflicts incorrectly reported by one but not by the other (false positives), and conflicts correctly reported by one but missed by the other (false negatives). Our results show that semistructured and structured merge differ in 24% of the scenarios with conflicts. Semistructured merge reports more false positives, whereas structured merge has more false negatives. Finally, we found that adapting a semistructured merge tool to resolve a particular kind of conflict makes semistructured and structured merge even closer.", "author": [{"name": "Guilherme Cavalcanti", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}, {"name": "Paulo Borba", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}, {"name": "Georg Seibt", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Sven Apel", "affiliation": "Saarland University, Saarbr\u00fccken, Germany"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"A state-of-the-art survey on software merging\"", "authors": ["T. Mens"]}, {"title": " \"Mining workspace updates in cvs\"", "authors": ["T. Zimmermann"]}, {"title": " \"A formal investigation of diff3\"", "authors": ["S. Khanna", " K. Kunal ", " B. C. Pierce"]}, {"title": " \"Structured merge with autotuning: Balancing precision and performance\"", "authors": ["S. Apel", " O. Lessenich ", " C. Lengauer"]}, {"title": " \"Jdiff: A differencing technique and tool for object-oriented programs\"", "authors": ["T. Apiwattanapong", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Cdiff: A syntax directed differencer for c++ programs\"", "authors": ["J. E. Grass"]}, {"title": " \"Structure-oriented merging of revisions of software documents\"", "authors": ["B. Westfechtel"]}, {"title": " \"Semistructured merge: Rethinking merge in revision control systems\"", "authors": ["S. Apel", " J. Liebig", " B. Br", "l", " C. Lengauer ", " C. Kastner"]}, {"title": " \"Evaluating and improving semistructured merge\"", "authors": ["G. Cavalcanti", " P. Borba ", " P. Accioly"]}, {"title": " \"Assessing semistructured merge in version control systems: A replicated experiment\"", "authors": ["G. Cavalcanti", " P. Accioly ", " P. Borba"]}, {"title": " \"Integrating noninterfering versions of programs\"", "authors": ["S. Horwitz", " J. Prins ", " T. Reps"]}, {"title": " \"On merging software extensions\"", "authors": ["V. Berzins"]}, {"title": " \"Curating github for engineered software projects\"", "authors": ["N. Munaiah", " S. Kroh", " C. Cabrey ", " M. Nagappan"]}, {"title": " \"Oops my tests broke the build: An explorative analysis of travis ci with github\"", "authors": ["M. Beller", " G. Gousios ", " A. Zaidman"]}, {"title": " \"Diversity in software engineering research\"", "authors": ["M. Nagappan", " T. Zimmermann ", " C. Bird"]}, {"title": " \"Balancing precision and performance in structured merge\"", "authors": ["O. Lessenich", " S. Apel ", " C. Lengauer"]}, {"title": " \"Renaming and shifted code in structured merging: Looking ahead for precision and performance\"", "authors": ["O. Lessenich", " S. Apel", " C. Kastner", " G. Seibt ", " J. Siegmund"]}, {"title": " \"Conflict resolution for structured merge via version space algebra\"", "authors": ["F. Zhu ", " F. He"]}, {"title": " \"Enhancing precision of structured merge by proper tree matching\"", "authors": ["F. Zhu", " F. He ", " Q. Yu"]}, {"title": " \"Sample size estimation: how many individuals should be studied?\"", "authors": ["J. Eng"]}, {"title": " \"Syntactic software merging\"", "authors": ["J. Buffenbarger"]}, {"title": " \"Object-oriented software configuration management\"", "authors": ["T. N. Nguyen"]}, {"title": " \"Effective software merging in the presence of object-oriented refactorings\"", "authors": ["D. Dig", " K. Manzoor", " R. E. Johnson ", " T. N. Nguyen"]}, {"title": " \"Fine-grained and accurate source code differencing\"", "authors": ["J.-R. Falleri", " F. Mor", "at", " X. Blanc", " M. Martinez ", " M. Monperrus"]}, {"title": " \"Precise version control of trees with line-based version control systems\"", "authors": ["D. Asenov", " B. Guenat", " P. Muller ", " M. Otth"]}, {"title": " \"Software merge: Semantics of combining changes to programs\"", "authors": ["V. Berzins"]}, {"title": " \"Semantic diff: A tool for summarizing the effects of modifications\"", "authors": ["D. Jackson ", " D. A. Ladd"]}, {"title": " \"Program integration for languages with procedure calls\"", "authors": ["D. Binkley", " S. Horwitz ", " T. Reps"]}, {"title": " \"Verified three-way program merge\"", "authors": ["M. Sousa", " I. Dillig ", " S. K. Lahiri"]}, {"title": " \"Proactive detection of collaboration conflicts\"", "authors": ["Y. Brun", " R. Holmes", " M. D. Ernst ", " D. Notkin"]}, {"title": " \"Cassandra: Proactive conflict minimization through optimized task scheduling\"", "authors": ["B. K. Kasi ", " A. Sarma"]}, {"title": " \"How we resolve conflict: an empirical study of method-level conflict resolution\"", "authors": ["R. Yuzuki", " H. Hata ", " K. Matsumoto"]}, {"title": " \"Modern release engineering in a nutshell \u2013 why researchers should care\"", "authors": ["B. Adams ", " S. McIntosh"]}, {"title": " \"Software engineering at google\"", "authors": ["F. Henderson"]}, {"title": " \"On the nature of merge conflicts: a study of 2731 open source java projects hosted by github\"", "authors": ["G. G. L. Menezes", " L. G. P. Murta", " M. O. Barros ", " A. Van Der Hoek"]}, {"title": " \"Analyzing conflict predictors in open-source java projects\"", "authors": ["P. Accioly", " P. Borba", " L. Silva ", " G. Cavalcanti"]}, {"title": " \"Understanding semi-structured merge conflict characteristics in open-source java projects\"", "authors": ["P. Accioly", " P. Borba ", " G. Cavalcanti"]}]},
{"doi": "10.1109/ASE.2013.6693085", "title": "Entropy-based test generation for improved fault localization", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Entropy", "Cognition", "Uncertainty", "Debugging", "Genetic algorithms", "Sociology", "Statistics"], "abstract": "Spectrum-based Bayesian reasoning can effectively rank candidate fault locations based on passing/failing test cases, but the diagnostic quality highly depends on the size and diversity of the underlying test suite. As test suites in practice often do not exhibit the necessary properties, we present a technique to extend existing test suites with new test cases that optimize the diagnostic quality. We apply probability theory concepts to guide test case generation using entropy, such that the amount of uncertainty in the diagnostic ranking is minimized. Our ENTBUG prototype extends the search-based test generation tool EVOSUITE to use entropy in the fitness function of its underlying genetic algorithm, and we applied it to seven real faults. Empirical results show that our approach reduces the entropy of the diagnostic ranking by 49% on average (compared to using the original test suite), leading to a 91% average reduction of diagnosis candidates needed to inspect to find the true faulty one.", "author": [{"name": "Jos\u00e9 Campos", "affiliation": "Faculty of Engineering of University of Porto, Portugal"}, {"name": "Rui Abreu", "affiliation": "Faculty of Engineering of University of Porto, Portugal"}, {"name": "Gordon Fraser", "affiliation": "University of Sheffield, United Kindom"}, {"name": "Marcelo d'Amorim", "affiliation": "Federal University of Pernambuco, Brazil"}], "time": "Nov. 2013", "citationCount": "24", "references": [{"title": " \"A Low-Cost Approximate Minimal Hitting Set Algorithm and its Application to Model-Based Diagnosis", "authors": ["R. Abreu ", " A. J. C. van Gemund"]}, {"title": " \"Spectrum-Based Multiple Fault Localization", "authors": ["R. Abreu", " P. Zoeteweij", " ", " A. J. C. v. Gemund"]}, {"title": " \"A practical evaluation of spectrum-based fault localization", "authors": ["R. Abreu", " P. Zoeteweij", " R. Golsteijn", " ", " A. J. Van Gemund"]}, {"title": " \"Incremental Regression Testing", "authors": ["H. Agrawal", " J. R. Horgan", " E. W. Krauser", " ", " S. London"]}, {"title": " \"Evaluating the Accuracy of Fault Localization Techniques", "authors": ["S. Ali", " J. H. Andrews", " T. Dh", "apani", " ", " W. Wang"]}, {"title": " \"Faultlocalization using dynamic slicing and change impact analysis", "authors": ["E. Alves", " M. Gligoric", " V. Jagannath", " ", " M. d'Amorim"]}, {"title": " \"An orchestrated survey on automated software test case generation", "authors": ["S. An", "", " E. Burke", " T. Y. Chen", " J. Clark", " M. B. Cohen", " W. Grieskamp", " M. Harman", " M. J. Harrold", " ", " P. McMinn"]}, {"title": " \"Directed Test Generation for Effective Fault Localization", "authors": ["S. Artzi", " J. Dolby", " F. Tip", " ", " M. Pistoia"]}, {"title": " \"Improving Test Suites for Efficient Fault Localization", "authors": ["B. Baudry", " F. Fleurey", " ", " Y. Le Traon"]}, {"title": " \"Minimizing reproduction of software failures", "authors": ["M. Burger ", " A. Zeller"]}, {"title": " \"Software hell", "authors": ["J. Carey", " N. Gross", " M. Stepanek", " ", " O. Port"]}, {"title": " \"Diagnosing multiple faults", "authors": ["J. de Kleer ", " B. C. Williams"]}, {"title": " \"Diagnosing multiple persistent and intermittent faults", "authors": ["J. De Kleer"]}, {"title": " \"Computing minimal diagnoses by greedy stochastic search", "authors": ["A. Feldman", " G. Provan", " ", " A. Van Gemund"]}, {"title": " \"A two-step hierarchical algorithm for model-based diagnosis", "authors": ["A. Feldman ", " A. van Gemund"]}, {"title": " \"EvoSuite: Automatic Test Suite Generation for Object-Oriented Software", "authors": ["G. Fraser ", " A. Arcuri"]}, {"title": " \"Mutation-driven generation of unit tests and oracles", "authors": ["G. Fraser ", " A. Zeller"]}, {"title": " \"DART: Directed Automated Random Testing", "authors": ["P. Godefroid", " N. Klarlund", " ", " K. Sen"]}, {"title": " \"Prioritizing tests for fault localization through ambiguity group reduction", "authors": ["A. Gonzalez-Sanchez", " R. Abreu", " H.-G. Gross", " ", " A. van Gemund"]}, {"title": " \"Spectrum-Based Sequential Diagnosis", "authors": ["A. Gonzalez-Sanchez", " R. Abreu", " H.-G. Gross", " ", " A. J. van Gemund"]}, {"title": " \"Modeling the Diagnostic Efficiency of Regression Test Suites", "authors": ["A. Gonzalez-Sanchez", " H.-G. Gross", " ", " A. J. C. van Gemund"]}, {"title": " \"Prioritizing Tests for Software Fault Localization", "authors": ["A. Gonzalez-Sanchez", " E. Piel", " H.-G. Gross", " ", " A. J. C. van Gemund"]}, {"title": " \"An information theory approach to diagnosis", "authors": ["R. A. Johnson"]}, {"title": " \"Visualization of Test Information to Assist Fault Localization", "authors": ["J. A. Jones", " M. J. Harrold", " ", " J. Stasko"]}, {"title": " \"Evaluating Models for Model-Based Debugging", "authors": ["W. Mayer ", " M. Stumptner"]}, {"title": " \"Search-Based Software Test Data Generation: A Survey", "authors": ["P. McMinn"]}, {"title": " \"Are automated debugging techniques actually helping programmers?\" in Proceedings of the 2011 International Symposium on Software Testing and Analysis", "authors": ["C. Parnin ", " A. Orso"]}, {"title": " \"CrowdOracles: Can the Crowd Solve the Oracle Problem?\" in Proceedings of the 6th International Conference on Software Testing", "authors": ["F. Pastore", " L. Mariani", " ", " G. Fraser"]}, {"title": " \"Fault Localization With Nearest Neighbor Queries", "authors": ["M. Renieris ", " S. P. Reiss"]}, {"title": " \"Isolating failure causes through test case generation", "authors": ["J. R\u00f6\u00dfler", " G. Fraser", " A. Zeller", " ", " A. Orso"]}, {"title": " \"Reconstructing Core Dumps", "authors": ["J. R\u00f6\u00dfler", " A. Zeller", " G. Fraser", " C. Zamfir", " ", " G. C"]}, {"title": " \"Lightweight fault-localization using multiple coverage types", "authors": ["R. Santelices", " J. A. Jones", " Y. Yu", " ", " M. J. Harrold"]}, {"title": " \"CUTE: A Concolic Unit Testing Engine for C", "authors": ["K. Sen", " D. Marinov", " ", " G. Agha"]}, {"title": " \"Software Fault Localization Using DStar (D*)", "authors": ["W. E. Wong", " V. Debroy", " Y. Li", " ", " R. Gao"]}, {"title": " \"Bridging the Gap Between Slicing and Model-based Diagnosis", "authors": ["F. Wotawa"]}, {"title": " \"Model-Based Debugging or How to Diagnose Programs Automatically", "authors": ["F. Wotawa", " M. Stumptner", " ", " W. Mayer"]}, {"title": " \"Fault localization prioritization: Comparing information-theoretic and coverage-based approaches", "authors": ["S. Yoo", " M. Harman", " ", " D. Clark"]}]},
{"doi": "10.1109/ASE.2019.00098", "title": "Semistructured Merge in JavaScript Systems", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Grammar", "Merging", "Syntactics", "Engines", "Java", "Annotations"], "abstract": "Industry widely uses unstructured merge tools that rely on textual analysis to detect and resolve conflicts between code contributions. Semistructured merge tools go further by partially exploring the syntactic structure of code artifacts, and, as a consequence, obtaining significant merge accuracy gains for Java-like languages. To understand whether semistructured merge and the observed gains generalize to other kinds of languages, we implement two semistructured merge tools for JavaScript, and compare them to an unstructured tool. We find that current semistructured merge algorithms and frameworks are not directly applicable for scripting languages like JavaScript. By adapting the algorithms, and studying 10,345 merge scenarios from 50 JavaScript projects on GitHub, we find evidence that our JavaScript tools report fewer spurious conflicts than unstructured merge, without compromising the correctness of the merging process. The gains, however, are much smaller than the ones observed for Java-like languages, suggesting that semistructured merge advantages might be limited for languages that allow both commutative and non-commutative declarations at the same syntactic level.", "author": [{"name": "Alberto Trindade Tavares", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}, {"name": "Paulo Borba", "affiliation": "Federal University of Pernambuco"}, {"name": "Guilherme Cavalcanti", "affiliation": "Federal University of Pernambuco"}, {"name": "S\u00e9rgio Soares", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Proactive Detection of Collaboration Conflicts\"", "authors": ["Y. Brun", " R. Holmes", " M. D. Ernst ", " D. Notkin"]}, {"title": " \"Cassandra: Proactive Conflict Minimization Through Optimized Task Scheduling\"", "authors": ["B. K. Kasi ", " A. Sarma"]}, {"title": " \"Integrating Noninterfering Versions of Programs\"", "authors": ["S. Horwitz", " J. Prins ", " T. Reps"]}, {"title": " \"Using a Configuration Management Tool to Coordinate Software Development\"", "authors": ["R. E. Grinter"]}, {"title": " \"Parallel Changes in Large-scale Software Development: an observational case study\"", "authors": ["D. E. Perry", " H. P. Siy ", " L. G. Votta"]}, {"title": " \"Process Model and Awareness in SCM\"", "authors": ["J. Estublier ", " S. Garcia"]}, {"title": " \"Mining Workspace Updates in CVS\"", "authors": ["T. Zimmermann"]}, {"title": " \"A State-of-the-Art Survey on Software Merging\"", "authors": ["T. Mens"]}, {"title": " \"Operation-based merging\"", "authors": ["E. Lippe ", " N. Oosterom"]}, {"title": " \"A Formal Investigation of Diff3\"", "authors": ["S. Khanna", " K. Kunal ", " B. C. Pierce"]}, {"title": " \"Semistructured merge: Rethinking merge in revision control systems\"", "authors": ["S. Apel", " J. Liebig", " B. Br", "l", " C. Lengauer ", " C. K\u00e4stner"]}, {"title": " \"Assessing Semistructured Merge in Version Control Systems: A Replicated Experiment\"", "authors": ["G. Cavalcanti", " P. Accioly ", " P. Borba"]}, {"title": " \"Evaluating and improving semistructured merge\"", "authors": ["G. Cavalcanti", " P. Accioly ", " P. Borba"]}, {"title": " \"Software engineering for the web: the state of the practice\"", "authors": ["A. Nederlof", " A. Mesbah ", " A. V. Deursen"]}, {"title": " \"Identifying classes in legacy JavaScript code\"", "authors": ["L. H. Silva", " M. T. Valente", " A. Bergel", " N. Anquetil ", " A. Etien"]}, {"title": " \"Structure-oriented merging of revisions of software documents\"", "authors": ["B. Westfechtel"]}, {"title": " \"Syntactic Software Merging\"", "authors": ["J. Buffenbarger"]}, {"title": " \"Cdiff: A Syntax Directed Differencer for C++ Programs\"", "authors": ["J. E. Grass"]}, {"title": " \"JDiff: A Differencing Technique and Tool for Object-oriented Programs\"", "authors": ["T. Apiwattanapong", " A. Orso ", " M. J. Harrold"]}, {"title": " \"Superimposition: A language independent approach to software composition\"", "authors": ["S. Apel ", " C. Lengauer"]}, {"title": " \"A Calculus for Uniform Feature Composition\"", "authors": ["S. Apel ", " D. Hutchins"]}, {"title": " \"An Algebraic Foundation for Automatic Feature-Based Program Synthesis\"", "authors": ["S. Apel", " C. Lengauer", " B. M\u00f6ller ", " C. K\u00e4stne"]}, {"title": " \"FSecurity policies and security models\"", "authors": ["J. A. Goguen ", " J. Meseguer"]}, {"title": " \"What's in a GitHub Star? Understanding Repository Starring Practices in a Social Coding Platform\"", "authors": ["H. Borges ", " M. T. Valente"]}, {"title": " \"On a Test of Whether one of Two Random Variables is Stochastically Larger than the Other\"", "authors": ["H. Mann ", " D. Whitney"]}, {"title": " \"The Promises and Perils of Mining Git\"", "authors": ["C. Bird", " P. C. Rigby", " E. T. Barr", " D. J. Hamilton", " D. M. German ", " P. Devanbu"]}, {"title": " \"Understanding semi-structured merge conflict characteristics in open-source Java projects\"", "authors": ["P. Accioly", " P. Borba ", " G. Cavalcanti"]}, {"title": " \"Structured Merge with Auto-tuning: Balancing Precision and Performance\"", "authors": ["S. Apel", " O. Lessenich ", " C. Lengauer"]}, {"title": " \"Program Integration for Languages with Procedure Calls\"", "authors": ["D. Binkley", " S. Horwitz ", " T. Reps"]}, {"title": " \"A program integration algorithm that accommodates semantics-preserving transformations\"", "authors": ["W. Yang", " S. Horwitz ", " T. Reps"]}, {"title": " \"To lock or not to lock: That is the question\"", "authors": ["J. G. Prudencio", " L. Murta", " C. Werner ", " R. Cepeda"]}, {"title": " \"Evaluating the Branch Merging Effort in Version Control Systems\"", "authors": ["R. Santos ", " L. Murta"]}]},
{"doi": "10.1109/ASE.2013.6693086", "title": "Detecting bad smells in source code using change history information", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["History", "Feature extraction", "Surgery", "Association rules", "Detectors", "Measurement"], "abstract": "Code smells represent symptoms of poor implementation choices. Previous studies found that these smells make source code more difficult to maintain, possibly also increasing its fault-proneness. There are several approaches that identify smells based on code analysis techniques. However, we observe that many code smells are intrinsically characterized by how code elements change over time. Thus, relying solely on structural information may not be sufficient to detect all the smells accurately. We propose an approach to detect five different code smells, namely Divergent Change, Shotgun Surgery, Parallel Inheritance, Blob, and Feature Envy, by exploiting change history information mined from versioning systems. We applied approach, coined as HIST (Historical Information for Smell deTection), to eight software projects written in Java, and wherever possible compared with existing state-of-the-art smell detectors based on source code analysis. The results indicate that HIST's precision ranges between 61% and 80%, and its recall ranges between 61% and 100%. More importantly, the results confirm that HIST is able to identify code smells that cannot be identified through approaches solely based on code analysis.", "author": [{"name": "Fabio Palomba", "affiliation": "University of Salerno, Fisciano, S, Italy"}, {"name": "Gabriele Bavota", "affiliation": "University of Sannio, Benevento, Italy"}, {"name": "Massimiliano Di Penta", "affiliation": "University of Sannio, Benevento, Italy"}, {"name": "Rocco Oliveto", "affiliation": "University of Molise, Pesche, Italy"}, {"name": "Andrea De Lucia", "affiliation": "University of Salerno, Fisciano, S, Italy"}, {"name": "Denys Poshyvanyk", "affiliation": "The College of William and Mary, Williamsburg, VA, USA"}], "time": "Nov. 2013", "citationCount": "93", "references": [{"title": " \"An empirical study of the impact of two antipatterns", "authors": ["M. Abbes", " F. Khomh", " Y.-G. Gu\u00e9h\u00e9neuc", " ", " G. Antoniol"]}, {"title": " \"An exploratory study of the impact of antipatterns on class change- and fault-proneness", "authors": ["F. Khomh", " M. Di Penta", " Y.-G. Gu\u00e9h\u00e9neuc", " ", " G. Antoniol"]}, {"title": " \"An exploratory study of the impact of code smells on software change-proneness", "authors": ["F. Khomh", " M. Di Penta", " ", " Y.-G. Gu\u00e9h\u00e9neuc"]}, {"title": " \"Decor: A method for the specification and detection of code and design smells", "authors": ["N. Moha", " Y.-G. Gu\u00e9h\u00e9neuc", " L. Duchien", " ", " A.-F. L. Meur"]}, {"title": " \"Identification of move method refactoring opportunities", "authors": ["N. Tsantalis ", " A. Chatzigeorgiou"]}, {"title": " \"Detection strategies: Metrics-based rules for detecting design flaws", "authors": ["R. Marinescu"]}, {"title": " \"A complexity measure", "authors": ["T. McCabe"]}, {"title": " \"Using history information to improve design flaws detection", "authors": ["D. Ratiu", " S. Ducasse", " T. G\u00eerba", " ", " R. Marinescu"]}, {"title": " \"Assessing the impact of bad smells using historical information", "authors": ["A. Lozano", " M. Wermelinger", " ", " B. Nuseibeh"]}, {"title": " \"Jdeodorant: identification and application of extract class refactorings", "authors": ["M. Fokaefs", " N. Tsantalis", " E. Stroulia", " ", " A. Chatzigeorgiou"]}, {"title": " \"Mining association rules between sets of items in large databases", "authors": ["R. Agrawal", " T. Imielinski", " ", " A. N. Swami"]}, {"title": " \"Mining version histories to guide software changes", "authors": ["T. Zimmermann", " P. Weisgerber", " S. Diehl", " ", " A. Zeller"]}, {"title": " \"A unified framework for cohesion measurement in object-orientedsystems", "authors": ["L. C. Bri", "", " J. W. Daly", " ", " J. W\u00fcst"]}, {"title": " \"On the use of line co-change for identifying crosscutting concern code", "authors": ["G. Canfora", " L. Cerulo", " ", " M. Di Penta"]}, {"title": " \"Predicting source code changes by mining change history", "authors": ["A. T. T. Ying", " G. C. Murphy", " R. Ng", " ", " M. C. Chu-Carroll"]}, {"title": " \"Blending conceptual and evolutionary couplings to support change impact analysis in source code", "authors": ["H. Kagdi", " M. Gethers", " D. Poshyvanyk", " ", " M. Collard"]}, {"title": " \"Detecting defects in object-oriented designs: using reading techniques to increase software quality", "authors": ["G. Travassos", " F. Shull", " M. Fredericks", " ", " V. R. Basili"]}, {"title": " \"Metrics based refactoring", "authors": ["F. Simon", " F. Steinbr", " ", " C. Lewerentz"]}, {"title": " \"Java quality assurance by detecting code smells", "authors": ["E. van Emden ", " L. Moonen"]}, {"title": " \"Product metrics for automatic identification of \"bad smell\" design problems in java source-code", "authors": ["M. J. Munro"]}, {"title": " \"A bayesian approach for the detection of code and design smells", "authors": ["F. Khomh", " S. Vaucher", " Y.-G. Gu\u00e9h\u00e9neuc", " ", " H. Sahraoui"]}, {"title": " \"Numerical signatures of antipatterns: An approach based on b-splines", "authors": ["R. Oliveto", " F. Khomh", " G. Antoniol", " ", " Y.-G. Gu\u00e9h\u00e9neuc"]}, {"title": " \"Detection of logical coupling based on product release history", "authors": ["H. Gall", " K. Hajek", " ", " M. Jazayeri"]}, {"title": " \"Identifying crosscutting concerns using historical code changes", "authors": ["B. Adams", " Z. M. Jiang", " ", " A. E. Hassan"]}]},
{"doi": "10.1109/ASE.2019.00099", "title": "CLCDSA: Cross Language Code Clone Detection using Syntactical Features and API Documentation", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Cloning", "Feature extraction", "Java", "Software systems", "Syntactics"], "abstract": "Software clones are detrimental to software maintenance and evolution and as a result many clone detectors have been proposed. These tools target clone detection in software applications written in a single programming language. However, a software application may be written in different languages for different platforms to improve the application's platform compatibility and adoption by users of different platforms. Cross language clones (CLCs) introduce additional challenges when maintaining multi-platform applications and would likely go undetected using existing tools. In this paper, we propose CLCDSA, a cross language clone detector which can detect CLCs without extensive processing of the source code and without the need to generate an intermediate representation. The proposed CLCDSA model analyzes different syntactic features of source code across different programming languages to detect CLCs. To support large scale clone detection, the CLCDSA model uses an action filter based on cross language API call similarity to discard non-potential clones. The design methodology of CLCDSA is two-fold: (a) it detects CLCs on the fly by comparing the similarity of features, and (b) it uses a deep neural network based feature vector learning model to learn the features and detect CLCs. Early evaluation of the model observed an average precision, recall and F-measure score of 0.55, 0.86, and 0.64 respectively for the first phase and 0.61, 0.93, and 0.71 respectively for the second phase which indicates that CLCDSA outperforms all available models in detecting cross language clones.", "author": [{"name": "Kawser Wazed Nafi", "affiliation": "Schneider Department of Computer Science, University of Saskatchewan, Saskatoon, Saskatchewan, Canada"}, {"name": "Tonny Shekha Kar", "affiliation": "Schneider Department of Computer Science, University of Saskatchewan, Saskatoon, Saskatchewan, Canada"}, {"name": "Banani Roy", "affiliation": "Schneider Department of Computer Science, University of Saskatchewan, Saskatoon, Saskatchewan, Canada"}, {"name": "Chanchal K. Roy", "affiliation": "Schneider Department of Computer Science, University of Saskatchewan, Saskatoon, Saskatchewan, Canada"}, {"name": "Kevin A. Schneider", "affiliation": "Schneider Department of Computer Science, University of Saskatchewan, Saskatoon, Saskatchewan, Canada"}], "time": "Nov. 2019", "citationCount": "1", "references": [{"title": " \"Mining revision histories to detect cross-language clones without intermediates\"", "authors": ["X. Cheng", " Z. Peng", " L. Jiang", " H. Zhong", " H. Yu ", " J. Zhao"]}, {"title": " \"Microservices: yesterday today and tomorrow\"", "authors": ["N. Dragoni", " S. Giallorenzo", " A. L. Lafuente", " M. Mazzara", " F. Montesi", " R. Mustafin", " ."]}, {"title": " \"Comparison and evaluation of code clone detection techniques and tools: A qualitative approach\"", "authors": ["C. K. Roy", " J. R. Cordy ", " R. Koschke"]}, {"title": " \"Supporting the Analysis of Clones in Software Systems: A Case Study\"", "authors": ["C. Kapser ", " M. Godfrey"]}, {"title": " \"Article: A Survey of Software Clone Detection Techniques\"", "authors": ["A. Sheneamer ", " J. Kalita"]}, {"title": " \"Removing clones from the code\"", "authors": ["R. Fanta ", " V. Rajlich"]}, {"title": " \"\u201cCloning Considered Harmful\u201d Considered Harmful\"", "authors": ["C. Kapser ", " M. W. Godfrey"]}, {"title": " \"LICCA: A tool for cross-language clone detection\"", "authors": ["T. Vislavski", " G. Rakic", " N. Cardozo ", " Z. Budimac"]}, {"title": " \"CLCMiner: Detecting cross language clones without intermediates\"", "authors": ["X. CHENG", " Z. PENG", " L. JIANG", " Z. Lingxiao", " H. YU ", " J. ZHAO"]}, {"title": " \"CCFinder: a multilinguistic token-based code clone detection system for large scale source code\"", "authors": ["T. Kamiya", " S. Kusumoto ", " K. Inoue"]}, {"title": " \"DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"The NiCad Clone Detector\"", "authors": ["J. R. Cordy ", " C. K. Roy"]}, {"title": " \"SourcererCC: scaling code clone detection to big-code\"", "authors": ["H. Sajnani", " V. Saini", " J. Svajlenko", " C. K. Roy ", " C. V. Lopes"]}, {"title": " \"SSQSA architecture\"", "authors": ["Z. Budimac", " G. Raki ", " M. Savi"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. Corrado ", " J. Dean"]}, {"title": " \"Oreo: detection of clones in the twilight zone\"", "authors": ["V. Saini", " F. Farmahinifarahani", " Y. Lu", " P. Baldi ", " C. V. Lopes"]}, {"title": " \"The SQO-OSS quality model: measurement based open source software evaluation\"", "authors": ["I. Samoladas", " G. Gousios", " D. Spinellis ", " I. Stamelos"]}, {"title": " \"Recommending source code for use in rapid software prototypes\"", "authors": ["C. McMillan", " N. Hariri", " D. Poshyvanyk", " J. Clel", "-Huang "]}, {"title": " \"How developers search for code: a case study\"", "authors": ["C. Sadowski", " K. T. Stolee ", " S. Elbaum"]}, {"title": " \"Software quality analysis by code clones in industrial legacy software\"", "authors": ["A. Monden", " D. Nakae", " T. Kamiya", " S. Sato ", " K. Matsumoto"]}, {"title": " \"CroLSim: Cross Language Software Similarity Detector Using API Documentation\"", "authors": ["K. W. Nafi", " B. Roy", " C. K. Roy ", " K. A. Schneider"]}, {"title": " \"Mining Analogical Libraries in Q&A Discussions \u2013 Incorporating Relational and Categorical Knowledge into Word Embedding\"", "authors": ["C. Chen", " S. Gao ", " Z. Xing"]}, {"title": " \"Evaluation experiments on the detection of programming patterns using software metrics\"", "authors": ["K. Kontogiannis"]}, {"title": " \"Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics\"", "authors": ["J. Mayr", "", " C. Leblanc ", " E. Merlo"]}, {"title": " \"Extending software quality assessment techniques to java systems\"", "authors": ["J. F. Patenaude", " E. Merlo", " M. Dagenais ", " B. Lagu"]}, {"title": " \"ImageNet Classification with Deep Convolutional Neural Networks\"", "authors": ["A. Krizhevsky", " I. Sutskever ", " G. E. Hinton"]}, {"title": " \"Deep learning in neural networks: An overview\"", "authors": ["J. Schmidhuber"]}, {"title": " \"Deep learning for NLP (without magic)\"", "authors": ["R. Socher", " Y. Bengio ", " C. D. Manning"]}, {"title": " \"Better representations: Invariant disentangled and reusable\"", "authors": ["G. Montavon ", " K.-R. Mller"]}, {"title": " \"Neural networks for fingerprint recognition\"", "authors": ["P. Baldi ", " Y. Chauvin"]}, {"title": " \"Deep sparse rectifier neural networks\"", "authors": ["X. Glorot", " A. Bordes ", " Y. Bengio"]}, {"title": " \"Cross-language clone detection by learning over abstract syntax trees\"", "authors": ["D. Perez ", " S. Chiba"]}, {"title": " \"The dropout learning algorithm\"", "authors": ["P. Baldi ", " P. Sadowski"]}, {"title": " \"On information and sufficiency\"", "authors": ["S. Kullback ", " R. A. Leibler"]}, {"title": " \"Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification\"", "authors": ["K. He", " X. Zhang", " S. Ren ", " J. Sun"]}, {"title": " \"An Empirical Study of Function Clones in Open Source Software\"", "authors": ["C. K. Roy ", " J. R. Cordy"]}, {"title": " \"Distributed representations of words and phrases and their compositionality\"", "authors": ["T. Mikolov", " I. Sutskever", " K. Chen", " G. Corrado ", " J. Dean"]}, {"title": " \"A Language Independent Approach for Detecting Duplicated Code\"", "authors": ["S. Ducasse", " M. Rieger ", " S. Demeyer"]}, {"title": " \"Identification of High-level Concept Clones in Source Code\"", "authors": ["A. Marcus ", " J. Maletic"]}, {"title": " \"Clone Detection Using Abstract Syntax Trees\"", "authors": ["I. Baxter", " A. Yahin", " L. Moura ", " M. Anna"]}, {"title": " \"Duplicate Code Detection Using Anti Unification\"", "authors": ["P. Bulychev ", " M. Minea"]}, {"title": " \"An Approach to Identify Duplicated Web Pages\"", "authors": ["G. Di Lucca", " M. Penta ", " A. Fasolino"]}, {"title": " \"Identifying Similar Code with Program Dependence Graphs\"", "authors": ["J. Krinke"]}, {"title": " \"GPLAG: Detection of Software Plagiarism by Program Dependence Graph Analysis\"", "authors": ["C. Liu", " C. Chen", " J. Han ", " P. Yu"]}, {"title": " \"Cross-language Clone Detection\"", "authors": ["N. A. Kraft", " B. W. Bonds ", " R. K. Smith"]}, {"title": " \"Detecting clones across microsoft. net programming languages\"", "authors": ["F. Al-Omari", " I. Keivanloo", " C. K. Roy ", " J. Rilling"]}, {"title": " \"Detecting code clones in binary executables\"", "authors": ["A. Sbjrnsen", " J. Willcock", " T. Panas", " D. Quinlan ", " Z. Su"]}, {"title": " \"Supervised Deep Features for Software Functional Clone Detection by Exploiting Lexical and Syntactical Information in Source Code\"", "authors": ["H. HuiWei ", " M. Li"]}, {"title": " \"Deep learning code fragments for code clone detection\"", "authors": ["M. White", " M. Tufano", " C. Vendome ", " D. Poshyvanyk"]}]},
{"doi": "10.1109/ASE.2013.6693087", "title": "Personalized defect prediction", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Predictive models", "Vectors", "Mars", "Syntactics", "Computer bugs", "Training", "Feature extraction"], "abstract": "Many defect prediction techniques have been proposed. While they often take the author of the code into consideration, none of these techniques build a separate prediction model for each developer. Different developers have different coding styles, commit frequencies, and experience levels, causing different defect patterns. When the defects of different developers are combined, such differences are obscured, hurting prediction performance. This paper proposes personalized defect prediction-building a separate prediction model for each developer to predict software defects. As a proof of concept, we apply our personalized defect prediction to classify defects at the file change level. We evaluate our personalized change classification technique on six large software projects written in C and Java-the Linux kernel, PostgreSQL, Xorg, Eclipse, Lucene and Jackrabbit. Our personalized approach can discover up to 155 more bugs than the traditional change classification (210 versus 55) if developers inspect the top 20% lines of code that are predicted buggy. In addition, our approach improves the F1-score by 0.01-0.06 compared to the traditional change classification.", "author": [{"name": "Tian Jiang", "affiliation": "University of Waterloo Waterloo, ON, Canada"}, {"name": "Lin Tan", "affiliation": "University of Waterloo Waterloo, ON, Canada"}, {"name": "Sunghun Kim", "affiliation": "Hong Kong University of Science and Technology Hong Kong, China"}], "time": "Nov. 2013", "citationCount": "71", "references": [{"title": " \"Classifying software changes: Clean or buggy?\" TSE", "authors": ["S. Kim", " J. E. James Whitehead", " ", " Y. Zhang"]}, {"title": " \"Predicting faults using the complexity of code changes", "authors": ["A. Hassan"]}, {"title": " \"Predicting failures with developer networks and social network analysis", "authors": ["A. Meneely", " L. Williams", " W. Snipes", " ", " J. Osborne"]}, {"title": " \"Defect prediction from static code features: Current results", "authors": ["T. Menzies", " Z. Milton", " B. Turhan", " B. Cukic", " Y. Jiang", " ", " A. B. Bener"]}, {"title": " \"Predicting defects using network analysis on dependency graphs", "authors": ["T. Zimmermann ", " N. Nagappan"]}, {"title": " \"Predicting Defects for Eclipse", "authors": ["T. Zimmermann", " R. Premraj", " ", " A. Zeller"]}, {"title": " \"Think locally", "authors": ["N. Bettenburg", " M. Nagappan", " ", " A. E. Hassan"]}, {"title": " \"Predicting fault incidence using software change history", "authors": ["T. Graves", " A. Karr", " J. Marron", " ", " H. Siy"]}, {"title": " \"On the prediction of the evolution of libre software projects", "authors": ["I. Herraiz", " J. Gonz\u00e1lez-Barahona", " G. Robles", " ", " D. Germ\u00e1n"]}, {"title": " \"Understanding and predicting effort in software projects", "authors": ["A. Mockus", " D. Weiss", " ", " P. Zhang"]}, {"title": " \"Programmer-based fault prediction", "authors": ["T. J. Ostr", "", " E. J. Weyuker", " R. M. Bell", " P. Avenue", " ", " F. Park"]}, {"title": " \"Personalized search for everyone", "authors": ["Google Official Blog"]}, {"title": " \"The alternating decision tree learning algorithm", "authors": ["Y. Freund ", " L. Mason"]}, {"title": " \"Multivariate adaptive regression splines", "authors": ["J. H. Friedman"]}, {"title": " \"Recalling the \"imprecision\" of cross-project defect prediction", "authors": ["F. Rahman", " D. Posnett", " ", " P. Devanbu"]}, {"title": " \"How", "authors": ["F. Rahman ", " P. Devanbu"]}, {"title": " \"Data mining techniques for building fault-proneness models in telecom java software", "authors": ["E. Arisholm", " L. C. Bri", "", " ", " M. Fuglerud"]}, {"title": " \"Correlations between bugginess and time-based commit characteristics", "authors": ["J. Eyolfson", " L. Tan", " ", " P. Lam"]}, {"title": " \"When do Changes Induce Fixes?\" in MSR", "authors": ["J. \u015aliwerski", " T. Zimmermann", " ", " A. Zeller"]}, {"title": " \"It's not a bug", "authors": ["K. Herzig", " S. Just", " ", " A. Zeller"]}, {"title": " \"DECKARD: Scalable and accurate tree-based detection of code clones", "authors": ["L. Jiang", " G. Misherghi", " Z. Su", " ", " S. Glondu"]}, {"title": " \"Second-order features for maximizing text classification performance", "authors": ["B. Raskutti", " H. Ferra", " ", " A. Kowalczyk"]}, {"title": " \"The WEKA data mining software: An update", "authors": ["M. Hall", " E. Frank", " G. Holmes", " B. Pfahringer", " P. Reutemann", " ", " I. H. Witten"]}, {"title": "\"Snowball", "authors": []}, {"title": " \"Have things changed now? An empirical study of bug characteristics in modern open source software", "authors": ["Z. Li", " L. Tan", " X. Wang", " S. Lu", " Y. Zhou", " ", " C. Zhai"]}, {"title": " \"A comparative exploration of FreeBSD bug lifetimes", "authors": ["G. Bougie", " C. Treude", " D. Germ\u00e1n", " ", " M. Storey"]}, {"title": " \"Cross-project defect prediction: A large scale experiment on data vs. domain vs. process", "authors": ["T. Zimmermann", " N. Nagappan", " H. Gall", " E. Giger", " ", " B. Murphy"]}, {"title": " \"Estimating continuous distributions in bayesian classifiers", "authors": ["G. H. John ", " P. Langley"]}, {"title": " \"Logistic model trees", "authors": ["N. L", "wehr", " M. Hall", " ", " E. Frank"]}, {"title": " \"Microarray data mining with visual programming", "authors": ["T. Curk", " J. Demar", " Q. Xu", " G. Leban", " U. Petrovi", " I. Bratko", " G. Shaulsky", " ", " B. Zupan"]}, {"title": " \"Bugs as deviant behavior: A general approach to inferring errors in systems code", "authors": ["D. Engler", " D. Y. Chen", " S. Hallem", " A. Chou", " ", " B. Chelf"]}, {"title": " \"An empirical study of operating systems errors", "authors": ["A. Chou", " J. Yang", " B. Chelf", " S. Hallem", " ", " D. Engler"]}, {"title": " \"How long did it take to fix bugs?\" in MSR", "authors": ["S. Kim ", " E. J. Whitehead", " Jr."]}, {"title": " \"The top ten list: Dynamic fault prediction", "authors": ["A. Hassan ", " R. Holt"]}, {"title": " \"Cross-validation", "authors": ["A. W. Moore"]}, {"title": " \"Dealing with noise in defect prediction", "authors": ["S. Kim", " H. Zhang", " R. Wu", " ", " L. Gong"]}, {"title": " \"Predicting the location and number of faults in large software systems", "authors": ["T. J. Ostr", "", " E. J. Weyuker", " ", " R. M. Bell"]}, {"title": " \"Does bug prediction support human developers? findings from a google case study", "authors": ["C. Lewis", " Z. Lin", " C. Sadowski", " X. Zhu", " R. Ou", " ", " E. J. Whitehead Jr"]}, {"title": " \"Fair and balanced?: Bias in bug-fix datasets", "authors": ["C. Bird", " A. Bachmann", " E. Aune", " J. Duffy", " A. Bernstein", " V. Filkov", " ", " P. Devanbu"]}, {"title": " \"Relink: Recovering links between bugs and changes", "authors": ["R. Wu", " H. Zhang", " S. Kim", " ", " S. Cheung"]}, {"title": " \"Automatic identification of bug-introducing changes", "authors": ["S. Kim", " T. Zimmermann", " K. Pan", " ", " J. J. Whitehead"]}, {"title": " \"Committing with Git - PostgreSQL Wiki", "authors": ["PostgreSQL Community"]}, {"title": " \"Who should fix this bug?\" in ICSE", "authors": ["J. Anvik", " L. Hiew", " ", " G. C. Murphy"]}, {"title": " \"Assigning bug reports using a vocabulary-based expertise model of developers", "authors": ["D. Matter", " A. Kuhn", " ", " O. Nierstrasz"]}, {"title": " \"CosTriage: A costaware triage algorithm for bug reporting systems", "authors": ["J. Park", " M. Lee", " J. Kim", " S. Hwang", " ", " S. Kim"]}, {"title": " \"Improving bug triage with bug tossing graphs", "authors": ["G. Jeong", " S. Kim", " ", " T. Zimmermann"]}, {"title": " \"Learning better inspection optimization policies", "authors": ["M. Lumpe", " R. Vasa", " T. Menzies", " R. Rush", " ", " B. Turhan"]}, {"title": " \"Reducing features to improve code change-based bug prediction", "authors": ["S. Shivaji", " E. J. W. Jr.", " R. Akella", " ", " S. Kim"]}, {"title": " \"Social Networks", "authors": ["C. Tucker"]}, {"title": " \"An analysis of developer metrics for fault prediction", "authors": ["S. Matsumoto", " Y. Kamei", " A. Monden", " K.-i. Matsumoto", " ", " M. Nakamura"]}, {"title": " \"Ownership", "authors": ["F. Rahman ", " P. Devanbu"]}, {"title": " \"Dual ecological measures of focus in software development", "authors": ["D. Posnett", " R. DSouza", " P. Devanbu", " ", " V. Filkov"]}, {"title": " \"On the naturalness of software", "authors": ["A. Hindle", " E. Barr", " Z. Su", " M. Gabel", " ", " P. Devanbu"]}, {"title": " \"Improving ide recommendations by considering global implications of existing recommendations", "authors": ["K. Muslu", " Y. Brun", " R. Holmes", " M. D. Ernst", " ", " D. Notkin"]}, {"title": " \"Supporting reuse by delivering task-relevant and personalized information", "authors": ["Y. Ye ", " G. Fischer"]}, {"title": " \"Which crashes should i fix first?: Predicting top crashes at an early stage to prioritize debugging efforts", "authors": ["D. Kim", " X. Wang", " S. Kim", " A. Zeller", " S. Cheung", " ", " S. Park"]}, {"title": " \"Predicting quality attributes of software product lines using software and network measures and sampling", "authors": ["S. S. Kolesnikov", " S. Apel", " N. Siegmund", " S. Sobernig", " C. K\u00e4stner", " ", " S. Senkaya"]}, {"title": " \"Identifying Linux bug fixing patches", "authors": ["Y. Tian", " J. Lawall", " ", " D. Lo"]}, {"title": " \"Can traditional fault prediction models be used for vulnerability prediction?\" EMSE", "authors": ["Y. Shin ", " L. Williams"]}]},
{"doi": "10.1109/ASE.2019.00100", "title": "B2SFinder: Detecting Open-Source Software Reuse in COTS Software", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Open source software", "Libraries", "Software algorithms", "Security", "Switches", "Arrays"], "abstract": "COTS software products are developed extensively on top of OSS projects, resulting in OSS reuse vulnerabilities. To detect such vulnerabilities, finding OSS reuses in COTS software has become imperative. While scalable to tens of thousands of OSS projects, existing binary-to-source matching approaches are severely imprecise in analyzing COTS software products, since they support only a limited number of code features, compute matching scores only approximately in measuring OSS reuses, and neglect the code structures in OSS projects. We introduce a novel binary-to-source matching approach, called B2SFINDER\n<sup xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">1</sup>\n, to address these limitations. First of all, B2SFINDER can reason about seven kinds of code features that are traceable in both binary and source code. In order to compute matching scores precisely, B2SFINDER employs a weighted feature matching algorithm that combines three matching methods (for dealing with different code features) with two importance-weighting methods (for computing the weight of an instance of a code feature in a given COTS software application based on its specificity and occurrence frequency). Finally, B2SFINDER identifies different types of code reuses based on matching scores and code structures of OSS projects. We have implemented B2SFINDER using an optimized data structure. We have evaluated B2SFINDER using 21991 binaries from 1000 popular COTS software products and 2189 candidate OSS projects. Our experimental results show that B2SFINDER is not only precise but also scalable. Compared with the state ofthe art, B2SFINDER has successfully found up to 2.15\u00d7 as many reuse cases in 53.85 seconds per binary file on average. We also discuss how B2SFINDER can be leveraged in detecting OSS reuse vulnerabilities in practice.", "author": [{"name": "Zimu Yuan", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Muyue Feng", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Feng Li", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Gu Ban", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Yang Xiao", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Shiyang Wang", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Qian Tang", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "He Su", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Chendong Yu", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Jiahuan Xu", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Aihua Piao", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}, {"name": "Jingling Xuey", "affiliation": "University of New South Wales"}, {"name": "Wei Huo", "affiliation": "Institute of Information Engineering, Chinese Academy of Sciences"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Finding software license violations through binary code clone detection\"", "authors": ["A. Hemel", " K. T. Kalleberg", " R. Vermaas ", " E. Dolstra"]}, {"title": " \"Identifying opensource license violation and 1-day security risk at large scale\"", "authors": ["R. Duan", " A. Bijlani", " M. Xu", " T. Kim ", " W. Lee"]}, {"title": " \"Vulpecker: an automated vulnerability detection system based on code similarity analysis\"", "authors": ["Z. Li", " D. Zou", " S. Xu", " H. Jin", " H. Qi ", " J. Hu"]}, {"title": " \"discovre: Efficient cross-architecture identification of bugs in binary code\"", "authors": ["S. Eschweiler", " K. Yakdan ", " E. Gerhards-Padilla"]}, {"title": " \"Neural network-based graph embedding for cross-platform binary code similarity detection\"", "authors": ["X. Xu", " C. Liu", " Q. Feng", " H. Yin", " L. Song ", " D. Song"]}, {"title": " \"\u03b1diff: cross-version binary code similarity detection with dnn\"", "authors": ["B. Liu", " W. Huo", " C. Zhang", " W. Li", " F. Li", " A. Piao", " ."]}, {"title": " \"Precise and accurate patch presence test for binaries\"", "authors": ["H. Zhang ", " Z. Qian"]}, {"title": " \"Accurate and scalable cross-architecture cross-os binary code search with emulation\"", "authors": ["Y. Xue", " Z. Xu", " M. Ch", "ramohan "]}, {"title": " \"Scalable graph-based bug search for firmware images\"", "authors": ["Q. Feng", " R. Zhou", " C. Xu", " Y. Cheng", " B. Testa ", " H. Yin"]}, {"title": " \"Bingo: Cross-architecture cross-os binary search\"", "authors": ["M. Ch", "ramohan", " Y. Xue", " Z. Xu", " Y. Liu", " C. Y. Cho ", " H. B. K. Tan"]}, {"title": " \"Rendezvous: A search engine for binary code\"", "authors": ["W. M. Khoo", " A. Mycroft ", " R. Anderson"]}, {"title": " \"Information theory and statistical mechanics\"", "authors": ["E. T. Jaynes"]}, {"title": " \"Using tf-idf to determine word relevance in document queries\"", "authors": ["J. Ramos ."]}, {"title": " \"Cassandra: a decentralized structured storage system\"", "authors": ["A. Lakshman ", " P. Malik"]}, {"title": " \"On finding duplication and near-duplication in large software systems\"", "authors": ["B. S. Baker"]}, {"title": " \"On the effectiveness of clone detection by string matching\"", "authors": ["S. Ducasse", " O. Nierstrasz ", " M. Rieger"]}, {"title": " \"Parameterized duplication in strings: Algorithms and an application to software maintenance\"", "authors": ["B. S. Baker"]}, {"title": " \"Ccfinder: a multilinguistic token-based code clone detection system for large scale source code\"", "authors": ["T. Kamiya", " S. Kusumoto ", " K. Inoue"]}, {"title": " \"Very-large scale code clone analysis and visualization of open source programs using distributed ccfinder: D-ccfinder\"", "authors": ["S. Livieri", " Y. Higo", " M. Matushita ", " K. Inoue"]}, {"title": " \"Cp-miner: Finding copy-paste and related bugs in large-scale software code\"", "authors": ["Z. Li", " S. Lu", " S. Myagmar ", " Y. Zhou"]}, {"title": " \"Redebug: finding unpatched code clones in entire os distributions\"", "authors": ["J. Jang", " A. Agrawal ", " D. Brumley"]}, {"title": " \"Vuddy: a scalable approach for vulnerable code clone discovery\"", "authors": ["S. Kim", " S. Woo", " H. Lee ", " H. Oh"]}, {"title": " \"Deckard: Scalable and accurate tree-based detection of code clones\"", "authors": ["L. Jiang", " G. Misherghi", " Z. Su ", " S. Glondu"]}, {"title": " \"Libd: scalable and precise third-party library detection in android markets\"", "authors": ["M. Li", " W. Wang", " P. Wang", " S. Wang", " D. Wu", " J. Liu", " ."]}, {"title": " \"K-gram based software birthmarks\"", "authors": ["G. Myles ", " C. Collberg"]}, {"title": " \"Binhunt: Automatically finding semantic differences in binary programs\"", "authors": ["D. Gao", " M. K. Reiter ", " D. Song"]}, {"title": " \"Leveraging semantic signatures for bug search in binary programs\"", "authors": ["J. Pewny", " F. Schuster", " L. Bernhard", " T. Holz ", " C. Rossow"]}, {"title": " \"Binslayer: accurate comparison of binary executables\"", "authors": ["M. Bourquin", " A. King ", " E. Robbins"]}, {"title": " \"Detecting software theft via system call based birthmarks\"", "authors": ["X. Wang", " Y.-C. Jhi ", " S. Zhu"]}, {"title": " \"Behavior based software theft detection\"", "authors": ["X. Wang", " Y.-C. Jhi", " S. Zhu ", " P. Liu"]}, {"title": " \"Crossarchitecture bug search in binary executables\"", "authors": ["J. Pewny", " B. Garmany", " R. Gawlik", " C. Rossow ", " T. Holz"]}, {"title": " \"Binary code clone detection across architectures and compiling configurations\"", "authors": ["Y. Hu", " Y. Zhang", " J. Li ", " D. Gu"]}, {"title": " \"Bingo: Cross-architecture cross-os binary search\"", "authors": ["M. Ch", "ramohan", " Y. Xue", " Z. Xu", " Y. Liu", " C. Y. Cho ", " H. B. K. Tan"]}, {"title": " \"Accurate and scalable cross-architecture cross-os binary code search with emulation\"", "authors": ["Y. Xue", " Z. Xu", " M. Ch", "ramohan "]}, {"title": " \"Detecting software theft via whole program path birthmarks\"", "authors": ["G. Myles ", " C. Collberg"]}, {"title": " \"Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection\"", "authors": ["L. Luo", " J. Ming", " D. Wu", " P. Liu ", " S. Zhu"]}]},
{"doi": "10.1109/ASE.2013.6693088", "title": "Automatic recommendation of API methods from feature requests", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Libraries", "Vectors", "Databases", "Control systems", "Documentation", "Software systems", "Java"], "abstract": "Developers often receive many feature requests. To implement these features, developers can leverage various methods from third party libraries. In this work, we propose an automated approach that takes as input a textual description of a feature request. It then recommends methods in library APIs that developers can use to implement the feature. Our recommendation approach learns from records of other changes made to software systems, and compares the textual description of the requested feature with the textual descriptions of various API methods. We have evaluated our approach on more than 500 feature requests of Axis2/Java, CXF, Hadoop Common, HBase, and Struts 2. Our experiments show that our approach is able to recommend the right methods from 10 libraries with an average recall-rate@5 of 0.690 and recall-rate@10 of 0.779 respectively. We also show that the state-of-the-art approach by Chan et al., that recommends API methods based on precise text phrases, is unable to handle feature requests.", "author": [{"name": "Ferdian Thung", "affiliation": "Singapore Management University, Singapore"}, {"name": "Shaowei Wang", "affiliation": "Singapore Management University, Singapore"}, {"name": "David Lo", "affiliation": "Singapore Management University, Singapore"}, {"name": "Julia Lawall", "affiliation": "Inria/Lip6 Regal, France"}], "time": "Nov. 2013", "citationCount": "37", "references": [{"title": " \"Empirical evaluation of bug linking", "authors": ["T. F. Bissy", "\u00e9", " F. Thung", " S. Wang", " D. Lo", " L. Jiang", " ", " L. R\u00e9veill\u00e8re"]}, {"title": " \"Latent dirichlet allocation", "authors": ["D. M. Blei", " A. Y. Ng", " ", " M. I. Jordan"]}, {"title": " \"Learning from examples to improve code completion systems", "authors": ["M. Bruch", " M. Monperrus", " ", " M. Mezini"]}, {"title": " \"Explaining the Gibbs sampler", "authors": ["G. Casella ", " E. I. George"]}, {"title": " \"Searching connected api subgraph via text phrases", "authors": ["W.-K. Chan", " H. Cheng", " ", " D. Lo"]}, {"title": " \"Bigtable: A distributed storage system for structured data", "authors": ["F. Chang", " J. Dean", " S. Ghemawat", " W. C. Hsieh", " D. A. Wallach", " M. Burrows", " T. Ch", "ra", " A. Fikes", " ", " R. E. Gruber"]}, {"title": " \"Automatically generating test cases for specification mining", "authors": ["V. Dallmeier", " N. Knopp", " C. Mallon", " G. Fraser", " S. Hack", " ", " A. Zeller"]}, {"title": " \"Integrating information retrieval", "authors": ["B. Dit", " M. Revelle", " ", " D. Poshyvanyk"]}, {"title": " \"On the use of relevance feedback in IR-based concept location", "authors": ["G. Gay", " S. Haiduc", " A. Marcus", " ", " T. Menzies"]}, {"title": " \"Improving source code search with natural language phrasal representations of method signatures", "authors": ["E. Hill", " L. L. Pollock", " ", " K. Vijay-Shanker"]}, {"title": " \"Automated duplicate detection for bug tracking systems", "authors": ["N. Jalbert ", " W. Weimer"]}, {"title": " \"Mining message sequence graphs", "authors": ["S. Kumar", " S.-C. Khoo", " A. Roychoudhury", " ", " D. Lo"]}, {"title": " \"Smartic: towards building an accurate", "authors": ["D. Lo ", " S.-C. Khoo"]}, {"title": " \"Mining past-time temporal rules from execution traces", "authors": ["D. Lo", " S.-C. Khoo", " ", " C. Liu"]}, {"title": " \"Specification mining of symbolic scenario-based models", "authors": ["D. Lo ", " S. Maoz"]}, {"title": " \"Mining hierarchical scenario-based specifications", "authors": ["-"]}, {"title": " \"Scenario-based and value-based specification mining: better together", "authors": ["-"]}, {"title": " \"Mining quantified temporal rules: Formalism", "authors": ["D. Lo", " G. Ramalingam", " V. P. Ranganath", " ", " K. Vaswani"]}, {"title": " \"Api hyperlinking via structural overlap", "authors": ["F. Long", " X. Wang", " ", " Y. Cai"]}, {"title": " \"Jungloid mining: helping to navigate the api jungle", "authors": ["D. M", "elin", " L. Xu", " R. Bod\u00edk", " ", " D. Kimelman"]}, {"title": " \"Duplicate bug report detection with a combination of information retrieval and topic modeling", "authors": ["A. T. Nguyen", " T. T. Nguyen", " T. N. Nguyen", " D. Lo", " ", " C. Sun"]}, {"title": " \"Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval", "authors": ["D. Poshyvanyk", " Y.-G. Gueheneuc", " A. Marcus", " ", " G. Antoniol"]}, {"title": " \"Retrieval from software libraries for bug localization: A comparative study of generic and composite text models", "authors": ["S. Rao ", " A. C. Kak"]}, {"title": " \"Automatic generation of suggestions for program investigation", "authors": ["M. P. Robillard"]}, {"title": " \"Detection of duplicate defect reports using natural language processing", "authors": ["P. Runeson", " M. Alex", "ersson", " ", " O. Nyholm"]}, {"title": " \"Recommending random walks", "authors": ["Z. M. Saul", " V. Filkov", " P. T. Devanbu", " ", " C. Bird"]}, {"title": " \"Static specification mining using automata-based abstractions", "authors": ["S. Shoham", " E. Yahav", " S. J. Fink", " ", " M. Pistoia"]}, {"title": " \"A discriminative model approach for accurate duplicate bug report retrieval", "authors": ["C. Sun", " D. Lo", " X. Wang", " J. Jiang", " ", " S.-C. Khoo"]}, {"title": " \"Towards more accurate retrieval of duplicate bug reports", "authors": ["C. Sun", " D. Lo", " S.-C. Khoo", " ", " J. Jiang"]}, {"title": " \"Parseweb: a programmer assistant for reusing open source code on the web", "authors": ["S. Thummalapenta ", " T. Xie"]}, {"title": " \"Concern localization using information retrieval: An empirical study on linux kernel", "authors": ["S. Wang", " D. Lo", " Z. Xing", " ", " L. Jiang"]}, {"title": " \"Extracting paraphrases of technical terms from noisy parallel software corpora", "authors": ["X. Wang", " D. Lo", " J. Jiang", " L. Zhang", " ", " H. Mei"]}, {"title": " \"An approach to detecting duplicate bug reports using natural language and execution information", "authors": ["X. Wang", " L. Zhang", " T. Xie", " J. Anvik", " ", " J. Sun"]}, {"title": " \"Flow-augmented call graph: A new foundation for taming api complexity", "authors": ["Q. Zhang", " W. Zheng", " ", " M. R. Lyu"]}, {"title": " \"SNIAFL: Towards a static noninteractive approach to feature location", "authors": ["W. Zhao", " L. Zhang", " Y. Liu", " J. Sun", " ", " F. Yang"]}, {"title": " \"Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports", "authors": ["J. Zhou", " H. Zhang", " ", " D. Lo"]}]},
{"doi": "10.1109/ASE.2019.00101", "title": "CoRA: Decomposing and Describing Tangled Code Changes for Reviewer", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Natural languages", "Computer bugs", "Tools", "Clustering algorithms", "Java", "Open source software"], "abstract": "Code review is an important mechanism for code quality assurance both in open source software and industrial software. Reviewers usually suffer from numerous, tangled and loosely related code changes that are bundled in a single commit, which makes code review very difficult. In this paper, we propose CoRA (Code Review Assistant), an automatic approach to decompose a commit into different parts and generate concise descriptions for reviewers. More specifically, CoRA can decompose a commit into independent parts (e.g., bug fixing, new feature adding, or refactoring) by code dependency analysis and tree-based similar-code detection, then identify the most important code changes in each part based on the PageRank algorithm and heuristic rules. As a result, CoRA can generate a concise description for each part of the commit. We evaluate our approach in seven open source software projects and 50 code commits. The results indicate that CoRA can improve the accuracy of decomposing code changes by 6.3% over the state-ofart practice. At the same time, CoRA can identify the important part from the fine-grained code changes with a mean average precision (MAP) of 87.7%. We also conduct a human study with eight participants to evaluate the performance and usefulness of CoRA, the user feedback indicates that CoRA can effectively help reviewers.", "author": [{"name": "Min Wang", "affiliation": "Key Laboratory of High Condence Software Technologies, Ministry of Education, Beijing, China and the School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Zeqi Lin", "affiliation": "Microsoft Research, Beijing, China"}, {"name": "Yanzhen Zou", "affiliation": "Key Laboratory of High Condence Software Technologies, Ministry of Education, Beijing, China and the School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}, {"name": "Bing Xie", "affiliation": "Key Laboratory of High Condence Software Technologies, Ministry of Education, Beijing, China and the School of Electronics Engineering and Computer Science, Peking University, Beijing, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"How Do Software Engineers Understand Code Changes?:An Exploratory Study in Industry\"", "authors": ["Yida Tao", " Yingnong Dang", " Tao Xie", " Dongmei Zhang ", " Sunghun Kim"]}, {"title": " \"Tree edit distance: Robust and memory-efficient[J]\"", "authors": ["M Pawlik ", " N. Augsten"]}, {"title": " \"Boa: A language and infrastructure for analyzing ultra-large-scale software repositories\"", "authors": ["Robert Dyer", " Hoan Anh Nguyen", " Hridesh Rajan ", " Tien N Nguyen"]}, {"title": " \"Neural-machine translation-based commit message generation: how far are we?\"", "authors": ["Zhongxin Liu", " Xin Xia", " Ahmed E. Hassan", " Lo David", " Zhenchang Xing ", " Xinyu Wang"]}, {"title": " \"Automatically documenting program changes\"", "authors": ["Raymond PL Buse ", " Westley R Weimer"]}, {"title": " \"On Automatically Generating Commit Messages via Summarization of Source Code Changes\"", "authors": ["Luis Fern", "o Corts-Coy", " Mario Linares-Vsquez", " Jairo Aponte ", " Denys Poshyvanyk"]}, {"title": " \"Changescribe: A tool for automatically generating commit messages\"", "authors": ["Mario Linares-Vsquez", " Luis Fern", "o Corts-Coy", " Jairo Aponte ", " Denys Poshyvanyk"]}, {"title": " \"The Impact of Tangled Code Changes\"", "authors": ["Kim Herzig ", " Andreas Zeller"]}, {"title": " \"Helping Developers Help Themselves:Automatic Decomposition of Code Review Changesets\"", "authors": ["Mike Barnett", " Christian Bird", " Joo Brunet ", " K.Lahiri. Shuvendu"]}, {"title": " \"Towards automatic generation of short summaries of commits\"", "authors": ["Siyuan Jiang ", " Collin McMillan"]}, {"title": " \"Untangling fine-grained code changes\"", "authors": ["M. Dias", " A. Bacchelli", " G. Gousios", " D. Cassou ", " S. Ducasse"]}, {"title": " \"Partitioning composite code changes to facilitate code review\"", "authors": ["Y. Tao ", " S. Kim"]}, {"title": " \"Non-essential changes in version histories\"", "authors": ["D. Kawrykow ", " M. P. Robillard"]}, {"title": " \"Improved query reformulation for concept location using CodeRank and document structures[C]\"", "authors": ["Rahman", " Mohammad Masudur ", " Chanchal K. Roy"]}, {"title": " \"Predicting defects for Eclipse\"", "authors": ["T. Zimmermann", " R. Premraj ", " A. Zeller"]}, {"title": " \"Software inspections and the industrial production of software\"", "authors": ["A. Frank Ackerman", " Priscilla J. Fowler ", " Robert G. Ebenau"]}, {"title": " \"Software inspections: an Effective Verification Process\"", "authors": ["A.F. Ackerman", " L.S. Buchwald ", " F.H. Lewski"]}, {"title": " \"Expectations outcomes and challenges of modern code review\"", "authors": ["A. Bacchelli ", " C. Bird"]}, {"title": " \"Open Source Peer Review Lessons and Recommendations for\"", "authors": ["P. Rigby", " B. Cleary", " F. Painchaud", " M. Storey ", " D. German"]}, {"title": " \"Convergent contemporary software peer review practices\"", "authors": ["Peter C Rigby ", " Christian Bird"]}, {"title": " \"What makes a code change easier to review: an empirical investigation on code change reviewability\"", "authors": ["Achyudh Ram", " An", " Ashok Sawant", " Marco Castelluccio ", " Alberto Bacchelli"]}, {"title": " \"The Anatomy of a Large-Scale Hypertextual Web Search Engine\"", "authors": ["S. Brin ", " L. Page"]}, {"title": " \"Fine grained and Accurate Source Code Differencing\"", "authors": ["Falleri Jean-Rmy", " Floral Mor", "at", " Xavier Blanc", " Matias Martinez ", " Martin Monperrus"]}, {"title": " \"ClDiff: generating concise linked code differences\"", "authors": ["K. Huang", " B. Chen", " X. Peng", " D. Zhou", " Y. Wang", " Y. Liu", " ."]}, {"title": " \"Ranking Systems: The PageRank Axioms\"", "authors": ["A. Alon ", " M. Tennenholtz"]}, {"title": " \"Automatic generation of natural language summaries for java classes\"", "authors": ["L. Moreno", " J. Aponte", " G. Sridhara", " A. Marcus", " L. Pollock ", " K. VijayShanker"]}, {"title": " \"Why did this code change?\"", "authors": ["S. Rastkar ", " G. C. Murphy"]}, {"title": " \"A survey of clustering algorithms for big data: taxonomy and empirical analysis\"", "authors": ["A. Fahad", " N. Alshatri", " Z. Tari", " A. Alamri", " I. Khalil", " A. Y. Zomaya ."]}, {"title": " \"The TREC-8 Question Answering Track Report\"", "authors": ["Voorhees ", " M. Ellen"]}, {"title": " \"Hey! are you committing tangled changes?\"", "authors": ["H. Kirinuki", " Y. Higo", " K. Hotta ", " S. Kusumoto"]}, {"title": " \"Identifying features in forks\"", "authors": ["S. Zhou", " S. Stanciulescu", " O. Leenich", " Y. Xiong", " A. Wasowski ", " C. Kstner"]}, {"title": " \"Semantic diff: A tool for summarizing the effects of modications\"", "authors": ["D. Jackson ", " D. Ladd"]}, {"title": " \"Ldiff: An enhanced line differencing tool\"", "authors": ["G. Canfora", " L. Cerulo ", " M. D. Penta"]}, {"title": " \"idiff: Interaction-based program differencing tool\"", "authors": ["H. A. Nguyen", " T. T. Nguyen", " H. V. Nguyen ", " T. N. Nguyen"]}, {"title": " \"ARENA:an approach for the automated generation of release notes\"", "authors": ["Laura Moreno", " Gabriele Bavota", " Massimiliano Di Penta", " Rocco Oliveto", " Andrian Marcus ", " Gerardo Canfora"]}, {"title": " \"Mining version histories to guide software changes\"", "authors": ["T. Zimmermann", " P. Weigerber", " S. Diehl ", " A. Zeller"]}, {"title": " \"Characterizing the differences between pre- and post-release versions of software\"", "authors": ["P. L. Li", " R. Kivett", " Z. Zhan", " S.-e. Jeon", " N. Nagappan", " B. Murphy", " ."]}, {"title": " \"LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines\"", "authors": ["M. Asaduzzaman", " C. K. Roy", " K. A. Schneider ", " M. D. Penta"]}, {"title": " \"Automatic documentation generation via source code summarization of method context\"", "authors": ["P. W. McBurney ", " C. McMillan"]}, {"title": " \"Towards automatically generating summary comments for java methods\"", "authors": ["G. Sridhara", " E. Hill", " D. Muppaneni", " L. Pollock ", " K. Vijay-Shanker"]}, {"title": " \"Change distilling: Tree differencing for fine-grained source code change extraction\"", "authors": ["B. Fluri", " M. Wuersch", " M. PInzger ", " H. Gall"]}, {"title": " \"Move-optimized source code tree differencing\"", "authors": ["G. Dotzler ", " M. Philippsen"]}, {"title": " \"Open source software peer review practices: a case study of the apache server\"", "authors": ["P. C. Rigby", " D. M. German ", " M.-A. Storey"]}, {"title": " \"Was my contribution fairly reviewed?: a framework to study the perception of fairness in modern code reviews\"", "authors": ["D. M. German", " G. Robles", " G. Poo-Caamano", " X. Yang", " H. Iida ", " K. Inoue"]}, {"title": " \"A systematic survey of program comprehension through dynamic analysis\"", "authors": ["B. Cornelissen", " A. Zaidman", " A. van Deursen", " L. Moonen ", " R. Koschke"]}, {"title": " \"Understanding software maintenance and evolution by analyzing individual changes: a literature review\"", "authors": ["H. C. Benestad", " B. Anda ", " E. Arisholm"]}, {"title": " \"Code review quality:how developers see it\"", "authors": ["Oleksii Kononenko", " Olga Baysal ", " Michael W Godfrey"]}, {"title": " \"Syntax tree fingerprinting for source code similarity detection\"", "authors": ["M. Chilowicz", " E. Duris ", " G. Roussel"]}, {"title": " \"Clone detection using abstract syntax trees\"", "authors": ["I. D. Baxter", " A. Yahin", " L. Moura", " M. Sant\u2019Anna ", " L. Bier"]}, {"title": " \"Test-driven code review: an empirical study\"", "authors": ["Davide Spadini", " Fabio Palomba", " Tobias Baum", " Stefan Hanenberg", " Magiel Bruntink ", " Alberto Bacchelli"]}, {"title": " \"On the optimal order of reading source code changes for review[C]\"", "authors": ["T Baum", " K Schneider ", " A. Bacchelli"]}]},
{"doi": "10.1109/ASE.2013.6693089", "title": "Variability-aware performance prediction: A statistical learning approach", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Predictive models", "Feature extraction", "Silicon", "Software systems", "Correlation", "Measurement", "Accuracy"], "abstract": "Configurable software systems allow stakeholders to derive program variants by selecting features. Understanding the correlation between feature selections and performance is important for stakeholders to be able to derive a program variant that meets their requirements. A major challenge in practice is to accurately predict performance based on a small sample of measured variants, especially when features interact. We propose a variability-aware approach to performance prediction via statistical learning. The approach works progressively with random samples, without additional effort to detect feature interactions. Empirical results on six real-world case studies demonstrate an average of 94% prediction accuracy based on small random samples. Furthermore, we investigate why the approach works by a comparative analysis of performance distributions. Finally, we compare our approach to an existing technique and guide users to choose one or the other in practice.", "author": [{"name": "Jianmei Guo", "affiliation": "University of Waterloo, Canada"}, {"name": "Krzysztof Czarnecki", "affiliation": "University of Waterloo, Canada"}, {"name": "Sven Apel", "affiliation": "University of Passau, Germany"}, {"name": "Norbert Siegmund", "affiliation": "University of Passau, Germany"}, {"name": "Andrzej W\u0105sowski", "affiliation": "University of Copenhagen, Denmark"}], "time": "Nov. 2013", "citationCount": "46", "references": [{"title": " \"Software Architecture Optimization Methods: A Systematic Literature Review", "authors": ["A. Aleti", " B. Buhnova", " L. Grunske", " A. Koziolek", " ", " I. Meedeniya"]}, {"title": " \"An Overview of Feature-Oriented Software Development", "authors": ["S. Apel ", " C. K\u00e4stner"]}, {"title": " \"Automated Analyses of Feature Models: Challenges Ahead", "authors": ["D. Batory", " D. Benavides", " ", " A. Ruiz-Cortes"]}, {"title": " \"Performance Prediction of Component-Based Applications", "authors": ["S. Chen", " Y. Liu", " I. Gorton", " ", " A. Liu"]}, {"title": " \"A Genetic Algorithm for Optimized Feature Selection with Resource Constraints in Software Product Lines", "authors": ["J. Guo", " J. White", " G. Wang", " J. Li", " ", " Y. Wang"]}, {"title": " \"Facilitating Performance Predictions Using Software Components", "authors": ["J. Happe", " H. Koziolek", " ", " R. Reussner"]}, {"title": " \"It's not a Bug", "authors": ["K. Herzig", " S. Just", " ", " A. Zeller"]}, {"title": " \"Feature- Oriented Domain Analysis (FODA) Feasibility Study", "authors": ["K. Kang", " S. Cohen", " J. Hess", " W. Novak", " ", " A. Peterson"]}, {"title": " \"Scalable Analysis of Variable Software", "authors": ["J. Liebig", " A. von Rhein", " C. K\u00e4stner", " S. Apel", " J. D\u00f6rre", " ", " C. Lengauer"]}, {"title": " \"Visualization and Exploration of Optimal Variants in Product Line Engineering", "authors": ["A. Murashkin", " M. Antkiewicz", " D. Rayside", " ", " K. Czarnecki"]}, {"title": " \"Automatic Derivation of Utility Functions for Monitoring Software Requirements", "authors": ["A. Ramirez ", " B. Cheng"]}, {"title": " \"On the Value of User Preferences in Search-Based Software Engineering: A Case Study in Software Product Lines", "authors": ["A. Sayyad", " T. Menzies", " ", " H. Ammar"]}, {"title": " \"Predicting Performance via Automated Feature- Interaction Detection", "authors": ["N. Siegmund", " S. Kolesnikov", " C. K\u00e4stner", " S. Apel", " D. Batory", " M. Rosenm\u00fcller", " ", " G. Saake"]}, {"title": " \"Scalable Prediction of Non-functional Properties in Software Product Lines: Footprint and Memory Consumption", "authors": ["N. Siegmund", " M. Rosenm\u00fcller", " C. K\u00e4stner", " P. Giarrusso", " S. Apel", " ", " S. Kolesnikov"]}, {"title": " \"SPL Conqueror: Toward Optimization of Non-Functional Properties in Software Product Lines", "authors": ["N. Siegmund", " M. Rosenm\u00fcller", " M. Kuhlemann", " C. K\u00e4stner", " S. Apel", " ", " G. Saake"]}, {"title": " \"Approaching Non-functional Properties of Software Product Lines: Learning from Products", "authors": ["J. Sincero", " W. Schr\u00f6der-Preikschat", " ", " O. Spinczyk"]}, {"title": " \"Automatic Derivation of a Product Performance Model from a Software Product Line Model", "authors": ["R. Tawhid ", " D. Petriu"]}, {"title": " \"Practical Performance Models for Complex", "authors": ["E. Thereska", " B. Doebel", " A. Zheng", " ", " P. Nobel"]}, {"title": " \"Automated Inference of Goal-Oriented Performance Prediction Functions", "authors": ["D. Westermann", " J. Happe", " R. Krebs", " ", " R. Farahbod"]}, {"title": " \"Regression Testing Minimization", "authors": ["S. Yoo ", " M. Harman"]}]},
{"doi": "10.1109/ASE.2019.00102", "title": "A Quantitative Analysis Framework for Recurrent Neural Network", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Testing", "Tools", "Training data", "Statistical analysis", "Recurrent neural networks", "Security", "Computer architecture"], "abstract": "Recurrent neural network (RNN) has achieved great success in processing sequential inputs for applications such as automatic speech recognition, natural language processing and machine translation. However, quality and reliability issues of RNNs make them vulnerable to adversarial attacks and hinder their deployment in real-world applications. In this paper, we propose a quantitative analysis framework - DeepStellar - to pave the way for effective quality and security analysis of software systems powered by RNNs. DeepStellar is generic to handle various RNN architectures, including LSTM and GRU, scalable to work on industrial-grade RNN models, and extensible to develop customized analyzers and tools. We demonstrated that, with DeepStellar, users are able to design efficient test generation tools, and develop effective adversarial sample detectors. We tested the developed applications on three real RNN models, including speech recognition and image classification. DeepStellar outperforms existing approaches three hundred times in generating defect-triggering tests and achieves 97% accuracy in detecting adversarial attacks. A video demonstration which shows the main features of DeepStellar is available at: https://sites.google.com/view/deepstellar/tool-demo.", "author": [{"name": "Xiaoning Du", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Xiaofei Xie", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Yi Li", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Lei Ma", "affiliation": "Kyushu University, Japan"}, {"name": "Yang Liu", "affiliation": "Nanyang Technological University, Singapore"}, {"name": "Jianjun Zhao", "affiliation": "Kyushu University, Japan"}], "time": "Nov. 2019", "citationCount": "1", "references": []},
{"doi": "10.1109/ASE.2013.6693090", "title": "A scalable approach for malware detection through bounded feature space behavior modeling", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Malware", "Feature extraction", "Computational modeling", "File systems", "Scalability", "Instruction sets"], "abstract": "In recent years, malware (malicious software) has greatly evolved and has become very sophisticated. The evolution of malware makes it difficult to detect using traditional signature-based malware detectors. Thus, researchers have proposed various behavior-based malware detection techniques to mitigate this problem. However, there are still serious shortcomings, related to scalability and computational complexity, in existing malware behavior modeling techniques. This raises questions about the practical applicability of these techniques. This paper proposes and evaluates a bounded feature space behavior modeling (BOFM) framework for scalable malware detection. BOFM models the interactions between software (which can be malware or benign) and security-critical OS resources in a scalable manner. Information collected at run-time according to this model is then used by machine learning algorithms to learn how to accurately classify software as malware or benign. One of the key problems with simple malware behavior modeling (e.g., n-gram model) is that the number of malware features (i.e., signatures) grows proportional to the size of execution traces, with a resulting malware feature space that is so large that it makes the detection process very challenging. On the other hand, in BOFM, the malware feature space is bounded by an upper limit N, a constant, and the results of our experiments show that its computation time and memory usage are vastly lower than in currently reported, malware detection techniques, while preserving or even improving their high detection accuracy.", "author": [{"name": "Mahinthan Chandramohan", "affiliation": "School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore"}, {"name": "Hee Beng Kuan Tan", "affiliation": "SnT Centre, University of Luxembourg, Luxembourg"}, {"name": "Lionel C. Briand", "affiliation": "SnT Centre, University of Luxembourg, Luxembourg"}, {"name": "Lwin Khin Shar", "affiliation": "School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore"}, {"name": "Bindu Madhavi Padmanabhuni", "affiliation": "School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore"}], "time": "Nov. 2013", "citationCount": "11", "references": []},
{"doi": "10.1109/ASE.2019.00103", "title": "LIRAT: Layout and Image Recognition Driving Automated Mobile Testing of Cross-Platform", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Layout", "Smart phones", "Testing", "Tools", "Feature extraction", "Image recognition", "Optical character recognition software"], "abstract": "The fragmentation issue spreads over multiple mobile platforms such as Android, iOS, mobile web, and WeChat, which hinders test scripts from running across platforms. To reduce the cost of adapting scripts for various platforms, some existing tools apply conventional computer vision techniques to replay the same script on multiple platforms. However, because these solutions can hardly identify dynamic or similar widgets. It becomes difficult for engineers to apply them in practice. In this paper, we present an image-driven tool, namely LIRAT, to record and replay test scripts cross platforms, solving the problem of test script cross-platform replay for the first time. LIRAT records screenshots and layouts of the widgets, and leverages image understanding techniques to locate them in the replay process. Based on accurate widget localization, LIRAT supports replaying test scripts across devices and platforms. We employed LIRAT to replay 25 scripts from 5 application across 8 Android devices and 2 iOS devices. The results show that LIRAT can replay 88% scripts on Android platforms and 60% on iOS platforms. The demo can be found at: https: //github.com/YSC9848/LIRAT.", "author": [{"name": "Shengcheng Yu", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Chunrong Fang", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Yang Feng", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Wenyuan Zhao", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, China"}, {"name": "Zhenyu Chen", "affiliation": "State Key Laboratory for Novel Software Technology, Nanjing University, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Sitar: GUI test script repair\"", "authors": ["Z. Gao", " Z. Chen", " Y. Zou ", " A. M. Memon"]}, {"title": " \"Sikuli: using GUI screenshots for search and automation\"", "authors": ["T. Yeh", " T.-H. Chang ", " R. C. Miller"]}, {"title": " \"Object recognition from local scale-invariant features\"", "authors": ["D. G. Lowe ."]}, {"title": " \"A computational approach to edge detection\"", "authors": ["J. Canny"]}, {"title": " \"GUI testing using computer vision\"", "authors": ["T.-H. Chang", " T. Yeh ", " R. C. Miller"]}, {"title": " \"Distinctive image features from scale-invariant keypoints\"", "authors": ["D. G. Lowe"]}, {"title": " \"Reverse engineering mobile application user interfaces with REMAUI\"", "authors": ["T. A. Nguyen ", " C. Csallner"]}, {"title": " \"Cross-platform testing and maintenance of web and mobile applications\"", "authors": ["S. Roy Choudhary"]}, {"title": " \"Design and application of a Sikuli based capture-replay tool\"", "authors": ["J.-l. Sun", " S.-w. Zhang", " S. Huang ", " Z.-w. Hui"]}, {"title": " \"Machine learning-based prototyping of graphical user interfaces for mobile apps\"", "authors": ["K. Moran", " C. Bernal-Cardenas", " M. Curcio", " R. Bonett ", " D. Poshyvanyk"]}, {"title": " \"From UI design image to GUI skeleton: a neural machine translator to bootstrap mobile gui implementation\"", "authors": ["C. Chen", " T. Su", " G. Meng", " Z. Xing ", " Y. Liu"]}]},
{"doi": "10.1109/ASE.2013.6693091", "title": "Automatically partition software into least privilege components using dynamic data dependency analysis", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Software", "Authentication", "Educational institutions", "Writing", "Databases", "Performance analysis"], "abstract": "The principle of least privilege requires that software components should be granted only necessary privileges, so that compromising one component does not lead to compromising others. However, writing privilege separated software is difficult and as a result, a large number of software is monolithic, i.e., it runs as a whole without separation. Manually rewriting monolithic software into privilege separated software requires significant effort and can be error prone. We propose ProgramCutter, a novel approach to automatically partitioning monolithic software using dynamic data dependency analysis. ProgramCutter works by constructing a data dependency graph whose nodes are functions and edges are data dependencies between functions. The graph is then partitioned into subgraphs where each subgraph represents a least privilege component. The privilege separated software runs each component in a separated process with confined system privileges. We evaluate it by applying it on four open source software. We can reduce the privileged part of the program from 100% to below 22%, while having a reasonable execution time overhead. Since ProgramCutter does not require any expert knowledge of the software, it not only can be used by its developers for software refactoring, but also by end users or system administrators. Our contributions are threefold: (i) we define a quantitative measure of the security and performance of privilege separation; (ii) we propose a graph-based approach to compute the optimal separation based on dynamic information flow analysis; and (iii) the separation process is automatic and does not require expert knowledge of the software.", "author": [{"name": "Yongzheng Wu", "affiliation": "Singapore University of Technology and Design"}, {"name": "Jun Sun", "affiliation": "Singapore University of Technology and Design"}, {"name": "Yang Liu", "affiliation": "Nanyang Technological University"}, {"name": "Jin Song Dong", "affiliation": "School of Computing National University of Singapore"}], "time": "Nov. 2013", "citationCount": "8", "references": [{"title": "CVE-2003-0682: \"Memory bugs\" in OpenSSH 3.7.1 and earlier. http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2003-0682", "authors": []}, {"title": "CVE-2003-0695: Multiple \"buffer management errors\" in OpenSSH before 3.7.1 may allow attackers to cause a denial of service or execute arbitrary code. http://web.nvd.nist.gov/view/vuln/detail?vulnId= CVE-2003-0695", "authors": []}]},
{"doi": "10.1109/ASE.2019.00104", "title": "Humanoid: A Deep Learning-Based Approach to Automated Black-box Android App Testing", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Humanoid robots", "Tools", "Testing", "Generators", "Graphical user interfaces", "Open source software", "Mobile applications"], "abstract": "Automated input generators must constantly choose which UI element to interact with and how to interact with it, in order to achieve high coverage with a limited time budget. Currently, most black-box input generators adopt pseudo-random or brute-force searching strategies, which may take very long to find the correct combination of inputs that can drive the app into new and important states. We propose Humanoid, an automated black-box Android app testing tool based on deep learning. The key technique behind Humanoid is a deep neural network model that can learn how human users choose actions based on an app's GUI from human interaction traces. The learned model can then be used to guide test input generation to achieve higher coverage. Experiments on both open-source apps and market apps demonstrate that Humanoid is able to reach higher coverage, and faster as well, than the state-of-the-art test input generators. Humanoid is open-sourced at https://github.com/yzygitzh/Humanoid and a demo video can be found at https://youtu.be/PDRxDrkyORs.", "author": [{"name": "Yuanchun Li", "affiliation": "Key Laboratory of High Confidence Software Technologies (Ministry of Education), School of EECS, Peking University, Beijing, China"}, {"name": "Ziyue Yang", "affiliation": "Key Laboratory of High Confidence Software Technologies (Ministry of Education), School of EECS, Peking University, Beijing, China"}, {"name": "Yao Guo", "affiliation": "Key Laboratory of High Confidence Software Technologies (Ministry of Education), School of EECS, Peking University, Beijing, China"}, {"name": "Xiangqun Chen", "affiliation": "Key Laboratory of High Confidence Software Technologies (Ministry of Education), School of EECS, Peking University, Beijing, China"}], "time": "Nov. 2019", "citationCount": "3", "references": [{"title": " \"Dynodroid: An input generation system for android apps\"", "authors": ["A. Machiry", " R. Tahiliani ", " M. Naik"]}, {"title": " \"Using gui ripping for automated testing of android applications\"", "authors": ["D. Amalfitano", " A. R. Fasolino", " P. Tramontana", " S. De Carmine ", " A. M. Memon"]}, {"title": " \"Automated model-based android gui testing using multi-level gui comparison criteria\"", "authors": ["Y.-M. Baek ", " D.-H. Bae"]}, {"title": " \"Rico: A mobile app dataset for building data-driven design applications\"", "authors": ["B. Deka", " Z. Huang", " C. Franzen", " J. Hibschman", " D. Afergan", " Y. Li", " ."]}, {"title": " \"Automated test input generation for android: Are we there yet?\"", "authors": ["S. R. Choudhary", " A. Gorla ", " A. Orso"]}, {"title": " \"Puma: Programmable ui-automation for large-scale dynamic analysis of mobile apps\"", "authors": ["S. Hao", " B. Liu", " S. Nath", " W. G. Halfond ", " R. Govindan"]}, {"title": " \"Guided stochastic model-based gui testing of android apps\"", "authors": ["T. Su", " G. Meng", " Y. Chen", " K. Wu", " W. Yang", " Y. Yao", " ."]}, {"title": " \"Guiding app testing with\u00b4 mined interaction models\"", "authors": ["N. P. Borges", " M. Gomez ", " A. Zeller"]}, {"title": " \"Sapienz: Multi-objective automated testing for android applications\"", "authors": ["K. Mao", " M. Harman ", " Y. Jia"]}, {"title": " \"Droidbot: A lightweight ui-guided test input generator for android\"", "authors": ["Y. Li", " Z. Yang", " Y. Guo ", " X. Chen"]}, {"title": " \"An empirical study of android test generation tools in industrial cases\"", "authors": ["W. Wang", " D. Li", " W. Yang", " Y. Cao", " Z. Zhang", " Y. Deng", " ."]}, {"title": " \"Automated concolic testing of smartphone apps\"", "authors": ["S. An", "", " M. Naik", " M. J. Harrold ", " H. Yang"]}, {"title": " \"Targeted and depth-first exploration for systematic testing of android apps\"", "authors": ["T. Azim ", " I. Neamtiu"]}]},
{"doi": "10.1109/ASE.2013.6693092", "title": "Finding architectural flaws using constraints", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Runtime", "Abstracts", "Connectors", "Standards", "Encryption", "Encoding"], "abstract": "During Architectural Risk Analysis (ARA), security architects use a runtime architecture to look for security vulnerabilities that are architectural flaws rather than coding defects. The current ARA process, however, is mostly informal and manual. In this paper, we propose Scoria, a semi-automated approach for finding architectural flaws. Scoria uses a sound, hierarchical object graph with abstract objects and dataflow edges, where edges can refer to nodes in the graph. The architects can augment the object graph with security properties, which can express security information unavailable in code. Scoria allows architects to write queries on the graph in terms of the hierarchy, reachability, and provenance of a dataflow object. Based on the query results, the architects enhance their knowledge of the system security and write expressive constraints. The expressiveness is richer than previous approaches that check only for the presence or absence of communication or do not track a dataflow as an object. To evaluate Scoria, we apply these constraints to several extended examples adapted from the CERT standard for Java to confirm that Scoria can detect injected architectural flaws. Next, we write constraints to enforce an Android security policy and find one architectural flaw in one Android application.", "author": [{"name": "Radu Vanciu", "affiliation": "Department of Computer Science, Wayne State University, Detroit, Michigan, USA"}, {"name": "Marwan Abi-Antoun", "affiliation": "Department of Computer Science, Wayne State University, Detroit, Michigan, USA"}], "time": "Nov. 2013", "citationCount": "3", "references": [{"title": " \"FindBugsTM- Find Bugs in Java Programs", "authors": ["University of Maryl", ""]}, {"title": " \"Analyzing Security Architectures", "authors": ["M. Abi-Antoun ", " J. M. Barnes"]}, {"title": " \"Extracting and Analyzing the Implemented Security Architecture of Business Applications", "authors": ["B. Berger", " K. Sohr", " ", " R. Koschke"]}, {"title": " \"Static Extraction and Conformance Analysis of Hierarchical Runtime Architectural Structure using Annotations", "authors": ["M. Abi-Antoun ", " J. Aldrich"]}, {"title": " \"Ownership Object Graphs with Dataflow Edges", "authors": ["R. Vanciu ", " M. Abi-Antoun"]}, {"title": " \"Demystifying the Threat-Modeling Process", "authors": ["P. Torr"]}, {"title": " \"ArchJava: Connecting Software Architecture to Implementation", "authors": ["J. Aldrich", " C. Chambers", " ", " D. Notkin"]}, {"title": " \"Automated verification of UMLsec models for security requirements", "authors": ["J. J\u00fcrjens ", " P. Shabalin"]}, {"title": " \"SecureUML: a UML-Based Modeling Language for Model-Driven Security", "authors": ["T. Lodderstedt", " D. A. Basin", " ", " J. Doser"]}, {"title": " \"Automatic Distribution of Object-Oriented Programs", "authors": ["A. Spiegel"]}, {"title": " \"Scoria Evaluation. Online Appendix", "authors": ["R. Vanciu ", " M. Abi-Antoun"]}, {"title": " \"Java Platform Standard Edition 6 API Specification", "authors": ["Oracle"]}, {"title": " \"Mobile Application Security on Android", "authors": ["J. Burns"]}, {"title": " \"Android API Guides", "authors": ["Google"]}, {"title": " \"Software Analytics for Mobile Applications - Insights & Lessons Learned", "authors": ["R. Minelli ", " M. Lanza"]}, {"title": " \"Parameterized Object Sensitivity for Points-To Analysis for Java", "authors": ["A. Milanova", " A. Rountev", " ", " B. G. Ryder"]}, {"title": " \"Lightweight Extraction of Object Models from Bytecode", "authors": ["D. Jackson ", " A. Waingold"]}, {"title": " \"The Soot Framework for Java Program Analysis: A Retrospective", "authors": ["P. Lam", " E. Bodden", " O. Lhot\u00e1k", " ", " L. Hendren"]}, {"title": " \"T. J. Watson Libraries for Analysis (WALA)", "authors": ["IBM"]}, {"title": " \"Automatically Securing Permission-Based Software by Reducing the Attack Surface: An Application to Android", "authors": ["A. Bartel", " J. Klein", " Y. Le Traon", " ", " M. Monperrus"]}, {"title": " \"A Study of Android Application Security", "authors": ["W. Enck", " D. Octeau", " P. McDaniel", " ", " S. Chaudhuri"]}, {"title": " \"SCanDroid: Automated Security Certification of Android Applications", "authors": ["A. Fuchs", " A. Chaudhuri", " ", " J. Foster"]}, {"title": " \"A few billion lines of code later: using static analysis to find bugs in the real world", "authors": ["A. Bessey", " K. Block", " B. Chelf", " A. Chou", " B. Fulton", " S. Hallem", " C. Henri-Gros", " A. Kamsky", " S. McPeak", " ", " D. Engler"]}, {"title": " \"Static analysis for security", "authors": ["B. Chess ", " G. McGraw"]}, {"title": " \"Fine-Grained Access Control with Object-Sensitive Roles", "authors": ["J. Fischer", " D. Marino", " R. Majumdar", " ", " T. Millstein"]}, {"title": " \"Taking an Object-Centric View on Dynamic Information with Object Flow Analysis", "authors": ["A. Lienhard", " S. Ducasse", " ", " T. G\u00eerba"]}, {"title": " \"Making Sense of Large Heaps", "authors": ["N. Mitchell", " E. Schonberg", " ", " G. Sevitsky"]}, {"title": " \"Abstracting Runtime Heaps for Program Understanding", "authors": ["M. Marron", " C. Sanchez", " Z. Su", " ", " M. Fahndrich"]}, {"title": " \"Verifying Security Invariants in ExpressOS", "authors": ["H. Mai", " E. Pek", " H. Xue", " S. T. King", " ", " P. Madhusudan"]}, {"title": " \"The Common Weakness Enumeration (CWE) Initiative", "authors": ["MITRE Corporation"]}, {"title": " \"Idea: Towards Architecture-Centric Security Analysis of Software", "authors": ["K. Sohr ", " B. Berger"]}, {"title": " \"Bauhaus - a Tool Suite for Program Analysis and Reverse Engineering", "authors": ["A. Raza", " G. Vogel", " ", " E. Pl \u00f6dereder"]}, {"title": " \"Object Constraint Language", "authors": ["OMG"]}, {"title": " \"Software Reflexion Models: Bridging the Gap between Design and Implementation\" Transactions on Software Engineering (TSE)", "authors": ["G. Murphy", " D. Notkin", " ", " K. Sullivan"]}, {"title": " \"Supporting automated vulnerability analysis using formalized vulnerability signatures", "authors": ["M. Almorsy", " J. Grundy", " ", " A. S. Ibrahim"]}, {"title": " \"Automated Software Architecture Security Risk Analysis using Formalized Signatures", "authors": ["-"]}, {"title": " \"Formally Analyzing Software Architectural Specifications Using SAM", "authors": ["X. He", " H. Yu", " T. Shi", " J. Ding", " ", " Y. Deng"]}, {"title": " \"JFlow: Practical Mostly-Static Information Flow Control", "authors": ["A. C. Myers"]}, {"title": " \"TAJ: Effective Taint Analysis of Web Applications", "authors": ["O. Tripp", " M. Pistoia", " S. J. Fink", " M. Sridharan", " ", " O. Weisman"]}, {"title": " \"Highly Precise Taint Analysis for Android Applications", "authors": ["C. Fritz", " S. Arzt", " S. Rasthofer", " E. Bodden", " A. Bartel", " J. Klein", " Y. le Traon", " D. Octeau", " ", " P. McDaniel"]}, {"title": " \"ANDROMEDA: Accurate and Scalable Security Analysis of Web Applications", "authors": ["O. Tripp", " M. Pistoia", " P. Cousot", " R. Cousot", " ", " S. Guarnieri"]}, {"title": " \"Analyzing a Heap Dump Using Object Query Language (OQL)", "authors": ["VisualVM"]}, {"title": " \"Finding Application Errors and Security Flaws Using PQL: a Program Query Language", "authors": ["M. Martin", " B. Livshits", " ", " M. S. Lam"]}]},
{"doi": "10.1109/ASE.2019.00105", "title": "TestCov: Robust Test-Suite Execution and Coverage Measurement", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Containers", "Generators", "Tools", "Standards", "Metadata", "Linux", "Computer architecture"], "abstract": "We present TestCov, a tool for robust test-suite execution and test-coverage measurement on C programs. TestCov executes program tests in isolated containers to ensure system integrity and reliable resource control. The tool provides coverage statistics per test and for the whole test suite. TestCov uses the simple, XML -based exchange format for test-suite specifications that was established as standard by Test-Comp. TestCov has been successfully used in Test-Comp '19 to execute almost 9 million tests on 1720 different programs. The source code of TestCov is released under the open-source license Apache 2.0 and available at https://gitlab.com/sosy-lab/software/test-suite-validator. A full artifact, including a demonstration video, is available at https://doi.org/10.5281/zenodo.3418726.", "author": [{"name": "Dirk Beyer", "affiliation": "LMU Munich, Germany"}, {"name": "Thomas Lemberger", "affiliation": "LMU Munich, Germany"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"\u201cCompetition on software testing (Test-Comp)\"", "authors": ["D. Beyer"]}, {"title": " \"\u201cCoVeriTest: Cooperative verifier-based testing\"", "authors": ["D. Beyer ", " M.-C. Jakobs"]}, {"title": " \"\u201cSoftware verification: Testing vs. model checking\"", "authors": ["D. Beyer ", " T. Lemberger"]}, {"title": " \"\u201cReliable benchmarking: Requirements and solutions\"", "authors": ["D. Beyer", " S. L\u00f6we ", " P. Wendler"]}, {"title": " \"\u201cReplication package for article TestCov: Robust test-suite execution and coverage measurement\"", "authors": ["D. Beyer ", " T. Lemberger"]}, {"title": " \"\u201cHeuristics for scalable dynamic test generation\"", "authors": ["J. Burnim ", " K. Sen"]}, {"title": " \"\u201cKLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs\"", "authors": ["C. Cadar", " D. Dunbar ", " D. R. Engler"]}, {"title": " \"\u201cJoint forces for memory safety checking\"", "authors": ["M. Chalupa", " J. Strejcek ", " M. Vitovsk\u00e1"]}, {"title": " \"\u201cVeriFuzz: Program-aware fuzzing (competition contribution)\"", "authors": ["A. B. Chowdhury", " R. K. Medicherla ", " R. Venkatesh"]}, {"title": " \"\u201cHandling loops in bounded model checking of C programs via k-induction\"", "authors": ["M. Y. Gadelha", " H. I. Ismail ", " L. C. Cordeiro"]}, {"title": " \"\u201cQuery-driven program testing\"", "authors": ["A. Holzer", " C. Schallhart", " M. Tautschnig ", " H. Veith"]}, {"title": " \"\u201cThe ManyBugs and IntroClass benchmarks for automated repair of C programs\"", "authors": ["C. Le Goues", " N. Holtschulte", " E. K. Smith", " Y. Brun", " P. T. Devanbu", " S. Forrest", " ."]}, {"title": " \"\u201cFairFuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage\"", "authors": ["C. Lemieux ", " K. Sen"]}]},
{"doi": "10.1109/ASE.2013.6693093", "title": "Improving bug localization using structured information retrieval", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Computer bugs", "Measurement", "Accuracy", "Information retrieval", "Indexing", "Java", "Mathematical model"], "abstract": "Locating bugs is important, difficult, and expensive, particularly for large-scale systems. To address this, natural language information retrieval techniques are increasingly being used to suggest potential faulty source files given bug reports. While these techniques are very scalable, in practice their effectiveness remains low in accurately localizing bugs to a small number of files. Our key insight is that structured information retrieval based on code constructs, such as class and method names, enables more accurate bug localization. We present BLUiR, which embodies this insight, requires only the source code and bug reports, and takes advantage of bug similarity data if available. We build BLUiR on a proven, open source IR toolkit that anyone can use. Our work provides a thorough grounding of IR-based bug localization research in fundamental IR theoretical and empirical knowledge and practice. We evaluate BLUiR on four open source projects with approximately 3,400 bugs. Results show that BLUiR matches or outperforms a current state-of-the-art tool across applications considered, even when BLUiR does not use bug similarity data used by the other tool.", "author": [{"name": "Ripon K. Saha", "affiliation": "The University of Texas at Austin, USA"}, {"name": "Matthew Lease", "affiliation": "The University of Texas at Austin, USA"}, {"name": "Sarfraz Khurshid", "affiliation": "The University of Texas at Austin, USA"}, {"name": "Dewayne E. Perry", "affiliation": "The University of Texas at Austin, USA"}], "time": "Nov. 2013", "citationCount": "110", "references": []},
{"doi": "10.1109/ASE.2019.00106", "title": "VisFuzz: Understanding and Intervening Fuzzing with Interactive Visualization", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Fuzzing", "Semantics", "Visualization", "Computer crashes", "Tools", "Real-time systems", "Google"], "abstract": "Fuzzing is widely used for vulnerability detection. One of the challenges for an efficient fuzzing is covering code guarded by constraints such as the magic number and nested conditions. Recently, academia has partially addressed the challenge via whitebox methods. However, high-level constraints such as array sorts, virtual function invocations, and tree set queries are yet to be handled. To meet this end, we present VisFuzz, an interactive tool for better understanding and intervening fuzzing process via real-time visualization. It extracts call graph and control flow graph from source code, maps each function and basic block to the line of source code and tracks real-time execution statistics with detail constraint contexts. With VisFuzz, test engineers first locate blocking constraints and then learn its semantic context, which helps to craft targeted inputs or update test drivers. Preliminary evaluations are conducted on four real-world programs in Google fuzzer-test-suite. Given additional 15 minutes to understand and intervene the state of fuzzing, the intervened fuzzing outperform the original pure AFL fuzzing, and the path coverage improvements range from 10.84% to 150.58%, equally fuzzed by for 12 hours.", "author": [{"name": "Chijin Zhou", "affiliation": "BNRist, School of Software, Tsinghua University, Beijing, China"}, {"name": "Mingzhe Wang", "affiliation": "BNRist, School of Software, Tsinghua University, Beijing, China"}, {"name": "Jie Liang", "affiliation": "BNRist, School of Software, Tsinghua University, Beijing, China"}, {"name": "Zhe Liu", "affiliation": "Computer Science and Technology, Nanjing University of Aeronautics and Astronautics, Nanjing, China"}, {"name": "Chengnian Sun", "affiliation": "Cheriton School of Computer Science, University of Waterloo, Canada"}, {"name": "Yu Jiang", "affiliation": "BNRist, School of Software, Tsinghua University, Beijing, China"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"Coverage-based greybox fuzzing as markov chain\"", "authors": ["M. Bohme", " V. Pham ", " A. Roychoudhury"]}, {"title": " \"Fairfuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage\"", "authors": ["C. Lemieux ", " K. Sen"]}, {"title": " \"Driller: Augmenting fuzzing through selective symbolic execution\"", "authors": ["N. Stephens", " J. Grosen", " C. Salls", " A. Dutcher", " R. Wang", " J. Corbetta", " ."]}, {"title": " \"Rise of the hacrs: Augmenting autonomous cyber reasoning systems with human assistance\"", "authors": ["Y. Shoshitaishvili", " M. Weissbacher", " L. Dresel", " C. Salls", " R. Wang", " C. Kruegel", " ."]}, {"title": " \"KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs\"", "authors": ["C. Cadar", " D. Dunbar ", " D. R. Engler"]}, {"title": " \"Graph drawing by force-directed placement\"", "authors": ["T. M. Fruchterman ", " E. M. Reingold"]}, {"title": " \"Tidier drawings of trees\"", "authors": ["E. M. Reingold ", " J. S. Tilford"]}, {"title": " \"PAFL: extend fuzzing optimizations of single mode to industrial parallel mode\"", "authors": ["J. Liang", " Y. Jiang", " Y. Chen", " M. Wang", " C. Zhou ", " J. Sun"]}, {"title": " \"SAFL: increasing and accelerating testing coverage with symbolic execution and guided fuzzing\"", "authors": ["M. Wang", " J. Liang", " Y. Chen", " Y. Jiang", " X. Jiao", " H. Liu", " ."]}, {"title": " \"Engineering a better fuzzer with synergically integrated optimizations\"", "authors": ["J. Liang", " Y. Chen", " M. Wang", " Y. Jiang", " Z. Yang", " C. Sun", " ."]}, {"title": " \"Enfuzz: Ensemble fuzzing with seed synchronization among diverse fuzzers\"", "authors": ["Y. Chen", " Y. Jiang", " F. Ma", " J. Liang", " M. Wang", " C. Zhou", " ."]}]},
{"doi": "10.1109/ASE.2013.6693094", "title": "Leveraging program equivalence for adaptive program repair: Models and first results", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Maintenance engineering", "Approximation algorithms", "Testing", "Algorithm design and analysis", "Adaptation models", "Optimization", "Search problems"], "abstract": "Software bugs remain a compelling problem. Automated program repair is a promising approach for reducing cost, and many methods have recently demonstrated positive results. However, success on any particular bug is variable, as is the cost to find a repair. This paper focuses on generate-and-validate repair methods that enumerate candidate repairs and use test cases to define correct behavior. We formalize repair cost in terms of test executions, which dominate most test-based repair algorithms. Insights from this model lead to a novel deterministic repair algorithm that computes a patch quotient space with respect to an approximate semantic equivalence relation. This allows syntactic and dataflow analysis techniques to dramatically reduce the repair search space. Generate-and-validate program repair is shown to be a dual of mutation testing, suggesting several possible cross-fertilizations. Evaluating on 105 real-world bugs in programs totaling 5MLOC and involving 10,000 tests, our new algorithm requires an order-of-magnitude fewer test evaluations than the previous state-of-the-art and is over three times more efficient monetarily.", "author": [{"name": "Westley Weimer", "affiliation": "Computer Science Department, University of Virginia, Charlottesville, VA, USA"}, {"name": "Zachary P. Fry", "affiliation": "Computer Science Department, University of Virginia, Charlottesville, VA, USA"}, {"name": "Stephanie Forrest", "affiliation": "Computer Science Department, University of New Mexico, Albuquerque, NM, USA"}], "time": "Nov. 2013", "citationCount": "91", "references": []},
{"doi": "10.1109/ASE.2019.00107", "title": "Developer Reputation Estimator (DRE)", "publisher": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Tools", "Software engineering", "Databases", "Collaboration", "Social networking (online)", "Open source software"], "abstract": "Evidence shows that developer reputation is extremely important when accepting pull requests or resolving reported issues. It is particularly salient in Free/Libre Open Source Software since the developers are distributed around the world, do not work for the same organization and, in most cases, never meet face to face. The existing solutions to expose developer reputation tend to be forge specific (GitHub), focus on activity instead of impact, do not leverage social or technical networks, and do not correct often misspelled developer identities. We aim to remedy this by amalgamating data from all public Git repositories, measuring the impact of developer work, expose developer's collaborators, and correct notoriously problematic developer identity data. We leverage World of Code (WoC), a collection of an almost complete (and continuously updated) set of Git repositories by first allowing developers to select which of the 34 million(M) Git commit author IDs belong to them and then generating their profiles by treating the selected collection of IDs as that single developer. As a side-effect, these selections serve as a training set for a supervised learning algorithm that merges multiple identity strings belonging to a single individual. As we evaluate the tool and the proposed impact measure, we expect to build on these findings to develop reputation badges that could be associated with pull requests and commits so developers could easier trust and prioritize them.", "author": [{"name": "Sadika Amreen", "affiliation": "Department of Electrical Engineering and Computer Science, The University of Tennessee, Knoxville, TN, USA"}, {"name": "Andrey Karnauch", "affiliation": "Department of Electrical Engineering and Computer Science, The University of Tennessee, Knoxville, TN, USA"}, {"name": "Audris Mockus", "affiliation": "Department of Electrical Engineering and Computer Science, The University of Tennessee, Knoxville, TN, USA"}], "time": "Nov. 2019", "citationCount": 0, "references": [{"title": " \"World of Code: An Infrastructure for Mining the Universe of Open Source VCS Data\"", "authors": ["Y. Ma", " C. Bogart", " S. Amreen", " R. Zaretzki ", " A. Mockus"]}, {"title": " \"ALFAA: Active Learning Fingerprint Based Anti-Aliasing for Correcting Developer Identity Errors in Version Control Data\"", "authors": ["S. Amreen", " R. Zaretzki", " A. Mockus", " C. Bogart ", " Y. Zhang"]}, {"title": " \"Expertise browser: a quantitative approach to identifying expertise\"", "authors": ["A. Mockus ", " J. D. Herbsleb"]}, {"title": " \"Characterizing the Roles of Contributors in Open-source Scientific Software Projects\"", "authors": ["R. Milewicz", " G. Pinto ", " P. Rodeghero"]}, {"title": " \"Discovery of technical expertise from open source code repositories\"", "authors": ["R. Venkataramani", " A. Gupta", " A. Asadullah", " B. Muddu ", " V. Bhat"]}, {"title": " \"Involvement contribution and influence in GitHub and stack overflow\"", "authors": ["A. S. Badashian", " A. Esteki", " A. Gholipour", " A. Hindle ", " E. Stroulia"]}, {"title": " \"Impact of developer reputation on code review outcomes in oss projects: An empirical investigation\"", "authors": ["A. Bosu ", " J. C. Carver"]}]},
{"doi": "10.1109/ASE.2013.6693095", "title": "Detecting and characterizing semantic inconsistencies in ported code", "publisher": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "keyword": ["Context", "Linux", "Semantics", "Cloning", "Syntactics", "OFDM", "History"], "abstract": "Adding similar features and bug fixes often requires porting program patches from reference implementations and adapting them to target implementations. Porting errors may result from faulty adaptations or inconsistent updates. This paper investigates (1) the types of porting errors found in practice, and (2) how to detect and characterize potential porting errors. Analyzing version histories, we define five categories of porting errors, including incorrect control- and data-flow, code redundancy, inconsistent identifier renamings, etc. Leveraging this categorization, we design a static control- and data-dependence analysis technique, SPA, to detect and characterize porting inconsistencies. Our evaluation on code from four open-source projects shows that SPA can detect porting inconsistencies with 65% to 73% precision and 90% recall, and identify inconsistency types with 58% to 63% precision and 92% to 100% recall. In a comparison with two existing error detection tools, SPA improves precision by 14 to 17 percentage points.", "author": [{"name": "Baishakhi Ray", "affiliation": "The University of Texas at Austin, Austin, USA"}, {"name": "Miryung Kim", "affiliation": "The University of Texas at Austin, Austin, USA"}, {"name": "Suzette Person", "affiliation": "NASA Langley Research Center, Hampton, USA"}, {"name": "Neha Rungta", "affiliation": "NASA Ames Research Center, Mountain View, USA"}], "time": "Nov. 2013", "citationCount": "16", "references": []},
]