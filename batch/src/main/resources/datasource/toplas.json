[
{"title": "A calculus for uniform feature composition", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "The goal of \n (FOP) is to modularize software systems in terms of features. A \n refines the content of a base program. Both base programs and features may contain various kinds of software artifacts, for example, source code in different languages, models, build scripts, and documentation. We and others have noticed that when composing features, different kinds of software artifacts can be refined in a uniform way, regardless of what they represent. We present gDeep, a core calculus for feature composition, which captures the language independence of FOP; it can be used to compose features containing many different kinds of artifact in a type-safe way. The calculus allows us to gain insight into the principles of FOP and to define general algorithms for feature composition and validation. We provide the formal syntax, operational semantics, and type system of gDeep and outline how languages like Java, Haskell, Bali, and XML can be plugged in.\n", "author": [{"name": "Sven Apel", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Delesley Hutchins", "affiliation": "MZA Associates Corporation, Albuquerque, NM"}, {"name": "Sven Apel", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Delesley Hutchins", "affiliation": "MZA Associates Corporation, Albuquerque, NM"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "31", "references": [{"title": "A Theory of Objects", "authors": ["Abadi"]}, {"title": "Jam\u2014Designing a Java extension with mixins", "authors": ["Ancona", " Lagorio"]}, {"title": "On refining XML artifacts", "authors": ["Anfurrutia", " D\u00edaz"]}, {"title": "An overview of the gDeep calculus", "authors": ["Apel"]}, {"title": "Model superimposition in software product lines", "authors": ["Apel", " J", " Trujillo"]}, {"title": "An overview of feature-oriented software development", "authors": ["Apel"]}, {"title": "Feature (De)composition in functional programming", "authors": ["Apel", " K\u00e4stner", " Gr\u00f6sslinger"]}, {"title": "Type safety for feature-oriented product lines", "authors": ["Apel", " K\u00e4stner", " Gr\u00f6sslinger"]}, {"title": "Feature Featherweight Java: A calculus for feature-oriented programming and stepwise refinement", "authors": ["Apel", " K\u00e4stner"]}, {"title": "FeatureHouse: Language-independent, automated software composition", "authors": ["Apel", " K\u00e4stner"]}, {"title": "FeatureC++: On the symbiosis of feature-oriented and aspect-oriented programming", "authors": ["Apel", " Leich", " Rosenm\u00fcller"]}, {"title": "Aspectual feature modules", "authors": ["Apel", " Leich"]}, {"title": "Superimposition: A language-independent approach to software composition", "authors": ["Apel"]}, {"title": "An algebra for features and feature composition", "authors": ["Apel", " Lengauer", " M\u00f6ller"]}, {"title": "An algebraic foundation for automatic feature-based program synthesis", "authors": ["Apel", " Lengauer", " M\u00f6ller"]}, {"title": "From implementation to theory in product synthesis", "authors": ["Batory"]}, {"title": "Scaling step-wise refinement", "authors": ["Batory", " Sarvela"]}, {"title": "Stateful traits and their formalization", "authors": ["Bergel", " Ducasse", " Nierstrasz"]}, {"title": "A core calculus of classes and mixins", "authors": ["Bono", " Patel"]}, {"title": "Super-imposition: A component adaptation technique", "authors": ["Bosch"]}, {"title": "The recursive record semantics of objects revisited", "authors": ["Boudol"]}, {"title": "A compositional approach to superimposition", "authors": ["Bouge"]}, {"title": "Mixin-based inheritance", "authors": ["Bracha"]}, {"title": "On understanding types, data abstraction, and polymorphism", "authors": ["Cardelli"]}, {"title": "Tribe: A simple virtual class calculus", "authors": ["Clarke", " Drossopoulou", " Noble"]}, {"title": "Typed operational semantics for higher order subtyping", "authors": ["Compagnoni"]}, {"title": "Object-oriented programming versus abstract data types", "authors": ["Cook"]}, {"title": "Fitting the pieces together: A machine-checked model of safe composition", "authors": ["Delaware", " Cook"]}, {"title": "Traits: A mechanism for fine-grained reuse", "authors": ["Ducasse", " Nierstrasz", " Sch\u00e4rli", " Wuyts"]}, {"title": "Family polymorphism", "authors": ["Ernst"]}, {"title": "Higher-order hierarchies", "authors": ["Ernst"]}, {"title": "A virtual class calculus", "authors": ["Ernst", " Ostermann"]}, {"title": "Modular object-oriented programming with units and mixins", "authors": ["Findler"]}, {"title": "Classes and mixins", "authors": ["Flatt", " Krishnamurthi"]}, {"title": "Eliminating distinctions of class: Using prototypes to model virtual classes", "authors": ["Hutchins"]}, {"title": "Pure Subtype Systems: A Type Theory For Extensible Software", "authors": ["Hutchins"]}, {"title": "Pure Subtype Systems", "authors": ["Hutchins"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Lambda lifting: Transforming programs to recursive equations", "authors": ["Johnsson"]}, {"title": "McJava\u2014A design and implementation of Java with mixin-types", "authors": ["Kamina"]}, {"title": "Type-checking software product lines\u2014A formal approach", "authors": ["K\u00e4stner"]}, {"title": "On the impact of the optional feature problem: Analysis and case studies", "authors": ["K\u00e4stner", " Apel", " ur Rahman", " Rosenm\u00fcller", " Batory"]}, {"title": "Aspect-oriented programming", "authors": ["Kiczales", " Lamping", " Mendhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "Synthesizing object-oriented and functional design to promote re-use", "authors": ["Krishnamurthi", " Felleisen"]}, {"title": "Verifying cross-cutting features as open systems", "authors": [" Krishnamurthi"]}, {"title": "Modular verification of open features using three-valued model checking", "authors": [" Krishnamurthi"]}, {"title": "Feature-oriented refactoring of legacy applications", "authors": ["Liu", " Batory"]}, {"title": "A disciplined approach to aspect composition", "authors": ["Lopez-Herrejon", " Batory"]}, {"title": "Virtual classes: A powerful mechanism in object-oriented programming", "authors": ["Madsen"]}, {"title": "Aspect-oriented programming with Jiazzi", "authors": ["McDirmid"]}, {"title": "A framework for modular linking in OO languages", "authors": ["McDirmid", " Hsieh"]}, {"title": "Variability management with feature-oriented programming and aspects", "authors": ["Mezini"]}, {"title": "Modular statically typed multimethods", "authors": ["Millstein"]}, {"title": "Scalable extensibility via nested inheritance", "authors": ["Nystrom", " Chong"]}, {"title": "A nominal theory of objects with dependent types", "authors": ["Odersky", " Cremet", " R\u00f6ckl"]}, {"title": "Combination of inheritance hierarchies", "authors": ["Ossher"]}, {"title": "Bounded quantification is undecidable", "authors": ["Pierce"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Feature-oriented programming: A fresh look at objects", "authors": ["Prehofer"]}, {"title": "User-defined types and procedural data structures as complementary approaches to data abstraction", "authors": ["Reynolds"]}, {"title": "Mixin layers: An object-oriented implementation technique for refinements and collaboration-based designs", "authors": ["Smaragdakis"]}, {"title": "Polarized higher-order subtyping", "authors": ["Steffen"]}, {"title": "Higher-order subtyping", "authors": ["Steffen"]}, {"title": "N degrees of separation: Multi-dimensional separation of concerns", "authors": ["Tarr", " Ossher", " Harrison"]}, {"title": "Term rewriting systems", "authors": ["Terese"]}, {"title": "Safe composition of product lines", "authors": ["Thaker", " Batory", " Kitchin"]}, {"title": "The expression problem revisited", "authors": ["Torgersen"]}, {"title": "Feature refactoring a multi-representation program into a product line", "authors": ["Trujillo", " Batory"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}, {"title": "Independently extensible solutions to the expression problem", "authors": ["Zenger"]}]},
{"title": "Reverse-mode AD in a functional framework: Lambda the ultimate backpropagator", "time": "March 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We show that reverse-mode AD (Automatic Differentiation)\u2014a generalized gradient-calculation operator\u2014can be incorporated as a first-class function in an augmented lambda calculus, and therefore into a functional-programming language. Closure is achieved, in that the new operator can be applied to any expression in the augmented language, yielding an expression in that language. This requires the resolution of two major technical issues: (a) how to transform nested lambda expressions, including those with free-variable references, and (b) how to support self application of the AD machinery. AD transformations preserve certain complexity properties, among them that the reverse phase of the reverse-mode AD transformation of a function have the same temporal complexity as the original untransformed function. First-class unrestricted AD operators increase the expressive power available to the numeric programmer, and may have significant practical implications for the construction of numeric software that is robust, modular, concise, correct, and efficient.\n", "author": [{"name": "Barak A. Pearlmutter", "affiliation": "National University of Ireland Maynooth, Co. Kildare, Ireland"}, {"name": "Jeffrey Mark Siskind", "affiliation": "Purdue University, West Lafayette, IN"}, {"name": "Barak A. Pearlmutter", "affiliation": "National University of Ireland Maynooth, Co. Kildare, Ireland"}, {"name": "Jeffrey Mark Siskind", "affiliation": "Purdue University, West Lafayette, IN"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "23", "references": [{"title": "SSA is functional programming", "authors": ["Appel"]}, {"title": "Automatic Hessians by reverse accumulation", "authors": ["Christianson"]}, {"title": "Automatic Differentiation: From Simulation to Optimization", "authors": ["Corliss", " Faure", " Griewank", " Hasco\u00ebt"]}, {"title": "Evaluating Derivatives: Principles and Techniques of Algorithmic Differentiation", "authors": ["Griewank"]}, {"title": "Adol-C, a package for the automatic differentiation of algorithms written in C/C&plus;&plus;", "authors": ["Griewank", " Juedes"]}, {"title": "Tapenade 2", "authors": ["Hasco\u00ebt"]}, {"title": "Functional differentiation of computer programs", "authors": ["Karczmarczuk"]}, {"title": "Lazy differential algebra and its applications", "authors": ["Karczmarczuk"]}, {"title": "Functional coding of differential forms", "authors": ["Karczmarczuk"]}, {"title": "Adjoint codes in functional framework", "authors": ["Karczmarczuk"]}, {"title": "Lazy time reversal, and automatic differentiation", "authors": ["Karczmarczuk"]}, {"title": "Calcul des adjoints et programmation paresseuse", "authors": ["Karczmarczuk"]}, {"title": "Functional differentiation of computer programs", "authors": ["Karczmarczuk"]}, {"title": "Automatic differentiation of computer programs", "authors": ["Kedem"]}, {"title": "Revised report on the algorithmic language Scheme", "authors": ["Kelsey", " Clinger"]}, {"title": "A correspondence between continuation passing style and static single assignment form", "authors": ["Kelsey"]}, {"title": "Fast exact multiplication by the Hessian", "authors": ["Pearlmutter"]}, {"title": "Lazy multivariate higher-order forward-mode AD", "authors": ["Pearlmutter"]}, {"title": "Numerical Recipes in C, 2nd ed", "authors": ["Press", " Teukolsky", " Vetterling"]}, {"title": "Automatic Differentiation: Techniques and Applications", "authors": ["Rall"]}, {"title": "Learning representations by back-propagating errors", "authors": ["Rumelhart", " Hinton"]}, {"title": "Reasoning about programs in continuation-passing style", "authors": ["Sabry"]}, {"title": "Flow-directed lightweight closure conversion", "authors": ["Siskind"]}, {"title": "Perturbation confusion and referential transparency: Correct functional implementation of forward-mode AD", "authors": ["Siskind"]}, {"title": "Nesting forward-mode AD in a functional framework", "authors": ["Siskind"]}, {"title": "Compiling fast partial derivatives of functions given by algorithms", "authors": ["Speelpenning"]}, {"title": "Structure and Interpretation of Classical Mechanics", "authors": ["Sussman", " Wisdom"]}, {"title": "A simple automatic derivative evaluation program", "authors": ["Wengert"]}, {"title": "Neural networks, system identification, and control in the chemical process industries", "authors": ["Werbos"]}]},
{"title": "Exceptional situations and program reliability", "time": "March 2008", "keyword": ["Programming Languages and Systems"], "abstract": "It is difficult to write programs that behave correctly in the presence of run-time errors. Proper behavior in the face of exceptional situations is important to the reliability of long-running programs. Existing programming language features often provide poor support for executing clean-up code and for restoring invariants.\nWe present a data-flow analysis for finding a certain class of exception-handling defects: those related to a failure to release resources or to clean up properly along all paths. Many real-world programs violate such resource usage rules because of incorrect exception handling. Our flow-sensitive analysis keeps track of outstanding obligations along program paths and does a precise modeling of control flow in the presence of exceptions. Using it, we have found over 1,300 exception handling defects in over 5 million lines of Java code.\nBased on those defects we propose a programming language feature, the compensation stack, that keeps track of obligations at run time and ensures that they are discharged. We present a type system for compensation stacks that tracks collections of obligations. Finally, we present case studies to demonstrate that this feature is natural, efficient, and can improve reliability.\n", "author": [{"name": "Westley Weimer", "affiliation": "University of California, Berkeley, CA"}, {"name": "George C. Necula", "affiliation": "University of California, Berkeley, CA"}, {"name": "Westley Weimer", "affiliation": "University of California, Berkeley, CA"}, {"name": "George C. Necula", "affiliation": "University of California, Berkeley, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "46", "references": [{"title": "Specification language", "authors": ["Abrial", " Schuman"]}, {"title": "Compilers: Principles, Techniques and Tools", "authors": ["Aho", " Sethi"]}, {"title": "Enhancing the fault tolerance of workflow management systems", "authors": ["Alonso", " Hagen", " Agrawal", " Abbadi"]}, {"title": "Failure handling in large-scale workflow management systems", "authors": ["Alonso", " Kamath", " Agrawal", " Abbadi", " Gunthor"]}, {"title": "Automatically validating temporal safety properties of interfaces", "authors": ["Ball"]}, {"title": "SLIC: A specification language for interface checking (of C)", "authors": ["Ball"]}, {"title": "Destructors, finalizers and synchronization", "authors": ["Boehm"]}, {"title": "Fault tolerance under UNIX", "authors": ["Borg", " Blau", " Graetsch", " Herrmann"]}, {"title": "Undo for operators: Building an undoable e-mail store", "authors": ["Brown"]}, {"title": "Discovering faults in idiom-based exception handling", "authors": ["Bruntink", " van Deursen"]}, {"title": "The jalapeno dynamic optimizing compiler for Java", "authors": ["Burke", " Choi", " Fink", " Grove", " Hind", " Sarkar", " Serrano", " Sreedhar", " Srinivasan"]}, {"title": "The Java Tutorial", "authors": ["Campione", " Walrath"]}, {"title": "Automatic failure-path inference: A generic introspection technique for internet applications", "authors": [" Delgado", " Chen"]}, {"title": "Service combinators for web computing", "authors": ["Cardelli"]}, {"title": "Exception handling: A false sense of security", "authors": ["Cargill"]}, {"title": "Interprocedural exception analysis for Java", "authors": ["Chang", " Jo", " Yi"]}, {"title": "Complexity of points-to analysis of Java in the presence of exceptions", "authors": ["Chatterjee", " Ryder"]}, {"title": "Pinpoint: Problem determination in large, dynamic Internet services", "authors": ["Chen", " Kiciman", " Fratkin", " Fox"]}, {"title": "Efficient and precise modeling of exceptions for the analysis of Java programs", "authors": ["Choi", " Grove", " Hind"]}, {"title": "Exception handling and software fault tolerance", "authors": ["Cristian"]}, {"title": "Exception handling", "authors": ["Cristian"]}, {"title": "The Coyote project: Framework for multi-party e-commerce", "authors": ["Dan", " Dias", " Nguyen", " Sachs", " Shaikh", " King"]}, {"title": "ESP: Path-sensitive program verification in polynomial time", "authors": ["Das", " Lerner"]}, {"title": "Organizing long-running activities with triggers and transactions", "authors": ["Dayal", " Hsu"]}, {"title": "Enforcing high-level protocols in low-level software", "authors": ["DeLine"]}, {"title": "Automatic data structure repair for self-healing systems", "authors": ["Demsky"]}, {"title": "A fully object-oriented exception handling system", "authors": ["Dony"]}, {"title": "Checking system rules using system-specific, programmer-written compiler extensions", "authors": ["Engler", " Chelf", " Chou"]}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["F\u00e4hndrich"]}, {"title": "Effective typestate verification in the presence of aliasing", "authors": ["Fink", " Yahav", " Dor", " Ramalingam"]}, {"title": "Robustness testing of Java server applications", "authors": [" Milanova", " Ryder"]}, {"title": "Testing of Java web services for robustness", "authors": [" Ryder", " Milanova"]}, {"title": "Sagas", "authors": ["Garcia-Molina"]}, {"title": "Memory management with explicit regions", "authors": ["Gay"]}, {"title": "Telecommunications: Glossary of Telecommunication terms", "authors": ["General Services Administration"]}, {"title": "Exception handling: issues and a proposed notation", "authors": ["Goodenough"]}, {"title": "The Java Language Specification", "authors": ["Gosling", " Joy"]}, {"title": "The transaction concept: virtues and limitations", "authors": ["Gray"]}, {"title": "Optimizing Java programs in the presence of exceptions", "authors": ["Gupta", " Choi"]}, {"title": "Exception handling in workflow management systems", "authors": ["Hagen"]}, {"title": "Low-overhead memory leak detection using adaptive statistical profiling", "authors": ["Hauswirth"]}, {"title": "The C&num; Programming Language", "authors": ["Hejlsberg", " Wilamuth"]}, {"title": "Object/relational mapping and transparent object persistence for Java and SQL databases", "authors": ["Hibernate"]}, {"title": "Introduction to Automata Theory, Languages, and Computation (2nd Edition)", "authors": ["Hopcroft", " Motwani"]}, {"title": "Finding bugs is easy", "authors": ["Hovemeyer"]}, {"title": "A unified approach to global program optimization", "authors": ["Kildall"]}, {"title": "A formal approach to recovery by compensating transactions", "authors": ["Korth", " Levy"]}, {"title": "Bug isolation via remote program sampling", "authors": ["Liblit", " Aiken", " Zheng"]}, {"title": "The Java Virtual Machine Specification", "authors": ["Lindholm"]}, {"title": "Guardians and actions: Linguistic support for robust, distributed programs", "authors": ["Liskov"]}, {"title": "Improving backward recovery in workflow systems", "authors": ["Liu", " Orlowska", " Lin"]}, {"title": "Exploring failure transparency and the limits of generic recovery", "authors": ["Lowell", " Ch"]}, {"title": "Discount checking: transparent, low-overhead recovery for general applications", "authors": ["Lowell"]}, {"title": "Practical exception specifications", "authors": ["Malayeri"]}, {"title": "Issues with exception handling in object-oriented systems", "authors": ["Miller"]}, {"title": "Cil: An infrastructure for C program analysis and transformation", "authors": ["Necula", " McPeak", " Rahul"]}, {"title": "CCured: Type-safe retrofitting of legacy code", "authors": ["Necula", " McPeak"]}, {"title": "Pizza into Java: Translating theory into practice", "authors": ["Odersky"]}, {"title": "Always close streams", "authors": ["O'Hanley"]}, {"title": "Oracle9i JDBC developer's guide and reference", "authors": ["Perry", " Sanko", " Wright"]}, {"title": "Saber: Smart analysis based error reduction", "authors": ["Reimer", " Schonberg", " Srinivas", " Srinivasan", " Alpern", " Johnson", " Kershenbaum"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": "Static analysis to support the evolution of exception structure in object-oriented systems", "authors": ["Robillard"]}, {"title": "A static study of Java exceptions using jesp", "authors": ["Ryder", " Smith", " Kremer", " Gordon"]}, {"title": "Eraser: A dynamic data race detector for multithreaded programs", "authors": ["Savage", " Burrows", " Nelson", " Sobalvarro"]}, {"title": "Experience with transactions in QuickSilver", "authors": ["Schmuck"]}, {"title": "Dealing with disaster: Surviving misbehaved kernel extensions", "authors": ["Seltzer", " Endo", " Small"]}, {"title": "EROS: A fast capability system", "authors": ["Shapiro", " Smith"]}, {"title": "Criteria for testing exception-handling constructs in Java programs", "authors": ["Sinha"]}, {"title": "Analysis and testing of programs with exception handling constructs", "authors": ["Sinha"]}, {"title": "Automated support for development, maintenance, and testing in the presence of implicit control flow", "authors": ["Sinha", " Orso"]}, {"title": "About SourceForge", "authors": []}, {"title": "Debugging with GDB", "authors": ["Stallman", " Pesch"]}, {"title": "The C&plus;&plus; Programming Language (second edition)", "authors": ["Stroustrup"]}, {"title": "Java pet store 1", "authors": ["Sun Microsystems"]}, {"title": "Region-based memory management", "authors": ["Tofte"]}, {"title": "A case study in software adaptation", "authors": ["Valetto"]}, {"title": "Creating the C&plus;&plus; auto_ptr&lt;&gt; utility for Symbian OS", "authors": ["van der Wal"]}, {"title": "A first step towards automated detection of buffer overrun vulnerabilities", "authors": ["Wagner", " Foster", " Brewer"]}, {"title": "Finding and preventing run-time error handling mistakes", "authors": ["Weimer"]}, {"title": "Mining temporal specifications for error detection", "authors": ["Weimer"]}]},
{"title": "Normalize, transpose, and distribute: An automatic approach for handling nonscalars", "time": "March 2008", "keyword": ["Programming Languages and Systems"], "abstract": "SequenceL is a concise, high-level language with a simple semantics that provides for the automatic derivation of many iterative and parallel control structures. The semantics repeatedly applies a \u201cNormalize-Transpose-Distribute\u201d operation to functions and operators until base cases are discovered. Base cases include the grounding of variables and the application of built-in operators to operands of appropriate types. This article introduces the results of a 24-month effort to reduce the language to a very small set of primitives. Included are comparisons with other languages, the formal syntax and semantics, and the traces of several example problems run with a prototype interpreter developed in 2006.\n", "author": [{"name": "Daniel E. Cooke", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "J. Nelson Rushton", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Brad Nemanich", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Robert G. Watson", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Per Andersen", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Daniel E. Cooke", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "J. Nelson Rushton", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Brad Nemanich", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Robert G. Watson", "affiliation": "Texas Tech University, Lubbock, TX"}, {"name": "Per Andersen", "affiliation": "Texas Tech University, Lubbock, TX"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Can programming be liberated from the von neumann style&quest; Comm", "authors": ["Backus"]}, {"title": "Programming by multiset transformation", "authors": ["Banatre"]}, {"title": "The effect of data abstraction on loop programming techniques", "authors": ["Bishop"]}, {"title": "Programming parallel algorithms", "authors": ["Blelloch"]}, {"title": "Set Theory and the Continuum Hypothesis", "authors": ["Cohen"]}, {"title": "An introduction to SEQUENCEL: A language to experiment with nonscalar constructs", "authors": ["Cooke"]}, {"title": "SequenceL provides a different way to view programming", "authors": ["Cooke"]}, {"title": "Automatic parallel control structures in SequenceL", "authors": ["Cooke"]}, {"title": "NASA's exploration agenda and capability engineering", "authors": ["Cooke", " Barry", " Lowry"]}, {"title": "On the development of a method to synthesize programs from requirement specifications", "authors": ["Cooke"]}, {"title": "Application of model-based technology systems for autonomous systems", "authors": ["Cooke", " Gelfond", " Rushton"]}, {"title": "Iterative and parallel algorithm design from high level language traces", "authors": ["Cooke"]}, {"title": "The stable model semantics for logic programming", "authors": ["Gelfond"]}, {"title": "Classical negation in logic programs and disjunctive databases", "authors": ["Gelfond"]}, {"title": "A Programming Language", "authors": ["Iverson"]}, {"title": "Scrap your boilerplate: A practical design patterns for generic programming", "authors": ["L\u00e4mmel"]}, {"title": "Scrap more boilerplate: Reflection, zips, and generalised cates", "authors": ["L\u00e4mmel"]}, {"title": "Assat: Computing answer sets of a logic program by sat solvers", "authors": ["Lin"]}, {"title": "A Gentle introduction to GPH", "authors": ["Loidl"]}, {"title": "Functional programming with bananas, lenses, envelopes and barbed wire", "authors": ["Meijer"]}, {"title": "Data structured programming: Programming without arrays and pointers", "authors": ["Mills"]}, {"title": "Implicit Parallel Programming in pH", "authors": ["Nikhil"]}, {"title": "Those who live by the flop may die by the flop", "authors": ["Pancake"]}, {"title": "Collection-oriented languages", "authors": ["Sipelstein"]}]},
{"title": "Dynamic slicing on Java bytecode traces", "time": "March 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Dynamic slicing is a well-known technique for program analysis, debugging and understanding. Given a program \n and input I, it finds all program statements which directly/indirectly affect the values of some variables' occurrences when \n is executed with I. In this article, we develop a dynamic slicing method for Java programs. Our technique proceeds by backwards traversal of the bytecode trace produced by an input I in a given program \n. Since such traces can be huge, we use results from data compression to compactly represent bytecode traces. The major space savings in our method come from the optimized representation of (a) data addresses used as operands by memory reference bytecodes, and (b) instruction addresses used as operands by control transfer bytecodes. We show how dynamic slicing algorithms can directly traverse our compact bytecode traces without resorting to costly decompression. We also extend our dynamic slicing algorithm to perform \u201crelevant slicing\u201d. The resultant slices can be used to explain omission errors that is, why some events did not happen during program execution. Detailed experimental results on space/time overheads of tracing and slicing are reported in the article. The slices computed at the bytecode level are translated back by our tool to the source code level with the help of information available in Java class files. Our \n dynamic slicing tool has been integrated with the Eclipse platform and is available for usage in research and development.\n", "author": [{"name": "Tao Wang", "affiliation": "National University of Singapore, Singapore"}, {"name": "Abhik Roychoudhury", "affiliation": "National University of Singapore, Singapore"}, {"name": "Tao Wang", "affiliation": "National University of Singapore, Singapore"}, {"name": "Abhik Roychoudhury", "affiliation": "National University of Singapore, Singapore"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "29", "references": [{"title": "Towards automatic debugging of computer programs", "authors": ["Agrawal"]}, {"title": "Dynamic program slicing", "authors": ["Agrawal"]}, {"title": "Incremental regression testing", "authors": ["Agrawal", " Horgan", " Krauser"]}, {"title": "A fast assembly level reverse execution method via dynamic slicing", "authors": ["Akgul", " Mooney"]}, {"title": "Program analysis and specialization for the C progranzming language", "authors": ["Andersen"]}, {"title": "A lexical analyzer generator for Java", "authors": ["Berk"]}, {"title": "A compact execution history for dynamic slicing", "authors": ["Dhamdhere", " Gururaja"]}, {"title": "The program dependence graph and its use in optimization", "authors": ["Ferrante", " Ottenstein"]}, {"title": "Compactly representing parallel program executions", "authors": ["Goel", " Roychoudhury"]}, {"title": "An efficient relevant slicing method for debugging", "authors": ["Gyim\u00f3thy", " Besz\u00e9des"]}, {"title": "Interprocedural slicing using dependence graphs", "authors": ["Horwitz", " Reps"]}, {"title": "The Java Grande Forum Benchmark Suite", "authors": []}, {"title": "Java(TM) Language Specification (2nd Edition)", "authors": ["Joy", " Steele", " Gosling"]}, {"title": "The Kaffe virtual machine", "authors": []}, {"title": "Dynamic program slicing", "authors": ["Korel"]}, {"title": "Application of dynamic slicing in program debugging", "authors": ["Korel"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Lamport"]}, {"title": "Slicing object-oriented software", "authors": ["Larsen"]}, {"title": "Abstract execution: A technique for efficiently tracing programs", "authors": ["Larus"]}, {"title": "Whole program paths", "authors": ["Larus"]}, {"title": "A new trace and replay system for shared memory programs based on lamport clocks", "authors": ["Levrouw", " Audenaert"]}, {"title": "Spark: A flexible points-to analysis framework for Java", "authors": ["Lhot\u00e1k"]}, {"title": "The Java(TM) Virtual Machine Specification (2nd Edition)", "authors": ["Lindholm"]}, {"title": "Program slicing: Methods and applications", "authors": ["Lucia"]}, {"title": "Path slicing", "authors": ["Majumdar"]}, {"title": "Linear-time, incremental hierarchy inference for compression", "authors": ["Nevill-Manning"]}, {"title": "A slicing method for object-oriented programs using lightweight dynamic information", "authors": ["Ohata", " Hirose", " Fujii"]}, {"title": "Techniques for compressing programm address traces", "authors": ["Pleszkun"]}, {"title": "Encoding program executions", "authors": ["Reiss"]}, {"title": "Recplay: A fully integrated practical record/replay system", "authors": ["Ronsse"]}, {"title": "Instruction isomorphism in program execution", "authors": ["Sazeides"]}, {"title": "Analysis and testing of programs with exceptionhandling constructs", "authors": ["Sinha"]}, {"title": "1998", "authors": ["SPECj"]}, {"title": "Points-to analysis in almost linear time", "authors": ["Steensgaard"]}, {"title": "A survey of program slicing techniques", "authors": ["Tip"]}, {"title": "Soot - A Java bytecode optimization framework", "authors": ["Vall\u00e9e-Rai", " Co", " Gagnon", " Hendren", " Lam"]}, {"title": "Dynamic slicing on Java bytecode traces", "authors": ["Wang"]}, {"title": "Program slicing", "authors": ["Weiser"]}, {"title": "Dynamic slicing object-oriented programs for debugging", "authors": [" Chen"]}, {"title": "Timestamped whole program path representation and its applications", "authors": ["Zhang"]}, {"title": "Whole execution traces", "authors": ["Zhang"]}, {"title": "Cost and precision tradeoffs of dynamic data slicing algorithms", "authors": ["Zhang", " Gupta"]}, {"title": "Dependence analysis of Java bytecode", "authors": ["Zhao"]}, {"title": "Understanding the backward slices of performance degrading instructions", "authors": ["Zilles"]}]},
{"title": "FeatherTrait: A modest extension of Featherweight Java", "time": "March 2008", "keyword": ["Programming Languages and Systems"], "abstract": "In the context of \n, we investigate classes that can be extended with \n composition. A trait is a collection of methods without state; it can be viewed as an \n. Traits can be composed in any order, but only make sense when imported by a class that provides state variables and additional methods to disambiguate conflicting names arising between the imported traits. We introduce FeatherTrait Java (FTJ), a conservative extension of the simple lightweight class-based calculus Featherweight Java (FJ) with \n. In FTJ, classes can be built using traits as basic behavioral bricks; method conflicts between imported traits must be resolved \n by the user either by (i) aliasing or excluding method names in traits, or by (ii) overriding explicitly the conflicting methods in the class or in the trait itself. We present an operational semantics with a lookup algorithm, and a sound type system that guarantees that evaluating a well-typed expression never yields a \n run-time error nor gets the interpreter stuck. We give examples of the increased expressive power of the trait-based inheritance model. The resulting calculus appears to be a good starting point for a rigorous mathematical analysis of typed class-based languages featuring trait-based inheritance.\n", "author": [{"name": "Luigi Liquori", "affiliation": "INRIA, France"}, {"name": "Arnaud Spiwack", "affiliation": "ENS Cachan, France"}, {"name": "Luigi Liquori", "affiliation": "INRIA, France"}, {"name": "Arnaud Spiwack", "affiliation": "ENS Cachan, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "38", "references": [{"title": "A Theory of Objects", "authors": ["Abadi"]}, {"title": "The Fortress Language Specification, version 1", "authors": ["Allen", " Chase", " Luchangco", " Maessen", " Ryu", " Steele"]}, {"title": "Mixins in generic java are sound", "authors": ["Allen", " Bannet"]}, {"title": "Jam - designing a Java extension with mixins", "authors": ["Ancona", " Lagorio"]}, {"title": "A calculus of module system", "authors": ["Ancona"]}, {"title": "A theory of mixin modules: Algebraic laws and reduction semantics", "authors": ["Ancona"]}, {"title": "Subtyping constraint for incomplete objects", "authors": ["Bono", " Bugliesi", " Dezani-Ciancaglini"]}, {"title": "A core calculus of classes and mixins", "authors": ["Bono", " Patel"]}, {"title": "The Programming Language Jigsaw: Mixins, modularity and multiple inheritance", "authors": ["Bracha"]}, {"title": "Mixin-based inheritance", "authors": ["Bracha"]}, {"title": "Obliq: A language with distributed scope", "authors": ["Cardelli"]}, {"title": "A lambda calculus of objects with self-inflicted extension", "authors": ["Di Gianantonio", " Honsell"]}, {"title": "Traits: A mechanism for fine-grained reuse", "authors": ["Ducasse", " Nierstrasz", " Sch\u00e4rli", " Wuyts"]}, {"title": "Mixin modules", "authors": ["Duggan"]}, {"title": "Modular object-oriented programming with units and mixins", "authors": ["Findler"]}, {"title": "Statically typed traits", "authors": ["Fisher"]}, {"title": "Units: Cool modules for HOT languages", "authors": ["Flatt"]}, {"title": "Classes and mixins", "authors": ["Flatt", " Krishnamurthi"]}, {"title": "Smalltalk-80: the Language and its Implementation", "authors": ["Goldberg"]}, {"title": "Call-by-value mixin modules: Reduction semantics, side effects, types", "authors": ["Hirschowitz", " Leroy"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Aspect-oriented programming", "authors": ["Kiczales", " Lamping", " Mendhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "An extended theory of primitive objects: first order system", "authors": ["Liquori"]}, {"title": "On object extension", "authors": ["Liquori"]}, {"title": "Featherweight-trait Java : A trait-based extension for FJ", "authors": ["Liquori"]}, {"title": "Extending FeatherTrait Java with interfaces", "authors": ["Liquori"]}, {"title": "Towards variational object-oriented programming: The rondo model", "authors": ["Mezini"]}, {"title": "The C&num; Home Page", "authors": []}, {"title": "The Definition of Standard ML (Revised)", "authors": ["Milner", " Tofte", " Harper"]}, {"title": "The Moby home page", "authors": ["Moby Team"]}, {"title": "Flattening traits", "authors": ["Nierstrasz", " Ducasse"]}, {"title": "Java traits -- Improving opportunities for reuse", "authors": ["Quitslund"]}, {"title": "The scala home page", "authors": ["Scala Team"]}, {"title": "Traits: Composable units of behaviour", "authors": ["Sch\u00e4rli", " Ducasse", " Nierstrasz"]}, {"title": "Chai: Typed traits in Java", "authors": ["Smith"]}, {"title": "Inheritance and the development of encapsulated software systems", "authors": ["Snyder"]}, {"title": "The C&plus;&plus; Programming Language, Ch", "authors": ["Stroustrup"]}, {"title": "Java Technology", "authors": []}, {"title": "Self: The power of simplicity", "authors": ["Ungar"]}, {"title": "Equational reasoning for linking with first-class primitive modules", "authors": ["Wells"]}]},
{"title": "The pitfalls of verifying floating-point computations", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Current critical systems often use a lot of floating-point computations, and thus the testing or static analysis of programs containing floating-point operators has become a priority. However, correctly defining the semantics of common implementations of floating-point is tricky, because semantics may change according to many factors beyond source-code level, such as choices made by compilers. We here give concrete examples of problems that can appear and solutions for implementing in analysis software.\n", "author": [{"name": "David Monniaux", "affiliation": "CNRS/\u00c9cole normale sup\u00e9rieure, Paris, France"}, {"name": "David Monniaux", "affiliation": "CNRS/\u00c9cole normale sup\u00e9rieure, Paris, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "106", "references": [{"title": "AMD64 Architecture Programmer's Manual Volume 1: Application Programming, 3", "authors": ["Advanced Micro Devices"]}, {"title": "Modern Compiler Implementation in C, revised and expanded ed", "authors": ["Appel"]}, {"title": "Analyzing memory accesses in x86 executables", "authors": ["Balakrishnan"]}, {"title": "Design and implementation of a special-purpose static program analyzer for safety-critical real-time embedded software", "authors": ["Blanchet", " Cousot", " Cousot", " Feret", " Mauborgne", " Min\u00e9", " Monniaux"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Blanchet", " Cousot", " Cousot", " Feret", " Mauborgne", " Min\u00e9", " Monniaux"]}, {"title": "LUSTRE: A declarative language for real-time programming", "authors": ["Caspi", " Pilaud", " Halbwachs"]}, {"title": "How to read floating point numbers accurately", "authors": ["Clinger"]}, {"title": "Introduction to algorithms", "authors": ["Cormen", " Leiserson"]}, {"title": "Constructive design of a hierarchy of semantics of a transition system by abstract interpretation", "authors": ["Cousot"]}, {"title": "Methods and logics for proving programs", "authors": ["Cousot"]}, {"title": "Abstract interpretation and application to logic programs", "authors": ["Cousot"]}, {"title": "The ASTR\u00c9E analyzer", "authors": ["Cousot", " Cousot", " Feret", " Mauborgne", " Min\u00e9", " Monniaux"]}, {"title": "A rigorous framework for fully supporting the IEEE standard for floating-point arithmetic in high-level programming languages", "authors": ["Figueroa del Cid"]}, {"title": "Formal verification of floating-point programs", "authors": ["Filli\u00e2tre"]}, {"title": "Documentation for gcj (gcc 4", "authors": ["Free Software Foundation"]}, {"title": "The GNU compiler collection", "authors": ["Free Software Foundation"]}, {"title": "MPC750 RISC Microprocessor Family User's Manual", "authors": ["Freescale Semiconductor", " Inc"]}, {"title": "Programming Environments Manual for 32-Bit Implementations of the PowerPC Architecture", "authors": ["Freescale Semiconductor", " Inc"]}, {"title": "What every computer scientist should know about floating-point arithmetic", "authors": ["Goldberg"]}, {"title": "The Java Language Specification, Third ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "The Java Language Specification, 1st ed", "authors": ["Gosling", " Joy"]}, {"title": "The Java Language Specification, 2nd ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Static analyzes of floating-point operations", "authors": ["Goubault"]}, {"title": "An axiomatic basis for computer programming", "authors": ["Hoare"]}, {"title": "International Standard\u2014Binary Floating-Point Arithmetic for Microprocessor Systems, 2nd ed", "authors": []}, {"title": "IEEE Standard for Binary Floating-Point Arithmetic for Microprocessor Systems", "authors": ["IEE"]}, {"title": "Intel Architecture Software Developer's Manual Volume 1: Basic Architecture", "authors": ["Intel Corp"]}, {"title": "IA-32 Intel Architecture Software Developer's Manual Volume 1: Basic Architecture", "authors": ["Intel Corp"]}, {"title": "International Standard\u2014Programming Languages\u2014C", "authors": ["ISO/IE"]}, {"title": "Java grande forum report: Making java work for high-end computing", "authors": ["Java Gr"]}, {"title": "Branch cuts for complex elementary functions, or much ado about nothing's sign bit", "authors": ["Kahan"]}, {"title": "How Java's floating-point hurts everyone everywhere", "authors": ["Kahan"]}, {"title": "The Objective Caml System Release 3", "authors": ["Leroy", " Doligez", " Garrigue", " R\u00e9my"]}, {"title": "Ariane 5: Flight 501 failure, report by the inquiry board", "authors": ["Lions", " Lbeck", " Fauquembergue", " Kahn", " Kubbat", " Levedag", " Mazzini", " Merle"]}, {"title": "The K5 transcendental functions", "authors": ["Lynch", " Ahmed", " Schulte", " Callaway"]}, {"title": "Propagation of roundoff errors in finite precision computations: A semantics approach", "authors": ["Martel"]}, {"title": "Static analysis of the numerical stability of loops", "authors": ["Martel"]}, {"title": "Semantics of roundoff error propagation in finite precision computations", "authors": ["Martel"]}, {"title": "The octagon abstract domain", "authors": ["Min\u00e9"]}, {"title": "Domaines num\u00e9riques abstraits faiblement relationnels", "authors": ["Min\u00e9"]}, {"title": "Relational abstract domains for the detection of floating-point run-time errors", "authors": ["Min\u00e9"]}, {"title": "On the definition of ulp(x)", "authors": ["Muller"]}, {"title": "Classes of recursively enumerable sets and their decision problems", "authors": ["Rice"]}, {"title": "Abstract interpretation-based certification of assembly code", "authors": ["Rival"]}, {"title": "Theory of Recursive Functions and Effective Computability", "authors": ["Rogers"]}, {"title": "How to print floating-point numbers accurately", "authors": ["Steele"]}, {"title": "Numerical Computation Guide", "authors": ["Sun Microsystems"]}, {"title": "Continued fraction", "authors": ["Weisstein"]}, {"title": "The Formal Semantics of Programming Languages: An Introduction", "authors": ["Winskel"]}]},
{"title": "On the complexity of partially-flow-sensitive alias analysis", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We introduce the notion of a \n-flow-sensitive analysis based on the number of read and write operations that are guaranteed to be analyzed in a sequential manner. We study the complexity of partially-flow-sensitive alias analysis and show that precise alias analysis with a very limited flow-sensitivity is as hard as precise flow-sensitive alias analysis, both when dynamic memory allocation is allowed, as well as in the absence of dynamic memory allocation.\n", "author": [{"name": "N. Rinetzky", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "G. Ramalingam", "affiliation": "Microsoft Research India, Bangalore, India"}, {"name": "M. Sagiv", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "E. Yahav", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}, {"name": "N. Rinetzky", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "G. Ramalingam", "affiliation": "Microsoft Research India, Bangalore, India"}, {"name": "M. Sagiv", "affiliation": "Tel Aviv University, Tel Aviv, Israel"}, {"name": "E. Yahav", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "Program analysis and specialization for the C programming language", "authors": ["Andersen"]}, {"title": "New results on the computability and complexity of points--to analysis", "authors": ["Chakaravarthy"]}, {"title": "Precise flow-insensitive may-alias analysis is NP-hard", "authors": ["Horwitz"]}, {"title": "The C programming language", "authors": ["Kernighan"]}, {"title": "Interprocedural aliasing in the presence of pointers", "authors": []}, {"title": "Undecidability of static analysis", "authors": []}, {"title": "A Theory of Programming Language Semantics", "authors": ["Milne"]}, {"title": "On the complexity of flow-sensitive dataflow analyses", "authors": ["Muth"]}, {"title": "The undecidability of aliasing", "authors": ["Ramalingam"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Towards a formal semantics", "authors": ["Strachey"]}]},
{"title": "AspectML: A polymorphic aspect-oriented functional programming language", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "This article defines AspectML, a typed functional, aspect-oriented programming language. The main contribution of AspectML is the seamless integration of polymorphism, run-time type analysis and aspect-oriented programming language features. In particular, AspectML allows programmers to define type-safe polymorphic advice using pointcuts constructed from a collection of polymorphic join points. AspectML also comes equipped with a type inference algorithm that conservatively extends Hindley--Milner type inference. To support first-class polymorphic point-cut designators, a crucial feature for developing aspect-oriented profiling or logging libraries, the algorithm blends the conventional Hindley--Milner type inference algorithm with a simple form of local type inference.\nWe give our language operational meaning via a type-directed translation into an expressive type-safe intermediate language. Many complexities of the source language are eliminated in this translation, leading to a modular specification of its semantics. One of the novelties of the intermediate language is the definition of polymorphic labels for marking control-flow points. When a set of labels is assembled as a pointcut, the type of each label is an instance of the type of the pointcut.\n", "author": [{"name": "Daniel S. Dantas", "affiliation": "Princeton University, Princeton, NJ"}, {"name": "David Walker", "affiliation": "Princeton University, Princeton, NJ"}, {"name": "Geoffrey Washburn", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Stephanie Weirich", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Daniel S. Dantas", "affiliation": "Princeton University, Princeton, NJ"}, {"name": "David Walker", "affiliation": "Princeton University, Princeton, NJ"}, {"name": "Geoffrey Washburn", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Stephanie Weirich", "affiliation": "University of Pennsylvania, Philadelphia, PA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "33", "references": [{"title": "Access control based on execution history", "authors": ["Abadi"]}, {"title": "Compilers: Principles, Techniques, and Tools", "authors": ["Aho", " Sethi"]}, {"title": "Open modules: Modular reasoning about advice", "authors": ["Aldrich"]}, {"title": "Semantics of static pointcuts in AspectJ", "authors": ["Avgustinov", " Hajiyev", " Ongkingco", " de Moor", " Sereni", " Tibble"]}, {"title": "The Lambda Calculus: Its Syntax and Semantics", "authors": ["Barendregt"]}, {"title": "Composing security policies in polymer", "authors": ["Bauer", " Ligatti"]}, {"title": "muABC: A minimal aspect calculus", "authors": ["Bruns", " Jagadeesan", " Jeffrey"]}, {"title": "Observers and assistants: A proposal for modular aspect-oriented reasoning", "authors": ["Clifton"]}, {"title": "Enforcing trace properties by program transformation", "authors": ["Colcombet"]}, {"title": "Large-scale AOSD for middleware", "authors": ["Colyer"]}, {"title": "Principal type schemes for functional programs", "authors": ["Damas"]}, {"title": "Aspects, information hiding and modularity", "authors": ["Dantas"]}, {"title": "Harmless advice", "authors": ["Dantas"]}, {"title": "PolyAML: A polymorphic aspect-oriented functional programming language", "authors": ["Dantas", " Walker", " Washburn"]}, {"title": "PolyAML: A polymorphic aspect-oriented functional programmming language (extended version)", "authors": ["Dantas", " Walker", " Washburn"]}, {"title": "Composition, reuse and interaction analysis of stateful aspects", "authors": ["Douence", " Fradet"]}, {"title": "A formal definition of crosscuts", "authors": ["Douence", " Motelet"]}, {"title": "SASI enforcement of security policies: A retrospective", "authors": ["Erlingsson"]}, {"title": "IRM enforcement of Java stack inspection", "authors": ["Erlingsson"]}, {"title": "Flexible policy-directed code safety", "authors": ["Evans"]}, {"title": "Aspect-Oriented Software Development", "authors": ["Filman"]}, {"title": "Patch(1) considered harmful", "authors": ["Fiuczynski", " Cody", " Grimm"]}, {"title": "Stack inspection: theory and variants", "authors": ["Gordon"]}, {"title": "A type-theoretic interpretation of Standard ML", "authors": ["Harper"]}, {"title": "Programming Languages: Theory and Practice", "authors": ["Harper"]}, {"title": "\u201cScrap your boilerplate\u201d reloaded", "authors": ["Hinze", " L\u00f6h"]}, {"title": "A calculus of untyped aspect-oriented programs", "authors": ["Jagadeesan", " Jeffrey"]}, {"title": "Typed parametric polymorphism for aspects", "authors": ["Jagadeesan", " Jeffrey"]}, {"title": "An overview of AspectJ", "authors": ["Kiczales", " Hilsdale", " Hugunin", " Kersten", " Palm"]}, {"title": "Formally specified monitoring of temporal properties", "authors": ["Kim", " Viswanathan", " Ben-Abdallah", " Kannan", " Lee"]}, {"title": "An extension of ML with first-class abstract types", "authors": ["Lufer"]}, {"title": "Towards a mechanized metatheory of Standard ML", "authors": ["Lee", " Crary"]}, {"title": "Run-time assurance based on formal specifications", "authors": ["Lee", " Kannan", " Kim", " Sokolsky"]}, {"title": "Aspectual collaborations\u2014combining modules and aspects", "authors": ["Lieberherr", " Lorenz"]}, {"title": "Compilation semantics of aspect-oriented programs", "authors": ["Masuhara", " Kiczales"]}, {"title": "Aspectual caml: an aspect-oriented functional language", "authors": ["Masuhara", " Tatsuzawa"]}, {"title": "Poly/ML", "authors": ["Matthews"]}, {"title": "A theory of type polymorphism in programming", "authors": ["Milner"]}, {"title": "The Definition of Standard ML (Revised)", "authors": ["Milner", " Tofte", " Harper"]}, {"title": "Simple unification-based type inference for GADTs", "authors": ["Peyton Jones", " Vytiniotis", " Weirich"]}, {"title": "Practical type inference for arbitrary-rank types", "authors": ["Peyton Jones", " Vytiniotis", " Weirich"]}, {"title": "Local type inference", "authors": ["Pierce"]}, {"title": "A note on inductive generalization", "authors": ["Plotkin"]}, {"title": "A further note on inductive generalization", "authors": ["Plotkin"]}, {"title": "Stratified type inference for generalized algebraic data types", "authors": ["Pottier"]}, {"title": "Enforceable security policies", "authors": ["Schneider"]}, {"title": "Putting Curry-Howard to work", "authors": ["Sheard"]}, {"title": "Lexically scoped type variables", "authors": ["Shields"]}, {"title": "Constraint-based type inference for guarded algebraic data types", "authors": ["Simonet"]}, {"title": "Information hiding interfaces for aspect-oriented design", "authors": ["Sullivan", " Griswold", " Song", " Cai", " Shonle", " Tewari"]}, {"title": "Type inference for GADTS via herbrand constraint abduction", "authors": ["Sulzmann", " Schrijvers"]}, {"title": "Pointcuts and advice in higher-order languages", "authors": ["Tucker"]}, {"title": "Boxy types: inference for higher-rank types and impredicativity", "authors": ["Vytiniotis", " Weirich"]}, {"title": "A theory of aspects", "authors": ["Walker", " Zdancewic"]}, {"title": "A semantics for advice and dynamic join points in aspect-oriented programming", "authors": [" Kiczales"]}, {"title": "On the pursuit of staticness and coherence", "authors": ["Wang", " Chen"]}, {"title": "Generalizing parametricity using information flow", "authors": ["Washburn"]}]},
{"title": "Witnessing side effects", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We present a new approach to the old problem of adding global mutable state to purely functional languages. Our idea is to extend the language with \u201cwitnesses,\u201d which is based on an arguably more pragmatic motivation than past approaches. We give a semantic condition for correctness and prove it is sufficient. We also give a somewhat surprising static checking algorithm that makes use of a network flow property equivalent to the semantic condition via reduction to a satisfaction problem for a system of linear inequalities.\n", "author": [{"name": "Tachio Terauchi", "affiliation": "Tohoku University, Sendai, Japan"}, {"name": "Alex Aiken", "affiliation": "Stanford University, Stanford, CA"}, {"name": "Tachio Terauchi", "affiliation": "Tohoku University, Sendai, Japan"}, {"name": "Alex Aiken", "affiliation": "Stanford University, Stanford, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "High level specification of I/O in functional languages", "authors": ["Achten", " van Groningen"]}, {"title": "The call-by-need lambda calculus", "authors": ["Ariola"]}, {"title": "A call-by-need lambda calculus", "authors": ["Ariola", " Maraist", " Odersky", " Felleisen"]}, {"title": "Correctness of monadic state: an imperative call-by-need calculus", "authors": ["Ariola"]}, {"title": "Checking interference with fractional permissions", "authors": ["Boyl"]}, {"title": "Typed memory management in a calculus of capabilities", "authors": ["Crary", " Walker"]}, {"title": "Partial online cycle elimination in inclusion constraint graphs", "authors": ["F\u00e4hndrich", " Foster", " Su"]}, {"title": "Region-based memory management in Cyclone", "authors": ["Grossman", " Morrisett", " Jim", " Hicks", " Wang"]}, {"title": "Single-threaded polymorphic lambda calculus", "authors": ["Guzman"]}, {"title": "A natural semantics for lazy evaluation", "authors": ["Launchbury"]}, {"title": "Monadic state: Axiomatization of type safety", "authors": ["Launchbury"]}, {"title": "An operational semantics for r5rs scheme", "authors": ["Matthews"]}, {"title": "Notions of computation and monads", "authors": ["Moggi"]}, {"title": "Monadic encapsulation of effects: a revised approach (extended version)", "authors": ["Moggi"]}, {"title": "Call by name, assignment, and the lambda calculus", "authors": ["Odersky", " Rabin"]}, {"title": "Imperative functional programming", "authors": ["Peyton Jones"]}, {"title": "Call-by-name, call-by-value and the lambda-calculus", "authors": ["Plotkin"]}, {"title": "What is a purely functional language&quest; J", "authors": ["Sabry"]}, {"title": "Monadic encapsulation in ml", "authors": ["Semmelroth"]}, {"title": "Replacing function parameters by global variables", "authors": ["Sestoft"]}, {"title": "Memory management with use-counted regions", "authors": ["Terauchi"]}, {"title": "Witnessing side-effects", "authors": ["Terauchi"]}, {"title": "A capability calculus for concurrency and determinism", "authors": ["Terauchi"]}, {"title": "Implementation of the typed call-by-value \u03bb-calculus using a stack of regions", "authors": ["Tofte"]}, {"title": "Once upon a type", "authors": ["Turner", " Wadler"]}, {"title": "Linear types can change the world&excl; In IFIP TC 2, Proceedings of the Working Conference on Programming Concepts and Methods (Sea of Galilee, Israel), M", "authors": ["Wadler"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}]},
{"title": "PEAK\u2014a fast and effective performance tuning system via compiler optimization orchestration", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Compile-time optimizations generally improve program performance. Nevertheless, degradations caused by individual compiler optimization techniques are to be expected. Feedback-directed \n systems generate optimized code versions under a series of optimization combinations, evaluate their performance, and search for the best version. One challenge to such systems is to tune program performance quickly in an exponential search space. Another challenge is to achieve high program performance, considering that optimizations interact. Aiming at these two goals, this article presents an automated performance tuning system, \n, which searches for the best compiler optimization combinations for the important code sections in a program. The major contributions made in this work are as follows: (1) An algorithm called \n is developed to explore the optimization space quickly and effectively; (2) Three fast and accurate rating methods are designed to evaluate the performance of an optimized code section based on a partial execution of the program; (3) An algorithm is developed to identify important code sections as candidates for performance tuning by trading off tuning speed and tuned program performance; and (4) A set of compiler tools are implemented to automate optimization orchestration. Orchestrating optimization options in SUN Forte compilers at the whole-program level, our CE algorithm improves performance by 10.8% over the SPEC CPU2000 FP baseline setting, compared to 5.6% improved by manual tuning. Orchestrating GCC O3 optimizations, CE improves performance by 12% over O3, the highest optimization level. Applying the rating methods, PEAK reduces tuning time from 2.19 hours to 5.85 minutes on average, while achieving equal or better program performance.\n", "author": [{"name": "Zhelong Pan", "affiliation": "Purdue University, West Lafayette, IN"}, {"name": "Rudolf Eigenmann", "affiliation": "Purdue University, West Lafayette, IN"}, {"name": "Zhelong Pan", "affiliation": "Purdue University, West Lafayette, IN"}, {"name": "Rudolf Eigenmann", "affiliation": "Purdue University, West Lafayette, IN"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "24", "references": [{"title": "Fast, effective code generation in a just-in-time java compiler", "authors": ["Adl-Tabatabai", " Cierniak", " Lueh", " Parikh"]}, {"title": "Using machine learning to focus iterative optimization", "authors": ["Agakov", " Bonilla", " Cavazos", " Franke", " Fursin", " O'Boyle", " Thomson", " Toussaint"]}, {"title": "Adaptive optimization in the Jalape\u00f1o JVM", "authors": ["Arnold", " Fink", " Grove", " Hind"]}, {"title": "Online feedback-directed optimization of java", "authors": ["Arnold", " Hind"]}, {"title": "Fast, effective dynamic compilation", "authors": ["Ausl", " Philipose", " Chambers", " Eggers"]}, {"title": "Dynamo: A transparent dynamic optimization system", "authors": ["Bala", " Duesterwald"]}, {"title": "An infrastructure for adaptive dynamic optimization", "authors": ["Bruening", " Garnett"]}, {"title": "Method-specific dynamic compilation using logistic regression", "authors": ["Cavazos"]}, {"title": "Feedback-directed selection and characterization of compiler optimizations", "authors": ["Chow"]}, {"title": "Practicing JUDO: Java under dynamic optimizations", "authors": ["Cierniak", " Lueh"]}, {"title": "Combining analyses, combining optimizations", "authors": ["Click"]}, {"title": "A general approach for run-time specialization and its application to c", "authors": ["Consel"]}, {"title": "Acme: adaptive compilation made efficient", "authors": ["Cooper", " Grosul", " Harvey", " Reeves", " Subramanian", " Torczon"]}, {"title": "Adaptive optimizing compilers for the 21st century", "authors": ["Cooper", " Subramanian"]}, {"title": "The R-LRPD test: Speculative parallelization of partially parallel loops", "authors": ["Dang", " Yu"]}, {"title": "Dynamic feedback: An effective technique for adaptive computing", "authors": ["Diniz"]}, {"title": "Software profiling for hot path prediction: Less is more", "authors": ["Duesterwald"]}, {"title": "DAISY: Dynamic compilation for 100", "authors": ["Ebcioglu"]}, {"title": "VCODE: a retargetable, extensible, very fast dynamic code generation system", "authors": ["Engler"]}, {"title": "DCG: An efficient, retargetable dynamic code generation system", "authors": ["Engler"]}, {"title": "GCC online documentation", "authors": ["GNU"]}, {"title": "GPROF: A call graph execution profiler", "authors": ["Graham", " Kessler"]}, {"title": "Automatic recommendation of compiler options", "authors": ["Granston"]}, {"title": "An evaluation of staged run-time optimizations in dyc", "authors": ["Grant", " Philipose", " Mock", " Chambers"]}, {"title": "Generating new general compiler optimization settings", "authors": ["Haneda", " Knijnenburg"]}, {"title": "Orthogonal Arrays: Theory and Applications", "authors": ["Hedayat", " Sloane"]}, {"title": "Denali: A goal-directed superoptimizer", "authors": ["Joshi", " Nelson"]}, {"title": "Reducibility among combinatorial problems", "authors": ["Karp"]}, {"title": "Continuous program optimization: A case study", "authors": ["Kistler"]}, {"title": "Combined selection of tile sizes and unroll factors using iterative compilation", "authors": ["Kisuki", " Knijnenburg"]}, {"title": "A feasibility study in iterative compilation", "authors": ["Kisuki", " Knijnenburg", " O'Boyle", " Bodin"]}, {"title": "Fast searches for effective optimization phase sequences", "authors": ["Kulkarni", " Hines", " Hiser", " Whalley", " Davidson"]}, {"title": "Exhaustive optimization phase order space exploration", "authors": ["Kulkarni", " Whalley", " Tyson"]}, {"title": "Online performance auditing: Using hot optimizations without getting burned", "authors": ["Lau", " Arnold", " Hind"]}, {"title": "Optimizing ML with run-time code generation", "authors": ["Lee"]}, {"title": "Dynamic specialization in the fabius system", "authors": ["Leone"]}, {"title": "An architectural framework for runtime optimization", "authors": ["Merten", " Trick", " Barnes", " Nystrom", " George", " Gyllenhaal"]}, {"title": "A hardware-driven profiling scheme for identifying program hot spots to support runtime optimization", "authors": ["Merten", " Trick", " George", " Gyllenhaal"]}, {"title": "CALPA: A tool for automating selective dynamic compilation", "authors": ["Mock", " Chambers"]}, {"title": "TFP: Time-sensitive, flow-specific profiling at runtime", "authors": [" Gao"]}, {"title": "Code reordering and speculation support for dynamic optimization systems", "authors": ["Nystrom", " Barnes", " Merten"]}, {"title": "Compiler optimization orchestration for peak performance", "authors": ["Pan"]}, {"title": "Rating compiler optimizations for automatic performance tuning", "authors": ["Pan"]}, {"title": "Fast and effective orchestration of compiler optimizations for automatic performance tuning", "authors": ["Pan"]}, {"title": "Statistical selection of compiler options", "authors": ["Pinkers", " Knijnenburg", " Haneda"]}, {"title": "The LRPD test: Speculative run-time parallelization of loops with privatization and reduction parallelization", "authors": ["Rauchwerger"]}, {"title": "Hybrid analysis: Static &amp; dynamic memory reference analysis", "authors": ["Rus", " Rauchwerger"]}, {"title": "SPEC CPU2000 Results", "authors": ["SPEC"]}, {"title": "Meta optimization: improving compiler heuristics with machine learning", "authors": ["Stephenson", " Amarasinghe", " Martin"]}, {"title": "Compile-time composition of run-time data and iteration reorderings", "authors": ["Strout", " Carter"]}, {"title": "Forte C 6 /Sun WorkShop 6 Compilers C User's Guide", "authors": ["Sun"]}, {"title": "Compiler optimization-space exploration", "authors": ["Triantafyllis", " Vachharajani", " Vachharajani"]}, {"title": "ADAPT: Automated de-coupled adaptive program transformation", "authors": ["Voss"]}, {"title": "High-level adaptive program optimization with ADAPT", "authors": ["Voss"]}, {"title": "Automatically tuned linear algebra software", "authors": ["Whaley"]}, {"title": "Combining loop transformations considering caches and scheduling", "authors": ["Wolf", " Maydan"]}]},
{"title": "A hybrid type system for lock-freedom of mobile processes", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We propose a type system for lock-freedom in the \u03c0-calculus, which guarantees that certain communications will eventually succeed. Distinguishing features of our type system are: it can verify lock-freedom of concurrent programs that have sophisticated recursive communication structures; it can be fully automated; it is hybrid, in that it combines a type system for lock-freedom with local reasoning about deadlock-freedom, termination, and confluence analyses. Moreover, the type system is parameterized by deadlock-freedom/termination/confluence analyses, so that any methods (e.g. type systems and model checking) can be used for those analyses. A lock-freedom analysis tool has been implemented based on the proposed type system, and tested for nontrivial programs.\n", "author": [{"name": "Naoki Kobayashi", "affiliation": "Tohoku University, Miyagi, Japan"}, {"name": "Davide Sangiorgi", "affiliation": "Universit\u00e0 di Bologna, Bologna, Italy"}, {"name": "Naoki Kobayashi", "affiliation": "Tohoku University, Miyagi, Japan"}, {"name": "Davide Sangiorgi", "affiliation": "Universit\u00e0 di Bologna, Bologna, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "21", "references": [{"title": "Responsiveness in process calculi", "authors": ["Acciai"]}, {"title": "Program termination analysis in polynomial time", "authors": ["Ben-Amram"]}, {"title": "Pict correctness revisited", "authors": ["Bidinger"]}, {"title": "Control flow analysis for the pi-calculus", "authors": ["Bodei", " Degano", " Nielson"]}, {"title": "Basic observables for processes", "authors": ["Boreale", " Nicola"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": "Fair testing", "authors": ["Brinksma", " Rensink"]}, {"title": "Logical semantics of types for concurrency", "authors": ["Caires"]}, {"title": "A spatial logic for concurrency (part I)", "authors": ["Caires"]}, {"title": "Types as models: Model checking message-passing programs", "authors": ["Chaki", " Rajamani"]}, {"title": "Proving that programs eventually do something good", "authors": ["Cook", " Gotsman", " Podelski", " Rybalchenko"]}, {"title": "Proving thread termination", "authors": ["Cook", " Podelski"]}, {"title": "Model checking mobile processes", "authors": ["Dam"]}, {"title": "On the complexity of termination inference for processes", "authors": ["Demangeon", " Hirschkoff", " Kobayashi"]}, {"title": "Ensuring termination by typability", "authors": ["Deng"]}, {"title": "Abstract interpretation of mobile systems", "authors": ["Feret"]}, {"title": "The SPIN Model Checker: Premier and Reference Manual", "authors": ["Holzmann"]}, {"title": "Secure information flow as typed process behaviour", "authors": ["Honda", " Vasconcelos"]}, {"title": "A uniform type structure for secure information flow", "authors": ["Honda"]}, {"title": "The spatial logic model checker user's manual v1", "authors": ["Hugo Vieira"]}, {"title": "A &pi;-calculus semantics for an object-based design notation", "authors": ["Jones"]}, {"title": "A type system for lock-free processes", "authors": ["Kobayashi"]}, {"title": "Type-based information flow analysis for the pi-calculus", "authors": ["Kobayashi"]}, {"title": "TyPiCal: A type-based static analyzer for the pi-calculus", "authors": ["Kobayashi"]}, {"title": "A new type system for deadlock-free processes", "authors": ["Kobayashi"]}, {"title": "Linearity and the pi-calculus", "authors": ["Kobayashi", " Pierce"]}, {"title": "Resource usage analysis for the pi-calculus", "authors": ["Kobayashi", " Suenaga"]}, {"title": "A modular module system", "authors": ["Leroy"]}, {"title": "The polyadic &pi;-calculus: a tutorial", "authors": ["Milner"]}, {"title": "Divergence and fair testing", "authors": ["Natarajan"]}, {"title": "Pict: A programming language based on the pi-calculus", "authors": ["Pierce"]}, {"title": "&pi;-calculus, internal mobility and agent-passing calculi", "authors": ["Sangiorgi"]}, {"title": "The name discipline of uniform receptiveness", "authors": ["Sangiorgi"]}, {"title": "Termination of processes", "authors": ["Sangiorgi"]}, {"title": "The Pi-Calculus: A Theory of Mobile Processes", "authors": ["Sangiorgi"]}, {"title": "Type-based analysis of deadlock for a concurrent calculus with interrupts", "authors": ["Suenaga"]}, {"title": "A capability calculus for concurrency and determinism", "authors": ["Terauchi"]}, {"title": "Type-based liveness guarantee in the presence of nontermination and nondeterminism", "authors": ["Yoshida"]}, {"title": "Strong normalisation in the pi-calculus", "authors": ["Yoshida", " Berger"]}]},
{"title": "Size-change termination with difference constraints", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "This article considers an algorithmic problem related to the termination analysis of programs. More specifically, we are given bounds on differences in sizes of data values before and after every transition in the program's control-flow graph. Our goal is to infer program termination via the following reasoning (\u201cthe size-change principle\u201d): if in any infinite (hypothetic) execution of the program, some size must descend unboundedly, the program must always terminate, since infinite descent of a natural number is impossible.\nThe problem of inferring termination from such abstract information is not the halting problem for programs and may well be decidable. If this is the case, the decision algorithm forms a \u201cback end\u201d of a termination verifier, and it is interesting to find out the computational complexity of the problem.\nA restriction of the problem described above, which only uses monotonicity information (but not difference bounds), is already known to be decidable. We prove that the unrestricted problem is undecidable, which gives a theoretical argument for studying restricted cases. We consider a case where the termination proof is allowed to make use of at most one bound per target variable in each transition. For this special case, which we claim is practically significant, we give (for the first time) an algorithm and show that the problem is in PSPACE, in fact that it is PSPACE-complete. The algorithm is based on combinatorial arguments and results from the theory of integer programming not previously used for similar problems.\nThe algorithm has interesting connections to other work in termination, in particular to methods for generating linear ranking functions or invariants.\n", "author": [{"name": "Amir M. Ben-Amram", "affiliation": "The Academic College Tel-Aviv Yaffo, Tel Aviv, Israel"}, {"name": "Amir M. Ben-Amram", "affiliation": "The Academic College Tel-Aviv Yaffo, Tel Aviv, Israel"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "22", "references": [{"title": "Affine-based size-change termination", "authors": ["Anderson"]}, {"title": "Modular termination proofs for logic and pure prolog programs", "authors": ["Apt"]}, {"title": "Size-change termination and bound analysis", "authors": ["Avery"]}, {"title": "Size-change analysis in polynomial time", "authors": ["Ben-Amram"]}, {"title": "Inference of inequality constraints in logic programs", "authors": ["Brodsky"]}, {"title": "Effectiveness of global analysis in strict independence-based automatic program parallelization", "authors": ["Bueno", " Garc\u00eda de la B"]}, {"title": "Testing for termination with monotonicity constraints", "authors": ["Codish", " Lagoon"]}, {"title": "A semantic basis for termination analysis of logic programs", "authors": ["Codish"]}, {"title": "Practical methods for proving program termination", "authors": ["Col\u00f3n"]}, {"title": "Abstraction refinement for termination", "authors": ["Cook", " Podelski"]}, {"title": "Terminator: Beyond safety", "authors": ["Cook", " Podelski"]}, {"title": "A general framework for automatic termination analysis of logic programs", "authors": ["Dershowitz", " Lindenstrauss", " Sagiv"]}, {"title": "Fixed-parameter tractability and completeness", "authors": ["Downey"]}, {"title": "Rudiments of Ramsey Theory", "authors": ["Graham"]}, {"title": "Automatic program specialization: A re-examination from basic principles", "authors": ["Jones"]}, {"title": "Computability and Complexity from a Programming Perspective", "authors": ["Jones"]}, {"title": "Termination analysis of the untyped lambda calculus", "authors": ["Jones"]}, {"title": "Partial Evaluation and Automatic Program Generation", "authors": ["Jones", " Gomard"]}, {"title": "Complexity of some problems in Petri nets", "authors": ["Jones", " L"]}, {"title": "Program termination analysis and termination of offline partial evaluation", "authors": ["Lee"]}, {"title": "Ranking functions for size-change termination", "authors": ["Lee"]}, {"title": "The size-change principle for program termination", "authors": ["Lee", " Jones"]}, {"title": "Automatic termination analysis of logic programs (with detailed experimental results)", "authors": ["Lindenstrauss"]}, {"title": "Automatic termination analysis of Prolog programs", "authors": ["Lindenstrauss"]}, {"title": "Termination analysis with calling context graphs", "authors": ["Manolios"]}, {"title": "Automating control for logic programs", "authors": ["Naish"]}, {"title": "On the complexity of integer programming", "authors": ["Papadimitriou"]}, {"title": "Termination Proofs for Logic Programs", "authors": ["Pl\u00fcmer"]}, {"title": "Transition invariants", "authors": ["Podelski"]}, {"title": "On a problem of formal logic", "authors": ["Ramsey"]}, {"title": "A termination test for logic programs", "authors": ["Sagiv"]}, {"title": "Termination of logic programs: The never-ending story", "authors": ["Schreye"]}, {"title": "Termination detection in logic programs using argument sizes (extended abstract)", "authors": ["Sohn"]}, {"title": "The size-change principle and dependency pairs for termination of term rewriting", "authors": ["Thiemann"]}, {"title": "Efficient tests for top-down termination of logical rules", "authors": []}]},
{"title": "Execution suppression: An automated iterative technique for locating memory errors", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "By studying the behavior of several programs that crash due to memory errors, we observed that locating the errors can be challenging because significant propagation of corrupt memory values can occur prior to the point of the crash. In this article, we present an automated approach for locating memory errors in the presence of memory corruption propagation. Our approach leverages the information revealed by a program crash: when a crash occurs, this reveals a subset of the memory corruption that exists in the execution. By suppressing (nullifying) the effect of this known corruption during execution, the crash is avoided and any remaining (hidden) corruption may then be exposed by subsequent crashes. The newly exposed corruption can then be suppressed in turn. By iterating this process until no further crashes occur, the first point of memory corruption\u2014and the likely root cause of the program failure\u2014can be identified. However, this iterative approach may terminate prematurely, since programs may not crash even when memory corruption is present during execution. To address this, we show how crashes can be exposed in an execution by manipulating the relative ordering of particular variables within memory. By revealing crashes through this variable re-ordering, the effectiveness and applicability of the execution suppression approach can be improved. We describe a set of experiments illustrating the effectiveness of our approach in consistently and precisely identifying the first points of memory corruption in executions that fail due to memory errors. We also discuss a baseline software implementation of execution suppression that incurs an average overhead of 7.2x, and describe how to reduce this overhead to 1.8x through hardware support.\n", "author": [{"name": "Dennis Jeffrey", "affiliation": "The University of California, Riverside, CA"}, {"name": "Vijay Nagarajan", "affiliation": "The University of California, Riverside, CA"}, {"name": "Rajiv Gupta", "affiliation": "The University of California, Riverside, CA"}, {"name": "Dennis Jeffrey", "affiliation": "The University of California, Riverside, CA"}, {"name": "Vijay Nagarajan", "affiliation": "The University of California, Riverside, CA"}, {"name": "Rajiv Gupta", "affiliation": "The University of California, Riverside, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "Dynamic program slicing", "authors": ["Agrawal"]}, {"title": "Incremental regression testing", "authors": ["Agrawal", " Horgan", " Krauser"]}, {"title": "Preventing memory error exploits with WIT", "authors": ["Akritidis", " Cadar", " Raiciu", " Costa"]}, {"title": "Data diversity: An approach to software fault tolerance", "authors": ["Ammann"]}, {"title": "DieHard: Probabilistic memory safety for unsafe languages", "authors": ["Berger"]}, {"title": "Diagnosing and tolerating bugs in deployed systems", "authors": ["Bond"]}, {"title": "Tolerating memory leaks", "authors": ["Bond"]}, {"title": "Leak pruning", "authors": ["Bond"]}, {"title": "From speculation to security: Practical and efficient information flow tracking using speculative hardware", "authors": ["Chen", " Wu", " Yuan", " Zang", " Yew"]}, {"title": "Locating causes of program failures", "authors": ["Cleve"]}, {"title": "Check 'n' Crash: Combining static checking and testing", "authors": ["Csallner"]}, {"title": "Raksha: a flexible information flow architecture for software security", "authors": ["Dalton", " Kannan"]}, {"title": "Dynamically discovering likely program invariants to support program evolution", "authors": ["Ernst", " Cockrell", " Griswold"]}, {"title": "Extended static checking for java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "An efficient relevant slicing method for debugging", "authors": ["Gyimothy", " Beszedes"]}, {"title": "Tracking down software bugs using automatic anomaly detection", "authors": ["Hangal"]}, {"title": "Purify: Fast detection of memory leaks and access errors", "authors": ["Hastings"]}, {"title": "Fault localization using value replacement", "authors": ["Jeffrey", " Gupta"]}, {"title": "Identifying the root causes of memory bugs using corrupted memory location suppression", "authors": ["Jeffrey", " Gupta"]}, {"title": "Visualization of test information to assist fault localization", "authors": ["Jones", " Harrold"]}, {"title": "Dynamic program slicing", "authors": ["Korel"]}, {"title": "CP-Miner: Finding copy-paste and related bugs in large-scale software code", "authors": [" Lu", " Myagmar"]}, {"title": "BugBench: Benchmarks for evaluating bug detection tools", "authors": [" Li", " Qin", " Tan", " Zhou"]}, {"title": "PathExpander: Architectural support for increasing the path coverage of dynamic bug detection", "authors": [" Zhou", " Liu", " Zhou"]}, {"title": "Archipelago: Trading address space for reliability and security", "authors": ["Lvin", " Novark", " Berger"]}, {"title": "BugNet: Continuously recording program execution for deterministic replay debugging", "authors": ["Narayanasamy", " Pokam"]}, {"title": "CCured: Type-safe retrofitting of legacy code", "authors": ["Necula", " McPeak"]}, {"title": "Valgrind: A framework for heavyweight dynamic binary instrumentation", "authors": ["Nethercote"]}, {"title": "Exterminator: Automatically correcting memory errors with high probability", "authors": ["Novark", " Berger"]}, {"title": "Efficiently and precisely locating memory leaks and bloat", "authors": ["Novark", " Berger"]}, {"title": "Eclat: Automatic generation and classification of test inputs", "authors": ["Pacheco"]}, {"title": "Samurai: Protecting critical data in unsafe languages", "authors": ["Pattabiraman", " Grover"]}, {"title": "Fault localization with nearest neighbor queries", "authors": ["Renieris"]}, {"title": "A practical dynamic buffer overflow detector", "authors": ["Ruwase"]}, {"title": "HeapMon: A helper-thread approach to programmable, automatic, and low-overhead memory bug detection", "authors": ["Shetty", " Kharbutli", " Solihin"]}, {"title": "Avoiding program failures through safe execution perturbations", "authors": ["Tallam", " Tian", " Gupta"]}, {"title": "FlexiTaint: A programmable accelerator for dynamic taint propagation", "authors": ["Venkataramani", " Doudalis", " Solihin"]}, {"title": "Program slicing", "authors": ["Weiser"]}, {"title": "EXPLODE: A lightweight, general system for finding serious storage system errors", "authors": ["Yang", " Sar"]}, {"title": "Isolating cause-effect chains from computer programs", "authors": ["Zeller"]}, {"title": "Simplifying and isolating failure-inducing input", "authors": ["Zeller"]}, {"title": "Locating faults through automated predicate switching", "authors": ["Zhang", " Gupta"]}, {"title": "Pruning dynamic slices with confidence", "authors": ["Zhang", " Gupta"]}, {"title": "AccMon: Automatically detecting memory-related bugs via program counter-based invariants", "authors": ["Zhou", " Liu", " Fei", " Lu", " Qin", " Zhou", " Midkiff"]}]},
{"title": "Verifying safety properties of concurrent heap-manipulating programs", "time": "May 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We provide a parametric framework for verifying safety properties of concurrent heap-manipulating programs. The framework combines thread-scheduling information with information about the shape of the heap. This leads to verification algorithms that are more precise than existing techniques. The framework also provides a precise shape-analysis algorithm for concurrent programs. In contrast to most existing verification techniques, we do not put a bound on the number of allocated objects. The framework produces interesting results even when analyzing programs with an unbounded number of threads. The framework is applied to successfully verify the following properties of a concurrent program:\n\u2014Concurrent manipulation of linked-list based ADT preserves the ADT datatype invariant.\n\u2014The program does not perform inconsistent updates due to interference.\n\u2014The program does not reach a deadlock.\n\u2014The program does not produce runtime errors due to illegal thread interactions.\nWe also found bugs in erroneous programs violating such properties. A prototype of our framework has been implemented and applied to small, but interesting, example programs.\n", "author": [{"name": "Eran Yahav", "affiliation": "IBM T. J. Watson Research Center, Hawthorne, NY"}, {"name": "Mooly Sagiv", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Eran Yahav", "affiliation": "IBM T. J. Watson Research Center, Hawthorne, NY"}, {"name": "Mooly Sagiv", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Verification of infinite-state systems by combining abstraction and reachability analysis", "authors": ["Abdulla", " Annichini", " Bensalem", " Bouajjani", " Habermehl"]}, {"title": "Comparison under abstraction for verifying linearizability", "authors": ["Amit", " Rinetzky", " Reps", " Sagiv"]}, {"title": "Context-bounded analysis for concurrent programs with dynamic creation of threads", "authors": ["Atig", " Bouajjani"]}, {"title": "Shape analysis by predicate abstraction", "authors": ["Balaban", " Pnueli"]}, {"title": "Automatic predicate abstraction of C programs", "authors": ["Ball", " Majumdar", " Millstein"]}, {"title": "An overview of SAL", "authors": ["Bensalem", " Ganesh", " Lakhnech", " Mu\u00f1oz", " Owre", " Ruess", " Rushby", " Rusu", " Sa\u00efdi", " Shankar", " Singerman"]}, {"title": "Invest: A tool for the verification of invariants", "authors": ["Bensalem", " Lakhnech"]}, {"title": "Shape analysis for composite data structures", "authors": ["Berdine", " Calcagno", " Cook", " Distefano", " OHearn", " Wies"]}, {"title": "Symbolic execution with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": "Thread quantification for concurrent shape analysis", "authors": ["Berdine", " Lev-Ami", " Manevich", " Ramalingam"]}, {"title": "Revamping TVLA: Making parametric shape analysis competitive", "authors": ["Bogudlov", " Lev-Ami", " Reps"]}, {"title": "Permission accounting in separation logic", "authors": ["Bornat", " Calcagno", " O'Hearn"]}, {"title": "Ownership types for safe programming: preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": "A parameterized type system for race-free java programs", "authors": ["Boyapati"]}, {"title": "Monitor classification", "authors": ["Buhr", " Fortier"]}, {"title": "Compositional shape analysis by means of bi-abduction", "authors": ["Calcagno", " Distefano", " O'Hearn"]}, {"title": "Mobile ambients", "authors": ["Cardelli"]}, {"title": "An event-based structural operational semantis of multi-threaded Java", "authors": ["Cenciarelli", " Knapp", " Reus"]}, {"title": "Analysis of pointers and structures", "authors": ["Chase", " Wegman"]}, {"title": "Static datarace analysis for multithreaded object-oriented programs", "authors": ["Choi", " Loginov"]}, {"title": "Model checking and abstraction", "authors": ["Clarke", " Grumberg"]}, {"title": "Model Checking", "authors": ["Clarke", " Grumberg"]}, {"title": "Proving ptolemy right: The environment abstraction framework for model checking concurrent systems", "authors": ["Clarke", " Talupur"]}, {"title": "Environment abstraction for parameterized verification", "authors": ["Clarke", " Talupur"]}, {"title": "Verifying parameterized networks", "authors": ["Clarke", " Grumberg"]}, {"title": "Model Checking", "authors": ["Clarke", " Grumberg"]}, {"title": "Maude: specification and programming in rewriting logic", "authors": ["Clavel", " Dur\u00e1n", " Eker", " Lincoln", " Mart\u00ed-Oliet", " Meseguer"]}, {"title": "Symbolic model checking for asynchronous boolean programs", "authors": ["Cook", " Kroening"]}, {"title": "Using shape analysis to reduce finite-state models of concurrent java programs", "authors": ["Corbett"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction of approximation of fixed points", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "ESP: Path-sensitive program verification in polynomial time", "authors": ["Das", " Lerner"]}, {"title": "Experience with predicate abstraction", "authors": ["Das", " Dill"]}, {"title": "A deadlock detection tool for concurrent Java programs", "authors": ["Demartini", " Iosif"]}, {"title": "dSPIN: A dynamic extension of SPIN", "authors": ["Demartini", " Iosif"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "Symmetry and model checking", "authors": ["Emerson"]}, {"title": "Racerx: Effective, static detection of race conditions and deadlocks", "authors": ["Engler"]}, {"title": "Formal analysis of java programs in javafan", "authors": ["Farzan", " Chen", " Meseguer"]}, {"title": "Effective typestate verification in the presence of aliasing", "authors": ["Fink", " Yahav", " Dor", " Ramalingam"]}, {"title": "Types for safe locking", "authors": ["Flanagan"]}, {"title": "Type-based race detection for java", "authors": ["Flanagan"]}, {"title": "Type inference against races", "authors": ["Flanagan"]}, {"title": "Thread-modular verification for shared-memory programs", "authors": ["Flanagan", " Freund"]}, {"title": "Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs", "authors": ["Flanagan", " Freund"]}, {"title": "Dynamic partial-order reduction for model checking software", "authors": ["Flanagan"]}, {"title": "Efficient modeling of concurrent systems in BMC", "authors": ["Ganai"]}, {"title": "Partial-Order Methods for the Verification of Concurrent Systems -- An Approach to the State-Explosion Problem", "authors": ["Godefroid"]}, {"title": "Java Concurrency in Practice", "authors": ["Goetz", " Peierls", " Bloch", " Bowbeer", " Holmes"]}, {"title": "A framework for numeric analysis of array operations", "authors": ["Gopan", " Reps"]}, {"title": "The Java Language Specification", "authors": ["Gosling", " Joy"]}, {"title": "Local reasoning for storable locks and threads", "authors": ["Gotsman", " Berdine", " Cook", " Rinetzky"]}, {"title": "Thread-modular shape analysis", "authors": ["Gotsman", " Berdine", " Cook"]}, {"title": "Proving that non-blocking algorithms don't block", "authors": ["Gotsman", " Cook", " Parkinson"]}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "A semantics for reducing nondeterminism in concurrent programs and its applications", "authors": ["Gueta", " Flanagan", " Yahav"]}, {"title": "Cartesian partial order reduction", "authors": ["Gueta", " Flanagan", " Yahav"]}, {"title": "Model checking Java programs using Java pathfinder", "authors": ["Havelund"]}, {"title": "Race checking by context inference", "authors": ["Henzinger", " Jhala"]}, {"title": "Wait-free synchronization", "authors": ["Herlihy"]}, {"title": "The Art of Multiprocessor Programming", "authors": ["Herlihy"]}, {"title": "Linearizability: A correctness condition for concurrent objects", "authors": ["Herlihy"]}, {"title": "Proving properties of concurrent systems with SPIN", "authors": ["Holzmann"]}, {"title": "IBM System/370 Extended Architecture, Principles of Operation", "authors": ["IBM"]}, {"title": "Descriptive Complexity", "authors": ["Immerman"]}, {"title": "Bi as an assertion language for mutable data structures", "authors": ["Ishtiaq"]}, {"title": "A relational approach to interprocedural shape analysis", "authors": ["Jeannet", " Loginov", " Reps"]}, {"title": "Flow analysis and optimization of Lisp-like structures", "authors": ["Jones"]}, {"title": "A flexible approach to interprocedural data flow analysis and programs with recursive data structures", "authors": ["Jones"]}, {"title": "Back to the future: Revisiting precise program verification using SMT solvers", "authors": ["Lahiri"]}, {"title": "Static and precise detection of concurrency errors in systems code using SMT solvers", "authors": ["Lahiri", " Qadeer"]}, {"title": "Reducing concurrent analysis under a context bound to sequential analysis", "authors": ["Lal"]}, {"title": "Concurrent Programming in Java", "authors": ["Lea"]}, {"title": "A basis for verifying multi-threaded programs", "authors": ["Leino"]}, {"title": "TVLA: A framework for Kleene based static analysis", "authors": ["Lev-Ami"]}, {"title": "The Java Virtual Machine Specification", "authors": ["Lindholm"]}, {"title": "Heap decomposition for concurrent shape analysis", "authors": ["Manevich", " Lev-Ami", " Sagiv", " Ramalingam"]}, {"title": "Predicate abstraction and canonical abstraction for singly-linked lists", "authors": ["Manevich", " Yahav", " Ramalingam"]}, {"title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms", "authors": ["Michael"]}, {"title": "Hazard pointers: Safe memory reclamation for lock-free objects", "authors": ["Michael"]}, {"title": "The pointer assertion logic engine", "authors": ["Moller"]}, {"title": "The apprentice challenge", "authors": ["Moore"]}, {"title": "Effective static race detection for java", "authors": ["Naik", " Aiken"]}, {"title": "What are race conditions&quest; Some issues and formalizations", "authors": ["Netzer"]}, {"title": "A kleene analysis of mobile ambients", "authors": ["Nielson", " Nielson"]}, {"title": "Resources, concurrency, and local reasoning", "authors": ["O'Hearn"]}, {"title": "Liveness with (0, 1, infty)-counter abstraction", "authors": ["Pnueli", " Xu"]}, {"title": "A non-blocking algorithm for shared queues using Compare-and-Swap", "authors": ["Prakash", " Lee"]}, {"title": "Locksmith: Context-sensitive correlation analysis for race detection", "authors": ["Pratikakis", " Foster"]}, {"title": "Context-bounded model checking of concurrent software", "authors": ["Qadeer"]}, {"title": "Finite differencing of logical formulas for static analysis", "authors": ["Reps", " Sagiv"]}, {"title": "Static program analysis via 3-valued logic", "authors": ["Reps", " Sagiv"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Interprocedural shape analysis for recursive programs", "authors": ["Rinetskey"]}, {"title": "Interprocedural and modular local heap shape analysis", "authors": ["Rinetzky"]}, {"title": "Solving shape-analysis problems in languages with destructive updating", "authors": ["Sagiv", " Reps"]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Sagiv", " Reps"]}, {"title": "Model checking guided abstraction and analysis", "authors": ["Saidi"]}, {"title": "Establishing local temporal heap safety properties with applications to compile-time memory management", "authors": ["Shaham", " Yahav", " Kolodner"]}, {"title": "Operating Systems Concepts, 4 Ed", "authors": ["Silberschatz"]}, {"title": "Warlock\u2014A static data race analysis tool", "authors": ["Sterling"]}, {"title": "Model-checking multi-threaded distributed Java programs", "authors": ["Stoller"]}, {"title": "A simple and correct shared-queue algorithm using compare-and-swap", "authors": ["Stone"]}, {"title": "A non-blocking Compare-and-Swap algorithm for a shared circular queue", "authors": ["Stone"]}, {"title": "Typestate: A programming language concept for enhancing software reliability", "authors": ["Strom"]}, {"title": "Mechanisms for compile-time enforcement of security", "authors": ["Strom"]}, {"title": "Modular fine-grained concurrency verification", "authors": ["Vafeiadis"]}, {"title": "Shape-value abstraction for verifying linearizability", "authors": ["Vafeiadis"]}, {"title": "Soot - A java optimization framework", "authors": ["Vall\u00e9e-Rai", " Hendren", " Sundaresan", " Lam", " Gagnon"]}, {"title": "Stubborn sets for reduced state space generation", "authors": ["Valmari"]}, {"title": "Deriving linearizable fine-grained concurrent objects", "authors": ["Vechev"]}, {"title": "CGCExplorer: A semi-automated search procedure for provably correct concurrent collectors", "authors": ["Vechev", " Yahav", " Bacon"]}, {"title": "Experience with model checking linearizability", "authors": ["Vechev", " Yahav"]}, {"title": "Java deadlock: The woes of multithreaded design", "authors": ["Vermeulen"]}, {"title": "A library of concurrent objects and their proofs of correctness", "authors": ["Wing"]}, {"title": "3VMC user's manual", "authors": ["Yahav"]}, {"title": "Verifying safety properties of concurrent Java programs using 3-valued logic", "authors": ["Yahav"]}, {"title": "Verifying safety properties using separation and heterogeneous abstractions", "authors": ["Yahav"]}, {"title": "Automatically verifying concurrent queue algorithms", "authors": ["Yahav"]}, {"title": "Scalable shape analysis for systems code", "authors": ["Yang", " Lee", " Berdine", " Calcagno", " Cook", " Distefano"]}, {"title": "Full functional verification of linked data structures", "authors": ["Zee", " Kuncak"]}]},
{"title": "Decomposing bytecode verification by abstract interpretation", "time": "December 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Bytecode verification is a key point in the security chain of the Java platform. This feature is only optional in many embedded devices since the memory requirements of the verification process are too high. In this article we propose an approach that significantly reduces the use of memory by a serial/parallel decomposition of the verification into multiple specialized passes. The algorithm reduces the type encoding space by operating on different abstractions of the domain of types. The results of our evaluation show that this bytecode verification can be performed directly on small memory systems. The method is formalized in the framework of abstract interpretation.\n", "author": [{"name": "C. Bernardeschi", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "N. De Francesco", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "G. Lettieri", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "L. Martini", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "P. Masci", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "C. Bernardeschi", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "N. De Francesco", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "G. Lettieri", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "L. Martini", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "P. Masci", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Tool-assisted specification and verification of typed low-level languages", "authors": ["Barthe", " Courtieu", " Dufay"]}, {"title": "Efficient bytecode verification using immediate postdominators in control flow graphs", "authors": ["Bernardeschi", " De Francesco"]}, {"title": "Decomposing bytecode verification by abstract interpretation for space awareness in embedded systems", "authors": ["Bernardeschi", " Francesco", " Lettieri", " Martini"]}, {"title": "Using control dependencies for space-aware bytecode verification", "authors": ["Bernardeschi", " Lettieri", " Martini"]}, {"title": "Using postdomination to reduce space requirements of data flow analysis", "authors": ["Bernardeschi", " Lettieri", " Martini"]}, {"title": "The PACAP prototype: A tool for detecting Java card illegal flow", "authors": ["Bieber", " Cazin", " Marouani", " Girard", " Lanet", " Wiels"]}, {"title": "Formal development of an embedded verifier for Java Card byte code", "authors": ["Casset", " Burdy"]}, {"title": "Fast subtype checking in the HotSpot JVM", "authors": ["Click"]}, {"title": "Improving the official specification of Java bytecode verification", "authors": ["Coglio"]}, {"title": "Simple verification technique for complex Java bytecode subroutines", "authors": ["Coglio"]}, {"title": "Type-extension type test can be performed in constant time", "authors": ["Cohen"]}, {"title": "Complementation in abstract interpretation", "authors": ["Cortesi", " Fil\u00e9", " Ranzato", " Giacobazzi"]}, {"title": "Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Abstract interpretation frameworks", "authors": ["Cousot"]}, {"title": "Introduction to Lattices and Order", "authors": ["Davey"]}, {"title": "Building an \u201cimpossible\u201d verifier on a Java Card", "authors": ["Deville"]}, {"title": "The type system for object initialization in the Java bytecode language", "authors": ["Freund"]}, {"title": "Optimal domains for disjunctive abstract interpretation", "authors": ["Giacobazzi"]}, {"title": "Making abstract interpretations complete", "authors": ["Giacobazzi", " Ranzato"]}, {"title": "A logical model for relational abstract domains", "authors": ["Giacobazzi"]}, {"title": "A specification of Java loading and bytecode verification", "authors": ["Goldberg"]}, {"title": "Java Language Specification, 2nd Ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Trading-off type-inference memory complexity against communication", "authors": ["Hypp\u00f6nen", " Naccache", " Trichina"]}, {"title": "Jsr-000202 Java class file specification update", "authors": []}, {"title": "A machine-checked model for a Java-like language, virtual machine, and compiler", "authors": ["Klein"]}, {"title": "Type elaboration and subtype completion for Java bytecode", "authors": ["Knoblock"]}, {"title": "Formal proof of smart card applets correctness", "authors": ["Lanet"]}, {"title": "Java bytecode verification: an overview", "authors": ["Leroy"]}, {"title": "Bytecode verification for Java smart card", "authors": ["Leroy"]}, {"title": "Java bytecode verification: algorithms and formalizations", "authors": ["Leroy"]}, {"title": "Java Virtual Machine Specification 2nd Ed", "authors": ["Lindholm"]}, {"title": "Completeness and predicate-based abstract interpretation", "authors": ["Mycroft"]}, {"title": "Reducing the memory complexity of type-inference algorithms", "authors": ["Naccache", " Tchoulkine", " Tymen"]}, {"title": "Proof-carrying code", "authors": ["Necula"]}, {"title": "Standard fixpoint iteration for Java bytecode verification", "authors": ["Qian"]}, {"title": "A B model for ensuring soundness of a large subset of the Java Card virtual machine", "authors": ["Requet"]}, {"title": "Lightweight bytecode verification", "authors": ["Rose"]}, {"title": "Lightweight bytecode verification", "authors": ["Rose"]}, {"title": "The closure operators of a lattice", "authors": ["Ward"]}]},
{"title": "Checking type safety of foreign function calls", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Foreign function interfaces (FFIs) allow components in different languages to communicate directly with each other. While FFIs are useful, they often require writing tricky low-level code and include little or no static safety checking, thus providing a rich source of hard-to-find programming errors. In this article, we study the problem of enforcing type safety across the OCaml-to-C FFI and the Java Native Interface (JNI). We present O-Saffire and J-Saffire, a pair of multilingual type inference systems that ensure C code that uses these FFIs accesses high-level data safely. Our inference systems use \n to model C's low-level view of OCaml and Java values, and singleton types to track integers, strings, memory offsets, and type tags through C. J-Saffire, our Java system, uses a polymorphic flow-insensitive, unification-based analysis. Polymorphism is important because it allows us to precisely model user-defined wrapper functions and the more than 200 JNI functions. O-Saffire, our OCaml system, uses a monomorphic flow-sensitive analysis because, while polymorphism is much less important for the OCaml FFI flow-sensitivity is critical to track conditional branches, which are used when pattern matching OCaml data in C. O-Saffire also tracks garbage collection information to ensure that local C pointers to the OCaml heap are registered properly, which is not necessary for the JNI. We have applied O-Saffire and J-Saffire to a set of benchmarks and found many bugs and questionable coding practices. These results suggest that static checking of FFIs can be a valuable tool in writing correct multilingual software.\n", "author": [{"name": "Michael Furr", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Michael Furr", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland, College Park, MD"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "18", "references": [{"title": "Mockingbird: Flexible stub compilation from paris of declarations", "authors": ["Auerbach", " Barton", " Chu-Carroll"]}, {"title": "Polylingual systems: An approach to seamless interoperability", "authors": ["Barrett"]}, {"title": "SWIG: An easy to use tool for integrating scripting languages with C and C++", "authors": ["Beazley"]}, {"title": "No-longer-foreign: Teaching an ML compiler to speak C \u201cnatively\u201d", "authors": ["Blume"]}, {"title": "The Exu approach to safe, transparent and lightweight interoperability", "authors": ["Bubba", " Kaplan"]}, {"title": "Ocaml javalib", "authors": ["Cannasse"]}, {"title": "Physical type checking for C", "authors": ["Ch"]}, {"title": "Precise analysis of string expressions", "authors": ["Christensen", " M\u00f8ller"]}, {"title": "The Fugue protocol checker: Is your software baroque&quest; Tech", "authors": ["DeLine"]}, {"title": "Scalable context-sensitive flow analysis using instantiation constraints", "authors": ["F\u00e4hndrich", " Rehof"]}, {"title": "The revised report on the syntactic theories of sequential control and state", "authors": ["Felleisen"]}, {"title": "Calling hell from heaven and heaven from hell", "authors": ["Finne", " Leijen", " Meijer"]}, {"title": "A framework for interoperability", "authors": ["Fisher", " Pucella"]}, {"title": "Checking type safety of foreign function calls", "authors": ["Furr"]}, {"title": "Java SE 6 \u201cMustang\u201d bug 6362203", "authors": ["Furr"]}, {"title": "Checking type safety of foreign function calls", "authors": ["Furr"]}, {"title": "Polymorphic type inference for the JNI", "authors": ["Furr"]}, {"title": "Static Checking of Dynamically Generated Queries in Database Applications", "authors": ["Gould", " Su"]}, {"title": "Modern languages and Microsoft's component object model", "authors": ["Gray", " Hotchkiss", " LaForge", " Shalit"]}, {"title": "Design of large-scale polylingual systems", "authors": ["Grechanik", " Batory"]}, {"title": "Interlanguage object sharing with SOM", "authors": ["Hamilton"]}, {"title": "Language integration in the common language runtime", "authors": ["Hamilton"]}, {"title": "Type inference with polymorphic recursion", "authors": ["Henglein"]}, {"title": "A portable C interface for standard ML of New Jersey", "authors": ["Huelsbergen"]}, {"title": "Java bindings for the gnome and gtk libraries", "authors": ["Java-Gnome Developers"]}, {"title": "Tackling the awkward squad: Monadic input/output, concurrency, exceptions, and foreign-language calls in Haskell", "authors": ["Jones"]}, {"title": "The Objective Caml system", "authors": ["Leroy"]}, {"title": "The Java Native Interface: Programmer's Guide and Specification", "authors": ["Liang"]}, {"title": "The Java Virtual Machine Specification", "authors": ["Lindholm"]}, {"title": "Operational semantics for multi-language programs", "authors": ["Matthews"]}, {"title": "Scripting ", "authors": ["Meijer", " Perry"]}, {"title": "CIL: Intermediate language and tools for analysis and transformation of C programs", "authors": ["Necula", " McPeak", " Rahul"]}, {"title": "CCured: Type-safe retrofitting of legacy code", "authors": ["Necula", " McPeak"]}, {"title": "Static typing for dynamic messages", "authors": ["Nishimura"]}, {"title": "Common object request broker architecture: Core specification, Version 3", "authors": ["Object Management Grou"]}, {"title": "Typechecking records and variants in a natural extension of ML", "authors": ["R\u00e9my"]}, {"title": "Safe java native interface", "authors": ["Tan", " Appel", " Chakradhar", " Raghunathan", " Ravi"]}, {"title": "Grammar-based analysis of string expressions", "authors": ["Thiemann"]}, {"title": "Safe and principled language interoperation", "authors": ["Trifonov"]}, {"title": "A practical soft type system for scheme", "authors": ["Wright"]}]},
{"title": "Relations as an abstraction for BDD-based program analysis", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "In this article we present Jedd, a language extension to Java that supports a convenient way of programming with Binary Decision Diagrams (BDDs). The Jedd language abstracts BDDs as database-style relations and operations on relations, and provides static type rules to ensure that relational operations are used correctly.\nThe article provides a description of the Jedd language and reports on the design and implementation of the Jedd translator and associated runtime system. Of particular interest is the approach to assigning attributes from the high-level relations to physical domains in the underlying BDDs, which is done by expressing the constraints as a SAT problem and using a modern SAT solver to compute the solution. Further, a runtime system is defined that handles memory management issues and supports a browsable profiling tool for tuning the key BDD operations.\nThe motivation for designing Jedd was to support the development of interrelated whole program analyses based on BDDs. We have successfully used Jedd to build Paddle, a framework of context-sensitive program analyses, including points-to analysis and call graph construction, as well as several client analyses.\n", "author": [{"name": "Ond\u0159ej Lhot\u00e1k", "affiliation": "University of Waterloo, Waterloo, ON, Canada"}, {"name": "Laurie Hendren", "affiliation": "McGill University, Montreal, QC, Canada"}, {"name": "Ond\u0159ej Lhot\u00e1k", "affiliation": "University of Waterloo, Waterloo, ON, Canada"}, {"name": "Laurie Hendren", "affiliation": "McGill University, Montreal, QC, Canada"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "SWIG: An easy to use tool for integrating scripting languages with C and C++", "authors": ["Beazley"]}, {"title": "The interactive BDD environment", "authors": ["Behrmann"]}, {"title": "Implementation of relational algebra using binary decision diagrams", "authors": ["Berghammer", " Leoniuk"]}, {"title": "Points-to analysis using BDDs", "authors": ["Berndl", " Lhot\u00e1k", " Qian", " Hendren"]}, {"title": "Simple and efficient relational querying of software structures", "authors": ["Beyer", " Noack"]}, {"title": "Improving the variable ordering of OBDDs is NP-complete", "authors": ["Bollig"]}, {"title": "The &lt;bigwig&gt; project", "authors": ["Brabr", " M\u00f8ller"]}, {"title": "Symbolic boolean manipulation with ordered binary-decision diagrams", "authors": ["Bryant"]}, {"title": "Extending Java for high-level Web service construction", "authors": ["Christensen", " M\u00f8ller"]}, {"title": "Programming in Prolog", "authors": ["Clocksin"]}, {"title": "A relational model of data for large shared data banks", "authors": ["Codd"]}, {"title": "Unification-based pointer analysis with directional assignments", "authors": ["Das"]}, {"title": "Wins and losses of algebraic transformations of software architectures", "authors": ["Fahmy", " Holt"]}, {"title": "Partial online cycle elimination in inclusion constraint graphs", "authors": ["F\u00e4hndrich", " Foster", " Su"]}, {"title": "Database Systems: The Complete Book", "authors": ["Garcia-Molina", " Ullman"]}, {"title": "The Java Language Specification", "authors": ["Gosling", " Joy"]}, {"title": "Ultra-fast aliasing analysis using CLA: A million lines of C code in a second", "authors": ["Heintze"]}, {"title": "SQLite: an embeddable database engine", "authors": ["Hipp"]}, {"title": "Spark: A flexible points-to analysis framework for Java", "authors": ["Lhot\u00e1k"]}, {"title": "Program analysis using binary decision diagrams", "authors": ["Lhot\u00e1k"]}, {"title": "Scaling Java points-to analysis using Spark", "authors": ["Lhot\u00e1k"]}, {"title": "Jedd: a BDD-based relational extension of Java", "authors": ["Lhot\u00e1k"]}, {"title": "Extending and evaluating flow-insenstitive and context-insensitive points-to analyses for Java", "authors": ["Liang", " Pennings"]}, {"title": "BuDDy, A Binary Decision Diagram Package", "authors": ["Lind-Nielsen"]}, {"title": "Unifying tables, objects, and documents", "authors": ["Meijer"]}, {"title": "Arithmetic boolean expression manipulator using BDDs", "authors": ["Minato"]}, {"title": "Chaff: Engineering an efficient SAT solver", "authors": ["Moskewicz", " Madigan", " Zhao", " Zhang"]}, {"title": "GBDD -- A package for representing relations with BDDs", "authors": ["Nilsson"]}, {"title": "Polyglot: An extensible compiler framework for Java", "authors": ["Nystrom", " Clarkson"]}, {"title": "thttpd: tiny/turbo/throttling HTTP server", "authors": ["Poskanzer"]}, {"title": "SableJBDD, A Java binary decision diagram package", "authors": ["Qian"]}, {"title": "Points-to analysis for Java using annotated constraints", "authors": ["Rountev", " Milanova"]}, {"title": "Some high level language constructs for data of type relation", "authors": ["Schmidt"]}, {"title": "Programming with Sets\u2014An Introduction to Setl", "authors": ["Schwartz", " Dewar", " Dubinsky"]}, {"title": "Fast and accurate flow-insensitive points-to analysis", "authors": ["Shapiro"]}, {"title": "CUDD: CU Decision Diagram Package", "authors": ["Somenzi"]}, {"title": "The complexity of the optimal variable ordering problems of shared binary decision diagrams", "authors": ["Tani", " Hamaguchi"]}, {"title": "Depth first search and linear graph algorithms", "authors": ["Tarjan"]}, {"title": "Principles of Database and Knowledge-Base Systems, Vol", "authors": ["Ullman"]}, {"title": "Principles of Database and Knowledge-Base Systems, Vol", "authors": ["Ullman"]}, {"title": "JBDD, a Java interface to CUDD and BuDDY", "authors": ["Vahidi"]}, {"title": "bddbddb", "authors": ["Whaley"]}, {"title": "JavaBDD", "authors": ["Whaley"]}, {"title": "An efficient inclusion-based points-to analysis for strictly-typed languages", "authors": ["Whaley"]}, {"title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams", "authors": ["Whaley"]}, {"title": "Validating SAT solvers using an independent resolution-based checker: Practical implementations and other applications", "authors": ["Zhang"]}, {"title": "Symbolic pointer analysis", "authors": ["Zhu"]}, {"title": "Symbolic pointer analysis revisited", "authors": ["Zhu"]}]},
{"title": "Types for atomicity: Static checking and inference for Java", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Atomicity is a fundamental correctness property in multithreaded programs. A method is atomic if, for every execution, there is an equivalent serial execution in which the actions of the method are not interleaved with actions of other threads. Atomic methods are amenable to sequential reasoning, which significantly facilitates subsequent analysis and verification.\nThis article presents a type system for specifying and verifying the atomicity of methods in multithreaded Java programs using a synthesis of Lipton's theory of reduction and type systems for race detection. The type system supports guarded, write-guarded, and unguarded fields, as well as thread-local data, parameterized classes and methods, and protected locks. We also present an algorithm for verifying atomicity via type inference.\nWe have applied our type checker and type inference tools to a number of commonly used Java library classes and programs. These tools were able to verify the vast majority of methods in these benchmarks as atomic, indicating that atomicity is a widespread methodology for multithreaded programming. In addition, reported atomicity violations revealed some subtle errors in the synchronization disciplines of these programs.\n", "author": [{"name": "Cormac Flanagan", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}, {"name": "Stephen N. Freund", "affiliation": "Williams College, Williamstown, MA"}, {"name": "Marina Lifshin", "affiliation": "Williams College, Williamstown, MA"}, {"name": "Shaz Qadeer", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "Cormac Flanagan", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}, {"name": "Stephen N. Freund", "affiliation": "Williams College, Williamstown, MA"}, {"name": "Marina Lifshin", "affiliation": "Williams College, Williamstown, MA"}, {"name": "Shaz Qadeer", "affiliation": "Microsoft Research, Redmond, WA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "46", "references": [{"title": "Types for safe locking: Static race detection for Java", "authors": ["Abadi", " Flanagan"]}, {"title": "Type inference for parameterized race-free Java", "authors": ["Agarwal"]}, {"title": "Barrier inference", "authors": ["Aiken"]}, {"title": "High-level data races", "authors": ["Artho", " Havelund"]}, {"title": "A method for refining atomicity in parallel algorithms", "authors": ["Back"]}, {"title": "An introduction to programming with threads", "authors": ["Birrell"]}, {"title": "A type system for preventing data races and deadlocks in Java programs", "authors": ["Boyapati", " Lee"]}, {"title": "A parameterized type system for race-free Java programs", "authors": ["Boyapati"]}, {"title": "Systematic testing of multithreaded Java programs", "authors": ["Bruening"]}, {"title": "Graph-based algorithms for boolean function manipulation", "authors": ["Bryant"]}, {"title": "Finding stale-value errors in concurrent programs", "authors": ["Burrows"]}, {"title": "Typechecking dependent types and subtypes", "authors": ["Cardelli"]}, {"title": "An empirical comparison of static concurrency analysis techniques", "authors": ["Chamillard", " Clarke"]}, {"title": "Escape analysis for Java", "authors": ["Choi", " Gupta", " Serrano", " Sreedhar"]}, {"title": "Efficient and precise datarace detection for multithreaded object-oriented programs", "authors": ["Choi", " Lee", " Loginov", " O'Callahan", " Sarkar"]}, {"title": "Reduction in TLA", "authors": ["Cohen"]}, {"title": "Evaluating deadlock detection methods for concurrent software", "authors": ["Corbett"]}, {"title": "Enforcing high-level protocols in low-level software", "authors": ["DeLine"]}, {"title": "Invariant-based specification, synthesis, and verification of synchronization in concurrent programs", "authors": ["Deng", " Dwyer", " Hatcliff"]}, {"title": "Wrestling with rep exposure", "authors": ["Detlefs", " Leino"]}, {"title": "Parallel program correctness through refinement", "authors": ["Doeppner"]}, {"title": "Camelot and Avalon: A Distributed Transaction Facility", "authors": ["Eppinger", " Mummert"]}, {"title": "Verifying commit-atomicity using model-checking", "authors": ["Flanagan"]}, {"title": "Object types against races", "authors": ["Flanagan"]}, {"title": "Types for safe locking", "authors": ["Flanagan"]}, {"title": "Type-based race detection for Java", "authors": ["Flanagan"]}, {"title": "Atomizer: A dynamic atomicity checker for multithreaded programs", "authors": ["Flanagan"]}, {"title": "Type inference against races", "authors": ["Flanagan"]}, {"title": "Automatic synchronization correction", "authors": ["Flanagan"]}, {"title": "Type inference for atomicity", "authors": ["Flanagan", " Freund"]}, {"title": "Exploiting purity for atomicity", "authors": ["Flanagan", " Freund"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "Transactions for software model checking", "authors": ["Flanagan"]}, {"title": "A type and effect system for atomicity", "authors": ["Flanagan"]}, {"title": "Types for atomicity", "authors": ["Flanagan"]}, {"title": "Classes and mixins", "authors": ["Flatt", " Krishnamurthi"]}, {"title": "Checking concise specifications for multithreaded software", "authors": ["Freund"]}, {"title": "Memory consistency models for shared-memory multiprocessors", "authors": ["Gharachorloo"]}, {"title": "Java Concurrency in Practice", "authors": ["Goetz", " Peierls", " Bloch", " Bowbeer", " Holmes"]}, {"title": "The Java Language Specification", "authors": ["Gosling", " Joy"]}, {"title": "Type-safe multithreading in Cyclone", "authors": ["Grossman"]}, {"title": "Type error slicing in implicitly typed higher-order languages", "authors": ["Haack"]}, {"title": "Language support for lightweight transactions", "authors": ["Harris"]}, {"title": "Verifying atomicity specifications for concurrent object-oriented software using model-checking", "authors": ["Hatcliff", " Robby"]}, {"title": "Linearizability: A correctness condition for concurrent objects", "authors": ["Herlihy"]}, {"title": "Inferring locking for atomic sections", "authors": ["Hicks", " Foster"]}, {"title": "Monitors: an operating systems structuring concept", "authors": ["Hoare"]}, {"title": "Towards a theory of parallel programming", "authors": ["Hoare"]}, {"title": "Java Grande benchmark suite", "authors": ["Java Gr"]}, {"title": "Java Developers Kit, version 1", "authors": ["JavaSoft"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Lamport"]}, {"title": "Pretending atomicity", "authors": ["Lamport"]}, {"title": "The util", "authors": ["Lea"]}, {"title": "Reduction: A method of proving properties of parallel programs", "authors": ["Lipton"]}, {"title": "Implementation of Argus", "authors": ["Liskov", " Curtis", " Johnson"]}, {"title": "Process structuring, synchronization, and recovery using atomic actions", "authors": ["Lomet"]}, {"title": "Polymorphic effect systems", "authors": ["Lucassen"]}, {"title": "The Java memory model", "authors": ["Manson", " Pugh"]}, {"title": "Autolocker: synchronization inference for atomic sections", "authors": ["McCloskey", " Zhou", " Gay"]}, {"title": "A Discipline of Multiprogramming: Programming Theory for Distributed Applications", "authors": ["Misra"]}, {"title": "Effective static race detection for Java", "authors": ["Naik", " Aiken"]}, {"title": "Hybrid dynamic data race detection", "authors": ["O'Callahan"]}, {"title": "The Theory of Database Concurrency Control", "authors": ["Papadimitriou"]}, {"title": "Efficient on-the-fly data race detection in multihreaded C++ programs", "authors": ["Pozniansky"]}, {"title": "Context-sensitive correlation analysis for detecting races", "authors": ["Pratikakis", " Foster"]}, {"title": "Summarizing procedures in concurrent programs", "authors": ["Qadeer", " Rajamani"]}, {"title": "AtomCaml: first-class atomicity via rollback", "authors": ["Ringenburg"]}, {"title": "Pointer and escape analysis for multithreaded programs", "authors": ["Salcianu"]}, {"title": "Automated type-based analysis of data races and atomicity", "authors": ["Sasturkar", " Agarwal", " Wang"]}, {"title": "Eraser: A dynamic data race detector for multi-threaded programs", "authors": ["Savage", " Burrows", " Nelson", " Sobalvarro"]}, {"title": "Standard Performance Evaluation Corporation JBB2000 Benchmark", "authors": ["SPEC"]}, {"title": "Warlock: A static data race analysis tool", "authors": ["Sterling"]}, {"title": "Personal communication", "authors": ["Stoller"]}, {"title": "Model-checking multi-threaded distributed Java programs", "authors": ["Stoller"]}, {"title": "Polymorphic type, region and effect inference", "authors": ["Talpin"]}, {"title": "Implementation of the typed call-by-value lambda-calculus using a stack of regions", "authors": ["Tofte"]}, {"title": "Associating synchronization constraints with data in an object-oriented language", "authors": ["Vaziri", " Tip"]}, {"title": "Object race detection", "authors": ["von Praun"]}, {"title": "Static conflict analysis for multi-threaded object-oriented programs", "authors": ["von Praun"]}, {"title": "Finding the source of type errors", "authors": []}, {"title": "Runtime analysis for atomicity", "authors": ["Wang"]}, {"title": "Runtime analysis of atomicity for multithreaded programs", "authors": ["Wang"]}, {"title": "Transactional monitors for concurrent objects", "authors": ["Welc", " Jagannathan"]}, {"title": "Improved type error reporting", "authors": ["Yang", " Michaelson", " Trinder"]}]},
{"title": "Java bytecode verification via static single assignment form", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Java Virtual Machines (JVMs) traditionally perform bytecode verification by way of an iterative dataflow analysis. Bytecode verification is necessary to ensure type safety because temporary variables in the JVM are not statically typed. We present an alternative verification mechanism that transforms JVM bytecode into Static Single Assignment Form (SSA) and thereby propagates definitions directly to uses. Type checking at control flow merge points can then be performed in a single pass.\nOur prototype implementation of the new algorithm is faster than the standard JVM bytecode verifier. It has the additional benefit of generating SSA as a side effect, which may be immediately useful for a subsequent dynamic compilation stage.\n", "author": [{"name": "Andreas Gal", "affiliation": "University of California, Irvine"}, {"name": "Christian W. Probst", "affiliation": "Technical University of Denmark, Kongens Lyngby"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine"}, {"name": "Andreas Gal", "affiliation": "University of California, Irvine"}, {"name": "Christian W. Probst", "affiliation": "Technical University of Denmark, Kongens Lyngby"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "SafeTSA: A type safe and referentially secure mobile-code representation based on static single assignment form", "authors": ["Amme", " Dalton", " von Ronne"]}, {"title": "Introduction to Lattices and Order", "authors": ["Davey"]}, {"title": "Marmot: An optimizing compiler for Java", "authors": ["Fitzgerald", " Knoblock", " Ruf", " Steensgaard"]}, {"title": "The costs and benefits of java bytecode subroutines", "authors": ["Freund"]}, {"title": "A formal specification of the Java bytecode language and bytecode verifier", "authors": ["Freund"]}, {"title": "Specification and verification of Java bytecode subroutines and exceptions", "authors": ["Freund"]}, {"title": "A type system for the Java bytecode language and verifier", "authors": ["Freund"]}, {"title": "Structural encoding of static single assignment form", "authors": ["Gal", " Probst"]}, {"title": "Functional Java Bytecode", "authors": ["League", " Trifonov"]}, {"title": "Java bytecode verification: Algorithms and formalizations", "authors": ["Leroy"]}, {"title": "The Java Virtual Machine Specification", "authors": ["Lindholm"]}, {"title": "Java bytecode verification is not possible (extended abstract)", "authors": []}, {"title": "Java and the Java Virtual Machine: Definition, Verification, Validation", "authors": ["St\u00e4rk", " Schmid"]}, {"title": "A type system for Java bytecode subroutines", "authors": ["Stata"]}]},
{"title": "Remote specialization for efficient embedded operating systems", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Prior to their deployment on an embedded system, operating systems are commonly tailored to reduce code size and improve runtime performance. Program specialization is a promising match for this process: it is predictable and modules, and it allows the reuse of previously implemented specializations. A specialization engine for embedded systems must overcome three main obstacles: (i) Reusing existing compilers for embedded systems, (ii) supporting specialization on a resource-limited system and (iii) coping with dynamic applications by supporting specialization on demand.\nIn this article, we describe a runtime specialization infrastructure that addresses these problems. Our solution proposes: (i) Specialization in two phases of which the former generates specialized C templates and the latter uses a dedicated compiler to generate efficient native code. (ii) A virtualization mechanism that facilitates specialization of code at a remote location. (iii) An API and supporting OS extensions that allow applications to produce, manage and dispose of specialized code.\nWe evaluate our work through two case studies: (i) The TCP/IP implementation of Linux and (ii) The TUX embedded web server. We report appreciable improvements in code size and performance. We also quantify the overhead of specialization and argue that a specialization server can scale to support a sizable workload.\n", "author": [{"name": "Sapan Bhatia", "affiliation": "Princeton University"}, {"name": "Charles Consel", "affiliation": "LaBRI/INRIA"}, {"name": "Calton Pu", "affiliation": "Georgia Institute of Technology"}, {"name": "Sapan Bhatia", "affiliation": "Princeton University"}, {"name": "Charles Consel", "affiliation": "LaBRI/INRIA"}, {"name": "Calton Pu", "affiliation": "Georgia Institute of Technology"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Speeding up dataflow analysis using flow-insensitive pointer analysis", "authors": ["Adams", " Ball", " Das", " Lerner", " Rajamani", " Seigle"]}, {"title": "Extensibility, safety and performance in the SPIN operating system", "authors": ["Bershad", " Savage", " Pardyak", " G\u00fcn Sirer", " Fiuczynski", " Becker", " Chambers"]}, {"title": "Automatic specialization of protocol stacks in OS kernels", "authors": ["Bhatia", " Consel", " Le Meur"]}, {"title": "Remote customization of systems code for embedded devices", "authors": ["Bhatia", " Consel"]}, {"title": "The slab allocator: An object-caching kernel memory allocator", "authors": ["Bonwick"]}, {"title": "A tour of Tempo: A program specializer for the C language", "authors": ["Consel", " Lawall"]}, {"title": "A general approach for run-time specialization and its application to C", "authors": ["Consel"]}, {"title": "Survey of customizability in operating systems research", "authors": ["Denys"]}, {"title": "Exokernel: An operating system architecture for application-level resource management", "authors": ["Engler", " Kaashoek"]}, {"title": "Embedded systems development survey", "authors": ["Evans Data Corporation"]}, {"title": "The Flux OS-Kit: A substrate for kernel and language research", "authors": ["Ford", " Back", " Benson", " Lepreau"]}, {"title": "Netperf: A network performance benchmark", "authors": ["Hewlett-Packard"]}, {"title": "Accurate binding-time analysis for imperative languages: Flow, context, and return sensitivity", "authors": ["Hornof"]}, {"title": "Partial Evaluation and Automatic Program Generation", "authors": ["Jones", " Gomard"]}, {"title": "Capturing OS expertise in a modular type system: the Bossa experience", "authors": ["Lawall", " Muller"]}, {"title": "Specialization scenarios: A pragmatic approach to declaring program specialization", "authors": ["Le Meur", " Lawali"]}, {"title": "Design, implementation, and evaluation of a compilation server", "authors": ["Lee", " Diwan"]}, {"title": "Wind river's bruggeman defines Device Software Optimization (DSO)", "authors": ["Linux Devices Magazine"]}, {"title": "New linksys wireless ap runs 3rd-party embedded linux", "authors": ["Linux Devices Magazine"]}, {"title": "The LXR source-code cross-referencing system for Linux", "authors": []}, {"title": "RFC 2018: TCP selective acknowledgment options", "authors": ["Mathis", " Mahdavi", " Floyd"]}, {"title": "Specialization tools and techniques for systematic optimization of system software", "authors": ["McNamee", " Walpole", " Pu", " Cowan", " Krasic", " Goel", " Wagle", " Consel", " Muller"]}, {"title": "Fast, optimized Sun RPC using automatic program specialization", "authors": ["Muller", " Marlet", " Volanschi", " Consel", " Pu"]}, {"title": "RFC 896: Congestion control in IP/TCP Internetworks", "authors": ["Nagle"]}, {"title": "CIL: Intermediate language and tools for analysis and transformation of C programs", "authors": ["Necula", " McPeak", " Rahul"]}, {"title": "kbuild", "authors": ["Owens"]}, {"title": "Pico freebsd", "authors": []}, {"title": "Optimistic incremental specialization: Streamlining a commercial operating system", "authors": [" Autrey", " Black", " Consel", " Cowan", " Inouye", " Kethana", " Walpole"]}, {"title": "Dealing with disaster: Surviving misbehaved kernel extensions", "authors": ["Seltzer", " Endo", " Small"]}, {"title": "Tinylinux", "authors": []}, {"title": "Kca\u2014dynamically extensible and configurable operating system kernel", "authors": ["Veitch"]}, {"title": "A framework for remote dynamic program optimization", "authors": ["Voss"]}]},
{"title": "Register allocation for software pipelined multidimensional loops", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "This article investigates register allocation for software pipelined multidimensional loops where the execution of successive iterations from an \n-dimensional loop is overlapped. For single loop software pipelining, the lifetimes of a loop variable in successive iterations of the loop form a repetitive pattern. An effective register allocation method is to represent the pattern as a vector of lifetimes (or a vector lifetime using Rau's terminology [Rau 1992]) and map it to rotating registers. Unfortunately, the software pipelined schedule of a multidimensional loop is considerably more complex and so are the vector lifetimes in it.\nIn this article, we develop a way to normalize and represent the vector lifetimes, which captures their complexity, while exposing their regularity that enables a simple solution. The problem is formulated as bin-packing of the multidimensional vector lifetimes on the surface of a space-time cylinder. A metric, called distance, is calculated either conservatively or aggressively to guide the bin-packing process, so that there is no overlapping between any two vector lifetimes, and the register requirement is minimized. This approach subsumes the classical register allocation for software pipelined single loops as a special case. The method has been implemented in the ORC compiler and produced code for the IA-64 architecture. Experimental results show the effectiveness. Several strategies for register allocation are compared and analyzed.\n", "author": [{"name": "Hongbo Rong", "affiliation": "Microsoft Corporation, Redmond, WA"}, {"name": "Alban Douillet", "affiliation": "Hewlett-Packard Co., Palo Alto, CA"}, {"name": "Guang R. Gao", "affiliation": "University of Delaware, Newark, DE"}, {"name": "Hongbo Rong", "affiliation": "Microsoft Corporation, Redmond, WA"}, {"name": "Alban Douillet", "affiliation": "Hewlett-Packard Co., Palo Alto, CA"}, {"name": "Guang R. Gao", "affiliation": "University of Delaware, Newark, DE"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Resource-constrained software pipelining", "authors": ["Aiken", " Nicolau"]}, {"title": "Software pipelining", "authors": ["Allan", " Jones", " Lee"]}, {"title": "Conversion of control dependence to data dependence", "authors": ["Allen", " Kennedy", " Porterfield"]}, {"title": "An overview of the pl", "authors": ["Ausl"]}, {"title": "Register allocation via hierarchical graph coloring", "authors": ["Callahan"]}, {"title": "Improving software pipelining with unroll-and-jam", "authors": ["Carr", " Ding"]}, {"title": "Register allocation and spilling via graph coloring", "authors": ["Chaitin"]}, {"title": "Code generation of nested loops for dsp processors with heterogeneous registers and structural pipelining", "authors": ["Cheng"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Cytron", " Ferrante", " Rosen", " Wegman"]}, {"title": "Constructive methods for scheduling uniform loop nests", "authors": ["Darte"]}, {"title": "Compiling for the cydra 5", "authors": ["Dehnert"]}, {"title": "Register pressure in software-pipelined loop nests: Fast computation and impact on architecture design", "authors": ["Douillet"]}, {"title": "Software-pipelining on multi-core architectures", "authors": ["Douillet"]}, {"title": "A new compilation technique for parallelizing loops with unpredictable branches on a vliw architecture", "authors": ["Ebcioglu"]}, {"title": "Software pipelining for nested loops", "authors": ["Gao", " Ning"]}, {"title": "A register allocation framework based on hierarchical cyclic interval graphs", "authors": ["Hendren", " Gao", " Altman"]}, {"title": "Lifetime-sensitive modulo scheduling", "authors": ["Huff"]}, {"title": "Intel IA-64 Architecture Software Developer's Manual", "authors": ["Intel"]}, {"title": "Software pipelining: An effective scheduling technique for VLIW machines", "authors": ["Lam"]}, {"title": "The parallel execution of DO loops", "authors": ["Lamport"]}, {"title": "The Traveling Salesman Problem: A Guided Tour of Combinatorial Optimization", "authors": ["Lawler", " Lenstra", " Khan"]}, {"title": "Parallelizing nonnumerical code with selective scheduling and software pipelining", "authors": ["Moon"]}, {"title": "Software pipelining of nested loops", "authors": ["Muthukumar"]}, {"title": "Optimal software pipelining of nested loops", "authors": ["Ramanujam"]}, {"title": "Iterative modulo scheduling: An algorithm for software pipelining loops", "authors": ["Rau"]}, {"title": "Instruction-level parallel processing: History, overview and perspective", "authors": ["Rau"]}, {"title": "Register allocation for modulo scheduled loops: Strategies, algorithms and heuristics", "authors": ["Rau", " Lee", " Tirumalai"]}, {"title": "Code generation for single-dimension software pipelining of multi-dimensional loops", "authors": ["Rong", " Douillet", " Govindarajan"]}, {"title": "Advances in software piplining", "authors": ["Rong"]}, {"title": "Single-dimension software pipelining for multi-dimensional loops", "authors": ["Rong", " Tang", " Govindarajan", " Douillet"]}, {"title": "Single-dimension software pipelining for multidimensional loops", "authors": ["Rong", " Tang", " Govindarajan", " Douillet"]}, {"title": "FPGA based acceleration of the linpack benchmark: A high level code transformation approach", "authors": ["Turkington", " Masselos", " Constantinides"]}, {"title": "Pipelining-dovetailing: A transformation to enhance software pipelining for nested loops", "authors": ["Wang"]}]},
{"title": "Local reasoning about a copying garbage collector", "time": "August 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We present a programming language, model, and logic appropriate for implementing and reasoning about a memory management system. We state semantically what is meant by correctness of a copying garbage collector, and employ a variant of the novel separation logics to formally specify partial correctness of Cheney's copying garbage collector in our program logic. Finally, we prove that our implementation of Cheney's algorithm meets its specification using the logic we have given and auxiliary variables.\n", "author": [{"name": "Noah Torp-Smith", "affiliation": "IT University of Copenhagen"}, {"name": "Lars Birkedal", "affiliation": "IT University of Copenhagen"}, {"name": "John C. Reynolds", "affiliation": "Carnegie Mellon University"}, {"name": "Noah Torp-Smith", "affiliation": "IT University of Copenhagen"}, {"name": "Lars Birkedal", "affiliation": "IT University of Copenhagen"}, {"name": "John C. Reynolds", "affiliation": "Carnegie Mellon University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "21", "references": [{"title": "Compiler-directed type reconstruction for polymorphic languages", "authors": ["Aditya"]}, {"title": "Garbage collection for strongly-typed languages using run-time type reconstruction", "authors": ["Aditya", " Flood"]}, {"title": "Reasoning about hierarchical storage", "authors": ["Ahmed", " Jia"]}, {"title": "Foundational proof carrying code", "authors": ["Appel"]}, {"title": "Hash-consing garbage collection", "authors": ["Appel"]}, {"title": "Algorithms for on-the-fly garbage collection", "authors": ["Ben-Ari"]}, {"title": "Symbolic execution with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": "BI-hyperdoctrines and higher order separation logic", "authors": ["Biering", " Birkedal"]}, {"title": "Local reasoning about a copying garbage collector", "authors": ["Birkedal", " Torp-Smith"]}, {"title": "Semantics of separation-logic typing and higher-order frame rules", "authors": ["Birkedal", " Torp-Smith"]}, {"title": "Proving pointer programs in Hoare logic", "authors": ["Bornat"]}, {"title": "Correctness of copydag via local reasoning", "authors": ["Bornat"]}, {"title": "Local reasoning, separation and aliasing", "authors": ["Bornat", " Calcagno"]}, {"title": "B vs Coq to prove a garbage collector", "authors": ["Burdy"]}, {"title": "Semantic analysis of pointer aliasing, allocation and disposal in Hoare logic", "authors": ["Calcagno", " Ishtiaq"]}, {"title": "Program logic and equivalence in the presence of garbage collection", "authors": ["Calcagno", " O'Hearn"]}, {"title": "A nonrecursive list compacting algorithm", "authors": ["Cheney"]}, {"title": "C", "authors": ["Coupet-Grimal"]}, {"title": "Typed memory management in a calculus of capabilities", "authors": ["Crary", " Walker"]}, {"title": "On-the-fly garbage collection: an exercise in cooperation", "authors": ["Dijkstra", " Lamport", " Martin", " Scholten"]}, {"title": "Implementation and performance evaluation of a safe runtime system in Cyclone", "authors": ["Fluet"]}, {"title": "Monocopy and associative algorithms in extended lisp", "authors": ["Goto"]}, {"title": "Assignment and procedure call proof rules", "authors": ["Gries"]}, {"title": "VLISP: A verified implementation of scheme", "authors": ["Guttmann", " Ramsdell"]}, {"title": "A guide to VLISP, a verified programming language implementation", "authors": ["Guttmann", " Monk", " Ramsdell", " Farmer"]}, {"title": "Combining region inference and garbage collection", "authors": ["Hallenberg", " Elsman"]}, {"title": "Mechanical verification of a garbage collector", "authors": ["Havelund"]}, {"title": "Low-level linear memory management", "authors": ["Hawblitzel", " Wei", " Huang", " Krupski"]}, {"title": "An axiomatic approach to computer programming", "authors": ["Hoare"]}, {"title": "Verifying a garbage collection algorithm", "authors": ["Jackson"]}, {"title": "Cyclone: A safe dialect of C", "authors": ["Jim", " Morrisett", " Grossman", " Hicks", " Cheney"]}, {"title": "Proving pointer programs in higher-order logic", "authors": ["Mehta"]}, {"title": "Typed regions", "authors": ["Monnier"]}, {"title": "Abstract models of memory management", "authors": ["Morrisett", " Felleisen"]}, {"title": "From system F to typed assembly language", "authors": ["Morrisett", " Walker", " Crary"]}, {"title": "Proof-carrying code", "authors": ["Necula"]}, {"title": "Safe kernel extensions without run-time checking", "authors": ["Necula"]}, {"title": "Resources, concurrency and local reasoning", "authors": ["O'Hearn"]}, {"title": "Local reasoning about programs that alter data structures", "authors": ["O'Hearn", " Reynolds"]}, {"title": "An axiomatic proof technique for parallel programs", "authors": ["Owicki"]}, {"title": "A type theory for memory allocation and data layout", "authors": ["Petersen", " Harper", " Crary"]}, {"title": "An incremental garbage collection algorithm for multimutator systems", "authors": ["Pixley"]}, {"title": "The Semantics and Proof Theory of the Logic of Bunched Implications", "authors": ["Pym"]}, {"title": "The Craft of Programming", "authors": ["Reynolds"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "A mechanically verified incremental garbage collector", "authors": ["Russinoff"]}, {"title": "Alias types", "authors": ["Smith", " Walker"]}, {"title": "Mutatis mutandis: Safe and predictable dynamic software updating", "authors": ["Stoyle", " Hicks", " Bierman", " Sewell"]}, {"title": "The VLISP byte-code interpreter", "authors": ["Swarup", " Farmer", " Guttmann", " Monk"]}, {"title": "A region inference algorithm", "authors": ["Tofte"]}, {"title": "A retrospective on region-based memory management", "authors": ["Tofte", " Birkedal", " Elsman"]}, {"title": "Implementation of the call-by-value lambda-calculus using a stack of regions", "authors": ["Tofte"]}, {"title": "Analysis of an algorithm for real time garbage collection", "authors": ["Wadler"]}, {"title": "Type preserving garbage collectors", "authors": ["Wang"]}, {"title": "Towards mechanized program verification with separation logic", "authors": ["Weber"]}, {"title": "Local reasoning for stateful programs", "authors": ["Yang"]}]},
{"title": "A semantics-based approach to malware detection", "time": "September 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Malware detection is a crucial aspect of software security. Current malware detectors work by checking for \n, which attempt to capture the syntactic characteristics of the machine-level byte sequence of the malware. This reliance on a syntactic approach makes current detectors vulnerable to code obfuscations, increasingly used by malware writers, that alter the syntactic properties of the malware byte sequence without significantly affecting their execution behavior.\nThis paper takes the position that the key to malware identification lies in their semantics. It proposes a semantics-based framework for reasoning about malware detectors and proving properties such as soundness and completeness of these detectors. Our approach uses a trace semantics to characterize the behavior of malware as well as that of the program being checked for infection, and uses abstract interpretation to \u201chide\u201d irrelevant aspects of these behaviors. As a concrete application of our approach, we show that (1) standard signature matching detection schemes are generally sound but not complete, (2) the semantics-aware malware detector proposed by Christodorescu et al. is complete with respect to a number of common obfuscations used by malware writers and (3) the malware detection scheme proposed by Kinder et al. and based on standard model-checking techniques is sound in general and complete on some, but not all, obfuscations handled by the semantics-aware malware detector.\n", "author": [{"name": "Mila Dalla Preda", "affiliation": "University of Verona"}, {"name": "Mihai Christodorescu", "affiliation": "University of Wisconsin, Madison"}, {"name": "Somesh Jha", "affiliation": "University of Wisconsin, Madison"}, {"name": "Saumya Debray", "affiliation": "University of Arizona, Tucson"}, {"name": "Mila Dalla Preda", "affiliation": "University of Verona"}, {"name": "Mihai Christodorescu", "affiliation": "University of Wisconsin, Madison"}, {"name": "Somesh Jha", "affiliation": "University of Wisconsin, Madison"}, {"name": "Saumya Debray", "affiliation": "University of Arizona, Tucson"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "46", "references": [{"title": "An abstract theory of computer viruses", "authors": ["Adleman"]}, {"title": "On the (im)possibility of obfuscating programs", "authors": ["Barak", " Goldreich", " Impagliazzo", " Rudich", " Sahai", " Vadhan"]}, {"title": "Static detection of malicious code in executable programs", "authors": ["Bergeron", " Debbabi", " Desharnais", " Erhioui", " Lavoie"]}, {"title": "Model checking of worm quarantine and counter-quarantine under a group defense", "authors": ["Briesemeister", " Porras"]}, {"title": "An undetectable computer virus", "authors": ["Chess"]}, {"title": "An approach to the obfuscation of control-flow of sequential computer programs", "authors": ["Chow", " Gu", " Johnson"]}, {"title": "Static analysis of executables to detect malicious patterns", "authors": ["Christodorescu"]}, {"title": "Mining specifications of malicious behavior", "authors": ["Christodorescu", " Jha"]}, {"title": "Semantics-aware malware detection", "authors": ["Christodorescu", " Jha", " Seshia", " Song"]}, {"title": "Malware normalization", "authors": ["Christodorescu", " Kinder", " Jha", " Katzenbeisser"]}, {"title": "Model Checking", "authors": [" Grumberg"]}, {"title": "Computer viruses", "authors": ["Cohen"]}, {"title": "Computational aspects of computer viruses", "authors": ["Cohen"]}, {"title": "Computer viruses: Theory and experiments", "authors": ["Cohen"]}, {"title": "A taxonomy of obfuscating transformations", "authors": ["Collberg", " Thomborson"]}, {"title": "Manufacturing cheap, resilient, and stealthy opaque constructs", "authors": ["Collberg", " Thomborson"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction of approximation of fixed points", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Abstract interpretation frameworks", "authors": ["Cousot"]}, {"title": "Systematic design of program transformation frameworks by abstract interpretation", "authors": ["Cousot"]}, {"title": "A semantics-based approach to malware detection", "authors": ["Dalla Preda", " Christodorescu", " Jha"]}, {"title": "Control code obfuscation by abstract interpretation", "authors": ["Dalla Preda"]}, {"title": "Semantics-based code obfuscation by abstract interpretation", "authors": ["Dalla Preda"]}, {"title": "Polymorphic shellcode engine using spectrum analysis", "authors": ["Detristan", " Ulenspiegel", " Malcom"]}, {"title": "On the impossibility of obfuscation with auxiliary input", "authors": ["Goldwasser"]}, {"title": "An approach for detecting self-propagating email using anomaly detection", "authors": ["Gupta"]}, {"title": "IA-32 Intel Architecture Software Developer's Manual", "authors": ["Intel Corporation"]}, {"title": "Dealing with metamorphism", "authors": ["Jordan"]}, {"title": "Detecting malicious code by model checking", "authors": ["Kinder", " Katzenbeisser", " Schallhart"]}, {"title": "Learning to detect malicious executables in the wild", "authors": ["Kolter"]}, {"title": "Imposing Order on Program Statements to Assist Anti-Virus Scanners", "authors": ["Lakhotia"]}, {"title": "Challenges in getting \u201cformal\u201d with viruses", "authors": ["Lakhotia"]}, {"title": "A data mining and CIDF based approach for detecting novel and distributed intrusions", "authors": ["Lee", " Nimbalkar", " Yee", " Patil", " Desai", " Tran"]}, {"title": "Data mining approaches for intrusion detection", "authors": ["Lee"]}, {"title": "A data mining framework for building intrusion detection models", "authors": ["Lee", " Stolfo"]}, {"title": "Fileprints: Identifying file types by n-gram analysis", "authors": [" Wang", " Stolfo"]}, {"title": "Obfuscation of executable code to improve resistance to static disassembly", "authors": ["Linn"]}, {"title": "Mcf: A malicious code filter", "authors": [" Levitt"]}, {"title": "Intrusion and intrusion detection", "authors": ["McHugh"]}, {"title": "Processing virus collections", "authors": ["Morley"]}, {"title": "Computer virus-antivirus coevolution", "authors": ["Nachenberg"]}, {"title": "Polymorphism", "authors": ["Rajaat"]}, {"title": "Static verification of worm and virus behaviour in binary executables using model checking", "authors": ["Singh"]}, {"title": "Symantec Internet Security Threat Report: Trends for January 06--June 06", "authors": ["Symantec Corporation"]}, {"title": "The Art of Computer Virus Research and Defense", "authors": ["Sz\u00f6r"]}, {"title": "Hunting for metamorphic", "authors": ["Sz\u00f6r"]}, {"title": "Normalizing Metamorphic Malware Using Term Rewriting", "authors": ["Walenstein", " Mathur", " Chouchane", " Lakhotia"]}, {"title": "On obfuscating point functions", "authors": ["Wee"]}, {"title": "Automated reverse engineering: Mistfall engine", "authors": ["zombie"]}, {"title": "Real Permutating{sic} Engine", "authors": ["zombie"]}]},
{"title": "Nominal logic programming", "time": "September 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Nominal logic is an extension of first-order logic which provides a simple foundation for formalizing and reasoning about abstract syntax modulo consistent renaming of bound names (that is, \u03b1-equivalence). This article investigates logic programming based on nominal logic. We describe some typical nominal logic programs, and develop the model-theoretic, proof-theoretic, and operational semantics of such programs. Besides being of interest for ensuring the correct behavior of implementations, these results provide a rigorous foundation for techniques for analysis and reasoning about nominal logic programs, as we illustrate via examples.\n", "author": [{"name": "James Cheney", "affiliation": "University of Edinburgh, Edinburgh, Scotland"}, {"name": "Christian Urban", "affiliation": "Technische Universit\u00e4t, M\u00fcnchen"}, {"name": "James Cheney", "affiliation": "University of Edinburgh, Edinburgh, Scotland"}, {"name": "Christian Urban", "affiliation": "Technische Universit\u00e4t, M\u00fcnchen"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "25", "references": [{"title": "Explicit substitutions", "authors": ["Abadi", " Cardelli", " Curien"]}, {"title": "Mechanized metatheory for the masses: The PoplMark Challenge", "authors": ["Aydemir", " Bohannon", " Fairbairn", " Foster", " Pierce", " Sewell", " Vytiniotis", " Washburn", " Weirich"]}, {"title": "The Lambda Calculus", "authors": ["Barendregt"]}, {"title": "Proof-theoretic foundation of compilation in logic programming", "authors": ["Cervesato"]}, {"title": "A linear logical framework", "authors": ["Cervesato"]}, {"title": "The complexity of equivariant unification", "authors": ["Cheney"]}, {"title": "Nominal logic programming", "authors": ["Cheney"]}, {"title": "Equivariant unification", "authors": ["Cheney"]}, {"title": "Relating nominal and higher-order pattern unification", "authors": ["Cheney"]}, {"title": "Scrap your nameplate (functional pearl)", "authors": ["Cheney"]}, {"title": "A simpler proof theory for nominal logic", "authors": ["Cheney"]}, {"title": "Completeness and Herbrand theorems for nominal logic", "authors": ["Cheney"]}, {"title": "The semantics of nominal logic programs", "authors": ["Cheney"]}, {"title": "Alpha-Prolog: A logic programming language with names, binding and alpha-equivalence", "authors": ["Cheney"]}, {"title": "Higher level meta programming in Qu-Prolog 3", "authors": ["Cheng", " Robinson"]}, {"title": "A formulation of the simple theory of types", "authors": ["Church"]}, {"title": "Multi-threading and message communication in Qu-Prolog", "authors": ["Clark", " Robinson"]}, {"title": "Programming in Prolog, 5th ed", "authors": ["Clocksin"]}, {"title": "Constraint logic programming in the sequent calculus", "authors": ["Darlington"]}, {"title": "Introduction to Lattices and Order", "authors": ["Davey"]}, {"title": "Implementing tactics and tacticals in a higher-order logic programming language", "authors": ["Felty"]}, {"title": "Abstract syntax and variable binding", "authors": ["Fiore", " Plotkin"]}, {"title": "A sequent calculus for nominal logic", "authors": ["Gabbay"]}, {"title": "A new approach to abstract syntax with variable binding", "authors": ["Gabbay"]}, {"title": "Linear logic", "authors": ["Girard"]}, {"title": "A logic programming language based on binding algebras", "authors": ["Hamana"]}, {"title": "Uses of higher-order unification for implementing program transformers", "authors": ["Hannan"]}, {"title": "Horn clause programs with polymorphic types: Semantics and resolution", "authors": ["Hanus"]}, {"title": "The integration of functions into logic programming: From theory to practice", "authors": ["Hanus"]}, {"title": "Dynamic Logic", "authors": ["Harel", " Kozen"]}, {"title": "A framework for defining logics", "authors": ["Harper", " Honsell"]}, {"title": "Semantical analysis of higher-order abstract syntax", "authors": ["Hofmann"]}, {"title": "The semantics of constraint logic programs", "authors": ["Jaffar", " Maher", " Marriott"]}, {"title": "Constraint logic programming with hereditary Harrop formulas", "authors": ["Leach", " Nieva"]}, {"title": "Foundations of Logic Programming", "authors": ["Lloyd"]}, {"title": "Hoare's logic in the LF", "authors": ["Mason"]}, {"title": "A logical analysis of modules in logic programming", "authors": ["Miller"]}, {"title": "An extension to ML to handle bound variables in data structures", "authors": ["Miller"]}, {"title": "A logic programming language with lambda-abstraction, function variables, and simple unification", "authors": ["Miller"]}, {"title": "A proposal for modules in Lambda-Prolog", "authors": ["Miller"]}, {"title": "A logic programming approach to manipulating formulas and programs", "authors": ["Miller"]}, {"title": "Uniform proofs as a foundation for logic programming", "authors": ["Miller", " Nadathur", " Pfenning"]}, {"title": "A proof theory for generic judgments", "authors": ["Miller"]}, {"title": "A theory of type polymorphism in programming", "authors": ["Milner"]}, {"title": "A calculus of mobile processes, I", "authors": ["Milner", " Parrow"]}, {"title": "Concepts in Programming Languages", "authors": ["Mitchell"]}, {"title": "A polymorphic type system for Prolog", "authors": ["Mycroft"]}, {"title": "Higher-order logic programming", "authors": ["Nadathur"]}, {"title": "System description: Teyjus\u2014a compiler and abstract machine based implementation of Lambda-Prolog", "authors": ["Nadathur"]}, {"title": "Optimizing the runtime processing of types in polymorphic logic programming languages", "authors": ["Nadathur"]}, {"title": "The Qu-Prolog unification algorithm: formalisation and correctness", "authors": ["Nickolas"]}, {"title": "The logic of bunched implications", "authors": ["O'Hearn"]}, {"title": "DALI: An untyped CBV operational semantics and equational theory of datatypes with binders (technical development)", "authors": ["Pasalic", " Sheard"]}, {"title": "Logic programming in the LF logical framework", "authors": ["Pfenning"]}, {"title": "Logical frameworks", "authors": ["Pfenning"]}, {"title": "Higher-order abstract syntax", "authors": ["Pfenning"]}, {"title": "System description: Twelf\u2014A meta-logical framework for deductive systems", "authors": ["Pfenning"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Nominal logic, a first order theory of names and binding", "authors": ["Pitts"]}, {"title": "Alpha-structural recursion and induction", "authors": ["Pitts"]}, {"title": "A metalanguage for programming with bound names modulo renaming", "authors": ["Pitts"]}, {"title": "Generative unbinding of names", "authors": ["Pitts"]}, {"title": "An overview of C&alpha;ml", "authors": ["Pottier"]}, {"title": "Static name control for FreshML", "authors": ["Pottier"]}, {"title": "Separation Logic: A Logic for Shared Mutable Data Structures", "authors": ["Reynolds"]}, {"title": "The pi-Calculus: A Theory of Mobile Processes", "authors": ["Sangiorgi"]}, {"title": "Modelling generic judgements", "authors": ["Sch\u00f6pp"]}, {"title": "On a monadic semantics for freshness", "authors": ["Shinwell"]}, {"title": "FreshML: Programmming with binders made simple", "authors": ["Shinwell", " Pitts"]}, {"title": "Qu-Prolog: An extended Prolog for meta level programming", "authors": ["Staples", " Robinson", " Paterson", " Hagen", " Craddock"]}, {"title": "The Art of Prolog: Advanced Programming Techniques", "authors": ["Sterling"]}, {"title": "A logic for reasoning about generic judgments", "authors": ["Tiu"]}, {"title": "Avoiding equivariace in Alpha-Prolog", "authors": ["Urban"]}, {"title": "Nominal unification", "authors": ["Urban", " Pitts"]}, {"title": "Nominal techniques in Isabelle/HOL", "authors": ["Urban"]}, {"title": "The semantics of predicate logic as a programming language", "authors": ["van Emden"]}, {"title": "A concurrent logical framework: The propositional fragment", "authors": ["Watkins", " Cervesato", " Pfenning"]}]},
{"title": "A capability calculus for concurrency and determinism", "time": "September 2008", "keyword": ["Programming Languages and Systems"], "abstract": "This article presents a static system for checking determinism (technically, partial confluence) of communicating concurrent processes. Our approach automatically detects partial confluence in programs communicating via a mix of different kinds of communication methods: rendezvous channels, buffered channels, broadcast channels, and reference cells. Our system reduces the partial confluence checking problem in polynomial time (in the size of the program) to the problem of solving a system of rational linear inequalities, and is thus efficient.\n", "author": [{"name": "Tachio Terauchi", "affiliation": "Tohoku University"}, {"name": "Alex Aiken", "affiliation": "Stanford University"}, {"name": "Tachio Terauchi", "affiliation": "Tohoku University"}, {"name": "Alex Aiken", "affiliation": "Stanford University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "24", "references": [{"title": "Barrier inference", "authors": ["Aiken"]}, {"title": "State space reduction by proving confluence", "authors": ["Blom"]}, {"title": "Asynchrony and the pi-calculus", "authors": ["Boudol"]}, {"title": "Checking interference with fractional permissions", "authors": ["Boyl"]}, {"title": "Fleetzero: An asynchronous switching experiment", "authors": ["Coates", " Lexau", " Jones", " Fairbanks"]}, {"title": "Typed memory management in a calculus of capabilities", "authors": ["Crary", " Walker"]}, {"title": "Enforcing High-Level Protocols in Low-Level Software", "authors": ["DeLine"]}, {"title": "Shim: a deterministic model for heterogeneous embedded systems", "authors": ["Edwards"]}, {"title": "Flow-sensitive type qualifiers", "authors": ["Foster", " Terauchi"]}, {"title": "Typing correspondence assertions for communication protocols", "authors": ["Gordon"]}, {"title": "Types and Effects for Asymmetric Cryptographic Protocols", "authors": ["Gordon"]}, {"title": "State space reduction using partial tau-confluence", "authors": ["Groote"]}, {"title": "Operational determinism and fast algorithms", "authors": ["Hansen"]}, {"title": "On asynchronous communication semantics", "authors": ["Honda"]}, {"title": "A generic type system for the pi-calculus", "authors": ["Igarashi"]}, {"title": "The semantics of a simple language for parallel programming In Information Processing", "authors": ["Kahn"]}, {"title": "Personal communication", "authors": ["Kobayashi"]}, {"title": "Static analysis of communication for asynchronous concurrent programming languages", "authors": ["Kobayashi", " Nakade"]}, {"title": "Linearity and the pi-calculus", "authors": ["Kobayashi", " Pierce"]}, {"title": "Analysing input/output-capabilities of mobile processes with a generic type system", "authors": ["K\u00f6nig"]}, {"title": "The problem with threads", "authors": ["Lee"]}, {"title": "CCCD implementation", "authors": ["Megacz"]}, {"title": "Typing confluence", "authors": ["Nestmann"]}, {"title": "Alias Types", "authors": ["Smith", " Walker"]}, {"title": "Software and the concurrency revolution", "authors": ["Sutter"]}, {"title": "Witnessing side-effects", "authors": ["Terauchi"]}, {"title": "A capability calculus for concurrency and determinism", "authors": ["Terauchi"]}, {"title": "Alias types for recursive data structures", "authors": ["Walker"]}, {"title": "Compositional state space reduction using untangled actions", "authors": ["Wang"]}, {"title": "Strong normalisation in the pi-calculus", "authors": ["Yoshida", " Berger"]}]},
{"title": "Two-dimensional bidirectional object layout", "time": "September 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Object layout schemes used in C++ and other languages rely on (sometimes numerous) compiler generated fields. We describe a language-independent object layout scheme, which is space optimal, that is, objects are contiguous, and contain \n other than a single type identifier. As in C++ and other multiple inheritance languages such as CECIL and DYLAN, the new scheme sometimes requires extra levels of indirection to access some of the fields. Using a data set of 28 hierarchies, totaling almost 50,000 types, we show that this scheme improves field access efficiency over standard implementations, and competes favorably with (the non-space-optimal) highly optimized C++ specific implementations. The benchmark includes an analytical model for computing the frequency of indirections in a sequence of field access operations. Our layout scheme relies on whole-program analysis, which requires about 10 microseconds per type on a contemporary architecture (Pentium III, 900Mhz, 256MB machine), even in very large hierarchies. We also present a layout scheme for separate compilation using the user-annotation of \n that is used in C++.\n", "author": [{"name": "Joseph (Yossi) Gil", "affiliation": "Technion\u2014Israel Institute of Technology"}, {"name": "William Pugh", "affiliation": "Dept. of Computer Science, University of Maryland, College Park"}, {"name": "Grant E. Weddell", "affiliation": "University of Waterloo"}, {"name": "Yoav Zibin", "affiliation": "Technion\u2014Israel Institute of Technology"}, {"name": "Joseph (Yossi) Gil", "affiliation": "Technion\u2014Israel Institute of Technology"}, {"name": "William Pugh", "affiliation": "Dept. of Computer Science, University of Maryland, College Park"}, {"name": "Grant E. Weddell", "affiliation": "University of Waterloo"}, {"name": "Yoav Zibin", "affiliation": "Technion\u2014Israel Institute of Technology"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "The Java Programming Language", "authors": ["Arnold"]}, {"title": "Multiple inheritance in Smalltalk80", "authors": ["Borning"]}, {"title": "Is multiple inheritance essential to OOP&quest; Panel discussion at the ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'93)", "authors": ["Cargill", " Cox", " Cook", " Loomis"]}, {"title": "The Cecil language, specification and rationale", "authors": ["Chambers"]}, {"title": "A fast method dispatcher for compiled languages with multiple inheritance", "authors": ["Dixon", " McKee", " Vaughan"]}, {"title": "Empirical study of object-layout strategies and optimization techniques", "authors": ["Eckel"]}, {"title": "Space- and time-efficient memory layout for multiple inheritance", "authors": ["Gil"]}, {"title": "Smalltalk-80: The Interactive Programming Environment", "authors": ["Goldberg"]}, {"title": "Inside The C++ Object Model 2nd ed", "authors": ["Lippman"]}, {"title": "Who needs need multiple inheritance", "authors": ["Magnussun", " Meyer", " "]}, {"title": "Object-oriented programming with flavors", "authors": ["Moon"]}, {"title": "Bidirectional object layout for separate compilation", "authors": ["Myers"]}, {"title": "Optimizing Method Search with Lookup Caches and Incremental Coloring", "authors": ["Pascal"]}, {"title": "Two-directional record layout for multiple inheritance", "authors": ["Pugh"]}, {"title": "On object layout for multiple inheritance", "authors": ["Pugh"]}, {"title": "The Dylan Reference Manual: The Definitive Guide to the New Object-Oriented Dynamic Language", "authors": ["Shalit"]}, {"title": "The Design and Evolution of C++", "authors": ["Stroustrup"]}, {"title": "The C++ Programming Language 3rd ed", "authors": ["Stroustrup"]}, {"title": "Quantifying and evaluating the space overhead for alternative C++ memory layouts", "authors": ["Sweeney"]}, {"title": "Combinatorics and Partially Ordered Sets: Dimension Theory", "authors": ["Trotter"]}, {"title": "Efficient dynamic dispatch without virtual function tables: The SmallEiffel compiler", "authors": ["Zendra", " Colnet"]}, {"title": "Efficient subtyping tests with PQ-encoding", "authors": ["Zibin"]}, {"title": "Fast algorithm for creating space efficient dispatching tables with application to multi-dispatching", "authors": ["Zibin"]}, {"title": "Incremental algorithms for dispatching in dynamically typed languages", "authors": ["Zibin"]}]},
{"title": "A type system equivalent to a model checker", "time": "September 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Type systems and model checking are two prevalent approaches to program verification. A prominent difference between them is that type systems are typically defined in a syntactic and modular style whereas model checking is usually performed in a semantic and whole-program style. This difference between the two approaches makes them complementary to each other: type systems are good at explaining why a program was accepted while model checkers are good at explaining why a program was rejected.\nWe present a type system that is equivalent to a model checker for verifying temporal safety properties of imperative programs. The model checker is natural and may be instantiated with any finite-state abstraction scheme such as predicate abstraction. The type system, which is also parametric, type checks exactly those programs that are accepted by the model checker. It uses a variant of function types to capture flow sensitivity and intersection and union types to capture context sensitivity. Our result sheds light on the relationship between type systems and model checking, provides a methodology for studying their relative expressiveness, is a step towards sharing results between the two approaches, and motivates synergistic program analyses involving interplay between them.\n", "author": [{"name": "Mayur Naik", "affiliation": "Intel Research, Berkeley, CA"}, {"name": "Jens Palsberg", "affiliation": "UCLA, Los Angeles, CA"}, {"name": "Mayur Naik", "affiliation": "Intel Research, Berkeley, CA"}, {"name": "Jens Palsberg", "affiliation": "UCLA, Los Angeles, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "13", "references": [{"title": "Subtyping recursive types", "authors": ["Amadio"]}, {"title": "Faithful translations between polyvariant flows and polymorphic types", "authors": ["Amtoft"]}, {"title": "The SLAM project: Debugging system software via static analysis", "authors": ["Ball"]}, {"title": "A modular, polyvariant and type-based closure analysis", "authors": ["Banerjee"]}, {"title": "Explaining type errors in polymorphic languages", "authors": ["Beaven"]}, {"title": "Deadline analysis of interrupt-driven software", "authors": ["Brylow"]}, {"title": "Modular verification of software components in C", "authors": ["Chaki", " Clarke", " Groce", " Jha"]}, {"title": "Types as models: Model checking message-passing programs", "authors": ["Chaki", " Rajamani"]}, {"title": "Stack size analysis of interrupt driven software", "authors": ["Chatterjee", " Ma", " Majumdar", " Zhao", " Henzinger"]}, {"title": "Compositional explanation of types and algorithmic debugging of type errors", "authors": ["Chitil"]}, {"title": "Types as abstract interpretations", "authors": ["Cousot"]}, {"title": "Temporal abstract interpretation", "authors": ["Cousot"]}, {"title": "A synergy between model-checking and type inference for the verification of value-passing higher-order processes", "authors": ["Debbabi", " Benzakour"]}, {"title": "Enforcing high-level protocols in low-level software", "authors": ["DeLine"]}, {"title": "Explaining type inference", "authors": ["Duggan"]}, {"title": "Type inference against races", "authors": ["Flanagan"]}, {"title": "Type inference for atomicity", "authors": ["Flanagan", " Freund"]}, {"title": "Flow-sensitive type qualifiers", "authors": ["Foster", " Terauchi"]}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "Type error slicing in implicitly typed higher-order languages", "authors": ["Haack"]}, {"title": "Control-flow analysis and type systems", "authors": ["Heintze"]}, {"title": "Temporal-safety proofs for systems code", "authors": ["Henzinger", " Jhala", " Majumdar", " Necula", " Sutre"]}, {"title": "Software verification with Blast", "authors": ["Henzinger", " Jhala", " Majumdar"]}, {"title": "Resource usage analysis", "authors": ["Igarashi"]}, {"title": "A maximium flow approach to anomaly isolation in unification-based incremental type inference", "authors": ["Johnson"]}, {"title": "Searching for type-error messages", "authors": ["Lerner", " Flower", " Grossman"]}, {"title": "Bounding the stack size of interrupt-driven programs", "authors": []}, {"title": "An effective theory of type refinements", "authors": [" Walker"]}, {"title": "A theory of type polymorphism in programming", "authors": ["Milner"]}, {"title": "Exact flow analysis", "authors": ["Mossin"]}, {"title": "A type system equivalent to a model checker", "authors": ["Naik"]}, {"title": "Certifying model checkers", "authors": ["Namjoshi"]}, {"title": "Lifting temporal proofs through abstractions", "authors": ["Namjoshi"]}, {"title": "Equality-based flow analysis versus recursive types", "authors": ["Palsberg"]}, {"title": "A typed interrupt calculus", "authors": ["Palsberg"]}, {"title": "A type system equivalent to flow analysis", "authors": ["Palsberg"]}, {"title": "From polyvariant flow information to intersection and union types", "authors": ["Palsberg"]}, {"title": "Constrained types and their expressiveness", "authors": ["Palsberg"]}, {"title": "From falsification to verification", "authors": ["Peled", " Pnueli"]}, {"title": "From model checking to a temporal proof", "authors": ["Peled"]}, {"title": "Program analysis as model checking of abstract interpretations", "authors": ["Schmidt"]}, {"title": "Data flow analysis is model checking of abstract interpretations", "authors": ["Schmidt"]}, {"title": "Data flow analysis as model checking", "authors": ["Steffen"]}, {"title": "Evidence-based model checking", "authors": ["Tan"]}, {"title": "A slicing-based approach for locating type errors", "authors": ["Tip"]}, {"title": "Alias types for recursive data structures", "authors": ["Walker"]}, {"title": "Finding the source of type errors", "authors": []}, {"title": "Imperative programming with dependent types", "authors": []}]},
{"title": "Verifying policy-based web services security", "time": "October 2008", "keyword": ["Programming Languages and Systems"], "abstract": "WS-SecurityPolicy is a declarative language for configuring web services security mechanisms. We describe a formal semantics for WS-SecurityPolicy and propose a more abstract language for specifying secure links between web services and their clients. We present the architecture and implementation of tools that (1) compile policy files from link specifications, and (2) verify by invoking a theorem prover whether a set of policy files run by any number of senders and receivers correctly implements the goals of a link specification, in spite of active attackers. Policy-driven web services implementations are prone to the usual subtle vulnerabilities associated with cryptographic protocols; our tools help prevent such vulnerabilities. We can verify policies when first compiled from link specifications, and also re-verify policies against their original goals after any modifications during deployment. Moreover, we present general security theorems for all configurations that rely on compiled policies.\n", "author": [{"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "Mobile values, new names, and secure communication", "authors": ["Abadi"]}, {"title": "Reconstruction of attacks against cryptographic protocols", "authors": ["Allamigeon"]}, {"title": "Secure sessions for web services", "authors": ["Bhargavan", " Corin", " Fournet"]}, {"title": "A semantics for web services authentication", "authors": ["Bhargavan", " Fournet"]}, {"title": "Verifying policy-based security for web services", "authors": ["Bhargavan", " Fournet"]}, {"title": "Policy advisor for WSE 3", "authors": ["Bhargavan", " Fournet"]}, {"title": "Verified reference implementations of WS-Security protocols", "authors": ["Bhargavan", " Fournet"]}, {"title": "An advisor for web services security policies", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "TulaFale: A security tool for web services", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified implementations of the Information Card federated identity-management protocol", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "An efficient cryptographic protocol verifier based on Prolog rules", "authors": ["Blanchet"]}, {"title": "From secrecy to authenticity in security protocols", "authors": ["Blanchet"]}, {"title": "Automated verification of selected equivalences for security protocols", "authors": ["Blanchet", " Abadi"]}, {"title": "Web Services Addressing (WS-Addressing)", "authors": ["Box", " Christensen", " Curbera", " Ferguson", " Frey", " Hadley", " Kaler", " Langworthy", " Leymann", " Lovering", " Lucco", " Millet", " Mukhi", " Nottingham", " Orchard", " Shewchuk", " Sindambiwe", " Storey", " Weerawarana"]}, {"title": "Web services policy framework (WS-Policy)", "authors": ["Box", " Curbera", " Hondo", " Kaler", " Langworthy", " Nadalin", " Nagaratnam", " Nottingham", " von Riegen"]}, {"title": "Web services policy assertions language (WS-PolicyAssertions)", "authors": ["Box", " Hondo", " Kaler", " Maruyama", " Nadalin", " Nagaratnam", " Patrick", " von Riegen"]}, {"title": "Web services security policy language (WS-SecurityPolicy)", "authors": ["Della-Libera", " Hallam-Baker", " Hondo", " Janczuk", " Kaler", " Maruyama", " Nagaratnam", " Nash", " Philpott", " Prafullch", " Shewchuk", " Waingold"]}, {"title": "The Transport Layer Security (TLS) Protocol Version 1", "authors": ["Dierks"]}, {"title": "On the security of public key protocols", "authors": ["Dolev"]}, {"title": "XML Encryption Syntax and Processing", "authors": ["Eastlake", " Reagle", " Imamura", " Dillaway"]}, {"title": "XML-Signature Syntax and Processing", "authors": ["Eastlake", " Reagle", " Solo", " Bartel", " Boyer", " Fox", " LaMacchia"]}, {"title": "Authenticity by typing for security protocols", "authors": ["Gordon"]}, {"title": "Validating a web service security abstraction by typing", "authors": ["Gordon"]}, {"title": "Rigorous automated network security management", "authors": ["Guttman"]}, {"title": "Analyzing protocols subject to guessing attacks", "authors": ["Lowe"]}, {"title": "Automated attack analysis and code generation in a multi-dimensional security protocol engineering framework", "authors": ["Lukell", " Veldman"]}, {"title": "Web Services Enhancements (WSE) 2", "authors": ["Microsoft Corporatio"]}, {"title": "Cryptographic protocol generation from CAPSL", "authors": ["Muller"]}, {"title": "Web Services Security: UsernameToken Profile 1", "authors": ["Nadalin", " Griffin", " Kaler", " Hallam-Baker"]}, {"title": "Web Services Security: SOAP Message Security 1", "authors": ["Nadalin", " Kaler", " Hallam-Baker"]}, {"title": "Web Services Security: SOAP Message Security 1", "authors": ["Nadalin", " Kaler", " Hallam-Baker"]}, {"title": "WS-SecurityPolicy 1", "authors": ["Nadalin", " Goodner", " Gudgin", " Barbir"]}, {"title": "Using encryption for authentication in large networks of computers", "authors": ["Needham"]}, {"title": "AGVI -- Automatic generation, verification, and implementation of security protocols", "authors": ["Perrig", " Song"]}, {"title": "Spi2Java: automatic cryptographic protocol Java code generation from spi calculus", "authors": ["Pozza", " Sisto"]}, {"title": "Best practice patterns and tool support for configuring secure web services messaging", "authors": ["Tatsubori", " Imamura"]}, {"title": "1999", "authors": []}, {"title": "2003", "authors": []}, {"title": "A semantic model for authentication protocols", "authors": ["Woo"]}, {"title": "Using replication and partitioning to build secure distributed systems", "authors": ["Zheng", " Chong", " Myers"]}]},
{"title": "Domain specific language implementation via compile-time meta-programming", "time": "October 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Domain specific languages (DSLs) are mini-languages that are increasingly seen as being a valuable tool for software developers and non-developers alike. DSLs must currently be created in an ad-hoc fashion, often leading to high development costs and implementations of variable quality. In this article, I show how expressive DSLs can be hygienically embedded in the Converge programming language using its compile-time meta-programming facility, the concept of DSL blocks, and specialised error reporting techniques. By making use of pre-existing facilities, and following a simple methodology, DSL implementation costs can be significantly reduced whilst leading to higher quality DSL implementations.\n", "author": [{"name": "Laurence Tratt", "affiliation": "Bournemouth University, Dorset, United Kingdom"}, {"name": "Laurence Tratt", "affiliation": "Bournemouth University, Dorset, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "61", "references": [{"title": "A Theory of Objects", "authors": ["Abadi"]}, {"title": "Practical Earley parsing", "authors": ["Aycock"]}, {"title": "D-expressions: Lisp power, Dylan style", "authors": ["Bachrach"]}, {"title": "The Java syntactic extender (JSE)", "authors": ["Bachrach"]}, {"title": "Growing languages with metamorphic syntax macros", "authors": ["Brabr"]}, {"title": "Concrete syntax for objects", "authors": ["Bravenboer"]}, {"title": "Metaclasses are first class: The ObjVLisp model", "authors": ["Cointe"]}, {"title": "TXL\u2014A language for programming language tools and applications", "authors": ["Cordy"]}, {"title": "DSL implementation in MetaOCaml, Template Haskell, and C++", "authors": ["Czarnecki", " O'Donnell", " Striegnitz"]}, {"title": "Syntactic abstraction in scheme", "authors": ["Dybvig", " Hieb"]}, {"title": "An efficient context-free parsing algorithm", "authors": ["Earley"]}, {"title": "Contrasting compile-time meta-programming in Metalua and Converge", "authors": ["Fleutot"]}, {"title": "Smalltalk-80: The Language", "authors": ["Goldberg"]}, {"title": "Systems need languages need systems&excl; 2nd ECOOP Workshop on Programming Languages and Operating Systems", "authors": ["Grimm"]}, {"title": "The Icon Programming Language, Third ed", "authors": ["Griswold"]}, {"title": "Modular domain specific languages and tools", "authors": ["Hudak"]}, {"title": "Hygienic macro expansion", "authors": ["Kohlbecker", " Friedman", " Felleisen"]}, {"title": "When and how to develop domain-specific languages", "authors": ["Mernik", " Heering"]}, {"title": "The ACCENT Grammar Language", "authors": ["Schr\u00f6er"]}, {"title": "Optimising embedded DSLs using template Haskell", "authors": ["Seefried", " Chakravarty"]}, {"title": "Using MetaML: A staged programming language", "authors": ["Sheard"]}, {"title": "Accomplishments and research challenges in meta-programming", "authors": ["Sheard"]}, {"title": "DSL implementation using staging and monads", "authors": ["Sheard", " el Abidine Benaissa"]}, {"title": "Template meta-programming for Haskell", "authors": ["Sheard"]}, {"title": "Meta-programming in Nemerle", "authors": ["Skalski", " Moskal"]}, {"title": "Growing a language", "authors": ["Steele", " Jr"]}, {"title": "Compile-time meta-programming in a dynamically typed OO language", "authors": ["Tratt"]}, {"title": "The Converge programming language", "authors": ["Tratt"]}, {"title": "The MT model transformation language", "authors": ["Tratt"]}, {"title": "Converge Reference Manual", "authors": ["Tratt"]}, {"title": "Compiling language definitions: the asf+sdf compiler", "authors": ["van den Br", " Heering", " Klint"]}, {"title": "Domain-specific languages: An annotated bibliography", "authors": ["van Deursen", " Klint"]}, {"title": "Python 2", "authors": ["van Rossum"]}, {"title": "The run-time implementation language for Icon", "authors": ["Walker"]}, {"title": "Programmable syntax macros", "authors": ["Weise"]}, {"title": "Extensible programming for the 21st century", "authors": ["Wilson"]}]},
{"title": "XARK: An extensible framework for automatic recognition of computational kernels", "time": "October 2008", "keyword": ["Programming Languages and Systems"], "abstract": "The recognition of program constructs that are frequently used by software developers is a powerful mechanism for optimizing and parallelizing compilers to improve the performance of the object code. The development of techniques for automatic recognition of computational kernels such as inductions, reductions and array recurrences has been an intensive research area in the scope of compiler technology during the 90's. This article presents a new compiler framework that, unlike previous techniques that focus on specific and isolated kernels, recognizes a comprehensive collection of computational kernels that appear frequently in full-scale real applications. The XARK compiler operates on top of the Gated Single Assignment (GSA) form of a high-level intermediate representation (IR) of the source code. Recognition is carried out through a demand-driven analysis of this high-level IR at two different levels. First, the dependences between the statements that compose the strongly connected components (SCCs) of the data-dependence graph of the GSA form are analyzed. As a result of this intra-SCC analysis, the computational kernels corresponding to the execution of the statements of the SCCs are recognized. Second, the dependences between statements of different SCCs are examined in order to recognize more complex kernels that result from combining simpler kernels in the same code. Overall, the XARK compiler builds a hierarchical representation of the source code as kernels and dependence relationships between those kernels. This article describes in detail the collection of computational kernels recognized by the XARK compiler. Besides, the internals of the recognition algorithms are presented. The design of the algorithms enables to extend the recognition capabilities of XARK to cope with new kernels, and provides an advanced symbolic analysis framework to run other compiler techniques on demand. Finally, extensive experiments showing the effectiveness of XARK for a collection of benchmarks from different application domains are presented. In particular, the SparsKit-II library for the manipulation of sparse matrices, the Perfect benchmarks, the SPEC CPU2000 collection and the PLTMG package for solving elliptic partial differential equations are analyzed in detail.\n", "author": [{"name": "Manuel Arenaz", "affiliation": "University of A Coru\u00f1a, Spain"}, {"name": "Juan Touri\u00f1o", "affiliation": "University of A Coru\u00f1a, Spain"}, {"name": "Ramon Doallo", "affiliation": "University of A Coru\u00f1a, Spain"}, {"name": "Manuel Arenaz", "affiliation": "University of A Coru\u00f1a, Spain"}, {"name": "Juan Touri\u00f1o", "affiliation": "University of A Coru\u00f1a, Spain"}, {"name": "Ramon Doallo", "affiliation": "University of A Coru\u00f1a, Spain"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "25", "references": [{"title": "Compilers: Principles, Techniques, and Tools, 2nd ed", "authors": ["Aho", " Lam", " Sethi"]}, {"title": "Optimizing Compilers for Modern Architectures: A Dependence-Based Approach", "authors": ["Allen"]}, {"title": "Automatic recognition of induction and recurrence relations by abstract interpretation", "authors": ["Ammarguellat"]}, {"title": "Automated and accurate cache behavior analysis for codes with irregular access patterns", "authors": ["Andrade", " Arenaz", " Fraguela", " Touri\u00f1o"]}, {"title": "Compiler framework for the automatic detection of loop-level parallelism", "authors": ["Arenaz"]}, {"title": "A GSA-based compiler infrastructure to extract parallelism from complex loops", "authors": ["Arenaz", " Touri\u00f1o"]}, {"title": "Compiler support for parallel code generation through kernel recognition", "authors": ["Arenaz", " Touri\u00f1o"]}, {"title": "The program dependence web: A representation supporting control, data, and demand-driven interpretation of imperative languages", "authors": ["Ballance", " MacCabe"]}, {"title": "PLTMG package", "authors": ["Bank"]}, {"title": "The Perfect Club benchmarks: Effective performance evaluation of supercomputers", "authors": ["Berry", " Chen", " Koss", " Kuck", " Pointer", " Lo", " Pang", " Roloff", " Sameh", " Clementi", " Chin", " Schneider", " Fox", " Messina", " Walker", " Hsiung", " Schwarzmeier", " Lue", " Orzag", " Seidl", " Johnson", " Swanson", " Goodrum"]}, {"title": "A pattern matching approach for reusing software libraries in parallel systems", "authors": ["Bhansali"]}, {"title": "Parallel programming with Polaris", "authors": ["Blume", " Doallo", " Eigenmann", " Grout", " Hoeflinger", " Lawrence", " Lee", " Padua", " Paek", " Pottenger", " Rauchwerger"]}, {"title": "Recognizing and parallelizing bounded recurrences", "authors": ["Callahan"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Cytron", " Ferrante", " Rosen", " Wegman"]}, {"title": "PAP recognizer: A tool for automatic recognition of parallelizable patterns", "authors": ["di Martino"]}, {"title": "A unified symbolic evaluation framework for parallelizing compilers", "authors": ["Fahringer"]}, {"title": "The Polaris internal representation", "authors": ["Faigin", " Weatherford", " Hoeflinger", " Padua"]}, {"title": "Parallelizing complex scans and reductions", "authors": ["Fisher"]}, {"title": "GNU Compiler Collection Internals (GCC)", "authors": []}, {"title": "Beyond induction variables: Detecting and classifying sequences using a demand-driven SSA", "authors": ["Gerlek", " Stoltz"]}, {"title": "Symbolic analysis for parallelizing compilers", "authors": ["Haghighat"]}, {"title": "Knowledge-based program analysis", "authors": ["Har"]}, {"title": "A unified semantic approach for the vectorization and parallelization of generalized reductions", "authors": ["Jouvelot"]}, {"title": "Pattern-driven automatic parallelization", "authors": ["Ke\u00dfler"]}, {"title": "The SPARAMAT approach to automatic comprehension of sparse matrix computations", "authors": ["Ke\u00dfler"]}, {"title": "Array SSA form and its use in parallelization", "authors": ["Knobe"]}, {"title": "Enhanced parallelization via analyses and transformations on Array SSA form", "authors": ["Knobe"]}, {"title": "Program concept recognition and transformation", "authors": ["Kozaczynski", " Ning"]}, {"title": "On the automatic parallelization of sparse and irregular Fortran programs", "authors": ["Lin"]}, {"title": "GENERIC and GIMPLE: A new tree representation for entire functions", "authors": ["Merrill"]}, {"title": "Automated recognition of parallel algorithms in scientific applications", "authors": ["Metzger"]}, {"title": "Advanced Compiler Design and Implementation", "authors": ["Muchnick"]}, {"title": "A framework for source code search using program patterns", "authors": ["Paul"]}, {"title": "Program optimization and parallelization using idioms", "authors": ["Pinter"]}, {"title": "Idiom recognition in the Polaris parallelizing compiler", "authors": ["Pottenger"]}, {"title": "Detection of recurrences in sequential programs with loops", "authors": ["Redon"]}, {"title": "SPARSKIT: A Basic Tool Kit for Sparse Matrix Computations (Version 2)", "authors": ["Saad"]}, {"title": "CMAX: A Fortran translator for the connection machine system", "authors": ["Sabot"]}, {"title": "Standard Performance Evaluation Corporation", "authors": []}, {"title": "Detection and global optimization of reduction operations for distributed parallel machines", "authors": ["Suganuma", " Komatsu"]}, {"title": "Depth-first search and linear graph algorithms", "authors": ["Tarjan"]}, {"title": "Gated SSA-based demand-driven symbolic analysis for parallelizing compilers", "authors": []}, {"title": "Efficient symbolic analysis for optimizing compilers", "authors": ["van Engelen"]}, {"title": "A unified framework for nonlinear dependence testing and symbolic analysis", "authors": ["van Engelen", " Birch", " Shou", " Walsh"]}, {"title": "Automated program recognition: A feasibility demonstration", "authors": ["Wills"]}, {"title": "High Performance Compilers for Parallel Computing", "authors": ["Wolfe"]}, {"title": "Monotonic evolution: An alternative to induction variable substitution for dependence analysis", "authors": [" Cohen", " Hoeflinger"]}, {"title": "Enhancing parallelism by removing cyclic data dependencies", "authors": ["Zhang"]}, {"title": "Automatic construction of systems of recurrence relations", "authors": ["Zima"]}, {"title": "Simplification and optimization transformations of chains of recurrences", "authors": ["Zima"]}]},
{"title": "Perfect hashing as an almost perfect subtype test", "time": "October 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Subtype tests are an important issue in the implementation of object-oriented programming languages. Many techniques have been proposed, but none of them perfectly fulfills the five requirements that we have identified: constant-time, linear-space, multiple inheritance, dynamic loading and inlining. In this article, we propose a subtyping test implementation that involves a combination of usual hashtables and Cohen's display, which is a well-known technique for single inheritance hierarchies. This novel approach is based on \n, that is, an optimized and truly constant-time variant of hashing that applies to \n hashtables. We show that the resulting technique closely meets all five requirements. Furthermore, in the framework of Java-like languages\u2014characterized by single inheritance of classes and multiple subtyping of interfaces\u2014perfect hashing also applies to method invocation when the receiver is typed by an interface. The proposed technique is compared to some alternatives, including the proposal by Palacz and Vitek [2003]. Time-efficiency is assessed at the cycle level in the framework of Driesen's pseudo-code and the linear-space criterion is validated by statistical simulation on benchmarks consisting of large-scale class hierarchies.\n", "author": [{"name": "Roland Ducournau", "affiliation": "LIRMM--CNRS and Universit\u00e9 Montpellier II, France"}, {"name": "Roland Ducournau", "affiliation": "LIRMM--CNRS and Universit\u00e9 Montpellier II, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Efficient management of transitive relationships in large data and knowledge bases", "authors": ["Agrawal", " Borgida"]}, {"title": "Efficient implementation of lattice operations", "authors": ["A\u00eft-Kaci", " Boyer", " Lincoln"]}, {"title": "Extensible encoding of type hierarchies", "authors": ["Alavi", " Gilbert"]}, {"title": "Efficient implementation of Java interfaces: Invokeinterface considered harmless", "authors": ["Alpern", " Cocchi", " Fink"]}, {"title": "Dynamic type checking in Jalape\u00f1o", "authors": ["Alpern", " Cocchi"]}, {"title": "Fast static analysis of C++ virtual function calls", "authors": ["Bacon"]}, {"title": "Programming In Ada 95, first edition", "authors": ["Barnes"]}, {"title": "Efficient handling of multiple inheritance hierarchies", "authors": ["Caseau"]}, {"title": "Register allocation &amp; spilling via graph coloring", "authors": ["Chaitin"]}, {"title": "Fast subtype checking in the Hotspot JVM", "authors": ["Click"]}, {"title": "Type-extension type tests can be performed in constant time", "authors": ["Cohen"]}, {"title": "Type inference for late binding", "authors": ["Collin", " Colnet"]}, {"title": "Quasi-perfect hashing", "authors": ["Czech"]}, {"title": "Perfect hashing", "authors": ["Czech", " Havas"]}, {"title": "Recursive programming", "authors": ["Dijkstra"]}, {"title": "A fast method dispatcher for compiled languages with multiple inheritance", "authors": ["Dixon", " McKee", " Schweitzer"]}, {"title": "Method lookup strategies in dynamically typed object-oriented programming languages", "authors": ["Driesen"]}, {"title": "Selector table indexing and sparse arrays", "authors": ["Driesen"]}, {"title": "Efficient Polymorphic Calls", "authors": ["Driesen"]}, {"title": "Minimizing row displacement dispatch tables", "authors": ["Driesen"]}, {"title": "Message dispatch on pipelined processors", "authors": ["Driesen", " H\u00f6lzle"]}, {"title": "Yet Another Frame-based Object-Oriented Language: YAFOOL Reference Manual", "authors": ["Ducournau"]}, {"title": "La compilation de l'envoi de message dans les langages dynamiques", "authors": ["Ducournau"]}, {"title": "Implementing statically typed object-oriented programming languages", "authors": ["Ducournau"]}, {"title": "La coloration pour l'impl\u00e9mentation des langages \u00e0 objets \u00e0 typage statique", "authors": ["Ducournau"]}, {"title": "\u201cReal World\u201d as an argument for covariant specialization in programming and modeling", "authors": ["Ducournau"]}, {"title": "Coloring, a versatile technique for implementing object-oriented languages", "authors": ["Ducournau"]}, {"title": "The Annotated C++ Reference Manual", "authors": ["Ellis"]}, {"title": "Heterogeneous encoding", "authors": ["Fall"]}, {"title": "The foundations of taxonomic encoding", "authors": ["Fall"]}, {"title": "SableVM: A research framework for the efficient execution of Java bytecode", "authors": ["Gagnon"]}, {"title": "Computers and Intractability", "authors": ["Garey"]}, {"title": "Efficient subtyping tests with PQ-encoding", "authors": ["Gil"]}, {"title": "Smalltalk-80, the Language and its Implementation", "authors": ["Goldberg"]}, {"title": "A framework for call graph construction algorithms", "authors": ["Grove"]}, {"title": "Embedding partially ordered sets into chain-products", "authors": ["Habib", " Huchard"]}, {"title": "Bit-vector encoding for partially ordered sets", "authors": ["Habib"]}, {"title": "A new lattice-based heuristic for taxonomy encoding", "authors": ["Habib", " Nourine"]}, {"title": "Modula-3", "authors": ["Harbinson"]}, {"title": "Computing interfaces in Java", "authors": ["Huchard"]}, {"title": "Graph Coloring Problems", "authors": ["Jensen"]}, {"title": "The Art of the Meta-Object Protocol", "authors": ["Kiczales", " des Rivi\u00e8res"]}, {"title": "Design and performance of a modular portable object adapter for distributed, real-time, and embedded CORBA applications", "authors": ["Klefstad", " Krishna"]}, {"title": "The Art of Computer Programming, Sorting and Searching", "authors": ["Knuth"]}, {"title": "CACAO\u2014a 64 bits JavaVM just-in-time compiler", "authors": ["Krall"]}, {"title": "Near optimal hierarchical encoding of types", "authors": ["Krall", " Vitek"]}, {"title": "Inside the C++ Object Model", "authors": ["Lippman"]}, {"title": "THETA reference manual", "authors": ["Liskov", " Curtis", " Day", " Ghemawat", " Gruber", " Johnson"]}, {"title": "Data structures", "authors": ["Mehlhorn"]}, {"title": "Eiffel: The Language", "authors": ["Meyer"]}, {"title": "Object-Oriented Software Construction, second ed", "authors": ["Meyer"]}, {"title": "JAVA Virtual Machine", "authors": ["Meyer"]}, {"title": "C&num; Language specifications, v0", "authors": ["Microsoft"]}, {"title": "Scatter storage techniques", "authors": ["Morris"]}, {"title": "Object-Oriented Programming in Oberon-2", "authors": ["M\u00f6ssenb\u00f6ck"]}, {"title": "Time and space efficient method lookup for object-oriented languages", "authors": ["Muthukrishnan"]}, {"title": "Bidirectional object layout for separate compilation", "authors": ["Myers"]}, {"title": "Programming in Scala, A comprehensive step-by-step guide", "authors": ["Odersky", " Spoon"]}, {"title": "Java subtype tests in real-time", "authors": ["Palacz"]}, {"title": "Oberon technical notes", "authors": ["Pfister"]}, {"title": "PRM, the language", "authors": ["Privat"]}, {"title": "Link-time static analysis for efficient separate compilation of object-oriented languages", "authors": ["Privat"]}, {"title": "Two-directional record layout for multiple inheritance", "authors": ["Pugh"]}, {"title": "On object layout for multiple inheritance", "authors": ["Pugh"]}, {"title": "Fast and compact dispatching for dynamic object-oriented languages", "authors": ["Queinnec"]}, {"title": "A quasi optimal bit-vector encoding of tree hierarchies", "authors": ["Raynaud"]}, {"title": "GPERF: A perfect hash function generator", "authors": ["Schmidt"]}, {"title": "Determining type, part, color and time relationship", "authors": ["Schubert", " Papalaskaris"]}, {"title": "The Dylan Reference Manual: The Definitive Guide to the New Object-Oriented Dynamic Language", "authors": ["Shalit"]}, {"title": "Perfect hashing functions: a single probe retrieving method for static sets", "authors": ["Sprugnoli"]}, {"title": "Common Lisp, the Language, Second ed", "authors": ["Steele"]}, {"title": "The C++ Programming Language, 3", "authors": ["Stroustrup"]}, {"title": "Addison-Wesley, Reading, MA", "authors": [" Reading"]}, {"title": "Ada 2005 Reference Manual: Language and Standard Libraries", "authors": ["Taft", " Duff", " Brukardt", " Ploedereder", " Eds"]}, {"title": "Coloration de classes et de propri\u00e9t\u00e9s : \u00e9tude algorithmique et heuristique", "authors": ["Takhedmit"]}, {"title": "Storing a sparse table", "authors": ["Tarjan"]}, {"title": "Efficient type inclusion tests", "authors": ["Vitek", " Horspool"]}, {"title": "Average-case analysis of algorithms and data structures", "authors": ["Vitter"]}, {"title": "Hacker's Delight", "authors": ["Warren"]}, {"title": "The programming language Oberon", "authors": ["Wirth"]}, {"title": "Efficient dynamic dispatch without virtual function tables: The SmallEiffel compiler", "authors": ["Zendra", " Colnet"]}, {"title": "Incremental algorithms for dispatching in dynamically typed languages", "authors": ["Zibin"]}, {"title": "Two-dimensional bi-directional object layout", "authors": ["Zibin"]}]},
{"title": "Dually nondeterministic functions", "time": "October 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Nondeterminacy is a fundamental notion in computing. We show that it can be described by a general theory that accounts for it in the form in which it occurs in many programming contexts, among them specifications, competing agents, data refinement, abstract interpretation, imperative programming, process algebras, and recursion theory. Underpinning these applications is a theory of nondeterministic functions; we construct such a theory. The theory consists of an algebra with which practitioners can reason about nondeterministic functions, and a denotational model to establish the soundness of the theory. The model is based on the idea of free completely distributive lattices over partially ordered sets. We deduce the important properties of nondeterministic functions.\n", "author": [{"name": "Joseph M. Morris", "affiliation": "Dublin City University, Ireland and Lero - the Irish Software Engineering Research Centre, Dublin, Ireland "}, {"name": "Malcolm Tyrrell", "affiliation": "Dublin City University, Ireland and Lero - the Irish Software Engineering Research Centre, Dublin, Ireland "}, {"name": "Joseph M. Morris", "affiliation": "Dublin City University, Ireland and Lero - the Irish Software Engineering Research Centre, Dublin, Ireland "}, {"name": "Malcolm Tyrrell", "affiliation": "Dublin City University, Ireland and Lero - the Irish Software Engineering Research Centre, Dublin, Ireland "}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "Domain theory", "authors": ["Abramsky"]}, {"title": "Countable nondeterminism and random assignment", "authors": ["Apt"]}, {"title": "Correctness preserving program refinements: Proof theory and applications", "authors": ["Back"]}, {"title": "Duality in specification languages: a lattice-theoretical approach", "authors": ["Back"]}, {"title": "Refinement Calculus: A Systematic Introduction", "authors": ["Back"]}, {"title": "Free bounded distributive lattices over finite ordered sets and their skeletons", "authors": ["Bartenschlager"]}, {"title": "Stable models of typed lambda-calculi", "authors": ["Berry"]}, {"title": "Algebra of Programming", "authors": ["Bird"]}, {"title": "Lattice Theory, 3rd ed", "authors": ["Birkhoff"]}, {"title": "Implementing declarative parallel bottom-avoiding choice", "authors": ["Bois", " Pointon", " Loidl"]}, {"title": "Topological Duality in Semantics", "authors": ["Bonsangue"]}, {"title": "The weakest precondition calculus: Recursion and duality", "authors": ["Bonsangue"]}, {"title": "Functional declarative language design and predicate calculus: a practical approach", "authors": ["Boute"]}, {"title": "A theory for nondeterminism, parallelism, communication, and concurrency", "authors": ["Broy"]}, {"title": "Presheaf models for concurrency", "authors": ["Cattani"]}, {"title": "Abstract interpretation", "authors": ["Cousot"]}, {"title": "Introduction to Lattices and Order, 2nd ed", "authors": ["Davey"]}, {"title": "Invited talk: Pointwise relational programming", "authors": ["de Moor"]}, {"title": "Data Refinement: Model-Oriented Proof Methods and Their Comparison", "authors": ["DeRoever"]}, {"title": "A Discipline of Programming", "authors": ["Dijkstra"]}, {"title": "The equivalence of bounded nondeterminacy and continuity", "authors": ["Dijkstra"]}, {"title": "The Hoare and Smith power domain constructors commute under composition", "authors": ["Flannery"]}, {"title": "Free Lattices", "authors": ["Freese", " Jezek"]}, {"title": "An algebraic construction of predicate transformers", "authors": ["Gardiner", " Martin"]}, {"title": "Data refinement of predicate transformers", "authors": ["Gardiner"]}, {"title": "A Logical Approach to Discrete Math", "authors": ["Gries"]}, {"title": "A fully abstract game semantics for finite nondeterminism", "authors": ["Harmer"]}, {"title": "Lower and upper power domain constructions commute on all cpos", "authors": ["Heckmann"]}, {"title": "Power domain constructions", "authors": ["Heckmann"]}, {"title": "An upper power domain construction in terms of strongly compact sets", "authors": ["Heckmann"]}, {"title": "A Practical Theory of Programming", "authors": ["Hehner"]}, {"title": "Full abstraction for a simple parallel programming language", "authors": ["Hennessy"]}, {"title": "Modalities of nondeterminacy", "authors": ["Hesselink"]}, {"title": "Multirelations are predicate transformers", "authors": ["Hesselink"]}, {"title": "Communicating Sequential Processes", "authors": ["Hoare"]}, {"title": "Prespecification in data refinement", "authors": ["Hoare", " He"]}, {"title": "Powerdomains", "authors": ["Hoofman"]}, {"title": "The design of functional programs: a calculational approach", "authors": ["Hoogerwoord"]}, {"title": "Making choices lazily", "authors": ["Hughes"]}, {"title": "Nondeterministic functional programming with sets", "authors": ["Hughes"]}, {"title": "General correctness: A unification of partial and total correctness", "authors": ["Jacobs"]}, {"title": "A semantics for imprecise exceptions", "authors": ["Jones", " Reid", " Henderson", " Hoare"]}, {"title": "Bidomains and full abstraction for countable nondeterminism", "authors": ["Laird"]}, {"title": "Semantics of under-determined expressions", "authors": ["Larsen"]}, {"title": "Relational reasoning about functions and nondeterminism", "authors": ["Lassen"]}, {"title": "Infinite trace equivalence", "authors": ["Levy"]}, {"title": "Free constructions of powerdomains", "authors": ["Main"]}, {"title": "Modelling nondeterminism", "authors": ["Martin", " Curtis"]}, {"title": "The specification statement", "authors": ["Morgan"]}, {"title": "Programming from Specifications", "authors": ["Morgan"]}, {"title": "Data refinement by calculation", "authors": ["Morgan"]}, {"title": "A theoretical basis for stepwise refinement and the programming calculus", "authors": ["Morris"]}, {"title": "Augmenting types with unbounded demonic and angelic nondeterminacy", "authors": ["Morris"]}, {"title": "Specificational functions", "authors": ["Morris"]}, {"title": "A source of inconsistency in theories of nondeterministic functions", "authors": ["Morris"]}, {"title": "Term transformers: A new approach to state", "authors": ["Morris", " Bunkenburg"]}, {"title": "Dual unbounded nondeterminacy, recursion, and fixpoints", "authors": ["Morris"]}, {"title": "Ideal models for pointwise relational and state-free imperative programming", "authors": ["Naumann"]}, {"title": "Predicate transformer semantics of a higher-order imperative language with record subtyping", "authors": ["Naumann"]}, {"title": "Some generalizations and applications of Dijkstra's guarded commands", "authors": ["Nelson"]}, {"title": "Logical specifications for functional programs", "authors": ["Norvell"]}, {"title": "Linearity in process languages", "authors": ["Nygaard"]}, {"title": "Domain theory for concurrency", "authors": ["Nygaard"]}, {"title": "Specification and Transformation of Programs", "authors": ["Partsch"]}, {"title": "A powerdomain construction", "authors": ["Plotkin"]}, {"title": "Dijkstra's predicate transformers and smyth's powerdomains", "authors": ["Plotkin"]}, {"title": "Theories of Programming Languages", "authors": ["Reynolds"]}, {"title": "The Theory and Practice of Concurrency", "authors": ["Roscoe"]}, {"title": "Power domains", "authors": ["Smyth"]}, {"title": "Power domains and predicate transformers: A topological view", "authors": ["Smyth"]}, {"title": "Understanding Z: A Specification Language and its Formal Semantics", "authors": ["Spivey"]}, {"title": "The free completely distributive lattice over a poset", "authors": ["Tunnicliffe"]}, {"title": "A lattice-theoretic model for an algebra of communicating sequential processes", "authors": ["Tyrrell", " Morris", " Butterfield"]}, {"title": "The lattice of data refinement", "authors": ["von Wright"]}, {"title": "A refinement calculus for nondeterministic expressions", "authors": ["Ward"]}, {"title": "The Formal Semantics of Programming Languages: An Introduction", "authors": ["Winskel"]}, {"title": "Software engineering mathematics", "authors": ["Woodcock"]}]},
{"title": "A programming model for concurrent object-oriented programs", "time": "December 2008", "keyword": ["Programming Languages and Systems"], "abstract": "Reasoning about multithreaded object-oriented programs is difficult, due to the nonlocal nature of object aliasing and data races. We propose a programming regime (or \n) that rules out data races, and enables local reasoning in the presence of object aliasing and concurrency. Our programming model builds on the multithreading and synchronization primitives as they are present in current mainstream programming languages. Java or C# programs developed according to our model can be annotated by means of stylized comments to make the use of the model explicit. We show that such annotated programs can be formally verified to comply with the programming model. If the annotated program verifies, the underlying Java or C# program is guaranteed to be free from data races, and it is sound to reason locally about program behavior. Verification is modular: a program is valid if all methods are valid, and validity of a method does not depend on program elements that are not visible to the method. We have implemented a verifier for programs developed according to our model in a custom build of the Spec# programming system, and we have validated our approach on a case study.\n", "author": [{"name": "Bart Jacobs", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "Frank Piessens", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "Jan Smans", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "K. Rustan M. Leino", "affiliation": "Microsoft Research"}, {"name": "Wolfram Schulte", "affiliation": "Microsoft Research"}, {"name": "Bart Jacobs", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "Frank Piessens", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "Jan Smans", "affiliation": "Katholieke Universiteit Leuven"}, {"name": "K. Rustan M. Leino", "affiliation": "Microsoft Research"}, {"name": "Wolfram Schulte", "affiliation": "Microsoft Research"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "24", "references": [{"title": "Verification for Java's reentrant multithreading concept", "authors": ["\u00c1brah\u00e1m-Mumm", " de Boer", " de Roever"]}, {"title": "Boogie: A modular reusable verifier for object-oriented programs", "authors": ["Barnett", " Chang", " DeLine", " Jacobs"]}, {"title": "Verification of object-oriented programs with invariants", "authors": ["Barnett", " DeLine", " F\u00e4hndrich", " Leino"]}, {"title": "The Spec&num; programming system: An overview", "authors": ["Barnett", " Leino"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": "Extended static checking", "authors": ["Detlefs", " Leino", " Nelson"]}, {"title": "Atomizer: A dynamic atomicity checker for multithreaded programs", "authors": ["Flanagan"]}, {"title": "Modular verification of multithreaded programs", "authors": ["Flanagan", " Freund", " Qadeer"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "A type and effect system for atomicity", "authors": ["Flanagan"]}, {"title": "Checking concise specifications for multithreaded software", "authors": ["Freund"]}, {"title": "The Java Language Specification (3rd Edition)", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Monitors: An operating system structuring concept", "authors": ["Hoare"]}, {"title": "A statically verifiable programming model for concurrent object-oriented programs", "authors": ["Jacobs"]}, {"title": "Safe concurrency for aggregate objects with invariants", "authors": ["Jacobs", " Leino", " Piessens"]}, {"title": "Safe concurrency for aggregate objects with invariants: Soundness proof", "authors": ["Jacobs", " Leino", " Piessens"]}, {"title": "A statically verifiable programming model for concurrent object-oriented programs", "authors": ["Jacobs", " Smans", " Piessens"]}, {"title": "Dynamic frames: Support for framing, dependencies and sharing without restrictions", "authors": ["Kassios"]}, {"title": "Summarizing procedures in concurrent programs", "authors": ["Qadeer", " Rajamani"]}, {"title": "Extending sequential specification techniques for modular specification and verification of multi-threaded programs", "authors": ["Rodr\u00edguez", " Dwyer", " Flanagan", " Hatcliff", " Leavens"]}, {"title": "Eraser: A dynamic data race detector for multi-threaded programs", "authors": ["Savage", " Burrows", " Nelson", " Sobalvarro"]}, {"title": "Transactional monitors for concurrent objects", "authors": ["Welc", " Jagannathan"]}]},
{"title": "Efficient constraint propagation engines", "time": "December 2008", "keyword": ["Programming Languages and Systems"], "abstract": "This article presents a model and implementation techniques for speeding up constraint propagation. Three fundamental approaches to improving constraint propagation based on propagators as implementations of constraints are explored: keeping track of which propagators are at fixpoint, choosing which propagator to apply next, and how to combine several propagators for the same constraint.\nWe show how idempotence reasoning and events help track fixpoints more accurately. We improve these methods by using them dynamically (taking into account current variable domains to improve accuracy). We define priority-based approaches to choosing a next propagator and show that dynamic priorities can improve propagation. We illustrate that the use of multiple propagators for the same constraint can be advantageous with priorities, and introduce staged propagators that combine the effects of multiple propagators with priorities for greater efficiency.\n", "author": [{"name": "Christian Schulte", "affiliation": "KTH - Royal Institute of Technology, Kista, Sweden"}, {"name": "Peter J. Stuckey", "affiliation": "NICTA Victoria Laboratory, University of Melbourne, Australia"}, {"name": "Christian Schulte", "affiliation": "KTH - Royal Institute of Technology, Kista, Sweden"}, {"name": "Peter J. Stuckey", "affiliation": "NICTA Victoria Laboratory, University of Melbourne, Australia"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "77", "references": [{"title": "Principles of Constraint Programming", "authors": ["Apt"]}, {"title": "Constraint-Based Scheduling", "authors": ["Baptiste", " Le Pape"]}, {"title": "In Proceedings of Techniques for Implementing Constraint Programming Systems (TRICS)", "authors": ["Beldiceanu", " Harvey", " Henz", " Laburthe", " Monfroy", " M\u00fcller", " Perron"]}, {"title": "Heterogeneous Constraint Solving", "authors": ["Benhamou"]}, {"title": "Revisiting the lexicographic ordering constraint", "authors": ["Carlsson"]}, {"title": "An open-ended finite domain constraint solver", "authors": ["Carlsson", " Ottosson"]}, {"title": "CHIC lessons on CLP methodology", "authors": ["Chamard", " Fischler", " Guinaudeau"]}, {"title": "Finite domain bounds consistency revisited", "authors": ["Choi", " Harvey", " Lee"]}, {"title": "Compiling constraints in clp(FD)", "authors": ["Codognet"]}, {"title": "CSPLib: A problem library for constraints", "authors": ["CSPLib"]}, {"title": "Amusements in Mathematics", "authors": ["Dudeney"]}, {"title": "Gecode: Generic constraint development environment", "authors": ["Gecode Team"]}, {"title": "Watched literals for constraint propagation in Minion", "authors": ["Gent", " Jefferson"]}, {"title": "Implementing constraint propagation by composition of reductions", "authors": ["Granvilliers"]}, {"title": "Personal communication", "authors": ["Harvey"]}, {"title": "Improving linear constraint propagation by changing constraint representation", "authors": ["Harvey"]}, {"title": "ILOG Solver 5", "authors": []}, {"title": "SICStus Prolog user's manual, 3", "authors": ["Intelligent Systems Laboratory"]}, {"title": "CHOCO: Implementing a CP kernel", "authors": ["Laburthe"]}, {"title": "Advisors for incremental propagation", "authors": ["Lagerkvist"]}, {"title": "Dynamic optimization of interval narrowing algorithms", "authors": ["Lhomme", " Gotlieb"]}, {"title": "Consistency in networks of relations", "authors": ["Mackworth"]}, {"title": "Programming with Constraints: An Introduction", "authors": ["Marriott"]}, {"title": "Arc and path consistency revisited", "authors": ["Mohr"]}, {"title": "Good old discrete relaxation", "authors": ["Mohr"]}, {"title": "Using \u201cweaker\u201d functions for constraint propagation over real numbers", "authors": ["Monfroy"]}, {"title": "Chaff: Engineering an efficient SAT solver", "authors": ["Moskewicz", " Madigan", " Zhao", " Zhang"]}, {"title": "The Mozart programming system", "authors": ["Mozart Consortium"]}, {"title": "A regular language membership constraint for finite sequences of variables", "authors": ["Pesant"]}, {"title": "A fast algorithm for the bound consistency of alldiff constraints", "authors": ["Puget"]}, {"title": "A filtering algorithm for constraints of difference in CSPs", "authors": ["R\u00e9gin"]}, {"title": "Constraint reduction at the type level", "authors": ["Sav\u00e9ant"]}, {"title": "Speeding up constraint propagation", "authors": ["Schulte"]}, {"title": "When do bounds and domain propagation lead to the same search space&quest; ACM Trans", "authors": ["Schulte"]}, {"title": "The OPL Optimization Programming Language", "authors": ["Van Hentenryck"]}, {"title": "Constraint processing in cc(FD)", "authors": ["Van Hentenryck", " Saraswat"]}, {"title": "Design, implementation and evaluation of the constraint language cc(FD)", "authors": ["Van Hentenryck", " Saraswat"]}, {"title": "Constraint satisfaction using constraint logic programming", "authors": ["Van Hentenryck", " Simonis"]}, {"title": "Eclipse: A platform for constraint logic programming", "authors": ["Wallace", " Novello"]}, {"title": "Programming finite-domain constraint propagators in action rules", "authors": ["Zhou"]}]},
{"title": "Self-stabilization preserving compiler", "time": "August 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Self-stabilization is an elegant approach for designing fault tolerant systems. A system is considered self-stabilizing if, starting in any state, it converges to the desired behavior. Self-stabilizing algorithms were designed for solving fundamental distributed tasks, such as leader election, token circulation and communication network protocols. The algorithms were expressed using guarded commands or pseudo-code. The realization of these algorithms requires the existence of a (self-stabilizing) infrastructure such as a self-stabilizing microprocessor and a self-stabilizing operating system for their execution. Moreover, the high-level description of the algorithms needs to be converted into machine language of the microprocessor. In this article, we present our design for a self-stabilization preserving compiler. The compiler we designed and implemented transforms programs written in a language similar to the abstract state machine (ASM). The compiler preserves the stabilization property of the high level program.\n", "author": [{"name": "Shlomi Dolev", "affiliation": "Ben-Gurion University, Beer-Sheva, Israel"}, {"name": "Yinnon Haviv", "affiliation": "Ben-Gurion University, Beer-Sheva, Israel"}, {"name": "Mooly Sagiv", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Shlomi Dolev", "affiliation": "Ben-Gurion University, Beer-Sheva, Israel"}, {"name": "Yinnon Haviv", "affiliation": "Ben-Gurion University, Beer-Sheva, Israel"}, {"name": "Mooly Sagiv", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "The bakery algorithm: Yet another specification and verification", "authors": ["Borger", " Gurevich"]}, {"title": "Abstract State Machines: A Method for High-Level System Design and Analysis", "authors": ["Borger"]}, {"title": "Self-stabilizing autonomic recoverer for eventual byzantine software", "authors": ["Brukman", " Dolev"]}, {"title": "Convergence refinement", "authors": ["Demirbas"]}, {"title": "Self-stabilizing systems in spite of distributed control", "authors": ["Dijkstra"]}, {"title": "Self-stabilization", "authors": ["Dolev"]}, {"title": "Self-stabilizing microprocessor analyzing and overcoming soft-errors (extended abstract)", "authors": ["Dolev"]}, {"title": "Self-stabilization preserving compiler&amp;#8212;implementation and examples", "authors": ["Dolev", " Haviv"]}, {"title": "Self-stabilization of dynamic systems assuming only read/write atomicity", "authors": ["Dolev", " Israeli"]}, {"title": "&amp;#8220;self-stabilizing distributed file systems&amp;#8221;", "authors": ["Dolev"]}, {"title": "Self-stabilizing clock synchronization in the presence of byzantine faults", "authors": ["Dolev"]}, {"title": "&amp;#8220;toward self-stabilizing operating systems&amp;#8221;", "authors": ["Dolev"]}, {"title": "Memory management for self-stabilizing operating systems", "authors": ["Dolev"]}, {"title": "Self-repairing computers", "authors": ["Fox"]}, {"title": "The alternator", "authors": ["Gouda"]}, {"title": "The instability of self-stabilization", "authors": ["Gouda", " Howell"]}, {"title": "Evolving algebras 1993: Lipari Guide", "authors": ["Gurevich"]}, {"title": "Coding Approaches to Fault Tolerance in Combinational and Dynamic Systems", "authors": ["Hadjicostis"]}, {"title": "A composite stabilizing data structure", "authors": ["Herman"]}, {"title": "The vision of autonomic computing", "authors": ["Kephart"]}, {"title": "The byzantine generals problem", "authors": ["Lamport", " Shostak"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Lamport"]}, {"title": "On interprocess communication, part I: Basic formalism", "authors": ["Lamport"]}, {"title": "Distributed Algorithms", "authors": ["Lynch"]}, {"title": "The Austin Protocol Compiler", "authors": ["McGuire"]}, {"title": "Stabilization-preserving atomicity refinement", "authors": ["Nesterenko"]}, {"title": "Interconnections: Bridges and Routers", "authors": ["Perlman"]}, {"title": "A Structural Approach to Operational Semantics", "authors": ["Plotkin"]}, {"title": "Modeling the effect of technology trends on the soft error rate of combinational logic", "authors": ["Shivakumar", " Kistler", " Keckler", " Burger"]}, {"title": "Structured Computer Organization 3rd Ed", "authors": ["Tanenbaum"]}]},
{"title": "A probabilistic language based on sampling functions", "time": "December 2008", "keyword": ["Programming Languages and Systems"], "abstract": "As probabilistic computations play an increasing role in solving various problems, researchers have designed probabilistic languages which treat probability distributions as primitive datatypes. Most probabilistic languages, however, focus only on discrete distributions and have limited expressive power. This article presents a probabilistic language, called \u03bb\n, whose expressive power is beyond discrete distributions. Rich expressiveness of \u03bb\n is due to its use of \n, that is, mappings from the unit interval (0.0,1.0] to probability domains, in specifying probability distributions. As such, \u03bb\n enables programmers to formally express and reason about sampling methods developed in simulation theory. The use of \u03bb\n is demonstrated with three applications in robotics: robot localization, people tracking, and robotic mapping. All experiments have been carried out with real robots.\n", "author": [{"name": "Sungwoo Park", "affiliation": "Pohang University of Science and Technology"}, {"name": "Frank Pfenning", "affiliation": "Carnegie Mellon University"}, {"name": "Sebastian Thrun", "affiliation": "Stanford University"}, {"name": "Sungwoo Park", "affiliation": "Pohang University of Science and Technology"}, {"name": "Frank Pfenning", "affiliation": "Carnegie Mellon University"}, {"name": "Sebastian Thrun", "affiliation": "Stanford University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "35", "references": [{"title": "A Guide to Simulation 2nd Ed", "authors": ["Bratley", " Fox"]}, {"title": "Statistical Language Learning", "authors": ["Charniak"]}, {"title": "Non-Uniform Random Variate Generation", "authors": ["Devroye"]}, {"title": "Sequential Monte Carlo Methods in Practice", "authors": ["Doucet", " de Freitas"]}, {"title": "Markov localization for mobile robots in dynamic environments", "authors": ["Fox", " Burgard"]}, {"title": "Computational complexity of probabilistic Turing machines", "authors": ["Gill"]}, {"title": "A categorical approach to probability theory", "authors": ["Giry"]}, {"title": "Stochastic processes as concurrent constraint programs", "authors": ["Gupta", " Jagadeesan"]}, {"title": "Propagation of uncertainty in Bayesian networks by probabilistic logic sampling", "authors": ["Henrion"]}, {"title": "CONDENSATION: Conditional density propagation for visual tracking", "authors": ["Isard"]}, {"title": "Stochastic Processes and Filtering Theory", "authors": ["Jazwinski"]}, {"title": "Statistical Methods for Speech Recognition (Language, Speech, and Communication)", "authors": ["Jelinek"]}, {"title": "Probabilistic nondeterminism", "authors": ["Jones"]}, {"title": "Effective Bayesian inference for stochastic programs", "authors": ["Koller", " McAllester"]}, {"title": "Semantics of probabilistic programs", "authors": ["Kozen"]}, {"title": "State in Haskell", "authors": ["Launchbury"]}, {"title": "A modular module system", "authors": ["Leroy"]}, {"title": "Introduction to Monte Carlo methods", "authors": ["MacKay"]}, {"title": "On the meanings of the logical constants and the justifications of the logical laws", "authors": ["Martin-L\u00f6f"]}, {"title": "Roll: A language for specifying die-rolls", "authors": ["Mogensen"]}, {"title": "Computational lambda-calculus and monads", "authors": ["Moggi"]}, {"title": "Notions of computation and monads", "authors": ["Moggi"]}, {"title": "FastSLAM: A factored solution to the simultaneous localization and mapping problem with unknown data association", "authors": ["Montemerlo"]}, {"title": " Roy, N", "authors": ["Montemerlo", " Roy"]}, {"title": "Conditional particle filters for simultaneous mobile robot localization and people-tracking", "authors": ["Montemerlo", " Whittaker"]}, {"title": "Randomized Algorithms", "authors": ["Motwani"]}, {"title": "A calculus for probabilistic languages", "authors": ["Park"]}, {"title": "Tackling the awkward squad: monadic input/output, concurrency, exceptions, and foreign-language calls in Haskell", "authors": ["Peyton Jones"]}, {"title": "Imperative functional programming", "authors": ["Peyton Jones"]}, {"title": "IBAL: A probabilistic rational programming language", "authors": ["Pfeffer"]}, {"title": "A judgmental reconstruction of modal logic", "authors": ["Pfenning"]}, {"title": "Toward general analysis of recursive probability models", "authors": ["Pless"]}, {"title": "A tutorial on hidden Markov models and selected applications in speech recognition", "authors": ["Rabiner"]}, {"title": "Stochastic lambda calculus and monads of probability distributions", "authors": ["Ramsey"]}, {"title": "Real and Complex Analysis 3rd Ed", "authors": ["Rudin"]}, {"title": "Artificial Intelligence: A Modern Approach", "authors": ["Russell"]}, {"title": "A reflection on call-by-value", "authors": ["Sabry"]}, {"title": "Probabilistic LCF", "authors": ["Saheb-Djahromi"]}, {"title": "Probabilistic algorithms in robotics", "authors": ["Thrun"]}, {"title": "Towards programming tools for robots that integrate probabilistic computation and learning", "authors": ["Thrun"]}, {"title": "Robotic mapping: A survey", "authors": ["Thrun"]}, {"title": "An introduction to the Kalman filter", "authors": ["Welch"]}]},
{"title": "Verified interoperable implementations of security protocols", "time": "December 2008", "keyword": ["Programming Languages and Systems"], "abstract": "We present an architecture and tools for verifying implementations of security protocols. Our implementations can run with both concrete and symbolic implementations of cryptographic algorithms. The concrete implementation is for production and interoperability testing. The symbolic implementation is for debugging and formal verification. We develop our approach for protocols written in F#, a dialect of ML, and verify them by compilation to ProVerif, a resolution-based theorem prover for cryptographic protocols. We establish the correctness of this compilation scheme, and we illustrate our approach with protocols for Web Services security.\n", "author": [{"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research"}, {"name": "Stephen Tse", "affiliation": "University of Pennsylvania"}, {"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research"}, {"name": "Stephen Tse", "affiliation": "University of Pennsylvania"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "34", "references": [{"title": "Mobile values, new names, and secure communication", "authors": ["Abadi"]}, {"title": "A calculus for cryptographic protocols: The spi calculus", "authors": ["Abadi"]}, {"title": "Reconciling two views of cryptography (the computational soundness of formal encryption)", "authors": ["Abadi"]}, {"title": "Reconstruction of attacks against cryptographic protocols", "authors": ["Allamigeon"]}, {"title": "Apache WSS4J", "authors": ["Apache Software Foundatio"]}, {"title": "Security-typed languages for implementation of cryptographic protocols: A case study", "authors": ["Askarov"]}, {"title": "A composable cryptographic library with nested operations", "authors": ["Backes", " Pfitzmann"]}, {"title": "The chemical abstract machine", "authors": ["Berry"]}, {"title": "Secure sessions for Web services", "authors": ["Bhargavan", " Corin", " Fournet"]}, {"title": "Cryptographically verified implementations for TLS", "authors": ["Bhargavan", " Fournet", " Corin"]}, {"title": "Verifying policy-based security for Web services", "authors": ["Bhargavan", " Fournet"]}, {"title": "A semantics for Web services authentication", "authors": ["Bhargavan", " Fournet"]}, {"title": "Verified reference implementations of WS-Security protocols", "authors": ["Bhargavan", " Fournet"]}, {"title": "TulaFale: A security tool for Web services", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified implementations of the Information Card federated identity-management protocol", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "An efficient cryptographic protocol verifier based on Prolog rules", "authors": ["Blanchet"]}, {"title": "Computationally sound mechanized proofs of correspondence assertions", "authors": ["Blanchet"]}, {"title": "Automated verification of selected equivalences for security protocols", "authors": ["Blanchet", " Abadi"]}, {"title": "Verification of cryptographic protocols: Tagging enforces termination", "authors": ["Blanchet"]}, {"title": "Automatic validation of protocol narration", "authors": ["Bodei", " Buchholtz", " Degano"]}, {"title": "On the security of public key protocols", "authors": ["Dolev"]}, {"title": "XML Encryption Syntax and Processing", "authors": ["Eastlake", " Reagle", " Imamura", " Dillaway"]}, {"title": "XML-Signature Syntax and Processing", "authors": ["Eastlake", " Reagle", " Solo", " Bartel", " Boyer", " Fox", " LaMacchia"]}, {"title": "A hierarchy of equivalences for asynchronous calculi", "authors": ["Fournet"]}, {"title": "Cryptol Reference Manual", "authors": ["Galois Connections"]}, {"title": "On the secure implementation of security protocols", "authors": ["Giambiagi"]}, {"title": "Validating a Web service security abstraction by typing", "authors": ["Gordon"]}, {"title": "Cryptographic protocol analysis on real C code", "authors": ["Goubault-Larrecq"]}, {"title": "Programming cryptographic protocols", "authors": ["Guttman", " Herzog", " Ramsdell"]}, {"title": "IBM WebSphere Application Server", "authors": ["IBM Corporation"]}, {"title": "Web services security: A preliminary study using Casper and FDR", "authors": ["Kleiner"]}, {"title": "On the relationship between Web services security and traditional protocols", "authors": ["Kleiner"]}, {"title": "Automated attack analysis and code generation in a multi-dimensional security protocol engineering framework", "authors": ["Lukell", " Veldman"]}, {"title": "On asynchrony in name-passing calculi", "authors": ["Merro"]}, {"title": "Web Services Enhancements (WSE) 2", "authors": ["Microsoft Corporation"]}, {"title": "F&num;", "authors": ["Microsoft Corporation"]}, {"title": "Windows Communication Foundation (WCF)", "authors": ["Microsoft Corporation"]}, {"title": "FS2PV: A Cryptographic-Protocol Verifier for F&num;", "authors": ["Microsoft Corporation"]}, {"title": "Functions as processes", "authors": ["Milner"]}, {"title": "Communicating and Mobile Systems: The &pi;-Calculus", "authors": ["Milner"]}, {"title": "Cryptographic protocol generation from CAPSL", "authors": ["Muller"]}, {"title": "Using encryption for authentication in large networks of computers", "authors": ["Needham"]}, {"title": "Web Services Security: SOAP Message Security 1", "authors": ["OASI"]}, {"title": "Elyjah: A security analyzer for Java implementations of communications protocols", "authors": ["O'Shea"]}, {"title": "Efficient and timely mutual authentication", "authors": ["Otway"]}, {"title": "AGVI -- automatic generation, verification, and implementation of security protocols", "authors": ["Perrig", " Song"]}, {"title": "Spi2Java: automatic cryptographic protocol Java code generation from spi calculus", "authors": ["Pozza", " Sisto"]}, {"title": "Logical relations for encryption", "authors": ["Sumii"]}, {"title": "A bisimulation for dynamic sealing", "authors": ["Sumii"]}, {"title": "SOAP Version 1", "authors": []}, {"title": "Web Services Addressing (WS-Addressing)", "authors": []}, {"title": "A semantic model for authentication protocols", "authors": ["Woo"]}]},
{"title": "Revisiting coroutines", "time": "February 2009", "keyword": ["Programming Languages and Systems"], "abstract": "This article advocates the revival of coroutines as a convenient general control abstraction. After proposing a new classification of coroutines, we introduce the concept of full asymmetric coroutines and provide a precise definition for it through an operational semantics. We then demonstrate that full coroutines have an expressive power equivalent to one-shot continuations and one-shot delimited continuations. We also show that full asymmetric coroutines and one-shot delimited continuations have many similarities, and therefore present comparable benefits. Nevertheless, coroutines are easier implemented and understood, especially in the realm of procedural languages.\n", "author": [{"name": "Ana L\u00facia De Moura", "affiliation": "Catholic University of Rio de Janeiro (PUC--Rio), Rio de Janeiro, RJ"}, {"name": "Roberto Ierusalimschy", "affiliation": "Catholic University of Rio de Janeiro (PUC--Rio), Rio de Janeiro, RJ"}, {"name": "Ana L\u00facia De Moura", "affiliation": "Catholic University of Rio de Janeiro (PUC--Rio), Rio de Janeiro, RJ"}, {"name": "Roberto Ierusalimschy", "affiliation": "Catholic University of Rio de Janeiro (PUC--Rio), Rio de Janeiro, RJ"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "47", "references": [{"title": "Cooperative task management without manual stack management", "authors": ["Adya", " Howell", " Theimer", " Bolosky"]}, {"title": "Why events are a bad idea (for high-concurrency servers)", "authors": ["Behren", " Condit"]}, {"title": "Simula Begin", "authors": ["Birtwistle", " Dahl", " Myhrhaug"]}, {"title": "Representing control in the presence of one-shot continuations", "authors": ["Bruggeman", " Waddell"]}, {"title": "Programming in Prolog", "authors": ["Clocksin"]}, {"title": "Rfc 31: Subroutines: Co-routines", "authors": ["Conway"]}, {"title": "Design of a separable transition-diagram compiler", "authors": ["Conway"]}, {"title": "Hierarchical program structures", "authors": ["Dahl", " Dijkstra"]}, {"title": "Abstracting control", "authors": ["Danvy"]}, {"title": "Engines from continuations", "authors": ["Dybvig"]}, {"title": "Transliterating Prolog into Scheme", "authors": ["Felleisen"]}, {"title": "The theory and practice of first-class prompts", "authors": ["Felleisen"]}, {"title": "On the expressive power of programming languages", "authors": ["Felleisen"]}, {"title": "Control operators, the SECD-machine, and the \u03bb-calculus", "authors": ["Felleisen"]}, {"title": "The Icon Programming Language", "authors": ["Griswold"]}, {"title": "Typing first-class continuations in ML", "authors": ["Harper", " Duba", " Harper"]}, {"title": "Logic continuations", "authors": ["Haynes"]}, {"title": "Abstracting timed preemption with engines", "authors": ["Haynes"]}, {"title": "Obtaining coroutines with continuations", "authors": ["Haynes", " Friedman"]}, {"title": "Embedding continuations in procedural objects", "authors": ["Haynes"]}, {"title": "Continuations and concurrency", "authors": ["Hieb"]}, {"title": "Subcontinuations", "authors": ["Hieb", " Dybvig"]}, {"title": "Programming in Lua", "authors": ["Ierusalimschy"]}, {"title": "Some proofs about coroutines", "authors": ["Ierusalimschy"]}, {"title": "Lua\u2014An extensible extension language", "authors": ["Ierusalimschy", " Figueiredo"]}, {"title": "Stores and partial continuations as first-class objects in a language and its environment", "authors": ["Johnson"]}, {"title": "Revised", "authors": ["Kelsey", " Clinger"]}, {"title": " ", "authors": []}, {"title": "The Art of Computer Programming, Volume 1, Fundamental Algorithms", "authors": ["Knuth"]}, {"title": "Threads yield continuations", "authors": ["Kumar", " Bruggeman"]}, {"title": "Abstraction mechanisms in CLU", "authors": ["Liskov", " Snyder", " Atkinson"]}, {"title": "Coroutines: A Programming Methodology, a Language Design and an Implementation", "authors": ["Marlin"]}, {"title": "A coroutine mechanism for BCPL", "authors": ["Moody"]}, {"title": "Coroutines in Lua", "authors": ["Moura", " Rodriguez"]}, {"title": "Iteration abstraction in Sather", "authors": ["Murer", " Omohundro", " Stoutamire"]}, {"title": "Coroutine behaviour and implementation", "authors": ["Pauli"]}, {"title": "A dynamic extent control operator for partial continuations", "authors": ["Queinnec"]}, {"title": "Advanced Windows, 3rd ed", "authors": ["Richter"]}, {"title": "PEP 255: Simple generators", "authors": ["Schemenauer", " Peters"]}, {"title": "Scheme fair threads", "authors": ["Serrano", " Boussinot"]}, {"title": "Handling control", "authors": ["Sitaram"]}, {"title": "Models of control and their implications for progamming language design", "authors": ["Sitaram"]}, {"title": "Scheme and the Art of Programming", "authors": ["Springer"]}, {"title": "Continuations and stackless Python", "authors": ["Tismer"]}, {"title": "Continuation-Based multiprocessing", "authors": []}, {"title": "Relating models of backtracking", "authors": []}, {"title": "Programming in Modula-2, 3rd, corrected ed", "authors": ["Wirth"]}]},
{"title": "Expressive and modular predicate dispatch for Java", "time": "February 2009", "keyword": ["Programming Languages and Systems"], "abstract": " is an object-oriented (OO) language mechanism for determining the method implementation to be invoked upon a message send. With predicate dispatch, each method implementation includes a predicate guard specifying the conditions under which the method should be invoked, and logical implication of predicates determines the method overriding relation. Predicate dispatch naturally unifies and generalizes several common forms of dynamic dispatch, including traditional OO dispatch, multimethod dispatch, and functional-style pattern matching. Unfortunately, prior languages supporting predicate dispatch have had several deficiencies that limit the practical utility of this language feature.\nWe describe JPred, a backward-compatible extension to Java supporting predicate dispatch. While prior languages with predicate dispatch have been extensions to toy or nonmainstream languages, we show how predicate dispatch can be naturally added to a traditional OO language. While prior languages with predicate dispatch have required the whole program to be available for typechecking and compilation, JPred retains Java's modular typechecking and compilation strategies. While prior languages with predicate dispatch have included special-purpose algorithms for reasoning about predicates, JPred employs general-purpose, off-the-shelf decision procedures. As a result, JPred's type system is more flexible, allowing several useful programming idioms that are spuriously rejected by those other languages. After describing the JPred language informally, we present an extension to Featherweight Java that formalizes the language and its modular type system, which we have proven sound. Finally, we discuss two case studies that illustrate the practical utility of JPred, including its use in the detection of several errors.\n", "author": [{"name": "Todd Millstein", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Christopher Frost", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Jason Ryder", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Alessandro Warth", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Todd Millstein", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Christopher Frost", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Jason Ryder", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Alessandro Warth", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "18", "references": [{"title": "Revised report on the algorithmic language Scheme", "authors": ["Abelson", " Dybvig", " Haynes", " Rozas", " IV", " Friedman", " Kohlbecker", " Bartley", " Halstead", " Oxley", " Sussman", " Brooks", " Hanson", " Pitman"]}, {"title": "Static type checking of multi-methods", "authors": ["Agrawal", " DeMichiel"]}, {"title": "The Java Programming Language, 4th ed", "authors": ["Arnold", " Gosling"]}, {"title": "Alias-Free parameters in C for better reasoning and optimization", "authors": ["Assaad"]}, {"title": "CVC Lite: A new implementation of the cooperating validity checker", "authors": ["Barrett"]}, {"title": "Alur and D", "authors": [" International Conference on Computer Aided Verification (CA"]}, {"title": "Half &amp; Half: Multiple dispatch and retroactive abstraction for Java", "authors": ["Baumgartner", " Jansche"]}, {"title": "CDuce: An XML-centric general-purpose language", "authors": ["Benzaken", " Castagna"]}, {"title": "CommonLoops: Merging Lisp and object-oriented programming", "authors": ["Bobrow", " Kahn", " Kiczales", " Masinter", " Stefik"]}, {"title": "Parasitic methods: Implementation of multi-methods for Java", "authors": ["Boyl"]}, {"title": "eXtensible markup language (XML) 1", "authors": ["Bray", " Paoli", " Sperberg-McQueen", " Maler"]}, {"title": "Covariance and contravariance: Conflict without a cause", "authors": ["Castagna"]}, {"title": "Object-Oriented Programming: A Unified Foundation", "authors": ["Castagna"]}, {"title": "A calculus for overloaded functions with subtyping", "authors": ["Castagna", " Ghelli"]}, {"title": "Object-Oriented multi-methods in Cecil", "authors": ["Chambers"]}, {"title": "Predicate classes", "authors": ["Chambers"]}, {"title": "The Cecil language specification and rationale: Version 2", "authors": ["Chambers"]}, {"title": "Efficient multiple and predicate dispatching", "authors": ["Chambers"]}, {"title": "MultiJava: Design, implementation, and evaluation of a Java-compatible language supporting modular open classes and symmetric multiple dispatch", "authors": ["Clifton"]}, {"title": "MultiJava: Modular open classes and symmetric multiple dispatch for Java", "authors": ["Clifton", " Leavens", " Chambers"]}, {"title": "Multijava: Design rationale, compiler implementation, and applications", "authors": ["Clifton", " Millstein", " Leavens"]}, {"title": "2009", "authors": []}, {"title": "Simplify: A theorem prover for program checking", "authors": ["Detlefs", " Nelson"]}, {"title": "Eclipse home page", "authors": ["Eclipse"]}, {"title": "Matching objects with patterns", "authors": ["Emir", " Odersky"]}, {"title": "Predicate dispatching: A unified theory of dispatch", "authors": ["Ernst", " Kaplan"]}, {"title": "Theorem proving using lazy proof explication", "authors": ["Flanagan", " Joshi", " Ou"]}, {"title": "Featherweight JPred", "authors": ["Frost"]}, {"title": "Modularly typesafe interface dispatch in JPred", "authors": ["Frost"]}, {"title": "CLOS: Integrating object-oriented and functional programming", "authors": ["Gabriel", " White"]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": ["Gamma", " Helm", " Johnson"]}, {"title": "Regular object types", "authors": ["Gapeyev"]}, {"title": "The NesC language: A holistic approach to networked embedded systems", "authors": ["Gay", " Levis", " von Behren", " Welsh", " Brewer"]}, {"title": "The Java Language Specification 3rd Ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "System support for pervasive applications", "authors": ["Grimm"]}, {"title": "System support for pervasive applications", "authors": ["Grimm", " Davis", " Lemar", " Macbeth", " Swanson", " Anderson", " Bershad", " Borriello", " Gribble"]}, {"title": "System architecture directions for networked sensors", "authors": ["Hill", " Szewczyk", " Woo", " Hollar", " Culler"]}, {"title": "Integrating functional and object-oriented programming", "authors": ["Hosking", " Hamer"]}, {"title": "Featherweight Java: a minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "A simple technique for handling multiple polymorphism", "authors": ["Ingalls"]}, {"title": "Aspect-Oriented programming", "authors": ["Kiczales", " Lamping", " Menhdhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "ACL \u2014 Eliminating parameter aliasing with dynamic dispatch", "authors": ["Leavens"]}, {"title": "HydroJ: Object-Oriented pattern matching for evolvable distributed systems", "authors": ["Lee", " LaMarca"]}, {"title": "JMatch: Iterable abstract pattern matching for Java", "authors": ["Liu"]}, {"title": "Reconciling software extensibility with modular program reasoning", "authors": ["Millstein"]}, {"title": "Practical predicate dispatch", "authors": ["Millstein"]}, {"title": "Modular typechecking for hierarchically extensible datatypes and functions", "authors": ["Millstein", " Bleckner"]}, {"title": "Modular typechecking for hierarchically extensible datatypes and functions", "authors": ["Millstein", " Bleckner"]}, {"title": "Modular statically typed multimethods", "authors": ["Millstein"]}, {"title": "The Definition of Standard ML (Revised)", "authors": ["Milner", " Tofte", " Harper"]}, {"title": "Object-Oriented programming with Flavors", "authors": ["Moon"]}, {"title": "Simplification by cooperating decision procedures", "authors": ["Nelson"]}, {"title": "Polyglot: An extensible compiler framework for Java", "authors": ["Nystrom", " Clarkson"]}, {"title": "one", "authors": ["oneworld"]}, {"title": "Incremental programming with extensible decisions", "authors": ["Orleans"]}, {"title": "Flash: An efficient and portable Web server", "authors": ["Pai", " Druschel"]}, {"title": "Polyglot for Java 5 homepage", "authors": ["Polyglot for Jav"]}, {"title": "Objective ML: An effective object-oriented extension of ML", "authors": ["R\u00e9my"]}, {"title": "OOMatch: Pattern matching as dispatch in Java", "authors": ["Richard"]}, {"title": "Purity and side effect analysis for Java programs", "authors": ["Salcianu"]}, {"title": "Common Lisp: The Language, 2nd Ed", "authors": []}, {"title": "The C++ Programming Language: Third Edition", "authors": ["Stroustrup"]}, {"title": "Predicate dispatching in the common lisp object system", "authors": ["Ucko"]}, {"title": "SEDA: An Architecture for well-conditioned, scalable internet services", "authors": ["Welsh", " Culler"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}]},
{"title": "The computational power and complexity of constraint handling rules", "time": "February 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Constraint Handling Rules (CHR) is a high-level rule-based programming language which is increasingly used for general-purpose programming. We introduce the CHR machine, a model of computation based on the operational semantics of CHR. Its computational power and time complexity properties are compared to those of the well-understood Turing machine and Random Access Memory machine. This allows us to prove the interesting result that every algorithm can be implemented in CHR with the best known time and space complexity. We also investigate the practical relevance of this result and the constant factors involved. Finally we expand the scope of the discussion to other (declarative) programming languages.\n", "author": [{"name": "Jon Sneyers", "affiliation": "K.U.Leuven, Heverlee, Belgium"}, {"name": "Tom Schrijvers", "affiliation": "K.U.Leuven, Heverlee, Belgium"}, {"name": "Bart Demoen", "affiliation": "K.U.Leuven, Heverlee, Belgium"}, {"name": "Jon Sneyers", "affiliation": "K.U.Leuven, Heverlee, Belgium"}, {"name": "Tom Schrijvers", "affiliation": "K.U.Leuven, Heverlee, Belgium"}, {"name": "Bart Demoen", "affiliation": "K.U.Leuven, Heverlee, Belgium"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "20", "references": [{"title": "An algorithm for the organization of information", "authors": ["Adelson-Velsky"]}, {"title": "The Design and Analysis of Computer Algorithms", "authors": ["Aho", " Hopcroft"]}, {"title": "Shortest paths algorithms: Theory and experimental evaluation", "authors": ["Cherkassky", " Goldberg"]}, {"title": "Maude: Specification and programming in rewriting logic", "authors": ["Clavel", " Dur\u00e1n", " Eker", " Lincoln", " "]}, {"title": "Programming in Prolog", "authors": ["Clocksin"]}, {"title": "The correspondence between the Logical Algorithms language and CHR", "authors": ["De Koninck", " Schrijvers"]}, {"title": "A note on two problems in connexion with graphs", "authors": ["Dijkstra"]}, {"title": "Compilation of Constraint Handling Rules", "authors": ["Duck"]}, {"title": "Accurate functional dependency analysis for Constraint Handling Rules", "authors": ["Duck"]}, {"title": "The refined operational semantics of Constraint Handling Rules", "authors": ["Duck", " Stuckey", " Garc\u00eda de la B"]}, {"title": "Observable confluence for Constraint Handling Rules", "authors": ["Duck", " Stuckey"]}, {"title": "Associative-Commutative rewriting on large terms", "authors": ["Eker"]}, {"title": "Rete: A fast algorithm for the many pattern/many object pattern match problem", "authors": ["Forgy"]}, {"title": "Fibonacci heaps and their uses in improved network optimization algorithms", "authors": ["Fredman"]}, {"title": "Jess in Action: Java Rule-Based Systems", "authors": ["Friedman-Hill"]}, {"title": "Constraint simplification rules", "authors": ["Fr\u00fchwirth"]}, {"title": "Theory and practice of Constraint Handling Rules", "authors": ["Fr\u00fchwirth"]}, {"title": "As time goes by II: More automatic complexity analysis of concurrent rule programs", "authors": ["Fr\u00fchwirth"]}, {"title": "As time goes by: Automatic complexity analysis of concurrent rule programs", "authors": ["Fr\u00fchwirth"]}, {"title": "Constraint Handling Rules", "authors": ["Fr&uhuml;wirth"]}, {"title": "Essentials of Constraint Programming", "authors": ["Fr\u00fchwirth"]}, {"title": "Logical algorithms", "authors": ["Ganzinger"]}, {"title": "Expert Systems: Principles and Programming", "authors": ["Giarratano"]}, {"title": "On the computational complexity of algorithms", "authors": ["Hartmanis"]}, {"title": "CHR reference manual", "authors": ["Holzbaur"]}, {"title": "Compiling constraint candling rules into prolog with attributed variables", "authors": ["Holzbaur"]}, {"title": "Optimizing compilation of constraint handling rules in HAL", "authors": ["Holzbaur", " Garc\u00eda de la B", " Stuckey"]}, {"title": "Introduction to Automata Theory, Languages, and Computation", "authors": ["Hopcroft", " Motwani"]}, {"title": "A history of Haskell: Being lazy with class", "authors": ["Hudak", " Hughes", " Jones"]}, {"title": "Programming with Constraints: An Introduction", "authors": ["Marriott"]}, {"title": "Compile-Time garbage collection for the declarative language Mercury", "authors": ["Mazur"]}, {"title": "On the performance of lazy matching in production systems", "authors": ["Miranker", " Brant", " Lofaso"]}, {"title": "PATRICIA\u2014Practical algorithm to retrieve information coded in alphanumeric", "authors": ["Morrison"]}, {"title": "Fast mergeable integer maps", "authors": ["Okasaki"]}, {"title": "Models of Computation", "authors": ["Savage"]}, {"title": "The influence of the machine model on computational complexity", "authors": ["Savitch"]}, {"title": "Analyses, optimizations and extensions of constraint handling rules", "authors": ["Schrijvers"]}, {"title": "The K", "authors": ["Schrijvers"]}, {"title": "Optimal union-find in constraint handling rules", "authors": ["Schrijvers"]}, {"title": "Turing-complete subclasses of CHR", "authors": ["Sneyers"]}, {"title": "Generalized CHR machines", "authors": ["Sneyers"]}, {"title": "Dijkstra's algorithm with Fibonacci heaps: An executable description in CHR", "authors": ["Sneyers", " Schrijvers"]}, {"title": "Memory reuse for CHR", "authors": ["Sneyers", " Schrijvers"]}, {"title": "As time goes by: Constraint handling rules\u2014A survey of CHR research between 1998 and 2007", "authors": ["Sneyers", " Van Weert", " De Koninck"]}, {"title": "The execution algorithm of Mercury, An efficient purely declarative logic programming language", "authors": ["Somogyi", " Henderson"]}, {"title": "Worst-Case analysis of set union algorithms", "authors": ["Tarjan"]}, {"title": "On computable numbers, with an application to the Entscheidungsproblem", "authors": ["Turing"]}, {"title": "Machine models and simulations", "authors": ["van Emde Boas"]}, {"title": "K", "authors": ["Van Weert", " Schrijvers"]}, {"title": "Extending CHR with negation as absence", "authors": ["Van Weert", " Sneyers", " Schrijvers"]}, {"title": "CCHR: The fastest CHR implementation, in C", "authors": ["Wuille", " Schrijvers"]}]},
{"title": "Deferring design pattern decisions and automating structural pattern changes using a design-pattern-based programming system", "time": "April 2009", "keyword": ["Programming Languages and Systems"], "abstract": "In the design phase of software development, the designer must make many fundamental design decisions concerning the architecture of the system. Incorrect decisions are relatively easy and inexpensive to fix if caught during the design process, but the difficulty and cost rise significantly if problems are not found until after coding begins. Unfortunately, it is not always possible to find incorrect design decisions during the design phase. To reduce the cost of expensive corrections, it would be useful to have the ability to defer some design decisions as long as possible, even into the coding stage. Failing that, tool support for automating design changes would give more freedom to revisit and change these decisions when needed. This article shows how a design-pattern-based programming system based on \n can support the deferral of design decisions where possible, and automate changes where necessary. A generative design pattern is a parameterized pattern form that is capable of generating code for different versions of the underlying design pattern. We demonstrate these ideas in the context of a parallel application written with the CO\nP\nS pattern-based parallel programming system. We show that CO\nP\nS can defer the choice of execution architecture (shared-memory or distributed-memory), and can automate several changes to the application structure that would normally be daunting to tackle late in the development cycle. Although we have done this work with a pattern-based parallel programming system, it can be generalized to other domains.\n", "author": [{"name": "Steve MacDonald", "affiliation": "University of Waterloo, ON, Canada"}, {"name": "Kai Tan", "affiliation": "University of Alberta, Edmonton, AL, Canada"}, {"name": "Jonathan Schaeffer", "affiliation": "University of Alberta, Edmonton, AL, Canada"}, {"name": "Duane Szafron", "affiliation": "University of Alberta, Edmonton, AL, Canada"}, {"name": "Steve MacDonald", "affiliation": "University of Waterloo, ON, Canada"}, {"name": "Kai Tan", "affiliation": "University of Alberta, Edmonton, AL, Canada"}, {"name": "Jonathan Schaeffer", "affiliation": "University of Alberta, Edmonton, AL, Canada"}, {"name": "Duane Szafron", "affiliation": "University of Alberta, Edmonton, AL, Canada"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "5", "references": [{"title": "Core J2EE Patterns: Best Practices and Design Strategies, Second ed", "authors": ["Alur", " Crupi"]}, {"title": "TreadMarks: Shared memory computing on networks of workstations", "authors": ["Amza", " Cox", " Dwarkadas", " Keleher", " Lu", " Rajamony", " Yu"]}, {"title": "Evaluating generative parallel design patterns", "authors": ["Anvik"]}, {"title": "Generating parallel programs from the wavefront design pattern", "authors": ["Anvik", " MacDonald", " Szafron", " Schaeffer", " Bromling"]}, {"title": "http://jakarta", "authors": ["Apache Jakarta Project"]}, {"title": "Design pattern rationale graphs: Linking design to source", "authors": ["Baniassad", " Murphy"]}, {"title": "Design patterns as language constructs", "authors": ["Bosch"]}, {"title": "Meta--programming with parallel design patterns", "authors": ["Bromling"]}, {"title": "Pattern-based parallel programming", "authors": ["Bromling", " MacDonald", " Anvik", " Schaeffer", " Szafron"]}, {"title": "Explicit programming", "authors": ["Bryant", " Catton", " De Volder"]}, {"title": "Automatic code generation from design patterns", "authors": ["Budinsky", " Finnie", " Vlissides"]}, {"title": "Parallelisation of sequential programs by invasive composition and aspect weaving", "authors": ["Chalabine"]}, {"title": "Crosscutting concerns in parallelization by invasive software composition and aspect weaving", "authors": ["Chalabine"]}, {"title": "A formal framework for automated round-trip software engineering in static aspect weaving and transformations", "authors": ["Chalabine"]}, {"title": "RMA: A pattern--based J2EE development tool", "authors": ["Chen"]}, {"title": "RoadMapAssembler: A new pattern-based J2EE development tool", "authors": ["Chen"]}, {"title": "Exploiting roles and responsibilities to generate code in a distributed design-pattern-based programming system", "authors": ["Chen"]}, {"title": "Abstractions for dynamic data distribution", "authors": ["Dietz", " Chamberlain"]}, {"title": "Types and code generation for use in generative design patterns", "authors": ["Earl"]}, {"title": "Tool support for object--oriented patterns", "authors": ["Florijn", " Meijers"]}, {"title": "Design Patterns: Elements of Reusable Object--Oriented Software", "authors": ["Gamma", " Helm", " Johnson"]}, {"title": "PVM: Parallel Virtual Machine: A Users' Guide and Tutorial for Networked Parallel Computing", "authors": ["Geist", " Beguelin", " Dongarra", " Jiang", " Manchek"]}, {"title": "Building parallel applications using design patterns", "authors": ["Goswami", " Singh"]}, {"title": "From design patterns to parallel architectural skeletons", "authors": ["Goswami", " Singh"]}, {"title": "Developing network server applications using generative design patterns", "authors": ["Guo"]}, {"title": "Documenting maintenance tasks using maintenance patterns", "authors": ["Hammouda"]}, {"title": "A pattern-based J2EE application development environment", "authors": ["Hammouda"]}, {"title": "Adaptable concern-based framework specialization in UML", "authors": ["Hammouda", " Koskinen", " Pussinen", " Katara"]}, {"title": "Design pattern implementation in Java and AspectJ", "authors": ["Hannemann"]}, {"title": "Using AspectJ to separate concerns in parallel scientific Java code", "authors": ["Harbulot"]}, {"title": "Evaluation of tool support for architectural evolution", "authors": ["Jansen"]}, {"title": "Software architecture as a set of architectural design decisions", "authors": ["Jansen"]}, {"title": "Designing reusable classes", "authors": ["Johnson"]}, {"title": "An overview of AspectJ", "authors": ["Kiczales", " Hilsdale", " Hugunin", " Kersten", " Palm"]}, {"title": "Aspect-oriented programming", "authors": ["Kiczales", " Lamping", " Mendhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "Architectural modifications to deployed software", "authors": ["Klusener", " L\u00e4mmel"]}, {"title": "Implementing scoped behaviour for flexible distributed data sharing", "authors": []}, {"title": "From patterns to frameworks to parallel programs", "authors": ["MacDonald"]}, {"title": "From patterns to frameworks to parallel programs", "authors": ["MacDonald", " Anvik", " Bromling", " Schaeffer", " Szafron"]}, {"title": "Object-oriented pattern--based parallel programming with automatically generated frameworks", "authors": ["MacDonald", " Szafron"]}, {"title": "Generative design patterns", "authors": ["MacDonald", " Szafron", " Schaeffer", " Anvik", " Bromling"]}, {"title": "Generating parallel program frameworks from parallel design patterns", "authors": ["MacDonald", " Szafron", " Schaeffer"]}, {"title": "Patterns for Parallel Programming", "authors": ["Mattson", " S"]}, {"title": "Pattern-based AI scripting using ScriptEase", "authors": ["McNaughton", " Redford", " Schaeffer"]}, {"title": "Is MPI suitable for a generative design-pattern system&quest; Parall", "authors": ["Mehta", " Amaral"]}, {"title": "Separating features in source code: An exploratory study", "authors": ["Murphy", " Lai", " Walker"]}, {"title": "Eclipse platform technical overview", "authors": ["Object Technology International", " Inc"]}, {"title": "Code generation using JavaDoc", "authors": ["Pollack"]}, {"title": "Object-Oriented and Classical Software Engineering, Seventh ed", "authors": ["Schach"]}, {"title": "The enterprise model for developing distributed applications", "authors": ["Schaeffer", " Szafron", " Lobe"]}, {"title": "Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Objects", "authors": ["Schmidt", " Stal", " Rohnert"]}, {"title": "Transformational pattern system\u2014some assembly required", "authors": ["Siikarla"]}, {"title": "Experience with parallel programming using code templates", "authors": ["Singh", " Schaeffer"]}, {"title": "Design patterns for parallel programming", "authors": ["Siu", " Simone", " Goswami"]}, {"title": "MPI: The Complete Reference", "authors": ["Snir", " Otto", " Hess-Lederman", " Walker"]}, {"title": "Jini architectural overview", "authors": ["Sun Microsystems Inc"]}, {"title": "Pattern-based parallel programming in a distributed memory environment", "authors": ["Tan"]}, {"title": "Using generative design patterns to generate parallel code for a distributed memory environment", "authors": ["Tan", " Szafron", " Schaeffer", " Anvik"]}, {"title": "Design erosion: Problems and causes", "authors": ["van Gurp"]}, {"title": "(re)engineering with object-oriented design patterns", "authors": ["van Winsen"]}, {"title": "Creating framework specialization instructions for tool environments", "authors": ["Viljamaa"]}, {"title": "Pattern Hatching: Design Patterns Applied", "authors": ["Vlissides"]}, {"title": "Making patterns explicit with metaprogramming", "authors": ["von Dincklage"]}, {"title": "Reaction--diffusion textures", "authors": ["Witkin"]}]},
{"title": "Ranking functions for size-change termination", "time": "April 2009", "keyword": ["Programming Languages and Systems"], "abstract": "This article explains how to construct a ranking function for any program that is proved terminating by \n.\nThe \u201cprinciple of size-change termination\u201d for a first-order functional language with well-ordered data is intuitive: A program terminates on all inputs, if every infinite call sequence (following program control flow) would imply an infinite descent in some data values. Size-change analysis is based on information associated with the subject program's call-sites. This information indicates, for each call-site, strict or weak data decreases observed as a computation traverses the call-site. The set \n of call-site sequences for which the size-changes imply infinite descent is \u03c9-regular, as is the set \n of infinite call-site sequences following the program flowchart. If \n \u2286 \n (a decidable problem), every infinite call sequence would imply infinite descent in a well-ordering\u2014an impossibility\u2014so the program must terminate.\nThis analysis accounts for termination arguments applicable to different call-site sequences, without indicating a ranking function for the program's termination. In this article, it is explained how one can be constructed whenever size-change analysis succeeds. The constructed function has an unexpectedly simple form; it is expressed using only min, max, and lexicographic tuples of parameters and constants. In principle, such functions can be tested to determine whether size-change analysis will be successful. As a corollary, if a program verified as terminating performs only multiply recursive operations, the function that it computes is multiply recursive.\nThe ranking function construction is connected with the determinization of the B\u00fcchi automaton for \n. While the result is not practical, it is of value in addressing the scope of size-change reasoning. This reasoning has been applied broadly, in the analysis of functional and logic programs, as well as term rewrite systems.\n", "author": [{"name": "Chin Soon Lee", "affiliation": "Max-Planck-Institut f\u00fcr Informatik, Saarbr\u00fccken, Germany"}, {"name": "Chin Soon Lee", "affiliation": "Max-Planck-Institut f\u00fcr Informatik, Saarbr\u00fccken, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Observations on Determinization of B\u00fcchi Automata", "authors": ["Althoff", " Thomas"]}, {"title": "Affine-based size-change termination", "authors": ["Anderson"]}, {"title": "The size-change termination principle on non well founded data types", "authors": ["Avery"]}, {"title": "General size-change termination and lexicographic descent", "authors": ["Ben-Amram"]}, {"title": "Program termination analysis in polynomial time", "authors": ["Ben-Amram"]}, {"title": "Testing for termination with monotonicity constraints", "authors": ["Codish"]}, {"title": "Introduction to Algorithms", "authors": ["Cormen", " Leiserson", " Rivest"]}, {"title": "Proving termination with multiset orderings", "authors": ["Dershowitz"]}, {"title": "A simple implementation of the size-change principle", "authors": ["Frederiksen"]}, {"title": "Automatic runtime analysis for first order functional programs", "authors": ["Frederiksen"]}, {"title": "Termination analysis and specialization-point insertion in off-line partial evaluation", "authors": ["Glenstrup"]}, {"title": "Termination analysis of the untyped lambda calculus", "authors": ["Jones"]}, {"title": "The size-change principle for program termination", "authors": ["Lee", " Jones"]}, {"title": "Termination Analysis with Calling Context Graphs", "authors": ["Manolios"]}, {"title": "Simulating Alternating Tree Automata by Nondeterministic Automata: New Results and New Proofs of the Theorems of Rabin, McNaughton and Safra", "authors": ["Muller"]}, {"title": "On the Complexity of \u03c9-Automata", "authors": ["Safra"]}, {"title": "Size-change termination for term rewriting", "authors": ["Thiemann"]}, {"title": "An automata-theoretic approach to linear temporal logic", "authors": ["Vardi"]}, {"title": "Detecting termination using size-change in parameter values", "authors": ["Wahlstedt"]}]},
{"title": "Separation and information hiding", "time": "April 2009", "keyword": ["Programming Languages and Systems"], "abstract": "We investigate proof rules for information hiding, using the formalism of separation logic. In essence, we use the separating conjunction to partition the internal resources of a module from those accessed by the module's clients. The use of a logical connective gives rise to a form of dynamic partitioning, where we track the transfer of ownership of portions of heap storage between program components. It also enables us to enforce separation in the presence of mutable data structures with embedded addresses that may be aliased.\n", "author": [{"name": "Peter W. O'Hearn", "affiliation": "Queen Mary, University of London"}, {"name": "Hongseok Yang", "affiliation": "Queen Mary, University of London"}, {"name": "John C. Reynolds", "affiliation": "Carnegie Mellon University"}, {"name": "Peter W. O'Hearn", "affiliation": "Queen Mary, University of London"}, {"name": "Hongseok Yang", "affiliation": "Queen Mary, University of London"}, {"name": "John C. Reynolds", "affiliation": "Carnegie Mellon University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "27", "references": [{"title": "Reasoning about hierarchical storage", "authors": ["Ahmed", " Jia"]}, {"title": "State based ownership, reentrance, and encapsulation", "authors": ["Banerjee"]}, {"title": "Verification of object-oriented programs with invariants", "authors": ["Barnett", " DeLine", " Fahndrich", " Leino"]}, {"title": "Abstracting allocation", "authors": ["Benton"]}, {"title": "BI-hyperdoctrines, higher-order separation logic, and abstraction", "authors": ["Biering", " Birkedal"]}, {"title": "Semantics of separation-logic typing and higher-order frame rules", "authors": ["Birkedal", " Torp-Smith"]}, {"title": "Relational parametricity and separation logic", "authors": ["Birkedal"]}, {"title": "Proving pointer programs in Hoare logic", "authors": ["Bornat"]}, {"title": "Permission accounting in separation logic", "authors": ["Bornat", " Calcagno", " O'Hearn"]}, {"title": "The Origin of Concurrent Programming", "authors": ["Brinch Hansen", " Ed"]}, {"title": "A semantics of concurrent separation logic", "authors": ["Brookes"]}, {"title": "Simple ownership types for object containment", "authors": ["Clarke", " Noble"]}, {"title": "Soundness and completeness of an axiomatic system for program verification", "authors": ["Cook"]}, {"title": "Encapsulating objects with confined types", "authors": ["Grothoff", " Palsberg"]}, {"title": "Procedures and parameters: An axiomatic approach", "authors": ["Hoare"]}, {"title": "Proof of correctness of data representations", "authors": ["Hoare"]}, {"title": "Towards a theory of parallel programming", "authors": ["Hoare"]}, {"title": "Monitors: An operating system structuring concept", "authors": ["Hoare"]}, {"title": "Islands: aliasing protection in object-oriented languages", "authors": ["Hogg"]}, {"title": "BI as an assertion language for mutable data structures", "authors": ["Isthiaq"]}, {"title": "The C Programming Language", "authors": ["Kernighan"]}, {"title": "A modular verification of the subject-observer pattern via higher-order separation logic", "authors": ["Krishnaswami", " Aldrich"]}, {"title": "Object invariants in dynamic contexts", "authors": ["Leino"]}, {"title": "Data abstraction and information hiding", "authors": ["Leino"]}, {"title": "Abstract types have existential types", "authors": ["Mitchell"]}, {"title": "The specification statement", "authors": ["Morgan"]}, {"title": "A theoretical basis for stepwise refinement and the programming calculus", "authors": ["Morris"]}, {"title": "Modular specification and verification techniques for object-oriented software components", "authors": ["M\u00fcller"]}, {"title": "Polymorphism and separation in Hoare type theory", "authors": ["Nanevski", " Morrisett"]}, {"title": "On assertion-based encapsulation for object invariants and simulations", "authors": ["Naumann"]}, {"title": "Friends need a bit more: Maintaining invariants over shared state", "authors": ["Naumann"]}, {"title": "Towards imperative modules: Reasoning about invariants and shared of mutable state", "authors": ["Naumann"]}, {"title": "Local reasoning about programs that alter data structures", "authors": ["O'Hearn", " Reynolds"]}, {"title": "Resources, concurrency and local reasoning", "authors": ["O'Hearn"]}, {"title": "Separation and information hiding", "authors": ["O'Hearn", " Yang"]}, {"title": "Local reasoning for Java", "authors": ["Parkinson"]}, {"title": "Class invariants: the end of the road&quest; Position paper presented at 3rd International Workshop on Aliasing, Confinement, and Ownership in Object-Oriented Programming (IWACO)", "authors": ["Parkinson"]}, {"title": "Separation logic and abstraction", "authors": ["Parkinson"]}, {"title": "Variables as resource in Hoare logics", "authors": ["Parkinson", " Bornat"]}, {"title": "Information distribution aspects of design methodology", "authors": ["Parnas"]}, {"title": "On the criteria to be used in decomposing systems into modules", "authors": ["Parnas"]}, {"title": "A realizability model of impredicative Hoare type theory", "authors": ["Peterson", " Birkedal", " Nanevski"]}, {"title": "Pisa notes (on domain theory)", "authors": ["Plotkin"]}, {"title": "Types, abstraction and parametric polymorphism", "authors": ["Reynolds"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Semantics of partial correctness formalisms", "authors": ["Schwarz"]}, {"title": "Generic commands\u2014a tool for partial correctness formalisms", "authors": ["Schwarz"]}]},
{"title": "Operational semantics for multi-language programs", "time": "April 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Interoperability is big business, a fact to which .NET, the JVM, and COM can attest. Language designers are well aware of this, and they are designing programming languages that reflect it\u2014for instance, SML.NET, F#, Mondrian, and Scala all treat interoperability as a central design feature. Still, current multi-language research tends not to focus on the semantics of these features, but only on how to implement them efficiently. In this article, we attempt to rectify that by giving a technique for specifying the operational semantics of a multi-language system as a composition of the models of its constituent languages. Our technique abstracts away the low-level details of interoperability like garbage collection and representation coherence, and lets us focus on semantic properties like type-safety, equivalence, and termination behavior. In doing so it allows us to adapt standard theoretical techniques such as subject-reduction, logical relations, and operational equivalence for use on multi-language systems. Generally speaking, our proofs of properties in a multi-language context are mutually referential versions of their single language counterparts.\nWe demonstrate our technique with a series of strategies for embedding a Scheme-like language into an ML-like language. We start by connecting very simple languages with a very simple strategy, and work our way up to languages that interact in sophisticated ways and have sophisticated features such as polymorphism and effects. Along the way, we prove relevant results such as type-soundness and termination for each system we present using adaptations of standard techniques.\nBeyond giving simple expressive models, our studies have uncovered several interesting facts about interoperability. For example, higher-order function contracts naturally emerge as the glue to ensure that interoperating languages respect each other's type systems. Our models also predict that the embedding strategy where foreign values are opaque is as expressive as the embedding strategy where foreign values are translated to corresponding values in the other language, and we were able to experimentally verify this behavior using PLT Scheme's foreign function interface.\n", "author": [{"name": "Jacob Matthews", "affiliation": "University of Chicago"}, {"name": "Robert Bruce Findler", "affiliation": "University of Chicago"}, {"name": "Jacob Matthews", "affiliation": "University of Chicago"}, {"name": "Robert Bruce Findler", "affiliation": "University of Chicago"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "44", "references": [{"title": "Dynamic typing in a statically typed language", "authors": ["Abadi", " Cardelli", " Pierce"]}, {"title": "Laziness without all the hard work", "authors": ["Barzilay"]}, {"title": "Foreign interface for PLT Scheme", "authors": ["Barzilay"]}, {"title": "SWIG: An easy to use tool for integrating scripting languages with C and C++", "authors": ["Beazley"]}, {"title": "Pointers, constraints, and typemaps", "authors": ["Beazley"]}, {"title": "Embedded interpreters", "authors": ["Benton"]}, {"title": "Interlanguage working without tears: Blending SML with Java", "authors": ["Benton"]}, {"title": "Adventures in interoperability: the SML", "authors": ["Benton", " Kennedy"]}, {"title": "No-longer-foreign: Teaching an ML compiler to speak C \u201cnatively\u201d", "authors": ["Blume"]}, {"title": "Amber", "authors": ["Cardelli"]}, {"title": "The Haskell 98 foreign function interface 1", "authors": ["Chakravarty"]}, {"title": "The Cecil language: Specification and rationale, version 3", "authors": ["Chambers"]}, {"title": "On the expressive power of programming languages", "authors": ["Felleisen"]}, {"title": "A syntactic theory of sequential control", "authors": ["Felleisen", " Friedman", " Kohlbecker"]}, {"title": "The revised report on the syntactic theories of sequential control and state", "authors": ["Felleisen"]}, {"title": "Contracts as pairs of projections", "authors": ["Findler"]}, {"title": "Contracts for higher-order functions", "authors": ["Findler"]}, {"title": "Calling Hell from Heaven and Heaven from Hell", "authors": ["Finne", " Leijen", " Meijer"]}, {"title": "A framework for interoperability", "authors": ["Fisher", " Pucella"]}, {"title": "Hybrid type checking", "authors": ["Flanagan"]}, {"title": "Checking type safety of foreign function calls", "authors": ["Furr"]}, {"title": "Checking type safety of foreign function calls", "authors": ["Furr"]}, {"title": "Proofs and Types", "authors": ["Girard", " Lafont"]}, {"title": "Typing a multi-language intermediate code", "authors": ["Gordon"]}, {"title": "Fine grained interoperability through mirrors and contracts", "authors": ["Gray", " Findler"]}, {"title": "Syntactic type abstraction", "authors": ["Grossman", " Morrisett"]}, {"title": "Dynamic typing: Syntax and proof theory", "authors": ["Henglein"]}, {"title": "Safe polymorphic type inference for a dynamically typed language: translating Scheme to ML", "authors": ["Henglein"]}, {"title": "The COMEL language", "authors": ["Ibrahim"]}, {"title": "Securing the ", "authors": ["Kennedy"]}, {"title": "Alice in the land of Oz - an interoperability-based implementation of a functional language on top of a relational language", "authors": ["Kornstaedt"]}, {"title": "Equivalence in functional languages with effects", "authors": ["Mason"]}, {"title": "Equation-preserving multi-language systems", "authors": ["Matthews"]}, {"title": "Parametric polymorphism through run-time sealing, or, theorems for low, low prices&excl; In Proceedings of the European Symposium on Programming (ESOP)", "authors": ["Matthews"]}, {"title": "Operational semantics for multi-language programs", "authors": ["Matthews"]}, {"title": "A visual environment for developing context-sensitive term rewriting systems", "authors": ["Matthews", " Findler", " Flatt"]}, {"title": "Scripting ", "authors": ["Meijer", " Perry"]}, {"title": "From Python to PLT Scheme", "authors": ["Meunier"]}, {"title": "An Introduction to Scala", "authors": ["Odersky", " Altherr", " Cremet", " Emir", " Micheloud", " Mihaylov", " Schinz", " Stenman"]}, {"title": "Semantics for communication primitives in an polymorphic language", "authors": ["Ohori"]}, {"title": "Relating cryptography and polymorphism", "authors": ["Pierce"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Dot-Scheme: A PLT Scheme FFI for the ", "authors": ["Pinto"]}, {"title": "LCF considered as a programming language", "authors": ["Plotkin"]}, {"title": "Towards a formalization for COM, part I: The primitive calculus", "authors": ["Pucella"]}, {"title": "Embedding an interpreted language using higher-order functions and types", "authors": ["Ramsey"]}, {"title": "Types, abstraction and parametric polymorphism", "authors": ["Reynolds"]}, {"title": "Reasoning about programs in continuation-passing style", "authors": ["Sabry"]}, {"title": "MysterX: A Scheme toolkit for building interactive applications with COM", "authors": ["Steckler"]}, {"title": "Logical relations for encryption", "authors": ["Sumii"]}, {"title": "A bisimulation for dynamic sealing", "authors": ["Sumii"]}, {"title": "Intensional interpretations of functionals of finite type I", "authors": ["Tait"]}, {"title": "Safe and principled language interoperation", "authors": ["Trifonov"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}, {"title": "Principals in programming languages", "authors": ["Zdancewic", " Grossman"]}]},
{"title": "Sequent calculi and abstract machines", "time": "May 2009", "keyword": ["Programming Languages and Systems"], "abstract": "We propose a sequent calculus derived from the \u03bb\u2015\u03bc\u03bc\u02dc-calculus of Curien and Herbelin that is expressive enough to directly represent the fine details of program evaluation using typical abstract machines. Not only does the calculus easily encode the usual components of abstract machines such as environments and stacks, but it can also simulate the transition steps of the abstract machine with just a constant overhead. Technically this is achieved by ensuring that reduction in the calculus always happens at a bounded depth from the root of the term. We illustrate these properties by providing \n of the Krivine (call-by-name) and the CEK (call-by-value) abstract machines in the calculus.\n", "author": [{"name": "Zena M. Ariola", "affiliation": "University of Oregon, Eugene, OR"}, {"name": "Aaron Bohannon", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Amr Sabry", "affiliation": "Indiana University, Bloomington, IN"}, {"name": "Zena M. Ariola", "affiliation": "University of Oregon, Eugene, OR"}, {"name": "Aaron Bohannon", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Amr Sabry", "affiliation": "Indiana University, Bloomington, IN"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "17", "references": [{"title": "Explicit substitutions", "authors": ["Abadi", " Cardelli", " Curien"]}, {"title": "A functional correspondence between evaluators and abstract machines", "authors": ["Ager", " Biernacki", " Danvy"]}, {"title": "Foundational proof-carrying code", "authors": ["Appel"]}, {"title": "A formal executable semantics of the JavaCard platform", "authors": ["Barthe", " Dufay", " Jakubiec", " Serpette"]}, {"title": "Confluence properties of weak and strong calculi of explicit substitutions", "authors": ["Curien", " Hardin"]}, {"title": "The duality of computation", "authors": ["Curien"]}, {"title": "A new deconstructive logic: Linear logic", "authors": ["Danos", " Joinet"]}, {"title": "A systematic study of functional language implementations", "authors": ["Douence"]}, {"title": "A syntactic theory of sequential control", "authors": ["Felleisen", " Friedman"]}, {"title": "Reasoning with continuations", "authors": ["Felleisen", " Friedman", " Kohlbecker"]}, {"title": "Control operators, the SECD-machine and the \u03bb-calculus", "authors": ["Felleisen"]}, {"title": "Stack inspection: Theory and variants", "authors": ["Fournet"]}, {"title": "Investigations into logical deduction", "authors": ["Gentzen"]}, {"title": "The formulae-as-types notion of control", "authors": ["Griffin"]}, {"title": "Functional back-ends within the lambda-sigma calculus", "authors": ["Hardin", " Maranget"]}, {"title": "A lambda-calculus structure isomorphic to Gentzen-style sequent calculus structure", "authors": ["Herbelin"]}, {"title": "Java bytecode as a typed term calculus", "authors": ["Higuchi"]}, {"title": "The formulae-as-types notion of construction", "authors": ["Howard"]}, {"title": "Computations in orthogonal rewriting systems, i", "authors": ["Huet"]}, {"title": "The functions of Java bytecode", "authors": ["Jones"]}, {"title": "Verified bytecode verification and type-certifying compilation", "authors": ["Klein"]}, {"title": "A call-by-name lambda calculus machine", "authors": ["Krivine"]}, {"title": "From \u03bb&sigma; to \u03bbv a journey through calculi of explicit substitutions", "authors": ["Lescanne"]}, {"title": "Java program verification via a JVM deep embedding in ACL2", "authors": ["Liu"]}, {"title": "Stack-Based typed assembly language", "authors": ["Morrisett", " Crary", " Glew"]}, {"title": "A proof theory for machine code", "authors": ["Ohori"]}, {"title": "Classical proofs as programs", "authors": ["Parigot"]}, {"title": "Call-by-Name, call-by-value, and the lambda-calculus", "authors": ["Plotkin"]}, {"title": "Strong normalization of \u03bb&horbar;&mu;&mu;&tilde;-calculus", "authors": ["Polonovski"]}, {"title": "A systematic approach to static access control", "authors": ["Pottier", " Skalka"]}, {"title": "Natural Deduction, a Proof-Theoretical Study", "authors": ["Prawitz"]}, {"title": "Classical logic, continuation semantics and abstract machines", "authors": ["Reus"]}, {"title": "Call-by-value is dual to call-by-name", "authors": ["Wadler"]}, {"title": "On the correctness of the Krivine machine", "authors": []}, {"title": "A compositional account of the Java virtual machine", "authors": ["Yell"]}]},
{"title": "Program transformations using temporal logic side conditions", "time": "May 2009", "keyword": ["Programming Languages and Systems"], "abstract": "This article describes an approach to program optimization based on transformations, where temporal logic is used to specify side conditions, and strategies are created which expand the repertoire of transformations and provide a suitable level of abstraction. We demonstrate the power of this approach by developing a set of optimizations using our transformation language and showing how the transformations can be converted into a form which makes it easier to apply them, while maintaining trust in the resulting optimizing steps. The approach is illustrated through a transformational case study where we apply several optimizations to a small program.\n", "author": [{"name": "Sara Kalvala", "affiliation": "University of Warwick, Coventry, UK"}, {"name": "Richard Warburton", "affiliation": "University of Warwick, Coventry, UK"}, {"name": "David Lacey", "affiliation": "XMOS Semiconductor, Bristol, UK"}, {"name": "Sara Kalvala", "affiliation": "University of Warwick, Coventry, UK"}, {"name": "Richard Warburton", "affiliation": "University of Warwick, Coventry, UK"}, {"name": "David Lacey", "affiliation": "XMOS Semiconductor, Bristol, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Compilers: Principles, Techniques, and Tools, 2nd ed", "authors": ["Aho", " Lam", " Sethi"]}, {"title": "Binary decision diagrams", "authors": ["Akers"]}, {"title": "Modern Compiler Implementation in ML", "authors": ["Appel"]}, {"title": "How to uniformly specify program analyses and transformation with graph rewrite systems", "authors": ["Assmann"]}, {"title": "OPTIMIX, A tool for rewriting and optimizing programs", "authors": ["Assmann"]}, {"title": "Points-To analysis using bdds", "authors": ["Berndl", " Lhot\u00e1k", " Qian", " Hendren"]}, {"title": "A transformational component for programming languages grammar", "authors": ["Boyle"]}, {"title": "Abstract programming and program transformation", "authors": ["Boyle"]}, {"title": "Graph-Based algorithms for boolean function manipulation", "authors": ["Bryant"]}, {"title": "Automatic verification of finite-state concurrent systems using temporal logic specifications", "authors": ["Clarke", " Emerson"]}, {"title": "A linear--time model--checking algorithm for the alternation--free modal mu--calculus", "authors": ["Cleavel"]}, {"title": "The TXL programming language, version 8", "authors": ["Cordy", " Carmichael"]}, {"title": "Practical program analyses using general purpose logic programming systems\u2014A case study", "authors": ["Dawson", " Ramakrishnan"]}, {"title": "Incremental program analyses via language factors", "authors": ["de Moor", " Drape", " Lacey"]}, {"title": "Higher-Order matching for program transformation", "authors": ["de Moor"]}, {"title": "KHEPERA: A system for rapid implementation of domain-specific languages", "authors": ["Faith", " Nyl"]}, {"title": "A retargetable compiler for ANSI C", "authors": ["Fraser"]}, {"title": "A functional language for the specification of complex tree transformations", "authors": ["Heckmann"]}, {"title": "Playing by the rules: Rewriting as a practical optimization technique in ghc", "authors": ["Jones", " Tolmach"]}, {"title": "A PVS based framework for validating compiler optimizations", "authors": ["Kanade", " Sanyal"]}, {"title": "Structuring optimizing transformations and proving them sound", "authors": ["Kanade", " Sanyal"]}, {"title": "DFA & OPT-METAFrame: A toolkit for program analyses and optimization", "authors": ["Klein", " Knoop", " Koschutzki"]}, {"title": "Optimal interprocedural program optimization: A new framework and its application", "authors": ["Knoop"]}, {"title": "Lazy code motion", "authors": ["Knoop", " Ruething"]}, {"title": "Results on the proposition mu-calculus", "authors": ["Kozen"]}, {"title": "Program transformation using temporal logic specifications", "authors": ["Lacey"]}, {"title": "Imperative program transformation by rewriting", "authors": ["Lacey"]}, {"title": "Proving correctness of compiler optimizations by temporal logic", "authors": ["Lacey", " Jones", " Wyk"]}, {"title": "Pointer induced aliasing: A problem classification", "authors": []}, {"title": "Combining dataflow analyses and transformations", "authors": ["Lerner", " Grove"]}, {"title": "Automatically proving the correctness of compiler optimizations", "authors": ["Lerner", " Millstein"]}, {"title": "Automated soundness proofs for dataflow analyses and transformations via local rules", "authors": ["Lerner", " Millstein", " Rice"]}, {"title": "OPTRAN\u2014A language/system for the specification of program transformations: System overview and experiences", "authors": ["Lipps", " M\u00f6nke"]}, {"title": "Symbolic Model Checking", "authors": ["McMillan"]}, {"title": "Advanced Compiler Design and Implementation", "authors": ["Muchnick"]}, {"title": "On the complexity of constant propagation", "authors": ["M\u00fcller-Olm"]}, {"title": "Advanced compiler optimizations for supercomputers", "authors": ["Padua"]}, {"title": "Viewing a program transformation system at work", "authors": ["Paige"]}, {"title": "An incremental version of iterative data flow analyses", "authors": ["Pollock"]}, {"title": "Incremental model checking in the modal &mu;-calculus", "authors": ["Sokolsky"]}, {"title": "Data flow analyses as model checking", "authors": ["Steffen"]}, {"title": "Generating data flow analyses algorithms from modal specifications", "authors": ["Steffen"]}, {"title": "The fixpoint-analyses machine", "authors": ["Steffen", " Classen", " Klein", " Knoop"]}, {"title": "Testing flow graph reducibility", "authors": ["Tarjan"]}, {"title": "Sharlit: A tool for building optimizers", "authors": ["Tjiang"]}, {"title": "Soot\u2014A java bytecode optimization framework", "authors": ["Vall\u00e9e-Rai", " Co", " Gagnon", " Hendren", " Lam"]}, {"title": "Ctadel: A generator of efficient codes", "authors": ["van Engelen"]}, {"title": "Efficient symbolic analyses for optimizing compilers", "authors": ["van Engelen"]}, {"title": "Building program optimizers with rewriting strategies", "authors": ["Visser", " Benaissa"]}, {"title": "Constant propagation with conditional branches", "authors": ["Wegman"]}, {"title": "Cloning-Based context-sensitive pointer alias analyses using binary decision diagrams", "authors": ["Whaley"]}, {"title": "A unifying framework for optimizing transformations", "authors": ["Whitfield"]}, {"title": "An approach for exploring code improving transformations", "authors": ["Whitfield"]}, {"title": "Vista: A system for interactive code improvement", "authors": ["Zhao", " Cai", " Whalley", " Engelen", " Yuan", " Hiser", " Davidson", " Gallivan"]}]},
{"title": "On the origins of bisimulation and coinduction", "time": "May 2009", "keyword": ["Programming Languages and Systems"], "abstract": "The origins of bisimulation and bisimilarity are examined, in the three fields where they have been independently discovered: Computer Science, Philosophical Logic (precisely, Modal Logic), Set Theory.\nBisimulation and bisimilarity are coinductive notions, and as such are intimately related to fixed points, in particular greatest fixed points. Therefore also the appearance of coinduction and fixed points is discussed, though in this case only within Computer Science. The paper ends with some historical remarks on the main fixed-point theorems (such as Knaster-Tarski) that underpin the fixed-point theory presented.\n", "author": [{"name": "Davide Sangiorgi", "affiliation": "University of Bologna, Bologna, Italy"}, {"name": "Davide Sangiorgi", "affiliation": "University of Bologna, Bologna, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "85", "references": [{"title": "Reactive Systems: Modelling, Specification and Verification", "authors": ["Aceto", " Ingulfsduttir", " Larsen"]}, {"title": "Non-Well-Founded Sets", "authors": ["Aczel"]}, {"title": "Final universes of processes", "authors": ["Aczel"]}, {"title": "Parallel complexity in the design and analysis on conurrent systems", "authors": ["Alvarez", " Balc\u00e1zar", " Gabarr\u00f3"]}, {"title": "Subtyping recursive types", "authors": ["Amadio"]}, {"title": "Delayed logic and finite state machines", "authors": ["Arden"]}, {"title": "Recursive Procedures", "authors": ["Bakker"]}, {"title": "The fixed-point approach in semantics: Theory and applications", "authors": ["Bakker"]}, {"title": "A calculus for recursive program schemes", "authors": ["Bakker"]}, {"title": "Deciding bisimilarity is P-complete", "authors": ["Balc\u00e1zar", " Gabarr\u00f3"]}, {"title": "The Liar: An Essay in Truth and Circularity", "authors": ["Barwise"]}, {"title": "The next admissible set", "authors": ["Barwise", " G"]}, {"title": "Vicious Circles: On the Mathematics of Non-Wellfounded Phenomena", "authors": ["Barwise"]}, {"title": "Definable operations in general algebras and the theory of automata and flowcharts", "authors": ["Beki\u010d"]}, {"title": "Modal correspondence theory", "authors": ["Benthem"]}, {"title": "Modal Logic and Classical Logic", "authors": ["Benthem"]}, {"title": "Correspondence theory", "authors": ["Benthem"]}, {"title": "A system of axiomatic set theory--Part VII", "authors": ["Bernays"]}, {"title": "Lattice Theory (revised edition)", "authors": ["Birkhoff"]}, {"title": "Modal Logic", "authors": ["Blackburn", " Rijke"]}, {"title": "A comparative review of some program verification methods", "authors": ["Blikle"]}, {"title": "Les ensembles extraordinaires", "authors": ["Boffa"]}, {"title": "Sur la th\u00e9orie des ensembles sans axiome de fondement", "authors": ["Boffa"]}, {"title": "Forcing et negation de l'axiome de fondement", "authors": ["Boffa"]}, {"title": "Sur le th\u00e9or\u00e8me de Zorn", "authors": ["Bourbaki"]}, {"title": "Algebraic simulation between parallel programs", "authors": ["Br"]}, {"title": "Coinductive axiomatization of recursive type equality and subtyping", "authors": ["Br"]}, {"title": "Stream processing functions", "authors": ["Burge"]}, {"title": "Recursive definitions of partial functions and their computations", "authors": ["Cadiou"]}, {"title": "Program invariants as fixed points (preliminary reports)", "authors": ["Clarke"]}, {"title": "Infinite objects in type theory", "authors": ["Coqu"]}, {"title": "Constructive versions of Tarski's fixed point theorems", "authors": ["Cousot"]}, {"title": "On backtracking and greatest fixpoints", "authors": ["de Roever"]}, {"title": "On monotonous mappings of complete lattices", "authors": ["Devid\u00e9"]}, {"title": "An application of games to the completeness problem for formalized theories", "authors": ["Ehrenfeucht"]}, {"title": "\u00dcber die Grundlagen der Mengenlehre", "authors": ["Finsler"]}, {"title": "Assigning meaning to programs", "authors": ["Floyd"]}, {"title": "Set theory with free construction principles", "authors": ["Forti"]}, {"title": "Zu den Grundlagen der Cantor-Zermeloschen Mengenlehre", "authors": ["Fraenkel"]}, {"title": "Sur quelques classifications des syst&mgrave;es de relations", "authors": ["Fra\u00efss\u00e9"]}, {"title": "The consistency of classical set theory relative to a set theory with intuitionistic logic", "authors": ["Friedman"]}, {"title": "Observability concepts in abstract data type specification", "authors": ["Giarratana"]}, {"title": "Un calcul de constructions infinies et son application a la verification des systemes communicants", "authors": ["Gim\u00e9nez"]}, {"title": "Two families of languages related to algol", "authors": ["Ginsburg"]}, {"title": "Algebraic Theory of Automata", "authors": ["Ginzburg"]}, {"title": "The linear time-branching time spectrum (extended abstract)", "authors": ["Glabbeek"]}, {"title": "The linear time\u2014Branching time spectrum II (the semantics of sequential systems with silent moves)", "authors": ["Glabbeek"]}, {"title": "Varieties of complex algebras", "authors": ["Goldblatt"]}, {"title": "Constructive models for set theory with extensionality", "authors": ["Gordeev"]}, {"title": "On properties preserved by contraction of concurrent systems", "authors": ["Gourlay", " Rounds"]}, {"title": "From Frege to G\u00f6del: A Source Book in Mathematical Logic 1879-1931", "authors": []}, {"title": "On observing nondeterminism and concurrency", "authors": ["Hennessy"]}, {"title": "Algebraic laws for nondeterminism and concurrency", "authors": ["Hennessy"]}, {"title": "Contraction de structures et application \u00e0 NFU", "authors": ["Hinnion"]}, {"title": "Extensional quotients of structures and applications to the study of the axiom of extensionality", "authors": ["Hinnion"]}, {"title": "Extensionality in Zermelo-Fraenkel set theory", "authors": ["Hinnion"]}, {"title": "Induction rules and termination proofs", "authors": ["Hitchcock"]}, {"title": "Proof of correctness of data representations", "authors": ["Hoare"]}, {"title": "Modelli della teoria degli insiemi, principi di regolarit\u00e0 e di libera costruzione", "authors": ["Honsell"]}, {"title": "The synthesis of sequential switching circuits", "authors": ["Huffman"]}, {"title": "Upper and lower bounds for first order expressibility", "authors": ["Immerman"]}, {"title": "A tutorial on (co)algebras and (co)induction", "authors": ["Jacobs"]}, {"title": "A method to compare the descriptive power of different types of petri nets", "authors": ["Jensen"]}, {"title": "Programming Languages and Their Definition -- Hans Bekic (1936-1982)", "authors": ["Jones", " Ed"]}, {"title": "On the connection of partially ordered sets with some pseudo-boolean algebras", "authors": ["Jongh"]}, {"title": "The semantics of simple language for parallel programming", "authors": ["Kahn"]}, {"title": "CCS expressions, finite state processes, and three problems of equivalence", "authors": ["Kanellakis"]}, {"title": "The method of successive approximations for functional equations", "authors": ["Kantorovich"]}, {"title": "Introduction to Metamathematics", "authors": ["Kleene"]}, {"title": "The origin of recursive function theory", "authors": ["Kleene"]}, {"title": "Un th\u00e9or\u00e8m sur les fonctions d'ensembles", "authors": ["Knaster"]}, {"title": "On reduction of asynchronous systems", "authors": ["Kwong"]}, {"title": "A program-machine symmetric automata theory", "authors": []}, {"title": "The mechanical evaluation of expressions", "authors": []}, {"title": "Correspondence between ALGOL 60 and Church's Lambda-notation: Part I", "authors": []}, {"title": "A correspondence between ALGOL 60 and Church's Lambda-notations: Part II", "authors": []}, {"title": "Fixed point theorems and semantics: A folk tale", "authors": ["Lassez", " Nguyen"]}, {"title": "The correctness of programs", "authors": ["Manna"]}, {"title": "Mathematical Theory of Computation", "authors": ["Manna"]}, {"title": "Proving properties of processes", "authors": ["Mazurkiewicz"]}, {"title": "Proving algorithms by tail functions", "authors": ["Mazurkiewicz"]}, {"title": "A basis for a mathematical theory of computation", "authors": ["McCarthy"]}, {"title": "Towards a mathematical science of computation", "authors": ["McCarthy"]}, {"title": "The equivalence problem for regular expressions with squaring requires exponential space", "authors": ["Meyer"]}, {"title": "A formal notion of simulation between programs", "authors": ["Milner"]}, {"title": "Program simulation: An extended formal notion", "authors": ["Milner"]}, {"title": "A Calculus of Communicating Systems", "authors": ["Milner"]}, {"title": "Communication and Concurrency", "authors": ["Milner"]}, {"title": "An algebraic definition of simulation between programs", "authors": ["Milner"]}, {"title": "Co-Induction in relational semantics", "authors": ["Milner"]}, {"title": "Les antinomies de Russell et de Burali-Forti et le probl\u00e8me fondamental de la th\u00e9orie des ensembles", "authors": ["Mirimanoff"]}, {"title": "Remarques sur la th\u00e9orie des ensembles et les antinomies cantoriennes I", "authors": ["Mirimanoff"]}, {"title": "Remarques sur la th\u00e9orie des ensembles et les antinomies cantoriennes II", "authors": ["Mirimanoff"]}, {"title": "Gedanken experiments on sequential machines", "authors": ["Moore"]}, {"title": "Lambda-Calculus models of programming languages", "authors": ["Morris"]}, {"title": "Elementary Induction on Abstract Structures", "authors": ["Moschovakis"]}, {"title": "Linear automaton transformations", "authors": ["Nerode"]}, {"title": "Three partition refinement algorithms", "authors": ["Paige"]}, {"title": "Fixpoint induction and proofs of program properties", "authors": ["Park"]}, {"title": "The Y-combinator in Scott's lambda-calculus models", "authors": ["Park"]}, {"title": "On the semantics of fair parallelism", "authors": ["Park"]}, {"title": "Concurrency on automata and infinite sequences", "authors": ["Park"]}, {"title": "A new equivalence notion for communicating systems", "authors": ["Park"]}, {"title": "Some fixed point theorems of the mappings of partially ordered sets", "authors": ["Pasini"]}, {"title": "Complete lattices and up-to techniques", "authors": ["Pous"]}, {"title": "The discoveries of continuations", "authors": ["Reynolds"]}, {"title": "Theory of Recursive Functions and Effective Computability", "authors": ["Rogers"]}, {"title": "Principles of Mathematics", "authors": ["Russell"]}, {"title": "Mathematical logic as based on the theory of types", "authors": ["Russell"]}, {"title": "Principia Mathematica, 3 vols", "authors": ["Russell"]}, {"title": "On the foundation of final semantics: Non-Standard sets, metric spaces, partial orders", "authors": ["Rutten"]}, {"title": "On the bisimulation proof method", "authors": ["Sangiorgi"]}, {"title": "Environmental bisimulations for higher-order languages", "authors": ["Sangiorgi", " Kobayashi"]}, {"title": "The &pi;-Calculus: A Theory of Mobile Processes", "authors": ["Sangiorgi"]}, {"title": "A different kind of model for set theory", "authors": ["Scott"]}, {"title": "Continuous lattices", "authors": ["Scott"]}, {"title": "The lattice of flow diagrams", "authors": ["Scott"]}, {"title": "Data types as lattices", "authors": ["Scott"]}, {"title": "Models for the \u03bb-calculus", "authors": ["Scott"]}, {"title": "A construction of a model for the \u03bb-calculus", "authors": ["Scott"]}, {"title": "A type-theoretical alternative to CUCH, ISWIM, OWHY", "authors": ["Scott"]}, {"title": "A theory of programs", "authors": ["Scott"]}, {"title": "A type-theoretical alternative to ISWIM, CUCH, OWHY", "authors": ["Scott"]}, {"title": "Decidability of S4", "authors": ["Segerberg"]}, {"title": "Modal logics with linear alternative relations", "authors": ["Segerberg"]}, {"title": "An essay in classical modal logic", "authors": ["Segerberg"]}, {"title": "Einige Bemerkungen zur Axiomatischen Begr\u00fcndung der Mengenlehre", "authors": ["Skolem"]}, {"title": "Zur axiomatik der Mengenlehre", "authors": ["Specker"]}, {"title": "A fixpoint theorem for lattices and its applications (preliminary report)", "authors": ["Tarski"]}, {"title": "A lattice-theoretical fixpoint theorem and its applications", "authors": ["Tarski"]}, {"title": "On the Ehrenfeucht-Fra\u00efss\u00e9 game in theoretical computer science", "authors": ["Thomas"]}, {"title": "Semantic analysis of tense logics", "authors": ["Thomason"]}, {"title": "Towards a mathematical operational semantics", "authors": ["Turi"]}, {"title": "Untersuchungen \u00fcber die Grundlagen der Mengenlehre I", "authors": ["Zermelo"]}]},
{"title": "Term transformers: A new approach to state", "time": "May 2009", "keyword": ["Programming Languages and Systems"], "abstract": "We present a new approach to adding state and state-changing commands to a term language. As a formal semantics it can be seen as a generalization of predicate transformer semantics, but beyond that it brings additional opportunities for specifying and verifying programs. It is based on a construct called a \n, which is a term of the form \n \u25b9 \n, where \n stands for a command and \n stands for a term of any type. If \n is boolean, \n \u25b9 \n is closely related to the weakest precondition \n(\n,\n). The new theory draws together functional and imperative programming in a simple way. In particular, imperative procedures and functions are seen to be governed by the same laws as classical functions. We get new techniques for reasoning about programs, including the ability to dispense with logical variables and their attendant complexities. The theory covers both programming and specification languages, and supports unbounded demonic and angelic nondeterminacy in both commands and terms.\n", "author": [{"name": "Joseph M. Morris", "affiliation": "Dublin City University and Lero - the Irish Engineering Research Centre, Dublin, Ireland"}, {"name": "Alexander Bunkenburg", "affiliation": "University of Glasgow, Glasgow, UK"}, {"name": "Malcolm Tyrrell", "affiliation": "Dublin City University and Lero - the Irish Engineering Research Centre, Dublin, Ireland"}, {"name": "Joseph M. Morris", "affiliation": "Dublin City University and Lero - the Irish Engineering Research Centre, Dublin, Ireland"}, {"name": "Alexander Bunkenburg", "affiliation": "University of Glasgow, Glasgow, UK"}, {"name": "Malcolm Tyrrell", "affiliation": "Dublin City University and Lero - the Irish Engineering Research Centre, Dublin, Ireland"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Refinement Calculus: a Systematic Introduction", "authors": ["Back"]}, {"title": "Correctness preserving program refinements: Proof theory and applications", "authors": ["Back"]}, {"title": "Duality in specification languages: A lattice-theoretical approach", "authors": ["Back"]}, {"title": "Program Construction: Calculating Implementations from Specifications", "authors": ["Backhouse"]}, {"title": "Dijkstra-Scholten predicate calculus: Concepts and misconceptions", "authors": ["Bijlsma"]}, {"title": "HOL-Boogie\u2014An interactive prover for the Boogie program-verifier", "authors": ["B\u00f6hme", " Leino"]}, {"title": "A weaker precondition for loops", "authors": ["Boom"]}, {"title": "Functional declarative language design and predicate calculus: A practical approach", "authors": ["Boute"]}, {"title": "Expression refinement", "authors": ["Bunkenburg"]}, {"title": "Programming in the 1990s: An Introduction to the Calculation of Programs", "authors": ["Cohen"]}, {"title": "Simplify: A theorem prover for program checking", "authors": ["Detlefs", " Nelson"]}, {"title": "A Discipline of Programming", "authors": ["Dijkstra"]}, {"title": "The equivalence of bounded nondeterminacy and continuity", "authors": ["Dijkstra"]}, {"title": "Predicate Calculus and Program Semantics", "authors": ["Dijkstra"]}, {"title": "A simple fixpoint argument without the restriction to continuity", "authors": ["Dijkstra"]}, {"title": "Nondeterministic algorithms", "authors": ["Floyd"]}, {"title": "Data refinement of predicate transformers", "authors": ["Gardiner"]}, {"title": "The Science of Programming", "authors": ["Gries"]}, {"title": "A Logical Approach to Discrete Math", "authors": ["Gries"]}, {"title": "The Logic of Programming", "authors": ["Hehner"]}, {"title": "A Practical Theory of Programming", "authors": ["Hehner"]}, {"title": "Induction rules and termination proofs", "authors": ["Hitchcock"]}, {"title": "An axiomatic basis for computer programming", "authors": ["Hoare"]}, {"title": "Programming: the Derivation of Algorithms", "authors": ["Kaldewaij"]}, {"title": "Hoare logic and auxiliary variables", "authors": ["Kleymann"]}, {"title": "Lazy functional state threads", "authors": ["Launchbury"]}, {"title": "Computational lambda-calculus and monads", "authors": ["Moggi"]}, {"title": "Auxiliary variables in data refinement", "authors": ["Morgan"]}, {"title": "Programming from Specifications, 2nd ed", "authors": ["Morgan"]}, {"title": "A theoretical basis for stepwise refinement and the programming calculus", "authors": ["Morris"]}, {"title": "Dual unbounded nondeterminacy, recursion, and fixpoints", "authors": ["Morris"]}, {"title": "Dually nondeterministic functions", "authors": ["Morris"]}, {"title": "Calculating sharp adaptation rules", "authors": ["Naumann"]}, {"title": "Ideal models for pointwise relational and state-free imperative programming", "authors": ["Naumann"]}, {"title": "Predicate transformer semantics of a higher-order imperative language with record subtyping", "authors": ["Naumann"]}, {"title": "A generalization of Dijkstra's calculus", "authors": ["Nelson"]}, {"title": "Some generalizations and applications of Dijkstra's guarded commands", "authors": ["Nelson"]}, {"title": "Specification and Transformation of Programs", "authors": ["Partsch"]}, {"title": "Modularity and the rule of adaptation", "authors": ["Pierik"]}, {"title": "Understanding Z: A Specification Language and its Formal Semantics", "authors": ["Spivey"]}, {"title": "A lattice-theoretical fixpoint theorem and its applications", "authors": ["Tarski"]}, {"title": "The free completely distributive lattice over a poset", "authors": ["Tunnicliffe"]}, {"title": "The lattice of data refinement", "authors": ["von Wright"]}, {"title": "The essence of functional programming", "authors": ["Wadler"]}, {"title": "Software Engineering Mathematics", "authors": ["Woodcock"]}]},
{"title": "Mostly static program partitioning of binary executables", "time": "July 2009", "keyword": ["Programming Languages and Systems"], "abstract": "We have built a runtime compilation system that takes unmodified sequential binaries and improves their performance on off-the-shelf multiprocessors using dynamic vectorization and loop-level parallelization techniques. Our system, Azure, is purely software based and requires no specific hardware support for speculative thread execution, yet it is able to break even in most cases; that is, the achieved speedup exceeds the cost of runtime monitoring and compilation, often by significant amounts.\nKey to this remarkable performance is an offline preprocessing step that extracts a \n control flow graph (CFG) from the binary program ahead of time. This statically obtained CFG is incomplete in that it may be missing some edges corresponding to computed branches. We describe how such additional control flow edges are discovered and handled at runtime, so that an incomplete static analysis never leads to an incorrect optimization result.\nThe availability of a \n CFG enables us to statically partition a binary executable into single-entry multiple-exit regions and to identify potential parallelization candidates ahead of execution. Program regions that are not candidates for parallelization can thereby be excluded completely from runtime monitoring and dynamic recompilation. Azure's extremely low overhead is a direct consequence of this design.\n", "author": [{"name": "Efe Yardimci", "affiliation": "University of California, Irvine"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine"}, {"name": "Efe Yardimci", "affiliation": "University of California, Irvine"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "A dynamic multithreading processor", "authors": ["]]Akkary"]}, {"title": "Dynamo: A transparent dynamic optimization system", "authors": ["]]Bala", " Duesterwald"]}, {"title": "Analyzing memory accesses in x86 executables", "authors": ["]]Balakrishnan"]}, {"title": "IA-32 Execution Layer: A two-phase dynamic translator designed to support IA-32 applications on Itanium-based systems", "authors": ["]]Baraz", " Devor", " Etzion", " Goldenberg", " Skaletsky", " Wang"]}, {"title": "An API for runtime code patching", "authors": ["]]Buck"]}, {"title": "Multithreaded processor architecture", "authors": ["]]Byrd"]}, {"title": "Early experiences with Olden", "authors": ["]]Carlisle", " Rogers", " Reppy"]}, {"title": "Staged compilation", "authors": ["]]Chambers"]}, {"title": "FX&excl;32: A profile-directed binary translator", "authors": ["]]Chernoff", " Herdeg", " Hookway", " Reeve", " Rubin", " Tye", " Yadavalli"]}, {"title": "Decompilation of binary programs", "authors": ["]]Cifuentes"]}, {"title": "Toward efficient and robust software speculative parallelization on multiprocessors", "authors": ["]]Cintra"]}, {"title": "Runtime predictability of loops", "authors": ["]]de Alba"]}, {"title": "DAISY: Dynamic compilation for 100&percnt; architectural compatibility", "authors": ["]]Ebcio\u011flu"]}, {"title": "An eight-issue tree VLIW processor for dynamic binary translation", "authors": ["]]Ebcio\u011flu", " Fritts", " Kosonocky", " Gschwind", " Altman", " Kailas"]}, {"title": "Trace scheduling: A technique for global micro-code compaction", "authors": ["]]Fisher"]}, {"title": "An evaluation of staged run time optimizations in DyC", "authors": ["]]Grant", " Philipose", " Mock", " Chambers"]}, {"title": "The Stanford Hydra CMP", "authors": ["]]Hammond", " Hubbert", " Siu", " Prabhu", " Chen"]}, {"title": "The superblock: An effective technique for vliw and superscalar compilation", "authors": ["]]Hwu", " Mahlke", " Chen", " Chang", " Warter", " Bringmann", " Ouellette", " Hank", " Kiyohara", " Haab", " Holm"]}, {"title": "MMX micro-architecture of Pentium processors with MMX technology and Pentium II micro-processors", "authors": ["]]Kagan", " Gochman", " Orenstien"]}, {"title": "Continuous program optimization: Design and evaluation", "authors": ["]]Kistler"]}, {"title": "Continuous program optimization: A case study", "authors": ["]]Kistler"]}, {"title": "The technology behind Crusoe processors", "authors": ["]]Klaiber"]}, {"title": "Hardware and software support for speculative execution of sequential binaries on a chip-multiprocessor", "authors": ["]]Krishnan"]}, {"title": "A chip-multiprocessor architecture with speculative multithreading", "authors": ["]]Krishnan"]}, {"title": "Speculative multithreading architectures", "authors": ["]]Krishnan"]}, {"title": "Rewriting executable files to measure program behavior", "authors": ["]]Larus"]}, {"title": "Static single assignment form for machine code", "authors": ["]]Leung"]}, {"title": "Exploiting thread-level parallelism on simultaneous multithreaded processors", "authors": ["]]Lo"]}, {"title": "Exploiting SIMD parallelism in DSP and multimedia algorithms using the altivec technology", "authors": ["]]Nguyen"]}, {"title": "AMD 3DNow&excl; technology: Architecture and implementations", "authors": ["]]Oberman", " Favor"]}, {"title": "The case for a single-chip multiprocessor", "authors": ["]]Olukotun", " Nayfeh", " Hammond", " Wilson"]}, {"title": "Mitosis compiler: An infrastructure for speculative threading based on pre-computation slices", "authors": ["]]Quinones", " Madriles", " Sanchez", " Marcuello", " Gonzalez"]}, {"title": "The LRPD test: Speculative run time parallelization of loops with privatization and reduction parallelization", "authors": ["]]Rauchwerger"]}, {"title": "Trace processors", "authors": ["]]Rotenberg", " Jacobson", " Sazeides"]}, {"title": "Fast image processing using SSE2", "authors": ["]]Skoglund"]}, {"title": "Multi-scalar processors", "authors": ["]]Sohi", " Breach"]}, {"title": "Atom: A system for building customized program analysis tools", "authors": ["]]Srivastava"]}, {"title": "The Internet Streaming SIMD Extensions", "authors": ["]]Thakkar"]}, {"title": "The superthreaded processor architecture", "authors": ["]]Tsai", " Huang", " Amlo", " Lilja"]}, {"title": "The superthreaded architecture: Thread pipelining with run time data dependence checking and control speculation", "authors": ["]]Tsai"]}, {"title": "Simultaneous multithreading: Maximizing on-chip parallelism", "authors": ["]]Tullsen", " Eggers"]}, {"title": "Adapt: Automated de-coupled adaptive program transformation", "authors": ["]]Voss"]}, {"title": "High-level adaptive program optimization with ADAPT", "authors": ["]]Voss"]}, {"title": "Exploiting parallelism to improve the performance of sequential binary executables", "authors": ["]]Yardimci"]}, {"title": "Dynamic parallelization and mapping of binary executables on hierarchical platforms", "authors": ["]]Yardimci"]}, {"title": "A programmable co-processor for profiling", "authors": ["]]Zilles"]}]},
{"title": "Certificate translation for optimizing compilers", "time": "July 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Proof Carrying Code provides trust in mobile code by requiring certificates that ensure the code adherence to specific conditions. The prominent approach to generate certificates for compiled code is Certifying Compilation, that automatically generates certificates for simple safety properties.\nIn this work, we present Certificate Translation, a novel extension for standard compilers that automatically transforms formal proofs for more expressive and complex properties of the source program to certificates for the compiled code.\nThe article outlines the principles of certificate translation, instantiated for a nonoptimizing compiler and for standard compiler optimizations in the context of an intermediate RTL Language.\n", "author": [{"name": "Gilles Barthe", "affiliation": "IMDEA Software"}, {"name": "Benjamin Gr\u00e9goire", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}, {"name": "C\u00e9sar Kunz", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}, {"name": "Tamara Rezk", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}, {"name": "Gilles Barthe", "affiliation": "IMDEA Software"}, {"name": "Benjamin Gr\u00e9goire", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}, {"name": "C\u00e9sar Kunz", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}, {"name": "Tamara Rezk", "affiliation": "INRIA Sophia Antipolis\u2014M\u00e9diterran\u00e9e"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "14", "references": [{"title": "A program logic for bytecode", "authors": ["]]Bannwart"]}, {"title": "Boogie: A modular reusable verifier for object-oriented programs", "authors": ["]]Barnett", " Chang", " DeLine", " Jacobs"]}, {"title": "The Spec&num; programming system: An overview", "authors": ["]]Barnett", " Leino"]}, {"title": "Tvoc: A translation validator for optimizing compilers", "authors": ["]]Barrett", " Fang", " Goldberg", " Hu", " Pnueli"]}, {"title": "JACK: A tool for validation of security and behaviour of Java applications", "authors": ["]]Barthe", " Burdy", " Charles", " Gr\u00e9goire", " Huisman", " Lanet", " Pavlova"]}, {"title": "Certificate translation for optimizing compilers", "authors": ["]]Barthe", " Gr\u00e9goire", " Kunz"]}, {"title": "Preservation of proof obligations for Java", "authors": ["]]Barthe", " Gr\u00e9goire"]}, {"title": "Certificate translation in abstract interpretation", "authors": ["]]Barthe"]}, {"title": "Deriving an information flow checker and certifying compiler for Java", "authors": ["]]Barthe", " Naumann"]}, {"title": "Proof obligations preserving compilation", "authors": ["]]Barthe"]}, {"title": "A structured approach to proving compiler optimizations based on dataflow analysis", "authors": ["]]Bertot", " Gr\u00e9goire"]}, {"title": "Formal verification of a c compiler front-end", "authors": ["]]Blazy", " Dargaye"]}, {"title": "An overview of JML tools and applications", "authors": ["]]Burdy", " Cheon", " Cok", " Ernst", " Kiniry", " Leavens", " Leino"]}, {"title": "Java bytecode specification and verification", "authors": ["]]Burdy"]}, {"title": "Beyond assertions: Advanced specification and verification with JML and ESC/Java2", "authors": ["]]Chalin", " Kiniry", " Leavens"]}, {"title": "Special issue on VLISP", "authors": ["]]Guttman"]}, {"title": "Type systems equivalent to data-flow analyses for imperative languages", "authors": ["]]Laud", " Uustalu"]}, {"title": "Specifying and verifying programs in spec&num;", "authors": ["]]Leino"]}, {"title": "Exception safety for c&num;", "authors": ["]]Leino"]}, {"title": "Automated soundness proofs for dataflow analyses and transformations via local rules", "authors": ["]]Lerner", " Millstein", " Rice"]}, {"title": "Coinductive big-step operational semantics", "authors": ["]]Leroy"]}, {"title": "Formal certification of a compiler back-end or: Programming a compiler with a proof assistant", "authors": ["]]Leroy"]}, {"title": "Proof-transforming compilation of programs with abrupt termination", "authors": ["]]M\u00fcller"]}, {"title": "Compiling with proofs", "authors": ["]]Necula"]}, {"title": "Proof-carrying code", "authors": ["]]Necula"]}, {"title": "Translation validation for an optimizing compiler", "authors": ["]]Necula"]}, {"title": "The design and implementation of a certifying compiler", "authors": ["]]Necula"]}, {"title": "Formalizing proof-transforming compilation of eiffel programs", "authors": ["]]Nordio", " M\u00fcller"]}, {"title": "Proof-transforming compilation of eiffel programs", "authors": ["]]Nordio", " M\u00fcller"]}, {"title": "Translation validation", "authors": ["]]Pnueli", " Singerman"]}, {"title": "Symbolic transfer functions-based approaches to certified compilation", "authors": ["]]Rival"]}, {"title": "Program and proof optimizations with type systems", "authors": ["]]Saabas"]}, {"title": "Automatic construction of Hoare proofs from abstract interpretation results", "authors": ["]]Seo", " Yang"]}, {"title": "A type system for certified binaries", "authors": ["]]Shao", " Trifonov", " Saha"]}, {"title": "Formal Verification of a Java Compiler in Isabelle", "authors": ["]]Strecker"]}, {"title": "TIL: A type-directed optimizing compiler for ML", "authors": ["]]Tarditi", " Morrisett", " Cheng", " Stone", " Harper"]}, {"title": "Formal verification of translation validators: A case study on instruction scheduling optimizations", "authors": ["]]Tristan"]}, {"title": "Bytecode analysis for proof carrying code", "authors": ["]]Wildmoser", " Chaieb"]}, {"title": "Voc: A translation validator for optimizing compilers", "authors": ["]]Zuck", " Pnueli", " Fang"]}]},
{"title": "A theory of contracts for Web services", "time": "July 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Contracts are behavioral descriptions of Web services. We devise a theory of contracts that formalizes the compatibility of a client with a service, and the safe replacement of a service with another service. The use of contracts statically ensures the successful completion of every possible interaction between compatible clients and services.\nThe technical device that underlies the theory is the \n, which is an explicit coercion preventing some possible behaviors of services and, in doing so, make services compatible with different usage scenarios. We show that filters can be seen as proofs of a sound and complete subcontracting deduction system which simultaneously refines and extends Hennessy's classical axiomatization of the must testing preorder. The relation is decidable, and the decision algorithm is obtained via a cut-elimination process that proves the coherence of subcontracting as a logical system.\nDespite the richness of the technical development, the resulting approach is based on simple ideas and basic intuitions. Remarkably, its application is mostly independent of the language used to program the services or the clients. We outline the practical aspects of our theory by studying two different concrete syntaxes for contracts and applying each of them to Web services languages. We also explore implementation issues of filters and discuss the perspectives of future research this work opens.\n", "author": [{"name": "Giuseppe Castagna", "affiliation": "CNRS, PPS, Universit\u00e9 Paris Diderot, France"}, {"name": "Nils Gesbert", "affiliation": "University of Glasgow"}, {"name": "Luca Padovani", "affiliation": "ISTI, Universit\u00e0 degli Studi di Urbino"}, {"name": "Giuseppe Castagna", "affiliation": "CNRS, PPS, Universit\u00e9 Paris Diderot, France"}, {"name": "Nils Gesbert", "affiliation": "University of Glasgow"}, {"name": "Luca Padovani", "affiliation": "ISTI, Universit\u00e0 degli Studi di Urbino"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "114", "references": [{"title": "Web Services Business Process Execution Language Version 2", "authors": ["]]Alves", " Arkin", " Askary", " Barreto", " "]}, {"title": "A characterization of regular expressions under bisimulation", "authors": ["]]Baeten", " Corradini"]}, {"title": "Web services conversation language (wscl) 1", "authors": ["]]Banerji", " Bartolini", " Beringer", " Chopella", " "]}, {"title": "UDDI Version 3", "authors": ["]]Bellwood", " Capell", " Clement", " Colgrave", " "]}, {"title": "Automatic composition of e-services that export their behavior", "authors": ["]]Berardi", " Calvanese", " De Giacomo", " Lenzerini"]}, {"title": "A theory of adaptable contract-based service composition", "authors": ["]]Bernardi", " Bugliesi", " Macedonio"]}, {"title": "Towards a unifying theory for choreography conformance and contract compliance", "authors": ["]]Bravetti"]}, {"title": "Lotos specifications, their implementations and their tests", "authors": ["]]Brinksma", " Scollo"]}, {"title": "A modest model of records, inheritance and bounded quantification", "authors": ["]]Bruce"]}, {"title": "A calculus of global interaction based on session types", "authors": ["]]Carbone", " Honda"]}, {"title": "Structured communication-centred programming for Web services", "authors": ["]]Carbone", " Honda"]}, {"title": "A semantics of multiple inheritance", "authors": ["]]Cardelli"]}, {"title": "A formal account of contracts for Web Services", "authors": ["]]Carpineti", " Castagna", " Laneve"]}, {"title": "General session types", "authors": ["]]Castagna", " Dezani-Ciancaglini", " Giachino"]}, {"title": "A gentle introduction to semantic subtyping", "authors": ["]]Castagna"]}, {"title": "A theory of contracts for Web services", "authors": ["]]Castagna", " Gesbert"]}, {"title": "A theory of contracts for Web services", "authors": ["]]Castagna", " Gesbert"]}, {"title": "Soundness of coercion in the calculus of constructions", "authors": ["]]Chen"]}, {"title": "Web services description language (wsdl) version 2", "authors": ["]]Chinnici", " Haas", " Lewis", " Moreau", " Orchard"]}, {"title": "Web services description language (wsdl) version 2", "authors": ["]]Chinnici", " Moreau", " Ryman"]}, {"title": "Fundamental properties of infinite trees", "authors": ["]]Courcelle"]}, {"title": "Automatic synthesis of new behaviors from a library of available behaviors", "authors": ["]]De Giacomo"]}, {"title": "Testing equivalences for processes", "authors": ["]]De Nicola"]}, {"title": "CCS without \u03c4's", "authors": ["]]De Nicola"]}, {"title": "Nondeterministic regular expressions as solutions of equational systems", "authors": ["]]De Nicola"]}, {"title": "Comparing LOTOS and Z refinement relations", "authors": ["]]Derrick", " Bowman", " Boiten"]}, {"title": "Isomorphisms of Types: From Lambda Calculus to Information Retrieval and Language Design", "authors": ["]]Di Cosmo"]}, {"title": "XML Schema part 0: Primer second edition", "authors": ["]]Fallside"]}, {"title": "The reflexive chemical abstract machine and the join-calculus", "authors": ["]]Fournet"]}, {"title": "A calculus of mobile agents", "authors": ["]]Fournet", " Gonthier", " L\u00e9vy", " Maranget"]}, {"title": "Stuck-free conformance", "authors": ["]]Fournet", " Hoare", " Rajamani"]}, {"title": "Semantic subtyping: Dealing set-theoretically with function, union, intersection, and negation types", "authors": ["]]Frisch", " Castagna"]}, {"title": "Subtyping for session types in the &pi;-calculus", "authors": ["]]Gay"]}, {"title": "Acceptance trees", "authors": ["]]Hennessy"]}, {"title": "Algebraic Theory of Processes", "authors": ["]]Hennessy"]}, {"title": "Types for dyadic interaction", "authors": ["]]Honda"]}, {"title": "Language primitives and type discipline for structured communication-based programming", "authors": ["]]Honda", " Vasconcelos"]}, {"title": "E-services: A look behind the curtain", "authors": ["]]Hull", " Benedikt", " Christophides"]}, {"title": "Smooth orchestrators", "authors": ["]]Laneve"]}, {"title": "The must preorder revisited: An algebraic theory for Web services contracts", "authors": ["]]Laneve"]}, {"title": "The pairing of contracts and session types", "authors": ["]]Laneve"]}, {"title": "A Calculus of Communicating Systems", "authors": ["]]Milner"]}, {"title": "Contract-directed synthesis of simple orchestrators", "authors": ["]]Padovani"]}, {"title": "Automated synthesis of composite bpel4ws Web services", "authors": ["]]Pistore", " Traverso", " Bertoli"]}, {"title": "Retrieving library functions by unifying types modulo linear isomorphism", "authors": ["]]Rittri"]}, {"title": "Some algorithmic and proof-theoretical aspects of coercive subtyping", "authors": ["]]Soloviev", " Jones"]}, {"title": "An interaction-based language and its typing system", "authors": ["]]Takeuchi", " Honda"]}, {"title": "Automated composition of semantic Web services into executable processes", "authors": ["]]Traverso"]}]},
{"title": "Program locality analysis using reuse distance", "time": "August 2009", "keyword": ["Programming Languages and Systems"], "abstract": "On modern computer systems, the memory performance of an application depends on its locality. For a single execution, locality-correlated measures like average miss rate or working-set size have long been analyzed using \n\u2014the number of distinct locations accessed between consecutive accesses to a given location. This article addresses the analysis problem at the program level, where the size of data and the locality of execution may change significantly depending on the input.\nThe article presents two techniques that predict how the locality of a program changes with its input. The first is approximate reuse-distance measurement, which is asymptotically faster than exact methods while providing a guaranteed precision. The second is statistical prediction of locality in all executions of a program based on the analysis of a few executions. The prediction process has three steps: dividing data accesses into groups, finding the access patterns in each group, and building parameterized models. The resulting prediction may be used on-line with the help of distance-based sampling. When evaluated on fifteen benchmark applications, the new techniques predicted program locality with good accuracy, even for test executions that are orders of magnitude larger than the training executions.\nThe two techniques are among the first to enable quantitative analysis of whole-program locality in general sequential code. These findings form the basis for a unified understanding of program locality and its many facets. Concluding sections of the article present a taxonomy of related literature along five dimensions of locality and discuss the role of reuse distance in performance modeling, program optimization, cache and virtual memory management, and network traffic analysis.\n", "author": [{"name": "Yutao Zhong", "affiliation": "George Mason University, Fairfax, VA"}, {"name": "Xipeng Shen", "affiliation": "The College of William and Mary, Williamsburg, VA"}, {"name": "Chen Ding", "affiliation": "University of Rochester, Rochester, NY"}, {"name": "Yutao Zhong", "affiliation": "George Mason University, Fairfax, VA"}, {"name": "Xipeng Shen", "affiliation": "The College of William and Mary, Williamsburg, VA"}, {"name": "Chen Ding", "affiliation": "University of Rochester, Rochester, NY"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "98", "references": [{"title": "Using integer sets for data-parallel program analysis and optimization", "authors": ["Adve"]}, {"title": "Optimizing Compilers for Modern Architectures: A Dependence-Based Approach", "authors": ["Allen"]}, {"title": "Calculating stack distances efficiently", "authors": ["Almasi", " Cascaval"]}, {"title": "Characterizing reference locality in the WWW", "authors": ["Almeida", " Bestavros", " Crovella"]}, {"title": "The space complexity of approximating the frequency moments", "authors": ["Alon", " Matias"]}, {"title": "A framework for reducing the cost of instrumented code", "authors": ["Arnold"]}, {"title": "Dependence Analysis for Supercomputing", "authors": ["Banerjee"]}, {"title": "Measurements of major locality phases in symbolic reference strings", "authors": ["Batson"]}, {"title": "LRU stack processing", "authors": ["Bennett"]}, {"title": "Statcache: A probabilistic approach to efficient and accurate data locality analysis", "authors": ["Berg"]}, {"title": "Fast data-locality profiling of native execution", "authors": ["Berg"]}, {"title": "Reuse distance-based cache hint selection", "authors": ["Beyls"]}, {"title": "Generating cache hints for improved program efficiency", "authors": ["Beyls"]}, {"title": "Discovery of locality-improving refactoring by reuse path analysis", "authors": ["Beyls"]}, {"title": "Intermediately executed code is the key to find refactorings that improve temporal data locality", "authors": ["Beyls"]}, {"title": "Measurement of locality and the behaviour of programs", "authors": ["Bunt"]}, {"title": "Interprocedural dependence analysis and parallelization", "authors": ["Burke"]}, {"title": "Cache-conscious data placement", "authors": ["Calder", " Krintz", " John"]}, {"title": "Analysis of interprocedural side effects in a parallel programming environment", "authors": ["Callahan", " Cocke"]}, {"title": "Estimating interlock and improving balance for pipelined machines", "authors": ["Callahan", " Cocke"]}, {"title": "Improving the ratio of memory operations to floating-point operations in loops", "authors": ["Carr"]}, {"title": "Estimating cache misses and locality using stack distances", "authors": ["Cascaval"]}, {"title": "Predicting inter-thread cache contention on a chip multi-processor architecture", "authors": ["Ch", " Guo", " Kim"]}, {"title": "Exact analysis of the cache behavior of nested loops", "authors": ["Chatterjee", " Parker", " Hanlon"]}, {"title": "CLOCK-Pro: An effective improvement of the CLOCK replacement", "authors": ["Chen", " Jiang"]}, {"title": "Measuring temporal locality variation across program inputs", "authors": ["Cheng"]}, {"title": "Efficient representations and abstractions for quantifying and exploiting data reference locality", "authors": ["Chilimbi"]}, {"title": "On the stability of temporal data reference profiles", "authors": ["Chilimbi"]}, {"title": "Cache-conscious structure layout", "authors": ["Chilimbi", " Hill"]}, {"title": "Dynamic hot data stream prefetching for general-purpose programs", "authors": ["Chilimbi"]}, {"title": "Unifying data and control transformations for distributed shared-memory machines", "authors": ["Cierniak"]}, {"title": "Profitability computations on program flow graphs", "authors": ["Cocke"]}, {"title": "Communication optimizations for irregular scientific computations on distributed memory architectures", "authors": ["Das", " Uysal", " Saltz"]}, {"title": "Maintaining stream statistics over sliding windows", "authors": ["Datar", " Gionis", " Indyk"]}, {"title": "Working sets past and present", "authors": ["Denning"]}, {"title": "Improving cache performance in dynamic applications through data and computation reorganization at runtime", "authors": ["Ding"]}, {"title": "Improving effective bandwidth through compiler enhancement of global cache reuse", "authors": ["Ding"]}, {"title": "Compiler-directed runtime monitoring of program data access", "authors": ["Ding"]}, {"title": "Workload design: Selecting representative program-input pairs", "authors": ["Eeckhout", " V"]}, {"title": "Instruction-based memory distance analysis and its application to optimization", "authors": ["Fang", " Carr", " Onder"]}, {"title": "On estimating and enhancing cache effectiveness", "authors": ["Ferrante", " Sarkar"]}, {"title": "Probabilistic counting", "authors": ["Flajolet"]}, {"title": "Cache miss equations: A compiler framework for analyzing and tuning memory behavior", "authors": ["Ghosh", " Martonosi"]}, {"title": "A component model of spatial locality", "authors": [" Christopher", " Bai", " Zhang"]}, {"title": "Exploiting locality for irregular scientific codes", "authors": ["Han"]}, {"title": "An implementation of interprocedural bounded regular section analysis", "authors": ["Havlak"]}, {"title": "Evaluating associativity in CPU caches", "authors": ["Hill"]}, {"title": "On the predictability of program behavior using different input data sets", "authors": ["Hsu", " Chen", " Yew"]}, {"title": "LIRS: An efficient low inter-reference recency set replacement to improve buffer cache performance", "authors": ["Jiang"]}, {"title": "Analysis and approximation of optimal co-scheduling on chip multiprocessors", "authors": ["Jiang", " Shen", " Chen"]}, {"title": "Improving whole-program locality using intra-procedural and inter-procedural transformations", "authors": []}, {"title": "Inducing models of black-box storage arrays", "authors": ["Kelly", " Cohen", " Goldszmidt"]}, {"title": "The Omega Library Interface Guide", "authors": ["Kelly", " Maslov", " Pugh", " Rosser", " Shpeisman"]}, {"title": "Fast track: A software system for speculative optimization", "authors": ["Kelsey", " Bai"]}, {"title": "Implementing stack simulation for highly-associative memories", "authors": ["Kim", " Hill"]}, {"title": "MinneSPEC: A new SPEC benchmark workload for simulation-based computer architecture research", "authors": ["KleinOsowski"]}, {"title": "Array SSA form and its use in parallelization", "authors": ["Knobe"]}, {"title": "An empirical study of FORTRAN programs", "authors": ["Knuth"]}, {"title": "Data-centric multi-level blocking", "authors": ["Kodukula", " Ahmed"]}, {"title": "An efficient data dependence analysis for parallelizing compilers", "authors": [" Yew"]}, {"title": "Design and implementation of a lightweight dynamic optimization system", "authors": ["Liu", " Chen", " Yew"]}, {"title": "Cross architecture performance predictions for scientific applications using parameterized models", "authors": ["Marin"]}, {"title": "Scalable cross-architecture predictions of memory hierarchy response for scientific applications", "authors": ["Marin"]}, {"title": "Evaluation techniques for storage hierarchies", "authors": ["Mattson", " Gecsei", " Slutz"]}, {"title": "Improving data locality with loop transformations", "authors": ["McKinley", " Carr"]}, {"title": "Improving memory hierarchy performance for irregular applications", "authors": ["Mellor-Crummey", " Whalley"]}, {"title": "Efficient methods for calculating the success function of fixed space replacement policies", "authors": ["Olken"]}, {"title": "The hardness of cache conscious data placement", "authors": ["Petrank"]}, {"title": "Software methods for improvement of cache performance", "authors": ["Porterfield"]}, {"title": "Applied Regression Analysis: A Research Tool", "authors": ["Rawlings"]}, {"title": "Working sets, cache sizes, and node granularity issues for large-scale multiprocessors", "authors": ["Rothberg", " Singh"]}, {"title": "Segregating heap objects by reference behavior and lifetime", "authors": ["Seidl"]}, {"title": "Lightweight reference affinity analysis", "authors": ["Shen", " Gao", " Ding"]}, {"title": "Locality approximation using time", "authors": ["Shen", " Shaw", " Meeker"]}, {"title": "Analysis of input-dependent program behavior using active profiling", "authors": ["Shen", " Zhang", " Ding", " Scott", " Dwarkadas"]}, {"title": "Locality phase prediction", "authors": ["Shen", " Zhong"]}, {"title": "Phase-based miss rate prediction", "authors": ["Shen", " Zhong"]}, {"title": "Predicting locality phases for dynamic memory optimization", "authors": ["Shen", " Zhong"]}, {"title": "Self adjusting binary search trees", "authors": ["Sleator"]}, {"title": "The EELRU adaptive replacement algorithm", "authors": ["Smaragdakis", " Kaplan"]}, {"title": "On the effectiveness of set associative page mapping and its applications in main memory management", "authors": ["Smith"]}, {"title": "A compiler approach to fast hardware design space exploration in FPGA-based systems", "authors": [" Hall"]}, {"title": "New tiling techniques to improve cache temporal locality", "authors": ["Song"]}, {"title": "ATOM: A system for building customized program analysis tools", "authors": ["Srivastava"]}, {"title": "Compile-time composition of runtime data and iteration reorderings", "authors": ["Strout", " Carter"]}, {"title": "Multi-configuration simulation algorithms for the evaluation of computer architecture designs", "authors": ["Sugumar"]}, {"title": "Analytical cache models with applications to cache partitioning", "authors": ["Suh", " Devadas"]}, {"title": "Cache management by the compiler", "authors": ["Thabit"]}, {"title": "Efficient (stack) algorithms for analysis of write-back and sector memories", "authors": ["Thompson"]}, {"title": "Direct parallelization of CALL statements", "authors": ["Triolet", " Irigoin"]}, {"title": "Predicting program behavior using real or estimated profiles", "authors": ["Wall"]}, {"title": "Efficient trace-driven simulation methods for cache performance analysis", "authors": ["Wang"]}, {"title": "A data locality optimizing algorithm", "authors": ["Wolf"]}, {"title": "High-Performance Compilers for Parallel Computing", "authors": ["Wolfe"]}, {"title": "Achieving scalable locality with time skewing", "authors": ["Wonnacott"]}, {"title": "Efficient and accurate analytical modeling of whole-program data cache behavior", "authors": ["Xue"]}, {"title": "Cramm: Virtual memory support for garbage-collected applications", "authors": ["Yang", " Berger", " Kaplan"]}, {"title": "Transforming loops to recursion for multi-level memory hierarchies", "authors": [" Adve"]}, {"title": "A hierarchical model of data locality", "authors": ["Zhang", " Ding", " Ogihara", " Zhong"]}, {"title": "Forma: A framework for safe automatic array reshaping", "authors": ["Zhao", " Cui", " Gao", " Silvera"]}, {"title": "Sampling-based program locality approximation", "authors": ["Zhong"]}, {"title": "Reuse distance analysis for scientific programs", "authors": ["Zhong", " Ding"]}, {"title": "Miss rate prediction across program inputs and cache configurations", "authors": ["Zhong", " Dropsho", " Shen", " Studer"]}, {"title": "Array regrouping and structure splitting using whole-program reference affinity", "authors": ["Zhong", " Orlovich", " Shen"]}, {"title": "Dynamic tracking of page miss ratio curve for memory management", "authors": ["Zhou", " P", " Sundaresan", " Raghuraman", " Zhou"]}, {"title": "The multi-queue replacement algorithm for second-level buffer caches", "authors": ["Zhou", " Chen"]}]},
{"title": "From datalog rules to efficient programs with time and space guarantees", "time": "August 2009", "keyword": ["Programming Languages and Systems"], "abstract": "This article describes a method for transforming any given set of Datalog rules into an efficient specialized implementation with guaranteed worst-case time and space complexities, and for computing the complexities from the rules. The running time is optimal in the sense that only useful combinations of facts that lead to all hypotheses of a rule being simultaneously true are considered, and each such combination is considered exactly once in constant time. The associated space usage may sometimes be reduced using scheduling optimizations to eliminate some summands in the space usage formula. The transformation is based on a general method for algorithm design that exploits fixed-point computation, incremental maintenance of invariants, and combinations of indexed and linked data structures. We apply the method to a number of analysis problems, some with improved algorithm complexities and all with greatly improved algorithm understanding and greatly simplified complexity analysis.\n", "author": [{"name": "Yanhong A. Liu", "affiliation": "State University of New York at Stony Brook, Stony Brook, NY"}, {"name": "Scott D. Stoller", "affiliation": "State University of New York at Stony Brook, Stony Brook, NY"}, {"name": "Yanhong A. Liu", "affiliation": "State University of New York at Stony Brook, Stony Brook, NY"}, {"name": "Scott D. Stoller", "affiliation": "State University of New York at Stony Brook, Stony Brook, NY"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "30", "references": [{"title": "Querying semi-structured data", "authors": ["Abiteboul"]}, {"title": "Foundations of Databases", "authors": ["Abiteboul", " Hull"]}, {"title": "Data Structures and Algorithms", "authors": ["Aho", " Hopcroft"]}, {"title": "Introduction to set constraint-based program analysis", "authors": ["Aiken"]}, {"title": "Program analysis and specialization for the C programming language", "authors": ["Andersen"]}, {"title": "Semantics of static pointcuts in AspectJ", "authors": ["Avgustinov", " Hajiyev", " Ongkingco", " de Moor", " Sereni", " Tibble"]}, {"title": "Magic sets and other strange ways to implement logic programs", "authors": ["Bancilhon", " Maier", " Sagiv"]}, {"title": "Computational problems related to the design of normal form relational schemas", "authors": ["Beeri"]}, {"title": "Type analysis and data structure selection", "authors": ["Cai", " Facon", " Henglein", " Paige"]}, {"title": "Program derivation by fixed point computation", "authors": ["Cai"]}, {"title": "Answering regular path queries using views", "authors": ["Calvanese", " DeGiacomo", " Lenzerini"]}, {"title": "Logic Programming and Databases", "authors": ["Ceri", " Gottlob"]}, {"title": "Tabled evaluation with delaying for general logic programs", "authors": ["Chen"]}, {"title": "Certificate chain discovery in SPKI/SDSI", "authors": ["Clarke", " Elien", " Ellison", " Fredette", " Morcos"]}, {"title": "Model Checking", "authors": [" Grumberg"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": "Complexity and expressive power of logic programming", "authors": ["Dantsin", " Eiter", " Gottlob"]}, {"title": "Universal regular path queries", "authors": ["de Moor", " Lacey"]}, {"title": "RFC 2693: SPKI Certificate Theory", "authors": ["Ellison", " Frantz", " Lampson", " Rivest", " Thomas"]}, {"title": "Efficient algorithms for model checking pushdown systems", "authors": ["Esparza", " Hansel", " Rossmanith"]}, {"title": "A new meta-complexity theorem for bottom-up logic programs", "authors": ["Ganzinger"]}, {"title": "Logical algorithms", "authors": ["Ganzinger"]}, {"title": "The stable model semantics for logic programming", "authors": ["Gelfond"]}, {"title": "Conjunctive queries over trees", "authors": ["Gottlob", " Koch"]}, {"title": "On the complexity of single-rule datalog queries", "authors": ["Gottlob"]}, {"title": "Set constraints and set-based analysis", "authors": ["Heintze"]}, {"title": "Ultra-fast aliasing analysis using CLA: A million lines of C code in a second", "authors": ["Heintze"]}, {"title": "Optimizing compilation of constraint handling rules in hal", "authors": ["Holzbaur", " B", " Stuckey"]}, {"title": "Improved algorithm complexities for linear temporal logic model checking of push down systems", "authors": ["Hristova"]}, {"title": "Efficient type inference for secure information flow", "authors": ["Hristova", " Rothamel", " Liu"]}, {"title": "Efficient trust management policy analysis from rules", "authors": ["Hristova", " Tekle"]}, {"title": "Constraint logic programming: A survey", "authors": ["Jaffar"]}, {"title": "Model checking SPKI/SDSI", "authors": ["Jha"]}, {"title": "A framework for an efficient implementation of deductive databases", "authors": ["Kifer"]}, {"title": "On compile-time query optimization in deductive databases by means of static filtering", "authors": ["Kifer"]}, {"title": "On the expressive power of datalog: Tools and a case study", "authors": ["Kolaitis"]}, {"title": "Context-sensitive program analysis as database queries", "authors": ["Lam", " Whaley", " Livshits", " Martin", " Avots", " Carbin"]}, {"title": "Logic program specialisation", "authors": ["Leuschel"]}, {"title": "Datalog with constraints: A foundation for trust management languages", "authors": []}, {"title": "Indexing and querying XML data for regular path expressions", "authors": []}, {"title": "Efficiency by incrementalization: An introduction", "authors": ["Liu"]}, {"title": "Solving regular tree grammar-based constraints", "authors": ["Liu", " Li"]}, {"title": "Parametric regular path queries", "authors": ["Liu", " Rothamel", " Yu", " Stoller"]}, {"title": "Program optimization using indexed and recursive data structures", "authors": ["Liu"]}, {"title": "Dynamic programming via static incrementalization", "authors": ["Liu"]}, {"title": "Querying complex graphs", "authors": ["Liu"]}, {"title": "Static caching for incremental computation", "authors": ["Liu", " Stoller"]}, {"title": "Strengthening invariants for efficient computation", "authors": ["Liu", " Stoller"]}, {"title": "Solving regular path queries", "authors": ["Liu"]}, {"title": "Partial evaluation in logic programming", "authors": ["Lloyd"]}, {"title": "On the complexity analysis of static analyses", "authors": ["McAllester"]}, {"title": "Bottom-up evaluation of logic programs", "authors": ["Naughton"]}, {"title": "Automatic complexity analysis", "authors": ["Nielson", " Nielson"]}, {"title": "Formal Differentiation: A Program Synthesis Technique", "authors": ["Paige"]}, {"title": "Programming with invariants", "authors": ["Paige"]}, {"title": "Real-time simulation of a set machine on a RAM", "authors": ["Paige"]}, {"title": "Finite differencing of computable expressions", "authors": ["Paige"]}, {"title": "Term indexing", "authors": ["Ramakrishnan", " Sekar"]}, {"title": "Program analysis via graph reachability", "authors": ["Reps"]}, {"title": "XSB as a deductive database", "authors": ["Sagonas", " Swift"]}, {"title": "Analyses, optimizations and extensions of constraint handling rules", "authors": ["Schrijvers"]}, {"title": "Programming with Sets: An Introduction to SETL", "authors": ["Schwartz", " Dewar", " Dubinsky"]}, {"title": "The SETL2 Programming Language", "authors": ["Snyder"]}, {"title": "Generating efficient security software from policies", "authors": ["Stoller"]}, {"title": "OLD resolution with tabulation", "authors": ["Tamaki"]}, {"title": "Generating specialized rules and programs for demand-driven analysis", "authors": ["Tekle", " Hristova"]}, {"title": "The complexity of relational query languages (extended abstract)", "authors": ["Vardi"]}, {"title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams", "authors": ["Whaley"]}]},
{"title": "WYSINWYX: What you see is not what you eXecute", "time": "August 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Over the last seven years, we have developed static-analysis methods to recover a good approximation to the variables and dynamically allocated memory objects of a stripped executable, and to track the flow of values through them. The article presents the algorithms that we developed, explains how they are used to recover Intermediate Representations (IRs) from executables that are similar to the IRs that would be available if one started from source code, and describes their application in the context of program understanding and automated bug hunting.\nUnlike algorithms for analyzing executables that existed prior to our work, the ones presented in this article provide useful information about memory accesses, even in the absence of debugging information. The ideas described in the article are incorporated in a tool for analyzing Intel x86 executables, called CodeSurfer/x86. CodeSurfer/x86 builds a system dependence graph for the program, and provides a GUI for exploring the graph by (i) navigating its edges, and (ii) invoking operations, such as forward slicing, backward slicing, and chopping, to discover how parts of the program can impact other parts.\nTo assess the usefulness of the IRs recovered by CodeSurfer/x86 in the context of automated bug hunting, we built a tool on top of CodeSurfer/x86, called Device-Driver Analyzer for x86 (DDA/x86), which analyzes device-driver executables for bugs. Without the benefit of either source code or symbol-table/debugging information, DDA/x86 was able to find known bugs (that had been discovered previously by source-code analysis tools), along with useful error traces, while having a low false-positive rate. DDA/x86 is the first known application of program analysis/verification techniques to industrial executables.\n", "author": [{"name": "Gogul Balakrishnan", "affiliation": "NEC Laboratories America, Inc., Princeton, NJ"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc., Ithaca, NY"}, {"name": "Gogul Balakrishnan", "affiliation": "NEC Laboratories America, Inc., Princeton, NJ"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc., Ithaca, NY"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "125", "references": [{"title": "Eliminating virtual function calls in C++ programs", "authors": ["Aigner"]}, {"title": "aiT worst-case execution time analyzer", "authors": []}, {"title": "Data dependence analysis of assembly code", "authors": ["Amme", " Braun", " Zehendner"]}, {"title": "Programmanalyse des xrtl zwischencodes", "authors": ["Backes"]}, {"title": "Dynamo: A transparent runtime optimization system", "authors": ["Bala", " Duesterwald"]}, {"title": "WYSINWYX: What You See Is Not What You eXecute", "authors": ["Balakrishnan"]}, {"title": "Codesurfer/x86 -- A platform for analyzing x86 executables, (tool demonstration paper)", "authors": ["Balakrishnan", " Gruian", " Reps"]}, {"title": "Analyzing memory accesses in x86 executables", "authors": ["Balakrishnan"]}, {"title": "Recency-Abstraction for heap-allocated storage", "authors": ["Balakrishnan"]}, {"title": "DIVINE: DIscovering Variables IN Executables", "authors": ["Balakrishnan"]}, {"title": "Analyzing stripped device-driver executables", "authors": ["Balakrishnan"]}, {"title": "Model checking x86 executables with CodeSurfer/x86 and WPDS++", "authors": ["Balakrishnan", " Reps", " Kidd", " Lal", " Lim", " Melski", " Gruian", " Yong", " Chen"]}, {"title": "WYSINWYX: What you see is not what you execute", "authors": ["Balakrishnan", " Reps", " Melski"]}, {"title": "Thorough static analysis of device drivers", "authors": ["Ball", " Bounimova", " Cook", " Levin", " Lichtenberg", " McGarvey", " Ondrusek", " Rajamani"]}, {"title": "Bebop: A symbolic model checker for Boolean programs", "authors": ["Ball"]}, {"title": "The SLAM toolkit", "authors": ["Ball"]}, {"title": "Static detection of malicious code in executable programs", "authors": ["Bergeron", " Debbabi", " Desharnais", " Erhioui", " Lavoie"]}, {"title": "Static analysis of binary code to isolate malicious behaviors", "authors": ["Bergeron", " Debbabi", " Erhioui"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Blanchet", " Cousot", " Cousot", " Feret", " Mauborgne", " Min\u00e9", " Monniaux"]}, {"title": "Reachability analysis of pushdown automata: Application to model checking", "authors": ["Bouajjani", " Esparza"]}, {"title": "Efficient chaotic iteration strategies with widenings", "authors": ["Bourdoncle"]}, {"title": "AWE: Improving software analysis through modular integration of static and dynamic analyses", "authors": ["Brown", " Khazan"]}, {"title": "Alias analysis for assembly", "authors": ["Brumley"]}, {"title": "Graph-Based algorithms for Boolean function manipulation", "authors": ["Bryant"]}, {"title": "Symbolic model checking: 1020 states and beyond", "authors": ["Burch", " Clarke", " McMillan", " Dill"]}, {"title": "A static analyzer for finding dynamic programming errors", "authors": ["Bush", " Pincus"]}, {"title": "Certified self-modifying code", "authors": ["Cai", " Shao"]}, {"title": "Physical type checking for C", "authors": ["Ch"]}, {"title": "Analysis of low-level code using cooperating decompilers", "authors": ["Chang", " Harren"]}, {"title": "MOPS: An infrastructure for examining security properties of software", "authors": ["Chen"]}, {"title": "An empirical study of operating systems errors", "authors": ["Chou", " Yang", " Chelf", " Hallem"]}, {"title": "String analysis for x86 binaries", "authors": ["Christodorescu", " Goh"]}, {"title": "Interprocedural data flow recovery of high-level language code from assembly", "authors": ["Cifuentes"]}, {"title": "Intraprocedural static slicing of binary executables", "authors": ["Cifuentes"]}, {"title": "Assembly to high-level language translation", "authors": ["Cifuentes", " Simon"]}, {"title": "Counterexample-Guided abstraction refinement", "authors": ["Clarke", " Grumberg", " Jha", " Lu"]}, {"title": "CodeSonar, GrammaTech, Inc", "authors": [" GrammaTech"]}, {"title": "CodeSurfer, GrammaTech, Inc", "authors": [" GrammaTech"]}, {"title": "Interprocedural side-effect analysis in linear time", "authors": ["Cooper"]}, {"title": "Bandera: Extracting finite-state models from Java source code", "authors": ["Corbett", " Dwyer", " Hatcliff", " Laubach", " Pasareanu", " Robby"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction of approximation of fixed points", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Automatic discovery of linear constraints among variables of a program", "authors": ["Cousot"]}, {"title": "Static detection of vulnerabilities in x86 executables", "authors": ["Cova", " Felmetsger", " Banks"]}, {"title": "Coverity Prevent", "authors": []}, {"title": "ESP: Path-Sensitive program verification in polynomial time", "authors": ["Das", " Lerner"]}, {"title": "On the static analysis of indirect control transfers in binaries", "authors": ["De Sutter", " De Bus", " De Bosschere", " Keyngnaert"]}, {"title": "Stack analysis of x86 executables", "authors": ["Debray", " Linn", " Andrews"]}, {"title": "Alias analysis of executable code", "authors": ["Debray", " Muth"]}, {"title": "Path-Sensitive dataflow analysis with iterative refinement", "authors": ["Dhurjati", " Das"]}, {"title": "&sect;1201", "authors": ["DMCA &sec"]}, {"title": "CSSV: Towards a realistic tool for statically detecting all buffer overflows in C", "authors": ["Dor", " Rodeh"]}, {"title": "Anno Domini: From type theory to year 2000 conversion tool", "authors": ["Eidorff", " Henglein", " Mossin", " Niss", " S\u00f8rensen"]}, {"title": "Static single assignment for decompilation", "authors": ["Emmerik"]}, {"title": "Checking system rules using system-specific, programmer-written compiler extensions", "authors": ["Engler", " Chelf", " Chou"]}, {"title": "Modular verification of as - sembly code with stack-based control abstractions", "authors": ["Feng", " Shao", " Vaynberg", " Xiang"]}, {"title": "Personal communication", "authors": ["Ferdin"]}, {"title": "Reliable and precise WCET determination for a real-life processor", "authors": ["Ferdin", " Heckmann", " Langenbach", " Martin", " Schmidt", " Theiling", " Thesing"]}, {"title": "A direct symbolic approach to model checking pushdown systems", "authors": ["Finkel", " Willems"]}, {"title": "Joining dataflow with predicates", "authors": ["Fischer", " Jhala"]}, {"title": "Lookahead widening", "authors": ["Gopan"]}, {"title": "Low-Level library analysis and summarization", "authors": ["Gopan"]}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "Static congruence analysis of binaries", "authors": ["Grewe"]}, {"title": "Practical and accurate low-level pointer analysis", "authors": ["Guo", " Bridges", " Triantafyllis", " Ottoni", " Raman"]}, {"title": "Verification of real-time systems using linear relation analysis", "authors": ["Halbwachs", " Proy"]}, {"title": "Model checking Java programs using Java PathFinder", "authors": ["Havelund"]}, {"title": "Abstractions from proofs", "authors": ["Henzinger", " Jhala", " Majumdar"]}, {"title": "Lazy abstraction", "authors": ["Henzinger", " Jhala", " Majumdar"]}, {"title": "Pointer analysis: Haven't we solved this problem yet&quest; In Proceedings of the Conference on Program Analysis for Software Tools and Engineering", "authors": ["Hind"]}, {"title": "Qualified data flow problems", "authors": ["Holley"]}, {"title": "Some bad news and some good news", "authors": ["Howard"]}, {"title": "IDAPro disassembler", "authors": []}, {"title": "Secure execution via program shepherding", "authors": ["Kiriansky", " Bruening"]}, {"title": "Interprocedural static slicing of binary executables", "authors": ["Kiss"]}, {"title": "Automating mimicry attacks using static binary analysis", "authors": ["Kruegel", " Kirda", " Mutz", " Robertson"]}, {"title": "Computer-Aided Verification of Coordinating Processes", "authors": ["Kurshan"]}, {"title": "Extended weighted pushdown systems", "authors": ["Lal", " Reps"]}, {"title": "EEL: Machine-Independent executable editing", "authors": ["Larus"]}, {"title": "A system for generating static analyzers for machine instructions", "authors": ["Lim"]}, {"title": "Extracting output formats from executables", "authors": ["Lim", " Reps"]}, {"title": "Compactly representing first-order structures for static analysis", "authors": ["Manevich", " Ramalingam", " Field", " Goyal"]}, {"title": "Trace partitioning in abstract interpretation based static analyzers", "authors": ["Mauborgne"]}, {"title": "Field-Sensitive value analysis of embedded C programs with union types and pointer arithmetics", "authors": ["Min\u00e9"]}, {"title": "Analysis of modular arithmetic", "authors": ["M\u00fcller-Olm"]}, {"title": "Type-Based decompilation", "authors": ["Mycroft"]}, {"title": "Efficient applicative data types", "authors": ["Myers"]}, {"title": "Certified assembly programming with embedded code pointers", "authors": []}, {"title": "A theory of platform-dependent low-level software", "authors": ["Nita", " Grossman"]}, {"title": "Lackwit: A program understanding tool based on type inference", "authors": ["O'Callahan"]}, {"title": "Programming the Microsoft Windows Driver Model", "authors": ["Oney"]}, {"title": "Data-Flow-Based virtual function resolution", "authors": []}, {"title": "Phoenix software optimization and analysis framework", "authors": []}, {"title": "Combining interprocedural pointer analysis and conditional constant propagation", "authors": ["Pioli"]}, {"title": "PREfast with driver-specific rules", "authors": ["PREfast"]}, {"title": "Incremental computation and the incremental evaluation of functional programs", "authors": ["Pugh"]}, {"title": "Aggregate structure identification and its application to program analysis", "authors": ["Ramalingam", " Field"]}, {"title": "Eliminating stack overflow by abstract interpretation", "authors": ["Regehr", " Reid"]}, {"title": "Improved memory-access analysis for x86 executables", "authors": ["Reps"]}, {"title": "Intermediate-Representation recovery from low-level code", "authors": ["Reps", " Balakrishnan"]}, {"title": "A next-generation platform for analyzing executables", "authors": ["Reps", " Balakrishnan", " Lim"]}, {"title": "Incremental context-dependent analysis for language-based editors", "authors": ["Reps", " Teitelbaum"]}, {"title": "Abstract interpretation based certification of assembly code", "authors": ["Rival"]}, {"title": "Symbolic bounds analysis of pointers, array indices, and accessed memory regions", "authors": ["Rugina"]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Sharir"]}, {"title": "Program generalization for software reuse: From C to C++", "authors": ["Siff"]}, {"title": "Vulcan: Binary transformation in a distributed environment", "authors": ["Srivastava", " Edwards"]}, {"title": "ATOM - A system for building customized program analysis tools", "authors": ["Srivastava"]}, {"title": "Recovering device drivers", "authors": ["Swift", " Annamalai", " Bershad"]}, {"title": "Improving the reliability of commodity operating systems", "authors": ["Swift", " Bershad"]}, {"title": "Type inference for COBOL systems", "authors": ["van Deursen"]}, {"title": "Type inference for COBOL systems", "authors": ["van Deursen"]}, {"title": "A first step towards automated detection of buffer overrun vulnerabilities", "authors": ["Wagner", " Foster", " Brewer"]}, {"title": "Systems for late code modification", "authors": ["Wall"]}, {"title": "C++ for kernel mode drivers: Pros and cons", "authors": ["WHDC"]}, {"title": "Defrauding the WHQL driver certification process", "authors": ["WHQL"]}, {"title": "", "authors": [" Sept"]}, {"title": "", "authors": [" Sept"]}, {"title": "The worst-case execution-time problem\u2014Overview of methods and survey of tools", "authors": ["Wilhelm", " Engblom", " Ermedahl", " Holsti", " Thesing", " Whalley", " Bernat", " Ferdin", " Heckmann", " Mitra", " Mueller", " Puaut", " Puschner", " Staschu- lat"]}, {"title": "Efficient context-sensitive pointer analysis for C programs", "authors": ["Wilson"]}, {"title": "Windows Server 2003 DDK", "authors": ["Windows DDK"]}, {"title": "Safety checking of machine code", "authors": [" Miller"]}, {"title": "Typestate checking of machine code", "authors": [" Miller"]}, {"title": "Parameter and return-value analysis of binary executables", "authors": ["Zhang", " Zhao"]}]},
{"title": "Local policies for resource usage analysis", "time": "August 2009", "keyword": ["Programming Languages and Systems"], "abstract": "An extension of the \u03bb-calculus is proposed, to study resource usage analysis and verification. It features usage policies with a possibly nested, local scope, and dynamic creation of resources. We define a type and effect system that, given a program, extracts a history expression, that is, a sound overapproximation to the set of histories obtainable at runtime. After a suitable transformation, history expressions are model-checked for validity. A program is resource-safe if its history expression is verified valid: If such, no runtime monitor is needed to safely drive its executions.\n", "author": [{"name": "Massimo Bartoletti", "affiliation": "Universit\u00e0 degli Studi di Cagliari, and Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Pierpaolo Degano", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Gian-Luigi Ferrari", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Roberto Zunino", "affiliation": "Universit\u00e0 degli Studi di Trento, Povo, Italy"}, {"name": "Massimo Bartoletti", "affiliation": "Universit\u00e0 degli Studi di Cagliari, and Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Pierpaolo Degano", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Gian-Luigi Ferrari", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Roberto Zunino", "affiliation": "Universit\u00e0 degli Studi di Trento, Povo, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "38", "references": [{"title": "Usage automata", "authors": ["Bartoletti"]}, {"title": "Securing Java with local policies", "authors": ["Bartoletti", " Costa", " Degano", " Martinelli"]}, {"title": "Stack inspection and secure program transformations", "authors": ["Bartoletti", " Degano"]}, {"title": "Checking risky events is enough for local policies", "authors": ["Bartoletti", " Degano"]}, {"title": "Enforcing secure service composition", "authors": ["Bartoletti", " Degano"]}, {"title": "History-based access control with local policies", "authors": ["Bartoletti", " Degano"]}, {"title": "Types and effects for secure service orchestration", "authors": ["Bartoletti", " Degano"]}, {"title": "Types and effects for resource usage analysis", "authors": ["Bartoletti", " Degano", " Ferrari"]}, {"title": "Model checking usage policies", "authors": ["Bartoletti", " Degano", " Ferrari"]}, {"title": "LocUsT: A tool for checking usage policies", "authors": ["Bartoletti"]}, {"title": "More enforceable security policies", "authors": ["Bauer", " Ligatti"]}, {"title": "Composing security policies with Polymer", "authors": ["Bauer", " Ligatti"]}, {"title": "Algebra of communicating processes with abstraction", "authors": ["Bergstra"]}, {"title": "Interfaces for stack inspection", "authors": ["Besson", " de Grenier de Latour"]}, {"title": "L", "authors": ["Besson", " Jensen", " M&amp"]}, {"title": "On the expressivity of the modal mu-calculus", "authors": ["Bradfield"]}, {"title": "Types as models: Model-checking message-passing programs", "authors": ["Chaki", " Rajamani"]}, {"title": "Decidability and decomposition in process algebras", "authors": ["Christensen"]}, {"title": "Enforcing trace properties by program transformation", "authors": ["Colcombet"]}, {"title": "On the decidability of process equivalences for the pi-calculus", "authors": ["Dam"]}, {"title": "SASI enforcement of security policies: A retrospective", "authors": ["Erlingsson"]}, {"title": "On the decidability of model checking for several &amp;mu;-calculi and Petri nets", "authors": ["Esparza"]}, {"title": "Access control by tracking shallow execution history", "authors": ["Fong"]}, {"title": "Stack inspection: Theory and variants", "authors": ["Fournet"]}, {"title": "Computability classes for enforcement mechanisms", "authors": ["Hamlen", " Morrisett"]}, {"title": "Resource usage analysis", "authors": ["Igarashi"]}, {"title": "Resource usage analysis for a functional language with exceptions", "authors": ["Iwama", " Igarashi"]}, {"title": "Time regions and effects for resource usage analysis", "authors": ["Kobayashi"]}, {"title": "Results on the propositional &amp;mu;-calculus", "authors": ["Kozen"]}, {"title": "Resource usage verification", "authors": ["Marriott", " Stuckey"]}, {"title": "Decidability and complexity of model-checking problems for infinite-state systems", "authors": ["Mayr"]}, {"title": "A calculus of mobile processes, I and II", "authors": ["Milner", " Parrow"]}, {"title": "Proof-carrying code", "authors": ["Necula"]}, {"title": "Higher-order concurrent programs with finite communication topology", "authors": ["Nielson"]}, {"title": "Enforceable security policies", "authors": ["Schneider"]}, {"title": "Trace effects and object orientation", "authors": ["Skalka"]}, {"title": "History effects and verification", "authors": ["Skalka"]}, {"title": "Types and trace effects of higher-order programs", "authors": ["Skalka", " Smith"]}, {"title": "Polymorphic type, region and effect inference", "authors": ["Talpin"]}, {"title": "Resource usage analysis via scoped methods", "authors": ["Tan", " Ou"]}, {"title": "Program specialization for execution monitoring", "authors": ["Thiemann"]}, {"title": "A type system for expressive security policies", "authors": ["Walker"]}, {"title": "SAFKASI: A security mechanism for language-based systems", "authors": ["Wallach", " Appel"]}, {"title": "HBAC: A model for history-based access control and its model-checking", "authors": ["Wang", " Takata"]}]},
{"title": "Dependence clusters in source code", "time": "November 2009", "keyword": ["Programming Languages and Systems"], "abstract": "A dependence cluster is a set of program statements, all of which are mutually inter-dependent. This article reports a large scale empirical study of dependence clusters in C program source code. The study reveals that large dependence clusters are surprisingly commonplace. Most of the 45 programs studied have clusters of dependence that consume more than 10% of the whole program. Some even have clusters consuming 80% or more. The widespread existence of clusters has implications for source code analyses such as program comprehension, software maintenance, software testing, reverse engineering, reuse, and parallelization.\n", "author": [{"name": "Mark Harman", "affiliation": "King's College London, London, UK"}, {"name": "David Binkley", "affiliation": "Loyola College, Baltimore, MD"}, {"name": "Keith Gallagher", "affiliation": "Durham University, Durham, UK"}, {"name": "Nicolas Gold", "affiliation": "King's College London, London, UK"}, {"name": "Jens Krinke", "affiliation": "King's College London, London, UK"}, {"name": "Mark Harman", "affiliation": "King's College London, London, UK"}, {"name": "David Binkley", "affiliation": "Loyola College, Baltimore, MD"}, {"name": "Keith Gallagher", "affiliation": "Durham University, Durham, UK"}, {"name": "Nicolas Gold", "affiliation": "King's College London, London, UK"}, {"name": "Jens Krinke", "affiliation": "King's College London, London, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "27", "references": [{"title": "Using dependence graphs as a support to document programs", "authors": ["Balmas"]}, {"title": "Fitness function design to improve evolutionary structural testing", "authors": ["Baresel", " Sthamer"]}, {"title": "Incremental program testing using program dependence graphs", "authors": ["Bates"]}, {"title": "Program and interface slicing for reverse engineering", "authors": ["Beck"]}, {"title": "Dynamic slicing method for maintenance of large C programs", "authors": ["Besz\u00e9des", " Gergely", " Szab\u00f3", " Csirik"]}, {"title": "Union slices for the approximation of the precise slice", "authors": ["Besz\u00e9des"]}, {"title": "Measuring functional cohesion", "authors": ["Bieman"]}, {"title": "Design for testability in object--oriented systems", "authors": ["Binder"]}, {"title": "Forward slices are smaller than backward slices", "authors": ["Binkley"]}, {"title": "Locating dependence clusters and dependence pollution", "authors": ["Binkley"]}, {"title": "Animated visualisation of static analysis: Characterising, explaining and exploiting the approximate nature of static analysis", "authors": ["Binkley", " Harman"]}, {"title": "Semantics guided regression test cost reduction", "authors": ["Binkley"]}, {"title": "The application of program slicing to regression testing", "authors": ["Binkley"]}, {"title": "Program slicing", "authors": ["Binkley"]}, {"title": "Analysis and visualization of predicate dependence on formal parameters and global variables", "authors": ["Binkley"]}, {"title": "A survey of empirical results on program slicing", "authors": ["Binkley"]}, {"title": "Empirical study of optimization techniques for massive slicing", "authors": ["Binkley", " Harman"]}, {"title": "An empirical study of amorphous slicing as a program comprehension support tool", "authors": ["Binkley", " Harman", " Raszewski"]}, {"title": "Program integration for languages with procedure calls", "authors": ["Binkley", " Horwitz"]}, {"title": "Computing ripple effect for software maintenance", "authors": ["Black"]}, {"title": "Impact analysis by mining software and change request repositories", "authors": ["Canfora"]}, {"title": "Software salvaging based on conditions", "authors": ["Canfora", " Cimitile", " De Lucia"]}, {"title": "RE", "authors": ["Canfora", " Cimitile"]}, {"title": "", "authors": []}, {"title": "An integrated environment for reuse reengineering C code", "authors": ["Canfora", " De Lucia"]}, {"title": "Identifying reusable functions using specification driven program slicing: a case study", "authors": ["Cimitile", " De Lucia"]}, {"title": "A specification driven slicing process for identifying reusable functions", "authors": ["Cimitile", " De Lucia"]}, {"title": "Preamble computation in automated test case generation using constraint logic programming", "authors": ["Colin", " Legeard"]}, {"title": "Program slicing: Methods and applications", "authors": ["De Lucia"]}, {"title": "Understanding function behaviours through program slicing", "authors": ["De Lucia", " Fasolino"]}, {"title": "Unions of slices are not slices", "authors": ["De Lucia", " Harman", " Hierons"]}, {"title": "Program slice browser", "authors": ["Deng", " Kothari"]}, {"title": "Locating features in source code", "authors": ["Eisenbarth", " Koschke"]}, {"title": "Partial online cycle elimination in inclusion constraint graphs", "authors": ["Fahndrich", " Foster", " Su"]}, {"title": "The chaining approach for software test data generation", "authors": ["Ferguson"]}, {"title": "An empirical study of computation equivalence as determined by decomposition slice equivalence", "authors": ["Gallagher"]}, {"title": "Are decomposition slices clones&quest; In Proceedings of the 11th International Workshop on Program Comprehension", "authors": ["Gallagher"]}, {"title": "Analyzing programs via decomposition slicing", "authors": ["Gallagher"]}, {"title": "Evaluating the surgeon's assistant: Results of a pilot study", "authors": ["Gallagher"]}, {"title": "Visual impact analysis", "authors": ["Gallagher"]}, {"title": "Guaranteed inconsistency avoidance during software evolution", "authors": ["Gallagher", " Harman"]}, {"title": "Using program slicing in software maintenance", "authors": ["Gallagher"]}, {"title": "The codesurfer slicing system", "authors": ["Grammatech Inc"]}, {"title": "An approach to regression testing using slicing", "authors": ["Gupta", " Harrold"]}, {"title": "Using software development progress data to understand threats to project outcomes", "authors": ["Hall", " Rainer"]}, {"title": "Amorphous procedure extraction", "authors": ["Harman", " Binkley", " Singh"]}, {"title": "Amorphous program slicing", "authors": ["Harman", " Binkley"]}, {"title": "Using program slicing to simplify testing", "authors": ["Harman"]}, {"title": "The impact of input domain reduction on search-based test data generation", "authors": ["Harman", " Hassoun", " Lakhotia", " McMinn"]}, {"title": "An overview of program slicing", "authors": ["Harman"]}, {"title": "Testability transformation", "authors": ["Harman", " Hu", " Hierons", " Wegener", " Sthamer", " Baresel"]}, {"title": "An empirical study of the robustness of two module clustering fitness functions", "authors": ["Harman", " Swift"]}, {"title": "Integrating non--interfering versions of programs", "authors": ["Horwitz", " Prins"]}, {"title": "Interprocedural slicing using dependence graphs", "authors": ["Horwitz", " Reps"]}, {"title": "System structure analysis: clustering with data bindings", "authors": ["Hutchens"]}, {"title": "Improving visual impact analysis", "authors": ["Hutchens"]}, {"title": "A new model of program dependences for reverse engineering", "authors": ["Jackson"]}, {"title": "CCFinder: A multi-linguistic token-based code clone detection system for large scale source code", "authors": ["Kamiya", " Kusumoto"]}, {"title": "Aspect oriented programming", "authors": ["Kiczales"]}, {"title": "Semantics-preserving procedure extraction", "authors": ["Komondoor"]}, {"title": "Effective automatic procedure extraction", "authors": ["Komondoor"]}, {"title": "Automated software test data generation", "authors": ["Korel"]}, {"title": "Dynamic program slicing in understanding of program execution", "authors": ["Korel"]}, {"title": "Program slicing in understanding of large programs", "authors": ["Korel"]}, {"title": "Validation of measurement software as an application of slicing and constraint solving", "authors": ["Krinke"]}, {"title": "Experimental evaluation of program slicing for fault localization", "authors": ["Kusumoto", " Nishimatsu", " Nishie"]}, {"title": "Rule--based approach to computing module cohesion", "authors": ["Lakhotia"]}, {"title": "Restructuring programs by tucking statements into functions", "authors": ["Lakhotia"]}, {"title": "Challenges in getting formal with viruses", "authors": ["Lakhotia"]}, {"title": "On understanding laws, evolution and conservation in the large program life cycle", "authors": ["Lehman"]}, {"title": "Software's future: Managing evolution", "authors": ["Lehman"]}, {"title": "Effective Software Test Automation: Developing an Automated Software Testing Tool", "authors": []}, {"title": "Automatic program bug location by program slicing", "authors": ["Lyle"]}, {"title": "A multiple hill climbing approach to software module clustering", "authors": ["Mahdavi", " Harman"]}, {"title": "Bunch: A clustering tool for the recovery and maintenance of software system structures", "authors": ["Mancoridis", " Mitchell", " Chen"]}, {"title": "Slice-based cohesion metrics and software intervention", "authors": ["Meyers"]}, {"title": "Using heuristic search techniques to extract design abstractions from source code", "authors": ["Mitchell"]}, {"title": "On the automatic modularization of software systems using the bunch tool", "authors": ["Mitchell"]}, {"title": "Automated support for legacy code understanding", "authors": ["Ning", " Engberts"]}, {"title": "The relationship between slices and module cohesion", "authors": ["Ott"]}, {"title": "Identifying failure causes in java programs: An application of change impact analysis", "authors": ["Ren", " Chesley"]}, {"title": "Chianti: a change impact analysis tool for java programs", "authors": ["Ren", " Ryder", " St\u00f6rzer"]}, {"title": "MOOSE--A software comprehension framework", "authors": ["Rilling", " Seffah"]}, {"title": "On the use of metaballs to visually map source code structures and analysis results onto 3d space", "authors": ["Rilling"]}, {"title": "Automatic re-engineering of software using genetic programming", "authors": ["Ryan"]}, {"title": "Empirical software change impact analysis using singular value decomposition", "authors": ["Sherriff"]}, {"title": "A survey of program slicing techniques", "authors": ["Tip"]}, {"title": "Using a concept lattice of decomposition slices for program understanding and impact analysis", "authors": ["Tonella"]}, {"title": "Automated test-data generation for exception conditions", "authors": ["Tracey", " Clark", " M"]}, {"title": "Software testability: The new verification", "authors": ["Voas"]}, {"title": "Programmers use slices when debugging", "authors": ["Weiser"]}, {"title": "SLOC count user's guide", "authors": ["Wheeler"]}, {"title": "Design stability measures for software maintenance", "authors": ["Yau"]}, {"title": "Slicing aspect-oriented software", "authors": ["Zhao"]}]},
{"title": "Parametric polymorphism for XML", "time": "November 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Despite the extensiveness of recent investigations on static typing for XML, parametric polymorphism has rarely been treated. This well-established typing discipline can also be useful in XML processing in particular for programs involving \u201cparametric schemas,\u201d that is, schemas parameterized over other schemas (e.g., SOAP). The difficulty in treating polymorphism for XML lies in how to extend the \u201csemantic\u201d approach used in the mainstream (monomorphic) XML type systems. A naive extension would be \u201csemantic\u201d quantification over all substitutions for type variables. However, this approach reduces to an NEXPTIME-complete problem for which no practical algorithm is known and induces a subtyping relation that may not always match the programmer's intuition. In this article, we propose a different method that smoothly extends the semantic approach yet is algorithmically easier. The key idea here is to devise a novel and simple \n technique, where we interpret a polymorphic type as a set of values with annotations of which subparts are parameterized. We exploit this interpretation in every ingredient of our polymorphic type system such as subtyping, inference of type arguments, etc. As a result, we achieve a sensible system that directly represents a usual expected behavior of polymorphic type systems\u2014\u201cvalues of abstract types are never reconstructed\u201d\u2014in a reminiscence of Reynold's parametricity theory. Also, we obtain a set of practical algorithms for typechecking by local modifications to existing ones for a monomorphic system.\n", "author": [{"name": "Haruo Hosoya", "affiliation": "The University of Tokyo, Tokyo, Japan"}, {"name": "Alain Frisch", "affiliation": "LexiFi - France"}, {"name": "Giuseppe Castagna", "affiliation": "PPS (CNRS) - Universit\u00e9 Denis Diderot, Paris, France"}, {"name": "Haruo Hosoya", "affiliation": "The University of Tokyo, Tokyo, Japan"}, {"name": "Alain Frisch", "affiliation": "LexiFi - France"}, {"name": "Giuseppe Castagna", "affiliation": "PPS (CNRS) - Universit\u00e9 Denis Diderot, Paris, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "11", "references": [{"title": "Decidability of systems of set constraints with negative constraints", "authors": ["Aiken", " Kozen"]}, {"title": "XML with data values: Typechecking revisited", "authors": ["Alon", " Milo", " Neven", " Suciu"]}, {"title": "XHTML 1", "authors": ["Altheim"]}, {"title": "Standard ML of New Jersey", "authors": ["Appel"]}, {"title": "Mathematical Markup Language (MathML) Version 2", "authors": ["Ausbrooks", " Buswell", " Dalmas", " Devitt", " Diaz", " Hunter", " Smith", " Soiffer", " Sutor"]}, {"title": "CDuce: An XML-centric general-purpose language", "authors": ["Benzaken", " Castagna"]}, {"title": "Making the future safe for the past: Adding genericity to the Java programming language", "authors": ["Bracha", " Odersky", " Stoutamire"]}, {"title": "Extensible markup language (XML#8482;)", "authors": ["Bray", " Paoli", " Sperberg-McQueen"]}, {"title": "F-bounded polymorphism for object-oriented programming", "authors": ["Canning", " Cook", " Hill", " Olthoff"]}, {"title": "An extension of System F with subtyping", "authors": ["Cardelli", " Martini", " Mitchell"]}, {"title": "Typed iterators for XML", "authors": ["Castagna"]}, {"title": "Corrigendum: decidable bounded quantification", "authors": ["Castagna"]}, {"title": "Tree automata techniques and applications", "authors": ["Comon", " Dauchet", " Gilleron", " Jacquemard", " Lugiez", " Tison"]}, {"title": "XML protocol working group", "authors": ["Fallside"]}, {"title": "XQuery 1", "authors": ["Fankhauser", " Fern\u00e1ndez", " Malhotra", " Rys", " Sim\u00e9on"]}, {"title": "Th\u00e9orie, conception et r\u00e9alisation d'un langage de programmation adapt\u00e9 \u00e0 XML", "authors": ["Frisch"]}, {"title": "OCaml + XDuce", "authors": ["Frisch"]}, {"title": "Semantic subtyping", "authors": ["Frisch", " Castagna"]}, {"title": "Semantic subtyping: dealing set-theoretically with function, union, intersection, and negation types", "authors": ["Frisch", " Castagna"]}, {"title": "Set constraints and automata", "authors": ["Gilleron", " Tison"]}, {"title": "XJ: Facilitating XML processing in Java", "authors": ["Harren", " Raghavachari", " Shmueli", " Burke", " Bordawekar", " Pechtchanski"]}, {"title": "Regular expression pattern matching\u2014a simpler design", "authors": ["Hosoya"]}, {"title": "Regular expression filters for XML", "authors": ["Hosoya"]}, {"title": "Parametric polymorphism for XML", "authors": ["Hosoya", " Frisch"]}, {"title": "Boolean operations and inclusion test for attribute-element constraints", "authors": ["Hosoya"]}, {"title": "Regular expression pattern matching for XML", "authors": ["Hosoya"]}, {"title": "XDuce: A typed XML processing language", "authors": ["Hosoya"]}, {"title": "Regular expression types for XML", "authors": ["Hosoya", " Vouillon"]}, {"title": "An XHTML + MathML + SVG Profile", "authors": ["Ishikawa"]}, {"title": "Scalable Vector Graphics (SVG) 1", "authors": ["Jackson", " Ferraiolo"]}, {"title": "XACT - XML transformations in Java", "authors": ["Kirkegaard"]}, {"title": "The Objective Caml system", "authors": ["Leroy", " Doligez", " Garrigue", " Vouillon"]}, {"title": "XML type checking with macro tree transducers", "authors": ["Maneth", " Perst", " Berlea"]}, {"title": "Exact XML type checking in polynomial time", "authors": ["Maneth", " Perst"]}, {"title": "XM\u03bb: A functional programming language for constructing and manipulating XML documents", "authors": ["Meijer"]}, {"title": "The Definition of Standard ML", "authors": ["Milner", " Tofte"]}, {"title": "Typechecking for XML transformers", "authors": ["Milo", " Suciu"]}, {"title": "Extended path expressions for XML", "authors": ["Murata"]}, {"title": "The Atom Syndication Format (RFC 4287)", "authors": ["Nottingham"]}, {"title": "DocBook", "authors": ["OASIS"]}, {"title": "2007", "authors": []}, {"title": "The Glasgow Haskell compiler: a technical overview", "authors": ["Peyton Jones", " Hall", " Hammond", " Partain"]}, {"title": "The XML bookmark exchange language", "authors": ["Python XML Special Interest Group"]}, {"title": "Types, abstraction, and parametric polymorphism", "authors": ["Reynolds"]}, {"title": "Type-indexed rows", "authors": ["Shields"]}, {"title": "Systems of set constraints with negative constraints are nexptime-complete", "authors": ["Stef\u00e9nsson"]}, {"title": "The C++ Programming Language", "authors": ["Stroustrup"]}, {"title": "Non-backtracking top-down algorithm for checking tree automata containment", "authors": ["Suda"]}, {"title": "A type-safe embedding of XDuce into ML", "authors": ["Sulzmann"]}, {"title": "XHaskell", "authors": ["Sulzmann"]}, {"title": "XML schema containment checking based on semi-implicit techniques", "authors": ["Tozawa"]}, {"title": "Type inference for unique pattern matching", "authors": ["Vansummeren"]}, {"title": "Polymorphic regular tree types and patterns", "authors": ["Vouillon"]}, {"title": "Polymorphism and XDuce-style patterns", "authors": ["Vouillon"]}, {"title": "Haskell and XML: Generic combinators or type-based translation&quest; In Proceedings of the 4th ACM SIGPLAN International Conference on Functional Programming (ICFP'99)", "authors": ["Wallace"]}]},
{"title": "An experimental analysis of self-adjusting computation", "time": "November 2009", "keyword": ["Programming Languages and Systems"], "abstract": "Recent work on adaptive functional programming (AFP) developed techniques for writing programs that can respond to modifications to their data by performing \n. To achieve this, executions of programs are represented with \n (DDGs) that record data dependences and control dependences in a way that a change-propagation algorithm can update the computation as if the program were from scratch, by re-executing only the parts of the computation affected by the changes. Since change-propagation only re-executes parts of the computation, it can respond to certain incremental modifications asymptotically faster than recomputing from scratch, potentially offering significant speedups. Such asymptotic speedups, however, are rare: for many computations and modifications, change propagation is no faster than recomputing from scratch.\nIn this article, we realize a duality between dynamic dependence graphs and memoization, and combine them to give a change-propagation algorithm that can dramatically increase computation reuse. The key idea is to use DDGs to identify and re-execute the parts of the computation that are affected by modifications, while using memoization to identify the parts of the computation that remain unaffected by the changes. We refer to this approach as self-adjusting computation. Since DDGs are imperative, but (traditional) memoization requires purely functional computation, reusing computation correctly via memoization becomes a challenge. We overcome this challenge with a technique for remembering and reusing not just the results of function calls (as in conventional memoization), but their executions represented with DDGs. We show that the proposed approach is realistic by describing a library for self-adjusting computation, presenting efficient algorithms for realizing the library, and describing and evaluating an implementation. Our experimental evaluation with a variety of applications, ranging from simple list primitives to more sophisticated computational geometry algorithms, shows that the approach is effective in practice: compared to recomputing from-scratch; self-adjusting programs respond to small modifications to their data orders of magnitude faster.\n", "author": [{"name": "Umut A. Acar", "affiliation": "Toyota Technological Institute at Chicago"}, {"name": "Guy E. Blelloch", "affiliation": "Carnegie Mellon University"}, {"name": "Matthias Blume", "affiliation": "Toyota Technological Institute at Chicago"}, {"name": "Robert Harper", "affiliation": "Carnegie Mellon University"}, {"name": "Kanat Tangwongsan", "affiliation": "Carnegie Mellon University"}, {"name": "Umut A. Acar", "affiliation": "Toyota Technological Institute at Chicago"}, {"name": "Guy E. Blelloch", "affiliation": "Carnegie Mellon University"}, {"name": "Matthias Blume", "affiliation": "Toyota Technological Institute at Chicago"}, {"name": "Robert Harper", "affiliation": "Carnegie Mellon University"}, {"name": "Kanat Tangwongsan", "affiliation": "Carnegie Mellon University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "52", "references": [{"title": "Analysis and caching of dependencies", "authors": ["Abadi", " Lampson"]}, {"title": "Self-adjusting computation", "authors": ["Acar"]}, {"title": "Self-adjusting computation (an overview)", "authors": ["Acar"]}, {"title": "Imperative self-adjusting computation", "authors": ["Acar", " Ahmed"]}, {"title": "Robust kinetic convex hulls in 3D", "authors": ["Acar", " Blelloch", " Tangwongsan"]}, {"title": "A consistent semantics of self-adjusting computation", "authors": ["Acar", " Blume"]}, {"title": "Adaptive Bayesian Inference", "authors": ["Acar", " Ihler", " Mettu"]}, {"title": "A library for self-adjusting computation", "authors": ["Acar", " Blelloch", " Blume", " Harper"]}, {"title": "An experimental analysis of self-adjusting computation", "authors": ["Acar", " Blelloch", " Blume"]}, {"title": "Adaptive functional programming", "authors": ["Acar", " Blelloch"]}, {"title": "Dynamizing static algorithms with applications to dynamic trees and history independence", "authors": ["Acar", " Blelloch", " Harper", " Vittes"]}, {"title": "Selective memoization", "authors": ["Acar", " Blelloch"]}, {"title": "Adaptive functional programming", "authors": ["Acar", " Blelloch"]}, {"title": "Algorithmic issues in modeling motion", "authors": ["Agarwal", " Guibas", " Edelsbrunner", " Erickson", " Isard", " Har-Peled", " Hershberger", " Jensen", " Kavraki", " Koehl", " Lin", " Manocha", " Metaxas", " Mirtich", " Mount", " Muthukrishnan", " Pai", " Sacks", " Snoeyink", " Suri"]}, {"title": "Kinetic and dynamic data structures for convex hulls and upper envelopes", "authors": ["Alex", " Kaplan"]}, {"title": "Minimizing diameters of dynamic trees", "authors": ["Alstrup", " Holm", " de Lichtenberg"]}, {"title": "Maintaining information in fully-dynamic trees with top trees", "authors": ["Alstrup", " Holm", " de Lichtenberg"]}, {"title": "The Quickhull algorithm for convex hulls", "authors": ["Barber", " Dobkin"]}, {"title": "Data structures for mobile data", "authors": ["Basch", " Guibas"]}, {"title": "Dynamic Programming", "authors": ["Bellman"]}, {"title": "Two simplified algorithms for maintaining order in a list", "authors": ["Bender", " Cole", " Demaine", " Farach-Colton"]}, {"title": "Decomposable searching problems I: Static-to-dynamic transformation", "authors": ["Bentley"]}, {"title": "On a simple, practical, optimal, output-sensitive randomized planar convex hull algorithm", "authors": ["Bhattacharya"]}, {"title": "Algorithmic Geometry", "authors": ["Boissonnat"]}, {"title": "Dynamic planar convex hull", "authors": ["Brodal"]}, {"title": "Monads for incremental computing", "authors": ["Carlsson"]}, {"title": "Optimal output-sensitive convex hull algorithms in two and three dimensions", "authors": ["Chan"]}, {"title": "Dynamic planar convex hull operations in near-logarithmic amortized time", "authors": ["Chan"]}, {"title": "Dynamic algorithms in computational geometry", "authors": ["Chiang"]}, {"title": "Dynamic expression trees and their applications", "authors": ["Cohen"]}, {"title": "Incremental evaluation of attribute grammars with application to syntax-directed editors", "authors": ["Demers", " Reps"]}, {"title": "Two algorithms for maintaining order in a list", "authors": ["Dietz"]}, {"title": "A truth maintenance system", "authors": ["Doyle"]}, {"title": "Dynamic graph algorithms", "authors": ["Eppstein", " Galil"]}, {"title": "Sparsification\u2014A technique for speeding up dynamic graph algorithms", "authors": ["Eppstein", " Galil", " Italiano"]}, {"title": "Incremental reduction in the lambda calculus and related reduction systems", "authors": ["Field"]}, {"title": "Incremental reduction in the lambda calculus", "authors": ["Field"]}, {"title": "Data structures for on-line updating of minimum spanning trees, with applications", "authors": ["Frederickson"]}, {"title": "A data structure for dynamically maintaining rooted trees", "authors": ["Frederickson"]}, {"title": "An efficient algorithm for determining the convex hull of a finete planar set", "authors": ["Graham"]}, {"title": "Modeling motion", "authors": ["Guibas"]}, {"title": "An empirical comparison of techniques for updating Delaunay triangulations", "authors": ["Guibas"]}, {"title": "Kinetic data structures: A state of the art report", "authors": ["Guibas"]}, {"title": "Memory management for self-adjusting computation", "authors": ["Hammer"]}, {"title": "CEAL: A C-based language for self-adjusting computation", "authors": ["Hammer", " Acar"]}, {"title": "Maintaining minimum spanning trees in dynamic graphs", "authors": ["Henzinger"]}, {"title": "Randomized fully dynamic graph algorithms with polylogarithmic time per operation", "authors": ["Henzinger"]}, {"title": "Caching function calls using precise dependencies", "authors": ["Heydon", " Levin"]}, {"title": "Polylogarithmic deterministic fully-dynamic algorithms for connectivity, minimum spanning tree, 2-edge, and biconnectivity", "authors": ["Holm", " de Lichtenberg"]}, {"title": "Incremental graph evaluation", "authors": ["Hoover"]}, {"title": "Garbage Collection: Algorithms for Automatic Dynamic Memory Management", "authors": ["Jones"]}, {"title": "The ultimate planar convex hull algorithm", "authors": ["Kirkpatrick"]}, {"title": "The Art of Computer Programming: Sorting and Searching, vol", "authors": ["Knuth"]}, {"title": "A cost semantics for self-adjusting computation", "authors": ["Ley-Wild", " Acar"]}, {"title": "Compiling self-adjusting programs with continuations", "authors": ["Ley-Wild", " Fluet"]}, {"title": "Static caching for incremental computation", "authors": ["Liu", " Stoller"]}, {"title": "Truth maintenance", "authors": ["McAllester"]}, {"title": "A basis for a mathematical theory of computation", "authors": ["McCarthy"]}, {"title": "\u201cMemo\u201d functions and machine learning", "authors": ["Michie"]}, {"title": "Computational Geometry: An Introduction Through Randomized Algorithms", "authors": ["Mulmuley"]}, {"title": "Maintenance of configurations in the plane", "authors": ["Overmars"]}, {"title": "Incremental computation via function caching", "authors": ["Pugh"]}, {"title": "Implementation of dynamic trees with in-subtree operations", "authors": ["Radzik"]}, {"title": "A categorized bibliography on incremental computation", "authors": ["Ramalingam"]}, {"title": "Optimal-time incremental semantic analysis for syntax-directed editors", "authors": ["Reps"]}, {"title": "Kinetic data structures in practice", "authors": ["Russel"]}, {"title": "A package for exact kinetic data structures and sweepline algorithms", "authors": ["Russel", " Karavelas"]}, {"title": "Transforming static data structures to dynamic structures (abridged version)", "authors": ["Saxe"]}, {"title": "Computational geometry", "authors": ["Shamos"]}, {"title": "DITTO: Automatic incrementalization of data structure invariant checks (in Java)", "authors": ["Shankar"]}, {"title": "A data structure for dynamic trees", "authors": ["Sleator"]}, {"title": "Self-adjusting binary search trees", "authors": ["Sleator"]}, {"title": "Forward reasoning and dependency-directed back-tracking in a system for computer-aided circuit analysis", "authors": ["Stallman"]}, {"title": "Incremental compilation via partial evaluation", "authors": ["Sundaresh"]}, {"title": "Dynamic trees in practice", "authors": ["Tarjan"]}, {"title": "Self-adjusting top trees", "authors": ["Tarjan"]}, {"title": "Dynamic trees as search trees via Euler tours, applied to the network simplex algorithm", "authors": ["Tarjan"]}, {"title": "New classes and applications of hash functions", "authors": ["Wegman"]}, {"title": "Randomized quickhull", "authors": ["Wenger"]}, {"title": "INC: A language for incremental computations", "authors": ["Yellin"]}]},
{"title": "JavaCOP: Declarative pluggable types for java", "time": "February 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Pluggable types enable users to enforce multiple type systems in one programming language. We have developed a suite of tools, called the JavaCOP framework, that allows developers to create pluggable type systems for Java. JavaCOP provides a simple declarative language in which program constraints are defined over a program's abstract syntax tree. The JavaCOP compiler automatically enforces these constraints on programs during compilation. The JavaCOP framework also includes a dataflow analysis API in order to support type systems which depend on flow-sensitive information. Finally, JavaCOP includes a novel test framework which helps users gain confidence in the correctness of their pluggable type systems. We demonstrate the framework by discussing a number of pluggable type systems which have been implemented in JavaCOP in order to detect errors and enforce strong invariants in programs. These type systems range from general-purpose checkers, such as a type system for nonnull references, to domain-specific ones, such as a checker for conformance to a library's usage rules.\n", "author": [{"name": "Shane Markstrum", "affiliation": "Bucknell University, Lewisburg, PA"}, {"name": "Daniel Marino", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Matthew Esquivel", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Todd Millstein", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Chris Andreae", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "James Noble", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Shane Markstrum", "affiliation": "Bucknell University, Lewisburg, PA"}, {"name": "Daniel Marino", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Matthew Esquivel", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Todd Millstein", "affiliation": "University of California, Los Angeles, Los Angeles, CA"}, {"name": "Chris Andreae", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "James Noble", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "26", "references": [{"title": "Alias annotations for program understanding", "authors": ["Aldrich", " Kostadinov"]}, {"title": "Scoped types and aspects for real-time systems", "authors": ["Andreae", " Coady", " Gibba", " Noble", " Vitek"]}, {"title": "A framework for implementing pluggable type systems", "authors": ["Andreae", " Noble", " Markstrum"]}, {"title": "The Java Programming Language, 3rd ed", "authors": ["Arnold", " Gosling"]}, {"title": "A metadata facility for the Java programming language", "authors": ["Bloch"]}, {"title": "Korat: Automated testing based on Java predicates", "authors": ["Boyapati", " Khurshid"]}, {"title": "Alias burying: Unique variables without destructive reads", "authors": ["Boyl"]}, {"title": "Capabilities for sharing: A generalisation of uniqueness and read-only", "authors": ["Boyl", " Noble"]}, {"title": "Pluggable type systems", "authors": ["Bracha"]}, {"title": "ASM: A Java bytecode manipulation and analysis framework", "authors": ["Bruneton", " Lenglet"]}, {"title": "Non-Null references by default in Java: Alleviating the nullity annotation burden", "authors": ["Chalin"]}, {"title": "X10: An object-oriented approach to non-uniform cluster computing", "authors": ["Charles", " Grothoff", " Saraswat", " Donawa", " Kielstra", " Ebcioglu", " von Praun"]}, {"title": "Semantic type qualifiers", "authors": ["Chin", " Markstrum"]}, {"title": "Inference of user-defined type qualifiers and qualifier rules", "authors": ["Chin", " Markstrum", " Millstein"]}, {"title": "JTL \u2014 The Java tools language", "authors": ["Cohen", " Gil"]}, {"title": "ASTLOG: A language for examining abstract syntax trees", "authors": ["Crew"]}, {"title": "Automated testing of refactoring engines", "authors": ["Daniel", " Dig", " Garcia"]}, {"title": "CCEL: A metalanguage for C++", "authors": ["Duby", " Meyers"]}, {"title": "Using annotations to check structural properties of classes", "authors": ["Eichberg", " Sch\u00e4fer"]}, {"title": "Rewritable reference attributed grammars", "authors": ["Ekman"]}, {"title": "Java annotations on types", "authors": ["Ernst"]}, {"title": "Declaring and checking non-null types in an object-oriented language", "authors": ["F\u00e4hndrich"]}, {"title": "Fine-Grained access control with object-sensitive roles", "authors": ["Fischer", " Marino", " Majumdar"]}, {"title": "Type-Based race detection for Java", "authors": ["Flanagan"]}, {"title": "A theory of type qualifiers", "authors": ["Foster", " F\u00e4hndrich"]}, {"title": "Inferring aliasing and encapsulation properties for Java", "authors": ["Foster"]}, {"title": "Proceedings of the 22nd Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'07)", "authors": ["Gabriel", " Bacon", " Lopes", " Eds"]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": ["Gamma", " Helm", " Johnson"]}, {"title": "The Java Language Specification, 2nd ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Type qualifier inference for Java", "authors": ["Greenffieldboyce"]}, {"title": "CodeQuest: Scalable source code queries with data-log", "authors": ["Hajiyev", " Verbaere"]}, {"title": "Using SCL to specify and check design intent in source code", "authors": ["Hou"]}, {"title": "Finding bugs is easy", "authors": ["Hovemeyer"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Navigating and querying code without getting lost", "authors": ["Janzen"]}, {"title": "2006", "authors": []}, {"title": "JUnit homepage", "authors": ["JUnit"]}, {"title": "Enforcing and validating user-defined programming disciplines", "authors": ["Markstrum"]}, {"title": "Korat: A tool for generating structurally complex test inputs", "authors": ["Milicevic", " Misailovic", " Marinov"]}, {"title": "Expressive and modular predicate dispatch for java", "authors": ["Millstein", " Frost", " Ryder"]}, {"title": "JFlow: Practical mostly-static information flow control", "authors": ["Myers"]}, {"title": "Polyglot: An extensible compiler framework for Java", "authors": ["Nystrom", " Clarkson"]}, {"title": "J&: Software composition with nested intersection", "authors": ["Nystrom", " Qi"]}, {"title": "Practical pluggable types for Java", "authors": ["Papi", " Ali", " Perkins"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Polyglot extensible compiler framework", "authors": ["Polyglot"]}, {"title": "2007", "authors": ["Polygl"]}, {"title": "Efficient software model checking of soundness of type systems", "authors": ["Roberson", " Harries", " Darga"]}, {"title": "Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'06)", "authors": ["Tarr", " Eds"]}, {"title": "Proceedings of the 20th European Conference on Object-Oriented Programming (ECOOP'06)", "authors": ["Thomas", " Ed"]}, {"title": "Soot - A Java optimization framework", "authors": ["Vall\u00e8e-Rai", " Hendren", " Sundaresan", " Lam", " Gagnon"]}, {"title": "Confined types", "authors": ["Vitek"]}, {"title": "Statically scoped object adaptation with expanders", "authors": ["Warth", " Stanojevic"]}, {"title": "T", "authors": ["WAL"]}]},
{"title": "A relational approach to interprocedural shape analysis", "time": "February 2010", "keyword": ["Programming Languages and Systems"], "abstract": "This article addresses the verification of properties of imperative programs with recursive procedure calls, heap-allocated storage, and destructive updating of pointer-valued fields, that is, \n. The article makes three contributions.\n\u2014 It introduces a new method for abstracting relations over memory configurations for use in abstract interpretation.\n\u2014 It shows how this method furnishes the elements needed for a compositional approach to shape analysis. In particular, abstracted relations are used to represent the shape transformation performed by a sequence of operations, and an overapproximation to relational composition can be performed using the meet operation of the domain of abstracted relations.\n\u2014 It applies these ideas in a new algorithm for context-sensitive interprocedural shape analysis. The algorithm creates procedure summaries using abstracted relations over memory configurations, and the meet-based composition operation provides a way to apply the summary transformer for a procedure \n at each call site from which \n is called.\nThe algorithm has been applied successfully to establish properties of both (i) recursive programs that manipulate lists and (ii) recursive programs that manipulate binary trees.\n", "author": [{"name": "Bertrand Jeannet", "affiliation": "INRIA"}, {"name": "Alexey Loginov", "affiliation": "GrammaTech, Inc."}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin"}, {"name": "Mooly Sagiv", "affiliation": "Tel Aviv University"}, {"name": "Bertrand Jeannet", "affiliation": "INRIA"}, {"name": "Alexey Loginov", "affiliation": "GrammaTech, Inc."}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin"}, {"name": "Mooly Sagiv", "affiliation": "Tel Aviv University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "21", "references": [{"title": "Specialized 3-valued logic shape analysis using structure-based refinement and loose embedding", "authors": ["Arnold"]}, {"title": "Combining shape analyses by intersecting abstractions", "authors": ["Arnold", " Manevich", " Sagiv"]}, {"title": "Bebop: A path-sensitive interprocedural dataflow engine", "authors": ["Ball"]}, {"title": "Smallfoot: Modular automatic assertion checking with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": "Revamping TVLA: Making parametric shape analysis competitive", "authors": ["Bogudlov", " Lev-Ami", " Reps"]}, {"title": "Revamping TVLA: Making parametric shape analysis competitive (tool paper)", "authors": ["Bogudlov", " Lev-Ami", " Reps"]}, {"title": "Reachability analysis of pushdown automata: Application to model checking", "authors": ["Bouajjani", " Esparza"]}, {"title": "A generic approach to the static analysis of concurrent programs with procedures", "authors": ["Bouajjani", " Esparza"]}, {"title": "Model Checking", "authors": ["Clarke", " Grumberg"]}, {"title": "Static determination of dynamic properties of recursive procedures", "authors": ["Cousot"]}, {"title": "Automatic discovery of linear constraints among variables of a program", "authors": ["Cousot"]}, {"title": "A direct symbolic approach to model checking pushdown systems", "authors": ["Finkel"]}, {"title": "Numeric domains with summarized dimensions", "authors": ["Gopan", " DiMaio", " Reps"]}, {"title": "Interprocedural shape analysis with separated heap abstractions", "authors": ["Gotsman", " Berdine"]}, {"title": "The Science of Programming", "authors": ["Gries"]}, {"title": "A relational approach to interprocedural shape analysis", "authors": ["Jeannet", " Loginov", " Reps"]}, {"title": "Abstracting call-stacks for interprocedural verification of imperative programs", "authors": ["Jeannet"]}, {"title": "The interprocedural coincidence theorem", "authors": ["Knoop"]}, {"title": "Back to the future: Revisiting precise program verification using smt solvers", "authors": ["Lahiri"]}, {"title": "Putting static analysis to work for verification: A case study", "authors": ["Lev-Ami", " Reps", " Sagiv"]}, {"title": "TVLA: A system for implementing static analyses", "authors": ["Lev-Ami"]}, {"title": "Refinement-based program verification via three-valued-logic analysis", "authors": ["Loginov"]}, {"title": "Abstraction refinement via inductive learning", "authors": ["Loginov", " Reps"]}, {"title": "Temporal Verification of Reactive Systems: Safety, Springer", "authors": ["Manna"]}, {"title": "Efficient context-sensitive shape analysis with graph based heap models", "authors": ["Marron", " Hermenegildo", " Kapur"]}, {"title": "The octagon abstract domain", "authors": ["Min\u00e9"]}, {"title": "The pointer assertion logic engine", "authors": ["M\u00f8ller"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": "Finite differencing of logical formulas for static analysis", "authors": ["Reps", " Sagiv"]}, {"title": "Weighted pushdown systems and their application to interprocedural dataflow analysis", "authors": ["Reps", " Schwoon", " Jha"]}, {"title": "A semantics for procedure local heaps and its abstraction", "authors": ["Rinetzky", " Bauer", " Reps", " Sagiv"]}, {"title": "Interprocedural shape analysis for recursive programs", "authors": ["Rinetzky"]}, {"title": "Interprocedural shape analysis for cutpoint-free programs", "authors": ["Rinetzky", " Sagiv"]}, {"title": "Precise interprocedural dataflow analysis with applications to constant propagation", "authors": ["Sagiv", " Reps"]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Sagiv", " Reps"]}, {"title": "Model-checking pushdown systems", "authors": ["Schwoon"]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Sharir"]}, {"title": "Symbolically computing most-precise abstract operations for shape analysis", "authors": ["Yorsh", " Reps"]}]},
{"title": "Hybrid type checking", "time": "February 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Traditional static type systems are effective for verifying basic interface specifications. Dynamically checked contracts support more precise specifications, but these are not checked until runtime, resulting in incomplete detection of defects. Hybrid type checking is a synthesis of these two approaches that enforces precise interface specifications, via static analysis where possible, but also via dynamic checks where necessary. This article explores the key ideas and implications of hybrid type checking, in the context of the \u03bb-calculus extended with \n, that is, with dependent function types and with arbitrary refinements of base types.\n", "author": [{"name": "Kenneth Knowles", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}, {"name": "Cormac Flanagan", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}, {"name": "Kenneth Knowles", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}, {"name": "Cormac Flanagan", "affiliation": "University of California at Santa Cruz, Santa Cruz, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "81", "references": [{"title": "A technique for software module specification with examples", "authors": ["Parnas"]}, {"title": "Dynamic typing in a statically-typed language", "authors": ["Abadi", " Cardelli", " Pierce"]}, {"title": "Type inference for parameterized race-free Java", "authors": ["Agarwal"]}, {"title": "Soft typing with conditional types", "authors": ["Aiken", " Wimmers"]}, {"title": "Cayenne \u2014 A language with dependent types", "authors": ["Augustsson"]}, {"title": "Vampyre", "authors": ["Blei", " Harrelson", " Jhala", " Majumdar", " Necula", " Rahul", " Weimer"]}, {"title": "Sound and complete models for contracts", "authors": ["Blume"]}, {"title": "Inheritance as implicit coercion", "authors": ["Breazu-Tannen", " Coqu", " Gunter"]}, {"title": "An overview of JML tools and applications", "authors": ["Burdy", " Cheon", " Cok", " Ernst", " Kiniry", " Leavens", " Leino"]}, {"title": "Phase distinctions in type theory", "authors": ["Cardelli"]}, {"title": "Typechecking dependent types and subtypes", "authors": ["Cardelli"]}, {"title": "Intersection types and computational effects", "authors": ["Davies"]}, {"title": "Refinement types for specification", "authors": ["Denney"]}, {"title": "Simplify: A theorem prover for program checking", "authors": ["Detlefs", " Nelson"]}, {"title": "Soft typing", "authors": ["Fagan"]}, {"title": "Behavioral software contracts", "authors": ["Findler"]}, {"title": "Contracts for higher-order functions", "authors": ["Findler"]}, {"title": "Hybrid type checking", "authors": ["Flanagan"]}, {"title": "Finding bugs in the web of program invariants", "authors": ["Flanagan", " Flatt", " Krishnamurthi", " Weirich"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "Refinement types for ML", "authors": ["Freeman"]}, {"title": "Semantic subtyping", "authors": ["Frisch", " Castagna"]}, {"title": "DART: Directed automated random testing", "authors": ["Godefroid", " Klarlund"]}, {"title": "A language manual for Sather 1", "authors": ["Gomes", " Stoutamire", " Vaysman"]}, {"title": "The Java Language Specification", "authors": ["Gosling", " Joy"]}, {"title": "Unifying hybrid types and contracts", "authors": ["Gronski"]}, {"title": "Sage: Practical hybrid checking for expressive types and specifications", "authors": ["Gronski", " Knowles", " Tomb", " Freund"]}, {"title": "Composing first-class transactions", "authors": ["Haines", " Kindred", " Morrisett", " Nettles"]}, {"title": "Dynamic typing: Syntax and proof theory", "authors": ["Henglein"]}, {"title": "Space-Efficient gradual typing", "authors": ["Herman", " Tomb"]}, {"title": "The Turing programming language", "authors": ["Holt"]}, {"title": "Type reconstruction for general refinement types", "authors": ["Knowles"]}, {"title": "Blue: Language specification, version 0", "authors": ["K\u00f6lling"]}, {"title": "Design by contract with JML", "authors": ["Leavens"]}, {"title": "Programming with specifications", "authors": ["Luckham"]}, {"title": "An effective theory of type refinements", "authors": [" Walker"]}, {"title": "Object-Oriented Software Construction", "authors": ["Meyer"]}, {"title": "From System F to typed assembly language", "authors": ["Morrisett", " Walker", " Crary"]}, {"title": "Proof-Carrying code", "authors": ["Necula"]}, {"title": "CCured: Type-Safe retrofitting of legacy code", "authors": ["Necula", " McPeak"]}, {"title": "Hybrid dynamic data race detection", "authors": ["O'Callahan"]}, {"title": "Dynamic typing with dependent types", "authors": [" Tan", " M"]}, {"title": "Liquid types", "authors": ["Rondon", " Kawaguchi"]}, {"title": "Gradual typing for objects", "authors": ["Siek"]}, {"title": "Gradual typing for functional languages", "authors": ["Siek"]}, {"title": "Logical relations and the typed lambda-calculus", "authors": ["Statman"]}, {"title": "TIL: A type-directed optimizing compiler for ML", "authors": ["Tarditi", " Morrisett", " Cheng", " Stone", " Harper"]}, {"title": "Quasi-Static typing", "authors": ["Thatte"]}, {"title": "A semantic framework for designer transactions", "authors": ["Vitek", " Jagannathan", " Welc"]}, {"title": "Object race detection", "authors": ["von Praun"]}, {"title": "Well-Typed programs can't be blamed", "authors": ["Wadler"]}, {"title": "A practical soft type system for scheme", "authors": ["Wright"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}, {"title": "Imperative programming with dependent types", "authors": []}, {"title": "Dependent types in practical programming", "authors": []}]},
{"title": "A termination analyzer for Java bytecode based on path-length", "time": "March 2010", "keyword": ["Programming Languages and Systems"], "abstract": "It is important to prove that supposedly terminating programs actually terminate, particularly if those programs must be run on critical systems or downloaded into a client such as a mobile phone. Although termination of computer programs is generally undecidable, it is possible and useful to prove termination of a large, nontrivial subset of the terminating programs. In this article, we present our termination analyzer for sequential Java bytecode, based on a program property called \n. We describe the analyses which are needed before the path-length can be computed such as sharing, cyclicity, and aliasing. Then we formally define the path-length analysis and prove it correct with respect to a reference denotational semantics of the bytecode. We show that a constraint logic program \n can be built from the result of the path-length analysis of a Java bytecode program \n and formally prove that if \n terminates, then \n also terminates. Hence a termination prover for constraint logic programs can be applied to prove the termination of \n. We conclude with some discussion of the possibilities and limitations of our approach. Ours is the first existing termination analyzer for Java bytecode dealing with any kind of data structures dynamically allocated on the heap and which does not require any help or annotation on the part of the user.\n", "author": [{"name": "Fausto Spoto", "affiliation": "Universit\u00e0 di Verona, Italy"}, {"name": "Fred Mesnard", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, France"}, {"name": "\u00c9tienne Payet", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, France"}, {"name": "Fausto Spoto", "affiliation": "Universit\u00e0 di Verona, Italy"}, {"name": "Fred Mesnard", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, France"}, {"name": "\u00c9tienne Payet", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "85", "references": [{"title": "Compilers, Principles Techniques and Tools", "authors": ["Aho", " Sethi"]}, {"title": "The KeY Tool", "authors": ["Ahrendt", " Baar", " Beckert", " Bubel", " Giese", " H\u00e4hnle", " Menzel", " Mostowski", " Roth", " Schlager"]}, {"title": "Termination analysis of Java bytecode", "authors": ["Albert", " Arenas", " Codish", " Genaim", " Puebla"]}, {"title": "Termination analysis of Java bytecode", "authors": ["Albert", " Arenas", " Codish", " Genaim", " Puebla"]}, {"title": "Cost analysis of java bytecode", "authors": ["Albert", " Arenas", " Genaim", " Puebla"]}, {"title": "Size-Change termination and bound analysis", "authors": ["Avery"]}, {"title": "Proving termination by divergence", "authors": ["Babic", " Hu", " Rakamaric"]}, {"title": "Fast static analysis of c++ virtual function calls", "authors": ["Bacon"]}, {"title": "Precise widening operators for convex polyhedra", "authors": ["Bagnara", " Hill", " Ricci"]}, {"title": "The Parma Polyhedra Library: Toward a complete set of numerical abstractions for the analysis and verification of hardware and software systems", "authors": ["Bagnara", " Hill"]}, {"title": "A program logic for bytecode", "authors": ["Bannwart"]}, {"title": "Boogie: A modular reusable verifier for object-oriented programs", "authors": ["Barnett", " Chang", " DeLine", " Jacobs"]}, {"title": "Program termination analysis in polynomial time", "authors": ["Ben-Amram"]}, {"title": "Shape analysis for composite data structures", "authors": ["Berdine", " Calcagno", " Cook", " Distefano", " O'Hearn", " Wies"]}, {"title": "Variance analyses from invariance analyses", "authors": ["Berdine", " Chawdhary", " Cook", " Distefano"]}, {"title": "Automatic termination proofs for programs with shape-shifting heaps", "authors": ["Berdine", " Cook", " Distefano"]}, {"title": "Programs with lists are counter automata", "authors": ["Bouajjani", " Bozga", " Habermehl", " Iosif", " Moro"]}, {"title": "Termination of polynomial programs", "authors": ["Bradley", " Manna"]}, {"title": "Inference of monotonicity constraints in datalog programs", "authors": ["Brodsky"]}, {"title": "Cyclic proofs of program termination in separation logic", "authors": ["Brotherston", " Bornat"]}, {"title": "Graph-Based algorithms for boolean function manipulation", "authors": ["Bryant"]}, {"title": "Abstract interpretation with alien expressions and heap structures", "authors": ["Chang"]}, {"title": "Efficient flow-sensitive interprocedural computation of pointer-induced aliases and side effects", "authors": ["Choi", " Burke"]}, {"title": "Proving termination with (boolean) satisfaction", "authors": ["Codish"]}, {"title": "Testing for termination with monotonicity constraints", "authors": ["Codish", " Lagoon"]}, {"title": "A semantics basis for termination analysis of logic programs", "authors": ["Codish"]}, {"title": "Abstraction refinement for termination", "authors": ["Cook", " Podelski"]}, {"title": "Termination proofs for systems code", "authors": ["Cook", " Podelski"]}, {"title": "Terminator: beyond safety", "authors": ["Cook", " Podelski"]}, {"title": "Proving thread termination", "authors": ["Cook", " Podelski"]}, {"title": "Bandera: Extracting finite-state models from java source code", "authors": ["Corbett", " Dwyer", " Hatcliff", " Laubach", " Pasareanu", " Robby"]}, {"title": "Proving program invariance and termination by parametric abstraction, lagrangian relaxation and semidefinite programming", "authors": ["Cousot"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": ["Cousot"]}, {"title": "Termination of logic programs: The never-ending story", "authors": ["De Schreye"]}, {"title": "Optimization of object-oriented programs using static class hierarchy analysis", "authors": ["Dean", " Grove"]}, {"title": "A general framework for automatic termination analysis of logic programs", "authors": ["Dershowitz", " Lindenstrauss", " Sagiv"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "Assigning meanings to programs", "authors": ["Floyd"]}, {"title": "Goal independency and call patterns in the analysis of logic programs", "authors": ["Gabbrielli"]}, {"title": "Inferring termination conditions for logic programs using backwards analysis", "authors": ["Genaim"]}, {"title": "Constancy analysis", "authors": ["Genaim"]}, {"title": "Automatic termination proofs in the dependency pair framework", "authors": ["Giesl", " Schneider-Kamp"]}, {"title": "Interprocedural shape analysis with separated heap abstractions", "authors": ["Gotsman", " Berdine"]}, {"title": "BI as an assertion language for mutable data structures", "authors": ["Ishtiaq"]}, {"title": "Constraint logic programming: A survey", "authors": ["Jaffar"]}, {"title": "A machine-checked model for a java-like language, virtual machine, and compiler", "authors": ["Klein"]}, {"title": "Specification and verification challenges for sequential object-oriented programs", "authors": ["Leavens", " Leino"]}, {"title": "The size-change principle for program termination", "authors": ["Lee", " Jones"]}, {"title": "Formal translation of bytecode into boogiePL", "authors": ["Lehner"]}, {"title": "Object invariants in dynamic contexts", "authors": ["Leino"]}, {"title": "Modular verification of static class invariants", "authors": ["Leino"]}, {"title": "Class-local object invariants", "authors": ["Leino"]}, {"title": "TermiLog: A system for checking termination of queries to logic programs", "authors": ["Lindenstrauss", " Sagiv"]}, {"title": "The Java#8482; Virtual Machine Specification, 2nd ed", "authors": ["Lindholm"]}, {"title": "Model checking real time java using java Pathfinder", "authors": ["Lindstrom", " Mehlitz"]}, {"title": "Refinement-based verification for possibly-cyclic lists", "authors": ["Loginov", " Reps"]}, {"title": "On the relative completeness of bytecode analysis versus source code analysis", "authors": ["Logozzo"]}, {"title": "Integrating static analysis and general-purpose theorem proving for termination analysis", "authors": ["Manolios"]}, {"title": "Termination analysis with calling context graphs", "authors": ["Manolios"]}, {"title": "Core semantics of multithreaded java", "authors": ["Manson"]}, {"title": "The java memory model", "authors": ["Manson", " Pugh"]}, {"title": "Inferring left-terminating classes of queries for constraint logic programs", "authors": ["Mesnard"]}, {"title": "cTI: A constraint-based termination inference tool for ISO-Prolog", "authors": ["Mesnard"]}, {"title": "Recurrence with affine level mappings is p-time decidable for CLP(R)", "authors": ["Mesnard"]}, {"title": "The octagon abstract domain", "authors": ["Min\u00e9"]}, {"title": "The pitfalls of verifying floating-point computations", "authors": ["Monniaux"]}, {"title": "Reasoning about object structures using ownership", "authors": ["M\u00fcller"]}, {"title": "Polynomial interpretations as a basis for termination analysis of logic programs", "authors": ["Nyugen"]}, {"title": "TALP: A tool for the termination analysis of logic programs", "authors": ["Ohlebusch", " Claves"]}, {"title": "Object-Oriented type inference", "authors": ["Palsberg"]}, {"title": "Magic-sets transformation for the analysis of java bytecode", "authors": ["Payet"]}, {"title": "Pure versus impure lisp", "authors": ["Pippenger"]}, {"title": "Termination proofs for logic programs", "authors": ["Pl\u00fcmer"]}, {"title": "A complete method for synthesis of linear ranking functions", "authors": ["Podelski"]}, {"title": "Transition invariants", "authors": ["Podelski"]}, {"title": "Transition predicate abstraction and fair termination", "authors": ["Podelski"]}, {"title": "Distinctness and sharing domains for static analysis of java programs", "authors": ["Pollet", " Le Charlier"]}, {"title": "Intuitionistic reasoning about shared mutable data structure", "authors": ["Reynolds"]}, {"title": "Detecting non-cyclicity by abstract compilation into boolean functions", "authors": ["Rossignoli"]}, {"title": "Purity and side effect analysis for java programs", "authors": ["Salcianu"]}, {"title": "Automated termination analysis for logic programs by term rewriting", "authors": ["Schneider-Kamp", " Giesl", " Serebrenik"]}, {"title": "Pair-sharing analysis of object-oriented programs", "authors": ["Secci"]}, {"title": "On termination of logic programs with floating point computations", "authors": ["Serebrenik"]}, {"title": "The julia static analyser", "authors": ["Spoto"]}, {"title": "Nullness analysis in boolean form", "authors": ["Spoto"]}, {"title": "Path-Length analysis for object-oriented programs", "authors": ["Spoto", " Hill"]}, {"title": "Class analyses as abstract interpretations of trace semantics", "authors": ["Spoto"]}, {"title": "Julia + BinTerm: An automatic termination prover for Java bytecode", "authors": ["Spoto", " Mesnard"]}, {"title": "Using CLP simplifications to improve Java bytecode termination analysis", "authors": ["Spoto", " Lu"]}, {"title": "Points-to analysis in almost linear time", "authors": ["Steensgaard"]}, {"title": "Convexity and Optimization in Finite Dimensions I", "authors": ["Stoer"]}, {"title": "jMoped: A test environment for java programs", "authors": ["Suwimonteerabuth", " Berger", " Schwoon"]}, {"title": "jMoped: A java bytecode checker based on moped", "authors": ["Suwimonteerabuth", " Schwoon"]}, {"title": " Genaim, S", "authors": ["Taboch", " Genaim"]}, {"title": "A lattice-theoretical fixpoint theorem and its applications", "authors": ["Tarski"]}, {"title": "On computable numbers, with an application to the entscheidungsproblem", "authors": ["Turing"]}, {"title": "Efficient tests for top-down termination of logical rules", "authors": ["Ullman"]}, {"title": "Model checking programs", "authors": ["Visser", " Havelund", " Brat", " Park"]}, {"title": "Bytecode analysis for proof carrying code", "authors": ["Wildmoser", " Chaieb"]}, {"title": "Asserting bytecode safety", "authors": ["Wildmoser"]}, {"title": "Shape analysis and applications", "authors": ["Wilhelm", " Reps"]}]},
{"title": "Semantic foundations for typed assembly languages", "time": "March 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Typed Assembly Languages (TALs) are used to validate the safety of machine-language programs. The Foundational Proof-Carrying Code project seeks to verify the soundness of TALs using the smallest possible set of axioms: the axioms of a suitably expressive logic plus a specification of machine semantics. This article proposes general semantic foundations that permit modular proofs of the soundness of TALs. These semantic foundations include Typed Machine Language (TML), a type theory for specifying properties of low-level data with powerful and orthogonal type constructors, and \n, a compositional logic for specifying properties of machine instructions with simplified reasoning about unstructured control flow. Both of these components, whose semantics we specify using higher-order logic, are useful for proving the soundness of TALs. We demonstrate this by using TML and \n to verify the soundness of a low-level, typed assembly language, LTAL, which is the target of our core-ML-to-sparc compiler.\nTo prove the soundness of the TML type system we have successfully applied a new approach, that of \n. This approach provides the first semantic model for a type system with updatable references to values of impredicative quantified types. Both impredicative polymorphism and mutable references are essential when representing function closures in compilers with typed closure conversion, or when compiling objects to simpler typed primitives.\n", "author": [{"name": "Amal Ahmed", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Andrew W. Appel", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Christopher D. Richards", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Kedar N. Swadi", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Gang Tan", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Daniel C. Wang", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Amal Ahmed", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Andrew W. Appel", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Christopher D. Richards", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Kedar N. Swadi", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Gang Tan", "affiliation": "Princeton University, Princeton NJ"}, {"name": "Daniel C. Wang", "affiliation": "Princeton University, Princeton NJ"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "18", "references": [{"title": "A Theory of Objects", "authors": ["Abadi"]}, {"title": "A fully abstract game semantics for general references", "authors": ["Abramsky", " Honda"]}, {"title": "Imperative self-adjusting computation", "authors": ["Acar", " Ahmed"]}, {"title": "Step-Indexed syntactic logical relations for recursive and quantified types", "authors": ["Ahmed"]}, {"title": "A stratified semantics of general references embeddable in higher-order logic", "authors": ["Ahmed", " Appel"]}, {"title": "An indexed model of impredicative polymorphism and mutable references", "authors": ["Ahmed", " Appel"]}, {"title": "Typed closure conversion preserves observational equivalence", "authors": ["Ahmed"]}, {"title": "A step-indexed model of substructural state", "authors": ["Ahmed", " Fluet"]}, {"title": "L3: A linear language with locations", "authors": ["Ahmed", " Fluet"]}, {"title": "Semantics of types for mutable state", "authors": ["Ahmed"]}, {"title": "Checking and inferring local non-aliasing", "authors": ["Aiken", " Foster", " Kodumal"]}, {"title": "Semantics-directed code generation", "authors": ["Appel"]}, {"title": "Hints on proving theorems in Twelf", "authors": ["Appel"]}, {"title": "Foundational proof-carrying code", "authors": ["Appel"]}, {"title": "A semantic model of types and machine instructions for proof-carrying code", "authors": ["Appel"]}, {"title": "Standard ML of New Jersey", "authors": ["Appel"]}, {"title": "An indexed model of recursive types for foundational proof-carrying code", "authors": ["Appel"]}, {"title": "A very modal model of a modern, major, general type system", "authors": ["Appel", " Mellies", " Richards"]}, {"title": "A trustworthy proof checker", "authors": ["Appel", " Michael", " Stump"]}, {"title": "Proof rules for gotos", "authors": ["Arbib"]}, {"title": "A typed, compositional logic for a stack-based abstract machine", "authors": ["Benton"]}, {"title": "Abstracting allocation: The new new thing", "authors": ["Benton"]}, {"title": "Relational reasoning in a nominal semantics for storage", "authors": ["Benton"]}, {"title": "Formalizing and verifying semantic type soundness for a simple compiler", "authors": ["Benton"]}, {"title": "Relational interpretations of recursive types in an operational setting", "authors": ["Birkedal"]}, {"title": "Relational reasoning for recursive types and references", "authors": ["Bohr"]}, {"title": "Program fragments, linking, and modularization", "authors": ["Cardelli"]}, {"title": "A low-level typed assembly language with a machine-checkable soundness proof", "authors": ["Chen"]}, {"title": "A provably sound TAL for back-end optimization", "authors": ["Chen", " Wu", " Appel"]}, {"title": "A formulation of the simple theory of types", "authors": ["Church"]}, {"title": "Program proving: Jumps and functions", "authors": ["Clint"]}, {"title": "A certifying compiler for Java", "authors": ["Colby", " Lee", " Necula", " Blau", " Cline"]}, {"title": "Typed compilation of inclusive subtyping", "authors": ["Crary"]}, {"title": "Toward a foundational typed assembly language", "authors": ["Crary"]}, {"title": "Syntactic logical relations for polymorphic and recursive types", "authors": ["Crary"]}, {"title": "Foundational certified code in a metalogical framework", "authors": ["Crary"]}, {"title": "Goto statements: Semantics and deduction systems", "authors": ["de Bruin"]}, {"title": "An open framework for foundational proof-carrying code", "authors": ["Feng", " Ni", " Shao"]}, {"title": "Interpr\u00e9tation fonctionnelle et elimination des coupures dans l'arithm\u00e9tique d'ordre sup\u00e9rieur", "authors": ["Girard"]}, {"title": "Type-Safe linking and modular assembly language", "authors": ["Glew"]}, {"title": "A syntactic approach to foundational proof-carrying code", "authors": ["Hamid", " Shao", " Trifonov", " Monnier"]}, {"title": "A simplified account of polymorphic references", "authors": ["Harper"]}, {"title": "Compiling polymorphism using intensional type analysis", "authors": ["Harper"]}, {"title": "On equivalence and canonical forms in the LF type theory", "authors": ["Harper"]}, {"title": "An axiomatic basis for computer programming", "authors": ["Hoare"]}, {"title": "A step-indexed semantics of imperative objects", "authors": ["Hri\u0163cu"]}, {"title": "Axiomatic approach to side effects and general jumps", "authors": ["Kowaltowski"]}, {"title": "Possible world semantics for general storage in call-by-value", "authors": ["Levy"]}, {"title": "An ideal model for recursive polymophic types", "authors": ["MacQueen", " Plotkin"]}, {"title": "Parametric polymorphiscm through run-time sealing, or, theorems for low, low prices", "authors": ["Matthews"]}, {"title": "Semantic types: A fresh look at the ideal model for types", "authors": ["Melli\u00e8s"]}, {"title": "Machine instruction syntax and semantics in higher-order logic", "authors": ["Michael"]}, {"title": "L3: A linear language with locations", "authors": ["Morrisett", " Ahmed"]}, {"title": "TALx86: A realistic typed assembly language", "authors": ["Morrisett", " Crary", " Glew", " Grossman", " Samuels", " Smith", " Walker", " Weirich"]}, {"title": "Stack-Based typed assembly language", "authors": ["Morrisett", " Crary", " Glew"]}, {"title": "From System F to typed assembly language", "authors": ["Morrisett", " Walker", " Crary"]}, {"title": "From System F to typed assembly language", "authors": ["Morrisett", " Walker", " Crary"]}, {"title": "Proof-Carrying code", "authors": ["Necula"]}, {"title": "Certified assembly programming with embedded code pointers", "authors": []}, {"title": "A critique of the foundations of Hoare style programming logics", "authors": ["O'Donnell"]}, {"title": "System description: Twelf\u2014A meta-logical framework for deductive systems", "authors": ["Pfenning"]}, {"title": "Relational properties of domains", "authors": ["Pitts"]}, {"title": "Existential types: Logical relations and operational equivalence", "authors": ["Pitts"]}, {"title": "Parametric polymorphism and operational equivalence", "authors": ["Pitts"]}, {"title": "Operational semantics and program equivalence", "authors": ["Pitts"]}, {"title": "Observable properties of higher order functions that dynamically create local names, or: What's new&quest; In Mathematical Foundations of Computer Science, A", "authors": ["Pitts"]}, {"title": "Lambda-Definability and logical relations", "authors": ["Plotkin"]}, {"title": "The essence of Algol", "authors": ["Reynolds"]}, {"title": "The approximation modality in models of higher-order types", "authors": ["Richards"]}, {"title": "A compositional natural semantics and Hoare logic for low-level languages", "authors": ["Saabas"]}, {"title": "Data types as lattices", "authors": ["Scott"]}, {"title": "An overview of the FLINT/ML compiler", "authors": ["Shao"]}, {"title": "Names and higher-order functions", "authors": ["Stark"]}, {"title": "Logical relations and the typed \u03bb-calculus", "authors": ["Statman"]}, {"title": "Typed machine language", "authors": ["Swadi"]}, {"title": "Intensional interpretations of functionals of finite type I", "authors": ["Tait"]}, {"title": "A compositional logic for control flow and its application to foundational proof-carrying code", "authors": ["Tan"]}, {"title": "A compositional logic for control flow", "authors": ["Tan"]}, {"title": "Construction of a semantic model for a typed assembly language", "authors": ["Tan", " Appel", " Swadi"]}, {"title": "TIL: A type-directed optimizing compiler for ML", "authors": ["Tarditi", " Morrisett", " Cheng", " Stone", " Harper"]}, {"title": "Denotational semantics using an operationally-based term model", "authors": []}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}, {"title": "Interfacing compilers, proof checkers, and proofs for foundational proof-carrying code", "authors": []}, {"title": "Foundational proof checkers with small witnesses", "authors": [" Appel"]}, {"title": "Building certified libraries for PCC: Dynamic storage allocation", "authors": [" Hamid"]}]},
{"title": "Satin: A high-level and efficient grid programming model", "time": "March 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Computational grids have an enormous potential to provide compute power. However, this power remains largely unexploited today for most applications, except trivially parallel programs. Developing parallel grid applications simply is too difficult. Grids introduce several problems not encountered before, mainly due to the highly heterogeneous and dynamic computing and networking environment. Furthermore, failures occur frequently, and resources may be claimed by higher-priority jobs at any time.\nIn this article, we solve these problems for an important class of applications: divide-and-conquer. We introduce a system called Satin that simplifies the development of parallel grid applications by providing a rich high-level programming model that completely hides communication. All grid issues are transparently handled in the runtime system, not by the programmer. Satin's programming model is based on Java, features spawn-sync primitives and shared objects, and uses asynchronous exceptions and an abort mechanism to support speculative parallelism.\nTo allow an efficient implementation, Satin consistently exploits the idea that grids are hierarchically structured. Dynamic load-balancing is done with a novel cluster-aware scheduling algorithm that hides the long wide-area latencies by overlapping them with useful local work. Satin's shared object model lets the application define the consistency model it needs. If an application needs only loose consistency, it does not have to pay high performance penalties for wide-area communication and synchronization.\nWe demonstrate how grid problems such as resource changes and failures can be handled transparently and efficiently. Finally, we show that adaptivity is important in grids. Satin can increase performance considerably by adding and removing compute resources automatically, based on the application's requirements and the utilization of the machines and networks in the grid.\nUsing an extensive evaluation on real grids with up to 960 cores, we demonstrate that it is possible to provide a simple high-level programming model for divide-and-conquer applications, while achieving excellent performance on grids. At the same time, we show that the divide-and-conquer model scales better on large systems than the master-worker approach, since it has no single central bottleneck.\n", "author": [{"name": "Rob V. Van Nieuwpoort", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Gosia Wrzesi\u0144ska", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Ceriel J. H. Jacobs", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Henri E. Bal", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Rob V. Van Nieuwpoort", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Gosia Wrzesi\u0144ska", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Ceriel J. H. Jacobs", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}, {"name": "Henri E. Bal", "affiliation": "Vrije Universiteit Amsterdam, The Netherlands"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "37", "references": [{"title": "Using MDL for grammar induction", "authors": ["Adriaans"]}, {"title": "Users' guide to NetSolve V1", "authors": ["Arnold", " Agrawal", " Blackford", " Dongarra", " Miller", " Seymour", " Sagi", " Shi"]}, {"title": "Programming grid applications with GRID superscalar", "authors": ["Badia", " Labarta", " Sirvent", " Perez", " Cela"]}, {"title": "Grid Computing: Software Environments and Tools", "authors": ["Baduel", " Baude", " Caromel", " Contes", " Huet", " Morel"]}, {"title": "Performance evaluation of the Orca shared object system", "authors": ["Bal", " Bhoedjang", " Hofman", " Jacobs", " Langendoen", " Ruehl"]}, {"title": "ATLAS: An infrastructure for global computing", "authors": ["Baldeschwieler", " Blumofe"]}, {"title": "Implementing remote procedure calls", "authors": ["Birrel"]}, {"title": "Highly portable and efficient implementations of parallel adaptive N-body methods", "authors": ["Blackston"]}, {"title": "Cilk: An efficient multithreaded runtime system", "authors": ["Blumofe", " Joerg", " Kuszmaul", " Leiserson", " R"]}, {"title": "Scheduling multithreaded computations by work stealing", "authors": ["Blumofe"]}, {"title": "Adaptive and reliable parallel computing on networks of workstations", "authors": ["Blumofe"]}, {"title": "MPJ/Ibis: A flexible and efficient message passing platform for java", "authors": ["Bornemann", " Nieuwpoort"]}, {"title": "Programming with POSIX Threads", "authors": ["Butenhof"]}, {"title": "Towards an international computer science grid (keynote paper)", "authors": ["Cappello"]}, {"title": "MPJ: MPI-Like message passing for Java", "authors": ["Carpenter", " Getov", " Judd", " Skjellum"]}, {"title": "Experiences in programming a traffic shaper", "authors": ["Chiu", " Kadansky", " Provino"]}, {"title": "The JCilk language for multithreaded computing", "authors": ["Danaher", " Lee"]}, {"title": " S", "authors": []}, {"title": "Speedup versus efficiency in parallel systems", "authors": ["Eager", " Zahorjan"]}, {"title": "Performance issues of distributed MPI applicatins in a German gigabit testbed", "authors": ["Eickermann", " Grund"]}, {"title": "Globus toolkit version 4: Software for service-oriented systems", "authors": ["Foster"]}, {"title": "The Grid 2: Blueprint for a New Computing Infrastructure, 2nd ed", "authors": ["Foster", " Eds"]}, {"title": "Automated transformation of sequential divide--and--conquer algorithms into parallel programs", "authors": ["Freisleben"]}, {"title": "The implementation of the Cilk-5 multithreaded language", "authors": ["Frigo", " Leiserson"]}, {"title": "Distributed computing in a heterogeneous computing environment", "authors": ["Gabriel", " Resch", " Beisel"]}, {"title": "An enabling framework for master-worker applications on the computational grid", "authors": ["Goux", " Kulkarni", " Yoder"]}, {"title": "Open MPI: A high-performance, heterogeneous MPI", "authors": ["Graham", " Shipman", " Barrett", " Castain", " Bosilca"]}, {"title": "A high-performance, portable implementation of the MPI message passing interface", "authors": ["Gropp", " Lusk", " Doss"]}, {"title": "Performance evaluation of adaptive MPI", "authors": ["Huang", " Zheng", " Kumar"]}, {"title": "The Othello game on an n&ast;n board is PSPACE-complete", "authors": ["Iwata"]}, {"title": "A malleable-job system for timeshared parallel machines", "authors": ["Kale", " Kumar"]}, {"title": "MPICH-G2: A grid-enabled implementation of the message passing interface", "authors": ["Karonis", " Toonen"]}, {"title": "MagPIe: MPI's collective communication operations for clustered wide area systems", "authors": ["Kielmann", " Hofman", " Bal", " Plaat"]}, {"title": "Transposition table driven work scheduling in distributed game-tree search", "authors": ["Kishimoto"]}, {"title": "The info-plosion project", "authors": ["Kitsuregawa"]}, {"title": "Results of the Abbadingo one DFA learning competition and a new evidence-driven state merging algorithm", "authors": ["Lang", " Pearlmutter"]}, {"title": "A Java Fork/Join Framework", "authors": ["Lea"]}, {"title": "HPJava: Programming support for high-performance grid-enabled applications", "authors": ["Lee", " Carpenter", " Fox"]}, {"title": "Java(TM) Virtual Machine Specification, 2nd ed", "authors": ["Lindholm"]}, {"title": "Smartsockets: Solving the connectivity problems in grid computing", "authors": ["Maassen"]}, {"title": "Efficient Java RMI for parallel programming", "authors": ["Maassen", " Nieuwpoort", " Veldema", " Bal", " Kielmann", " Jacobs"]}, {"title": "Going nova", "authors": ["Maassen", " Seinstra", " Kemp", " Drost"]}, {"title": "Asynchronous exceptions in Haskell", "authors": ["Marlow", " Jones", " Moran"]}, {"title": "Lazy task creation: A technique for increasing the granularity of parallel programs", "authors": ["Mohr", " Kranz"]}, {"title": "MPI-2: Extensions to the message-passing interface", "authors": ["MPIF"]}, {"title": "Advanced eager scheduling for Java-based adaptively parallel computing", "authors": ["Neary"]}, {"title": "Efficient Java-centric grid-computing", "authors": ["Nieuwpoort"]}, {"title": "Efficient load balancing for wide-area divide-and-conquer applications", "authors": ["Nieuwpoort", " Kielmann"]}, {"title": "User-Friendly and reliable grid computing based on imperfect middleware", "authors": ["Nieuwpoort", " Kielmann"]}, {"title": "Experiences deploying parallel applications on a large-scale grid", "authors": ["Nieuwpoort", " Maassen", " Agapi", " Oprescu"]}, {"title": "Wide-Area parallel programming using the remote method invocation model", "authors": ["Nieuwpoort", " Maassen", " Bal", " Kielmann"]}, {"title": "Satin: Simple and efficient Java-based grid programming", "authors": ["Nieuwpoort", " Maassen", " Kielmann"]}, {"title": "Ibis: A flexible and efficient Java-based grid programming environment", "authors": ["Nieuwpoort", " Maassen", " Wrzesi\u0144ska", " Hofman", " Jacobs", " Kielmann"]}, {"title": "SilkRoad: A multithreaded runtime system with software distributed shared memory for SMP clusters", "authors": ["Peng", " Wong", " Feng"]}, {"title": "Sensitivity of parallel applications to large differences in bandwidth and latency in two-layer interconnects", "authors": ["Plaat", " Bal"]}, {"title": "Best-First fixed-depth minimax algorithms", "authors": ["Plaat", " Schaeffer", " Pijls"]}, {"title": "A task migration implementation of the message-passing interface", "authors": ["Robinson", " Russ", " Heckel"]}, {"title": "A performance analysis of transposition-table-driven work scheduling in distributed search", "authors": ["Romein", " Bal", " Schaeffer"]}, {"title": "Scalable wall-socket multimedia grid computing", "authors": ["Seinstra", " Drost", " Kemp", " Maassen", " Nieuwpoort", " Verstoep"]}, {"title": "Overview of GridRPC: A remote procedure call API for grid computing", "authors": ["Seymour", " Nakada", " Matsuoka", " Dongarra", " Lee"]}, {"title": "Chess 4", "authors": ["Slate"]}, {"title": "Identification of common molecular subsequences", "authors": ["Smith"]}, {"title": "Java Remote Method Invocation Specification", "authors": ["Sun Microsystems"]}, {"title": "Ninf-G: A reference implementation of RPC-based programming middleware for grid computing", "authors": ["Tanaka", " Nakada", " Sekiguchi", " Suzumura"]}, {"title": "Phoenix: A parallel programming model for accommodating dynamically joining/leaving resources", "authors": ["Taura", " Endo", " Kaneda"]}, {"title": "Self adaptivity in grid computing", "authors": ["Vadhiyar"]}, {"title": "Experiences with fine-grained distributed supercomputing on a 10g testbed", "authors": ["Verstoep", " Maassen", " Bal"]}, {"title": "Remote procedure calls and java remote method invocation", "authors": ["Waldo"]}, {"title": "Java-Centric distributed computing", "authors": ["Wollrath", " Waldo"]}, {"title": "The network weather service: A distributed resource performance forecasting service for metacomputing", "authors": ["Wolski", " Spring"]}, {"title": "Self-Adaptive applications on the grid", "authors": ["Wrzesi\u0144ska", " Maassen"]}, {"title": "Satin++: Divide-and-share on the grid", "authors": ["Wrzesi\u0144ska", " Maassen", " Verstoep"]}, {"title": "Fault-Tolerance, malleability and migration for divide-and-conquer applications on the grid", "authors": ["Wrzesi\u0144ska", " Nieuwpoort", " Maassen"]}, {"title": "Persistent fault-tolerance for divide-and-conquer applications on the grid", "authors": ["Wrzesi\u0144ska", " Oprescu", " Kielmann"]}]},
{"title": "An optimization framework for embedded processors with auto-addressing mode", "time": "April 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Modern embedded processors with dedicated address generation unit support memory accesses through auto-increment/decrement addressing mode. The auto-increment/decrement mode, if properly utilized, can save address arithmetic instructions, reduce static and dynamic memory footprint of the program, and speed up the execution as well.\nLiao [1995, 1996] categorized this problem as Simple Offset Assignment (SOA) and General Offset Assignment (GOA), which involves storage layout of variables and assignment of address registers, respectively, proposing several heuristic solutions. This article proposes a new direction for investigating the solution space of the problem. The general idea [Zhuang 2003] is to perform simplification of the underlying access graph through coalescence of the memory locations of program variables. A comprehensive framework is proposed including coalescence-based offset assignment and post/pre-optimization. Variables not interfering with others (not simultaneously live at any program point) can be coalesced into the same memory location. Coalescing allows simplifications of the access graph yielding better SOA solutions; it also reduces the address register pressure to such low values that some GOA solutions become optimal. Moreover, it can reduce the memory footprint both statically and at runtime for stack variables. Our second optimization (post/pre-optimization) considers both post- and pre-modification mode for optimizing code across basic blocks, which makes it useful. Making use of both addressing modes further reduces SOA/GOA cost and our post/pre-optimization phase is optimal in selecting post or pre mode after variable offsets have been determined.\nWe have shown the advantages of our framework over previous approaches to capture more opportunities to reduce both stack size and SOA/GOA cost, leading to more speedup.\n", "author": [{"name": "Xiaotong Zhuang", "affiliation": "IBM T.J. Watson Research Center, New York"}, {"name": "Santosh Pande", "affiliation": "Georgia Institute of Technology, Atlanta, GA"}, {"name": "Xiaotong Zhuang", "affiliation": "IBM T.J. Watson Research Center, New York"}, {"name": "Santosh Pande", "affiliation": "Georgia Institute of Technology, Atlanta, GA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Compilers: Principles, Techniques and Tools", "authors": ["Aho", " Sethi"]}, {"title": "Instruction set design and optimizations for address computation in DSP processors", "authors": ["Araujo", " Sudarsanam"]}, {"title": "Improved code optimization techniques for embedded processors", "authors": ["Atri"]}, {"title": "Improving variable placement for embedded processors", "authors": ["Atri", " Ramanujam"]}, {"title": "Optimizing stack frame accesses for processors with restricted addressing modes", "authors": ["Bartley"]}, {"title": "Register allocation via coloring", "authors": ["Chaitin", " Ausl", " Ch", " Cocke", " Hopkins"]}, {"title": "Register allocation and spilling via graph coloring", "authors": ["Chaitin"]}, {"title": "The Art of Programming Embedded Systems", "authors": ["Ganssle"]}, {"title": "DSP address optimization using a minimum cost circulation technique", "authors": ["Gebotys"]}, {"title": "Address register assignment for reducing code size", "authors": [" Irwin", " Chen"]}, {"title": "Mediabench: A tool for evaluating and synthesizing multimedia and communications systems", "authors": ["Lee", " Potkonjak"]}, {"title": "Optimized array index computation in DSP programs", "authors": ["Leupers", " Basu"]}, {"title": "Algorithms for address assignment in DSP code generation", "authors": ["Leupers"]}, {"title": "A uniform optimization technique for offset assignment problems", "authors": ["Leupers"]}, {"title": "Offset assignment showdown: Evaluation of DSP address code optimization algorithms", "authors": ["Leupers"]}, {"title": "Storage assignment to decrease code size", "authors": ["Liao", " Devadas", " Keutzer", " Tjiang"]}, {"title": "Storage assignment to decrease code size", "authors": ["Liao", " Devadas", " Keutzer", " Tjiang"]}, {"title": "Motorola DSP56300 family manual, revision 3", "authors": ["Motorola", " Inc"]}, {"title": "SC140 DSP core reference manual, revision 3", "authors": ["Motorola", " Inc"]}, {"title": "Motorola, Inc", "authors": ["Motorola"]}, {"title": "Advanced Compiler Design and Implementation", "authors": ["Muchnick"]}, {"title": "Improving offset assignment through simultaneous variable coalescing", "authors": ["Ottoni", " Ottoni", " Araujo"]}, {"title": "Optimal live range merge for address register allocation in embedded programs", "authors": ["Ottoni", " Rigo", " Araujo", " Rajagopalan"]}, {"title": "Offset assignment using simultaneous variable coalescing", "authors": ["Ottoni", " Ottoni", " Araujo"]}, {"title": "Compiler optimizations for storage assignment on embedded DSPs", "authors": ["Rao"]}, {"title": "Storage assignment optimizations to generate compact and efficient code on embedded DSPs", "authors": ["Rao"]}, {"title": "Using the GNU compiler collection", "authors": ["Stallman"]}, {"title": "GNU compiler collection internals", "authors": ["Stallman"]}, {"title": "Analysis and evaluation of address arithmetic capabilities in custom DSP architectures", "authors": ["Sudarsanam", " Liao"]}, {"title": "Optimization of embedded DSP programs using post-pass data-flow analysis", "authors": ["Sudarsanam", " Malik", " Tjiang"]}, {"title": "Address code generation for digital signal processors", "authors": ["Udayanarayanan"]}, {"title": "Procedural level address offset assignment of DSP applications with loops", "authors": ["Zhang"]}, {"title": "Storage assignment optimizations through variable coalescence for embedded processors", "authors": ["Zhuang", " Lau"]}]},
{"title": "Nomadic pict: Programming languages, communication infrastructure overlays, and semantics for mobile computation", "time": "April 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Mobile computation, in which executing computations can move from one physical computing device to another, is a recurring theme: from OS process migration, to language-level mobility, to virtual machine migration. This article reports on the design, implementation, and verification of overlay networks to support reliable communication between migrating computations, in the Nomadic Pict project. We define two levels of abstraction as calculi with precise semantics: a low-level Nomadic \u03c0 calculus with migration and location-dependent communication, and a high-level calculus that adds location-independent communication. Implementations of location-independent communication, as overlay networks that track migrations and forward messages, can be expressed as translations of the high-level calculus into the low. We discuss the design space of such overlay network algorithms and define three precisely, as such translations. Based on the calculi, we design and implement the Nomadic Pict distributed programming language, to let such algorithms (and simple applications above them) to be quickly prototyped. We go on to develop the semantic theory of the Nomadic \u03c0 calculi, proving correctness of one example overlay network. This requires novel equivalences and congruence results that take migration into account, and reasoning principles for agents that are temporarily immobile (e.g., waiting on a lock elsewhere in the system). The whole stands as a demonstration of the use of principled semantics to address challenging system design problems.\n", "author": [{"name": "Peter Sewell", "affiliation": "University of Cambridge, Cambridge, UK"}, {"name": "Pawe\u0142 T. Wojciechowski", "affiliation": "Pozna\u0144 University of Technology, Pozna\u0144, Poland"}, {"name": "Asis Unyapoth", "affiliation": "Government Information Technology Services, Thailand"}, {"name": "Peter Sewell", "affiliation": "University of Cambridge, Cambridge, UK"}, {"name": "Pawe\u0142 T. Wojciechowski", "affiliation": "Pozna\u0144 University of Technology, Pozna\u0144, Poland"}, {"name": "Asis Unyapoth", "affiliation": "Government Information Technology Services, Thailand"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "14", "references": [{"title": "An asynchronous model of locality, failure, and process mobility", "authors": ["Amadio"]}, {"title": "Localities and failures (extended abstract)", "authors": ["Amadio"]}, {"title": "Compiling with Continuations", "authors": ["Appel"]}, {"title": "The Jini Specification", "authors": ["Arnold", " Wollrath", " O'Sullivan", " Scheifler"]}, {"title": "Online tracking of mobile users", "authors": ["Awerbuch"]}, {"title": "Simple crash recovery in a wide-area location service", "authors": ["Ballintijn", " van Steen"]}, {"title": "Type-Safe distributed programming for OCaml", "authors": ["Billings", " Sewell", " Shinwell"]}, {"title": "Rigorous specification and conformance testing techniques for network protocols, as applied to TCP, UDP, and sockets", "authors": ["Bishop", " Fairbairn", " Norrish", " Sewell", " Smith"]}, {"title": "Engineering with logic: HOL specification and symbolic-evaluation testing for TCP implementations", "authors": ["Bishop", " Fairbairn", " Norrish", " Sewell", " Smith"]}, {"title": "A language with distributed scope", "authors": ["Cardelli"]}, {"title": "Abstractions for mobile computation", "authors": ["Cardelli"]}, {"title": "Ambient groups and mobility types", "authors": ["Cardelli", " Ghelli"]}, {"title": "Mobile ambients", "authors": ["Cardelli"]}, {"title": "Mobility types for mobile ambients", "authors": ["Cardelli", " Gordon"]}, {"title": "Commitment and confinement for the Seal calculus", "authors": ["Castagna"]}, {"title": "The Seal calculus", "authors": ["Castagna", " Vitek"]}, {"title": "Higher-Order distributed objects", "authors": ["Cejtin", " Jagannathan"]}, {"title": "Unreliable failure detectors for reliable distributed systems", "authors": ["Ch"]}, {"title": "The V distributed system", "authors": ["Cheriton"]}, {"title": "Live migration of virtual machines", "authors": ["Clark", " Fraser", " H", " Hansen", " Jul", " Limpach", " Pratt"]}, {"title": "Stenning's protocol implemented in UDP and verified in Isabelle", "authors": ["Compton"]}, {"title": "Jocaml: Mobile agents for Objective-Caml", "authors": ["Conchon"]}, {"title": "Testing equivalences for processes", "authors": ["de Nicola"]}, {"title": "The arrow distributed directory protocol", "authors": ["Demmer"]}, {"title": "Abstraction preservation and subtyping in distributed languages", "authors": ["Deni\u00e9lou"]}, {"title": "Transparent process migration: Design alternatives and the Sprite implementation", "authors": ["Douglis"]}, {"title": "Impossibility of distributed consensus with one faulty processor", "authors": ["Fischer", " Lynch"]}, {"title": "The reflexive CHAM and the join-calculus", "authors": ["Fournet"]}, {"title": "A calculus of mobile agents", "authors": ["Fournet", " Gonthier", " L\u00e9vy", " Maranget"]}, {"title": "An asynchronous, distributed implementation of mobile ambients", "authors": ["Fournet", " L\u00e9vy"]}, {"title": "Safe Ambients: Abstract machine and distributed implementation", "authors": ["Giannini", " Sangiorgi"]}, {"title": "Equational properties of mobile ambients", "authors": ["Gordon"]}, {"title": "Fault-Tolerance by replication in distributed systems", "authors": ["Guerraoui"]}, {"title": "A Distributed Pi-Calculus", "authors": ["Hennessy"]}, {"title": "An efficient abstract machine for Safe Ambients", "authors": ["Hirschkoff", " Pous"]}, {"title": "A generic type system for the pi-calculus", "authors": ["Igarashi"]}, {"title": "SD3: A trust management system with certified evaluation", "authors": ["Jim"]}, {"title": "Fine-Grained mobility in the Emerald system", "authors": ["Jul", " Levy", " Hutchinson"]}, {"title": "Linearity and the pi-calculus", "authors": ["Kobayashi", " Pierce"]}, {"title": "Agent Transfer Protocol\u2014ATP/0", "authors": ["Lange"]}, {"title": "Global abstraction-safe marshalling with hash types", "authors": ["Leifer", " Peskine", " Sewell"]}, {"title": "Le syst\u00e8me Caml Special Light: Modules et compilation efficace en Caml", "authors": ["Leroy"]}, {"title": "Controlling interference in Ambients", "authors": ["Levi"]}, {"title": "Implementing declarative overlays", "authors": ["Loo", " Condie", " Hellerstein", " Maniatis", " Roscoe"]}, {"title": "Mobile UNITY coordination constructs applied to packet forwarding for mobile hosts", "authors": ["McCann"]}, {"title": "Behavioral theory for mobile ambients", "authors": ["Merro"]}, {"title": "Communication and Concurrency", "authors": ["Milner"]}, {"title": "Functions as processes", "authors": ["Milner"]}, {"title": "The polyadic &pi;-calculus: A tutorial", "authors": ["Milner"]}, {"title": "A calculus of mobile processes, Parts I and II", "authors": ["Milner", " Parrow"]}, {"title": "The Definition of Standard ML (revised)", "authors": ["Milner", " Tofte", " Harper"]}, {"title": "Mobility: Processes, Computers, and Agents", "authors": ["Miloji&cbreve;i\u0107", " Douglis", " Eds"]}, {"title": "Distributed directory service and message router for mobile agents", "authors": ["Moreau"]}, {"title": "A fault-tolerant directory service for mobile agents based on forwarding pointers", "authors": ["Moreau"]}, {"title": "Distributed match-making", "authors": ["Mullender"]}, {"title": "Modal types for mobile code", "authors": ["Murphy", " VII"]}, {"title": "Names", "authors": ["Needham"]}, {"title": "On determinacy and nondeterminacy in concurrent programming", "authors": ["Nestmann"]}, {"title": "Decoding choice encodings", "authors": ["Nestmann"]}, {"title": "ML with Concurrency: Design, Analysis, Implementation, and Application", "authors": ["Nielson", " Ed"]}, {"title": "Comparing the expressive power of the synchronous and the asynchronous &pi;-calculus", "authors": ["Palamidessi"]}, {"title": "Multiway synchronization verified with coupled simulation", "authors": ["Parrow"]}, {"title": "Typing and subtyping for mobile processes", "authors": ["Pierce"]}, {"title": "Behavioral equivalence in the polymorphic pi-calculus", "authors": ["Pierce"]}, {"title": "Concurrent objects in a process calculus", "authors": ["Pierce"]}, {"title": "Pict Language Definition", "authors": ["Pierce"]}, {"title": "Pict: A programming language based on the pi-calculus", "authors": ["Pierce"]}, {"title": "The LOCUS Distributed System Architecture", "authors": ["Popek"]}, {"title": "Verifying distributed systems: The operational approach", "authors": ["Ridge"]}, {"title": "A rigorous approach to networking: TCP, from implementation to protocol to service", "authors": ["Ridge", " Norrish"]}, {"title": "Distributed processes and location failures (extended abstract)", "authors": ["Riely"]}, {"title": "A typed language for distributed mobile processes (extended abstract)", "authors": ["Riely"]}, {"title": "Trust and partial typing in open systems of mobile agents", "authors": ["Riely"]}, {"title": "The name discipline of uniform receptiveness", "authors": ["Sangiorgi"]}, {"title": "The problem of \u201cweak bisimulation up to\u201d", "authors": ["Sangiorgi"]}, {"title": "The UDP calculus: Rigorous semantics for real networking", "authors": ["Serjantov", " Sewell"]}, {"title": "On implementations and semantics of a concurrent programming language", "authors": ["Sewell"]}, {"title": "Global/Local subtyping and capability inference for a distributed pi-calculus", "authors": ["Sewell"]}, {"title": "A brief introduction to applied &pi;", "authors": ["Sewell"]}, {"title": "Modules, abstract types, and distributed versioning", "authors": ["Sewell"]}, {"title": "Acute: High-Level programming language design for distributed computation", "authors": ["Sewell", " Leifer", " Wansbrough", " Zappa Nardelli", " Allen-Williams", " Habouzit"]}, {"title": "Acute: High-level programming language design for distributed computation", "authors": ["Sewell", " Leifer", " Wansbrough", " Zappa Nardelli", " Allen-Williams", " Habouzit"]}, {"title": "Secure composition of untrusted code: Box-&pi;, wrappers and causality types", "authors": ["Sewell"]}, {"title": "Verifying overlay networks for relocatable computations (or: Nomadic Pict, relocated)", "authors": ["Sewell"]}, {"title": "Location independence for mobile agents", "authors": ["Sewell", " Wojciechowski"]}, {"title": "Location-Independent communication for mobile agents: A two-level architecture", "authors": ["Sewell", " Wojciechowski"]}, {"title": "A Facile tutorial", "authors": ["Thomsen", " Leth"]}, {"title": "The polymorphic pi-calculus: Theory and implementation", "authors": ["Turner"]}, {"title": "Nomadic &pi;-calculi: Expressing and verifying communication infrastructure for mobile computation", "authors": ["Unyapoth"]}, {"title": "Nomadic Pict: Correct communication infrastructure for mobile computation", "authors": ["Unyapoth"]}, {"title": "Concepts, Techniques, and Models of Computer Programming", "authors": ["Van Roy"]}, {"title": "Algorithmic design of the Globe wide-area location service", "authors": ["van Steen", " Hauck", " Ballintijn"]}, {"title": "Distribution and mobility with lexical scoping in process calculi", "authors": ["Vasconcelos", " Lopes"]}, {"title": "Towards a calculus of secure mobile computations", "authors": ["Vitek"]}, {"title": "Objects in the &pi;-calculus", "authors": ["Walker"]}, {"title": "Timing UDP: Mechanized semantics for sockets, threads, and failures", "authors": ["Wansbrough", " Norrish", " Sewell"]}, {"title": "Nomadic Pict", "authors": ["Wojciechowski"]}, {"title": "Nomadic Pict: Language and infrastructure design for mobile computation", "authors": ["Wojciechowski"]}, {"title": "The Nomadic Pict System", "authors": ["Wojciechowski"]}, {"title": "Algorithms for location-independent communication between mobile agents", "authors": ["Wojciechowski"]}, {"title": "Scalable message routing for mobile software assistants", "authors": ["Wojciechowski"]}, {"title": "Nomadic Pict: Language and infrastructure design for mobile agents", "authors": ["Wojciechowski"]}, {"title": "Nomadic Pict: Language and infrastructure design for mobile agents", "authors": ["Wojciechowski"]}, {"title": "Subtyping and locality in distributed higher order processes (extended abstract)", "authors": ["Yoshida"]}]},
{"title": "Scratchpad allocation for concurrent embedded software", "time": "April 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Software-controlled scratchpad memory is increasingly employed in embedded systems as it offers better timing predictability compared to caches. Previous scratchpad allocation algorithms typically consider single-process applications. But embedded applications are mostly multitasking with real-time constraints, where the scratchpad memory space has to be shared among interacting processes that may preempt each other. In this work, we develop a novel dynamic scratchpad allocation technique that takes these process interferences into account to improve the performance and predictability of the memory system. We model the application as a Message Sequence Chart (MSC) to best capture the interprocess interactions. Our goal is to optimize the Worst-Case Response Time (WCRT) of the application through runtime reloading of the scratchpad memory content at appropriate execution points. We propose an iterative allocation algorithm that consists of two critical steps: (1) analyze the MSC along with the existing allocation to determine potential interference patterns, and (2) exploit this interference information to tune the scratchpad reloading points and content so as to best improve the WCRT. We present various alternative scratchpad allocation heuristics and evaluate their effectiveness in reducing the WCRT. The scheme is also extended to work on Message Sequence Graph models. We evaluate our memory allocation scheme on two real-world embedded applications controlling an Unmanned Aerial Vehicle (UAV) and an in-orbit monitoring instrument, respectively.\n", "author": [{"name": "Vivy Suhendra", "affiliation": "Institute for Infocomm Research, Singapore"}, {"name": "Abhik Roychoudhury", "affiliation": "National University of Singapore, Singapore"}, {"name": "Tulika Mitra", "affiliation": "National University of Singapore, Singapore"}, {"name": "Vivy Suhendra", "affiliation": "Institute for Infocomm Research, Singapore"}, {"name": "Abhik Roychoudhury", "affiliation": "National University of Singapore, Singapore"}, {"name": "Tulika Mitra", "affiliation": "National University of Singapore, Singapore"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "21", "references": [{"title": "Model checking message sequence charts", "authors": ["Alur"]}, {"title": "A post-compiler approach to scratchpad mapping of code", "authors": ["Angiolini", " Menichelli", " Ferrero", " Benini"]}, {"title": "SimpleScalar: An infrastructure for computer system modeling", "authors": ["Austin", " Larson"]}, {"title": "An optimal memory allocation scheme for scratch-pad-based embedded systems", "authors": ["Avissar", " Barua"]}, {"title": "Scratchpad memory: Design alternative for cache on-chip memory in embedded systems", "authors": ["Banakar", " Steinke", " Lee", " Balakrishnan"]}, {"title": "The ILOG CPLEX Optimizer v7", "authors": ["CPLEX"]}, {"title": "WCET-Directed dynamic scratchpad memory allocation of data", "authors": ["Deverge"]}, {"title": "Heap data allocation to scratch-pad memory in embedded systems", "authors": ["Dominguez", " Udayakumaran"]}, {"title": "A dynamic code placement technique for scratchpad memory using postpass optimization", "authors": ["Egger", " Kim", " Jang", " Nam", " Lee"]}, {"title": "Dynamic scratchpad memory management for code in portable systems with an MMU", "authors": ["Egger", " Lee"]}, {"title": "DEBIE -- First standard space debris monitoring instrument", "authors": ["European Space Agency"]}, {"title": "Combined data partitioning and loop nest splitting for energy consumption minimization", "authors": ["Falk"]}, {"title": "Message sequence charts", "authors": ["Harel"]}, {"title": "Multiprocessor system-on-chip data reuse analysis for exploring customized memory hierarchies", "authors": ["Issenin", " Brockmeyer", " Durinck"]}, {"title": "Recommendation Z", "authors": ["ITU-T"]}, {"title": "A novel instruction scratchpad memory optimization method based on concomitance metric", "authors": ["Janapsatya", " Ignjatovic"]}, {"title": "Data locality enhancement for CMPs", "authors": []}, {"title": "Exploiting scratch-pad memory using presburger formulas", "authors": [" Kadayif"]}, {"title": "Dynamic on-chip memory management for chip multiprocessors", "authors": [" Ozturk"]}, {"title": "Exploiting shared scratch pad memory space in embedded multiprocessor systems", "authors": [" Ramanujam"]}, {"title": "A compiler based approach for dynamically managing scratch-pad memories in embedded systems", "authors": [" Ramanujam", " Irwin", " Vijaykrishnan", " Kadayif"]}, {"title": "Analysis of cache-related preemption delay in fixed-priority preemptive scheduling", "authors": ["Lee", " Hahn", " Seo", " Min", " Ha", " Hong", " Park", " Lee"]}, {"title": "Chronos: A timing analyzer for embedded software", "authors": [" Liang", " Mitra"]}, {"title": "Fast, predictable and low energy memory references through architecture-aware compilation", "authors": ["Marwedel", " Wehmeyer", " Verma", " Steinke"]}, {"title": "Worst case execution time and energy analysis", "authors": ["Mitra"]}, {"title": "Accurate estimation of cache-related preemption delay", "authors": ["Negi", " Mitra"]}, {"title": "PapaBench: A free real-time benchmark", "authors": ["Nemer", " Cass\u00e9", " Sainrat", " Bahsoun"]}, {"title": "Memory allocation for embedded systems with a compile-time-unknown scratch-pad size", "authors": ["Nguyen", " Dominguez"]}, {"title": "Shared scratch-pad memory space management", "authors": ["Ozturk", " K"]}, {"title": "On-Chip vs", "authors": [" Dutt"]}, {"title": "WCET-Centric software-controlled instruction caches for hard real-time systems", "authors": ["Puaut"]}, {"title": "Compiler managed dynamic instruction placement in a low-power code cache", "authors": ["Ravindran", " Nagarkar", " Dasika", " Marsman", " Senger", " Mahlke"]}, {"title": "Multiple process execution in cache related preemption delay analysis", "authors": ["Staschulat"]}, {"title": "Reducing energy consumption by dynamic copying of instructions onto onchip memory", "authors": ["Steinke", " Grunwald", " Wehmeyer", " Banakar", " Balakrishnan"]}, {"title": "Assigning program and data objects to scratchpad for energy reduction", "authors": ["Steinke", " Wehmeyer", " Lee"]}, {"title": "Efficient detection and exploitation of infeasible paths for software timing analysis", "authors": ["Suhendra", " Mitra"]}, {"title": "WCET centric data allocation to scratchpad memory", "authors": ["Suhendra", " Mitra", " Roychoudhury"]}, {"title": "Integrated scratchpad memory optimization and task scheduling for MPSoC architectures", "authors": ["Suhendra", " Raghavan"]}, {"title": "Program path analysis to bound cache-related preemption delay in preemptive real-time systems", "authors": ["Tomiyama"]}, {"title": "Compiler-Decided dynamic memory allocation for scratch-pad based embedded systems", "authors": ["Udayakumaran"]}, {"title": "Scratchpad sharing strategies for multiprocess embedded systems: A first approach", "authors": ["Verma", " Petzold", " Wehmeyer", " Falk"]}, {"title": "Cache-Aware scratchpad allocation algorithm", "authors": ["Verma", " Wehmeyer"]}, {"title": "Dynamic overlay of scratchpad memory for energy minimization", "authors": ["Verma", " Wehmeyer"]}, {"title": "Compiler-Optimized usage of partitioned memories", "authors": ["Wehmeyer", " Helmig"]}, {"title": "An upper bound for the chromatic number of a graph and its application to timetabling problems", "authors": ["Welsh"]}, {"title": "Performance estimation for real-time distributed embedded systems", "authors": ["Yen"]}]},
{"title": "Santa Claus: Formal analysis of a process-oriented solution", "time": "April 2010", "keyword": ["Programming Languages and Systems"], "abstract": "With the commercial development of multicore processors, the challenges of writing multithreaded programs to take advantage of these new hardware architectures are becoming more and more pertinent. Concurrent programming is necessary to achieve the performance that the hardware offers. Traditional approaches present concurrency as an \n topic: they have proven difficult to use, reason about with confidence, and scale up to high levels of concurrency. This article reviews \n, based on Hoare's algebra of Communicating Sequential Processes (CSP), and proposes that this approach to concurrency leads to solutions that are manageable by novice programmers; that is, they are easy to design and maintain, that they are scalable for complexity, \n, and relatively easy to verify using formal reasoning and/or model checkers. These solutions can be developed in conventional programming languages (through CSP libraries) or specialized ones (such as occam-\u03c0) in a manner that directly reflects their formal expression. Systems can be developed without needing specialist knowledge of the CSP formalism, since the supporting mathematics is burnt into the tools and languages supporting it. We illustrate these concepts with the \n, which has been used as a challenge for concurrency mechanisms since 1994. We consider this problem as an example control system, producing external signals reporting changes of internal state (that model the external world). We claim our occam-\u03c0 solution is \n, but follow this up with formal verification (using the FDR model checker for CSP) that the system is free from deadlock and livelock, that the produced control signals obey crucial ordering constraints, and that the system has key liveness properties.\n", "author": [{"name": "Peter H. Welch", "affiliation": "University of Kent, United Kingdom"}, {"name": "Jan B. Pedersen", "affiliation": "University of Nevada, Las Vegas, NV"}, {"name": "Peter H. Welch", "affiliation": "University of Kent, United Kingdom"}, {"name": "Jan B. Pedersen", "affiliation": "University of Nevada, Las Vegas, NV"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "Compiling CSP", "authors": ["Barnes"]}, {"title": "Communicating mobile processes", "authors": ["Barnes"]}, {"title": "The KRoC home page", "authors": ["Barnes", " Welch", " Moores"]}, {"title": "Concurrency Research Group, Computing Laboratory, University of Kent", "authors": ["Barnes", " Welch", " Sampson", " Ritson", " Dimmich", " Brown", " Simpson", " Warren"]}, {"title": "Model checking in practice: The T9000 virtual channel processor", "authors": ["Barrett"]}, {"title": "How to solve the Santa Claus problem", "authors": ["Ben-Ari"]}, {"title": "Jingle bells: Solving the Santa Claus problem in polyphonic C&num;", "authors": ["Benton"]}, {"title": "Modern concurrency abstractions for C&num;", "authors": ["Benton", " Cardelli"]}, {"title": "Symbolic model checking without BDDs", "authors": ["Biere", " Cimatti", " Clarke"]}, {"title": "C++CSP2: A many-to-many threading model for multicore architectures", "authors": ["Brown"]}, {"title": "An introduction to the Kent C++CSP library", "authors": ["Brown"]}, {"title": "Graph-Based algorithms for boolean function manipulation", "authors": ["Bryant"]}, {"title": "Deadlock analysis for a fault-tolerant system", "authors": ["Buth", " Kouvaras", " Peleska"]}, {"title": "Combining methods for the livelock analysis of a fault-tolerant system", "authors": ["Buth", " Peleska"]}, {"title": "Solving the Santa Claus problem using state classes", "authors": ["Cameron", " Damiani", " Drossopoulou", " Giachino"]}, {"title": "Parallel Program Design\u2014A Foundation", "authors": ["Ch"]}, {"title": "&nu;SMV 2: An open source tool for symbolic model checking", "authors": ["Cimatti", " Clarke", " Giunchiglia", " Giunchiglia", " Pistore", " Roveri", " Sebastiani"]}, {"title": "Protocol verification as a hardware design aid", "authors": ["Dill", " Drexler", " Hu"]}, {"title": "MPI: A message passing interface standard", "authors": ["Dongarra"]}, {"title": "Failures-Divergence Refinement: FDR2 Manual", "authors": ["Formal Systems (Europe) Ltd"]}, {"title": "Denotational semantics for occam2 (part 1)", "authors": ["Goldsmith", " Roscoe"]}, {"title": "Denotational semantics for occam2 (part 2)", "authors": ["Goldsmith", " Roscoe"]}, {"title": "Active C&num;", "authors": ["G\u00fcntensperger"]}, {"title": "Correctness by construction: Developing a commercial secure system", "authors": ["Hall"]}, {"title": "Viewing control structures as patterns of passing messages", "authors": ["Hewitt"]}, {"title": "Communicating Sequential Processes", "authors": ["Hoare"]}, {"title": "The model checker spin", "authors": ["Holzmann"]}, {"title": "Reachability trees for high-level Petri nets", "authors": ["Huber", " Jensen", " Jepsen"]}, {"title": "Solving the Santa Claus problem: A comparison of various concurrent programming techniques", "authors": ["Hurt"]}, {"title": "Better verification through symmetry", "authors": []}, {"title": "The Transterpreter: A transputer interpreter", "authors": ["Jacobsen"]}, {"title": "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Use (Volume 1)", "authors": ["Jensen"]}, {"title": "Beautiful concurrency", "authors": ["Jones"]}, {"title": "Time, clocks and the orderings of events in a distributed system", "authors": ["Lamport"]}, {"title": "Breaking and fixing the Needham-Schroeder public-key protocol using FDR", "authors": ["Lowe"]}, {"title": "Concurrent program development", "authors": ["McEwan"]}, {"title": "Modeling and analysis of the AMBA bus using CSP and B", "authors": ["McEwan"]}, {"title": "Mur\u03c6 Annotated Reference Manual", "authors": ["Melton", " David", " Ip"]}, {"title": "Communicating and Mobile Systems: The &pi;-Calculus", "authors": ["Milner"]}, {"title": "Automated analysis of cryptographic protocols using Mur\u03c6", "authors": ["Mitchell", " Mitchell"]}, {"title": "Threads and swing", "authors": ["Muller"]}, {"title": "A process-oriented architecture for complex system modelling", "authors": ["Ritson"]}, {"title": "Multicore scheduling for lightweight communicating processes", "authors": ["Ritson", " Sampson"]}, {"title": "The Theory and Practice of Concurrency", "authors": ["Roscoe"]}, {"title": "On the expressiveness of CSP", "authors": ["Roscoe"]}, {"title": "Compiling occam to C with Tock -- CPA 2007 Fringe", "authors": ["Sampson"]}, {"title": "occam-&pi; home page", "authors": ["Sampson", " Ritson", " Jadud", " Barnes"]}, {"title": "Tock (Translator from occam to C from Kent) home page", "authors": ["Sampson", " Brown", " Ritson", " Jacobsen", " Jadud"]}, {"title": "Concurrent and Real-time Systems\u2014The CSP Approach", "authors": ["Schneider"]}, {"title": "Verifying security protocols: An application of CSP", "authors": ["Schneider"]}, {"title": "occam 2", "authors": ["Sgs-Thomson Microelectronics Limited"]}, {"title": "Model checking non-blocking MPI programs", "authors": ["Siegel"]}, {"title": "Actors with multi-headed message receive patterns", "authors": ["Sulzmann", " Lam"]}, {"title": "A new exercise in concurrency", "authors": ["Trono"]}, {"title": "A bridging model for parallel computation", "authors": ["Valiant"]}, {"title": "Process oriented design for Java: Concurrency for all", "authors": ["Welch"]}, {"title": "A fast resolution of choice between multiway synchronisations", "authors": ["Welch"]}, {"title": "Communicating sequential processes for Java (JCSP) Home Page", "authors": ["Welch"]}, {"title": "Communicating mobile processes: Introducing occam-pi", "authors": ["Welch"]}, {"title": "Mobile barriers for occam-&pi;: Semantics, implementation and application", "authors": ["Welch"]}, {"title": "A CSP model for mobile channels", "authors": ["Welch"]}, {"title": "Communicating complex systems", "authors": ["Welch", " Barnes"]}, {"title": "Integrating and Extending JCSP", "authors": ["Welch", " Brown", " Moores", " Chalmers"]}, {"title": "Stealth aircraft", "authors": ["Wikipedia"]}, {"title": "The Kent retargetable occam compiler", "authors": ["Wood"]}]},
{"title": "Detecting bugs in register allocation", "time": "April 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Although register allocation is critical for performance, the implementation of register allocation algorithms is difficult, due to the complexity of the algorithms and target machine architectures. It is particularly difficult to detect register allocation errors if the output code runs to completion, as bugs in the register allocator can cause the compiler to produce incorrect output code. The output code may even execute properly on some test data, but errors can remain. In this article, we propose novel data flow analyses to statically check that the value flow of the output code from the register allocator is the same as the value flow of its input code. The approach is accurate, fast, and can identify and report error locations and types. It is independent of the register allocator and uses only the input and output code of the register allocator. It can be used with different register allocators, including those that perform coalescing and rematerialization. The article describes our approach, called SARAC, and a tool that statically checks a register allocation and reports the errors and their types that it finds. The tool has an average compile-time overhead of only 8% and a modest average memory overhead of 85KB. Our techniques can be used by compiler developers during regression testing and as a command-line-enabled debugging pass for mysterious compiler behavior.\n", "author": [{"name": "Yuqiang Huang", "affiliation": "University of Pittsburgh, Pittsburgh, PA"}, {"name": "Bruce R. Childers", "affiliation": "University of Pittsburgh, Pittsburgh, PA"}, {"name": "Mary Lou Soffa", "affiliation": "University of Virginia, Charlottesville, VA"}, {"name": "Yuqiang Huang", "affiliation": "University of Pittsburgh, Pittsburgh, PA"}, {"name": "Bruce R. Childers", "affiliation": "University of Pittsburgh, Pittsburgh, PA"}, {"name": "Mary Lou Soffa", "affiliation": "University of Virginia, Charlottesville, VA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Evicted variables and the interaction of global register allocation and symbolic debugging", "authors": ["Adl-Tabatabai"]}, {"title": "Source-Level debugging of scalar optimized code", "authors": ["Adl-Tabatabai"]}, {"title": "Certificate translation for optimizing compilers", "authors": ["Barthe", " Gregoire", " Kunz"]}, {"title": "Certifying code generation runs with Coq: A tool description", "authors": ["Blech"]}, {"title": "A portable global optimizer and linker", "authors": ["Benitez"]}, {"title": "Spill code minimization techniques for optimizing compilers", "authors": ["Bernstein", " Golumbic", " Mansour", " Pinter", " Goldin", " Krawczyk"]}, {"title": "Integrating register allocation and instruction scheduling for RISCs", "authors": ["Bradlee", " Eggers"]}, {"title": "Rematerialization", "authors": ["Briggs", " Cooper"]}, {"title": "Improvements to graph coloring register allocation", "authors": ["Briggs", " Cooper"]}, {"title": "Register allocation and spilling via graph coloring", "authors": ["Chaitin"]}, {"title": "The priority-based register allocation coloring approach", "authors": ["Chow"]}, {"title": "Register promotion in C programs", "authors": ["Cooper"]}, {"title": "Standard Performance Evaluation Corporation (SPEC)", "authors": []}, {"title": "Register allocation and exhaustive peephole optimization", "authors": ["Davidson"]}, {"title": "Software validation via scalable path-sensitive value flow analysis", "authors": ["Dor", " Adams", " Das"]}, {"title": "Data flow analysis for verifying properties of concurrent programs", "authors": ["Dwyer"]}, {"title": "GCC homepage", "authors": []}, {"title": "Iterated register coalescing", "authors": ["George"]}, {"title": "Register allocation via clique separators", "authors": ["Gupta", " Soffa"]}, {"title": "Verifying optimizers through comparison checking", "authors": ["Jaramillo", " Gupta"]}, {"title": "MediaBench: A tool for evaluating and synthesizing multimedia and communicatons systems", "authors": ["Lee", " Potkonjak"]}, {"title": "A formally verified register allocation framework", "authors": ["Lee"]}, {"title": "Automatically proving the correctness of compiler optimizations", "authors": ["Lerner", " Millstein"]}, {"title": "Automated soundness proofs for dataflow analyses and transformations via local rules", "authors": ["Lerner", " Millstein", " Rice"]}, {"title": "Formal certification of a compiler back-end or: Programming a compiler with a proof assistant", "authors": ["Leroy"]}, {"title": "Structure of a proof-producing compiler for a subset of higher order logic", "authors": [" Owens"]}, {"title": "Verifying the correctness of compiler transformations on basic blocks using abstract interpretation", "authors": ["McNerney"]}, {"title": "University of Michigan", "authors": []}, {"title": "A framework for end-to-end verification and evaluation of register allocators", "authors": [" Pereira"]}, {"title": "Translation validation for an optimizing compiler", "authors": ["Necula"]}, {"title": "The design and implementation of a certifying compiler", "authors": ["Necula"]}, {"title": "Static validation of register allocation", "authors": ["Pereira"]}, {"title": "Register allocation with instruction scheduling: A new approach", "authors": ["Pinter"]}, {"title": "Translation validation", "authors": ["Pnueli", " Siegel"]}, {"title": "Linear scan register allocation", "authors": ["Poletto"]}, {"title": "Credible compilation", "authors": ["Rinard"]}, {"title": "Symbolic transfer function-based approaches to certified compilation", "authors": ["Rival"]}, {"title": "Register allocation across procedure and module boundaries", "authors": ["Santhanam"]}, {"title": "D", "authors": ["Smith"]}, {"title": "A generalized algorithm for graph-coloring register allocation", "authors": ["Smith", " Ramsey"]}, {"title": "The value flow graph: A program representation for optimal program transformations", "authors": ["Steffen", " Knoop"]}, {"title": "Debugging of globally optimized programs using data flow analysis", "authors": ["Wismueller"]}]},
{"title": "La prossima vita at TOPLAS", "time": "August 2010", "keyword": ["Programming Languages and Systems"], "abstract": "No abstract available.\n", "author": [{"name": "Kathryn S. Mckinley", "affiliation": "TOPLAS Editors-in-Chief"}, {"name": "Keshav Pingali", "affiliation": "TOPLAS Editors-in-Chief"}, {"name": "Kathryn S. Mckinley", "affiliation": "TOPLAS Editors-in-Chief"}, {"name": "Keshav Pingali", "affiliation": "TOPLAS Editors-in-Chief"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": []},
{"title": "Typing linear constraints", "time": "August 2010", "keyword": ["Programming Languages and Systems"], "abstract": "We present a type system for linear constraints over the reals intended for reasoning about the input-output directionality of variables. Types model the properties of definiteness, range width or approximation, lower and upper bounds of variables in a linear constraint. Several proof procedures are presented for inferring the type of a variable and for checking validity of type assertions. We rely on theory and tools for linear programming problems, linear algebra, parameterized polyhedra and negative constraints. An application of the type system is proposed in the context of the static analysis of constraint logic programs. Type assertions are at the basis of the extension of well-moding from pure logic programming. The proof procedures (both for type assertion validity and for well-moding) are implemented and their computational complexity is discussed. We report experimental results demonstrating the efficiency in practice of the proposed approach.\n", "author": [{"name": "Salvatore Ruggieri", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Fred Mesnard", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, Cedex 9, France"}, {"name": "Salvatore Ruggieri", "affiliation": "Universit\u00e0 di Pisa, Pisa, Italy"}, {"name": "Fred Mesnard", "affiliation": "IREMIA, LIM, Universit\u00e9 de la R\u00e9union, Cedex 9, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "From Logic Programming to Prolog", "authors": ["Apt"]}, {"title": "Not necessarily closed convex polyhedra and the double description method", "authors": ["Bagnara", " Hill", " Ricci"]}, {"title": "The Parma Polyhedra Library: Toward a complete set of numerical abstractions for the analysis and verification of hardware and software systems", "authors": ["Bagnara", " Hill"]}, {"title": "Applications of polyhedral computations to the analysis and verification of hardware and software systems", "authors": ["Bagnara", " Hill"]}, {"title": "Definiteness analysis for CLP(R)", "authors": ["Baker"]}, {"title": "On the combinatorial and algebraic complexity of quantifier elimination", "authors": ["Basu", " Pollack"]}, {"title": "Adding constraint solving to mercury", "authors": ["Becket", " Garcia de la B", " Marriott", " Somogyi", " Stuckey"]}, {"title": "lp_solve: Open source (mixed-integer) linear programming system", "authors": ["Berkelaar", " Eikl"]}, {"title": "Average-Case analysis of the double description method and the beneath-beyond algorithm", "authors": ["Borgwardt"]}, {"title": "Geometric algorithm for multiparametric linear programming", "authors": ["Borrelli", " Bemporad"]}, {"title": "QEPCAD B: A program for computing with semi-algebraic sets using CADs", "authors": ["Brown"]}, {"title": "An algorithm for finding the general formula for non-negative solutions of systems of linear inequalities", "authors": ["Chernikova"]}, {"title": "Higher-Precision groundness analysis", "authors": ["Codish", " Genaim", " S\u00f8ndegaard"]}, {"title": "Partial cylindrical algebraic decomposition for quantifier elimination", "authors": ["Collins"]}, {"title": "Real quantifier elimination is doubly exponential", "authors": ["Davenport"]}, {"title": "REDLOG: Computer algebra meets computer logic", "authors": ["Dolzmann"]}, {"title": "A new approach for automatic theorem proving in real geometry", "authors": ["Dolzmann", " Sturm"]}, {"title": "Real quantifier elimination in practice", "authors": ["Dolzmann", " Sturm"]}, {"title": "Termination of well-moded programs", "authors": ["Etalle", " Bossi"]}, {"title": "Postoptimal Analyses, Parametric Programming, and Related Topics 2nd Ed", "authors": ["Gal"]}, {"title": "Multiparametric linear programming", "authors": ["Gal"]}, {"title": "Global analysis of constraint logic programs", "authors": ["Garcia de la B", " Hermenegildo", " Bruynooghe", " Dumortier", " Janssens"]}, {"title": "Worst-Case groundness analysis using definite boolean functions", "authors": ["Genaim", " Codish"]}, {"title": "Resolution and separation theorems for polyhedral convex sets", "authors": ["Goldman"]}, {"title": "Consistency, redundancy, and implied equalities in linear systems", "authors": ["Greenberg"]}, {"title": "Compile-time analysis of nonlinear constraints in CLP(R)", "authors": ["Hanus"]}, {"title": "OFAI clp(q,r) manual, edition 1", "authors": ["Holzbaur"]}, {"title": "Abstracting numeric constraints with boolean functions", "authors": ["Howe"]}, {"title": "Practical tools for reasoning about linear constraints", "authors": ["Huynh", " Joskowicz", " Lassez"]}, {"title": "Constraint logic programming: A survey", "authors": ["Jaffar"]}, {"title": "The semantics of constraint logic programs", "authors": ["Jaffar", " Maher", " Marriott"]}, {"title": "The CLP(R) language and system", "authors": ["Jaffar", " Michaylov", " Stuckey"]}, {"title": "Solution of parameterized linear inequalities by Fourier elimination and its applications", "authors": ["Keerthi"]}, {"title": "Optimizing compilation of CLP(R)", "authors": ["Kelly", " Marriott", " Macdonald", " Stuckey"]}, {"title": "A polynomial algorithm in linear programming", "authors": ["Khachiyan"]}, {"title": "Termination analysis with types is more accurate", "authors": ["Lagoon", " Mesnard"]}, {"title": "A canonical form for generalized linear constraints", "authors": ["Lassez"]}, {"title": "A note on Chernikova's algorithm", "authors": ["Le Verge"]}, {"title": "Polylib: A library for manipulating parameterized polyhedra", "authors": ["Loechner"]}, {"title": "Parameterized polyhedra and their vertices", "authors": ["Loechner"]}, {"title": "Programming with Constraints: An Introduction", "authors": ["Marriott"]}, {"title": "On proving left-termination of constraint logic programs", "authors": ["Mesnard"]}, {"title": "The double description method", "authors": ["Motzkin", " Raiffa", " Thompson"]}, {"title": "Linear Programming", "authors": ["Murty"]}, {"title": "Approaches to the incremental detection of implicit equalities with the revised simplex method", "authors": ["Refalo"]}, {"title": "On the computational complexity and geometry of the first-order theory of the reals", "authors": ["Renegar"]}, {"title": "Typing linear constraints for moding CLP(R) programs", "authors": ["Ruggieri"]}, {"title": "Polyhedral functions and multiparametric linear programming", "authors": ["Schechter"]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Schrijver"]}, {"title": "Mathematical Logic", "authors": ["Shoenfield"]}, {"title": "The execution algorithm of Mercury, an efficient purely declarative logic programming language", "authors": ["Somogyi", " Henderson"]}, {"title": "A termination analyser for Java bytecode based on path-length", "authors": ["Spoto", " Mesnard"]}, {"title": "Solving systems of strict polynomial inequalities", "authors": ["Strzebonski"]}, {"title": "Incremental linear constraint solving and implicit equalities", "authors": ["Stuckey"]}, {"title": "Alfred Tarski's elimination theory for closed fields", "authors": ["Van Den Vries"]}, {"title": "A library for doing polyhedral operations", "authors": ["Wilde"]}]},
{"title": "Semantics of fractional permissions with nesting", "time": "August 2010", "keyword": ["Programming Languages and Systems"], "abstract": "Permissions specify mutable state that can be accessed by a program. Fractions distinguish write access (1) from read access (any smaller fraction). Nesting can model object invariants and ownership. Fractional permissions provides a foundation the meaning of many of access-based annotations: uniqueness, read-only, immutability, method effects, guarded state, etc. The semantics of fractional permissions with nesting is given in terms of \u201cfractional heaps.\u201d We show that the fraction law \u03a0 \u2261 1/2 \u03a0 + 1/2 \u03a0 permits sound reasoning and that nesting can be carried out safely using only local reasoning.\n", "author": [{"name": "John Tang Boyland", "affiliation": "University of Wisconsin-Milwaukee, Milwaukee WI"}, {"name": "John Tang Boyland", "affiliation": "University of Wisconsin-Milwaukee, Milwaukee WI"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "21", "references": [{"title": "Ownership domains: Separating aliasing policy from mechanism", "authors": ["Aldrich"]}, {"title": "A decidable fragment of separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": "Springer, 97--109", "authors": [" vol"]}, {"title": "Modular typestate verification of aliased objects", "authors": ["Bierhoff"]}, {"title": "Modular typestate verification of aliased objects", "authors": ["Bierhoff"]}, {"title": "Permission accounting in separation logic", "authors": ["Bornat", " Calcagno", " O' Hearn"]}, {"title": "Checking interference with fractional permissions", "authors": ["Boyl"]}, {"title": "Springer, 55--72", "authors": [" vol"]}, {"title": "Why we should not add readonly to Java, yet", "authors": ["Boyl"]}, {"title": "Capabilities for sharing: A generalization of uniqueness and read-only", "authors": ["Boyl", " Noble"]}, {"title": "Connecting effects and uniqueness with adoption", "authors": ["Boyl"]}, {"title": "Iterators can be independent \u201cfrom\u201d their collections", "authors": ["Boyl", " Retert"]}, {"title": "Comprehending annotations on object - oriented programs using fractional permissions", "authors": ["Boyl", " Retert"]}, {"title": "A semantics for concurrent separation logic", "authors": ["Brookes"]}, {"title": "Object ownership and containment", "authors": ["Clarke"]}, {"title": "Ownership, encapsulation and the disjointness of type and effect", "authors": ["Clarke"]}, {"title": "External uniqueness is unique enough", "authors": ["Clarke"]}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["F\u00e4hndrich"]}, {"title": "Declaring and checking non-null types in an object - oriented language", "authors": ["F\u00e4hndrich"]}, {"title": "Type-Based race detection for Java", "authors": ["Flanagan"]}, {"title": "An object-oriented effects system", "authors": ["Greenhouse"]}, {"title": "Bias an assertion language for mutable data structures", "authors": ["Ishtiaq"]}, {"title": " ", "authors": [" New York"]}, {"title": "Reasoning about iterators with separation logic", "authors": ["Krishnaswami"]}, {"title": "Using data groups to specify and check side effects", "authors": ["Leino", " Poetzsch-Heffter"]}, {"title": "A type system for controlling representation exposure in Java", "authors": ["M\u00fcller"]}, {"title": "Ownership transfer in universe types", "authors": ["M\u00fcller"]}, {"title": "The logic of bunched implications", "authors": ["O' Hearn"]}, {"title": "Separation and information hiding", "authors": ["O' Hearn", " Yang"]}, {"title": "Implementing permission analysis", "authors": ["Retert"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Concurrency analysis based on fractional permissions", "authors": ["Zhao"]}]},
{"title": "Fast interprocedural linear two-variable equalities", "time": "January 2012", "keyword": ["Programming Languages and Systems"], "abstract": "In this article we provide an interprocedural analysis of linear two-variable equalities. The novel algorithm has a worst-case complexity of \ud835\udcaa(\n \u22c5 \n), where \n is the number of variables and \n is the program size. Thus, it saves a factor of \n in comparison to a related algorithm based on full linear algebra. We also indicate how the practical runtime can be further reduced significantly. The analysis can be applied, for example, for register coalescing, for identifying local variables and thus for interprocedurally observing stack pointer modifications as well as for an analysis of array index expressions, when analyzing low-level code.\n", "author": [{"name": "Andrea Flexeder", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Markus M\u00fcller-olm", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, Germany"}, {"name": "Michael Petter", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Helmut Seidl", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Andrea Flexeder", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Markus M\u00fcller-olm", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, Germany"}, {"name": "Michael Petter", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Helmut Seidl", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Detecting equality of variables in programs", "authors": ["Alpern", " Wegman"]}, {"title": "Propagating differences: An efficient new fixpoint algorithm for distributive constraint systems", "authors": ["Fecht"]}, {"title": "Iterated register coalescing", "authors": ["George"]}, {"title": "A polynomial-time algorithm for global value numbering", "authors": ["Gulwani"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Horwitz", " Reps"]}, {"title": "The interprocedural coincidence theorem", "authors": ["Knoop"]}, {"title": "A new numerical abstract domain based on difference bound matrices", "authors": ["Min\u00e9"]}, {"title": "The octagon abstract domain", "authors": ["Min\u00e9"]}, {"title": "Checking Herbrand equalities and beyond", "authors": ["M\u00fcller-Olm", " R\u00fcthing"]}, {"title": "Precise interprocedural analysis through linear algebra", "authors": ["M\u00fcller-Olm"]}, {"title": "Interprocedural Herbrand equalities", "authors": ["M\u00fcller-Olm", " Seidl"]}, {"title": "Analysis of modular arithmetic", "authors": ["M\u00fcller-Olm"]}, {"title": "Upper adjoints for fast inter-procedural variable equalities", "authors": ["M\u00fcller-Olm"]}, {"title": "Precise interprocedural dataflow analysis with applications to constant propagation", "authors": ["Sagiv", " Reps"]}, {"title": "Scalable analysis of linear systems using mathematical programming", "authors": ["Sankaranarayanan", " Sipma"]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Sharir"]}, {"title": "Two variables per linear inequality as an abstract domain", "authors": ["Simon", " King"]}, {"title": "The value flow graph: A program representation for optimal program transformations", "authors": ["Steffen", " Knoop"]}, {"title": "http://www2", "authors": ["Votum"]}, {"title": "System V application binary interface: PowerPC processor supplement", "authors": ["Zucker"]}]},
{"title": "Finite differencing of logical formulas for static analysis", "time": "August 2010", "keyword": ["Programming Languages and Systems"], "abstract": "This article concerns mechanisms for maintaining the value of an instrumentation relation (also known as a \n or \n), defined via a logical formula over core relations, in response to changes in the values of the core relations. It presents an algorithm for transforming the instrumentation relation's defining formula into a \n that captures what the instrumentation relation's new value should be. The algorithm runs in time linear in the size of the defining formula.\nThe technique applies to program analysis problems in which the semantics of statements is expressed using logical formulas that describe changes to core relation values. It provides a way to obtain values of the instrumentation relations that reflect the changes in core relation values produced by executing a given statement.\nWe present experimental evidence that our technique is an effective one: for a variety of benchmarks, the relation-maintenance formulas produced automatically using our approach yield the same precision as the best available hand-crafted ones.\n", "author": [{"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc."}, {"name": "Mooly Sagiv", "affiliation": "Tel Aviv University, Israel"}, {"name": "Alexey Loginov", "affiliation": "GrammaTech, Inc."}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc."}, {"name": "Mooly Sagiv", "affiliation": "Tel Aviv University, Israel"}, {"name": "Alexey Loginov", "affiliation": "GrammaTech, Inc."}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "On a theory of Boolean functions", "authors": ["Akers"]}, {"title": "Automatic predicate abstraction of C programs", "authors": ["Ball", " Majumdar", " Millstein"]}, {"title": "Automatically validating temporal safety properties of interfaces", "authors": ["Ball"]}, {"title": "Shape analysis for composite data structures", "authors": ["Berdine", " Calcagno", " Cook", " Distefano", " O'Hearn", " Wies"]}, {"title": "Abstract State Machines: A Method for High-Level System Design and Analysis", "authors": ["Boerger"]}, {"title": "Revamping TVLA: Making parametric shape analysis competitive", "authors": ["Bogudlov", " Lev-Ami", " Reps"]}, {"title": "Revamping TVLA: Making parametric shape analysis competitive (tool paper)", "authors": ["Bogudlov", " Lev-Ami", " Reps"]}, {"title": "Modular verification of software components in C", "authors": ["Chaki", " Clarke", " Groce", " Jha"]}, {"title": "Counterexample-guided abstraction refinement", "authors": ["Clarke", " Grumberg", " Jha", " Lu"]}, {"title": "Verification by abstract interpretation", "authors": ["Cousot"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction of approximation of fixed points", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Experience with predicate abstraction", "authors": ["Das", " Dill"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "Incremental and decremental evaluation of transitive closure by first-order queries", "authors": ["Dong"]}, {"title": "Incremental maintenance of recursive views using relational calculus/SQL", "authors": ["Dong"]}, {"title": "Checking cleanness in linked lists", "authors": ["Dor", " Rodeh"]}, {"title": "A History of Numerical Analysis", "authors": ["Goldstine"]}, {"title": "Numeric domains with summarized dimensions", "authors": ["Gopan", " DiMaio", " Dor", " Reps"]}, {"title": "A framework for numeric analysis of array operations", "authors": ["Gopan", " Reps"]}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "Materialized Views: Techniques, Implementations, and Applications", "authors": ["Gupta", " Eds"]}, {"title": "Lazy abstraction", "authors": ["Henzinger", " Jhala", " Majumdar"]}, {"title": "Dynamic computational complexity", "authors": ["Hesse"]}, {"title": "Verification via structure simulation", "authors": ["Immerman", " Rabinovich", " Reps", " Sagiv"]}, {"title": "BI as an assertion language for mutable data structures", "authors": ["Ishtiaq"]}, {"title": "Software Abstractions: Logic, Language, and Analysis", "authors": ["Jackson"]}, {"title": "A relational approach to interprocedural shape analysis", "authors": ["Jeannet", " Loginov", " Reps"]}, {"title": "A relational approach to interprocedural shape analysis", "authors": ["Jeannet", " Loginov", " Reps"]}, {"title": "Graph types", "authors": ["Klarlund"]}, {"title": "Computer-Aided Verification of Coordinating Processes", "authors": ["Kurshan"]}, {"title": "Verifying properties of well-founded linked lists", "authors": ["Lahiri"]}, {"title": "Putting static analysis to work for verification: A case study", "authors": ["Lev-Ami", " Reps", " Sagiv"]}, {"title": "TVLA: A system for implementing static analyses", "authors": ["Lev-Ami"]}, {"title": "A system for generating static analyzers for machine instructions", "authors": ["Lim"]}, {"title": "Discovering auxiliary information for incremental computation", "authors": ["Liu", " Stoller"]}, {"title": "Systematic derivation of incremental programs", "authors": ["Liu"]}, {"title": "Refinement-based program verification via three-valued-logic analysis", "authors": ["Loginov"]}, {"title": "Abstraction refinement via inductive learning", "authors": ["Loginov", " Reps"]}, {"title": "Automated verification of the Deutsch-Schorr-Waite tree-traversal algorithm", "authors": ["Loginov", " Reps"]}, {"title": "Refinement-based verification for possibly-cyclic lists", "authors": ["Loginov", " Reps"]}, {"title": "Abstract interpretation of partial-evaluation algorithms", "authors": ["Malmkj\u00e6r"]}, {"title": "Predicate abstraction and canonical abstraction for singly-linked lists", "authors": ["Manevich", " Yahav", " Ramalingam"]}, {"title": "Verification of infinite state systems by compositional model checking", "authors": ["McMillan"]}, {"title": "Memo functions and machine learning", "authors": ["Michie"]}, {"title": "The pointer assertion logic engine", "authors": ["M\u00f8ller"]}, {"title": "A relational framework for abstract interpretation", "authors": ["Mycroft"]}, {"title": "Data flow analysis of applicative programs using minimal function graphs", "authors": ["Mycroft"]}, {"title": "Verifying reachability invariants of linked structures", "authors": ["Nelson"]}, {"title": "Two-level semantics and abstract interpretation", "authors": ["Nielson"]}, {"title": "Finite differencing of computable expressions", "authors": ["Paige"]}, {"title": "Dyn-FO: A parallel, dynamic complexity class", "authors": ["Patnaik"]}, {"title": "Semantic minimization of 3-valued propositional formulae", "authors": ["Reps", " Loginov"]}, {"title": "Finite differencing of logical formulas for static analysis", "authors": ["Reps", " Sagiv"]}, {"title": "Static program analysis via 3-valued logic", "authors": ["Reps", " Sagiv"]}, {"title": "Symbolic implementation of the best transformer", "authors": ["Reps", " Sagiv"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "A semantics for procedure local heaps and its abstractions", "authors": ["Rinetzky", " Bauer", " Reps", " Sagiv"]}, {"title": "Interprocedural shape analysis for recursive programs", "authors": ["Rinetzky"]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Sagiv", " Reps"]}, {"title": "Automatic inference of optimizer flow functions from semantic meanings", "authors": ["Scherpelz", " Lerner"]}, {"title": "Some observations concerning formal differentiation of set theoretic expressions", "authors": ["Sharir"]}, {"title": "TVLA system", "authors": []}, {"title": "Singular terms, truth-value gaps, and free logic", "authors": ["van Fraassen"]}, {"title": "Symbolically computing most-precise abstract operations for shape analysis", "authors": ["Yorsh", " Reps"]}, {"title": "Logical characterizations of heap abstractions", "authors": ["Yorsh", " Reps", " Sagiv"]}]},
{"title": "Semantics of transactional memory and automatic mutual exclusion", "time": "January 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Software Transactional Memory (STM) is an attractive basis for the development of language features for concurrent programming. However, the semantics of these features can be delicate and problematic. In this article we explore the trade-offs semantic simplicity, the viability of efficient implementation strategies, and the flexibility of language constructs. Specifically, we develop semantics and type systems for the constructs of the Automatic Mutual Exclusion (AME) programming model; our results apply also to other constructs, such as atomic blocks. With this semantics as a point of reference, we study several implementation strategies. We model STM systems that use in-place update, optimistic concurrency, lazy conflict detection, and rollback. These strategies are correct only under nontrivial assumptions that we identify and analyze. One important source of errors is that some efficient implementations create dangerous \u201czombie\u201d computations where a transaction keeps running after experiencing a conflict; the assumptions confine the effects of these computations.\n", "author": [{"name": "Mart\u00edn Abadi", "affiliation": "Microsoft Research, Silicon Valley, University of California, Santa Cruz, and Coll\u00e8ge de France "}, {"name": "Andrew Birrell", "affiliation": "Microsoft Research, Silicon Valley"}, {"name": "Tim Harris", "affiliation": "Microsoft Research, Cambridge"}, {"name": "Michael Isard", "affiliation": "Microsoft Research, Silicon Valley"}, {"name": "Mart\u00edn Abadi", "affiliation": "Microsoft Research, Silicon Valley, University of California, Santa Cruz, and Coll\u00e8ge de France "}, {"name": "Andrew Birrell", "affiliation": "Microsoft Research, Silicon Valley"}, {"name": "Tim Harris", "affiliation": "Microsoft Research, Cambridge"}, {"name": "Michael Isard", "affiliation": "Microsoft Research, Silicon Valley"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "24", "references": [{"title": "Automatic mutual exclusion and atomicity checks", "authors": ["Abadi"]}, {"title": "Dynamic separation for transactional memory", "authors": ["Abadi", " Birrell", " Harris", " Hsieh"]}, {"title": "Implementation and use of transactional memory with dynamic separation", "authors": ["Abadi", " Birrell", " Harris", " Hsieh"]}, {"title": "Types for safe locking: Static race detection for Java", "authors": ["Abadi", " Flanagan"]}, {"title": "A model of dynamic separation for transactional memory", "authors": ["Abadi", " Harris"]}, {"title": "Compiler and runtime support for efficient software transactional memory", "authors": ["Adl-Tabatabai", " Lewis", " Menon", " Murphy", " Saha"]}, {"title": "Weak ordering--a new definition", "authors": ["Adve"]}, {"title": "Cooperative task management without manual stack management", "authors": ["Adya", " Howell", " Theimer", " Bolosky"]}, {"title": "The Fortress language specification, v1", "authors": ["Allen", " Chase", " Hallett", " Luchangco", " Maessen", " Ryu"]}, {"title": "Subtleties of transactional memory atomicity semantics", "authors": ["Blundell", " Lewis"]}, {"title": "Feedback-directed barrier optimization in a strongly isolated STM", "authors": ["Bronson", " Kozyrakis"]}, {"title": "The Atomos transactional programming language", "authors": ["Carlstrom", " McDonald", " Chafi", " Chung", " Minh", " Kozyrakis"]}, {"title": "Verifying correctness of transactional memories", "authors": ["Cohen", " O'Leary", " Pnueli", " Tuttle"]}, {"title": "Strong isolation is a weak idea", "authors": ["Daless"]}, {"title": "Transactional locking II", "authors": ["Dice", " Shalev"]}, {"title": "What really makes transactions faster&quest; In Proceedings of the ACM SIGPLAN Workshop on Languages, Compilers, and Hardware Support for Transactional Computing (TRANSACT'06)", "authors": ["Dice"]}, {"title": "What do high-level memory models mean for transactions&quest; In Proceedings of the Workshop on Memory System Performance and Correctness (MSPC'06)", "authors": ["Grossman", " Manson"]}, {"title": "Model checking transactional memories", "authors": ["Guerraoui", " Henzinger"]}, {"title": "Completeness and nondeterminism in model checking transactional memories", "authors": ["Guerraoui", " Henzinger"]}, {"title": "Language support for lightweight transactions", "authors": ["Harris"]}, {"title": "Composable memory transactions", "authors": ["Harris", " Marlow", " Peyton Jones"]}, {"title": "Optimizing memory transactions", "authors": ["Harris", " Plesko", " Shinnar"]}, {"title": "Featherweight Java: a minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Automatic mutual exclusion", "authors": ["Isard"]}, {"title": "A transactional object calculus", "authors": ["Jagannathan", " Vitek", " Welc"]}, {"title": "Transactions everywhere", "authors": ["Kuszmaul"]}, {"title": "An operational semantics for LogTM", "authors": ["Liblit"]}, {"title": "Preemptible atomic regions for real-time Java", "authors": ["Manson", " Baker", " Cunei", " Jagannathan", " Prochazka", " Xin"]}, {"title": "The Java memory model", "authors": ["Manson", " Pugh"]}, {"title": "Practical weak-atomicity semantics for Java STM", "authors": ["Menon", " Balensiefer", " Shpeisman", " Adl-Tabatabai", " Hudson", " Saha"]}, {"title": "LogTM: Log-based transactional memory", "authors": ["Moore", " Bobba", " Moravan", " Hill"]}, {"title": "High-level small-step operational semantics for transactions", "authors": ["Moore"]}, {"title": "Effective static race detection for Java", "authors": ["Naik", " Aiken"]}, {"title": "McRT-STM: a high performance software transactional memory system for a multi-core runtime", "authors": ["Saha", " Adl-Tabatabai", " Hudson", " Minh"]}, {"title": "Dynamic optimization for efficient strong atomicity", "authors": ["Schneider", " Menon", " Shpeisman"]}, {"title": "Sequential specification of transactional memory semantics", "authors": ["Scott"]}, {"title": "Software transactional memory", "authors": ["Shavit"]}, {"title": "Enforcing isolation and ordering in STM", "authors": ["Shpeisman", " Menon", " Adl-Tabatabai", " Balensiefer", " Grossman", " Hudson", " Moore"]}, {"title": "Ordering-based semantics for software transactional memory", "authors": ["Spear", " Daless", " Marathe"]}, {"title": "Privatization techniques for software transactional memory", "authors": ["Spear", " Marathe", " Daless"]}, {"title": "Warlock: A static data race analysis tool", "authors": ["Sterling"]}, {"title": "A compositional method for verifying software transactional memory implementations", "authors": ["Tasiran"]}, {"title": "Code generation and optimization for transactional memory constructs in an unmanaged language", "authors": ["Wang", " Chen", " Wu", " Saha"]}, {"title": "Safe futures for Java", "authors": ["Welc", " Jagannathan"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}]},
{"title": "LOCKSMITH: Practical static race detection for C", "time": "January 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Locksmith is a static analysis tool for automatically detecting data races in C programs. In this article, we describe each of Locksmith's component analyses precisely, and present systematic measurements that isolate interesting trade-offs between precision and efficiency in each analysis. Using a benchmark suite comprising stand-alone applications and Linux device drivers totaling more than 200,000 lines of code, we found that a simple no-worklist strategy yielded the most efficient interprocedural dataflow analysis; that our sharing analysis was able to determine that most locations are thread-local, and therefore need not be protected by locks; that modeling C structs and void pointers precisely is key to both precision and efficiency; and that context sensitivity yields a much more precise analysis, though with decreased scalability. Put together, our results illuminate some of the key engineering challenges in building Locksmith and data race detection analyses in particular, and constraint-based program analyses in general.\n", "author": [{"name": "Polyvios Pratikakis", "affiliation": "University of Maryland"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland"}, {"name": "Michael Hicks", "affiliation": "University of Maryland"}, {"name": "Polyvios Pratikakis", "affiliation": "University of Maryland"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland"}, {"name": "Michael Hicks", "affiliation": "University of Maryland"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "56", "references": [{"title": "Optimized run-time race detection and atomicity checking using partial discovered types", "authors": ["Agarwal", " Sasturkar", " Wang"]}, {"title": "Type inference for parameterized race-free java", "authors": ["Agarwal"]}, {"title": "Principles of Compiler Design (Addison-Wesley Series in Computer Science and Information Processing)", "authors": ["Aho"]}, {"title": "Checking and inferring local non-aliasing", "authors": ["Aiken", " Foster", " Kodumal"]}, {"title": "Memory model for multithreaded c++: Issues", "authors": ["Alex", " Boehm", " Henney", " Hutchings", " Lea"]}, {"title": "A parameterized type system for race-free java programs", "authors": ["Boyapati"]}, {"title": "Efficient and precise datarace detection for multithreaded object-oriented programs", "authors": ["Choi", " Lee", " Loginov", " O'Callahan", " Sarkar"]}, {"title": "Iterative data-flow analysis, revisited", "authors": ["Cooper", " Harvey"]}, {"title": "Typed memory management in a calculus of capabilities", "authors": ["Crary", " Walker"]}, {"title": "Racerx: effective, static detection of race conditions and deadlocks", "authors": ["Engler"]}, {"title": "Adoption and focus: practical linear types for imperative programming", "authors": ["Fahndrich"]}, {"title": "Scalable context-sensitive flow analysis using instantiation constraints", "authors": ["F\u00e4hndrich", " Rehof"]}, {"title": "Types for safe locking", "authors": ["Flanagan"]}, {"title": "Type-based race detection for java", "authors": ["Flanagan"]}, {"title": "Detecting race conditions in large programs", "authors": ["Flanagan"]}, {"title": "Atomizer: a dynamic atomicity checker for multithreaded programs", "authors": ["Flanagan"]}, {"title": "Type inference against races", "authors": ["Flanagan"]}, {"title": "Type inference for atomicity", "authors": ["Flanagan", " Freund"]}, {"title": "Extended static checking for java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "A type and effect system for atomicity", "authors": ["Flanagan"]}, {"title": "Flow-insensitive type qualifiers", "authors": ["Foster", " Johnson", " Kodumal"]}, {"title": "Flow-sensitive type qualifiers", "authors": ["Foster", " Terauchi"]}, {"title": "Type-safe multithreading in cyclone", "authors": ["Grossman"]}, {"title": "Ultra-fast aliasing analysis using cla: a million lines of c code in a second", "authors": ["Heintze"]}, {"title": "Type inference with polymorphic recursion", "authors": ["Henglein"]}, {"title": "A direct approach to control-flow sensitive region-based memory management", "authors": ["Henglein", " Makholm"]}, {"title": "Race checking by context inference", "authors": ["Henzinger", " Jhala"]}, {"title": "Runtime error detection through semantic analysis", "authors": ["Hote"]}, {"title": "Teraflops research chip", "authors": ["Intel"]}, {"title": "Finding user/kernel pointer bugs with type inference", "authors": ["Johnson"]}, {"title": "The set constraint/cfl reachability connection in practice", "authors": ["Kodumal"]}, {"title": "Banshee: A scalable constraint-based analysis toolkit", "authors": ["Kodumal"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Lamport"]}, {"title": "An investigation of the therac-25 accidents", "authors": ["Leveson"]}, {"title": "The java memory model", "authors": ["Manson", " Pugh"]}, {"title": "Flow Analysis of Typed Higher-Order Programs", "authors": ["Mossin"]}, {"title": "Conditional must not aliasing for static race detection", "authors": ["Naik"]}, {"title": "Effective static race detection for java", "authors": ["Naik", " Aiken"]}, {"title": "Contextual effects for version-consistent dynamic software updating and safe concurrent programming", "authors": ["Neamtiu", " Hicks", " Foster"]}, {"title": "Cil: Intermediate language and tools for analysis and transformation of c programs", "authors": ["Necula", " McPeak", " Rahul"]}, {"title": "Designer puts 96 cores on single chip", "authors": []}, {"title": "Hybrid dynamic data race detection", "authors": ["O'Callahan"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Tracking the blackout bug", "authors": ["Poulsen"]}, {"title": "Existential label flow inference via CFL reachability", "authors": ["Pratikakis", " Foster"]}, {"title": "Locksmith: context-sensitive correlation analysis for race detection", "authors": ["Pratikakis", " Foster"]}, {"title": "Kiss: keep it simple and sequential", "authors": ["Qadeer"]}, {"title": "Type-base flow analysis: from polymorphic subtyping to cfl-reachability", "authors": ["Rehof"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": "Toward a grainless semantics for shared-variable concurrency", "authors": ["Reynolds"]}, {"title": "Dynamic inference of polymorphic lock types", "authors": ["Rose", " Swamy"]}, {"title": "Eraser: A dynamic data race detector for multithreaded programs", "authors": ["Savage", " Burrows", " Nelson", " Sobalvarro"]}, {"title": "Global invariants for analyzing multi-threaded applications", "authors": ["Seidl", " Vene"]}, {"title": "Coping with type casts in c", "authors": ["Siff", " Ch", " Ball", " Kunchithapadam"]}, {"title": "Alias types", "authors": ["Smith", " Walker"]}, {"title": "The type and effect discipline", "authors": ["Talpin"]}, {"title": "Checking race freedom via linear programming", "authors": ["Terauchi"]}, {"title": "A region inference algorithm", "authors": ["Tofte"]}, {"title": "Static conflict analysis for multi-threaded object-oriented programs", "authors": ["von Praun"]}, {"title": "Relay: static race detection on millions of lines of code", "authors": ["Voung", " Jhala"]}]},
{"title": "Mechanically verified proof obligations for linearizability", "time": "January 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Concurrent objects are inherently complex to verify. In the late 80s and early 90s, Herlihy and Wing proposed \n as a correctness condition for concurrent objects, which, once proven, allows us to reason about concurrent objects using pre- and postconditions only. A concurrent object is linearizable if all of its operations appear to take effect instantaneously some time between their invocation and return.\nIn this article we define simulation-based proof conditions for linearizability and apply them to two concurrent implementations, a lock-free stack and a set with lock-coupling. Similar to other approaches, we employ a theorem prover (here, KIV) to mechanize our proofs. Contrary to other approaches, we also use the prover to mechanically check that our proof obligations actually guarantee linearizability. This check employs the original ideas of Herlihy and Wing of verifying linearizability via \n.\n", "author": [{"name": "John Derrick", "affiliation": "University of Sheffield, Sheffield, UK"}, {"name": "Gerhard Schellhorn", "affiliation": "Institute for Software and Systems Engineering, Augsburg, Germany"}, {"name": "Heike Wehrheim", "affiliation": "Institut f\u00fcr Informatik, Paderborn, Germany"}, {"name": "John Derrick", "affiliation": "University of Sheffield, Sheffield, UK"}, {"name": "Gerhard Schellhorn", "affiliation": "Institute for Software and Systems Engineering, Augsburg, Germany"}, {"name": "Heike Wehrheim", "affiliation": "Institut f\u00fcr Informatik, Paderborn, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "41", "references": [{"title": "Formal construction of a non-blocking concurrent queue algorithm (a case study in atomicity)", "authors": ["Abrial"]}, {"title": "Comparison under abstraction for verifying linearizability", "authors": ["Amit", " Rinetzky", " Reps", " Sagiv"]}, {"title": "Z in Practice", "authors": ["Barden", " Stepney"]}, {"title": "The Spec&num; programming system: An overview", "authors": ["Barnett", " Rustan", " Leino"]}, {"title": "Proving linearizability with temporal logic", "authors": ["B\u00e4umler", " Schellhorn", " Tofan"]}, {"title": "Concurrency of operations on b-trees", "authors": ["Bayer"]}, {"title": "Modular safety checking for fine-grained concurrency", "authors": ["Calcagno", " Parkinson"]}, {"title": "CASL Reference Manual", "authors": ["CoFI"]}, {"title": "Reduction in TLA", "authors": ["Cohen"]}, {"title": "Verifying concurrent data structures by simulation", "authors": ["Colvin", " Doherty"]}, {"title": "Data Refinement: Model-Oriented Proof Methods and Their Comparison", "authors": ["de Roever"]}, {"title": "Refinement in Z and Object-Z: Foundations and Advanced Applications", "authors": ["Derrick"]}, {"title": "Proving linearizability via non-atomic refinement", "authors": ["Derrick", " Schellhorn"]}, {"title": "Mechanizing a correctness proof for a lock-free concurrent stack", "authors": ["Derrick", " Schellhorn"]}, {"title": "Using coupled simulations in non-atomic refinement", "authors": ["Derrick"]}, {"title": "Non-atomic refinement in Z and CSP", "authors": ["Derrick"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "Formal verification of a practical lock-free queue algorithm", "authors": ["Doherty", " Groves", " Luchangco"]}, {"title": "Theory interpretation in simple type theory", "authors": ["Farmer"]}, {"title": "On the relationship between concurrent separation logic and assume-guarantee reasoning", "authors": ["Feng", " Ferheira"]}, {"title": "Thread-modular model checking", "authors": ["Flanagan"]}, {"title": "A general lock-free algorithm using compare-and-swap", "authors": ["Gao"]}, {"title": "Derivation of a scalable lock-free stack algorithm", "authors": ["Groves"]}, {"title": "A scalable lock-free stack algorithm", "authors": ["Hendler", " Shavit"]}, {"title": "Axioms for concurrent objects", "authors": ["Herlihy"]}, {"title": "Linearizability: A correctness condition for concurrent objects", "authors": ["Herlihy"]}, {"title": "Using eternity variables to specify and prove a serializable database interface", "authors": ["Hesselink"]}, {"title": "Eternity variables to prove simulation of specifications", "authors": ["Hesselink"]}, {"title": "Refinement verification of the lazy caching algorithm", "authors": ["Hesselink"]}, {"title": "A criterion for atomicity revisited", "authors": ["Hesselink"]}, {"title": "A statically verifiable programming model for concurrent object-oriented programs", "authors": ["Jacobs", " Smans", " Piessens"]}, {"title": "Specification and design of (parallel) programs", "authors": ["Jones"]}, {"title": "Web presentation of the linearization case study in KIV", "authors": ["KIV"]}, {"title": "The temporal logic of actions", "authors": ["Lamport"]}, {"title": "Pretending atomicity", "authors": ["Lamport"]}, {"title": "Reduction: A method of proving properties of parallel programs", "authors": ["Lipton"]}, {"title": "Model checking linearizability via refinement", "authors": ["Liu", " Chen", " Liu"]}, {"title": "Nonblocking algorithms and preemption-safe locking on multi programmed shared - memory multiprocessors", "authors": ["Michael"]}, {"title": "A reduction theorem for concurrent object-oriented programs", "authors": ["Misra"]}, {"title": "An axiomatic proof technique for parallel programs I", "authors": ["Owicki"]}, {"title": "Modular verification of a non-blocking stack", "authors": ["Parkinson", " Bornat"]}, {"title": "Structured specifications and interactive proofs with KIV", "authors": ["Reif", " Schellhorn", " Stenzel"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "The Z Notation: A Reference Manual", "authors": ["Spivey"]}, {"title": "Modular fine-grained concurrency verification", "authors": ["Vafeiadis"]}, {"title": "Proving correctness of highly concurrent linearisable objects", "authors": ["Vafeiadis", " Herlihy", " Hoare"]}, {"title": "A marriage of rely/guarantee and separation logic", "authors": ["Vafeiadis"]}, {"title": "Deriving linearizable fine-grained concurrent objects", "authors": ["Vechev"]}, {"title": "Automated verification of programs with non-blocking synchronization", "authors": ["Wang"]}, {"title": "Static analysis for programs with non-blocking synchronization", "authors": ["Wang"]}, {"title": "Using Z: Specification, Refinement, and Proof", "authors": ["Woodcock"]}]},
{"title": "Environmental bisimulations for higher-order languages", "time": "January 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Developing a theory of bisimulation in higher-order languages can be hard. Particularly challenging can be: (1) the proof of congruence, as well as enhancements of the bisimulation proof method with \u201cup-to context\u201d techniques, and (2) obtaining definitions and results that scale to languages with different features.\nTo meet these challenges, we present \n, a form of bisimulation for higher-order languages, and its basic theory. We consider four representative calculi: pure \u03bb-calculi (call-by-name and call-by-value), call-by-value \u03bb-calculus with higher-order store, and then Higher-Order \u03c0-calculus. In each case: we present the basic properties of environment bisimilarity, including congruence; we show that it coincides with contextual equivalence; we develop some up-to techniques, including up-to context, as examples of possible enhancements of the associated bisimulation method.\nUnlike previous approaches (such as applicative bisimulations, logical relations, Sumii-Pierce-Koutavas-Wand), our method does not require induction/indices on evaluation derivation/steps (which may complicate the proofs of congruence, transitivity, and the combination with up-to techniques), or sophisticated methods such as Howe's for proving congruence. It also scales from the pure \u03bb-calculi to the richer calculi with simple congruence proofs.\n", "author": [{"name": "Davide Sangiorgi", "affiliation": "University of Bologna and INRIA"}, {"name": "Naoki Kobayashi", "affiliation": "Tohoku University"}, {"name": "Eijiro Sumii", "affiliation": "Tohoku University"}, {"name": "Davide Sangiorgi", "affiliation": "University of Bologna and INRIA"}, {"name": "Naoki Kobayashi", "affiliation": "Tohoku University"}, {"name": "Eijiro Sumii", "affiliation": "Tohoku University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "47", "references": [{"title": "A bisimulation method for cryptographic protocols", "authors": ["Abadi"]}, {"title": "The lazy lambda calculus", "authors": ["Abramsky"]}, {"title": "Step-indexed syntactic logical relations for recursive and quantified types", "authors": ["Ahmed"]}, {"title": "An indexed model of impredicative polymorphism and mutable references", "authors": ["Ahmed", " Appel"]}, {"title": "State-dependent representation independence", "authors": ["Ahmed", " Dreyer"]}, {"title": "An indexed model of recursive types for foundational proof-carrying code", "authors": ["Appel"]}, {"title": "Congruence proofs for weak bisimulation equivalences on higher--order process calculi", "authors": ["Baldamus"]}, {"title": "Relational interpretations of recursive types in an operational setting", "authors": ["Birkedal"]}, {"title": "Proof techniques for cryptographic processes", "authors": ["Boreale", " De Nicola"]}, {"title": "Bisimulation in name-passing calculi without matching", "authors": ["Boreale"]}, {"title": "More on bisimulations for higher order pi-calculus", "authors": ["Cao"]}, {"title": "Syntactic logical relations over polymorphic and recursive types", "authors": ["Crary"]}, {"title": "A theory of weak bisimulation for core CML", "authors": ["Ferreira", " Hennessy"]}, {"title": "Extending Howe's method to early bisimulations for typed mobile embedded resources with local names", "authors": ["Godskesen"]}, {"title": "Functional programming and input/output", "authors": ["Gordon"]}, {"title": "On reduction-based process semantics", "authors": ["Honda"]}, {"title": "Proving congruence of bisimulation in functional programming languages", "authors": ["Howe"]}, {"title": "Towards a theory of bisimulation for local names", "authors": ["Jeffrey"]}, {"title": "A theory of bisimulation for a fragment of concurrent ml with local names", "authors": ["Jeffrey"]}, {"title": "Contextual equivalence for higher-order pi-calculus revisited", "authors": ["Jeffrey"]}, {"title": "Bisimulations for untyped imperative objects", "authors": ["Koutavas"]}, {"title": "Small bisimulations for reasoning about higher-order imperative programs", "authors": ["Koutavas"]}, {"title": "Relational reasoning about functions and nondeterminism", "authors": ["Lassen"]}, {"title": "Bisimulations dans les calculs avec passivation", "authors": ["Lenglet"]}, {"title": "Howe's method for calculi with passivation", "authors": ["Lenglet", " Schmitt"]}, {"title": "Bisimulation congruences in Safe Ambients", "authors": ["Merro"]}, {"title": "Behavioral theory for mobile ambients", "authors": ["Merro"]}, {"title": "Communication and Concurrency", "authors": ["Milner"]}, {"title": "Communicating and Mobile Systems: the &pi;-Calculus", "authors": ["Milner"]}, {"title": "Pure bigraphs: Structure and dynamics", "authors": ["Milner"]}, {"title": "Foundations for Programming Languages", "authors": ["Mitchell"]}, {"title": "Lambda-calculus models of programming languages", "authors": ["Morris", " Jr"]}, {"title": "The lazy lambda calculus: an investigation into the foundations of functional programming", "authors": ["Ong"]}, {"title": "Behavioral equivalence in the polymorphic pi-calculus", "authors": ["Pierce"]}, {"title": "Operationally-based theories of program equivalence", "authors": ["Pitts"]}, {"title": "Typed operational reasoning", "authors": ["Pitts"]}, {"title": "Techniques modulo pour les bisimulations", "authors": ["Pous"]}, {"title": "and Sangiorgi, D", "authors": ["Pous"]}, {"title": "Types, abstraction and parametric polymorphism", "authors": ["Reynolds"]}, {"title": "Improvement theory and its applications", "authors": []}, {"title": "Expressing mobility in process algebras: First-order and higher-order paradigm", "authors": ["Sangiorgi"]}, {"title": "The lazy lambda calculus in a concurrency scenario", "authors": ["Sangiorgi"]}, {"title": "Bisimulation for Higher-Order Process Calculi", "authors": ["Sangiorgi"]}, {"title": "Asynchronous process calculi: the first-order and higher-order paradigms (tutorial)", "authors": ["Sangiorgi"]}, {"title": "Logical bisimulations and functional languages", "authors": ["Sangiorgi", " Kobayashi"]}, {"title": "The &pi;-calculus: a Theory of Mobile Processes", "authors": ["Sangiorgi"]}, {"title": "The kell calculus: A family of higher-order distributed process calculi", "authors": ["Schmitt"]}, {"title": "A complete, co-inductive syntactic theory of sequential control and state", "authors": ["St\u00f8vring"]}, {"title": "A complete characterization of observational equivalence in polymorphic \u03bb-calculus with general references", "authors": ["Sumii"]}, {"title": "Logical relations for encryption", "authors": ["Sumii"]}, {"title": "A bisimulation for dynamic sealing", "authors": ["Sumii"]}, {"title": "A bisimulation for type abstraction and recursion", "authors": ["Sumii"]}, {"title": "Plain CHOCS, a second generation calculus for higher-order processes", "authors": ["Thomsen"]}]},
{"title": "Morphing: Structurally shaping a class by reflecting on others", "time": "February 2011", "keyword": ["Programming Languages and Systems"], "abstract": "We present MorphJ: a language for specifying general classes whose members are produced by iterating over members of other classes. We call this technique \u201cclass morphing\u201d or just \u201cmorphing.\u201d Morphing extends the notion of genericity so that not only types of methods and fields, but also the \n of a class can vary according to type variables. This adds a disciplined form of metaprogramming to mainstream languages and allows expressing common programming patterns in a highly generic way that is otherwise not supported by conventional techniques. For instance, morphing lets us write generic proxies (i.e., classes that can be parameterized with another class and export the same public methods as that class); default implementations (e.g., a generic do-nothing type, configurable for any interface); semantic extensions (e.g., specialized behavior for methods that declare a certain annotation); and more. MorphJ's hallmark feature is that, despite its emphasis on generality, it allows modular type-checking: a MorphJ class can be checked independently of its uses. Thus, the possibility of supplying a type parameter that will lead to invalid code is detected early, an invaluable feature for highly general components that will be statically instantiated by other programmers. We demonstrate the benefits of morphing with several examples, including a MorphJ reimplementation of DSTM2, a software transactional memory library which reduces 1,484 lines of Java reflection and bytecode engineering library calls to just 586 lines of MorphJ code.\n", "author": [{"name": "Shan Shan Huang", "affiliation": "LogicBlox, Inc., Atlanta, GA"}, {"name": "Yannis Smaragdakis", "affiliation": "University of Massachusetts, Amherst, MA"}, {"name": "Shan Shan Huang", "affiliation": "LogicBlox, Inc., Atlanta, GA"}, {"name": "Yannis Smaragdakis", "affiliation": "University of Massachusetts, Amherst, MA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "16", "references": [{"title": "A first-class approach to genericity", "authors": ["Allen", " Bannet"]}, {"title": "", "authors": []}, {"title": "The Java syntactic extender (JSE)", "authors": ["Bachrach"]}, {"title": "Maya: Multiple-Dispatch syntax extension in Java", "authors": ["Baker"]}, {"title": "JTS: Tools for implementing domain-specific languages", "authors": ["Batory", " Lofaso"]}, {"title": "Mixin-Based inheritance", "authors": ["Bracha"]}, {"title": "rg/", "authors": ["Bruenton"]}, {"title": "Implementing multi-stage languages using ASTs, gensym, and reflection", "authors": ["Calcagno", " Taha", " Huang"]}, {"title": "Flavors: A non-hierarchical approach to object-oriented programming", "authors": ["Cannon"]}, {"title": "Associated type synonyms", "authors": ["Chakravarty", " Keller"]}, {"title": "Associated types with class", "authors": ["Chakravarty", " Keller", " Jones"]}, {"title": "Inheritance is not subtyping", "authors": ["Cook", " Hill"]}, {"title": "JCrasher: An automatic robustness tester for Java", "authors": ["Csallner"]}, {"title": "Reflections on metaclass programming in SOM", "authors": ["Danforth"]}, {"title": "A type system for reflective program generators", "authors": ["Draheim", " Lutteroth"]}, {"title": "Traits: A mechanism for fine-grained reuse", "authors": ["Ducasse", " Nierstrasz", " Sch\u00e4rli", " Wuyts"]}, {"title": "The JastAdd extensible Java compiler", "authors": ["Ekman"]}, {"title": "Reflective program generation with patterns", "authors": ["F\u00e4hndrich", " Carbin"]}, {"title": "Design Patterns", "authors": ["Gamma", " Helm"]}, {"title": "In Spring School on Datatype-Generic Programming, R", "authors": ["Gibbons"]}, {"title": "A flexible framework for implementing software transactional memory", "authors": ["Herlihy", " Luchangco"]}, {"title": "Type-Indexed data types", "authors": ["Hinze", " Jeuring"]}, {"title": "Easy language extension with Meta-AspectJ", "authors": ["Huang"]}, {"title": "Expressive and safe static reflection with MorphJ", "authors": ["Huang"]}, {"title": "Statically safe program generation with SafeGen", "authors": ["Huang", " Zook"]}, {"title": "cJ: Enhancing Java with safe type conditions", "authors": ["Huang", " Zook"]}, {"title": "Morphing: Safely shaping a class in the image of others", "authors": ["Huang", " Zook"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Variant parametric types: A flexible subtyping scheme for generics", "authors": ["Igarashi"]}, {"title": "PolyP\u2014a polytypic programming language extension", "authors": ["Jansson"]}, {"title": "The Art of the Metaobject Protocol", "authors": ["Kiczales", " des Rivieres"]}, {"title": "An overview of AspectJ", "authors": ["Kiczales", " Hilsdale", " Hugunin", " Kersten", " Palm"]}, {"title": "Aspect-Oriented programming", "authors": ["Kiczales", " Lamping", " Menhdhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "Scrap your boilerplate: A practical design pattern for generic programming", "authors": ["L\u00e4mmel"]}, {"title": "Using prototypical objects to implement shared behavior in object-oriented systems", "authors": ["Lieberman"]}, {"title": "Supporting software development through declaratively codified programming patterns", "authors": ["Mens", " Michiels"]}, {"title": "Interfaces with default implementations in Java", "authors": ["Mohnen"]}, {"title": "Metaprogramming with traits", "authors": ["Reppy"]}, {"title": "Type checking with open type functions", "authors": ["Schrijvers", " Peyton Jones", " Chakravarty"]}, {"title": "Template meta-programming for Haskell", "authors": ["Sheard"]}, {"title": "Implementing layered designs with mixin layers", "authors": ["Smaragdakis"]}, {"title": "Delegation is inheritance", "authors": ["Stein"]}, {"title": "Multi-Stage programming with explicit annotations", "authors": ["Taha"]}, {"title": "Adding wildcards to the java programming language", "authors": ["Torgersen", " Hansen", " Ernst", " von der Ahe", " Bracha"]}, {"title": "Program transformation with Stratego/XT: Rules, strategies, tools, and systems in Stratego/XT 0", "authors": ["Visser"]}, {"title": "A design for type-directed Java", "authors": ["Weirich"]}]},
{"title": "Automated termination proofs for haskell by term rewriting", "time": "February 2011", "keyword": ["Programming Languages and Systems"], "abstract": "There are many powerful techniques for automated termination analysis of term rewriting. However, up to now they have hardly been used for real programming languages. We present a new approach which permits the application of existing techniques from term rewriting to prove termination of most functions defined in Haskell programs. In particular, we show how termination techniques for ordinary rewriting can be used to handle those features of Haskell which are missing in term rewriting (e.g., lazy evaluation, polymorphic types, and higher-order functions). We implemented our results in the termination prover AProVE and successfully evaluated them on existing Haskell libraries.\n", "author": [{"name": "J\u00fcrgen Giesl", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Matthias Raffelsieper", "affiliation": "TU Eindhoven, The Netherlands"}, {"name": "Peter Schneider-Kamp", "affiliation": "University of Southern Denmark, Odense, M, Denmark"}, {"name": "Stephan Swiderski", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Ren\u00e9 Thiemann", "affiliation": "University of Innsbruck, Innsbruck, Austria"}, {"name": "J\u00fcrgen Giesl", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Matthias Raffelsieper", "affiliation": "TU Eindhoven, The Netherlands"}, {"name": "Peter Schneider-Kamp", "affiliation": "University of Southern Denmark, Odense, M, Denmark"}, {"name": "Stephan Swiderski", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Ren\u00e9 Thiemann", "affiliation": "University of Innsbruck, Innsbruck, Austria"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "51", "references": [{"title": "Termination checking with types", "authors": ["Abel"]}, {"title": "Context-Sensitive dependency pairs", "authors": ["Alarc\u00f3n", " Guti\u00e9rrez"]}, {"title": "Improving context-sensitive dependency pairs", "authors": ["Alarc\u00f3n", " Emmes", " Fuhs", " Giesl", " Guti\u00e9rrez", " Lucas", " Schneider-Kamp"]}, {"title": "Termination analysis of Java bytecode", "authors": ["Albert", " Arenas", " Codish", " Genaim", " Puebla"]}, {"title": "Termination of term rewriting using dependency pairs", "authors": ["Arts"]}, {"title": "Type-Based termination of recursive definitions", "authors": ["Barthe", " Frade", " Gim\u00e9nez", " Pinto"]}, {"title": "Automatic termination proofs for programs with shape-shifting heaps", "authors": ["Berdine", " Cook", " Distefano"]}, {"title": "A type-based termination criterion for dependently-typed higher-order rewrite systems", "authors": ["Blanqui"]}, {"title": "Termination of polynomial programs", "authors": ["Bradley", " Manna"]}, {"title": "Termination graphs for Java bytecode", "authors": ["Brockschmidt", " Otto", " von Essen"]}, {"title": "Ranking abstractions", "authors": ["Chawdhary", " Cook", " Gulwani", " Sagiv"]}, {"title": "Practical methods for proving program termination", "authors": ["Col\u00f3n"]}, {"title": "Termination proofs for systems code", "authors": ["Cook", " Podelski"]}, {"title": "Termination of rewriting", "authors": ["Dershowitz"]}, {"title": "Matrix interpretations for proving termination of term rewriting", "authors": ["Endrullis", " Waldmann"]}, {"title": "From outermost to context-sensitive rewriting", "authors": ["Endrullis"]}, {"title": "Dependency pairs for rewriting with built-in numbers and semantic data structures", "authors": ["Falke"]}, {"title": "Proving termination of integer term rewriting", "authors": ["Fuhs", " Giesl", " Pl\u00fccker", " Schneider-Kamp"]}, {"title": "Match-Bounded string rewriting systems", "authors": ["Geser", " Hofbauer"]}, {"title": "Termination analysis for functional programs using term orderings", "authors": ["Giesl"]}, {"title": "Transformation techniques for context-sensitive rewrite systems", "authors": ["Giesl"]}, {"title": "The dependency pair framework: Combining techniques for automated termination proofs", "authors": ["Giesl", " Thiemann"]}, {"title": "Proving and disproving termination of higher-order functions", "authors": ["Giesl", " Thiemann"]}, {"title": "Automated termination analysis for Haskell: From term rewriting to programming languages", "authors": ["Giesl", " Swiderski", " Schneider-Kamp"]}, {"title": "AProVE 1", "authors": ["Giesl", " Schneider-Kamp"]}, {"title": "Mechanizing and improving dependency pairs", "authors": ["Giesl", " Thiemann", " Schneider-Kamp"]}, {"title": "Termination analysis and specialization-point insertion in offline partial evaluation", "authors": ["Glenstrup"]}, {"title": "Termination of rewriting under strategies", "authors": ["Gnaedig"]}, {"title": "Multi-paradigm declarative languages", "authors": ["Hanus"]}, {"title": "Automating the dependency pair method", "authors": ["Hirokawa"]}, {"title": "Tyrolean termination tool: Techniques and features", "authors": ["Hirokawa"]}, {"title": "Uncurrying for termination", "authors": ["Hirokawa", " Middeldorp"]}, {"title": "The Hugs 98 user manual", "authors": ["Jones"]}, {"title": "Comparing curried and uncurried rewriting", "authors": ["Kennaway", " Klop", " Sleep"]}, {"title": "Types and higher-order recursion schemes for verification of higher-order programs", "authors": ["Kobayashi"]}, {"title": "Tyrolean termination tool 2", "authors": ["Korp", " Sternagel", " Zankl"]}, {"title": "The size-change principle for program termination", "authors": ["Lee", " Jones"]}, {"title": "Context-Sensitive computations in functional and functional logic programs", "authors": ["Lucas"]}, {"title": "Termination analysis with calling context graphs", "authors": ["Manolios"]}, {"title": "On model-checking trees generated by higher-order recursion schemes", "authors": ["Ong"]}, {"title": "Automated termination analysis of Java bytecode by term rewriting", "authors": ["Otto", " Brockschmidt", " von Essen"]}, {"title": "TEA: Automatically proving termination of programs in a non-strict higher-order functional language", "authors": ["Panitz"]}, {"title": "Generierung statischer Programminformation zur Kompilierung verz\u00f6gert ausgewerteter funktionaler Programmiersprachen", "authors": ["Panitz"]}, {"title": "Haskell 98 Languages and Libraries: The Revised Report", "authors": ["Peyton Jones"]}, {"title": "A complete method for the synthesis of linear ranking functions", "authors": ["Podelski"]}, {"title": "Transition invariants", "authors": ["Podelski"]}, {"title": "Improving efficiency and power of automated termination analysis for Haskell", "authors": ["Raffelsieper"]}, {"title": "A transformational approach to prove outermost termination automatically", "authors": ["Raffelsieper"]}, {"title": "Liquid types", "authors": ["Rondon", " Kawaguchi"]}, {"title": "Automated termination proofs for logic programs by term rewriting", "authors": ["Schneider-Kamp", " Giesl", " Serebrenik"]}, {"title": "Automated termination analysis for logic programs with cut", "authors": ["Schneider-Kamp", " Giesl", " Str\u00f6der", " Serebrenik"]}, {"title": "Termination analysis of higher-order functional programs", "authors": ["Sereni"]}, {"title": "Termination analysis and call graph construction for higher-order functional programs", "authors": ["Sereni"]}, {"title": "An algorithm of generalization in positive supercompilation", "authors": ["S\u00f8rensen"]}, {"title": "A termination analyser for Java Bytecode based on path length", "authors": ["Spoto", " Mesnard"]}, {"title": "Terminierungsanalyse von Haskellprogrammen", "authors": ["Swiderski"]}, {"title": "Ensuring termination in ESFP", "authors": ["Telford"]}, {"title": "The size-change principle and dependency pairs for termination of term rewriting", "authors": ["Thiemann"]}, {"title": "From outermost termination to innermost termination", "authors": ["Thiemann"]}, {"title": "Termination of linear programs", "authors": ["Tiwari"]}, {"title": "On proving the termination of algorithms by machine", "authors": ["Walther"]}, {"title": "Dependent types for program termination verification", "authors": []}, {"title": "Static contract checking for Haskell", "authors": [" Peyton Jones"]}, {"title": "Termination", "authors": ["Zantema"]}]},
{"title": "Refinement types for secure implementations", "time": "February 2011", "keyword": ["Programming Languages and Systems"], "abstract": "We present the design and implementation of a typechecker for verifying security properties of the source code of cryptographic protocols and access control mechanisms. The underlying type theory is a \u03bb-calculus equipped with refinement types for expressing pre- and post-conditions within first-order logic. We derive formal cryptographic primitives and represent active adversaries within the type theory. Well-typed programs enjoy assertion-based security properties, with respect to a realistic threat model including key compromise. The implementation amounts to an enhanced typechecker for the general-purpose functional language F\n; typechecking generates verification conditions that are passed to an SMT solver. We describe a series of checked examples. This is the first tool to verify authentication properties of cryptographic protocols by typechecking their source code.\n", "author": [{"name": "Jesper Bengtson", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "Sergio Maffeis", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Jesper Bengtson", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Karthikeyan Bhargavan", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "C\u00e9dric Fournet", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "Andrew D. Gordon", "affiliation": "Microsoft Research, United Kingdom"}, {"name": "Sergio Maffeis", "affiliation": "Imperial College London, London, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "66", "references": [{"title": "Secrecy by typing in security protocols", "authors": ["Abadi"]}, {"title": "Access control in a core calculus of dependency", "authors": ["Abadi"]}, {"title": "Analyzing security protocols with secrecy types and logic programs", "authors": ["Abadi"]}, {"title": "A calculus for access control in distributed systems", "authors": ["Abadi", " Burrows", " Lampson"]}, {"title": "Access control based on execution history", "authors": ["Abadi"]}, {"title": "A calculus for cryptographic protocols: The spi calculus", "authors": ["Abadi"]}, {"title": "Prudent engineering practice for cryptographic protocols", "authors": ["Abadi"]}, {"title": "Cryptographically-masked flows", "authors": ["Askarov", " Hedin"]}, {"title": "Security-typed languages for implementation of cryptographic protocols: A case study", "authors": ["Askarov"]}, {"title": "Subtyping dependent types", "authors": ["Aspinall"]}, {"title": "Engineering formal metatheory", "authors": ["Aydemir", " Charg\u00e9raud", " Pierce", " Pollack"]}, {"title": "Achieving security despite compromise using zero-knowledge", "authors": ["Backes", " Grochulla", " Hri\u0163cu"]}, {"title": "Computationally sound verification of source code", "authors": ["Backes", " Maffei"]}, {"title": "Secure compilation of a multi-tier web language", "authors": ["Baltopoulos"]}, {"title": "The Spec&num; programming system: An overview", "authors": ["Barnett", " Leino"]}, {"title": "Random oracles are practical: A paradigm for designing efficient protocols", "authors": ["Bellare"]}, {"title": "Refinement types for secure implementations", "authors": ["Bengtson", " Bhargavan", " Fournet", " Gordon"]}, {"title": "Refinement types for secure implementations", "authors": ["Bengtson", " Bhargavan", " Fournet", " Gordon"]}, {"title": "Cryptographic protocol synthesis and verification for multiparty sessions", "authors": ["Bhargavan", " Corin", " Deni\u00e9lou", " Fournet"]}, {"title": "Cryptographically verified implementations for TLS", "authors": ["Bhargavan", " Fournet", " Corin"]}, {"title": "Modular verification of security protocol code by typing", "authors": ["Bhargavan", " Fournet"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Bhargavan", " Fournet", " Gordon"]}, {"title": "Typechecking higher-order security libraries", "authors": ["Bhargavan", " Fournet"]}, {"title": "An efficient cryptographic protocol verifier based on Prolog rules", "authors": ["Blanchet"]}, {"title": "A computationally sound mechanized prover for security protocols", "authors": ["Blanchet"]}, {"title": "Automated verification of selected equivalences for security protocols", "authors": ["Blanchet", " Abadi"]}, {"title": "Roles, stacks, histories: A triple for Hoare", "authors": ["Borgstr\u00f6m", " Gordon"]}, {"title": "Typechecking dependent types and subtypes", "authors": ["Cardelli"]}, {"title": "ASPIER: An automated framework for verifying security protocol implementations", "authors": ["Chaki"]}, {"title": "Type-Preserving compilation for end-to-end verification of security enforcement", "authors": ["Chen", " Chugh"]}, {"title": "Do As I SaY&excl; Programmatic access control with explicit identities", "authors": ["Cirillo", " Jagadeesan", " Pitcher"]}, {"title": "ESC/Java2: Uniting ESC/Java and JML", "authors": ["Cok"]}, {"title": "Implementing Mathematics with the Nuprl Proof Development System", "authors": ["Constable", " Allen", " Bromley", " Cleavel", " Cremer", " Harper", " Howe", " Knoblock", " Mendler", " Panangaden", " "]}, {"title": "Links: Web Programming Without Tiers", "authors": ["Cooper", " Lindley", " Wadler"]}, {"title": "The calculus of constructions", "authors": ["Coqu"]}, {"title": "Protocol composition logic (PCL)", "authors": ["Datta", " Derek", " Mitchell"]}, {"title": "Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the Church-Rosser theorem", "authors": ["de Bruijn"]}, {"title": "Z3: An efficient SMT solver", "authors": ["de Moura"]}, {"title": "Java security: From HotJava to Netscape and beyond", "authors": ["Dean", " Felten"]}, {"title": "Simplify: A theorem prover for program checking", "authors": ["Detlefs", " Nelson"]}, {"title": "On the security of public key protocols", "authors": ["Dolev"]}, {"title": "Elements of Intuitionism", "authors": ["Dummett"]}, {"title": "A compositional logic for proving security properties of protocols", "authors": ["Durgin", " Mitchell"]}, {"title": "XML-signature syntax and processing", "authors": ["Eastlake", " Reagle", " Solo", " Bartel", " Boyer", " Fox", " LaMacchia"]}, {"title": "Multi-prover Verification of C Programs", "authors": ["Filli\u00e2tre"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "On the computational soundness of cryptographic verification by typing", "authors": ["Fournet"]}, {"title": "A type discipline for authorization policies", "authors": ["Fournet", " Gordon"]}, {"title": "A type discipline for authorization policies in distributed systems", "authors": ["Fournet", " Gordon"]}, {"title": "Cryptographically sound implementations for typed information-flow security", "authors": ["Fournet"]}, {"title": "Refinement types for ML", "authors": ["Freeman"]}, {"title": "A mechanisation of name-carrying syntax up to alpha-conversion", "authors": ["Gordon"]}, {"title": "Principles and applications of refinement types", "authors": ["Gordon"]}, {"title": "Cryptyc: Cryptographic protocol type checker", "authors": ["Gordon"]}, {"title": "Authenticity by typing for security protocols", "authors": ["Gordon"]}, {"title": "Types and effects for asymmetric cryptographic protocols", "authors": ["Gordon"]}, {"title": "Secrecy despite compromise: Types, cryptography, and the pi-calculus", "authors": ["Gordon"]}, {"title": "Cryptographic protocol analysis on real C code", "authors": ["Goubault-Larrecq"]}, {"title": "Sage: Hybrid checking for flexible specifications", "authors": ["Gronski", " Knowles", " Tomb", " Freund"]}, {"title": "Semantics of Programming Languages", "authors": ["Gunter"]}, {"title": "Reliable evidence: Auditability by typing", "authors": ["Guts", " Fournet"]}, {"title": "Implementing a formally verifiable security protocol in Java Card", "authors": ["Hubbers", " Oostdijk"]}, {"title": "Lambda-RBAC: Programming with role-based access control", "authors": ["Jagadeesan", " Jeffrey", " Pitcher"]}, {"title": "Aura: A programming language for authorization and audit", "authors": ["Jia", " Vaughan", " Mazurak", " Zhao", " Zarko", " Schorr"]}, {"title": "Type-based data structure verification", "authors": ["Kawaguchi", " Rondon"]}, {"title": "Encoding information flow in Haskell", "authors": []}, {"title": "Code-carrying authorization", "authors": ["Maffeis", " Abadi", " Fournet"]}, {"title": "Intuitionistic Type Theory", "authors": ["Martin-L\u00f6f"]}, {"title": "Protection in programming languages", "authors": ["Morris"]}, {"title": "JFlow: Practical mostly-static information flow control", "authors": ["Myers"]}, {"title": "OASIS Web services security: SOAP message security 1", "authors": ["Nadalin", " Kaler", " Hallam-Baker"]}, {"title": "Using encryption for authentication in large networks of computers", "authors": ["Needham"]}, {"title": "Synthesizing proofs from programs in the calculus of inductive constructions", "authors": ["Parent"]}, {"title": "Logic and Computation: Interactive Proof with Cambridge LCF", "authors": ["Paulson"]}, {"title": "Isabelle: A Generic Theorem Prover", "authors": ["Paulson"]}, {"title": "Typing and subtyping for mobile processes", "authors": ["Pierce"]}, {"title": "Verifying an implementation of SSH", "authors": ["Poll"]}, {"title": "Information flow inference for ML", "authors": ["Pottier"]}, {"title": "A systematic approach to access control", "authors": ["Pottier", " Skalka"]}, {"title": "A Hoare logic for call-by-value functional programs", "authors": ["R\u00e9gis-Gianas"]}, {"title": "Liquid types", "authors": ["Rondon", " Kawaguchi"]}, {"title": "Low-level liquid types", "authors": ["Rondon", " Kawaguchi"]}, {"title": "Subtypes for specifications: Predicate subtyping in PVS", "authors": ["Rushby", " Owre"]}, {"title": "Reasoning about programs in continuation-passing style", "authors": ["Sabry"]}, {"title": "A bisimulation for dynamic sealing", "authors": ["Sumii"]}, {"title": "Enforcing stateful authorization and information flow policies in Fine", "authors": ["Swamy", " Chen"]}, {"title": "Fable: A language for enforcing user-defined security policies", "authors": ["Swamy", " Corcoran"]}, {"title": "Expert F&num;", "authors": ["Syme", " Granicz"]}, {"title": "Evidence-Based audit", "authors": ["Vaughan", " Jia", " Mazurak"]}, {"title": "A cryptographic decentralized label model", "authors": ["Vaughan"]}, {"title": "A semantic model for authentication protocols", "authors": ["Woo"]}, {"title": "Dependent types in practical programming", "authors": []}, {"title": "Extended static checking for Haskell", "authors": []}]},
{"title": "Refactoring using type constraints", "time": "May 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Type constraints express subtype relationships between the types of program expressions, for example, those relationships that are required for type correctness. Type constraints were originally proposed as a convenient framework for solving type checking and type inference problems. This paper shows how type constraints can be used as the basis for practical refactoring tools. In our approach, a set of type constraints is derived from a type-correct program \n. The main insight behind our work is the fact that \n constitutes just one solution to this constraint system, and that alternative solutions may exist that correspond to refactored versions of \n. We show how a number of refactorings for manipulating types and class hierarchies can be expressed naturally using type constraints. Several refactorings in the standard distribution of Eclipse are based on our work.\n", "author": [{"name": "Frank Tip", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Robert M. Fuhrer", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Adam Kie\u017cun", "affiliation": "Brigham and Women's Hospital/Harvard Medical School, Boston, MA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle WA"}, {"name": "Ittai Balaban", "affiliation": "World Evolved Services, New York, NY"}, {"name": "Bjorn De Sutter", "affiliation": "Ghent University and Vrije Universiteit Brussel, Gent, Belgium"}, {"name": "Frank Tip", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Robert M. Fuhrer", "affiliation": "IBM T. J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Adam Kie\u017cun", "affiliation": "Brigham and Women's Hospital/Harvard Medical School, Boston, MA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle WA"}, {"name": "Ittai Balaban", "affiliation": "World Evolved Services, New York, NY"}, {"name": "Bjorn De Sutter", "affiliation": "Ghent University and Vrije Universiteit Brussel, Gent, Belgium"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "43", "references": [{"title": "Refactoring support for class library migration", "authors": ["Balaban", " Tip"]}, {"title": "Extreme Programming Explained: Embrace Change", "authors": ["Beck"]}, {"title": "Adding generics to the Java programming language, final release", "authors": ["Bracha", " Cohen", " Kemper", " Odersky", " Stoutamire", " Thorup"]}, {"title": "Escape analysis for Java", "authors": ["Choi", " Gupta", " Serrano", " Sreedhar"]}, {"title": "Customization of Java library classes using type constraints and profile information", "authors": ["De Sutter", " Tip"]}, {"title": "Inference of generic types in Java", "authors": ["Donovan"]}, {"title": " Tschantz, M", "authors": ["Donovan", " Kie&amp"]}, {"title": "Modular type-based reverse engineering of parameterized types in Java code", "authors": ["Duggan"]}, {"title": "Refactoring", "authors": ["Fowler"]}, {"title": " Dolby, J", "authors": ["Fuhrer", " Tip", " Kie&amp"]}, {"title": "The Java Language Specification 3rd Ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Program restructuring as an aid to software maintenance", "authors": ["Griswold"]}, {"title": "Automated assistance for program restructuring", "authors": ["Griswold"]}, {"title": "Models of Thumb: Assuring best practice source code in large Java software systems", "authors": ["Halloran"]}, {"title": "Evaluating the effectiveness of pointer alias analyses", "authors": ["Hind"]}, {"title": "Refactoring to Patterns", "authors": ["Kerievsky"]}, {"title": " Ernst, M", "authors": ["Kie&amp"]}, {"title": " Ernst, M", "authors": ["Kie&amp"]}, {"title": "2004", "authors": ["Mens"]}, {"title": "Refactoring object-oriented frameworks", "authors": ["Opdyke"]}, {"title": "Creating abstract superclasses by refactoring", "authors": ["Opdyke"]}, {"title": "Object-Oriented Type Systems", "authors": ["Palsberg"]}, {"title": "Dimensions of precision in reference analysis of object-oriented programming languages", "authors": ["Ryder"]}, {"title": "Understanding class hierarchies using concept analysis", "authors": ["Snelting"]}, {"title": "Type access analysis: Towards informed interface design", "authors": ["Steimann"]}, {"title": "Decoupling classes with inferred interfaces", "authors": ["Steimann", " Mayer"]}, {"title": "From public to private to absent: Refactoring Java programs under constrained accessibility", "authors": ["Steimann"]}, {"title": "Refactoring class hierarchies with KABA", "authors": ["Streckenbach"]}, {"title": "Refactoring using type constraints", "authors": ["Tip"]}, {"title": " and B&amp;#228;umer, D", "authors": ["Tip", " Kie&amp"]}, {"title": "Evolving object-oriented designs with refactorings", "authors": ["Tokuda"]}, {"title": " Bracha, G", "authors": ["Torgersen", " Plesner Hansen", " Ernst", " von der Ah&amp"]}, {"title": "Converting Java classes to use generics", "authors": ["von Dincklage"]}]},
{"title": "Mathematical foundation of trace scheduling", "time": "May 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Since its introduction by Joseph A. Fisher in 1979, trace scheduling has influenced much of the work on compile-time ILP (Instruction Level Parallelism) transformations. Initially developed for use in microcode compaction, it quickly became the main technique for machine-level compile-time parallelism exploitation. Although it has been used since the 1980s in many state-of-the-art compilers (e.g., Intel, Fujitsu, HP), a rigorous theory of trace scheduling is still lacking in the existing literature. This is reflected in the ad hoc way compensation code is inserted after a trace compaction, in the total absence of any attempts to measure the size of that compensation code, and so on.\nThe aim of this article is to create a mathematical theory of the foundation of trace scheduling. We give a clear algorithm showing how to insert compensation code after a trace is replaced with its schedule, and then \n that the resulting program is indeed equivalent to the original program. We derive an upper bound on the size of that compensation code, and show that this bound can be actually attained. We also give a very simple proof that the trace scheduling algorithm always terminates.\n", "author": [{"name": "Utpal Banerjee", "affiliation": "University of California, Irvine, CA"}, {"name": "Utpal Banerjee", "affiliation": "University of California, Irvine, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Dependence Analysis", "authors": ["Banerjee"]}, {"title": "Bulldog: A compiler for VLIW architecture", "authors": ["Ellis"]}, {"title": "The optimization of horizontal microcode within and beyond basic blocks: An Application of processor scheduling with resources", "authors": ["Fisher"]}, {"title": "Trace scheduling: A technique for global microcode compaction", "authors": ["Fisher"]}, {"title": "The superblock: An effective technique for VLIW and superscalar compilation", "authors": ["Hwu", " Mahlke", " Chen", " Chang", " Warter", " Bringmann", " Ouellette", " Hank", " Kiyohara", " Haab", " Holm"]}, {"title": "Local microcode compaction techniques", "authors": [" Davidson", " Shriver"]}, {"title": "The multiflow trace scheduling compiler", "authors": ["Lowney", " Freudenberger", " Karzes", " Lichtenstein", " Nix", " O'Donnell"]}, {"title": "Parallelism, memory anti-aliasing and correctness for trace-scheduling compilers", "authors": ["Nicolau"]}]},
{"title": "Solving systems of rational equations through strategy iteration", "time": "May 2011", "keyword": ["Programming Languages and Systems"], "abstract": "We present practical algorithms for computing exact least solutions of equation systems over the reals with addition, multiplication by positive constants, minimum and maximum. The algorithms are based on strategy iteration. Our algorithms can, for instance, be used for the analysis of recursive stochastic games. In the present article we apply our techniques for computing abstract least fixpoint semantics of affine programs over the relational template polyhedra domain. In particular, we thus obtain practical algorithms for computing abstract least fixpoint semantics over the abstract domains of intervals, zones, and octagons.\n", "author": [{"name": "Thomas Martin Gawlitza", "affiliation": "VERIMAG, France"}, {"name": "Helmut Seidl", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Thomas Martin Gawlitza", "affiliation": "VERIMAG, France"}, {"name": "Helmut Seidl", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "15", "references": [{"title": " Goldberg, L", "authors": ["Aceto", " Damg&amp"]}, {"title": " Gaubert, S", "authors": ["Adj&amp"]}, {"title": " Sandberg, S", "authors": ["Bj&amp"]}, {"title": " Sandberg, S", "authors": ["Bj&amp"]}, {"title": "A constructive fixed point theorem for min-max functions", "authors": ["Cochet-Terrasson", " Gaubert"]}, {"title": " Sankaranarayanan, S", "authors": ["Col&amp"]}, {"title": "A policy iteration algorithm for computing fixed points in static analysis of programs", "authors": ["Costan", " Gaubert", " Goubault", " Martel"]}, {"title": "Proving program invariance and termination by parametric abstraction, Lagrangian relaxation and semi definite programming", "authors": ["Cousot"]}, {"title": "Static determination of dynamic properties of programs", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": ["Cousot"]}, {"title": "A primer on Galois connections", "authors": ["Erne", " Koslowski", " Melton"]}, {"title": "Approximative methods for monotone systems ofmin-max-polynomial equations", "authors": ["Esparza", " Gawlitza", " Kiefer"]}, {"title": "Convergence thresholds of Newton's method for monotone polynomial equations", "authors": ["Esparza", " Kiefer"]}, {"title": "Recursive stochastic games with positive rwards", "authors": ["Etessami", " Wojtczak"]}, {"title": "Recursive Markov chains, stochastic grammars, and monotone systems of nonlinear equations", "authors": ["Etessami"]}, {"title": "Recursive Markov decision processes and recursive stochastic games", "authors": ["Etessami"]}, {"title": "Recursive concurrent stochastic games", "authors": ["Etessami"]}, {"title": "Static analysis by policy iteration on relational domains", "authors": ["Gaubert", " Goubault", " Taly"]}, {"title": "Polynomial precise interval analysis revisited", "authors": ["Gawlitza", " Leroux", " Reineke", " Seidl", " Sutre"]}, {"title": "Precise relational invariants through strategy iteration", "authors": ["Gawlitza"]}, {"title": "Acceleration abstraite pour l'amelioration de la precision en analyse des relations lineaires", "authors": ["Gonnord"]}, {"title": "Combining widening and acceleration in linear relation analysis", "authors": ["Gonnord"]}, {"title": "On nonterminating stochastic games", "authors": ["Hoffman"]}, {"title": "Dynamic Programming and Markov Processes", "authors": ["Howard"]}, {"title": "A new polynomial-time algorithm for linear programming", "authors": ["Karmarkar"]}, {"title": "On the convergence of Newton's method for monotone systems of polynomial equations", "authors": ["Kiefer", " Luttenberger"]}, {"title": "How good is the simplex algorithm&amp;quest; Inequalities III, 159--175", "authors": ["Klee"]}, {"title": "Code verification by static analysis: A mathematical programming approach", "authors": ["Leconte", " Roux", " Liberti"]}, {"title": "Accelerated data-flow analysis", "authors": ["Leroux"]}, {"title": "2001a", "authors": ["Min&amp"]}, {"title": "2001b", "authors": ["Min&amp"]}, {"title": "A quantifier elimination algorithm for linear real arithmetic", "authors": ["Monniaux"]}, {"title": "Automatic modular abstractions for linear constraints", "authors": ["Monniaux"]}, {"title": "and Seidl, H", "authors": ["M&amp"]}, {"title": "Theory of hybrid and discrete systems", "authors": ["Puri"]}, {"title": "Markov Decision Processes: Discrete Stochastic Dynamic Programming", "authors": ["Puterman"]}, {"title": "Constraint-based linear-relations analysis", "authors": ["Sankaranarayanan", " Sipma"]}, {"title": "Scalable analysis oflinear systems using mathematical programming", "authors": ["Sankaranarayanan", " Sipma"]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Schrijver"]}, {"title": "Automatic removal of array memory leaks in Java", "authors": ["Shaham", " Kolodner"]}, {"title": "A lattice-theoretical fixpoint theorem and its appications", "authors": ["Tarski"]}, {"title": "and Jurdzi&amp;#324;ski, M", "authors": ["V&amp"]}, {"title": "PReMo: An analyzer for probabilistic recursive models", "authors": ["Wojtczak"]}, {"title": "Primal&amp;#7777;Dual Interior&amp;#7777;Point Methods", "authors": ["Wright"]}, {"title": "Recent developments in interior-point methods", "authors": ["Wright"]}]},
{"title": "JavaGI: The Interaction of Type Classes with Interfaces and Inheritance", "time": "July 2011", "keyword": ["Programming Languages and Systems"], "abstract": "The language JavaGI extends Java 1.5 conservatively by a generalized interface mechanism. The generalization subsumes retroactive and type-conditional interface implementations, binary methods, symmetric multiple dispatch, interfaces over families of types, and static interface methods. These features make certain coding patterns redundant, increase the expressiveness of the type system, and permit solutions to extension and integration problems with components in binary form, for which previously several unrelated extensions had been suggested.\nThis article explains JavaGI and motivates its design. Moreover, it formalizes a core calculus for JavaGI and proves type soundness, decidability of typechecking, and determinacy of evaluation. The article also presents the implementation of a JavaGI compiler and an accompanying run-time system. The compiler, based on the Eclipse Compiler for Java, offers mostly modular static typechecking and fully modular code generation. It defers certain well-formedness checks until load time to increase flexibility and to enable full support for dynamic loading. Benchmarks show that the code generated by the compiler offers good performance. Several case studies demonstrate the practical utility of the language and its implementation.\n", "author": [{"name": "Stefan Wehr", "affiliation": "factis research GmbH"}, {"name": "Peter Thiemann", "affiliation": "University of Freiburg"}, {"name": "Stefan Wehr", "affiliation": "factis research GmbH"}, {"name": "Peter Thiemann", "affiliation": "University of Freiburg"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "Modular multiple dispatch with multiple inheritance", "authors": []}, {"title": "ACM Press", "authors": []}, {"title": "True modules for Java-like languages", "authors": []}, {"title": "354--380", "authors": [" vol"]}, {"title": "Apache Tomcat", "authors": []}, {"title": "The Objective-C programming language", "authors": []}, {"title": "The AspectJ development environment guide", "authors": []}, {"title": "The AspectJ programming guide", "authors": []}, {"title": "", "authors": []}, {"title": "Cambridge University Press", "authors": []}, {"title": "Half & Half: Multiple dispatch and retroactive abstraction for Java", "authors": []}, {"title": "Class boxes: A minimal module model supporting local rebinding", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Class box/J: Controlling the scope of change in Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Classboxes: Controlling visibility of class extensions", "authors": []}, {"title": " ", "authors": []}, {"title": "Stateful traits and their formalization", "authors": []}, {"title": " ", "authors": []}, {"title": "A comparison of C++ concepts and Haskell type classes", "authors": []}, {"title": " ", "authors": []}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": []}, {"title": " ", "authors": []}, {"title": "Using kinds to type partially-polymorphic methods", "authors": []}, {"title": "--40,", "authors": []}, {"title": "The Nice user\u2019s manual", "authors": []}, {"title": "On traits and types in a Java-like setting, In ", "authors": [" In"]}, {"title": "", "authors": []}, {"title": "Type checking higher-order polymorphic multi-methods, In ", "authors": [" In"]}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Generics in the Java programming language", "authors": []}, {"title": "Mixin-based inheritance", "authors": []}, {"title": " ", "authors": []}, {"title": "Making the future safe for the past: Adding genericity to the Java programming language, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "LOOJ: Weaving LOOM into Java", "authors": []}, {"title": "", "authors": []}, {"title": "On binary methods", "authors": []}, {"title": "", "authors": []}, {"title": "PolyTOIL: A type-safe polymorphic object-oriented language, In ", "authors": [" In"]}, {"title": "Springer-Verlag, 27--51", "authors": [" vol"]}, {"title": "Subtyping is not a good \u201dmatch\u201d for object-oriented languages, In ", "authors": [" In"]}, {"title": "", "authors": []}, {"title": "A statically safe alternative to virtual types, In ", "authors": [" In"]}, {"title": "", "authors": []}, {"title": "PolyTOIL: A type-safe polymorphic object-oriented language", "authors": []}, {"title": " ", "authors": []}, {"title": "Compound types for Java, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "A model for Java with wildcards, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "F-bounded polymorphism for object-oriented programming, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "Associated type synonyms, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "Associated types with class, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "Object-oriented multi-methods in Cecil", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "BeCecil, a core object-oriented language with block structure and multimethods: Semantics and typing, Tech", "authors": [" a core object-oriented language with block structure ", " Department of Computer Science ", " University of Washington"]}, {"title": "The Cecil language: Specification and rationale, version 3", "authors": []}, {"title": "XML path language (XPath), version 1", "authors": []}, {"title": "MultiJava: Modular open classes and symmetric multiple dispatch for Java, In ", "authors": [" In"]}, {"title": " ", "authors": []}, {"title": "MultiJava: Design rationale, compiler implementation, and applications", "authors": [" compiler implementation"]}, {"title": " ", "authors": []}, {"title": "A proposal for making Eiffel type-safe", "authors": []}, {"title": "", "authors": []}, {"title": "Object-oriented programming versus abstract data types", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Inheritance is not subtyping", "authors": []}, {"title": " ", "authors": []}, {"title": "Subtypes vs", "authors": []}, {"title": " ", "authors": []}, {"title": "2008", "authors": []}, {"title": "Putting traits in perspective", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Traits: A mechanism for fine-grained reuse", "authors": []}, {"title": " ", "authors": []}, {"title": "Eclipse public license", "authors": []}, {"title": "Eclipse compiler for Java", "authors": []}, {"title": "Eclipse - An open development platform", "authors": ["Eclipse"]}, {"title": "C# language specification 2nd Ed", "authors": []}, {"title": "Standard 334: C# language specification 3rd Ed", "authors": []}, {"title": "Standard 335: Common language infrastructure 4th Ed", "authors": []}, {"title": "Variance and generalized constraints for C# generics", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "gbeta - a language with virtual attributes, block structure, and propagating, dynamic inheritance", "authors": [" block structure", " Department of Computer Science", " University of Aarhus", " Denmark"]}, {"title": "Family polymorphism", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Higher-order hierarchies", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Units: Cool modules for HOT languages", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Addison-Wesley", "authors": []}, {"title": "A comparative study of language support for generic programming", "authors": []}, {"title": " ", "authors": []}, {"title": "An extended comparative study of language support for generic programming", "authors": []}, {"title": " ", "authors": []}, {"title": "Dependent classes", "authors": []}, {"title": " ", "authors": []}, {"title": "Whiteoak: Introducing structural typing into Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Interpretation fonctionnelle et elimination des coupures dans l\u2019arithmetique d\u2019ordre superieur", "authors": [" University of Paris VII"]}, {"title": "", "authors": []}, {"title": "Addison-Wesley", "authors": []}, {"title": "", "authors": []}, {"title": "Addison-Wesley", "authors": []}, {"title": "Concepts: Linguistic support for generic programming in C++", "authors": []}, {"title": " ", "authors": []}, {"title": "Type classes in Haskell", "authors": []}, {"title": " ", "authors": []}, {"title": "Subject-oriented programming: A critique of pure objects", "authors": []}, {"title": " ", "authors": []}, {"title": "Contracts: Specifying behavioral compositions in object-oriented systems", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Integrating independently-developed components in object-oriented languages", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "cJ: Enhancing Java with safe type conditions", "authors": []}, {"title": " ", "authors": []}, {"title": "The managed adapter pattern: Facilitating glue code generation for component reuse", "authors": []}, {"title": " ", "authors": [" Springer-Verlag"]}, {"title": "JDOM", "authors": []}, {"title": "Variant path types for scalable extensibility", "authors": []}, {"title": " ", "authors": []}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": []}, {"title": " ", "authors": []}, {"title": "A simple technique for handling multiple polymorphism", "authors": []}, {"title": "ACM Press", "authors": []}, {"title": "Concept-controlled polymorphism", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Associated types and constraint propagation for mainstream object-oriented generics", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Jaxen---A universal Java XPath engine", "authors": ["Jaxen"]}, {"title": "A system of constructor classes: Overloading and implicit higher-order polymorphism", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Cambridge University Press", "authors": []}, {"title": "Type classes with functional dependencies", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Parametric overloading in polymorphic programming languages", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Named instances for Haskell type classes", "authors": []}, {"title": "", "authors": []}, {"title": "Lightweight scalable components", "authors": []}, {"title": " ", "authors": []}, {"title": "Lightweight dependent classes", "authors": []}, {"title": " ", "authors": []}, {"title": "Binary component adaptation", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Generalized algebraic data types and object-oriented programming", "authors": []}, {"title": " ", "authors": []}, {"title": "Design and implementation of generics for the ", "authors": []}, {"title": " ", "authors": []}, {"title": "On decidability of nominal subtyping with variance", "authors": []}, {"title": "Aspect-oriented programming", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "An overview of AspectJ", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Haskell\u2019s overlooked object system", "authors": []}, {"title": "Functional pearl: Implicit configurations-or, type classes reflect the values of types", "authors": []}, {"title": " ", "authors": []}, {"title": "Strongly typed heterogeneous collections", "authors": []}, {"title": " ", "authors": []}, {"title": "Software extension and integration with type classes", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Safe structural conformance for Java", "authors": []}, {"title": "", "authors": []}, {"title": "Multiple dispatch as dispatch on tuples", "authors": []}, {"title": " ", "authors": []}, {"title": "The Objective Caml system release 3", "authors": []}, {"title": "", "authors": []}, {"title": "Addison-Wesley", "authors": []}, {"title": "FeatherTrait: A modest extension of Featherweight Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Abstraction mechanisms in CLU", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Theta reference manual, preliminary version", "authors": []}, {"title": "Constraint-based polymorphism in Cecil: Towards a practical and static type system", "authors": []}, {"title": " ", "authors": []}, {"title": "Constraint-bounded polymorphism: An expressive and practical type system for object-oriented languages", "authors": []}, {"title": "Virtual classes: A powerful mechanism in object-oriented programming", "authors": []}, {"title": " ", "authors": []}, {"title": "Integrating nominal and structural subtyping", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Is structural subtyping useful? An empirical study", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Framework integration problems, causes, solutions", "authors": [" causes"]}, {"title": " ", "authors": []}, {"title": "Type inference for Java 5: Wildcards, F-bounds, and undecidability", "authors": [" F-bounds"]}, {"title": "Jiazzi: New-age components for old-fashioned Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Static interfaces in C++", "authors": []}, {"title": "", "authors": []}, {"title": "Prentice-Hall", "authors": []}, {"title": "Static typing", "authors": []}, {"title": " ", "authors": []}, {"title": "Integrating independent components with on-demand remodularization", "authors": []}, {"title": " ", "authors": []}, {"title": "Component integration with pluggable composite adapters", "authors": []}, {"title": "Aksit Ed", "authors": [" Kluwer Academic Publisher"]}, {"title": "Modular statically typed multimethods", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Relaxed MultiJava: Balancing extensibility and modular typechecking", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "", "authors": []}, {"title": "MIT Press", "authors": []}, {"title": "Interfaces with default implementations in Java", "authors": []}, {"title": "", "authors": [" ACM Press"]}, {"title": "Generics of a higher kind", "authors": []}, {"title": " ", "authors": []}, {"title": "Multiple dispatch in practice", "authors": []}, {"title": " ", "authors": []}, {"title": "Parameterized types for Java", "authors": []}, {"title": " ", "authors": []}, {"title": "A new and useful template technique: \u201dtraits\u201d", "authors": []}, {"title": "", "authors": [" SIGS Publications"]}, {"title": "MzScheme---Core virtual machine for PLT Scheme", "authors": ["MzSchem"]}, {"title": "Scalable extensibility via nested inheritance", "authors": []}, {"title": " ", "authors": []}, {"title": "J&: Nested intersection for scalable software composition", "authors": []}, {"title": " ", "authors": []}, {"title": "Constrained types for object-oriented languages", "authors": []}, {"title": " ", "authors": []}, {"title": "The Scala language specification, version 2", "authors": []}, {"title": "Independently extensible solutions to the expression problem", "authors": []}, {"title": "", "authors": []}, {"title": "Scalable component abstractions", "authors": []}, {"title": " ", "authors": []}, {"title": "Using subject-oriented programming to overcome common problems in object-oriented software development/evolution", "authors": []}, {"title": " ", "authors": []}, {"title": "Hyper/J: Multidimensional separation of concerns for Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Nominal and structural subtyping in component-based programming", "authors": []}, {"title": "http://www", "authors": []}, {"title": "Extending ordinary inheritance schemes to include generalization", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Cambridge University Press", "authors": []}, {"title": "Type classes: An exploration of the design space, In ", "authors": [" In"]}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "MIT Press", "authors": []}, {"title": "", "authors": []}, {"title": "MIT Press", "authors": []}, {"title": "Open multi-methods for C++", "authors": []}, {"title": " ", "authors": []}, {"title": "A structural approach to operational semantics", "authors": [" Aarhus University", " Denmark"]}, {"title": "Sharing classes between families", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Specifying C++ concepts", "authors": []}, {"title": " ", "authors": []}, {"title": "Objective ML: A simple object-oriented extension of ML", "authors": []}, {"title": " ", "authors": []}, {"title": "Objective ML: An effective object-oriented extension to ML", "authors": []}, {"title": " ", "authors": []}, {"title": "On the (un)reality of virtual types", "authors": []}, {"title": "Towards a theory of type structure", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "User-defined types and procedural data structures as complementary approaches to data abstraction", "authors": []}, {"title": "A", "authors": [" INRI"]}, {"title": "User-defined types and procedural data structures as complementary approaches to data abstraction", "authors": []}, {"title": "", "authors": [" MIT Press"]}, {"title": "Self type constructors", "authors": []}, {"title": " ", "authors": []}, {"title": "Lightweight family polymorphism", "authors": []}, {"title": " ", "authors": []}, {"title": "Disciplined inheritance", "authors": []}, {"title": "", "authors": []}, {"title": "Report on the programming language Xl0, version 2", "authors": []}, {"title": "Component NextGen: A sound and expressive component framework for Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Object schizophrenia problem in object role system design", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" Addison-Wesley"]}, {"title": "A language for generic programming", "authors": []}, {"title": "Essential language support for generic programming", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "", "authors": []}, {"title": "Addison-Wesley", "authors": []}, {"title": "Chai: Typed traits in Java", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Java type inference is broken: Can we fix it? In ", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Digital Press", "authors": []}, {"title": "The standard template library", "authors": [" WG21/N0482", " ISO Programming Language C++ Project"]}, {"title": "The Sather 1", "authors": [" International Computer Science Institute"]}, {"title": "The Java module system: Core design and semantic definition", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Extracting programs from type class proofs", "authors": []}, {"title": " ", "authors": []}, {"title": "Understanding functional dependencies via constraint handling rules", "authors": []}, {"title": " ", "authors": []}, {"title": "The collections framework", "authors": []}, {"title": "Java 2 platform standard edition 5", "authors": []}, {"title": "JSR 277: Java module system", "authors": []}, {"title": "Java servlet specification, version 2", "authors": []}, {"title": "Project Fortress website", "authors": []}, {"title": "Java platform standard edition", "authors": []}, {"title": "Independently extensible systems - Software engineering potential and challenges", "authors": []}, {"title": "Engineering a programming language: The type and class system of Sather", "authors": []}, {"title": "Springer-Verlag, 208--227", "authors": [" vol"]}, {"title": "N degrees of separation: Multidimensional separation of concerns", "authors": []}, {"title": " ", "authors": []}, {"title": "An embedded domain-specific language for type-safe server-side Webscripting", "authors": []}, {"title": " ", "authors": []}, {"title": "Interface types for Haskell", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "The expression problem revisited: Four new solutions using generics", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Adding wildcards to the Java programming language", "authors": []}, {"title": "", "authors": []}, {"title": "Subtyping constrained types", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "On the recursive generation of parametric types", "authors": [" Universita di Bologna"]}, {"title": "Parametric polymorphism in Java: An approach to translation based on reflective features", "authors": []}, {"title": " ", "authors": []}, {"title": "The expression problem", "authors": []}, {"title": "How to make ad-hoc polymorphism less ad-hoc", "authors": []}, {"title": " ", "authors": []}, {"title": "Statically scoped object adaptation with expanders", "authors": []}, {"title": " ", "authors": []}, {"title": "Problem with superclass entailment in \u201cA Static Semantics for Haskell", "authors": []}, {"title": "JavaGI homepage", "authors": []}, {"title": "JavaGI: A language with generalized interfaces", "authors": [" Technische Fakultiit der Albert-Ludwigs-Universit\u00e4t Freiburg im Breisgau", " URN: urn:nbn:de:bsz:25-opus-76785"]}, {"title": "Subtyping existential types", "authors": []}, {"title": "", "authors": []}, {"title": "JavaGI in the battlefield: Practical experience with generalized interfaces", "authors": []}, {"title": " ", "authors": []}, {"title": "On the decidability of subtyping with bounded existential types", "authors": []}, {"title": " ", "authors": []}, {"title": "Generalized interfaces for Java", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": " ", "authors": []}, {"title": "Formalization of generics for the ", "authors": []}, {"title": " ", "authors": []}, {"title": "Keris: Evolving software with extensible modules", "authors": []}, {"title": " ", "authors": []}]},
{"title": "An Abstract Model of Certificate Translation", "time": "July 2011", "keyword": ["Programming Languages and Systems"], "abstract": "A certificate is a mathematical object that can be used to establish that a piece of mobile code satisfies some security policy. In general, certificates cannot be generated automatically. There is thus an interest in developing methods to reuse certificates generated for source code to provide strong guarantees of the compiled code correctness. Certificate translation is a method to transform certificates of program correctness along semantically justified program transformations. These methods have been developed in previous work, but they were strongly dependent on particular programming and verification settings. This article provides a more general development in the setting of abstract interpretation, showing the scalability of certificate translation.\n", "author": [{"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "C\u00e9sar Kunz", "affiliation": "IMDEA Software Institute and Universidad Polit\u00e9cnica de Madrid"}, {"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "C\u00e9sar Kunz", "affiliation": "IMDEA Software Institute and Universidad Polit\u00e9cnica de Madrid"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Abstraction-carrying code", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Foundational proof-carrying code", "authors": []}, {"title": "", "authors": [" IEEE Press"]}, {"title": "Models for security policies in proof-carrying code", "authors": [" Princeton University"]}, {"title": "A program logic for bytecode", "authors": []}, {"title": " ", "authors": []}, {"title": "The Spec# programming system: An overview", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Tvoc: A translation validator for optimizing compilers", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Certificate translation in abstract interpretation", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Proof obligations preserving compilation", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A certified lightweight non-interference Java bytecode verifier", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "The MOBIUS proof carrying code infrastructure", "authors": []}, {"title": " ", "authors": []}, {"title": "Preservation of proof obligations from Java to the Java virtual machine", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Certificate translation for optimizing compilers", "authors": []}, {"title": " ", "authors": []}, {"title": "Simple relational correctness proofs for static analyses and program transformations", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Secure information flow and program logics", "authors": []}, {"title": " ", "authors": []}, {"title": "Result certification for relational program analysis", "authors": [" IRISA"]}, {"title": "Extracting a data flow analyser in constructive logic", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Proof-producing program analysis", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Non-null references by default in Java: Alleviating the nullity annotation burden", "authors": []}, {"title": "", "authors": []}, {"title": "Type-preserving compilation of end-to-end verification of security enforcement", "authors": []}, {"title": " ", "authors": [" ACM"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": []}, {"title": " ", "authors": []}, {"title": "Systematic design of program analysis frameworks", "authors": []}, {"title": " ", "authors": []}, {"title": "Abstract interpretation frameworks", "authors": []}, {"title": "", "authors": []}, {"title": "Combining a verification condition generator for a bytecode language with static analyses", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Scalable certification for typed assembly language", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "", "authors": []}, {"title": "Springer-Verlag", "authors": []}, {"title": "Certificate translation for the verification of concurrent programs", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Automated soundness proofs for dataflow analyses and transformations via local rules", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Formal certification of a compiler back-end or: Programming a compiler with a proof assistant", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "On the relative tompleteness of bytecode analysis versus source code analysis", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Talx86: A realistic typed assembly language", "authors": []}, {"title": "", "authors": []}, {"title": "From system F to typed assembly language", "authors": []}, {"title": " ", "authors": []}, {"title": "Proof-transforming compilation of programs with abrupt termination", "authors": [" ETH Zurich"]}, {"title": "JFlow: Practical mostly-static information flow control", "authors": []}, {"title": "(Ongoing development at http://www", "authors": []}, {"title": "Compiling with proofs", "authors": [" Carnegie Mellon University"]}, {"title": "Safe kernel extensions without run-time checking", "authors": []}, {"title": " ", "authors": [" Berkeley", " CA"]}, {"title": "The design and implementation ofa certifying compiler", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Translation validation", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Abstract interpretation-based certification of assembly code", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Symbolic Transfer Functions-based Approaches to Certified Compilation", "authors": []}, {"title": " ", "authors": []}, {"title": "Lightweight byte code verification", "authors": []}, {"title": " ", "authors": []}, {"title": "Type systems for optimizing stack-based code", "authors": []}, {"title": " ", "authors": []}, {"title": "Proof optimization for partial redundancy elimination", "authors": []}, {"title": " ", "authors": []}, {"title": "Automatic construction of Hoare proofs from abstract interpretation results", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Goal-directed weakening of abstract interpretation results", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" Elsevie"]}, {"title": "TIL: A type-directed optimizing compiler for ML", "authors": []}, {"title": " ", "authors": []}, {"title": "Certifying machine code safety: Shallow versus deep embedding", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Asserting bytecode safety", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Bytecode analysis for proof carrying code", "authors": []}, {"title": " ", "authors": []}, {"title": "Foundational proof checkers with small witnesses", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Voc: A translation validator for optimizing compilers", "authors": []}, {"title": "", "authors": []}]},
{"title": "A Theory of Synchronous Relational Interfaces", "time": "July 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Compositional theories are crucial when designing large and complex systems from smaller components. In this work we propose such a theory for synchronous concurrent systems. Our approach follows so-called interface theories, which use game-theoretic interpretations of composition and refinement. These are appropriate for systems with distinct inputs and outputs, and explicit conditions on inputs that must be enforced during composition. Our interfaces model systems that execute in an infinite sequence of synchronous rounds. At each round, a contract must be satisfied. The contract is simply a relation specifying the set of valid input/output pairs. Interfaces can be composed by parallel, serial or feedback composition. A refinement relation between interfaces is defined, and shown to have two main properties: (1) it is preserved by composition, and (2) it is equivalent to substitutability, namely, the ability to replace an interface by another one in any context. Shared refinement and abstraction operators, corresponding to greatest lower and least upper bounds with respect to refinement, are also defined. Input-complete interfaces, that impose no restrictions on inputs, and deterministic interfaces, that produce a unique output for any legal input, are discussed as special cases, and an interesting duality between the two classes is exposed. A number of illustrative examples are provided, as well as algorithms to compute compositions, check refinement, and so on, for finite-state interfaces.\n", "author": [{"name": "Stavros Tripakis", "affiliation": "University of California, Berkeley"}, {"name": "Ben Lickly", "affiliation": "University of California, Berkeley"}, {"name": "Thomas A. Henzinger", "affiliation": "Institute of Science and Technology, Austria"}, {"name": "Edward A. Lee", "affiliation": "University of California, Berkeley"}, {"name": "Stavros Tripakis", "affiliation": "University of California, Berkeley"}, {"name": "Ben Lickly", "affiliation": "University of California, Berkeley"}, {"name": "Thomas A. Henzinger", "affiliation": "Institute of Science and Technology, Austria"}, {"name": "Edward A. Lee", "affiliation": "University of California, Berkeley"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "43", "references": [{"title": "Conjoining specifications", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" Cambridge University Press", " New York", " NY"]}, {"title": "Reactive modules", "authors": []}, {"title": " ", "authors": []}, {"title": "Alternating refinement relations", "authors": []}, {"title": "Springer", "authors": [" vol"]}, {"title": "", "authors": []}, {"title": "", "authors": [" Springe"]}, {"title": "Now you may compose temporal logic specifications", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "The synchronous languages 12 years later", "authors": []}, {"title": "", "authors": []}, {"title": "Multiple viewpoint contract-based specification and design", "authors": []}, {"title": " ", "authors": []}, {"title": "The constructive semantics of Pure Esterel", "authors": []}, {"title": "Compositional refinement of interactive systems", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" Springer"]}, {"title": "Lustre: A declarative language for programming synchronous systems", "authors": []}, {"title": "ACM", "authors": []}, {"title": "Synchronous and bidirectional component interfaces", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science vol"]}, {"title": "The Larch/Smalltalk interface specification language", "authors": []}, {"title": " ", "authors": []}, {"title": "Game models for open systems", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Interface automata", "authors": []}, {"title": "ACM Press", "authors": []}, {"title": "Interface theories for component-based design", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Least reflexive points of relations", "authors": []}, {"title": " ", "authors": []}, {"title": "Forcing behavioral subtyping through specification inheritance", "authors": []}, {"title": "", "authors": []}, {"title": "Notes on structured programming", "authors": []}, {"title": "", "authors": [" Academic Press", " London", " UK"]}, {"title": "", "authors": []}, {"title": "", "authors": [" MIT Press", " Cambridge", " MA"]}, {"title": "Interface theories with component reuse", "authors": []}, {"title": " ", "authors": []}, {"title": "Assigning meanings to programs", "authors": []}, {"title": "", "authors": [" American Mathematical Society"]}, {"title": "Unifying program construction and modification", "authors": []}, {"title": "", "authors": []}, {"title": "Model checking and modular verification", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": [" Springer"]}, {"title": "Technical correspondence", "authors": []}, {"title": " ", "authors": []}, {"title": "The discipline of embedded systems design", "authors": []}, {"title": " ", "authors": []}, {"title": "You assume, we guarantee: Methodology and case studies", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "An axiomatic basis for computer programming", "authors": []}, {"title": " ", "authors": []}, {"title": "Programs are predicates", "authors": []}, {"title": "", "authors": [" Prentice-Hall", " Upper Saddle River", " NJ"]}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": " ", "authors": []}, {"title": "Compositional specification and verification of distributed systems", "authors": []}, {"title": " ", "authors": []}, {"title": "Refinement and development of programs from relational specifications", "authors": []}, {"title": "", "authors": []}, {"title": "Inheritance of interface specifications", "authors": []}, {"title": " ", "authors": []}, {"title": "Design by contract with JML", "authors": []}, {"title": "Cyber physical systems: Design challenges", "authors": [" EECS Department", " University of California", " Berkeley"]}, {"title": "A unified framework for comparing models of computation", "authors": []}, {"title": " ", "authors": []}, {"title": "System-level types for component-based design", "authors": []}, {"title": "", "authors": []}, {"title": "Modular program construction using abstractions", "authors": []}, {"title": " Springer, 354--389", "authors": [" vol"]}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": " ", "authors": []}, {"title": "Modularity vs", "authors": []}, {"title": "ACM", "authors": []}, {"title": "An introduction to input/output automata", "authors": []}, {"title": "", "authors": []}, {"title": "Analysis of cyclic combinational circuits", "authors": []}, {"title": "", "authors": []}, {"title": "A compositional rule for hardware design refinement", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Applying \u201cdesign by contract", "authors": []}, {"title": " ", "authors": []}, {"title": "Software model checking takes off", "authors": []}, {"title": " ", "authors": []}, {"title": "Proofs of networks of processes", "authors": []}, {"title": " ", "authors": []}, {"title": "A generalization of Dijkstra\u2019s calculus", "authors": []}, {"title": " ", "authors": []}, {"title": "Regular types for active objects", "authors": []}, {"title": " ", "authors": []}, {"title": "A generalized control structure and its formal definition", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "MIT Press", "authors": []}, {"title": "A modal interface theory for component-based design", "authors": []}, {"title": "Personal communication", "authors": []}, {"title": "An expressive type system for Simulink", "authors": []}, {"title": "", "authors": []}, {"title": "Lazy compositional verification", "authors": []}, {"title": "", "authors": [" Springer"]}, {"title": "", "authors": []}, {"title": " Upper Saddle River, NJ", "authors": [" Prentice-Hall", " Upper Saddle River", " NJ"]}, {"title": "A proof technique for rely/guarantee properties", "authors": []}, {"title": "", "authors": [" Springer-Verlag"]}, {"title": "", "authors": []}, {"title": "Wiley", "authors": []}, {"title": "On relational interfaces", "authors": [" EECS Department", " University of California", " Berkeley"]}, {"title": "On relational interfaces", "authors": []}, {"title": " ", "authors": []}, {"title": "Program development by stepwise refinement", "authors": []}, {"title": " ", "authors": []}, {"title": "Causality interfaces for actor networks", "authors": []}, {"title": " ", "authors": []}]},
{"title": "Software model checking using languages of nested trees", "time": "November 2011", "keyword": ["Programming Languages and Systems"], "abstract": "While model checking of pushdown systems is by now an established technique in software verification, temporal logics and automata traditionally used in this area are unattractive on two counts. First, logics and automata traditionally used in model checking cannot express requirements such as pre/post-conditions that are basic to analysis of software. Second, unlike in the finite-state world, where the \u03bc-calculus has a symbolic model-checking algorithm and serves as an \u201cassembly language\u201d to which temporal logics can be compiled, there is no common formalism\u2014either fixpoint-based or automata-theoretic\u2014to model-check requirements on pushdown models. In this article, we introduce a new theory of temporal logics and automata that addresses the above issues, and provides a unified foundation for the verification of pushdown systems.\nThe key idea here is to view a program as a generator of structures known as \n as opposed to trees. A fixpoint logic (called N\n-\u03bc) and a class of automata (called \n) interpreted on languages of these structures are now defined, and branching-time model-checking is phrased as language inclusion and membership problems for these languages. We show that N\n-\u03bc and nested tree automata allow the specification of a new frontier of requirements usable in software verification. At the same time, their model checking problem has the same worst-case complexity as their traditional analogs, and can be solved symbolically using a fixpoint computation that generalizes, and includes as a special case, \u201csummary\u201d-based computations traditionally used in interprocedural program analysis. We also show that our logics and automata define a robust class of languages\u2014in particular, just as the \u03bc-calculus is equivalent to alternating parity automata on trees, NT-\u03bc is equivalent to alternating parity automata on nested trees.\n", "author": [{"name": "Rajeev Alur", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Swarat Chaudhuri", "affiliation": "Rice University, Houston, TX"}, {"name": "P. Madhusudan", "affiliation": "University of Illinois, Champaign, IL"}, {"name": "Rajeev Alur", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Swarat Chaudhuri", "affiliation": "Rice University, Houston, TX"}, {"name": "P. Madhusudan", "affiliation": "University of Illinois, Champaign, IL"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "Access control based on execution history", "authors": ["Abadi"]}, {"title": "Analysis of recursive state machines", "authors": ["Alur", " Benedikt", " Etessami", " Godefroid", " Reps"]}, {"title": "A fixpoint calculus for local and global program flows", "authors": ["Alur", " Chaudhuri"]}, {"title": "Languages of nested trees", "authors": ["Alur", " Chaudhuri"]}, {"title": "A temporal logic of nested calls and returns", "authors": ["Alur", " Etessami"]}, {"title": "Visibly pushdown languages", "authors": ["Alur"]}, {"title": "Adding nesting structure to words", "authors": ["Alur"]}, {"title": "Adding nesting structure to words", "authors": ["Alur"]}, {"title": "Bebop: A symbolic model checker for boolean programs", "authors": ["Ball"]}, {"title": "The SLAM toolkit", "authors": ["Ball"]}, {"title": "An overview of JML tools and applications", "authors": ["Burdy", " Cheon", " Cok", " Ernst", " Kiniry", " Leavens", " Leino"]}, {"title": "Model checking the full modal mu-calculus for infinite sequential processes", "authors": ["Burkart"]}, {"title": "Model Checking", "authors": ["Clarke", " Grumberg"]}, {"title": "Using branching-time temporal logic to synthesize synchronization skeletons", "authors": ["Emerson"]}, {"title": "Tree automata, mu-calculus, and determinacy", "authors": ["Emerson"]}, {"title": "Modalities for model-checking: Branching time logic strikes back", "authors": ["Emerson"]}, {"title": "Model-checking LTL with regular valuations for pushdown systems", "authors": ["Esparza", " Kucera"]}, {"title": "Automata, Logics, and Infinite Games: A Guide to Current Research", "authors": ["Gr\u00e4del", " Thomas", " Eds"]}, {"title": "An axiomatic basis for computer programming", "authors": ["Hoare"]}, {"title": "Introduction to Automata Theory, Languages, and Computation", "authors": ["Hopcroft"]}, {"title": "Verification of control flow based security properties", "authors": ["Jensen", " Metayer"]}, {"title": "Results on the propositional mu-calculus", "authors": ["Kozen"]}, {"title": "Pushdown specifications", "authors": ["Kupferman", " Piterman"]}, {"title": "An automata-theoretic approach to branching-time model checking", "authors": ["Kupferman", " Vardi"]}, {"title": "Program analysis via graph reachability", "authors": ["Reps"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": "Data flow analysis is model checking of abstract interpretations", "authors": ["Schmidt"]}, {"title": "Two approaches to interprocedural dataflow analysis", "authors": ["Sharir"]}, {"title": "Data flow analysis as model checking", "authors": ["Steffen"]}, {"title": "Understanding Java stack inspection", "authors": ["Wallach"]}, {"title": "Pushdown processes: Games and model-checking", "authors": ["Walukiewicz"]}]},
{"title": "On contract satisfaction in a higher-order world", "time": "November 2011", "keyword": ["Programming Languages and Systems"], "abstract": "Behavioral software contracts have become a popular mechanism for specifying and ensuring logical claims about a program's flow of values. While contracts for first-order functions come with a natural interpretation and are well understood, the various incarnations of higher-order contracts adopt, implicitly or explicitly, different views concerning the meaning of contract satisfaction. In this article, we define various notions of contract satisfaction in terms of observational equivalence and compare them with each other and notions in the literature. Specifically, we introduce a small model language with higher-order contracts and use it to formalize different notions of contract satisfaction. Each of them demands that the contract parties satisfy certain observational equivalences.\n", "author": [{"name": "Christos Dimoulas", "affiliation": "Northeastern University, Boston, MA"}, {"name": "Matthias Felleisen", "affiliation": "Northeastern University, Boston, MA"}, {"name": "Christos Dimoulas", "affiliation": "Northeastern University, Boston, MA"}, {"name": "Matthias Felleisen", "affiliation": "Northeastern University, Boston, MA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "36", "references": [{"title": "Step-indexed syntactic logical relations for recursive and quantified types", "authors": ["Ahmed"]}, {"title": "The Spec&num; programming system: an overview", "authors": ["Barnett", " Leino"]}, {"title": "Making components contract aware", "authors": ["Beugnard", " J\u00e9z\u00e9quel", " Plouzeau"]}, {"title": "Sound and complete models of contracts", "authors": ["Blume"]}, {"title": "Towards a unifying theory for choreography conformance and contract compliance", "authors": ["Bravetti"]}, {"title": "A formal account of contracts for web services", "authors": ["Carpineti", " Castagna", " Laneve"]}, {"title": "A theory of contracts for web services", "authors": ["Castagna", " Gesbert"]}, {"title": "Contracts for mobile processes", "authors": ["Castagna"]}, {"title": "Lazy assertions", "authors": ["Chitil", " McNeill"]}, {"title": "Interface automata", "authors": ["de Alfaro"]}, {"title": "Eager and delayed contract monitoring for call-by-value and call-by-name evaluation", "authors": ["Degen", " Thiemann"]}, {"title": "Extended static checking", "authors": ["Detlefs", " Leino", " Nelson"]}, {"title": "Semantics Engineering with PLT Redex", "authors": ["Felleisen", " Findler"]}, {"title": "Contracts as pairs of projections", "authors": ["Findler"]}, {"title": "Contracts for higher-order functions", "authors": ["Findler"]}, {"title": "An investigation of contracts as projections", "authors": ["Findler", " Felleisen"]}, {"title": "Lazy contract checking for immutable data structures", "authors": ["Findler", " Guo"]}, {"title": "Behavioral contracts and behavioral subtyping", "authors": ["Findler", " Latendresse"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "Reference: Racket", "authors": ["Flatt"]}, {"title": "Contracts made manifest", "authors": ["Greenberg", " Pierce"]}, {"title": "Unifying hybrid types and contracts", "authors": ["Gronski"]}, {"title": "Algebraic Theory of Processes", "authors": ["Hennessy"]}, {"title": "Typed contracts for functional programming", "authors": ["Hinze", " Jeuring"]}, {"title": "SAGE: Unified hybrid checking for first-class types, general refinement types, and dynamic", "authors": ["Knowles", " Tomb", " Gronski", " Freund"]}, {"title": "Reasoning about imperative and higher-order programs", "authors": ["Koutavas"]}, {"title": "Object-oriented Software Construction", "authors": ["Meyer"]}, {"title": "Design by contract", "authors": ["Meyer"]}, {"title": "Applying design by contract", "authors": ["Meyer"]}, {"title": "Eiffel: The Language", "authors": ["Meyer"]}, {"title": "Lambda-calculus models of programming languages", "authors": ["Morris"]}, {"title": "Call-by-name, call-by-value, and the \u03bb-calculus", "authors": ["Plotkin"]}, {"title": "LCF considered as a programming language", "authors": ["Plotkin"]}, {"title": "A practical approach to programming with assertion", "authors": ["Rosenblum"]}, {"title": "Reasoning about programs in continuation passing-style", "authors": ["Sabry"]}, {"title": "Data types as lattices", "authors": ["Scott"]}, {"title": "Static contract checking for Haskell", "authors": [" Peyton Jones"]}]},
{"title": "Bottom-up shape analysis using LISF", "time": "November 2011", "keyword": ["Programming Languages and Systems"], "abstract": "In this article, we present a new shape analysis algorithm. The key distinguishing aspect of our algorithm is that it is completely compositional, bottom-up and noniterative. We present our algorithm as an inference system for computing Hoare triples summarizing heap manipulating programs. Our inference rules are compositional: Hoare triples for a compound statement are computed from the Hoare triples of its component statements. These inference rules are used as the basis for bottom-up shape analysis of programs.\nSpecifically, we present a Logic of Iterated Separation Formulae (LISF), which uses the iterated separating conjunct of Reynolds [2002] to represent program states. A key ingredient of our inference rules is a strong bi-abduction operation between two logical formulas. We describe sound strong bi-abduction and satisfiability procedures for LISF.\nWe have built a tool called S\nI\nE that implements these inference rules and have evaluated it on standard shape analysis benchmark programs. Our experiments show that S\nI\nE can generate expressive summaries, which are complete functional specifications in many cases.\n", "author": [{"name": "Bhargav S. Gulavani", "affiliation": "IIT Bombay, India"}, {"name": "Supratik Chakraborty", "affiliation": "IIT Bombay, India"}, {"name": "G. Ramalingam", "affiliation": "Microsoft Research India, Bangalore, India"}, {"name": "Aditya V. Nori", "affiliation": "Microsoft Research India, Bangalore, India"}, {"name": "Bhargav S. Gulavani", "affiliation": "IIT Bombay, India"}, {"name": "Supratik Chakraborty", "affiliation": "IIT Bombay, India"}, {"name": "G. Ramalingam", "affiliation": "Microsoft Research India, Bangalore, India"}, {"name": "Aditya V. Nori", "affiliation": "Microsoft Research India, Bangalore, India"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "Monotonic abstraction for programs with dynamic memory heaps", "authors": ["Abdulla", " Bouajjani", " Cederberg", " Haziza"]}, {"title": "A survey of regular model checking", "authors": ["Abdulla", " Jonsson", " Nilsson"]}, {"title": "Flat acceleration in symbolic model checking", "authors": ["Bardin", " Finkel", " Leroux", " Ph"]}, {"title": "Shape analysis for composite data structures", "authors": ["Berdine", " Calcagno", " Cook", " Distefano", " O'Hearn", " Wies"]}, {"title": "Bi-hyperdoctrines and higher-order separation logic", "authors": ["Biering", " Birkedal"]}, {"title": "Iterating transducers in the large", "authors": ["Boigelot", " Legay"]}, {"title": "Verifying programs with dynamic 1-selector-linked structures in regular model checking", "authors": ["Bouajjani", " Habermehl", " Moro"]}, {"title": "Abstract regular tree model checking of complex dynamic data struct ures", "authors": ["Bouajjani", " Habermehl"]}, {"title": "Abstract regular model checking", "authors": ["Bouajjani", " Habermehl"]}, {"title": "Compositional shape analysis by means of bi-abduction", "authors": ["Calcagno", " Distefano", " O'Hearn"]}, {"title": "Footprint analysis: A shape analysis that discovers preconditions", "authors": ["Calcagno", " Distefano", " O'Hearn"]}, {"title": "Methods and logics for proving programs", "authors": ["Cousot"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "Bottom-up shape analysis using lisf", "authors": ["Gulavani", " Chakraborty", " Ramalingam"]}, {"title": "Shape analysis with inductive recursion synthesis", "authors": ["Guo", " Vachharajani"]}, {"title": "A relational approach to interprocedural shape analysis", "authors": ["Jeannet", " Loginov", " Reps"]}, {"title": "Backward analysis for inferring quantified preconditions", "authors": ["Lev-Ami", " Sagiv", " Reps"]}, {"title": "The pointer assertion logic engine", "authors": ["M\u00f8ller"]}, {"title": "Local reasoning about programs that alter data structures", "authors": ["O'Hearn", " Reynolds"]}, {"title": "Heap assumptions on demand", "authors": ["Podelski", " Rybalchenko"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "A semantics for procedure local heaps and its abstractions", "authors": ["Rinetzky", " Bauer", " Reps", " Sagiv"]}, {"title": "Interprocedural shape analysis for cutpoint-free programs", "authors": ["Rinetzky", " Sagiv"]}, {"title": "Interprocedural shape analysis for recursive programs", "authors": ["Rinetzky"]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Sagiv", " Reps"]}, {"title": "Regular model checking using widening techniques", "authors": ["Touili"]}, {"title": "A logic of reachable patterns in linked data-structures", "authors": ["Yorsh", " Rabinovich", " Sagiv", " Meyer"]}]},
{"title": "Floyd--hoare logic for quantum programs", "time": "January 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Floyd--Hoare logic is a foundation of axiomatic semantics of classical programs, and it provides effective proof techniques for reasoning about correctness of classical programs. To offer similar techniques for quantum program verification and to build a logical foundation of programming methodology for quantum computers, we develop a full-fledged Floyd--Hoare logic for both partial and total correctness of quantum programs. It is proved that this logic is (relatively) complete by exploiting the power of weakest preconditions and weakest liberal preconditions for quantum programs.\n", "author": [{"name": "Mingsheng Ying", "affiliation": "University of Technology, Sydney and Tsinghua University, China"}, {"name": "Mingsheng Ying", "affiliation": "University of Technology, Sydney and Tsinghua University, China"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "33", "references": [{"title": "The logic of quantum program verification", "authors": ["Akatov"]}, {"title": "A functional quantum programming language", "authors": ["Altenkirch"]}, {"title": "Verification of Sequential and Concurrent Programs", "authors": ["Apt"]}, {"title": "The logic of quantum programs", "authors": ["Baltag"]}, {"title": "Lqp: The dynamic logic of quantum information", "authors": ["Baltag"]}, {"title": "Toward an architecture for quantum programming", "authors": ["Bettelli", " Calarco"]}, {"title": "The logic of quantum mechanics", "authors": ["Birkhoff"]}, {"title": "Dynamic quantum logic for quantum programs", "authors": ["Brunet"]}, {"title": "Reasoning about imperative quantum programs", "authors": ["Chadha", " Mateus"]}, {"title": "Quantum weakest preconditions", "authors": ["D'Hondt"]}, {"title": "Proof rules for the correctness of quantum programs", "authors": ["Feng", " Duan", " Ji"]}, {"title": "Bisimulation for quantum processes", "authors": ["Feng", " Duan"]}, {"title": "Quantum programming languages: survey and bibliography", "authors": ["Gay"]}, {"title": "Communicating quantum processes", "authors": ["Gay"]}, {"title": "A fast quantum mechanical algorithm for database searches", "authors": ["Grover"]}, {"title": "Toward a quantum process algebra", "authors": ["Jorr"]}, {"title": "Conventions for quantum pseudocode", "authors": ["Knill"]}, {"title": "Proof rules for probabilistic loops", "authors": ["Morgan"]}, {"title": "Quantum Computation and Quantum Information", "authors": ["Nielsen"]}, {"title": "Structural quantum programming", "authors": ["\u00d6mer"]}, {"title": "Quantum programming", "authors": []}, {"title": "A brief survey of quantum programming languages", "authors": ["Selinger"]}, {"title": "Towards a quantum programming language", "authors": ["Selinger"]}, {"title": "On infinite direct products", "authors": ["Von Neumann"]}, {"title": "Predicate Transformer Semantics of Quantum Programs", "authors": ["Ying", " Duan", " Feng"]}, {"title": "An algebra of quantum processes", "authors": ["Ying", " Feng", " Duan"]}, {"title": "Nondeterministic quantum programming", "authors": ["Zuliani"]}]},
{"title": "Separating ownership topology and encapsulation with generic universe types", "time": "January 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Ownership is a powerful concept to structure the object store and to control aliasing and modifications of objects. This article presents an ownership type system for a Java-like programming language with generic types.\nLike our earlier Universe type system, Generic Universe Types structure the heap hierarchically. In contrast to earlier work, we separate the enforcement of an ownership topology from an encapsulation system. The topological system uses an existential modifier to express that no ownership information is available statically. On top of the topological system, we build an encapsulation system that enforces the owner-as-modifier discipline. This discipline does not restrict aliasing, but requires modifications of an object to be initiated by its owner. This allows owner objects to control state changes of owned objects\u2014for instance, to maintain invariants. Separating the topological system from the encapsulation system allows for a cleaner formalization, separation of concerns, and simpler reuse of the individual systems in different contexts.\n", "author": [{"name": "Werner Dietl", "affiliation": "University of Washington"}, {"name": "Sophia Drossopoulou", "affiliation": "Imperial College London"}, {"name": "Peter M\u00fcller", "affiliation": "ETH Zurich"}, {"name": "Werner Dietl", "affiliation": "University of Washington"}, {"name": "Sophia Drossopoulou", "affiliation": "Imperial College London"}, {"name": "Peter M\u00fcller", "affiliation": "ETH Zurich"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "Compile-time views of execution structure based on ownership", "authors": ["Abi-Antoun"]}, {"title": "Ownership domains in the real world", "authors": ["Abi-Antoun"]}, {"title": "Static extraction of sound hierarchical runtime object graphs", "authors": ["Abi-Antoun"]}, {"title": "Practical reasoning about invocations and implementations of pure methods", "authors": ["\u00c1d\u00e1m Darvas "]}, {"title": "Using types to enforce architectural structure", "authors": ["Aldrich"]}, {"title": "Ownership domains: Separating aliasing policy from mechanism", "authors": ["Aldrich"]}, {"title": "Alias annotations for program understanding", "authors": ["Aldrich", " Kostadinov"]}, {"title": "Balloon types: Controlling sharing of state in data types", "authors": ["Almeida"]}, {"title": "Control of object sharing in programming languages", "authors": ["Almeida"]}, {"title": "Scoped types and aspects for real-time systems", "authors": ["Andrea", " Coady", " Gibbs", " Noble", " Vitek"]}, {"title": "Representation independence, confinement, and access control", "authors": ["Banerjee"]}, {"title": "Ownership confinement ensures representation independence for object-oriented programs", "authors": ["Banerjee"]}, {"title": "Regional logic for local reasoning about global invariants", "authors": ["Banerjee", " Naumann"]}, {"title": "Verification of object-oriented programs with invariants", "authors": ["Barnett", " DeLine", " F\u00e4hndrich", " Leino"]}, {"title": "99", "authors": ["Barnett", " Naumann", " Schulte"]}, {"title": "An imperative core calculus for Java and Java with effects", "authors": ["Bierman", " Parkinson"]}, {"title": "A practical type system and language for reference immutability", "authors": ["Birka"]}, {"title": "Confined types", "authors": ["Bokowski"]}, {"title": "SafeJava: A unified type system for safe programming", "authors": ["Boyapati"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": "Safe runtime downcasts with ownership types", "authors": ["Boyapati", " Lee"]}, {"title": "Ownership types for object encapsulation", "authors": ["Boyapati", " Liskov"]}, {"title": "Ownership types for safe region-based memory management in real-time Java", "authors": ["Boyapati", " Salcianu"]}, {"title": "Alias burying: Unique variables without destructive reads", "authors": ["Boyl"]}, {"title": "Why we should not add read-only to Java (yet)", "authors": ["Boyl"]}, {"title": "Capabilities for aliasing: A generalization of uniqueness and read-only", "authors": ["Boyl", " Noble"]}, {"title": "An overview of JML tools and applications", "authors": ["Burdy", " Cheon", " Cok", " Ernst", " Kiniry", " Leavens", " Leino"]}, {"title": "Java applet correctness: A developer-oriented approach", "authors": ["Burdy", " Requet"]}, {"title": "Existential types for variance | Java wildcards and ownership types", "authors": ["Cameron"]}, {"title": "Comparing universes and existential ownership types", "authors": ["Cameron"]}, {"title": "Existential quantification for variant ownership", "authors": ["Cameron"]}, {"title": "A model for Java with wildcards", "authors": ["Cameron", " Drossopoulou"]}, {"title": "Multiple ownership", "authors": ["Cameron", " Drossopoulou", " Noble"]}, {"title": "OGJ gone wild", "authors": ["Cameron"]}, {"title": "Soft typing", "authors": ["Cartwright"]}, {"title": "Program verification through soft typing", "authors": ["Cartwright"]}, {"title": "X10: An object-oriented approach to non-uniform cluster computing", "authors": ["Charles", " Grothoff", " Saraswat", " Donawa", " Kielstra", " Ebcioglu", " von Praun"]}, {"title": "A runtime assertion checker for the Java modeling language", "authors": ["Cheon"]}, {"title": "A runtime assertion checker for the Java Modeling Language (JML)", "authors": ["Cheon"]}, {"title": "Object ownership and containment", "authors": ["Clarke"]}, {"title": "Ownership, encapsulation and the disjointness of type and effect", "authors": ["Clarke"]}, {"title": "Tribe: A simple virtual class calculus", "authors": ["Clarke", " Drossopoulou", " Noble"]}, {"title": "Ownership types for flexible alias protection", "authors": ["Clarke", " Potter"]}, {"title": "Saving the world from bad beans: deployment time confinement checking", "authors": ["Clarke", " Richmond"]}, {"title": "External uniqueness is unique enough", "authors": ["Clarke"]}, {"title": "ESC/Java2: Uniting ESC/Java and JML", "authors": ["Cok"]}, {"title": "Extensions of the theory of observational purity and a practical design for JML", "authors": ["Cok"]}, {"title": "Universe types for topology and encapsulation", "authors": ["Cunningham", " Dietl", " Drossopoulou", " Francalanza", " M\u00fcller"]}, {"title": "Universe types for race safety", "authors": ["Cunningham", " Drossopoulou"]}, {"title": "Wrestling with rep exposure", "authors": ["Detlefs", " Leino"]}, {"title": "Preventing cross-type aliasing for more practical reasoning", "authors": ["Dhara"]}, {"title": "Universe Types: Topology, encapsulation, genericity, and tools", "authors": ["Dietl"]}, {"title": "Formalization of generic Universe Types", "authors": ["Dietl", " Drossopoulou"]}, {"title": "Generic Universe Types", "authors": ["Dietl", " Drossopoulou"]}, {"title": "Tunable Universe Type inference", "authors": ["Dietl", " Ernst"]}, {"title": "Exceptions in ownership type systems", "authors": ["Dietl"]}, {"title": "Universes: Lightweight ownership for JML", "authors": ["Dietl"]}, {"title": "Ownership type systems and dependent classes", "authors": ["Dietl"]}, {"title": "A unified framework for verification techniques for object invariants", "authors": ["Drossopoulou", " Francalanza", " M\u00fcller"]}, {"title": "Variance and generalized constraints for C} generics", "authors": ["Emir", " Kennedy", " Russo"]}, {"title": "gbeta\u2014A language with virtual attributes, block structure, and propagating, dynamic inheritance", "authors": ["Ernst"]}, {"title": "Family polymorphism", "authors": ["Ernst"]}, {"title": "A virtual class calculus", "authors": ["Ernst", " Ostermann"]}, {"title": "Type annotations specification (JSR 308)", "authors": ["Ernst"]}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["F\u00e4hndrich"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "A programmer's reduction semantics for classes and mixins", "authors": ["Flatt", " Krishnamurthi"]}, {"title": "A theory of Featherweight Java in Isabelle/HOL", "authors": ["Foster"]}, {"title": "Dependent classes", "authors": ["Gasiunas", " Mezini"]}, {"title": "vcn\u2014A calculus for multidimensional virtual classes", "authors": ["Gasiunas", " Mezini"]}, {"title": "The Java Language Specification 3rd Ed", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Immutable objects for a Java-like language", "authors": ["Haack", " Poll", " Sch\u00e4fer"]}, {"title": "Behavioral interface specification languages", "authors": ["Hatcliff", " Leavens", " Leino", " M\u00fcller"]}, {"title": "Gradual encapsulation", "authors": ["Herrmann"]}, {"title": "ObjectTeams/Java language definition version 1", "authors": ["Herrmann", " Hundt"]}, {"title": "Component oriented programming with sharing: Containment is not ownership", "authors": ["Hirschkoff", " Hirschowitz", " Pous", " Schmitt"]}, {"title": "Islands: Aliasing protection in object-oriented languages", "authors": ["Hogg"]}, {"title": "The Geneva convention on the treatment of object aliasing", "authors": ["Hogg", " Lea", " Wills", " Champeaux"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Variant path types for scalable extensibility", "authors": ["Igarashi"]}, {"title": "Weakest precondition reasoning for Java programs with JML annotations", "authors": ["Jacobs"]}, {"title": "Safe concurrency for aggregate objects with invariants", "authors": ["Jacobs", " Piessens", " Leino"]}, {"title": "A logic for the Java modeling language JML", "authors": ["Jacobs"]}, {"title": "Dynamic frames: Support for framing, dependencies and sharing without restrictions", "authors": ["Kassios"]}, {"title": "Design and implementation of generics for the ", "authors": ["Kennedy"]}, {"title": "An Isabelle formalization of the Universe type system", "authors": ["Kleberma"]}, {"title": "A machine-checked model for a Java-like language, virtual machine and compiler", "authors": ["Klein"]}, {"title": "A machine-checked model for a Java-like language, virtual machine and compiler", "authors": ["Klein"]}, {"title": "Permission-based ownership: encapsulating state in higher-order typed languages", "authors": ["Krishnaswami"]}, {"title": "Specification and verification challenges for sequential object-oriented programs", "authors": ["Leavens", " Leino"]}, {"title": "JML Reference Manual", "authors": ["Leavens", " Poll", " Clifton", " Cheon", " Ruby", " Cok", " M\u00fcller", " Kiniry", " Chalin", " Zimmerman"]}, {"title": "Object invariants in dynamic contexts", "authors": ["Leino"]}, {"title": "Flexible immutability with frozen objects", "authors": ["Leino", " M\u00fcller"]}, {"title": "Pedigree types", "authors": ["Liu"]}, {"title": "A type system for reachability and acyclicity", "authors": []}, {"title": "On ownership and accessibility", "authors": []}, {"title": "Protecting representation with effect encapsulation", "authors": []}, {"title": "Validity invariants and effects", "authors": [" Potter"]}, {"title": "Virtual classes: A powerful mechanism in object-oriented programming", "authors": ["Madsen"]}, {"title": "Object-Oriented Software Construction 1st Ed", "authors": ["Meyer"]}, {"title": "Object-Oriented Software Construction 2nd Ed", "authors": ["Meyer"]}, {"title": "Modular Specification and Verification of Object-Oriented Programs", "authors": ["M\u00fcller"]}, {"title": "Reasoning about object structures using ownership", "authors": ["M\u00fcller"]}, {"title": "Universes: A type system for controlling representation exposure", "authors": ["M\u00fcller"]}, {"title": "A type system for controlling representation exposure in Java", "authors": ["M\u00fcller"]}, {"title": "Universes: A type system for alias and dependency control", "authors": ["M\u00fcller"]}, {"title": "Modular specification of frame properties in JML", "authors": ["M\u00fcller", " Poetzsch-Heffter"]}, {"title": "Modular invariants for layered object structures", "authors": ["M\u00fcller", " Poetzsch-Heffter"]}, {"title": "Ownership transfer in Universe Types", "authors": ["M\u00fcller"]}, {"title": "Ownership in design patterns", "authors": ["N\u00e4geli"]}, {"title": "Observational purity and encapsulation", "authors": ["Naumann"]}, {"title": "Isabelle/HOL-- A Proof Assistant for Higher-Order Logic", "authors": ["Nipkow", " Paulson"]}, {"title": "Flexible alias protection", "authors": ["Noble", " Vitek"]}, {"title": "Constrained types for objectoriented languages", "authors": ["Nystrom", " Saraswat", " Palsberg"]}, {"title": "The Scala Language specification, version 2", "authors": ["Odersky"]}, {"title": "A nominal theory of objects with dependent types", "authors": ["Odersky", " Cremet", " Rockl"]}, {"title": "Ownership, uniqueness, and immutability", "authors": ["\u00d6stlund", " Wrigstad", " Clarke"]}, {"title": "Practical pluggable types for Java", "authors": ["Papi", " Ali", " Perkins"]}, {"title": "Modular specification of encapsulated object oriented components", "authors": ["Poetzsch-Heffter"]}, {"title": "A representation-independent behavioral semantics for object-oriented components", "authors": ["Poetzsch-Heffter"]}, {"title": "Generic ownership: A practical approach to ownership and confinement in object-oriented programming languages", "authors": ["Potanin"]}, {"title": "Generic ownership for generic Java", "authors": ["Potanin", " Noble", " Clarke"]}, {"title": "Featherweight generic confinement", "authors": ["Potanin", " Noble", " Clarke"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Lightweight family polymorphism", "authors": ["Saito", " Igarashi"]}, {"title": "Purity and side-effect analysis for Java programs", "authors": ["Salcianu"]}, {"title": "JCoBox compiler", "authors": ["Sch\u00e4fer"]}, {"title": "A parameterized type system for simple loose ownership domains", "authors": ["Sch\u00e4fer"]}, {"title": "CoBoxes: Unifying active objects and structured heaps", "authors": ["Sch\u00e4fer"]}, {"title": "Linking programs to architectures: An object-oriented hierarchical software model based on boxes", "authors": ["Sch\u00e4fer", " Reitz", " Gaillourdet"]}, {"title": "Ott: Effective tool support for the working semanticist", "authors": ["Sewell", " Nardelli", " Owens", " Peskine", " Ridge", " Sarkar"]}, {"title": "Sharing objects by read-only references", "authors": ["Skoglund"]}, {"title": "Investigating object-oriented encapsulation in theory and practice", "authors": ["Skoglund"]}, {"title": "Implicit dynamic frames: Combining dynamic frames and separation logic", "authors": ["Smans", " Jacobs"]}, {"title": "Secure coding guidelines for the Java programming language, version 3", "authors": ["Sun Developer Network"]}, {"title": "Javari: Adding reference immutability to Java", "authors": ["Tschantz"]}, {"title": "Object race detection", "authors": ["von Praun"]}, {"title": "Linear types can change the world&excl; In Proceedings of the Conference on Programming Concepts and Methods (PROCOMET)", "authors": ["Wadler"]}, {"title": "Ownership-based alias management", "authors": ["Wrigstad"]}, {"title": "Existential owners for ownership types", "authors": ["Wrigstad"]}, {"title": "Object and reference immutability using Java generics", "authors": ["Zibin", " Potanin", " Ali", " Artzi", " Kiezun"]}, {"title": "Ownership and immutability in generic Java", "authors": ["Zibin", " Potanin", " Li", " Ali"]}]},
{"title": "Dependent Type Theory for Verification of Information Flow and Access Control Policies", "time": "July 2013", "keyword": ["Programming Languages and Systems"], "abstract": "Dedicated to the memory of John C. Reynolds (1935--2013).\nWe present Relational Hoare Type Theory (RHTT), a novel language and verification system capable of expressing and verifying rich information flow and access control policies via dependent types. We show that a number of security policies which have been formalized separately in the literature can all be expressed in RHTT using only standard type-theoretic constructions such as monads, higher-order functions, abstract types, abstract predicates, and modules. Example security policies include conditional declassification, information erasure, and state-dependent information flow and access control. RHTT can reason about such policies in the presence of dynamic memory allocation, deallocation, pointer aliasing and arithmetic.\n", "author": [{"name": "Aleksandar Nanevski", "affiliation": "IMDEA Software Institute"}, {"name": "Anindya Banerjee", "affiliation": "IMDEA Software Institute"}, {"name": "Deepak Garg", "affiliation": "Max Planck Institute for Software Systems"}, {"name": "Aleksandar Nanevski", "affiliation": "IMDEA Software Institute"}, {"name": "Anindya Banerjee", "affiliation": "IMDEA Software Institute"}, {"name": "Deepak Garg", "affiliation": "Max Planck Institute for Software Systems"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "29", "references": [{"title": "A core calculus of dependency", "authors": ["Abadi", " Banerjee", " Heintze"]}, {"title": " ", "authors": []}, {"title": "State-dependent representation independence", "authors": ["Ahmed", " Dreyer"]}, {"title": " ", "authors": []}, {"title": "A logic for information flow in object-oriented programs", "authors": ["Amtoft", " B"]}, {"title": " ", "authors": []}, {"title": "Proof-carrying authentication", "authors": ["Appel"]}, {"title": " ", "authors": []}, {"title": "A semantic framework for declassification and endorsement", "authors": ["Askarov"]}, {"title": " ", "authors": []}, {"title": "Gradual release: Unifying declassification, encryption and key release policies", "authors": ["Askarov"]}, {"title": " ", "authors": []}, {"title": "Permissive dynamic information flow analysis", "authors": ["Austin"]}, {"title": " ", "authors": []}, {"title": "Distributed programming with distributed authorization", "authors": ["Avijit", " Datta"]}, {"title": " ", "authors": []}, {"title": "Stack-based access control and secure information flow", "authors": ["Banerjee"]}, {"title": " ", "authors": []}, {"title": "Expressive declassification policies and their modular static enforcement", "authors": ["Banerjee", " Naumann"]}, {"title": " ", "authors": []}, {"title": "Secure information flow by self-composition", "authors": ["Barthe", " D\u2019Argenio"]}, {"title": " ", "authors": []}, {"title": "Secure computer systems: Mathematical foundations", "authors": ["Bell"]}, {"title": "Refinement types for secure implementations", "authors": ["Bengtson", " Bhargavan", " Fournet", " Gordon"]}, {"title": " ", "authors": []}, {"title": "Simple relational correctness proofs for static analyses and program transformations", "authors": ["Benton"]}, {"title": " ", "authors": []}, {"title": "Relational bytecode correlations", "authors": ["Beringer"]}, {"title": "", "authors": []}, {"title": "A computational interpretation of parametricity", "authors": ["Bernardy"]}, {"title": " ", "authors": []}, {"title": "Proofs for free | parametricity for dependent types", "authors": ["Bernardy", " Jansson"]}, {"title": " ", "authors": []}, {"title": "Boosting the permissiveness of dynamic information-flow tracking by testing", "authors": ["Birgisson", " Hedin"]}, {"title": "", "authors": []}, {"title": "Relational parametricity and separation logic", "authors": ["Birkedal"]}, {"title": "", "authors": []}, {"title": "Verifying stateful programs with substructural state and Hoare types", "authors": ["Borgstr\u00f6m", " Chen"]}, {"title": " ", "authors": []}, {"title": "Roles, stacks, histories: A triple for Hoare", "authors": ["Borgstr\u00f6m", " Gordon"]}, {"title": "", "authors": []}, {"title": "Paralocks: Role-based information flow control and beyond", "authors": ["Broberg"]}, {"title": " ", "authors": []}, {"title": "PCAL: Language support for proof-carrying authorization systems", "authors": ["Chaudhuri"]}, {"title": "", "authors": []}, {"title": "Security policies for downgrading", "authors": ["Chong"]}, {"title": " ", "authors": []}, {"title": "Language-based information erasure", "authors": ["Chong"]}, {"title": " ", "authors": []}, {"title": "End-to-end enforcement of erasure and declassification", "authors": ["Chong"]}, {"title": " ", "authors": []}, {"title": "Hyperproperties", "authors": ["Clarkson"]}, {"title": "", "authors": []}, {"title": "The Coq proof assistant reference manual", "authors": ["Coq development team"]}, {"title": "", "authors": ["de Roever"]}, {"title": "Cambridge University Press", "authors": []}, {"title": "A lattice model of secure information flow", "authors": ["Denning"]}, {"title": " ", "authors": []}, {"title": "Guarded commands, nondeterminacy and formal derivation of program", "authors": ["Dijkstra"]}, {"title": " ", "authors": []}, {"title": "Calibrating noise to sensitivity in private data analysis", "authors": ["Dwork", " McSherry", " Nissim"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Fagin", " Halpern", " Moses"]}, {"title": "MIT Press", "authors": []}, {"title": "Security policies and security models", "authors": ["Goguen"]}, {"title": "", "authors": []}, {"title": "Data refinement and the transform", "authors": ["Gries"]}, {"title": "Broy Ed", "authors": [" Springe"]}, {"title": "A type-theoretic approach to higher-order modules with sharing", "authors": ["Harper"]}, {"title": " ", "authors": []}, {"title": "Encoding information flow in Aura", "authors": ["Jia"]}, {"title": " ", "authors": []}, {"title": "AURA: A programming language for authorization and audit", "authors": ["Jia", " Vaughan", " Mazurak", " Zhao", " Zarko", " Schorr"]}, {"title": " ", "authors": []}, {"title": "Manifest types, modules, and separate compilation", "authors": ["Leroy"]}, {"title": " ", "authors": []}, {"title": "Arrows for secure information flow", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": ["Martin-L\u00f6f"]}, {"title": "Bibliopolis", "authors": []}, {"title": "Abstract types have existential type", "authors": ["Mitchell"]}, {"title": " ", "authors": []}, {"title": "Security-typed programming within dependently-typed programming", "authors": ["Morgenstern"]}, {"title": " ", "authors": []}, {"title": "JFlow: Practical mostly-static information flow control", "authors": ["Myers"]}, {"title": " ", "authors": []}, {"title": "Hoare type theory, polymorphism and separation", "authors": ["Nanevski", " Morrisett"]}, {"title": " ", "authors": []}, {"title": "Verification of information flow and access control policies via dependent types", "authors": ["Nanevski", " Banerjee"]}, {"title": " ", "authors": []}, {"title": "Structuring the verification of heap-manipulating programs", "authors": ["Nanevski", " Vafeiadis"]}, {"title": " ", "authors": []}, {"title": "Towards a practical programming language based on dependent type theory", "authors": ["Norell"]}, {"title": "Imperative functional programming", "authors": ["Peyton Jones"]}, {"title": " ", "authors": []}, {"title": "A logic for parametric polymorphism", "authors": ["Plotkin"]}, {"title": "", "authors": []}, {"title": "Distance makes the types grow stronger", "authors": ["Reed"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Reynolds"]}, {"title": "Prentice-Hall", "authors": []}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "", "authors": []}, {"title": "A library for light-weight information-flow security in Haskell", "authors": ["Russo", " Claessen"]}, {"title": " ", "authors": []}, {"title": "Tracking information flow in dynamic tree structures", "authors": ["Russo", " Sabelfeld"]}, {"title": "", "authors": []}, {"title": "A PER model of secure information flow in sequential programs", "authors": ["Sabelfeld"]}, {"title": "", "authors": []}, {"title": "Declassification: Dimensions and principles", "authors": ["Sabelfeld"]}, {"title": "", "authors": []}, {"title": "Fine-grained information flow analysis for a ", "authors": ["Simonet"]}, {"title": "In ", "authors": []}, {"title": "", "authors": []}, {"title": "Managing policy updates in security-typed languages", "authors": ["Swamy", " Hicks", " Tse"]}, {"title": " ", "authors": []}, {"title": "Fable: A language for enforcing user-defined security policies", "authors": ["Swamy", " Corcoran"]}, {"title": " ", "authors": []}, {"title": "Enforcing stateful authorization and information flow policies in Fine", "authors": ["Swamy", " Chen"]}, {"title": " ", "authors": []}, {"title": "Secure distributed programming with value-dependent types", "authors": ["Swamy", " Chen", " Fournet", " Strub", " Bhargavan"]}, {"title": " ", "authors": []}, {"title": "Secure information flow as a safety problem", "authors": ["Terauchi"]}, {"title": " ", "authors": []}, {"title": "Two for the price of one: Lifting separation logic assertions", "authors": ["Thamsborg", " Birkedal"]}, {"title": "", "authors": []}, {"title": "A sound type system for secure flow analysis", "authors": ["Volpano", " Irvine"]}, {"title": "", "authors": []}, {"title": "Relational separation logic", "authors": ["Yang"]}, {"title": " ", "authors": []}, {"title": "A semantic basis for local reasoning", "authors": ["Yang"]}, {"title": "", "authors": []}]},
{"title": "Implicit dynamic frames", "time": "May 2012", "keyword": ["Programming Languages and Systems"], "abstract": "An important, challenging problem in the verification of imperative programs with shared, mutable state is the frame problem in the presence of data abstraction. That is, one must be able to specify and verify upper bounds on the set of memory locations a method can read and write without exposing that method's implementation.\nSeparation logic is now widely considered the most promising solution to this problem. However, unlike conventional verification approaches, separation logic assertions cannot mention heap-dependent expressions from the host programming language, such as method calls familiar to many developers. Moreover, separation logic-based verifiers are often based on symbolic execution. These symbolic execution-based verifiers typically do not support non-separating conjunction, and some of them rely on the developer to explicitly fold and unfold predicate definitions. Furthermore, several researchers have wondered whether it is possible to use verification condition generation and standard first-order provers instead of symbolic execution to automatically verify conformance with a separation logic specification.\nIn this article, we propose a variant of separation logic called \n that supports heap-dependent expressions inside assertions. Conformance with an implicit dynamic frames specification can be checked by proving the validity of a number of first-order verification conditions. To show that these verification conditions can be discharged automatically by standard first-order provers, we have implemented our approach in a verifier prototype and have used this prototype to verify several challenging examples from related work. Our prototype automatically folds and unfolds predicate definitions, as required, during the proof and can reason about non-separating conjunction which is used in the specifications of some of these examples. Finally, we prove the soundness of the approach.\n", "author": [{"name": "Jan Smans", "affiliation": "K.U. Leuven"}, {"name": "Bart Jacobs", "affiliation": "K.U. Leuven"}, {"name": "Frank Piessens", "affiliation": "K.U. Leuven"}, {"name": "Jan Smans", "affiliation": "K.U. Leuven"}, {"name": "Bart Jacobs", "affiliation": "K.U. Leuven"}, {"name": "Frank Piessens", "affiliation": "K.U. Leuven"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "27", "references": [{"title": "Regional logic for local reasoning about global invariants", "authors": ["Banerjee", " Naumann"]}, {"title": "Verification of object-oriented programs with invariants", "authors": ["Barnett", " DeLine", " F\u00e4hndrich", " Leino"]}, {"title": "Embedded contract languages", "authors": ["Barnett", " Fahndrich"]}, {"title": "The Spec&num; programming system: An overview", "authors": ["Barnett", " Leino"]}, {"title": "Friends need a bit more: Maintaining invariants over shared state", "authors": ["Barnett"]}, {"title": "Verification of Object-Oriented Software: The KeY Approach", "authors": ["Beckert", " H\u00e4hnle"]}, {"title": "Symbolic execution with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": "Proving pointer programs in hoare logic", "authors": ["Bornat"]}, {"title": "Checking interference with fractional permissions", "authors": ["Boyl"]}, {"title": "An overview of JML tools and applications", "authors": ["Burdy", " Cheon", " Cok", " Ernst", " Kiniry", " Leavens", " Leino"]}, {"title": "Compositional shape analysis by means of BI-abduction", "authors": ["Calcagno", " Distefano", " OHearn"]}, {"title": "VCC: Contract-based modular verification of concurrent C", "authors": ["Dahlweid", " Moskal", " Santen", " Tobies"]}, {"title": "Practical reasoning about invocations and implementations of pure methods", "authors": ["Darvas"]}, {"title": "Z3: An efficient SMT solver", "authors": ["de Moura"]}, {"title": "Simplify: A theorem prover for program checking", "authors": ["Detlefs", " Nelson"]}, {"title": "Guarded commands, nondeterminacy and formal derivation of programs", "authors": ["Dijkstra"]}, {"title": "Concurrent abstract predicates", "authors": ["Dinsdale-Young", " Dodds", " Gardner", " Parkinson"]}, {"title": "jStar: Towards practical verification for Java", "authors": ["Distefano"]}, {"title": "Eiffel: Analysis, design and programming language", "authors": ["EIFFE"]}, {"title": "Extended static checking for Java", "authors": ["Flanagan", " Leino", " Lillibridge", " Nelson", " Saxe"]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": ["Gamma", " Helm", " Johnson"]}, {"title": "Resource usage protocols for iterators", "authors": ["Haack"]}, {"title": "Oracle semantics for concurrent separation logic", "authors": ["Hobor", " Appel"]}, {"title": "Inspector methods for state abstraction", "authors": ["Jacobs"]}, {"title": "Expressive modular fine-grained concurrency specification", "authors": ["Jacobs"]}, {"title": "A programming model for concurrent object-oriented programs", "authors": ["Jacobs", " Piessens", " Smans"]}, {"title": "Verifying the composite pattern using separation logic", "authors": ["Jacobs", " Smans"]}, {"title": "A quick tour of the VeriFast program verifier", "authors": ["Jacobs", " Smans"]}, {"title": "Dynamic frames: Support for framing, dependencies and sharing without restrictions", "authors": ["Kassios"]}, {"title": "Reasoning about iterators with separation logic", "authors": ["Krishnaswami"]}, {"title": "JML\u0160s rich, inherited specifications for behavioral subtypes", "authors": ["Leavens"]}, {"title": "Specification and verification challenges for sequential object-oriented programs", "authors": ["Leavens", " Leino"]}, {"title": "Dafny: An automatic program verifier for functional correctness", "authors": ["Leino"]}, {"title": "Proving consistency of pure methods and model fields", "authors": ["Leino"]}, {"title": "Reasoning about comprehensions with first-order smt solvers", "authors": ["Leino"]}, {"title": "Object invariants in dynamic contexts", "authors": ["Leino"]}, {"title": "A basis for verifying multithreaded programs", "authors": ["Leino"]}, {"title": "A basis for verifying multithreaded programs", "authors": ["Leino", " M\u00fcller"]}, {"title": "Data abstraction and information hiding", "authors": ["Leino"]}, {"title": "Using data groups to specify and check side effects", "authors": ["Leino", " Poetzsch-Heffter"]}, {"title": "Using history invariants to verify observers", "authors": ["Leino"]}, {"title": "Mechanized verification with sharing", "authors": ["Malecha"]}, {"title": "nvariants for non-hierarchical object structures", "authors": ["Middelkoop", " Huizing", " Kuiper"]}, {"title": "Modular specification and verification of object-oriented programs", "authors": ["M\u00fcller"]}, {"title": "Using debuggers to understand failed verification attempts", "authors": ["M\u00fcller"]}, {"title": "Ynot: Reasoning with the awkward squad", "authors": ["Nanevski", " Morrisett", " Shinnar", " Govereau"]}, {"title": "Structuring the verification of heap-manipulating programs", "authors": ["Nanevski", " Vafeiadis"]}, {"title": "Automated verification of shape and size properties via separation logic", "authors": ["Nguyen", " David", " Qin"]}, {"title": "Runtime checking for separation logic", "authors": ["Nguyen", " Kuncak"]}, {"title": "Local reasoning about programs that alter data structures", "authors": ["O'Hearn", " Reynolds"]}, {"title": "Verifying properties of parallel programs: an axiomatic approach", "authors": ["Owicki"]}, {"title": "Formal verification of industrial C code using Frama-C: A case study", "authors": ["Pariente"]}, {"title": "Local reasoning for Java", "authors": ["Parkinson"]}, {"title": "Class invariants: The end of the road? In Proceedings of the International Workshop on Aliasing, Confinement and Ownership in Object-Oriented Programming (IWACO)", "authors": ["Parkinson"]}, {"title": "Separation logic and abstraction", "authors": ["Parkinson"]}, {"title": "Separation logic, abstraction and inheritance", "authors": ["Parkinson"]}, {"title": "The relationship between separation logic and implicit dynamic frames", "authors": ["Parkinson"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "Calling context abstraction with shapes", "authors": ["Rival"]}, {"title": "Local reasoning and dynamic framing for the composite pattern and its clients", "authors": ["Rosenberg", " Banerjee"]}, {"title": "Checking well-formedness of pure-method specifications", "authors": ["Rudich", " Darvas"]}, {"title": "Making classes provable through contracts", "authors": ["Schoeller"]}, {"title": "Implicit dynamic frames: Combining dynamic frames and separation logic", "authors": ["Smans", " Jacobs"]}, {"title": "Heap-dependent expressions in separation logic", "authors": ["Smans", " Jacobs"]}, {"title": "An automatic verifier for Java-like programs based on dynamic frames", "authors": ["Smans", " Jacobs", " Piessens"]}, {"title": "Considerate reasoning and the composite design pattern", "authors": ["Summers"]}, {"title": "Types, bytes, and separation logic", "authors": ["Tuch", " Klein"]}, {"title": "A formalization of Smallfoot in HOL", "authors": ["Tuerk"]}, {"title": "Local reasoning about while-loops", "authors": ["Tuerk"]}, {"title": "Verifying executable object-oriented specifications with separation logic", "authors": ["van Staden", " Calcagno"]}, {"title": "Proving copyless message passing", "authors": ["Villard", " Lozes"]}, {"title": "Full functional verification of linked data structures", "authors": ["Zee", " Kuncak"]}]},
{"title": "A Theoretical Foundation of Sensitivity in an Abstract Interpretation Framework", "time": "August 2018", "keyword": ["Programming Languages and Systems"], "abstract": "Program analyses often utilize various forms of \n such as context sensitivity, call-site sensitivity, and object sensitivity. These techniques all allow for more precise program analyses, that are able to compute more precise program invariants, and to verify stronger properties. Despite the fact that sensitivity techniques are now part of the standard toolkit of static analyses designers and implementers, no comprehensive frameworks allow the description of all common forms of sensitivity. As a consequence, the soundness proofs of static analysis tools involving sensitivity often rely on ad hoc formalization, which are not always carried out in an abstract interpretation framework. Moreover, this also means that opportunities to identify similarities between analysis techniques to better improve abstractions or to tune static analysis tools can easily be missed.\nIn this article, we present and formalize a framework for the description of \n. Our framework is based on a powerful abstract domain construction, and utilizes reduced cardinal power to tie basic abstract predicates to the properties analyses are sensitive to. We formalize this abstraction, and the main abstract operations that are needed to turn it into a generic abstract domain construction. We demonstrate that our approach can allow for a more precise description of program states, and that it can also describe a large set of sensitivity techniques, both when sensitivity criteria are static (known before the analysis) or dynamic (inferred as part of the analysis), and sensitive analysis tuning parameters. Last, we show that sensitivity techniques used in state-of-the-art static analysis tools can be described in our framework.\n", "author": [{"name": "Se-Won Kim", "affiliation": "S-Core"}, {"name": "Xavier Rival", "affiliation": "CNRS, ENS, INRIA Paris-Rocquencourt, PSL* University"}, {"name": "Sukyoung Ryu", "affiliation": "KAIST, Yuseong-gu, Republic of Korea"}, {"name": "Se-Won Kim", "affiliation": "S-Core"}, {"name": "Xavier Rival", "affiliation": "CNRS, ENS, INRIA Paris-Rocquencourt, PSL* University"}, {"name": "Sukyoung Ryu", "affiliation": "KAIST, Yuseong-gu, Republic of Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "The Cartesian product algorithm: Simple and precise type inference of parametric polymorphism", "authors": ["Ole Agesen"]}, {"title": "Determinacy in static analysis for jQuery", "authors": ["Esben Andreasen "]}, {"title": "SAFE<sub>WAPI</sub>: Web API misuse detector for web applications", "authors": ["SungGyeong Bae", " Hyunghun Cho", " Inho Lim"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9r\u00f3me Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Abstract interpretation by dynamic partitioning", "authors": ["Fran\u00e7ois Bourdoncle"]}, {"title": "Relational inductive shape analysis", "authors": ["Bor-Yuh Evan Chang "]}, {"title": "Empirical Software Engineering 21, 2 (2016), 517--564", "authors": ["Wai Ting Cheung", " Sukyoung Ryu"]}, {"title": "Semantic foundations of program analysis", "authors": ["Patrick Cousot"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Patrick Cousot "]}, {"title": "A parametric segmentation functor for fully automatic and scalable array content analysis", "authors": ["Patrick Cousot", " Radhia Cousot"]}, {"title": "The reduced relative power operation on abstract domains", "authors": ["Roberto Giacobazzi "]}, {"title": "Making abstract domains condensing", "authors": ["Roberto Giacobazzi", " Francesco Ranzato"]}, {"title": "A logical model for relational abstract domains", "authors": ["Roberto Giacobazzi "]}, {"title": "Refining static analyses by trace-based partitioning using control flow", "authors": ["Maria H"]}, {"title": "Lazy abstraction", "authors": [" Ranjit Jhala", " Rupak Majumdar"]}, {"title": "T", "authors": ["IBM Research"]}, {"title": "Dynamic partitioning in linear relation analysis: Application to the verification of reactive systems", "authors": ["Bertr"]}, {"title": "SAFE: Scalable Analysis Framework for ECMAScript", "authors": ["KAIST PLRG"]}, {"title": "JSAI: A static analysis platform for JavaScript", "authors": ["Vineeth Kashyap", " Kyle Dewey", " John Wagner", " Kevin Gibbons", " John Sarracino", " Ben Wiedermann"]}, {"title": "SAFE: Formal specification and implementation of a scalable analysis framework for ECMAScript", "authors": ["Hongki Lee", " Sooncheol Won", " Joonho Jin", " Junhee Cho"]}, {"title": "Sound non-statistical clustering of static analysis alarms", "authors": ["Woosuk Lee", " Wonchan Lee"]}, {"title": "Parameterized object sensitivity for points-to analysis for Java", "authors": ["Ana Milanova", " Atanas Rountev"]}, {"title": "TAJS: Type Analyzer for JavaScript", "authors": ["Anders M\u00f8ller", " Simon Holm Jensen", " Peter Thiemann", " Magnus Madsen", " Matthias Diehn Ingesman", " Peter Jonsson"]}, {"title": "Sparrow", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Selective context-sensitivity guided by impact pre-analysis", "authors": ["Hakjoo Oh", " Wonchan Lee", " Kihong Heo", " Hongseok Yang"]}, {"title": "Scalable and precise static analysis of JavaScript applications via loop-sensitivity", "authors": ["Changhee Park "]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": [" Susan Horwitz"]}, {"title": "The trace partitioning abstract domain", "authors": ["Xavier Rival "]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Mooly Sagiv", " Thomas Reps"]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Micha Sharir "]}, {"title": "Control-Flow Analysis of Higher-Order Languages", "authors": ["Olin Shivers"]}, {"title": "Pick your contexts well: Understanding object-sensitivity", "authors": ["Yannis Smaragdakis", " Martin Bravenboer"]}, {"title": "Abstract cofibered domains: Application to the alias analysis of untyped programs", "authors": ["Arnaud Venet"]}]},
{"title": "Compiler-Driven Software Speculation for Thread-Level Parallelism", "time": "December 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Current parallelizing compilers can tackle applications exercising regular access patterns on arrays or affine indices, where data dependencies can be expressed in a linear form. Unfortunately, there are cases that independence between statements of code cannot be guaranteed and thus the compiler conservatively produces sequential code. Programs that involve extensive pointer use, irregular access patterns, and loops with unknown number of iterations are examples of such cases. This limits the extraction of parallelism in cases where dependencies are rarely or never triggered at runtime. Speculative parallelism refers to methods employed during program execution that aim to produce a valid parallel execution schedule for programs immune to static parallelization. The motivation for this article is to review recent developments in the area of compiler-driven software speculation for thread-level parallelism and how they came about. The article is divided into two parts. In the first part the fundamentals of speculative parallelization for thread-level parallelism are explained along with a design choice categorization for implementing such systems. Design choices include the ways speculative data is handled, how data dependence violations are detected and resolved, how the correct data are made visible to other threads, or how speculative threads are scheduled. The second part is structured around those design choices providing the advances and trends in the literature with reference to key developments in the area. Although the focus of the article is in software speculative parallelization, a section is dedicated for providing the interested reader with pointers and references for exploring similar topics such as hardware thread-level speculation, transactional memory, and automatic parallelization.\n", "author": [{"name": "Paraskevas Yiapanis", "affiliation": "University of Manchester, Oxford Road"}, {"name": "Gavin Brown", "affiliation": "University of Manchester, Oxford Road"}, {"name": "Mikel Luj\u00e1n", "affiliation": "University of Manchester, Oxford Road"}, {"name": "Paraskevas Yiapanis", "affiliation": "University of Manchester, Oxford Road"}, {"name": "Gavin Brown", "affiliation": "University of Manchester, Oxford Road"}, {"name": "Mikel Luj\u00e1n", "affiliation": "University of Manchester, Oxford Road"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Integrated predicated and speculative execution in the IMPACT EPIC architecture", "authors": [" Ben-Chung Cheng"]}, {"title": "Compiler transformations for high-performance computing", "authors": []}, {"title": "Simple garbage-collector-safety", "authors": []}, {"title": "Revisiting the sequential programming model for multi-core", "authors": ["Matthew Bridges", " Neil Vachharajani", " Yun Zhang", " Thomas Jablin"]}, {"title": "The VELOCITY Compiler: Extracting Efficient Multicore Eexecution from Legacy Sequential Codes", "authors": ["Matthew Bridges"]}, {"title": "Softspec: Software-based speculative parallelism", "authors": ["Derek Bruening", " Srikrishna Devabhaktuni"]}, {"title": "Bulk disambiguation of speculative threads in multiprocessors", "authors": ["Luis Ceze", " James Tuck", " Josep Torrellas"]}, {"title": "An efficient algorithm for the run-time parallelization of DOACROSS loops", "authors": ["Ding Kai Chen", " Josep Torrellas"]}, {"title": "The Jrpm system for dynamically parallelizing Java programs", "authors": []}, {"title": "Design space exploration of a software speculative parallelization scheme", "authors": ["Marcelo Cintra "]}, {"title": "Toward efficient and robust software speculative parallelization on multiprocessors", "authors": []}, {"title": "Architectural support for scalable speculative parallelization in shared-memory multiprocessors", "authors": ["Marcelo Cintra"]}, {"title": "DOACROSS: Beyond vectorization for multiprocessors", "authors": ["Ron Cytron"]}, {"title": "The R-LRPD test: Speculative parallelization of partially parallel loops", "authors": ["Francis Dang", " Hao Yu"]}, {"title": "MapReduce: Simplified data processing on large clusters", "authors": ["Jeffrey Dean "]}, {"title": "Software behavior oriented parallelization", "authors": ["Chen Ding", " Xipeng Shen", " Kirk Kelsey", " Chris Tice", " Ruke Huang"]}, {"title": "Tradeoffs in buffering speculative memory state for thread-level speculation in multiprocessors", "authors": ["Mar\u00eda Jes\u00fas Garzar\u00e1n", " Milos Prvulovic", " Jos\u00e9 Mar\u00eda Llaber\u00eda", " V\u00edctor Vi\u00f1als", " Lawrence Rauchwerger"]}, {"title": "Speculative versioning cache", "authors": ["Sridhar Gopal", " James Smith"]}, {"title": "Techniques for speculative run-time parallelization of loops", "authors": ["Manish Gupta "]}, {"title": "Apache Hadoop", "authors": ["Apache Hadoop"]}, {"title": "Data speculation support for a chip multiprocessor", "authors": ["Lance Hammond", " Mark Willey"]}, {"title": "Transactional Memory (2nd ed", "authors": ["Tim Harris", " James Larus"]}, {"title": "Optimizing memory transactions", "authors": ["Tim Harris", " Mark Plesko", " Avraham Shinnar"]}, {"title": "Transactional memory: Architectural support for lock-free data structures", "authors": []}, {"title": "A 48-Core IA-32 message-passing processor with DVFS in 45nm CMOS", "authors": ["Jason Howard", " Saurabh Dighe", " Yatin Hoskote", " Sriram Vangal", " David Finan", " Gregory Ruhl", " David Jenkins", " Howard Wilson", " Nitin Borkar", " Gerhard Schrom", " Fabrice Pailet", " Shailendra Jain", " Tiju Jacob", " Satish Yada", " Sraven Marella", " Praveen Salihundam", " Vasantha Erraguntla", " Michael Konow", " Michael Riepen", " Guido Droege", " Joerg Lindemann", " Matthias Gries", " Thomas Apel", " Kersten Henriss", " Tor Lund-Larsen", " Sebastian Steibl", " Shekhar Borkar", " Vivek De", " Rob Van Der Wijngaart"]}, {"title": "The role of return value prediction in exploiting speculative method-level parallelism", "authors": ["Shiwen Hu", " Ravi Bhargava"]}, {"title": "Toward a more accurate understanding of the limits of the TLS execution paradigm", "authors": ["Nikolas Ioannou", " Jeremy Singer", " Salman Khan", " Paraskevas Yiapanis", " Adam Pocock", " Polychronis Xekalakis", " Gavin Brown", " Mikel Luj\u00e1n", " Ian Watson"]}, {"title": "Speculative separation for privatization and peductions", "authors": [" Hanjun Kim", " Prakash Prabhu", " Ayal Zaks"]}, {"title": "Min-cut program decomposition for thread-level speculation", "authors": [" Rudolf Eigenmann"]}, {"title": "Optimizing Compilers for Modern Architectures: A Dependence-Based Approach", "authors": []}, {"title": "Scalable speculative parallelization on commodity clusters", "authors": ["Hanjun Kim", " Arun Raman", " Feng Liu"]}, {"title": "POSH: A TLS compiler that exploits program structure", "authors": ["Wei Liu", " James Tuck", " Luis Ceze", " Wonsun Ahn", " Karin Strauss", " Jose Renau"]}, {"title": "Speculative parallelization\u2014Eliminating the overhead of failure", "authors": ["Mikel Luj\u00e1n", " Phyllis Gustafson", " Michael Paleczny"]}, {"title": "Big data: How do your data grow? Nature 455, 7209 (2008), 28--29", "authors": ["Clifford Lynch"]}, {"title": "Exploiting speculative thread-level parallelism on a SMT processor", "authors": ["Pedro Marcuello "]}, {"title": "Thread-spawning schemes for speculative multithreading", "authors": ["Pedro Marcuello "]}, {"title": "A methodology for evaluating JavaScript execution behavior in interactive web applications", "authors": ["Jan Kasper Martinsen "]}, {"title": "Using speculation to enhance javaScript performance in Web applications", "authors": ["Jan Martinsen", " Hakan Grahn"]}, {"title": "Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory", "authors": ["Mojtaba Mehrara", " Jeff Hao", " Po-Chun Hsu"]}, {"title": "Automatic Parallelization: An Overview of Fundamental Compiler Techniques", "authors": []}, {"title": "Bottom-up and top-down context-sensitive summary-based pointer analysis", "authors": [" Hong-Seok Kim"]}, {"title": "A lightweight in-place implementation for software thread-level speculation", "authors": ["Cosmin Oancea", " Alan Mycroft"]}, {"title": "Software and Hardware for Exploiting Speculative Parallelism with a Multiprocessor", "authors": ["Jeffrey Oplinger", " David Heine", " Shih Liao"]}, {"title": "Automatic thread extraction with decoupled software pipelining", "authors": ["Guilherme Ottoni", " Ram Rangan", " Adam Stoler"]}, {"title": "Automatic thread extraction with decoupled Software Pipelining", "authors": ["Guilherme Ottoni", " Ram Rangan", " Adam Stoler"]}, {"title": "Software thread level speculation for the Java language and virtual machine environment", "authors": []}, {"title": "Exposing speculative thread parallelism in SPEC2000", "authors": []}, {"title": "Speculative parallelization using software multi-threaded transactions", "authors": ["Arun Raman", " Hanjun Kim"]}, {"title": "Parallel-stage decoupled software pipelining", "authors": ["Easwaran Raman", " Guilherme Ottoni", " Arun Raman"]}, {"title": "Performance scalability of decoupled software pipelining", "authors": ["Ram Rangan", " Neil Vachharajani", " Guilherme Ottoni"]}, {"title": "Decoupled software pipelining with the synchronization array", "authors": ["Ram Rangan", " Neil Vachharajani", " Manish Vachharajani"]}, {"title": "JSMeter: Comparing the behavior of JavaScript benchmarks with real Web applications", "authors": ["Paruj Ratanaworabhan", " Benjamin Livshits"]}, {"title": "Run-time parallelization: Its time has come", "authors": ["Lawrence Rauchwerger"]}, {"title": "Speculative Run-Time Parallelization of Loops", "authors": ["Lawrence Rauchwerger "]}, {"title": "The privatizing DOALL test: A run-time technique for DOALL loop identification and array privatization", "authors": ["Lawrence Rauchwerger "]}, {"title": "The LRPD test: Speculative run-time parallelization of loops with privatization and reduction parallelization", "authors": ["Lawrence Rauchwerger "]}, {"title": "Thread-level speculation on a CMP can be energy efficient", "authors": ["Jose Renau", " Karin Strauss", " Luis Ceze", " Wei Liu", " Smruti Sarangi", " James Tuck"]}, {"title": "Tasking with out-of-order spawn in TLS chip multiprocessors: Microarchitecture and compilation", "authors": ["Jose Renau", " James Tuck", " Wei Liu", " Luis Ceze", " Karin Strauss"]}, {"title": "An analysis of the dynamic behavior of JavaScript programs", "authors": ["Gregor Richards", " Sylvain Lebresne", " Brian Burg"]}, {"title": "An all-software thread-level data dependence speculation system for multiprocessors", "authors": ["Peter Rundberg "]}, {"title": "McRT-STM: A high performance software transactional memory system for a multi-core runtime", "authors": ["Bratin Saha", " Ali-Reza Adl-Tabatabai", " Chi Cao Minh"]}, {"title": "The preprocessed doacross loop", "authors": []}, {"title": "The doconsider loop", "authors": [" Ravi Mirch"]}, {"title": "Run-time parallelization and scheduling of loops", "authors": [" Ravi Mirch"]}, {"title": "Lightweight, robust adaptivity for software transactional memory", "authors": []}, {"title": "Conflict detection and validation strategies for software transactional memory", "authors": []}, {"title": "Hardware Support for Thread-Level Speculation", "authors": ["Gregory Steffan"]}, {"title": "The STAMPede approach to thread-level speculation", "authors": ["Gregory Steffan", " Christopher Colohan", " Antonia Zhai"]}, {"title": "A scalable approach to thread-level speculation", "authors": ["Gregory Steffan", " Antonia Zhai"]}, {"title": "Processor self-scheduling for multiple nested parallel loops", "authors": ["Peiyi Tang "]}, {"title": "A practical approach to exploiting coarse-grained pipeline parallelism in C programs", "authors": ["William Thies", " Vikram Ch"]}, {"title": "Supporting speculative parallelization in the presence of dynamic data structures", "authors": ["Chen Tian", " Min Feng"]}, {"title": "Copy or discard execution model for speculative parallelization on multicores", "authors": ["Chen Tian", " Min Feng", " Vijay Nagarajan"]}, {"title": "Speculative decoupled software pipelining", "authors": ["Neil Vachharajani", " Ram Rangan", " Easwaran Raman", " Guilherme Ottoni"]}, {"title": "Evaluation of blue gene/q hardware support for transactional memories", "authors": ["Amy Wang", " Matthew Gaudet", " Peng Wu", " Jose Amaral", " Martin Ohmacht", " Christopher Barton", " Raul Silvera"]}, {"title": "High Performance Optimizations in Runtime Speculative Parallelization for Multicore Architectures", "authors": ["Paraskevas Yiapanis"]}, {"title": "Optimizing software runtime systems for speculative parallelization", "authors": ["Paraskevas Yiapanis", " Demian Rosas-Ham", " Gavin Brown"]}, {"title": "GPU-TLS: An efficient runtime for speculative loop parallelization on GPUs", "authors": ["Chenggang Zhang", " Guodong Han"]}, {"title": "Uncovering hidden loop level parallelism in sequential applications", "authors": ["Hongtao Zhong", " Mojtaba Mehrara"]}, {"title": "A scheme to enforce data dependence on large multiprocessor systems", "authors": ["Chuan-Qi Zhu "]}]},
{"title": "Static Backward Slicing of Non-deterministic Programs and Systems", "time": "August 2018", "keyword": ["Programming Languages and Systems"], "abstract": "A theory of slicing non-deterministic programs and systems is developed. Non-deterministic programs and systems are represented as non-deterministic program graphs (NDPGs) that allow arbitrary non-deterministic branching to be expressed. Structural and semantic relationships that must exist between an NDPG and (1) its non-termination insensitive (weak) slices and (2) its non-termination sensitive (strong) slices are defined. Weak and strong commitment closure are introduced. These are the NDPG equivalents of being closed under non-termination sensitive and non-termination insensitive control dependence; properties defined on subsets of vertices of the equivalent deterministic structure: the control flow graph.\nIt is proved that if a subset of the vertices of an NDPG is both data dependence closed and (weak/strong) commitment closed, then the resulting induced graph will, indeed, satisfy our structural and semantic requirements. \n(\n) algorithms for computing minimal data and weak/strong commitment closed sets are given. The resulting induced graphs are thus guaranteed to be weak and strong slices, respectively.\nIt is demonstrated, with examples, that programs written in Dijkstra's non-deterministic guarded command language (DNGCL) can be converted to NDPGs to which our slicing algorithms can then be applied. It is proved that the resulting slices (NDPGs) can always be converted back to valid DNGCL programs, highlighting the applicability of our approach to slicing at the source code level.\n", "author": [{"name": "Sebastian Danicic", "affiliation": "Department of Computing, Goldsmiths, University of London, UK"}, {"name": "Michael R. Laurence", "affiliation": "Department of Computer Science, University of Sheffield, UK"}, {"name": "Sebastian Danicic", "affiliation": "Department of Computing, Goldsmiths, University of London, UK"}, {"name": "Michael R. Laurence", "affiliation": "Department of Computer Science, University of Sheffield, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Dynamic program slicing", "authors": []}, {"title": "Conversion of control de- pendence to data dependence", "authors": [" Ken Kennedy", " Carrie Porterfield"]}, {"title": "Slicing for modern program structures: A theory for eliminating irrelevant loops", "authors": ["Torben Amtoft"]}, {"title": "Amorphous slicing of extended finite state machines", "authors": ["Kelly Androutsopoulos", " David Clark", " Mark Harman", " Zheng Li"]}, {"title": "Control dependence for extended finite state machines", "authors": ["Kelly Androutsopoulos", " David Clark", " Mark Harman", " Zheng Li"]}, {"title": "Control dependence for extended finite state machines", "authors": ["Kelly Androutsopoulos", " David Clark", " Mark Harman", " Zheng Li"]}, {"title": "A trajectory-based strict semantics for program slicing", "authors": ["Richard Barraclough", " David Binkley", " Sebastian Danicic", " Mark Harman", " Robert Hierons", " \u00c1kos Kiss"]}, {"title": "Dynamic slicing method for maintenance of large c programs", "authors": ["\u00c1rp\u00e1d Besz\u00e9des", " Tam\u00e1s Gergely", " Zsolt Mih\u00e1ly Szab\u00f3", " J\u00e1nos Csirik"]}, {"title": "A framework for generalized control dependence", "authors": ["Gianfranco Bilardi "]}, {"title": "Theoretical foundations of dynamic program slicing", "authors": ["David Binkley", " Sebastian Danicic", " Tibor Gyim\u00f3thy", " Mark Harman", " \u00c1kos Kiss"]}, {"title": "Formalizing executable dynamic and forward slicing", "authors": ["Dave Binkley", " Sebastian Danicic", " Tibor Gyim\u00f3thy", " Mark Harman", " \u00c1kos Kiss"]}, {"title": "Forward slices are smaller than backward slices", "authors": ["David Binkley "]}, {"title": "The application of program slicing to regression testing", "authors": ["David Wendell Binkley"]}, {"title": "A formal relationship between program slicing and partial evaluation", "authors": ["David Wendell Binkley", " Sebastian Danicic", " Mark Harman", " John Howroyd"]}, {"title": "Program slicing", "authors": ["David Wendell Binkley "]}, {"title": "A large-scale empirical study of forward and backward static slice size and context sensitivity", "authors": ["David Wendell Binkley "]}, {"title": "A survey of empirical results on program slicing", "authors": ["David Wendell Binkley "]}, {"title": "Program integration for languages with procedure calls", "authors": ["David Wendell Binkley", " Susan Horwitz"]}, {"title": "Conditioned program slicing", "authors": ["Gerardo Canfora", " Aniello Cimitile"]}, {"title": "A non-standard semantics for program slicing and dependence analysis", "authors": ["Sebastian Danicic", " Mark Harman", " John Howroyd"]}, {"title": "Dataflow Minimal Slicing", "authors": ["Sebastian Danicic"]}, {"title": "A unifying theory of control dependence and its application to arbitrary program structures", "authors": ["Sebastian Danicic", " Richard Barraclough", " Mark Harman", " John Howroyd", " Akos Kiss"]}, {"title": "A formalisation of the relationship between forms of program slicing", "authors": ["Sebastian Danicic", " David Binkley", " Tibor Gyim\u00f3thy", " Mark Harman", " \u00c1kos Kiss"]}, {"title": "ConSIT: A conditioned program slicer", "authors": ["Sebastian Danicic", " Chris Fox", " Mark Harman"]}, {"title": "Slicing algorithms are minimal for programs which can be expressed as linear, free, liberal schemas", "authors": ["Sebastian Danicic", " Chris Fox", " Mark Harman", " Robert Mark Hierons", " John Howroyd"]}, {"title": "Equivalence of linear, free, liberal, structured program schemas is decidable in polynomial time", "authors": ["Sebastian Danicic", " Mark Harman", " Robert Mark Hierons", " John Howroyd"]}, {"title": "On the computational complexity of dynamic slicing problems for program schemas", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "Weisers's algorithm computes minimal path-faithful slices of function-linear, free program schemas", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "Decidability of strong equivalence for slices of linear, free, near-liberal program schemas", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "Characterizing minimal semanticspreserving slices of predicate-linear, free, liberal program schemas", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "Complexity of data dependence problems for program schemas with concurrency", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "On the computational complexity of dynamic slicing problems for program schemas", "authors": ["Sebastian Danicic", " Robert Hierons"]}, {"title": "On Symbolic Execution Based Intraprocedural Conditioned Slicing", "authors": ["Mohammed Daoudi"]}, {"title": "ConSUS: A scalable approach to conditioned slicing", "authors": ["Mohammed Daoudi", " Sebastian Danicic", " John Howroyd", " Mark Harman", " Chris Fox", " Lahcen Ouarbya"]}, {"title": "Program slicing: Methods and applications", "authors": ["Andrea De Lucia"]}, {"title": "Certification of programs for secure information flow", "authors": []}, {"title": "A Discipline of Programming", "authors": ["Edskar Wabe Dijkstra"]}, {"title": "Distributed slicing and partial re-execution for distributed programs", "authors": ["Evelyn Duesterwald", " Rajiv Gupta"]}, {"title": "The program dependence graph and its use in optimization", "authors": ["Jeanne Ferrante"]}, {"title": "Algorithm 97: Shortest path", "authors": []}, {"title": "Using program slicing in software maintenance", "authors": []}, {"title": "Maximum-minimum s\u00e4tze und verallgemeinerte faktoren von graphen", "authors": ["Tybor Gallai"]}, {"title": "Non--standard semantics for program slicing", "authors": ["Roberto Giacobazzi "]}, {"title": "Dynamic program slicing based on dependence graphs", "authors": ["Rajiv Gopal"]}, {"title": "Dynamic slicing: A generic analysis based on a natural semantics format", "authors": []}, {"title": "The CodeSurfer Slicing System", "authors": ["Grammatech Inc"]}, {"title": "Amorphous Program Slicing", "authors": ["Mark Harman", " David Wendell Binkley"]}, {"title": "An overview of program slicing", "authors": ["Mark Harman "]}, {"title": "Testability transformation", "authors": ["Mark Harman", " Lin Hu", " Robert Mark Hierons", " Joachim Wegener", " Harmen Sthamer", " Andr\u00ef\u00bf\u00bd Baresel"]}, {"title": "A formal study of slicing for multi-threaded programs with JVM concurrency primitives", "authors": ["John Hatcliff", " James Corbett", " Matthew Dwyer", " Stefan Sokolowski"]}, {"title": "Slicing software for model construction", "authors": ["John Hatcliff"]}, {"title": "Interprocedural slicing using dependence graphs", "authors": ["Susan Horwitz", " Thomas Reps"]}, {"title": "Interprocedural slicing using dependence graphs", "authors": ["Susan Horwitz", " Thomas Reps"]}, {"title": "Interprocedural dynamic slicing", "authors": ["Mariam Kamkar", " Nahid Shahmehri"]}, {"title": "Semantics-preserving procedure extraction", "authors": ["Raghavan Komondoor "]}, {"title": "Computation of dynamic slices for programs with arbitrary control flow", "authors": ["Bogdan Korel"]}, {"title": "Dynamic program slicing", "authors": ["Bogdan Korel "]}, {"title": "Dynamic program slicing in understanding of program execution", "authors": ["Bogdan Korel "]}, {"title": "Dynamic program slicing methods", "authors": ["Bogdan Korel "]}, {"title": "Slicing of state-based models", "authors": ["Bogdan Korel", " Inderdeep Singh", " Luay Tahat"]}, {"title": "Slicing of state based models", "authors": ["Bogdan Korel", " Inderdeep Singh", " Luay Tahat"]}, {"title": "Challenges in getting formal with viruses", "authors": ["Arun Lakhotia "]}, {"title": "On the control dependence in the program dependence graph", "authors": []}, {"title": "The program dependence graph in software development environments", "authors": []}, {"title": "A formal model of program dependences and its implications for software testing, debugging, and maintenance", "authors": []}, {"title": "Eliminating goto's while preserving program structure", "authors": ["Lyle Ramshaw"]}, {"title": "A new foundation for control-dependence and slicing for modern program structures", "authors": ["Venkatesh Prasad Ranganath", " Torben Amtoft", " Anindya Banerjee"]}, {"title": "A new foundation for control dependence and slicing for modern program structures", "authors": ["Venkatesh Prasad Ranganath", " Torben Amtoft", " Anindya Banerjee", " John Hatcliff"]}, {"title": "Interprocedural control dependence", "authors": ["Saurabh Sinha", " Mary Jean Harrold"]}, {"title": "Denotational Semantics: The Scott--Strachey Approach to Programming Language Theory (3rd ed", "authors": []}, {"title": "Depth-first search and linear graph algorithms", "authors": ["Robert Endre Tarjan"]}, {"title": "A survey of program slicing techniques", "authors": ["Frank Tip"]}, {"title": "The semantic approach to program slicing", "authors": []}, {"title": "Program slicing via fermat transformations", "authors": ["Martin Ward"]}, {"title": "Slicing as a program transformation", "authors": ["Martin Ward "]}, {"title": "Program Slices: Formal, Psychological, and Practical Investigations of an Automatic Program Abstraction Method", "authors": ["Mark Weiser"]}, {"title": "Program Slicing", "authors": ["Mark Weiser"]}, {"title": "The transitive closure of control dependence: The iterated join", "authors": ["Michael Weiss"]}, {"title": "A brief survey of program slicing", "authors": ["Baowen Xu", " Ju Qian", " Xiaofang Zhang", " Zhongqiang Wu"]}]},
{"title": "Adaptive Static Analysis via Learning with Bayesian Optimization", "time": "November 2018", "keyword": ["Programming Languages and Systems"], "abstract": "Building a cost-effective static analyzer for real-world programs is still regarded an art. One key contributor to this grim reputation is the difficulty in balancing the cost and the precision of an analyzer. An ideal analyzer should be adaptive to a given analysis task and avoid using techniques that unnecessarily improve precision and increase analysis cost. However, achieving this ideal is highly nontrivial, and it requires a large amount of engineering efforts.\nIn this article, we present a new learning-based approach for adaptive static analysis. In our approach, the analysis includes a sophisticated parameterized strategy that decides, for each part of a given program, whether to apply a precision-improving technique to that part or not. We present a method for learning a good parameter for such a strategy from an existing codebase via Bayesian optimization. The learnt strategy is then used for new, unseen programs. Using our approach, we developed partially flow- and context-sensitive variants of a realistic C static analyzer. The experimental results demonstrate that using Bayesian optimization is crucial for learning from an existing codebase. Also, they show that among all program queries that require flow- or context-sensitivity, our partially flow- and context-sensitive analysis answers 75% of them, while increasing the analysis cost only by 3.3\u00d7 of the baseline flow- and context-insensitive analysis, rather than 40\u00d7 or more of the fully sensitive version.\n", "author": [{"name": "Kihong Heo", "affiliation": "Seoul National University"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Korea"}, {"name": "Hongseok Yang", "affiliation": "University of Oxford"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University"}, {"name": "Kihong Heo", "affiliation": "Seoul National University"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Korea"}, {"name": "Hongseok Yang", "affiliation": "University of Oxford"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "The SLAM project: Debugging system software via static analysis", "authors": []}, {"title": "Probabilistic, modular and scalable inference of typestate specifications", "authors": []}, {"title": "A tutorial on Bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning", "authors": ["Eric Brochu"]}, {"title": "Modular verification of software components in C", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Convergence properties of ordinal comparison in the simulation of discrete event dynamic systems", "authors": []}, {"title": "HSF(C): A software verifier based on horn clauses", "authors": []}, {"title": "Automatically refining abstract interpretations", "authors": []}, {"title": "From tests to proofs", "authors": ["Ashutosh Gupta", " Rupak Majumdar"]}, {"title": "Abstractions from proofs", "authors": []}, {"title": "Software verification with BLAST", "authors": []}, {"title": "An explanation of ordinal optimization: Soft computing for hard problems", "authors": ["Yu-Chi Ho"]}, {"title": "Sequential model-based optimization for general algorithm configuration", "authors": ["Frank Hutter"]}, {"title": "A factor graph model for software bug finding", "authors": ["Ted Kremenek"]}, {"title": "Learning minimal abstractions", "authors": ["Percy Liang", " Omer Tripp"]}, {"title": "Merlin: Specification inference for explicit information flow problems", "authors": []}, {"title": "Typestate-based semantic code search over partial programs", "authors": ["Alon Mishne", " Sharon Shoham"]}, {"title": "Application of Bayesian approach to numerical methods of global and stochastic optimization", "authors": ["Jonas Mockus"]}, {"title": "Abstractions from tests", "authors": ["Mayur Naik", " Hongseok Yang", " Ghila Castelnuovo"]}, {"title": "CIL: Intermediate language and tools for analysis and transformation of C programs", "authors": [" Scott McPeak", " Shree Prakash Rahul"]}, {"title": "Termination proofs from tests", "authors": []}, {"title": "Selective context-sensitivity guided by impact pre-analysis", "authors": ["Hakjoo Oh", " Wonchan Lee", " Kihong Heo", " Hongseok Yang"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Sparrow", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Learning a strategy for adapting a program analysis via Bayesian optimisation", "authors": ["Hakjoo Oh", " Hongseok Yang"]}, {"title": "Gaussian Processes for Machine Learning (Adaptive Computation and Machine Learning)", "authors": []}, {"title": "Predicting program properties from \u201cbig code", "authors": ["Veselin Raychev", " Martin Vechev"]}, {"title": "Code completion with statistical language models", "authors": ["Veselin Raychev", " Martin Vechev"]}, {"title": "Dynamic inference of likely data preconditions over predicates by tree learning", "authors": ["Sriram Sankaranarayanan", " Swarat Chaudhuri", " Franjo Ivancic"]}, {"title": "Mining library specifications using inductive logic programming", "authors": ["Sriram Sankaranarayanan", " Franjo Ivancic"]}, {"title": "Stochastic optimization of floating-point programs with tunable precision", "authors": ["Eric Schkufza", " Rahul Sharma"]}, {"title": "A data driven approach for algebraic loop invariants", "authors": ["Rahul Sharma", " Saurabh Gupta", " Bharath Hariharan", " Alex Aiken", " Percy Liang"]}, {"title": "Verification as learning geometric concepts", "authors": ["Rahul Sharma", " Saurabh Gupta", " Bharath Hariharan", " Alex Aiken"]}, {"title": "Interpolants as classifiers", "authors": ["Rahul Sharma"]}, {"title": "Introspective analysis: Context-sensitivity, across the board", "authors": ["Yannis Smaragdakis", " George Kastrinis"]}, {"title": "Practical Bayesian optimization of machine-learning algorithms", "authors": ["Jasper Snoek", " Hugo Larochelle"]}, {"title": "Differential evolution\u2014A simple and efficient heuristic for global optimization over continuous spaces", "authors": ["Rainer Storn "]}, {"title": "Global optimization by basin-hopping and the lowest energy structures of lennard-jones clusters containing up to 110 atoms", "authors": []}, {"title": "On abstraction refinement for program analyses in datalog", "authors": ["Xin Zhang", " Ravi Mangal", " Radu Grigore", " Mayur Naik"]}, {"title": "Finding optimum abstractions in parametric dataflow analysis", "authors": ["Xin Zhang", " Mayur Naik"]}]},
{"title": "Transactional Sapphire: Lessons in High-Performance, On-the-fly Garbage Collection", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "Constructing a high-performance garbage collector is hard. Constructing a fully concurrent \u2018on-the-fly\u2019 compacting collector is much more so. We describe our experience of implementing the Sapphire algorithm as the first on-the-fly, parallel, replication copying, garbage collector for the Jikes RVM Java virtual machine (JVM). In part, we explain our innovations such as copying with hardware and software transactions, on-the-fly management of Java\u2019s reference types, and simple, yet correct, lock-free management of volatile fields in a replicating collector. We fully evaluate, for the first time, and using realistic benchmarks, Sapphire\u2019s performance and suitability as a low latency collector. An important contribution of this work is a detailed description of our experience of building an on-the-fly copying collector for a complete JVM with some assurance that it is correct. A key aspect of this is model checking of critical components of this complicated and highly concurrent system.\n", "author": [{"name": "Tomoharu Ugawa", "affiliation": "Kochi University of Technology, Kochi, Japan"}, {"name": "Carl G. Ritson", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Richard E. Jones", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Tomoharu Ugawa", "affiliation": "Kochi University of Technology, Kochi, Japan"}, {"name": "Carl G. Ritson", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Richard E. Jones", "affiliation": "University of Kent, Canterbury, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Optimizing memory transactions for multicore systems", "authors": ["Ali-Reza Adl-Tabatabai", " Christos Kozyrakis"]}, {"title": "Experiences porting the Jikes RVM to Linux/IA32", "authors": ["Bowen Alpern", " Maria Butrico", " Anthony Cocchi", " Julian Dolby", " Stephen Fink", " David Grove"]}, {"title": "A real-time Java virtual machine with applications in avionics", "authors": ["Austin Armbruster", " Jason Baker", " Antonio Cunei", " Chapman Flack", " David Holmes", " Filip Pizlo", " Edward Pla", " Marek Prochazka"]}, {"title": "A framework for reducing the cost of instrumented code, see PLDI 2001 (2001), 168--179", "authors": []}, {"title": "Tax-and-spend: Democratic scheduling for real-time garbage collection", "authors": ["Joshua Auerbach", " Perry Cheng", " David Grove", " Ben Biron", " Charlie Gracie", " Bill McCloskey", " Aleks"]}, {"title": "Comparison of Virtual Memory Manipulation Metrics", "authors": ["Azul"]}, {"title": "A real-time garbage collector with low overhead and consistent utilization", "authors": [" Perry Cheng"]}, {"title": "And then there were none: A stall-free real-time garbage collector for reconfigurable hardware", "authors": [" Perry Cheng"]}, {"title": "Parallel real-time garbage collection of multiple heaps in reconfigurable hardware, see Guyer and Grove (2014), 117--127", "authors": [" Perry Cheng"]}, {"title": "Thin locks: Featherweight synchronization for Java", "authors": [" Ravi Konuru", " Chet Murthy"]}, {"title": "List processing in real-time on a serial computer", "authors": []}, {"title": "The Treadmill, real-time garbage collection without motion sickness", "authors": []}, {"title": "A real-time Java virtual machine for avionics\u2014An experience report", "authors": ["Jason Baker", " Antonio Cunei", " Chapman Flack", " Filip Pizlo", " Marek Prochazka", " Jan Vitek", " Austin Armbruster", " Edward Pla"]}, {"title": "Virtual machine warmup blows hot and cold", "authors": ["Edd Barrett", " Carl Friedrich Bolz-Tereick", " Rebecca Killick", " Sarah Mount"]}, {"title": "Proceedings of the International Workshop on Memory Management", "authors": []}, {"title": "Algorithms for on-the-fly garbage collection", "authors": ["Mordechai Ben-Ari"]}, {"title": "Oil and water? High performance garbage collection in Java with MMTk", "authors": [" Perry Cheng"]}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": [" Robin Garner", " Chriss Hoffman", " Rotem Bentzur", " Amer Diwan", " Daniel Feinberg", " Daniel Frampton", " Martin Hirzel", " Antony Hosking", " Maria Jump", " Han Lee", " Aashish Phansalkar", " Darko Stefanovi\u0107", " Thomas VanDrunen", " Daniel von Dincklage"]}, {"title": "In or out? Putting write barriers in their place", "authors": []}, {"title": "Proceedings of the ACM SIGPLAN International Symposium on Memory Management", "authors": []}, {"title": "Foundations of the C++ concurrency memory model, see Gupta and Amarasinghe (2008), 68--78", "authors": []}, {"title": "Trading data space for reduced time and code space in real-time garbage collection on stock hardware", "authors": []}, {"title": "A parallel, real-time garbage collector, see PLDI 2001 (2001), 125--136", "authors": ["Perry Cheng "]}, {"title": "The Open Runtime Platform: A flexible high-performance managed runtime environment", "authors": ["Michal Cierniak", " Marsha Eng", " Neal Glew", " Brian Lewis"]}, {"title": "The Pauseless GC algorithm", "authors": ["Cliff Click", " Gil Tene"]}, {"title": "Garbage-First garbage collection", "authors": ["David Detlefs", " Christine Flood", " Steven Heller"]}, {"title": "A study of the allocation behavior of the SPECjvm98 Java benchmarks", "authors": ["Sylvia Dieckmann "]}, {"title": "On-the-fly garbage collection: An exercise in cooperation", "authors": [" Leslie Lamport"]}, {"title": "Portable, unobtrusive garbage collection for multiprocessor systems", "authors": ["Damien Doligez "]}, {"title": "A concurrent generational garbage collector for a multi-threaded implementation of ML", "authors": ["Damien Doligez "]}, {"title": "A generational on-the-fly garbage collector for Java", "authors": ["Tamar Domani"]}, {"title": "A comprehensive evaluation of object scanning techniques, see Boehm and Bacon (2011), 33--42", "authors": []}, {"title": "Java performance evaluation through rigorous replay compilation", "authors": ["Andy Georges", " Lieven Eeckhout"]}, {"title": "The Java Language Specification (Java SE 8 ed", "authors": ["James Gosling", " Bill Joy", " Guy Steele", " Gilad Bracha"]}, {"title": "Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation", "authors": []}, {"title": "Proceedings of the ACM SIGPLAN International Symposium on Memory Management", "authors": []}, {"title": "Scheduling Garbage Collection in Embedded Systems", "authors": ["Roger Henriksson"]}, {"title": "The Art of Multiprocessor Programming", "authors": ["Maurice Herlihy "]}, {"title": "Transactional memory: Architectural support for lock-free data structures", "authors": []}, {"title": "The SPIN Model Checker: Primer and Reference Manual", "authors": []}, {"title": "A survey of race bug detection techniques for multithreaded programmes", "authors": ["Shin Hong "]}, {"title": "Incremental collection of mature objects, see Bekkers and Cohen (1992), 388--403", "authors": []}, {"title": "Sapphire: Copying GC without stopping the world", "authors": []}, {"title": "Sapphire: Copying garbage collection without stopping the world", "authors": []}, {"title": "A semi-incremental garbage collection algorithm", "authors": []}, {"title": "Intel 64 and IA-32 Architectures Software Developer\u2019s Manual", "authors": ["Intel"]}, {"title": "The Collie: A wait-free compacting collector, see McKinley and Vechev (2012), 85--96", "authors": ["Balaji Iyengar", " Gil Tene", " Michael Wolf"]}, {"title": "Assessing the limits of program-specific garbage collection performance", "authors": ["Nicholas Jacek", " Meng-Chieh Chiu", " Benjamin Marlin"]}, {"title": "The Garbage Collection Handbook: The Art of Automatic Memory Management", "authors": ["Richard Jones", " Antony Hosking"]}, {"title": "Garbage Collection: Algorithms for Automatic Dynamic Memory Management", "authors": ["Richard Jones"]}, {"title": "A fast analysis for thread-local garbage collection with dynamic class loading", "authors": []}, {"title": "Replicating real-time garbage collector for Java", "authors": ["Tomas Kalibera"]}, {"title": "Handles revisited: Optimising performance and memory costs in a real-time collector, see Boehm and Bacon (2011), 89--98", "authors": ["Tomas Kalibera "]}, {"title": "Rigorous benchmarking in reasonable time", "authors": ["Tomas Kalibera "]}, {"title": "A black-box approach to understanding concurrency in DaCapo", "authors": ["Tomas Kalibera", " Matthew Mole", " Richard Jones"]}, {"title": "Scheduling hard real-time garbage collection", "authors": ["Tomas Kalibera", " Filip Pizlo"]}, {"title": "Scheduling real-time garbage collection on uniprocessors", "authors": ["Tomas Kalibera", " Filip Pizlo"]}, {"title": "The Compressor: Concurrent, incremental and parallel compaction", "authors": ["Haim Kermany "]}, {"title": "Staccato: A Parallel and Concurrent Real-time Compacting Garbage Collector for Multiprocessors", "authors": ["Bill McCloskey", " Perry Cheng"]}, {"title": "Concurrent GC leveraging transactional memory", "authors": ["Phil McGachey", " Ali-Reza Adl-Tabatabi", " Vijay Menon", " Bratin Saha"]}, {"title": "Proceedings of the ACM SIGPLAN International Symposium on Memory Management", "authors": []}, {"title": "Real-time replication-based garbage collection", "authors": ["Scott Nettles "]}, {"title": "Replication-based incremental copying collection, see Bekkers and Cohen (1992), 357--364", "authors": [" David Pierce"]}, {"title": "Java Native Interface 6", "authors": ["Oracle JNI"]}, {"title": "Barrier techniques for incremental tracing", "authors": []}, {"title": "Fine-grained adaptive biased locking", "authors": ["Filip Pizlo", " Daniel Frampton"]}, {"title": "Stopless: A real-time garbage collector for multiprocessors", "authors": ["Filip Pizlo", " Daniel Frampton", " Erez Petrank"]}, {"title": "Hierarchical real-time garbage collection", "authors": ["Filip Pizlo"]}, {"title": "Path specialization: Reducing phased execution overheads", "authors": ["Filip Pizlo", " Erez Petrank"]}, {"title": "A study of concurrent real-time garbage collectors, see Gupta and Amarasinghe (2008), 33--44", "authors": ["Filip Pizlo", " Erez Petrank"]}, {"title": "Schism: Fragmentation-tolerant real-time garbage collection", "authors": ["Filip Pizlo", " Lukasz Ziarek", " Petr Maj", " Ethan Blanton"]}, {"title": "Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation", "authors": ["PLD"]}, {"title": "On measuring garbage collection responsiveness", "authors": ["Tony Printezis"]}, {"title": "Hard real-time garbage collection for a Java chip multi-processor", "authors": ["Wolfgang Puffitsch"]}, {"title": "Design and analysis of a hard real-time garbage collector for a Java chip multi-processor", "authors": ["Wolfgang Puffitsch"]}, {"title": "An evaluation of Intel's Restricted Transactional Memory for CPAs", "authors": []}, {"title": "Exploring garbage collection with Haswell hardware transactional memory, see Guyer and Grove (2014), 105--115", "authors": [" Tomoharu Ugawa"]}, {"title": "Real-time GC in JeRTy\u2122VM using the return-barrier method", "authors": ["Hideaki Saiki", " Yoshiharu Konaka", " Tsuneyasu Komiya", " Masahiro Yasugi"]}, {"title": "C4: The continuously concurrent compacting collector, see Boehm and Bacon (2011), 79--88", "authors": ["Gil Tene", " Balaji Iyengar"]}, {"title": "Reference object processing in on-the-fly garbage collection, see Guyer and Grove (2014), 59--69", "authors": ["Tomoharu Ugawa", " Richard Jones"]}, {"title": "Repeatability, reproducibility, and rigor in systems research", "authors": ["Jan Vitek "]}, {"title": "Uniprocessor Garbage Collection Techniques", "authors": []}, {"title": "Barriers reconsidered, friendlier still&excl;, see McKinley and Vechev (2012), 37--48", "authors": ["Xi Yang", " Daniel Frampton"]}, {"title": "Racetrack: Efficient detection of data race conditions via adaptive tracking", "authors": ["Yuan Yu", " Tom Rodeheffer"]}]},
{"title": "A Widening Approach to Multithreaded Program Verification", "time": "October 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Pthread-style multithreaded programs feature rich thread communication mechanisms, such as shared variables, signals, and broadcasts. In this article, we consider the automated verification of such programs where an unknown number of threads execute a given finite-data procedure in parallel. Such procedures are typically obtained as predicate abstractions of recursion-free source code written in C or Java. Many safety problems over finite-data replicated multithreaded programs are decidable via a reduction to the \n in certain types of well-ordered infinite-state transition systems. On the other hand, in full generality, this problem is Ackermann-hard, which seems to rule out efficient algorithmic treatment.\nWe present a novel, sound, and complete yet empirically efficient solution. Our approach is to judiciously \n the original set of coverability targets by configurations that involve fewer threads and are thus easier to decide, and whose exploration may well be sufficient: if they turn out uncoverable, so are the original targets. To soften the impact of \u201cbad guesses\u201d\u2014configurations that turn out coverable\u2014the exploration is accompanied by a parallel engine that generates coverable configurations; none of these is ever selected for widening. Its job being merely to prevent bad widening choices, such an engine need not be complete for coverability analysis, which enables a range of existing partial (e.g., nonterminating) techniques. We present extensive experiments on multithreaded C programs, including device driver code from FreeBSD, Solaris, and Linux distributions. Our approach outperforms existing coverability methods by orders of magnitude.\n", "author": [{"name": "Alexander Kaiser", "affiliation": "University of Oxford, United Kingdom"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, United Kingdom"}, {"name": "Thomas Wahl", "affiliation": "Northeastern University, Boston, MA, United States"}, {"name": "Alexander Kaiser", "affiliation": "University of Oxford, United Kingdom"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, United Kingdom"}, {"name": "Thomas Wahl", "affiliation": "Northeastern University, Boston, MA, United States"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "16", "references": [{"title": "Well (and better) quasi-ordered transition systems", "authors": []}, {"title": "General decidability theorems for infinite-state systems", "authors": []}, {"title": "All for the price of few", "authors": []}, {"title": "SAT-solving the coverability problem for Petri nets", "authors": []}, {"title": "Symbolic counter abstraction for concurrent software", "authors": []}, {"title": "The Tina Tool, Release 2", "authors": []}, {"title": "Exponential space complete problems for Petri nets and commutative semigroups: Preliminary report", "authors": []}, {"title": "Petri nets with marking-dependent arc cardinality: Properties and analysis", "authors": []}, {"title": "Towards the automated verification of multithreaded Java programs", "authors": []}, {"title": "Counterexample-guided abstraction refinement for symmetric concurrent programs", "authors": []}, {"title": "Symmetry-aware predicate abstraction for shared-variable concurrent programs", "authors": []}, {"title": "Reset nets between decidability and undecidability", "authors": []}, {"title": "Asynchronous rendez-vous in distributed logic programming", "authors": []}, {"title": "On model checking for non-deterministic infinite-state systems", "authors": []}, {"title": "On the verification of broadcast protocols", "authors": []}, {"title": "Verification of parameterized concurrent programs by modular reasoning about data and control", "authors": []}, {"title": "Inductive data flow graphs", "authors": []}, {"title": "Ackermannian and primitive-recursive bounds with Dickson\u2019s lemma", "authors": []}, {"title": "On the omega-language expressive power of extended Petri nets", "authors": []}, {"title": "Forward analysis for WSTS, part II: Complete WSTS", "authors": []}, {"title": "Monotonic extensions of Petri nets: Forward and backward search revisited", "authors": []}, {"title": "Well-structured transition systems everywhere&excl; Theoretical Computer Science 256, 1--2, 63--92", "authors": []}, {"title": "Thread-modular model checking", "authors": []}, {"title": ")", "authors": []}, {"title": "Le probl\u00e8me de couverture pour les r\u00e9seaux de Petri: R\u00e9sultats classiques et d\u00e9veloppements r\u00e9cents", "authors": []}, {"title": "Symbolic data structure for sets of ", "authors": []}, {"title": "Technical Report", "authors": [" Belgiu"]}, {"title": "A complete abstract interpretation framework for coverability properties of WSTS", "authors": []}, {"title": "Expand, enlarge and check: New algorithms for the coverability problem of WSTS", "authors": []}, {"title": "On the efficient computation of the minimal coverability set for Petri nets", "authors": []}, {"title": "Reasoning about systems with many processes", "authors": []}, {"title": "Java Concurrency in Practice", "authors": []}, {"title": "Predicate abstraction and refinement for verifying multi-threaded programs", "authors": []}, {"title": "Threader: A constraint-based verifier for multi-threaded programs", "authors": []}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": "Dynamic cutoff detection in parameterized concurrent programs", "authors": []}, {"title": "Parallel program schemata", "authors": []}, {"title": "Incremental, inductive coverability", "authors": []}, {"title": "Coverability of reset Petri nets and other well-structured transition systems by partial deduction", "authors": []}, {"title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics", "authors": []}, {"title": "Petruchio: From dynamic networks to nets", "authors": []}, {"title": "Axiomatic Proof Techniques for Parallel Programs", "authors": []}, {"title": "Liveness with (0,1,\u221e )-counter abstraction", "authors": []}, {"title": "The covering and boundedness problems for vector addition systems", "authors": []}, {"title": "Minimal coverability set for Petri nets: Karp and Miller algorithm with pruning", "authors": []}, {"title": "Revisiting Ackermann-hardness for lossy counter machines and reset Petri nets", "authors": []}, {"title": "Old and new algorithms for minimal coverability sets", "authors": []}, {"title": "Ideal abstractions for well-structured transition systems", "authors": []}]},
{"title": "Foundations of Typestate-Oriented Programming", "time": "October 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Typestate reflects how the legal operations on imperative objects can change at runtime as their internal state changes. A typestate checker can statically ensure, for instance, that an object method is only called when the object is in a state for which the operation is well defined. Prior work has shown how modular typestate checking can be achieved thanks to access permissions and state guarantees. However, typestate was not treated as a primitive language concept: typestate checkers are an additional verification layer on top of an existing language. In contrast, a typestate-oriented programming (TSOP) language directly supports expressing typestates. For example, in the Plaid programming language, the typestate of an object directly corresponds to its class, and that class can change dynamically. Plaid objects have not only typestate-dependent interfaces but also typestate-dependent behaviors and runtime representations.\nThis article lays foundations for TSOP by formalizing a nominal object-oriented language with mutable state that integrates typestate change and typestate checking as primitive concepts. We first describe a statically typed language\u2014Featherweight Typestate (FT)\u2014where the types of object references are augmented with access permissions and state guarantees. We describe a novel flow-sensitive permission-based type system for FT. Because static typestate checking is still too rigid for some applications, we then extend this language into a gradually typed language\u2014Gradual Featherweight Typestate (GFT). This language extends the notion of gradual typing to account for typestate: gradual typestate checking seamlessly combines static and dynamic checking by automatically inserting runtime checks into programs. The gradual type system of GFT allows programmers to write dynamically safe code even when the static type checker can only partly verify it.\n", "author": [{"name": "Ronald Garcia", "affiliation": "University of British Columbia"}, {"name": "\u00c9ric Tanter", "affiliation": "University of Chile"}, {"name": "Roger Wolff", "affiliation": "Carnegie Mellon University"}, {"name": "Jonathan Aldrich", "affiliation": "Carnegie Mellon University"}, {"name": "Ronald Garcia", "affiliation": "University of British Columbia"}, {"name": "\u00c9ric Tanter", "affiliation": "University of Chile"}, {"name": "Roger Wolff", "affiliation": "Carnegie Mellon University"}, {"name": "Jonathan Aldrich", "affiliation": "Carnegie Mellon University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "38", "references": [{"title": "L3: A linear language with locations", "authors": ["Amal Ahmed", " Matthew Fluet"]}, {"title": "Typestate-oriented programming", "authors": ["Jonathan Aldrich", " Joshua Sunshine", " Darpan Saini"]}, {"title": "Minimizing reference count updating with deferred and anchored pointers for functional data structures", "authors": []}, {"title": "Modular typestate checking of aliased objects", "authors": ["Kevin Bierhoff "]}, {"title": "Practical API protocol checking with access permissions", "authors": ["Kevin Bierhoff"]}, {"title": "Adding dynamic types to C", "authors": ["Gavin Bierman", " Erik Meijer"]}, {"title": "Efficient hybrid typestate analysis by determining continuation-equivalent states", "authors": ["Eric Bodden"]}, {"title": "Checking interference with fractional permissions", "authors": ["John Boyl"]}, {"title": "Connecting effects and uniqueness with adoption", "authors": ["John Boyl"]}, {"title": "Typestates for objects", "authors": ["Robert DeLine "]}, {"title": "Fickle: Dynamic object re-classification", "authors": ["Sophia Drossopoulou", " Ferruccio Damiani", " Mariangiola Dezani-Ciancaglini"]}, {"title": "Effective typestate verification in the presence of aliasing", "authors": [" Eran Yahav", " Nurit Dor"]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": ["Erich Gamma", " Richard Helm", " Ralph Johnson"]}, {"title": "Featherweight Typestate", "authors": ["Ronald Garcia", " Roger Wolff", " \u00c9ric Tanter"]}, {"title": "Modular session types for distributed object-oriented programming", "authors": ["Simon Gay", " Vasco Vasconcelos", " Ant\u00f3nio Ravara", " Nils Gesbert"]}, {"title": "Linear logic", "authors": ["Jean-Yves Girard"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Atsushi Igarashi"]}, {"title": "Checking framework interactions with relationships", "authors": ["Ciera Jaspan "]}, {"title": "Hybrid type checking", "authors": ["Kenneth Knowles "]}, {"title": "An on-the-fly reference-counting garbage collector for Java", "authors": ["Yossi Levanoni "]}, {"title": "A type system for borrowing permissions", "authors": ["Karl Naden", " Robert Bocchino", " Jonathan Aldrich"]}, {"title": "Typestate-like analysis of multiple interacting objects", "authors": []}, {"title": "Deriving object typestates in the presence of inter-object references", "authors": [" Christian Grothoff"]}, {"title": "Types and Programming Languages", "authors": []}, {"title": "Reasoning about programs in continuation-passing style", "authors": ["Amr Sabry "]}, {"title": "A theory of typestate-oriented programming", "authors": ["Darpan Saini", " Joshua Sunshine"]}, {"title": "Gradual typing for functional languages", "authors": ["Jeremy Siek "]}, {"title": "Gradual typing for objects", "authors": ["Jeremy Siek "]}, {"title": "Gradual typing with unification-based inference", "authors": []}, {"title": "\u00c6minium: Freeing Programmers from the Shackles of Sequentiality", "authors": ["Sven Stork"]}, {"title": "Typestate: A programming language concept for enhancing software reliability", "authors": []}, {"title": "First-class state change in plaid", "authors": ["Joshua Sunshine", " Karl Naden", " Sven Stork", " Jonathan Aldrich"]}, {"title": "Substructural type systems", "authors": ["David Walker"]}, {"title": "Gradual typestate", "authors": ["Roger Wolff", " Ronald Garcia", " \u00c9ric Tanter"]}, {"title": "Gradual Featherweight Typestate", "authors": ["Roger Wolff", " Ronald Garcia", " \u00c9ric Tanter"]}]},
{"title": "Abstract Domains of Affine Relations", "time": "October 2014", "keyword": ["Programming Languages and Systems"], "abstract": "This article considers some known abstract domains for affine-relation analysis (ARA), along with several variants, and studies how they relate to each other. The various domains represent sets of points that satisfy affine relations over variables that hold machine integers and are based on an extension of linear algebra to modules over a ring (in particular, arithmetic performed modulo 2\n, for some machine-integer width \n).\nWe show that the abstract domains of M\u00fcller-Olm/Seidl (MOS) and King/S\u00f8ndergaard (KS) are, in general, incomparable. However, we give sound interconversion methods. In other words, we give an algorithm to convert a KS element \n to an overapproximating MOS element \n\u2014that is, \u03b3 (\n) \u2286 \u03b3 (\n\u2014as well as an algorithm to convert an MOS element \n to an overapproximating KS element \n\u2014that is, \u03b3 (\n) \u2286 \u03b3 (\n).\nThe article provides insight on the range of options that one has for performing ARA in a program analyzer:\n\u2014We describe how to perform a greedy, operator-by-operator abstraction method to obtain KS abstract transformers.\n\u2014We also describe a more global approach to obtaining KS abstract transformers that considers the semantics of an entire instruction, basic block, or other loop-free program fragment.\nThe latter method can yield best abstract transformers, and hence can be more precise than the former method. However, the latter method is more expensive.\nWe also explain how to use the KS domain for interprocedural program analysis using a bit-precise concrete semantics, but without bit blasting.\n", "author": [{"name": "Matt Elder", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Junghee Lim", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Tushar Sharma", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Tycho Andersen", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc., Madison, WI"}, {"name": "Matt Elder", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Junghee Lim", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Tushar Sharma", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Tycho Andersen", "affiliation": "University of Wisconsin, Madison, USA"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc., Madison, WI"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Grids: A domain for analyzing the distribution of numerical values", "authors": []}, {"title": "The Parma Polyhedra Library: Toward a complete set of numerical abstractions for the analysis and verification of hardware and software systems", "authors": []}, {"title": "A generic approach to the static analysis of concurrent programs with procedures", "authors": []}, {"title": "Proving properties of programs by structural induction", "authors": []}, {"title": "Counting solutions to linear and nonlinear constraints through Ehrhart polynomials: Applications to analyze and transform scientific programs", "authors": []}, {"title": "Systematic design of program analysis frameworks", "authors": []}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": []}, {"title": "The Yices SMT Solver", "authors": []}, {"title": "Abstract domains of affine relations", "authors": []}, {"title": "Efficient symbolic analysis for parallelizing compilers and performance estimators", "authors": []}, {"title": "Personal communication", "authors": []}, {"title": "Static analysis of arithmetical congruences", "authors": []}, {"title": "Discovering affine equalities using random interpretation", "authors": []}, {"title": "Precise interprocedural analysis using random interpretation", "authors": []}, {"title": "Spans in the module (&Zopf;", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "Retrieved September 2, 2014, from http://pop-art", "authors": []}, {"title": "Data flow analysis of applicative programs using minimal function graphs", "authors": []}, {"title": "Affine relationship among variables of a program", "authors": []}, {"title": "WALi: The Weighted Automata Library", "authors": []}, {"title": "Inferring congruence equations using SAT", "authors": []}, {"title": "Automatic abstraction for congruences", "authors": []}, {"title": "The interprocedural coincidence theorem", "authors": []}, {"title": "Improving pushdown system model checking", "authors": []}, {"title": "Extended weighted pushdown systems", "authors": []}, {"title": "A system for generating static analyzers for machine instructions", "authors": []}, {"title": "TSL: A system for generating abstract interpreters and its application to machine-code analysis", "authors": []}, {"title": "Abstract Interpretation of Partial-Evaluation Algorithms", "authors": []}, {"title": "Matrix Analysis and Applied Linear Algebra", "authors": []}, {"title": "Precise interprocedural analysis through linear algebra", "authors": []}, {"title": "Analysis of modular arithmetic", "authors": []}, {"title": "A generic framework for interprocedural analysis of numerical properties", "authors": []}, {"title": "Personal communication", "authors": []}, {"title": "Analysis of modular arithmetic", "authors": []}, {"title": "A relational framework for abstract interpretation", "authors": []}, {"title": "Two-level semantics and abstract interpretation", "authors": []}, {"title": "Counting solutions to Presburger formulas: How and why", "authors": []}, {"title": "Symbolic implementation of the best transformer", "authors": []}, {"title": "Weighted pushdown systems and their application to interprocedural dataflow analysis", "authors": []}, {"title": "Denotational Semantics", "authors": []}, {"title": "Two approaches to interprocedural data flow analysis", "authors": []}, {"title": "Algorithms for Matrix Canonical Forms", "authors": []}, {"title": "Estimation of nested loop execution time by integer arithmetic in convex polyhedra", "authors": []}, {"title": "Bilateral algorithms for symbolic abstraction", "authors": []}, {"title": "A method for symbolic computation of abstract operations", "authors": []}, {"title": "Hacker\u2019s Delight", "authors": [" Jr"]}]},
{"title": "Reactive Imperative Programming with Dataflow Constraints", "time": "November 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Dataflow languages provide natural support for specifying constraints between objects in dynamic applications, where programs need to react efficiently to changes in their environment. In this article, we show that one-way dataflow constraints, largely explored in the context of interactive applications, can be seamlessly integrated in any imperative language and can be used as a general paradigm for writing performance-critical reactive applications that require efficient incremental computations. In our framework, programmers can define ordinary statements of the imperative host language that enforce constraints between objects stored in special memory locations designated as \u201creactive.\u201d Reactive objects can be of any legal type in the host language, including primitive data types, pointers, arrays, and structures. Statements defining constraints are automatically re-executed every time their input memory locations change, letting a program behave like a spreadsheet where the values of some variables depend on the values of other variables. The constraint-solving mechanism is handled transparently by altering the semantics of elementary operations of the host language for reading and modifying objects. We provide a formal semantics and describe a concrete embodiment of our technique into C/C++, showing how to implement it efficiently in conventional platforms using off-the-shelf compilers. We discuss common coding idioms and relevant applications to reactive scenarios, including incremental computation, observer design pattern, data structure repair, and software visualization. The performance of our implementation is compared to problem-specific change propagation algorithms, as well as to language-centric approaches such as self-adjusting computation and subject/observer communication mechanisms, showing that the proposed approach is efficient in practice.\n", "author": [{"name": "Camil Demetrescu", "affiliation": "Sapienza University of Rome, Rome, Italy"}, {"name": "Irene Finocchi", "affiliation": "Sapienza University of Rome, Rome, Italy"}, {"name": "Andrea Ribichini", "affiliation": "Sapienza University of Rome, Rome, Italy"}, {"name": "Camil Demetrescu", "affiliation": "Sapienza University of Rome, Rome, Italy"}, {"name": "Irene Finocchi", "affiliation": "Sapienza University of Rome, Rome, Italy"}, {"name": "Andrea Ribichini", "affiliation": "Sapienza University of Rome, Rome, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Transactional Memory with Strong Atomicity Using Off-the-Shelf Memory Protection Hardware", "authors": ["Mart\u00edn Abadi", " Tim Harris"]}, {"title": "Spreadsheet Programming", "authors": ["Robin Abraham"]}, {"title": "Self-Adjusting Computation: (An Overview)", "authors": []}, {"title": "Imperative Self-Adjusting Computation", "authors": [" Amal Ahmed"]}, {"title": "Adaptive Functional Programming", "authors": []}, {"title": "An Experimental Analysis of Self-Adjusting Computation", "authors": [" Matthias Blume"]}, {"title": "Traceable Data Types for Self-Adjusting Computation", "authors": [" Ruy Ley-Wild", " Kanat Tangwongsan"]}, {"title": "A Consistent Semantics of Self-Adjusting Computation", "authors": [" Matthias Blume"]}, {"title": "Network Flows: Theory, Algorithms, and Applications", "authors": []}, {"title": "Incremental Evaluation of Computational Circuits", "authors": ["Bowen Alpern", " Roger Hoover"]}, {"title": "Principles of Constraint Programming", "authors": []}, {"title": "On a Routing Problem", "authors": ["Richard Bellmann"]}, {"title": "Constraint Propagation", "authors": ["Christian Bessiere"]}, {"title": "The LabVIEW Style Book", "authors": []}, {"title": "The Programming Language Aspects of ThingLab, a Constraint-Oriented Simulation Laboratory", "authors": ["Alan Borning"]}, {"title": "The SugarCubes Tool Box: A Reactive Java Framework", "authors": ["Frdric Boussinot "]}, {"title": "Lustre, a Declarative Language for Programming Synchronous Systems", "authors": ["Paul Caspi", " Daniel Pilaud", " Nicolas Halbwachs"]}, {"title": "A Debate on Language and Tool Support for Design Patterns", "authors": ["Craig Chambers", " Bill Harrison"]}, {"title": "Type-directed Automatic Incrementalization", "authors": ["Yan Chen", " Joshua Dunfield"]}, {"title": "Embedding Dynamic Dataflow in a Call-by-Value Language", "authors": []}, {"title": "Frapp\u00e9: Functional Reactive Programming in Java", "authors": ["Antony Courtney"]}, {"title": "Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Reversible Execution and Visualization of Programs with Leonardo", "authors": ["Pierluigi Crescenzi", " Camil Demetrescu", " Irene Finocchi"]}, {"title": "Incremental Evaluation for Attribute Grammars with Application to Syntax-Directed Editors", "authors": []}, {"title": "Fully Dynamic Algorithms for Path Problems on Directed Graphs", "authors": ["Camil Demetrescu"]}, {"title": "Smooth Animation of Algorithms in a Declarative Framework", "authors": ["Camil Demetrescu "]}, {"title": "A Data-Driven Graphical Toolkit for Software Visualization", "authors": ["Camil Demetrescu "]}, {"title": "Dynamic Graphs", "authors": ["Camil Demetrescu", " Irene Finocchi"]}, {"title": "Reactive Imperative Programming with Dataflow Constraints", "authors": ["Camil Demetrescu", " Irene Finocchi"]}, {"title": "Specifying Algorithm Visualizations: Interesting Events or State Mapping&quest; In Software Visualization", "authors": ["Camil Demetrescu", " Irene Finocchi"]}, {"title": "The Shortest Path Problem: Ninth DIMACS Implementation Challenge", "authors": []}, {"title": "Automatic Detection and Repair of Errors in Data Structures", "authors": ["Brian Demsky "]}, {"title": "Data Flow Schemas", "authors": []}, {"title": "Software Visualization: Visualizing the Structure, Behaviour, and Evolution of Software", "authors": ["Stephan Diehl"]}, {"title": "Two Algorithms for Maintaining Order in a List", "authors": ["Paul Dietz "]}, {"title": "Functional Reactive Animation", "authors": ["Conal Elliott "]}, {"title": "An Introduction to Design Patterns in C&plus;&plus; with Qt 4", "authors": ["Alan Ezust "]}, {"title": "Advanced Programming Language Design", "authors": []}, {"title": "Integrating Constraints with an Object-Oriented Language", "authors": ["Bjorn Freeman-Benson "]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": ["Erich Gamma", " Richard Helm", " Ralph Johnson"]}, {"title": "Implementing Incrementalization Across Object Abstraction", "authors": ["Michael Gorbovitski", " Tom Rothamel"]}, {"title": "System Design with SystemC", "authors": ["Thorsten Groetker", " Stan Liao", " Grant Martin"]}, {"title": "SIGNAL - A Data Flow-Oriented Language for Signal Processing", "authors": ["Paul Le Guernic", " Albert Benveniste", " Patricia Bournai"]}, {"title": "CEAL: A C-based Language for Self-Adjusting Computation", "authors": ["Matthew Hammer"]}, {"title": "Self-Adjusting Stack Machines", "authors": [" Georg Neis", " Yan Chen"]}, {"title": "Metastructures vs", "authors": ["Christian Holzbaur"]}, {"title": "Compiling Constraint Handling Rules into Prolog with Attributed Variables", "authors": ["Christian Holzbaur "]}, {"title": "Incremental Graph Evaluation", "authors": ["Roger Hoover"]}, {"title": "Report on the Programming Language Haskell, a Non-Strict Purely Functional Language (Version 1", "authors": ["Paul Hudak", " Simon Peyton Jones"]}, {"title": "Incremental Attribute Evaluation: A Flexible Algorithm for Lazy Update", "authors": []}, {"title": "Crossing State Lines: Adapting Object-Oriented Frameworks to Functional Reactive Languages", "authors": ["Daniel Ignatoff"]}, {"title": "The C Programming Language: ISO/IEC 9899:1999 Cor", "authors": ["ISO"]}, {"title": "Properties of a Model for Parallel Computations: Determinancy, Termination, Queueing", "authors": []}, {"title": "Computer Software", "authors": ["Alan Kay"]}, {"title": "Semantics of Context-Free Languages", "authors": []}, {"title": "Non-Monotonic Self-Adjusting Computation", "authors": ["Ruy Ley-Wild"]}, {"title": "Incrementalization Across Object Abstraction", "authors": [" Michael Gorbovitski", " Tom Rothamel"]}, {"title": "Static Caching for Incremental Computation", "authors": []}, {"title": "A Case for Automated Debugging Using Data Structure Repair", "authors": ["Muhammad Zubair Malik", " Khalid Ghori", " Bassem Elkarablieh"]}, {"title": "ReactiveML, a Reactive Extension to ML", "authors": ["Louis M"]}, {"title": "The Design and Implementation of a Dataflow Language for Scriptable Debugging", "authors": ["Guillaume Marceau", " Shriram Krishnamurthi"]}, {"title": "Flapjax: A Programming Language for Ajax Applications", "authors": [" Arjun Guha", " Jacob Baskin", " Michael Greenberg", " Aleks Bromfield"]}, {"title": "Iteration Constructs in Data-Flow Visual Programming Languages", "authors": ["Mauro Mosconi "]}, {"title": "Garnet: Comprehensive Support for Graphical, Highly-Interactive User Interfaces", "authors": []}, {"title": "The Amulet Environment: New Models for Effective User Interface Software Development", "authors": [" Andrew Faulring", " Andrew Mickish", " Alex Klimovitski"]}, {"title": "Functional Reactive Programming, Continued", "authors": ["Henrik Nilsson", " Antony Courtney"]}, {"title": "A Dataflow Approach to Event-Based Debugging", "authors": []}, {"title": "An Introduction to Operational Semantics", "authors": []}, {"title": "A Principled Taxonomy of Software Visualization", "authors": []}, {"title": "Incremental Computation via Function Caching", "authors": ["William Pugh "]}, {"title": "An Incremental Algorithm for a Generalization of the Shortest-Path Problem", "authors": ["Ganesan Ramalingam "]}, {"title": "Remote Attribute Updating for Language-Based Editors", "authors": [" Carla Marceau"]}, {"title": "Incremental Context-Dependent Analysis for Language-Based Editors", "authors": [" Tim Teitelbaum"]}, {"title": "Pavane: A System for Declarative Visualization of Concurrent Computations", "authors": ["Gruia-Catalin Roman"]}, {"title": "DITTO: Automatic Incrementalization of Data Structure Invariant Checks (in Java)", "authors": ["Ajeet Shankar "]}, {"title": "Software Visualization", "authors": [" John Domingue"]}, {"title": "UA Census 2000 TIGER/Line Files", "authors": []}, {"title": "Using Model Dataflow Graphs to Reduce the Storage Requirements of Constraints", "authors": []}, {"title": "Lessons Learned About One-Way, Dataflow Constraints in the Garnet and Amulet Graphical Toolkits", "authors": [" Richard Halterman", " Rich McDaniel", " Rob Miller", " Pedro Szekely"]}, {"title": "Lessons Learned from Programmers' Experiences with One-way Constraints", "authors": [" Richard Halterman", " Rob Miller", " Pedro Szekely", " David Kosbie"]}, {"title": "Functional Reactive Programming from First Principles", "authors": ["Zhanyong Wan "]}, {"title": "Programming Finite-Domain Constraint Propagators in Action Rules", "authors": ["Neng-Fa Zhou"]}]},
{"title": "Practical Fine-Grained Information Flow Control Using Laminar", "time": "November 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Decentralized Information Flow Control (DIFC) is a promising model for writing programs with powerful, end-to-end security guarantees. Current DIFC systems that run on commodity hardware can be broadly categorized into two types: language-level and operating system-level DIFC. Language solutions provide no guarantees against security violations on system resources such as files and sockets. Operating system solutions mediate accesses to system resources but are either inefficient or imprecise at monitoring the flow of information through fine-grained program data structures. This article describes Laminar, the first system to implement DIFC using a unified set of abstractions for OS resources and heap-allocated objects. Programmers express security policies by labeling data with secrecy and integrity labels and access the labeled data in \n. Laminar enforces the security policies specified by the labels at runtime. Laminar is implemented using a modified Java virtual machine and a new Linux security module. This article shows that security methods ease incremental deployment and limit dynamic security checks by retrofitting DIFC policies on four application case studies. Replacing the applications' ad hoc security policies changes less than 10% of the code and incurs performance overheads from 5% to 56%. Compared to prior DIFC systems, Laminar supports a more general class of multithreaded DIFC programs efficiently and integrates language and OS abstractions.\n", "author": [{"name": "Donald E. Porter", "affiliation": "Stony Brook University, Stony Brook, NY"}, {"name": "Michael D. Bond", "affiliation": "Ohio State University, Columbus, OH"}, {"name": "Indrajit Roy", "affiliation": "Hewlett Packard Labs, Palo Alto, CA"}, {"name": "Kathryn S. Mckinley", "affiliation": "Microsoft Research, WA"}, {"name": "Emmett Witchel", "affiliation": "The University of Texas at Austin, Austin, TX"}, {"name": "Donald E. Porter", "affiliation": "Stony Brook University, Stony Brook, NY"}, {"name": "Michael D. Bond", "affiliation": "Ohio State University, Columbus, OH"}, {"name": "Indrajit Roy", "affiliation": "Hewlett Packard Labs, Palo Alto, CA"}, {"name": "Kathryn S. Mckinley", "affiliation": "Microsoft Research, WA"}, {"name": "Emmett Witchel", "affiliation": "The University of Texas at Austin, Austin, TX"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "The jalape\u00f1o virtual machine", "authors": []}, {"title": "Sharing mobile code securely with information flow control", "authors": []}, {"title": "Predictive black-box mitigation of timing channels", "authors": []}, {"title": "Secure Computer Systems: Mathematical Foundations", "authors": []}, {"title": "Integrity Considerations for Secure Computer Systems", "authors": []}, {"title": "Enforcing authorization policies using transactional memory introspection", "authors": [" \u00dalfar Erlingsson"]}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": []}, {"title": "Barriers: Friend or foe&quest; In Proceedings of the 4th International Symposium on Memory Management", "authors": []}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": []}, {"title": "Fine-grained information flow analysis and enforcement in a java virtual machine", "authors": []}, {"title": "Language-based information erasure", "authors": []}, {"title": "Decentralized robustness", "authors": []}, {"title": "A lattice model of secure information flow", "authors": []}, {"title": "Certification of programs for secure information flow", "authors": []}, {"title": "Department of Defense Trusted Computer System Evaluation Criteria (DOD 5200", "authors": ["Department of Defense"]}, {"title": "Policy Management and Decentralized Debugging in the Asbestos Operating System", "authors": []}, {"title": "Security policies and security models", "authors": []}, {"title": "Automaton-based confidentiality monitoring of concurrent programs", "authors": []}, {"title": "The confused deputy: (Or why capabilities might have been invented)", "authors": []}, {"title": "From trusted to secure: Building and executing applications that enforce system security", "authors": []}, {"title": "A temporal logic characterisation of observational determinism", "authors": []}, {"title": "A retrospective on the VAX VMM security kernel", "authors": []}, {"title": "Timing- and termination-sensitive secure information flow: Exploring a new approach", "authors": []}, {"title": "Information flow control for standard OS abstractions", "authors": []}, {"title": "A note on the confinement problem", "authors": []}, {"title": "Capability-Based Computer Systems", "authors": []}, {"title": "Fabric: A platform for secure distributed computation and storage", "authors": []}, {"title": "Integrating flexible support for security policies into the Linux operating system", "authors": []}, {"title": "The Java Memory Model", "authors": []}, {"title": "LMbench: Portable tools for performance analysis", "authors": []}, {"title": "JFlow: Practical mostly-static information flow control", "authors": []}, {"title": "A decentralized model for information flow control", "authors": []}, {"title": "Jif: Java Information Flow", "authors": []}, {"title": "Enforcing robust declassification", "authors": []}, {"title": "Remote Policy Enforcement Using Java Virtual Machine", "authors": []}, {"title": "A virtual machine based information flow control system for policy enforcement", "authors": []}, {"title": "Design and implementation of transactional constructs for C/C&plus;&plus;", "authors": []}, {"title": "", "authors": []}, {"title": "May 12th Description of Final Fields", "authors": []}, {"title": "Laminar: Practical fine-grained decentralized information flow control", "authors": []}, {"title": "Dynamic vs", "authors": []}, {"title": "Language-based information-flow security", "authors": []}, {"title": "EROS: A fast capability system", "authors": []}, {"title": "Dynamic dependency monitoring to secure information flow", "authors": []}, {"title": "Flow Caml in a nutshell", "authors": []}, {"title": "SPECjbb2000 Documentation (release 1", "authors": ["St"]}, {"title": "Execution leases: A hardware-supported mechanism for enforcing strong non-interference", "authors": []}, {"title": "Complete information flow tracking from the gates up", "authors": []}, {"title": "RIFLE: An architectural framework for user-centric information-flow security", "authors": []}, {"title": "Labels and event processes in the Asbestos operating system", "authors": []}, {"title": "Provably correct runtime enforcement of non-interference properties", "authors": []}, {"title": "Probabilistic noninterference in a concurrent language", "authors": []}, {"title": "Linux security modules: General security support for the Linux kernel", "authors": []}, {"title": "Observational determinism for concurrent program security", "authors": []}, {"title": "Robust declassification", "authors": []}, {"title": "Making information flow explicit in HiStar", "authors": []}, {"title": "Securing distributed systems with information flow control", "authors": []}, {"title": "Hardware enforcement of application security policies using tagged memory", "authors": []}, {"title": "Predictive mitigation of timing channels in interactive systems", "authors": ["Danfeng Zhang", " Aslan Askarov"]}, {"title": "Language-based control and mitigation of timing channels", "authors": []}]},
{"title": "A Scheduling Framework for Spatial Architectures Across Multiple Constraint-Solving Theories", "time": "November 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Spatial architectures provide energy-efficient computation but require effective scheduling algorithms. Existing heuristic-based approaches offer low compiler/architect productivity, little optimality insight, and low architectural portability.\nWe seek to develop a spatial-scheduling framework by utilizing constraint-solving theories and find that architecture primitives and scheduler responsibilities can be related through five abstractions: computation placement, data routing, event timing, resource utilization, and the optimization objective. We encode these responsibilities as 20 mathematical constraints, using SMT and ILP, and create schedulers for the TRIPS, DySER, and PLUG architectures. Our results show that a general declarative approach using constraint solving is implementable, is practical, and can outperform specialized schedulers.\n", "author": [{"name": "Tony Nowatzki", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Michael Sartin-Tarm", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Lorenzo De Carli", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Karthikeyan Sankaralingam", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Cristian Estan", "affiliation": "Broadcom, CA"}, {"name": "Behnam Robatmili", "affiliation": "Qualcomm Research Silicon Valley, Santa Clara, CA"}, {"name": "Tony Nowatzki", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Michael Sartin-Tarm", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Lorenzo De Carli", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Karthikeyan Sankaralingam", "affiliation": "University of Wisconsin-Madison, Madison, WI"}, {"name": "Cristian Estan", "affiliation": "Broadcom, CA"}, {"name": "Behnam Robatmili", "affiliation": "Qualcomm Research Silicon Valley, Santa Clara, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Compilers: Principles, Techniques, and Tools (2nd ed", "authors": [" Ravi Sethi"]}, {"title": "A Theoretical and Practical Approach to Instruction Scheduling on Spatial Architectures", "authors": []}, {"title": "Functional synthesis of digital systems with TASS", "authors": ["Said Amellal "]}, {"title": "Scanning polyhedra with DO loops", "authors": ["Corinne Ancourt "]}, {"title": "Energy-performance tradeoffs in processor architecture and circuit design: A marginal cost analysis", "authors": ["Omid Azizi", " Aqeel Mahesri"]}, {"title": "Software Synthesis from Dataflow Graphs", "authors": []}, {"title": "The future of microprocessors", "authors": []}, {"title": "Scaling to the end of silicon with EDGE architectures", "authors": ["Doug Burger", " Michael Dahlin", " Calvin Lin", " Jim Burrill", " William Yoder"]}, {"title": "Satisfiability Modulo the Theory of Costs: Foundations and Applications", "authors": ["Aless", " Anders Franz\u00e9n", " Alberto Griggio", " Roberto Sebastiani"]}, {"title": "Application-specific processing on a general-purpose core via transparent instruction set customization", "authors": ["Nathan Clark", " Manjunath Kudlur", " Hyunchul Park", " Scott Mahlke"]}, {"title": "Synthesis algorithm for application-specific homogeneous processor networks", "authors": ["Jason Cong", " Karthik Gururaj", " Guoling Han"]}, {"title": "A spatial path scheduling algorithm for EDGE architectures", "authors": [" Xia Chen", " Doug Burger"]}, {"title": "PLUG: Flexible lookup modules for rapid deployment of new protocols in high-speed routers", "authors": ["Lorenzo De Carli", " Yi Pan", " Amit Kumar", " Cristian Estan"]}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo de Moura "]}, {"title": "SoftHV: A HW/SW co-designed processor with horizontal and vertical fusion", "authors": ["Abhishek Deb", " Josep Maria Codina"]}, {"title": "Efficient formulation for optimal modulo schedulers", "authors": []}, {"title": "Optimal Loop Parallelization under Register Constraints", "authors": ["Christine Eisenbeis "]}, {"title": "Bulldog: A Compiler for Vliw Architectures", "authors": []}, {"title": "Parallel processor scheduling with delay constraints", "authors": [" Jon Feldman"]}, {"title": "Dark silicon and the end of multicore scaling", "authors": ["Hadi Esmaeilzadeh", " Emily Blem", " Karthikeyan Sankaralingam"]}, {"title": "Neural acceleration for general-purpose approximate programs", "authors": ["Hadi Esmaeilzadeh", " Adrian Sampson", " Luis Ceze"]}, {"title": "Modulo scheduling for highly customized datapaths to increase hardware reusability", "authors": ["Kevin Fan", " Hyun hul Park", " Manjunath Kudlur"]}, {"title": "Fine-grain scheduling under resource constraints", "authors": ["Paul Feautrier"]}, {"title": "An evaluation of the TRIPS computer system", "authors": ["Mark Gebhart", " Jeff Diamond", " Paul Gratz", " Mario Marino", " Nitya Ranganathan", " Behnam Robatmili", " Aaron Smith", " James Burrill", " Doug Burger"]}, {"title": "", "authors": [" Sue Ann Hong"]}, {"title": "A framework for resource-constrained rate-optimal software pipelining", "authors": ["Ramaswamy Govindarajan"]}, {"title": "DySER: Unifying functionality and parallelism specialization for energy efficient computing", "authors": ["Venkatraman Govindaraju", " Chen-Han Ho", " Tony Nowatzki", " Jatin Chhugani", " Nadathur Satish", " Karthikeyan Sankaralingam"]}, {"title": "Dynamically specialized datapaths for energy efficient computing", "authors": ["Venkatraman Govindaraju", " Chen-Han Ho"]}, {"title": "Bundled execution of recurring traces for energy-efficient general purpose processing", "authors": ["Shantanu Gupta", " Shuguang Feng", " Amin Ansari", " Scott Mahlke"]}, {"title": "Toward dark silicon in servers", "authors": ["Nikos Hardavellas", " Michael Ferdman", " Babak Falsafi"]}, {"title": "Logic, optimization and constraint programming", "authors": []}, {"title": "Mixed logical-linear programming", "authors": []}, {"title": "The design of dynamically reconfigurable datapath coprocessors", "authors": ["Zhining Huang", " Sharad Malik", " Nahri Moreano"]}, {"title": "Denali: A goal-directed superoptimizer", "authors": ["Rajeev Joshi", " Greg Nelson"]}, {"title": "CARS: A new code generation framework for clustered ILP processors", "authors": ["Krishnan Kailas", " Ashok Agrawala"]}, {"title": "Decision Procedures: An Algorithmic Point of View", "authors": ["Daniel Kroening "]}, {"title": "Orchestrating the execution of stream programs on multicore platforms", "authors": ["Manjunath Kudlur "]}, {"title": "Design and implementation of the PLUG architecture for programmable and efficient network lookups", "authors": ["Amit Kumar", " Lorenzo De Carli", " Sung Jin Kim", " Marc de Kruijf", " Karthikeyan Sankaralingam", " Cristian Estan"]}, {"title": "Space-time scheduling of instruction-level parallelism on a raw machine", "authors": ["Walter Lee", " Rajeev Barua", " Matthew Frank", " Devabhaktuni Srikrishna", " Jonathan Babb", " Vivek Sarkar"]}, {"title": "Instruction scheduling for a tiled dataflow architecture", "authors": ["Martha Mercaldi", " Steven Swanson", " Andrew Petersen", " Andrew Putnam", " Andrew Schwerin", " Mark Oskin"]}, {"title": "Modeling instruction placement on a spatial architecture", "authors": ["Martha Mercaldi", " Steven Swanson", " Andrew Petersen", " Andrew Putnam", " Andrew Schwerin", " Mark Oskin"]}, {"title": "Tartan: Evaluating spatial computation for whole program execution", "authors": ["Mahim Mishra", " Tiberiu Chelcea", " Girish Venkataramani"]}, {"title": "Static placement, dynamic issue (SPDI) scheduling for EDGE architectures", "authors": ["Ramadass Nagarajan", " Doug Burger", " Calvin Lin"]}, {"title": "Unified assign and schedule: A new approach to scheduling for clustered register file microarchitectures", "authors": ["Emre \u00d6zer", " Sanjeev Banerjia"]}, {"title": "ILP-Based Resource-Aware Compilation", "authors": ["Jens Palsberg "]}, {"title": "Edge-centric modulo scheduling for coarse-grained reconfigurable architectures", "authors": ["Hyunchul Park", " Kevin Fan", " Taewook Oh", " Heeseok Kim"]}, {"title": "The Omega test: A fast and practical integer programming algorithm for dependence analysis", "authors": ["William Pugh"]}, {"title": "Constraint centric scheduling guide", "authors": ["Michael Sartin-Tarm", " Tony Nowatzki", " Lorenzo De Carli", " Karthikeyan Sankaralingam"]}, {"title": "A decomposition-based constraint optimization approach for statically scheduling task graphs with communication delays to multiprocessors", "authors": ["Nadathur Satish", " Kaushik Ravindran"]}, {"title": "Deciding combinations of theories", "authors": []}, {"title": "WaveScalar", "authors": ["Steven Swanson", " Ken Michelson", " Andrew Schwerin"]}, {"title": "FlexCore: Utilizing exposed datapath control for efficient computing", "authors": []}, {"title": "Conservation cores: Reducing the energy of mature computations", "authors": ["Ganesh Venkatesh", " Jack Sampson", " Nathan Goulding", " Saturnino Garcia", " Vladyslav Bryksin", " Jose Lugo-Martinez", " Steven Swanson"]}, {"title": "An integer linear-programming model for machine scheduling", "authors": []}, {"title": "Baring it all to software: RAW machines", "authors": ["Elliot Waingold", " Michael Taylor", " Devabhaktuni Srikrishna", " Vivek Sarkar", " Walter Lee", " Victor Lee", " Jang Kim", " Matthew Frank", " Peter Finch", " Rajeev Barua", " Jonathan Babb", " Saman Amarasinghe"]}, {"title": "Shared reconfigurable architectures for CMPS", "authors": []}, {"title": "Integer and Combinatorial Optimization", "authors": []}]},
{"title": "Interval Analysis and Machine Arithmetic: Why Signedness Ignorance Is Bliss", "time": "January 2015", "keyword": ["Programming Languages and Systems"], "abstract": "The most commonly used integer types have fixed bit-width, making it possible for computations to \u201cwrap around,\u201d and many programs depend on this behaviour. Yet much work to date on program analysis and verification of integer computations treats integers as having infinite precision, and most analyses that do respect fixed width lose precision when overflow is possible. We present a novel integer interval abstract domain that correctly handles wrap-around. The analysis is signedness agnostic. By treating integers as strings of bits, only considering signedness for operations that treat them differently, we produce precise, correct results at a modest cost in execution time.\n", "author": [{"name": "Graeme Gange", "affiliation": "The University of Melbourne, Australia"}, {"name": "Jorge A. Navas", "affiliation": "The University of Melbourne, Australia"}, {"name": "Peter Schachte", "affiliation": "The University of Melbourne, Australia"}, {"name": "Harald S\u00f8ndergaard", "affiliation": "The University of Melbourne, Australia"}, {"name": "Peter J. Stuckey", "affiliation": "The University of Melbourne, Australia"}, {"name": "Graeme Gange", "affiliation": "The University of Melbourne, Australia"}, {"name": "Jorge A. Navas", "affiliation": "The University of Melbourne, Australia"}, {"name": "Peter Schachte", "affiliation": "The University of Melbourne, Australia"}, {"name": "Harald S\u00f8ndergaard", "affiliation": "The University of Melbourne, Australia"}, {"name": "Peter J. Stuckey", "affiliation": "The University of Melbourne, Australia"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "5", "references": [{"title": "WYSINWYX: What You See Is Not What You Execute", "authors": ["Gogul Balakrishnan"]}, {"title": "Analyzing memory accesses in x86 executables", "authors": ["Gogul Balakrishnan "]}, {"title": "An alternative to SAT-based approaches for bit-vectors", "authors": ["S\u00e9bastien Bardin", " Philippe Herrmann"]}, {"title": "Design and implementation of a special-purpose static program analyzer for safety-critical real-time embedded software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9r\u00f4me Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Formal verification of a C value analysis based on abstract interpretation", "authors": [" Vincent Laporte", " Andre Maroneze"]}, {"title": "Automatic abstraction for intervals using boolean formulae", "authors": ["J\u00f6rg Brauer "]}, {"title": "Program transformations to fix C integers", "authors": ["Zack Coker "]}, {"title": "CCured in the real world", "authors": ["Jeremy Condit", " Matthew Harren", " Scott McPeak"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Patrick Cousot "]}, {"title": "Comparing the Galois connection and widening/narrowing approaches to abstract interpretation", "authors": ["Patrick Cousot "]}, {"title": "Understanding integer overflow in C/C&plus;&plus;", "authors": ["Will Dietz", " Peng Li", " John Regehr"]}, {"title": "Static contract checking with abstract interpretation", "authors": ["Manuel F\u00e4hndrich "]}, {"title": "Termination analysis of imperative programs using bitvector arithmetic", "authors": ["Stephan Falke", " Deepak Kapur"]}, {"title": "LLBNC: Improved bounded model checking of C programs using LLVM", "authors": ["Stephan Falke", " Florian Merz"]}, {"title": "Abstract interpretation over non-lattice abstract domains", "authors": ["Graeme Gange", " Peter Schachte", " Harald S\u00f8ndergaard"]}, {"title": "Solving difference constraints over modular arithmetic", "authors": ["Graeme Gange", " Harald S\u00f8ndergaard"]}, {"title": "Polynomial precise interval analysis revisited", "authors": ["Thomas Gawlitza", " J\u00e9r\u00f4me Leroux", " Jan Reineke", " Helmut Seidl", " Gr\u00e9goire Sutre"]}, {"title": "Constraint solving on modular integers", "authors": ["Arnaud Gotlieb", " Michel Leconte"]}, {"title": "Static analysis of arithmetical congruences", "authors": ["Philippe Granger"]}, {"title": "Static analyses of linear congruence equalities among variables of a program", "authors": ["Philippe Granger"]}, {"title": "Automatic abstraction for congruences", "authors": ["Andy King "]}, {"title": "Extending a CP solver with congruences as domains for program verification", "authors": ["Michel Leconte "]}, {"title": "Accelerated data-flow analysis", "authors": ["J\u00e9r\u00f4me Leroux "]}, {"title": "Automatic repair of overflowing expressions with abstract interpretation", "authors": ["Francesco Logozzo "]}, {"title": "Programming with Constraints: An Introduction", "authors": []}, {"title": "Constraint satisfaction over bit-vectors", "authors": []}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "The modulo interval: A simple and practical representation for program analysis", "authors": ["Tsuneo Nakanishi", " Kazuki Joe"]}, {"title": "Signedness-agnostic program analysis: Precise integer bounds for low-level code", "authors": [" Peter Schachte", " Harald S\u00f8ndergaard"]}, {"title": "Principles of Program Analysis", "authors": ["Flemming Nielson", " Hanne Riis Nielson"]}, {"title": "Deriving abstract transfer functions for analyzing embedded software", "authors": ["John Regehr "]}, {"title": "Intermediate-representation recovery from low-level code", "authors": ["Thomas Reps", " Gogul Balakrishnan"]}, {"title": "A fast and low-overhead technique to secure programs against integer overflows", "authors": []}, {"title": "Compiler Design: Analysis and Transformation", "authors": ["Helmut Seidl", " Reinhard Wilhelm"]}, {"title": "Executable analysis using abstract interpretation with circular linear progressions", "authors": []}, {"title": "Taming the wrapping of integer arithmetic", "authors": ["Axel Simon "]}, {"title": "A class of polynomially solvable range constraints for interval analysis without widenings and narrowings", "authors": ["Zhendong Su "]}, {"title": "The design and implementation of a non-iterative range analysis algorithm on a production compiler", "authors": []}, {"title": "Towards optimization-safe systems: Analyzing the impact of undefined behavior", "authors": ["Xi Wang", " Nickolai Zeldovich"]}, {"title": "Hacker\u2019s Delight", "authors": []}, {"title": "IntPatch: Automatically fix integer-overflow-to-buffer-overflow vulnerability at compile-time", "authors": ["Chao Zhang", " Tielei Wang", " Tao Wei", " Yu Chen"]}, {"title": "Using type analysis in compiler to mitigate integer-overflow-to-buffer-overflow threat", "authors": ["Chao Zhang", " Wei Zou", " Tielei Wang", " Yu Chen"]}]},
{"title": "MCALIB: Measuring Sensitivity to Rounding Error with Monte Carlo Programming", "time": "April 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Runtime analysis provides an effective method for measuring the sensitivity of programs to rounding errors. To date, implementations have required significant changes to source code, detracting from their widespread application. In this work, we present an open source system that automates the quantitative analysis of floating point rounding errors through the use of C-based source-to-source compilation and a Monte Carlo arithmetic library. We demonstrate its application to the comparison of algorithms, detection of catastrophic cancellation, and determination of whether single precision floating point provides sufficient accuracy for a given application. Methods for obtaining quantifiable measurements of sensitivity to rounding error are also detailed.\n", "author": [{"name": "Michael Frechtling", "affiliation": "The University of Sydney, Darlington, NSW, Australia"}, {"name": "Philip H. W. Leong", "affiliation": "The University of Sydney, Darlington, NSW, Australia"}, {"name": "Michael Frechtling", "affiliation": "The University of Sydney, Darlington, NSW, Australia"}, {"name": "Philip H. W. Leong", "affiliation": "The University of Sydney, Darlington, NSW, Australia"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Design of floating point units for interval arithmetic", "authors": ["Alex", " Mircea Vladutiu"]}, {"title": "Estimation of round-off errors on several computer architectures", "authors": ["Jalil Asserrhine", " Jean-Marie Chesneaux"]}, {"title": "Design and implementation of a special-purpose static program analyzer for safety-critical real-time embedded software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9r\u00f4me Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Algorithms for Minimization without Derivatives", "authors": []}, {"title": "The design of the Boost interval arithmetic library", "authors": ["Herve Br\u00f6nnimann", " Guillaume Melquiond"]}, {"title": "Profiling floating point value ranges for reconfigurable implementation", "authors": []}, {"title": "Profile-directed speculative optimization of reconfigurable floating point data paths", "authors": []}, {"title": "A floating-point unit using stochastic arithmetic compliant with the IEEE-754 standard", "authors": ["Roselyne Chotin "]}, {"title": "Perturbation analysis for word-length optimization", "authors": []}, {"title": "Word-length optimization for differentiable nonlinear systems", "authors": []}, {"title": "The multiple wordlength paradigm", "authors": []}, {"title": "Optimum wordlength allocation", "authors": []}, {"title": "Wordlength optimization for linear digital signal processing", "authors": []}, {"title": "Iterative data-flow analysis, revisited", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Patrick Cousot "]}, {"title": "Certification of bounds on expressions involving rounded operators", "authors": ["Marc Daumas "]}, {"title": "Affine arithmetic: Concepts and applications", "authors": []}, {"title": "Towards an industrial use of FLUCTUAT on safety-critical avionics software", "authors": ["David Delmas", " Eric Goubault", " Sylvie Putot", " Jean Souyris", " Karim Tekkal"]}, {"title": "Astr\u00e9e: From research to industry", "authors": ["David Delmas "]}, {"title": "Numerical Methods for Unconstrained Optimization and Nonlinear Equations", "authors": []}, {"title": "Static Verification of Dynamic Properties", "authors": ["Alain Deutsch"]}, {"title": "The LINPACK benchmark: Past, present and future", "authors": [" Piotr Luszczek"]}, {"title": "IEEE standard for floating-point arithmetic", "authors": ["Floating-Point Working Group"]}, {"title": "A compiler approach to scalable concurrent-program design", "authors": ["Ian Foster "]}, {"title": "MPFR: A multiple-precision binary floating-point library with correct rounding", "authors": ["Laurent Fousse", " Guillaume Hanrot", " Vincent Lef\u00e8vre", " Patrick P\u00e9lissier"]}, {"title": "Robust Regression: An R and S-PLUS Companion to Applied Regression", "authors": ["John Fox"]}, {"title": "An FPGA-based floating point unit for rounding error analysis", "authors": []}, {"title": "Automating customisation of floating-point designs", "authors": ["Altaf Abdul Gaffar", " Wayne Luk", " Nabeel Shirazi"]}, {"title": "Unifying bit-width optimisation for fixed-point and floating-point designs", "authors": ["Altaf Abdul Gaffar", " Oskar Mencer"]}, {"title": "Floating-point bitwidth analysis via automatic differentiation", "authors": ["Altaf Abdul Gaffar", " Oskar Mencer", " Wayne Luk"]}, {"title": "Computer arithmetic", "authors": ["David Goldberg"]}, {"title": "GAOL: Not Just Another Interval Arithmetic Library", "authors": ["Frederic Goualard"]}, {"title": "Static analysis of numerical algorithms", "authors": ["Eric Goubault "]}, {"title": "Monte Carlo methods", "authors": ["John Michael Hammersley "]}, {"title": "The accuracy of floating point summation", "authors": []}, {"title": "Accuracy and Stability of Numerical Algorithms", "authors": []}, {"title": "Applicability of software validation techniques to scientific programs", "authors": []}, {"title": "Robust estimation of a location parameter", "authors": []}, {"title": "Semantical interprocedural parallelization: An overview of the PIPS project", "authors": ["Fran\u00e7ois Irigoin", " Pierre Jouvelot"]}, {"title": "CADNA: A library for estimating round-off error propagation", "authors": ["Fabienne J\u00e9z\u00e9quel "]}, {"title": "Pracniques: Further remarks on reducing truncation errors", "authors": ["William Kahan"]}, {"title": "The improbability of probabilistic error analyses for numerical computations", "authors": ["William Kahan"]}, {"title": "How Futile Are Mindless Assessments of Roundoff in Floating Point Computation", "authors": ["William Kahan"]}, {"title": "A unified approach to global program optimization", "authors": []}, {"title": "C-XSC: A C&plus;&plus; Class Library for Extended Scientific Computing", "authors": []}, {"title": "Generalized intervals and the dependency problem", "authors": ["Walter Kr\u00e4mer"]}, {"title": "Hardware Design Verification: Simulation and Formal Method-Based Approaches", "authors": []}, {"title": "Accuracy-guaranteed bit-width optimization", "authors": [" Altaf", " Oskar Mencer", " Wayne Luk"]}, {"title": "MiniBit: Bit-width optimization via affine arithmetic", "authors": [" Altaf Abdul Gaffar", " Oskar Mencer"]}, {"title": "Accurate floating-point summation", "authors": ["Peter Linz"]}, {"title": "On the limited memory BFGS method for large scale optimization", "authors": []}, {"title": "On accurate floating-point summation", "authors": []}, {"title": "The pitfalls of verifying floating-point computations", "authors": ["David Monniaux"]}, {"title": "Line search algorithms with guaranteed sufficient decrease", "authors": []}, {"title": "Handbook of Floating-Point Arithmetic", "authors": ["Jean-Michel Muller", " Nicolas Brisebarre", " Florent de Dinechin", " Claude-Pierre Jeannerod", " Vincent Lefevre", " Guillaume Melquiond", " Nathalie Revol"]}, {"title": "CIL: Intermediate language and tools for analysis and transformation of C programs", "authors": ["George Necula", " Scott McPeak", " Shree Rahul"]}, {"title": "Efficient and effective array bound checking", "authors": ["Thi Viet Nga Nguyen "]}, {"title": "Automatic accuracy-guaranteed bit-width optimization for fixed and floating-point systems", "authors": [" Wayne Luk"]}, {"title": "Monte Carlo Arithmetic: Exploiting Randomness in Floating-Point Arithmetic", "authors": ["Douglass Stott Parker"]}, {"title": "Monte Carlo Arithmetic", "authors": ["Douglass Stott Parker"]}, {"title": "Numerical Recipes 3rd Edition: The Art of Scientific Computing", "authors": []}, {"title": "Chebyshev Polynomials: From Approximation Theory to Algebra and Number Theory (2nd ed", "authors": []}, {"title": "An automatic method for finding the greatest or least value of a function", "authors": []}, {"title": "CSE-690 Home Project 2", "authors": []}, {"title": "A family of variable-precision interval arithmetic processors", "authors": []}, {"title": "Floating-Point Computation", "authors": []}, {"title": "A combined interval and floating point multiplier", "authors": []}, {"title": "C Implementation of the LINPACK Benchmark", "authors": ["Bonnie Toy "]}, {"title": "A stochastic approach to the analysis of round-off error propagation", "authors": ["Jean Vignes"]}, {"title": "Interval Arithmetic Programming Reference: Forte TM Workshop 6 Update 1 C&plus;&plus;", "authors": []}, {"title": "Rounding Errors in Algebraic Processes", "authors": []}, {"title": "A Monte-Carlo floating-point unit for self-validating arithmetic", "authors": []}]},
{"title": "Verifying Invariants of Lock-Free Data Structures with Rely-Guarantee and Refinement Types", "time": "May 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Verifying invariants of fine-grained concurrent data structures is challenging, because interference from other threads may occur at any time. We propose a new way of proving invariants of fine-grained concurrent data structures: applying rely-guarantee reasoning to references in the concurrent setting. Rely-guarantee applied to references can verify bounds on thread interference without requiring a whole program to be verified.\nThis article provides three new results. First, it provides a new approach to preserving invariants and restricting usage of concurrent data structures. Our approach targets a space between simple type systems and modern concurrent program logics, offering an intermediate point between unverified code and full verification. Furthermore, it avoids sealing concurrent data structure implementations and can interact safely with unverified imperative code. Second, we demonstrate the approach\u2019s broad applicability through a series of case studies, using two implementations: an axiomatic C\n domain-specific language and a library for Liquid Haskell. Third, these two implementations allow us to compare and contrast verifications by interactive proof (C\n) and a weaker form that can be expressed using automatically-discharged dependent refinement types (Liquid Haskell).\n", "author": [{"name": "Colin S. Gordon", "affiliation": "Drexel University, Philadelphia, USA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle, USA"}, {"name": "Dan Grossman", "affiliation": "University of Washington, Seattle, USA"}, {"name": "Matthew J. Parkinson", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "Colin S. Gordon", "affiliation": "Drexel University, Philadelphia, USA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle, USA"}, {"name": "Dan Grossman", "affiliation": "University of Washington, Seattle, USA"}, {"name": "Matthew J. Parkinson", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "Sound modular verification of c code executing in an unverified context", "authors": ["Pieter Agten", " Bart Jacobs"]}, {"title": "Wait-free parallel algorithms for the union-find problem", "authors": []}, {"title": "Interactive Theorem Proving and Program Development; Coq\u2019Art: The Calculus of Inductive Constructions", "authors": ["Yves Bertot "]}, {"title": "Checking interference with fractional permissions", "authors": ["John Boyl"]}, {"title": "A semantics for concurrent separation logic", "authors": ["Stephen Brookes"]}, {"title": "A Polymorphic Representation of Induction-Recursion", "authors": ["Venanzio Capretta"]}, {"title": "Mostly-automated verification of low-level programs in computational separation logic", "authors": ["Adam Chlipala"]}, {"title": "Effective interactive proofs for higher-order imperative programs", "authors": ["Adam Chlipala", " Gregory Malecha", " Greg Morrisett", " Avraham Shinnar"]}, {"title": "Linear Programming", "authors": ["Vasek Chvatal"]}, {"title": "VCC: A practical system for verifying concurrent C", "authors": ["Ernie Cohen", " Markus Dahlweid", " Mark Hillebr", " Dirk Leinenbach", " Michal Moskal", " Thomas Santen", " Wolfram Schulte"]}, {"title": "Local verification of global invariants in concurrent programs", "authors": ["Ernie Cohen", " Michal Moskal", " Wolfram Schulte"]}, {"title": "The calculus of constructions", "authors": ["Thierry Coqu"]}, {"title": "Introduction to Algorithms, Third Edition (3rd ed", "authors": []}, {"title": "TaDA: A logic for time and data abstraction", "authors": ["Pedro da Rocha Pinto", " Thomas Dinsdale-Young"]}, {"title": "Guarded commands, nondeterminacy and formal derivation of programs", "authors": []}, {"title": "Views: Compositional reasoning for concurrent programs", "authors": ["Thomas Dinsdale-Young", " Lars Birkedal", " Philippa Gardner", " Matthew Parkinson"]}, {"title": "Concurrent abstract predicates", "authors": ["Thomas Dinsdale-Young", " Mike Dodds", " Philippa Gardner", " Matthew Parkinson"]}, {"title": "Deny-guarantee reasoning", "authors": ["Mike Dodds", " Xinyu Feng", " Matthew Parkinson"]}, {"title": "A general formulation of simultaneous inductive-recursive definitions in type theory", "authors": ["Peter Dybjer"]}, {"title": "Simplifying linearizability proofs with reduction and abstraction", "authors": ["Tayfun Elmas", " Shaz Qadeer", " Ali Sezgin", " Omer Subasi"]}, {"title": "A calculus of atomic actions", "authors": ["Tayfun Elmas", " Shaz Qadeer"]}, {"title": "Local rely-guarantee reasoning", "authors": ["Xinyu Feng"]}, {"title": "Types for safe locking", "authors": ["Cormac Flanagan "]}, {"title": "Type-based race detection for java", "authors": []}, {"title": "Inductive-inductive definitions", "authors": ["Fredrik Nordvall Forsberg "]}, {"title": "Refinement types for ML", "authors": ["Tim Freeman "]}, {"title": "Verifying Concurrent Programs by Controlling Alias Interference", "authors": []}, {"title": "Rely-guarantee references for refinement types over aliased mutable data", "authors": []}, {"title": "Uniqueness and reference immutability for safe parallelism", "authors": [" Jared Parsons", " Aleks Bromfield"]}, {"title": "A pragmatic implementation of non-blocking linked-lists", "authors": ["Timothy L Harris"]}, {"title": "A lazy concurrent list-based set algorithm", "authors": ["Steve Heller", " Maurice Herlihy", " Victor Luchangco", " Mark Moir"]}, {"title": "A scalable lock-free stack algorithm", "authors": ["Danny Hendler", " Nir Shavit"]}, {"title": "Wait-free synchronization", "authors": ["Maurice Herlihy"]}, {"title": "The Art of Multiprocessor Programming", "authors": ["Maurice Herlihy "]}, {"title": "An axiomatic basis for computer programming", "authors": []}, {"title": "ReIm 8 ReImInfer: Checking and inference of reference immutability and method purity", "authors": ["Wei Huang", " Ana Milanova", " Werner Dietl"]}, {"title": "Expressive modular fine-grained concurrency specification", "authors": ["Bart Jacobs "]}, {"title": "Fictional separation logic", "authors": ["Jonas Brab"]}, {"title": "LiquidHaskell: Refinement Types for Haskell", "authors": ["Ranjit Jhala"]}, {"title": "Programming with Refinement Types", "authors": ["Ranjit Jhala"]}, {"title": "HMC: Verifying functional programs with abstract interpreters", "authors": ["Ranjit Jhala", " Rupak Majumdar"]}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": "Iris: Monoids and invariants as an orthogonal basis for concurrent reasoning", "authors": ["Ralf Jung", " David Swasey", " Filip Sieczkowski", " Kasper Svendsen", " Aaron Turon", " Lars Birkedal"]}, {"title": "Deterministic parallelism with liquid effects", "authors": ["Ming Kawaguchi", " Patrick Rondon", " Alex"]}, {"title": "Type-based data structure verification", "authors": ["Ming Kawaguchi", " Patrick Rondon"]}, {"title": "Dsolve: Safety verification via liquid types", "authors": ["Ming Kawaguchi"]}, {"title": "Asynchronous liquid separation types", "authors": ["Johannes Kloos", " Rupak Majumdar"]}, {"title": "Subjective auxiliary state for coarse-grained concurrency", "authors": ["Ruy Ley-Wild "]}, {"title": "Modular verification of linearizability with non-fixed linearization points", "authors": ["Hongjin Liang "]}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": "Unikernels: Library operating systems for the cloud", "authors": ["Anil Madhavapeddy", " Richard Mortier", " Charalampos Rotsos", " David Scott", " Balraj Singh", " Thomas Gazagnaire", " Steven Smith", " Steven H"]}, {"title": "Hazard pointers: Safe memory reclamation for lock-free objects", "authors": []}, {"title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms", "authors": []}, {"title": "Rely-guarantee protocols", "authors": ["Filipe Milit\u00e3o", " Jonathan Aldrich"]}, {"title": "Composing interfering abstract protocols", "authors": ["Filipe Milit\u00e3o", " Jonathan Aldrich"]}, {"title": "Towards type-theoretic semantics for transactional concurrency", "authors": ["Aleks", " Paul Govereau"]}, {"title": "Communicating state transition systems for fine-grained concurrent resources", "authors": ["Aleks", " Ruy Ley-Wild", " Ilya Sergey"]}, {"title": "Ynot: Dependent types for imperative programs", "authors": ["Aleks", " Greg Morrisett", " Avraham Shinnar", " Paul Govereau"]}, {"title": "Structuring the verification of heap-manipulating programs", "authors": ["Aleks", " Viktor Vafeiadis"]}, {"title": "Local reasoning about programs that alter data structures", "authors": ["Peter O\u2019Hearn", " John Reynolds"]}, {"title": "Verifying linearizability with hindsight", "authors": [" Noam Rinetzky", " Eran Yahav"]}, {"title": "An axiomatic proof technique for parallel programs I", "authors": ["Susan Owicki "]}, {"title": "The essence of monotonic state", "authors": ["Alex"]}, {"title": "Hiding local state in direct style: A higher-order anti-frame rule", "authors": ["Fran\u00e7ois Pottier"]}, {"title": "CoLoSL: Concurrent local subjective logic", "authors": ["Azalea Raad", " Jules Villard"]}, {"title": "Preliminary Design of the Programming Language Forsythe", "authors": []}, {"title": "Liquid Types", "authors": ["Patrick Rondon"]}, {"title": "CSolve: Verifying C with liquid types", "authors": ["Patrick Rondon", " Alex", " Ming Kawaguchi"]}, {"title": "Liquid types", "authors": [" Ming Kawaguchi"]}, {"title": "Low-level liquid types", "authors": [" Ming Kawaguchi"]}, {"title": "Mechanized verification of fine-grained concurrent programs", "authors": ["Ilya Sergey", " Aleks"]}, {"title": "Specifying and verifying concurrent algorithms with histories and subjectivity", "authors": ["Ilya Sergey", " Aleks"]}, {"title": "Shared Boxes: Rely-Guarantee Reasoning in VeriFast", "authors": ["Jan Smans", " Dries Vanoverberghe", " Dominique Devriese", " Bart Jacobs"]}, {"title": "Impredicative concurrent abstract predicates", "authors": ["Kasper Svendsen "]}, {"title": "Modular reasoning about separation of concurrent data structures", "authors": ["Kasper Svendsen", " Lars Birkedal"]}, {"title": "Dependent types and multi-monadic effects in F&star;", "authors": ["Nikhil Swamy", " Catalin Hritcu", " Chantal Keller", " Aseem Rastogi", " Antoine Delignat-Lavaud", " Simon Forest", " Karthikeyan Bhargavan", " C\u00e9dric Fournet", " Pierre-Yves Strub", " Markulf Kohlweiss", " Jean Karim Zinzindohoue"]}, {"title": "Verifying higher-order programs with the dijkstra monad", "authors": ["Nikhil Swamy", " Joel Weinberger", " Cole Schlesinger", " Juan Chen"]}, {"title": "Systems programming: Coping with parallelism", "authors": []}, {"title": "Javari: Adding reference immutability to java", "authors": []}, {"title": "Unifying refinement and hoare-style reasoning in a logic for higher-order concurrency", "authors": ["Aaron Turon", " Derek Dreyer"]}, {"title": "Proving correctness of highly-concurrent linearisable objects", "authors": ["Viktor Vafeiadis", " Maurice Herlihy", " Tony Hoare"]}, {"title": "A marriage of rely/guarantee and separation logic", "authors": ["Viktor Vafeiadis "]}, {"title": "LiquidHaskell: Verification of Haskell Programs with SMTs", "authors": ["Niki Vazou"]}, {"title": "Bounded refinement types", "authors": ["Niki Vazou", " Alex"]}, {"title": "Abstract refinement types", "authors": ["Niki Vazou", " Patrick Rondon"]}, {"title": "LiquidHaskell: Experience with refinement types in the real world", "authors": ["Niki Vazou"]}, {"title": "Refinement types for haskell", "authors": ["Niki Vazou", " Ranjit Jhala", " Dimitrios Vytiniotis"]}, {"title": "Explicit stabilisation for modular rely-guarantee reasoning", "authors": ["John Wickerson", " Mike Dodds"]}, {"title": "Object and reference immutability using java generics", "authors": ["Yoav Zibin", " Alex Potanin", " Mahmood Ali", " Shay Artzi", " Adam Kiezun"]}, {"title": "Ownership and immutability in generic java", "authors": ["Yoav Zibin", " Alex Potanin", " Paley Li", " Mahmood Ali"]}]},
{"title": "Secure Compilation to Protected Module Architectures", "time": "April 2015", "keyword": ["Programming Languages and Systems"], "abstract": "A fully abstract compiler prevents security features of the source language from being bypassed by an attacker operating at the target language level. Unfortunately, developing fully abstract compilers is very complex, and it is even more so when the target language is an untyped assembly language. To provide a fully abstract compiler that targets untyped assembly, it has been suggested to extend the target language with a protected module architecture\u2014an assembly-level isolation mechanism which can be found in next-generation processors. This article provides a fully abstract compilation scheme whose source language is an object-oriented, high-level language and whose target language is such an extended assembly language. The source language enjoys features such as dynamic memory allocation and exceptions. Secure compilation of first-order method references, cross-package inheritance, and inner classes is also presented. Moreover, this article contains the formal proof of full abstraction of the compilation scheme. Measurements of the overhead introduced by the compilation scheme indicate that it is negligible.\n", "author": [{"name": "Marco Patrignani", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Pieter Agten", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Raoul Strackx", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Bart Jacobs", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Dave Clarke", "affiliation": "Dept. Information Technology, Uppsala, Sweden and iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium "}, {"name": "Frank Piessens", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Marco Patrignani", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Pieter Agten", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Raoul Strackx", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Bart Jacobs", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}, {"name": "Dave Clarke", "affiliation": "Dept. Information Technology, Uppsala, Sweden and iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium "}, {"name": "Frank Piessens", "affiliation": "iMinds-DistriNet, Dept. Computer Science, KU Leuven, Belgium"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "47", "references": [{"title": "Protection in programming-language translations", "authors": ["Mart\u00edn Abadi"]}, {"title": "On protection by layout randomization", "authors": []}, {"title": "Garbage collecting the internet: A survey of distributed garbage collection", "authors": []}, {"title": "Sound modular verification of C code executing in an unverified context", "authors": ["Pieter Agten", " Bart Jacobs"]}, {"title": "Secure compilation to modern processors", "authors": ["Pieter Agten", " Raoul Strackx", " Bart Jacobs"]}, {"title": "An equivalence-preserving CPS translation via multi-language semantics", "authors": ["Amal Ahmed "]}, {"title": "Innovative technology for CPU based attestation and sealing", "authors": ["Ittai Anati", " Shay Gueron"]}, {"title": "Salus: Non-hierarchical memory access rights to enforce the principle of least privilege", "authors": ["Niels Avonds", " Raoul Strackx", " Pieter Agten"]}, {"title": "A certified type-preserving compiler from lambda calculus to assembly language", "authors": ["Adam Chlipala"]}, {"title": "Definability and full abstraction", "authors": ["Pierre-Louis Curien"]}, {"title": "A fully abstract semantics for UML components", "authors": [" Martin Steffen"]}, {"title": "Implementing statically typed object-oriented programming languages", "authors": ["Rol"]}, {"title": "SMART: Secure and minimal architecture for (establishing a dynamic) root of trust", "authors": ["Karim Eldefrawy", " Aur\u00e9lien Francillon", " Daniele Perito"]}, {"title": "Low-level software security by example", "authors": ["Ulfar Erlingsson", " Yves Younan"]}, {"title": "Java in a Nutshell", "authors": ["David Flanagan"]}, {"title": "Fully abstract compilation to JavaScript", "authors": ["Cedric Fournet", " Nikhil Swamy", " Juan Chen", " Pierre-Evariste Dag", " Pierre-Yves Strub"]}, {"title": "Lest we remember: Cold boot attacks on encryption keys", "authors": []}, {"title": "Using innovative instructions to create trustworthy software solutions", "authors": ["Matthew Hoekstra", " Reshma Lal", " Pradeep Pappachan", " Vinay Phegade"]}, {"title": "Profile-guided automated software diversity", "authors": ["Andrei Homescu", " Steven Neisius", " Per Larsen", " Stefan Brunthaler"]}, {"title": "Software Guard Extensions Programming Reference", "authors": ["Intel Corporation"]}, {"title": "Local memory via layout randomization", "authors": ["Radha Jagadeesan", " Corin Pitcher", " Julian Rathke"]}, {"title": "A fully abstract may testing semantics for concurrent objects", "authors": ["Alan Jeffrey "]}, {"title": "Java Jr", "authors": ["Alan Jeffrey "]}, {"title": "Securing the ", "authors": ["Andrew Kennedy"]}, {"title": "Security through diversity: Are we there yet&quest; IEEE Security &amp; Privacy 12, 2 (2014), 28--35", "authors": ["Per Larsen", " Stefan Brunthaler"]}, {"title": "LLVM: A compilation framework for lifelong program analysis &amp; transformation", "authors": ["Chris Lattner "]}, {"title": "A formally verified compiler back-end", "authors": ["Xavier Leroy"]}, {"title": "TrustVisor: Efficient TCB reduction and attestation", "authors": [" Yanlin Li", " Ning Qu", " Zongwei Zhou", " Anupam Datta", " Virgil Gligor"]}, {"title": "Flicker: An execution infrastructure for TCB minimization", "authors": [" Adrian Perrig"]}, {"title": "Innovative instructions and software model for isolated execution", "authors": ["Frank McKeen", " Ilya Alex", " Alex Berenzon", " Hisham Shafi", " Vedvyas Shanbhogue"]}, {"title": "From system f to typed assembly language", "authors": ["Greg Morrisett", " David Walker", " Karl Crary"]}, {"title": "Sancus: Low-cost trustworthy extensible networked devices with a zero-software Trusted Computing Base", "authors": ["Job Noorman", " Pieter Agten", " Wilfried Daniels", " Raoul Strackx", " Anthony Van Herrewege", " Christophe Huygens", " Bart Preneel", " Ingrid Verbauwhede"]}, {"title": "Fully abstract trace semantics of low-level isolation mechanisms", "authors": ["Marco Patrignani "]}, {"title": "Secure compilation of object-oriented components to protected module architectures", "authors": ["Marco Patrignani", " Dave Clarke"]}, {"title": "LCF considered as a programming language", "authors": []}, {"title": "Return-oriented programming: Systems, languages, and applications", "authors": ["Ryan Roemer", " Erik Buchanan", " Hovav Shacham"]}, {"title": "On the effectiveness of address-space randomization", "authors": ["Hovav Shacham", " Matthew Page", " Ben Pfaff", " Eu-Jin Goh", " Nagendra Modadugu"]}, {"title": "Reducing TCB complexity for security-sensitive applications: Three case studies", "authors": ["Lenin Singaravelu", " Calton Pu", " Hermann H\u00e4rtig"]}, {"title": "Protected software module architectures", "authors": ["Raoul Strackx", " Job Noorman", " Ingrid Verbauwhede", " Bart Preneel"]}, {"title": "Fides: Selectively hardening software application components against kernel-level or process-level Malware", "authors": ["Raoul Strackx "]}, {"title": "Efficient isolation of trusted subsystems in embedded systems", "authors": ["Raoul Strackx", " Frank Piessens"]}, {"title": "Breaking the memory secrecy assumption", "authors": ["Raoul Strackx", " Yves Younan", " Pieter Philippaerts", " Frank Piessens", " Sven Lachmund"]}, {"title": "Subobject-oriented programming", "authors": ["Marko van Dooren", " Dave Clarke"]}, {"title": "Design, implementation and verification of an extensible and modular hypervisor framework", "authors": ["Amit Vasudevan", " Sagar Chaki", " Limin Jia", " Jonathan McCune", " James Newsome"]}, {"title": "Binary stirring: Self-randomizing instruction addresses of legacy x86 binary code", "authors": ["Richard Wartell", " Vishwath Mohan"]}, {"title": "A hijacker\u2019s guide to the LPC bus", "authors": ["Johannes Winter "]}, {"title": "Mondrian memory protection", "authors": ["Emmett Witchel", " Josh Cates"]}, {"title": "Efficient Countermeasures for Software Vulnerabilities due to Memory Management Errors", "authors": ["Yves Younan"]}, {"title": "Runtime countermeasures for code injection attacks against C and C&plus;&plus; programs", "authors": ["Yves Younan", " Wouter Joosen"]}]},
{"title": "Verification of a Cryptographic Primitive: SHA-256", "time": "April 2015", "keyword": ["Programming Languages and Systems"], "abstract": "This article presents a full formal machine-checked verification of a C program: the OpenSSL implementation of SHA-256. This is an interactive proof of functional correctness in the Coq proof assistant, using the Verifiable C program logic. Verifiable C is a separation logic for the C language, proved sound with respect to the operational semantics for C, connected to the CompCert verified optimizing C compiler.\n", "author": [{"name": "Andrew W. Appel", "affiliation": "Princeton University, Princeton, NJ"}, {"name": "Andrew W. Appel", "affiliation": "Princeton University, Princeton, NJ"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "60", "references": [{"title": "Certified computer-aided cryptography: Efficient provably secure machine code from high-level implementations", "authors": ["Jos\u00e9 Bacelar Almeida", " Manuel Barbosa", " Gilles Barthe"]}, {"title": "Program Logics for Certified Compilers", "authors": [" Robert Dockins", " Aquinas Hobor", " Lennart Beringer", " Josiah Dodds", " Gordon Stewart", " S"]}, {"title": "A modular integration of SAT/SMT solvers to Coq through proof witnesses", "authors": ["Michael Arm", " Germain Faure", " Benjamin Gr\u00e9goire", " Chantal Keller", " Laurent Th\u00e9ry"]}, {"title": "Verified security of Merkle-Damg\u00e5rd", "authors": ["Michael Backes", " Gilles Barthe", " Matthias Berg", " Benjamin Gr\u00e9goire", " C\u00e9sar Kunz", " Malte Skoruppa"]}, {"title": "Computer-aided cryptographic proofs", "authors": ["Gilles Barthe", " Juan Manuel Crespo", " Benjamin Gr\u00e9goire", " C\u00e9sar Kunz"]}, {"title": "New proofs for NMAC and HMAC: Security without collision-resistance", "authors": ["Mihir Bellare"]}, {"title": "Keying hash functions for message authentication", "authors": ["Mihir Bellare", " Ran Canetti"]}, {"title": "Modular SMT proofs for fast reflexive checking inside Coq", "authors": ["Fr\u00e9d\u00e9ric Besson", " Pierre-Emmanuel Cornilleau"]}, {"title": "Major bug called \u2018Heartbleed\u2019 exposes Internet data", "authors": ["Lindsey Bever"]}, {"title": "End-to-end verification of stack-space bounds for C programs", "authors": ["Quentin Carbonneaux", " Jan Hoffmann", " Tahina Ramanan"]}, {"title": "Functional correctness proofs of encryption algorithms", "authors": ["Jianjun Duan", " Joe Hurd", " Guodong Li", " Scott Owens", " Konrad Slind"]}, {"title": "Hardware/software co-verification of cryptographic algorithms using Cryptol", "authors": [" Magnus Carlsson"]}, {"title": "Secure Hash Standard (SHS)", "authors": ["FIPS"]}, {"title": "The Exact PRF-security of NMAC and HMAC", "authors": ["Peter Ga\u017ei", " Krzysztof Pietrzak"]}, {"title": "Edinburgh LCF: A Mechanised Logic of Computation", "authors": [" Robin Milner"]}, {"title": "Bridging the gap: Automatic verified abstraction of C", "authors": ["David Greenaway", " June Andronick"]}, {"title": "CertiKOS: A certified kernel for secure cloud computing", "authors": ["Liang Gu", " Alex", " Bryan Ford", " Zhong Shao"]}, {"title": "seL4: Formal verification of an OS kernel", "authors": ["Gerwin Klein", " Kevin Elphinstone", " Gernot Heiser", " June Andronick", " David Cock", " Philip Derrin", " Dhammika Elkaduwe", " Kai Engelhardt", " Rafal Kolanski", " Michael Norrish", " "]}, {"title": "A formally verified compiler back-end", "authors": ["Xavier Leroy"]}, {"title": "A new development for Coverity and Heartbleed", "authors": ["John Regehr"]}, {"title": "Open source and security", "authors": ["Bruce Schneier"]}, {"title": "How to remain secure against the NSA", "authors": ["Bruce Schneier"]}, {"title": "Translation validation for a verified OS kernel", "authors": []}, {"title": "Automatic formal verification of block cipher implementations", "authors": []}, {"title": "Reflections on trusting trust", "authors": ["Ken Thompson"]}, {"title": "Formal verification of a SHA-1 circuit core using ACL2", "authors": ["Diana Toma "]}, {"title": "Towards optimization-safe systems: Analyzing the impact of undefined behavior", "authors": ["Xi Wang", " Nickolai Zeldovich"]}, {"title": "Foundational proof checkers with small witnesses", "authors": ["Dinghao Wu"]}, {"title": "Finding and understanding bugs in C compilers", "authors": ["Xuejun Yang", " Yang Chen", " Eric Eide"]}]},
{"title": "Automated Classification of Data Races Under Both Strong and Weak Memory Models", "time": "May 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Data races are one of the main causes of concurrency problems in multithreaded programs. Whether all data races are bad, or some are harmful and others are harmless, is still the subject of vigorous scientific debate [Narayanasamy et al. 2007; Boehm 2012]. What is clear, however, is that today's code has many data races [Kasikci et al. 2012; Jin et al. 2012; Erickson et al. 2010], and fixing data races without introducing bugs is time consuming [Godefroid and Nagappan 2008]. Therefore, it is important to efficiently identify data races in code and understand their consequences to prioritize their resolution.\nWe present Portend\n, a tool that not only detects races but also automatically classifies them based on their potential consequences: Could they lead to crashes or hangs? Could their effects be visible outside the program? Do they appear to be harmless? How do their effects change under weak memory models? Our proposed technique achieves high accuracy by efficiently analyzing multiple paths and multiple thread schedules in combination, and by performing symbolic comparison between program outputs.\nWe ran Portend\n on seven real-world applications: it detected 93 true data races and correctly classified 92 of them, with no human effort. Six of them were harmful races. Portend\n's classification accuracy is up to 89% higher than that of existing tools, and it produces easy-to-understand evidence of the consequences of \u201charmful\u201d races, thus both proving their harmfulness and making debugging easier. We envision Portend\n being used for testing and debugging, as well as for automatically triaging bug reports.\n", "author": [{"name": "Baris Kasikci", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}, {"name": "Cristian Zamfir", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}, {"name": "George Candea", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}, {"name": "Baris Kasikci", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}, {"name": "Cristian Zamfir", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}, {"name": "George Candea", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne (EPFL), Switzerland, Switzerland"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Weak ordering-a new definition", "authors": []}, {"title": "GE Acknowledges Blackout Bug", "authors": ["Associated Press"]}, {"title": "On the verification problem for weak memory models", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani", " Sebastian Burckhardt"]}, {"title": "Efficient system-enforced deterministic parallelism", "authors": ["Amittai Aviram", " Shu-Chun Weng", " Sen Hu"]}, {"title": "Calysto: Scalable and precise extended static checking", "authors": []}, {"title": "The deterministic execution hammer: How well does it actually pound nails&quest; In Proceedings of the Workshop on Determinism and Correctness in Parallel Programming", "authors": ["Tom Bergan", " Joseph Devietti "]}, {"title": "CoreDet: A compiler and runtime system for deterministic multithreaded execution", "authors": ["Tom Bergan", " Owen Anderson", " Joseph Devietti", " Luis Ceze"]}, {"title": "A type and effect system for deterministic parallel Java", "authors": [" Danny Dig", " Stephen Heumann", " Rakesh Komuravelli", " Jeffrey Overbey", " Patrick Simmons", " Hyojin Sung"]}, {"title": "Reordering constraints for pthread-style locks", "authors": []}, {"title": "How to miscompile programs with \u201cbenign\u201d data races", "authors": []}, {"title": "Position paper: Nondeterminism is unavoidable, but data races are pure evil", "authors": []}, {"title": "You don\u2019t know jack about shared variables or memory models", "authors": []}, {"title": "PACER: Proportional detection of data races", "authors": []}, {"title": "Parallel symbolic execution for automated real-world software testing", "authors": ["Stefan Bucur", " Vlad Ureche", " Cristian Zamfir"]}, {"title": "Bounded model checking of concurrent data types on relaxed memory models: A case study", "authors": ["Sebastian Burckhardt", " Rajeev Alur"]}, {"title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs", "authors": ["Cristian Cadar", " Daniel Dunbar"]}, {"title": "Automated software reliability services: Using reliability tools should be as easy as Webmail", "authors": ["George C", " Stefan Bucur", " Vitaly Chipounov", " Vova Kuznetsov"]}, {"title": "BulkSC: Bulk enforcement of sequential consistency", "authors": ["Luis Ceze", " James Tuck", " Pablo Montesinos"]}, {"title": "Enabling sophisticated analyses of x86 binaries with RevGen", "authors": ["Vitaly Chipounov "]}, {"title": "Stable deterministic multithreading through schedule memoization", "authors": ["Heming Cui", " Jingyue Wu", " Chia Che Tsai"]}, {"title": "DMP: Deterministic shared memory multiprocessing", "authors": ["Joseph Devietti", " Br", " Luis Ceze"]}, {"title": "Memory access buffering in multiprocessors", "authors": ["Michel Dubois", " Christoph Scheurich"]}, {"title": "RacerX: Effective, static detection of race conditions and deadlocks", "authors": ["Dawson Engler "]}, {"title": "Effective data-race detection for the kernel", "authors": ["John Erickson", " Madanlal Musuvathi", " Sebastian Burckhardt"]}, {"title": "Memcached Home Page", "authors": ["Brad Fitzpatrick"]}, {"title": "FastTrack: Efficient and precise dynamic race detection", "authors": []}, {"title": "Adversarial memory for detecting destructive races", "authors": []}, {"title": "Finding complex concurrency bugs in large multi-threaded applications", "authors": ["Pedro Fonseca", " Cheng Li"]}, {"title": "A decision procedure for bit-vectors and arrays", "authors": []}, {"title": "Parallel BZIP2 (PBZIP2)", "authors": ["Jeff Gilchrist"]}, {"title": "Debugging in the (very) large: Ten years of implementation and experience", "authors": ["Kirk Glerum", " Kinshuman Kinshumann", " Steve Greenberg", " Gabriel Aul", " Vince Orgovan", " Greg Nichols", " David Grant", " Gretchen Loihle"]}, {"title": "DART: Directed automated random testing", "authors": ["Patrice Godefroid", " Nils Klarlund"]}, {"title": "Automated whitebox fuzz testing", "authors": ["Patrice Godefroid"]}, {"title": "Concurrency at Microsoft\u2014an exploratory survey", "authors": ["Patrice Godefroid "]}, {"title": "An experiment in determinism", "authors": ["Steven H"]}, {"title": "Helgrind Home Page", "authors": ["Helgrind"]}, {"title": "Parallel Inspector", "authors": ["Intel Corp"]}, {"title": "2011", "authors": []}, {"title": "2011", "authors": []}, {"title": "Identifying ad-hoc synchronization for enhanced race detection", "authors": []}, {"title": "Automated concurrency-bug fixing", "authors": ["Guoliang Jin", " Wei Zhang", " Dongdong Deng", " Ben Liblit"]}, {"title": "Reasoning about threads communicating via locks", "authors": ["Vineet Kahlon", " Franjo Ivan\u010di\u0107"]}, {"title": "Data races vs", "authors": ["Baris Kasikci", " Cristian Zamfir"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Leslie Lamport"]}, {"title": "\u201clibc&plus;&plus;\u201d C&plus;&plus; Standard Library", "authors": ["Chris Lattner"]}, {"title": "LLVM: A compilation framework for lifelong program analysis and transformation", "authors": ["Chris Lattner "]}, {"title": "Reference Manual for the ADA Programming Language", "authors": ["Henry Ledgard"]}, {"title": "An investigation of the Therac-25 accidents", "authors": []}, {"title": "Dthreads: Efficient deterministic multithreading", "authors": ["Tongping Liu", " Charlie Curtsinger"]}, {"title": "AVIO: Detecting atomicity violations via access interleaving invariants", "authors": ["Shan Lu", " Joseph Tucek", " Feng Qin"]}, {"title": "The Java memory model", "authors": ["Jeremy Manson", " William Pugh"]}, {"title": "LiteRace: Effective sampling for lightweight data-race detection", "authors": ["Daniel Marino", " Madanlal Musuvathi"]}, {"title": "Ctrace Home Page", "authors": ["Cal McPherson"]}, {"title": "On-the-fly detection of data races for programs with nested fork-join parallelism", "authors": ["John Mellor-Crummey"]}, {"title": "Issue 127: INCR/DECR Operations Are Not Thread Safe", "authors": ["Memcached"]}, {"title": "An efficient cache-based access anomaly detection scheme", "authors": []}, {"title": "A randomized scheduler with probabilistic guarantees of finding bugs", "authors": ["Madanlal Musuvathi", " Sebastian Burckhardt", " Pravesh Kothari"]}, {"title": "Finding and reproducing heisenbugs in concurrent programs", "authors": ["Madanlal Musuvathi", " Shaz Qadeer", " Thomas Ball", " G\u00e9rard Basler", " Piramanayagam Arumuga Nainar"]}, {"title": "Automatically classifying benign and harmful data races using replay analysis", "authors": ["Satish Narayanasamy", " Zhenghao Wang", " Jordan Tigani", " Andrew Edwards"]}, {"title": "Light64: Lightweight hardware support for data race detection during systematic testing of parallel programs", "authors": ["Adrian Nistor", " Darko Marinov"]}, {"title": "Hybrid dynamic data race detection", "authors": ["Robert O\u2019Callahan "]}, {"title": "ReEnact: Using thread-level speculation mechanisms to debug data races in multithreaded codes", "authors": ["Milos Prvulovic "]}, {"title": "Eraser: A dynamic data race detector for multithreaded programs", "authors": ["Stefan Savage", " Michael Burrows", " Greg Nelson", " Patrick Sobalvarro"]}, {"title": "On-the-fly detection of access anomalies (with retrospective)", "authors": ["Edith Schonberg"]}, {"title": "Race directed random testing of concurrent programs", "authors": ["Koushik Sen"]}, {"title": "CUTE: A concolic unit testing engine for C", "authors": ["Koushik Sen", " Darko Marinov"]}, {"title": "ThreadSanitizer\u2014data race detection in practice", "authors": ["Konstantin Serebryany "]}, {"title": "Alpha Architecture Reference Manual", "authors": []}, {"title": "Sound predictive race detection in polynomial time", "authors": ["Yannis Smaragdakis", " Jacob Evans", " Caitlin Sadowski", " Jaeheon Yi"]}, {"title": "SQLite Home Page", "authors": ["SQLite"]}, {"title": "StreamIt: A language for streaming applications", "authors": ["William Thies", " Michal Karczmarek"]}, {"title": "Dynamic recognition of synchronization operations for improved data race detection", "authors": ["Chen Tian", " Vijay Nagarajan", " Rajiv Gupta"]}, {"title": "Detecting and surviving data races using complementary schedules", "authors": ["Kaushik Veeraraghavan", " Jason Flinn"]}, {"title": "RELAY: Static race detection on millions of lines of code", "authors": ["Jan Wen Voung", " Ranjit Jhala"]}, {"title": "The SPARC Architecture Manual, Version 9", "authors": []}, {"title": "The SPLASH-2 programs: Characterization and methodological considerations", "authors": ["Steven Cameron Woo", " Moriyoshi Ohara", " Evan Torrie", " Jaswinder Pal Singh"]}, {"title": "Bypassing races in live applications with execution filters", "authors": ["Jingyue Wu", " Heming Cui"]}, {"title": "Ad-hoc synchronization considered harmful", "authors": ["Weiwei Xiong", " Soyeon Park", " Jiaqi Zhang", " Yuanyuan Zhou"]}, {"title": "Distributed dynamic partial order reduction based verification of threaded software", "authors": ["Yu Yang", " Xiaofang Chen", " Ganesh Gopalakrishnan"]}, {"title": "RaceTrack: Efficient detection of data race conditions via adaptive tracking", "authors": ["Yuan Yu", " Tom Rodeheffer"]}, {"title": "Execution synthesis: A technique for automated debugging", "authors": ["Cristian Zamfir "]}, {"title": "ATDetector: Improving the accuracy of a commercial data race detector by identifying address transfer", "authors": ["Jiaqi Zhang", " Weiwei Xiong", " Yang Liu", " Soyeon Park", " Yuanyuan Zhou"]}]},
{"title": "The Design and Implementation of a Verification Technique for GPU Kernels", "time": "May 2015", "keyword": ["Programming Languages and Systems"], "abstract": "We present a technique for the formal verification of GPU kernels, addressing two classes of correctness properties: data races and barrier divergence. Our approach is founded on a novel formal operational semantics for GPU kernels termed <i>synchronous, delayed visibility (SDV)</i> semantics, which captures the execution of a GPU kernel by multiple groups of threads. The SDV semantics provides operational definitions for barrier divergence and for both inter- and intra-group data races. We build on the semantics to develop a method for reducing the task of verifying a massively parallel GPU kernel to that of verifying a sequential program. This completely avoids the need to reason about thread interleavings, and allows existing techniques for sequential program verification to be leveraged. We describe an efficient encoding of data race detection and propose a method for automatically inferring the loop invariants that are required for verification. We have implemented these techniques as a practical verification tool, GPUVerify, that can be applied directly to OpenCL and CUDA source code. We evaluate GPUVerify with respect to a set of 162 kernels drawn from public and commercial sources. Our evaluation demonstrates that GPUVerify is capable of efficient, automatic verification of a large number of real-world kernels.\n", "author": [{"name": "Adam Betts", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Nathan Chong", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Alastair F. Donaldson", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Jeroen Ketema", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Shaz Qadeer", "affiliation": "Microsoft Research Redmond, WA, USA"}, {"name": "Paul Thomson", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "John Wickerson", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Adam Betts", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Nathan Chong", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Alastair F. Donaldson", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Jeroen Ketema", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Shaz Qadeer", "affiliation": "Microsoft Research Redmond, WA, USA"}, {"name": "Paul Thomson", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "John Wickerson", "affiliation": "Imperial College London, London, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "35", "references": [{"title": "GPU concurrency: Weak behaviours and programming assumptions", "authors": ["Jade Alglave", " Mark Batty", " Ganesh Gopalakrishnan", " Jeroen Ketema", " Daniel Poetzl", " Tyler Sorensen"]}, {"title": "OpenCL Programming Guide, Revision 2", "authors": ["AMD"]}, {"title": "Engineering a static verification tool for GPU kernels", "authors": ["Ethel Bardsley", " Adam Betts", " Nathan Chong", " Peter Collingbourne", " Pantazis Deligiannis", " Jeroen Ketema", " Daniel Liew"]}, {"title": "Warps and atomics: Beyond barrier synchronization in the verification of GPU kernels", "authors": []}, {"title": "KernelInterceptor: Automating GPU kernel verification by intercepting kernels and their parameters", "authors": ["Ethel Bardsley"]}, {"title": "Boogie: A modular reusable verifier for object-oriented programs", "authors": ["Michael Barnett", " Bor-Yuh Evan Chang", " Robert DeLine", " Bart Jacobs"]}, {"title": "CVC4", "authors": ["Clark Barrett", " Morgan Deters", " Liana Hadarean", " Dejan Jovanovic", " Tim King", " Andrew Reynolds"]}, {"title": "A few billion lines of code later: Using static analysis to find bugs in the real world", "authors": ["Al Bessey", " Ken Block", " Benjamin Chelf", " Andy Chou", " Bryan Fulton", " Seth Hallem", " Charles-Henri Gros", " Asya Kamsky", " Scott McPeak"]}, {"title": "GPUVerify: A verifier for GPU kernels", "authors": ["Adam Betts", " Nathan Chong", " Shaz Qadeer"]}, {"title": "Path invariants", "authors": ["Dirk Beyer", " Rupak Majumdar"]}, {"title": "Specification and verification of GPGPU programs", "authors": ["Stefan Blom", " Marieke Huisman"]}, {"title": "Automated dynamic analysis of CUDA programs", "authors": ["Michael Boyer", " Kevin Skadron"]}, {"title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs", "authors": ["Cristian Cadar", " Daniel Dunbar"]}, {"title": "GIST: An interactive, GPU-based level set segmentation tool for 3D medical images", "authors": []}, {"title": "Formal analysis of GPU programs with atomics via conflict-directed delay-bounding", "authors": ["Wei-Fan Chiang", " Ganesh Gopalakrishnan", " Guodong Li"]}, {"title": "Barrier invariants: A shared state abstraction for the analysis of data-dependent GPU kernels", "authors": ["Nathan Chong", " Paul Kelly", " Shaz Qadeer"]}, {"title": "A sound and complete abstraction for reasoning about parallel prefix sums", "authors": ["Nathan Chong"]}, {"title": "A simple method for parameterized verification of cache coherence protocols", "authors": ["Ching-Tsun Chou"]}, {"title": "Symbolic testing of OpenCL code", "authors": ["Peter Collingbourne", " Cristian Cadar"]}, {"title": "Interleaving and lock-step semantics for analysis and verification of GPU kernels", "authors": ["Peter Collingbourne", " Jeroen Ketema"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo Mendon\u00e7a de Moura "]}, {"title": "The GPUVerify method: A tutorial overview", "authors": []}, {"title": "Automatic analysis of scratch-pad memory code for heterogeneous multicore processors", "authors": [" Daniel Kroening"]}, {"title": "Automatic analysis of DMA races using model checking and k-induction", "authors": [" Daniel Kroening"]}, {"title": "Delay-bounded scheduling", "authors": ["Michael Emmi", " Shaz Qadeer"]}, {"title": "The Daikon system for dynamic detection of likely invariants", "authors": [" Stephen McCamant", " Carlos Pacheco"]}, {"title": "Houdini, an annotation assistant for ESC/Java", "authors": []}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Susanne Graf "]}, {"title": "On the correctness of the SIMT execution model of GPUs", "authors": ["Axel Habermaier "]}, {"title": "Fast fluid dynamics simulation on the GPU", "authors": []}, {"title": "Instantiation-based invariant discovery", "authors": ["Temesghen Kahsai", " Yeting Ge"]}, {"title": "Thread contracts for safe parallelism", "authors": []}, {"title": "The OpenCL Specification, Version 1", "authors": ["Khronos OpenCL Working Group"]}, {"title": "The OpenCL C Specification, Version 2", "authors": ["Khronos OpenCL Working Group"]}, {"title": "The OpenCL Extension Specification, Version 2", "authors": ["Khronos OpenCL Working Group"]}, {"title": "BarraCUDA\u2014A fast short read sequence aligner using graphics processing units", "authors": ["Petr Klus", " Simon Lam", " Dag Lyberg", " Ming Sin Cheung", " Graham Pullan", " Ian McFarlane"]}, {"title": "A Hoare logic for SIMT programs", "authors": ["Kensuke Kojima "]}, {"title": "Complexity and algorithms for monomial and clausal predicate abstraction", "authors": []}, {"title": "ESC/Java User\u2019s Manual", "authors": [" Greg Nelson"]}, {"title": "Verifying GPU kernels by test amplification", "authors": ["Alan Leung", " Manish Gupta", " Yuvraj Agarwal", " Rajesh Gupta", " Ranjit Jhala"]}, {"title": "Scalable SMT-based verification of GPU kernel functions", "authors": ["Guodong Li "]}, {"title": "GKLEE: Concolic verification and test generation for GPUs", "authors": ["Guodong Li", " Peng Li", " Geoffrey Sawaya", " Ganesh Gopalakrishnan", " Indradeep Ghosh"]}, {"title": "Fast and accurate short read alignment with Burrows-Wheeler transform", "authors": ["Heng Li "]}, {"title": "Parametric flows: Automated behavior equivalencing for symbolic analysis of races in CUDA programs", "authors": ["Peng Li", " Guodong Li"]}, {"title": "Mobile and Embedded Computing on Mali GPUs", "authors": ["Anton Lokhmotov"]}, {"title": "Verification of infinite state systems by compositional model checking", "authors": ["Kenneth McMillan"]}, {"title": "Lazy abstraction with interpolants", "authors": []}, {"title": "C&plus;&plus; AMP: Language and Programming Model, Version 1", "authors": ["Microsoft Corporation"]}, {"title": "Isabelle/HOL: A Proof Assistant for Higher-Order Logic", "authors": ["Tobias Nipkow"]}, {"title": "CUDA C Programming Guide, Version 5", "authors": ["Nvidia"]}, {"title": "Parallel Thread Execution ISA, Version 3", "authors": ["Nvidia"]}, {"title": "Personal Communication", "authors": ["Lars Nyl"]}, {"title": "Fast N-Body Simulation with CUDA", "authors": ["Lars Nyl", " Mark Harris"]}, {"title": "SLAM&plus;&plus;: Simultaneous localisation and mapping at the level of objects", "authors": [" Hauke Strasdat"]}, {"title": "Program verification using templates over predicate abstraction", "authors": ["Saurabh Srivastava "]}, {"title": "Points-to analysis in almost linear time", "authors": ["Bjarne Steensgaard"]}, {"title": "Going with the flow: Parameterized verification using message flows", "authors": []}, {"title": "Checking equivalence of SPMD programs using non-interference", "authors": ["Stavros Tripakis", " Christos Stergiou"]}, {"title": "Formal SOS-proofs for the lambda-calculus", "authors": ["Christian Urban "]}, {"title": "Syntax and semantics of a GPU kernel programming language", "authors": ["John Wickerson"]}]},
{"title": "An Extension of ATL with Strategy Interaction", "time": "June 2015", "keyword": ["Programming Languages and Systems"], "abstract": "We propose an extension to \n (\n), called \n (\n), for specifying collaboration among agents in a multiagent system. We show that BSIL is strictly more expressive than ATL\n but incomparable with ATL\n, \n (\n), and \n (\n) in expressiveness. We show that a memoryful strategy is necessary for fulfilling a specification in BSIL. We establish that the BSIL model-checking problem is PSPACE-complete. However, BSIL model checking can be performed in time quadratic in the model for fixed formulas. The BSIL (and hence ATL\n) satisfiability is 2EXPTIME-complete. Finally, we report our experiment with a model checker for BSIL.\n", "author": [{"name": "Farn Wang", "affiliation": "Graduate Institute of Electronic Engineering, National Taiwan University; Department of Electrical Engineering, National Taiwan University; Research Center for Information Technology Innovation (CITI), Academia Sinica, Taiwan, ROC "}, {"name": "Sven Schewe", "affiliation": "Department of Computer Sciences, University of Liverpool, UK"}, {"name": "Chung-Hao Huang", "affiliation": "Graduate Institute of Electronic Engineering, National Taiwan University, Taipei, Taiwan, ROC "}, {"name": "Farn Wang", "affiliation": "Graduate Institute of Electronic Engineering, National Taiwan University; Department of Electrical Engineering, National Taiwan University; Research Center for Information Technology Innovation (CITI), Academia Sinica, Taiwan, ROC "}, {"name": "Sven Schewe", "affiliation": "Department of Computer Sciences, University of Liverpool, UK"}, {"name": "Chung-Hao Huang", "affiliation": "Graduate Institute of Electronic Engineering, National Taiwan University, Taipei, Taiwan, ROC "}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Alternating-time temporal logic", "authors": ["Rajeev Alur"]}, {"title": "Stochastic game logic", "authors": ["Christel Baier", " Tomas Br\u00e1zdil", " Marcus Gr\u00f6ser"]}, {"title": "The temporal logic of branching time", "authors": ["Mordechai Ben-Ari", " Amir Pnueli"]}, {"title": "ATL with strategy contexts and bounded memory", "authors": ["Thomas Brihaye", " Arnaud Da Costa", " Fran\u00e7ois Laroussinie"]}, {"title": "Strategy logic", "authors": ["Krishnendu Chatterjee"]}, {"title": "Automatic verification of finite-state concurrent systems using temporal logic specifications", "authors": [" Ernest Allen Emerson"]}, {"title": "ATL with strategy contexts: Expressiveness and model checking", "authors": ["Arnaud Da Costa", " Fran\u00e7ois Laroussinie"]}, {"title": "Characterizing correctness properties of parallel programs as fixpoints", "authors": []}, {"title": "Decision procedures and expressiveness in the temporal logic of branching time", "authors": []}, {"title": "\u2018Sometimes\u2019 and \u2018Not Never\u2019 Revisited: On branching versus linear time temporal logic", "authors": []}, {"title": "Modalities for model checking: Branching time logic strikes back", "authors": []}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "authors": []}, {"title": "Number of quantifiers is better than number of tape cells", "authors": ["Neil Immerman"]}, {"title": "Alternating tree automata and parity games", "authors": ["Daniel Kirsten"]}, {"title": "Open systems in reactive environments: Control and synthesis", "authors": ["Orna Kupferman", " Parthasarathy Madhusudan"]}, {"title": "Module checking", "authors": ["Orna Kupferman"]}, {"title": "Sometimes is sometimes \u201cNot Never\u201d-on the temporal logic of programs", "authors": ["Leslie Lamport"]}, {"title": "Satisfiability of ATL with strategy contexts", "authors": ["Franois Laroussinie "]}, {"title": "What makes ATL&ast; decidable? A decidable fragment of strategy logic", "authors": ["Fabio Mogavero", " Aniello Murano", " Giuseppe Perelli"]}, {"title": "On the boundary of behavioral strategies", "authors": ["Fabio Mogavero", " Aniello Murano"]}, {"title": "A behavioral hierarchy of strategy logic", "authors": ["Fabio Mogavero", " Aniello Murano"]}, {"title": "Reasoning about strategies", "authors": ["Fabio Mogavero", " Aniello Murano"]}, {"title": "Simulating alternating tree automata by nondeterministic automata: New results and new proofs of the theorems of Rabin, McNaughton and Safra", "authors": []}, {"title": "A generic constructive solution for concurrent games with expressive constraints on strategies", "authors": ["Sophie Pinchinat"]}, {"title": "From nondeterministic B\u00fcchi and Streett automata to deterministic parity automata", "authors": ["Nir Piterman"]}, {"title": "On the complexity of \u03c9-automata", "authors": ["Shmuel Safra"]}, {"title": "Tighter bounds for the determinisation of B\u00fcchi automata", "authors": ["Sven Schewe"]}, {"title": "Semi-automatic distributed synthesis", "authors": ["Sven Schewe "]}, {"title": "The complexity of propositional linear temporal logics", "authors": []}, {"title": "The complexity of decision problems in automata theory and logic", "authors": []}, {"title": "Efficient verification of timed automata with BDD-like data-structures", "authors": ["Farn Wang"]}, {"title": "Efficient model-checking of dense-time systems with time-convexity analysis", "authors": ["Farn Wang"]}, {"title": "Time-progress evaluation for dense-time automata with concave path conditions", "authors": ["Farn Wang"]}, {"title": "Efficient model-checking of dense-time systems with time-convexity analysis", "authors": ["Farn Wang"]}, {"title": "Model-checking fair dense-time systems with propositions and events", "authors": ["Farn Wang"]}, {"title": "CTL", "authors": ["Thomas Wilke"]}, {"title": "", "authors": []}, {"title": "Modal &mu;-calculus and alternating tree automata", "authors": ["J\u00falia Zappe"]}]},
{"title": "Selective X-Sensitive Analysis Guided by Impact Pre-Analysis", "time": "December 2015", "keyword": ["Programming Languages and Systems"], "abstract": "We present a method for selectively applying context-sensitivity during interprocedural program analysis. Our method applies context-sensitivity only when and where doing so is likely to improve the precision that matters for resolving given queries. The idea is to use a pre-analysis to estimate the impact of context-sensitivity on the main analysis\u2019s precision, and to use this information to find out when and where the main analysis should turn on or off its context-sensitivity. We formalize this approach and prove that the analysis always benefits from the pre-analysis--guided context-sensitivity. We implemented this selective method for an existing industrial-strength interval analyzer for full C. The method reduced the number of (false) alarms by 24.4% while increasing the analysis cost by 27.8% on average.\nThe use of the selective method is not limited to context-sensitivity. We demonstrate this generality by following the same principle and developing a selective relational analysis and a selective flow-sensitive analysis. Our experiments show that the method cost-effectively improves the precision in the these analyses as well.\n", "author": [{"name": "Hakjoo Oh", "affiliation": "Korea University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Stanford University, Stanford, California"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hongseok Yang", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Stanford University, Stanford, California"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hongseok Yang", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Abstract interpretation frameworks", "authors": ["Patrick Cousot "]}, {"title": "On the complexity of escape analysis", "authors": ["Alain Deutsch"]}, {"title": "Verification of parameterized concurrent programs by modular reasoning about data and control", "authors": ["Azadeh Farzan "]}, {"title": "Client-driven pointer analysis", "authors": []}, {"title": "The interprocedural analysis and automatic parallelization of scheme programs", "authors": []}, {"title": "Demand-driven pointer analysis", "authors": ["Nevin Heintze "]}, {"title": "Taming false alarms from a domain-unaware C analyzer by a Bayesian statistical post analysis", "authors": ["Yungbum Jung", " Jaehwang Kim", " Jaeho Shin"]}, {"title": "Hybrid context-sensitivity for points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Sound non-statistical clustering of static analysis alarms", "authors": ["Woosuk Lee", " Wonchan Lee"]}, {"title": "Learning minimal abstractions", "authors": ["Percy Liang", " Omer Tripp"]}, {"title": "Parameterized object sensitivity for points-to and side-effect analyses for Java", "authors": ["Ana Milanova", " Atanas Rountev"]}, {"title": "The octagon abstract domain", "authors": []}, {"title": "Abstractions from tests", "authors": ["Mayur Naik", " Hongseok Yang", " Ghila Castelnuovo"]}, {"title": "Selective context-sensitivity guided by impact pre-analysis", "authors": ["Hakjoo Oh", " Wonchan Lee", " Kihong Heo", " Hongseok Yang"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Sparrow", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "An algorithmic mitigation of large spurious interprocedural cycles in static analysis", "authors": ["Hakjoo Oh "]}, {"title": "Access-based abstract memory localization in static analysis", "authors": ["Hakjoo Oh "]}, {"title": "Interprocedural data flow analysis in soot using value contexts", "authors": []}, {"title": "Precise concrete type inference for object-oriented languages", "authors": []}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Thomas Reps", " Susan Horwitz"]}, {"title": "The trace partitioning abstract domain", "authors": ["Xavier Rival "]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Micha Sharir "]}, {"title": "Control-Flow Analysis of Higher-Order Languages\u2014or\u2014Taming Lambda", "authors": ["Olin Grigsby Shivers"]}, {"title": "Pick your contexts well: Understanding object-sensitivity", "authors": ["Yannis Smaragdakis", " Martin Bravenboer"]}, {"title": "Refinement-based context-sensitive points-to analysis for Java", "authors": ["Manu Sridharan "]}, {"title": "Demand-driven points-to analysis for Java", "authors": ["Manu Sridharan", " Denis Gopan", " Lexin Shan"]}, {"title": "On abstraction refinement for program analyses in datalog", "authors": ["Xin Zhang", " Ravi Mangal", " Radu Grigore", " Mayur Naik"]}, {"title": "Finding optimum abstractions in parametric dataflow analysis", "authors": ["Xin Zhang", " Mayur Naik"]}]},
{"title": "Polyhedral AST Generation Is More Than Scanning Polyhedra", "time": "July 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Abstract mathematical representations such as integer polyhedra have been shown to be useful to precisely analyze computational kernels and to express complex loop transformations. Such transformations rely on abstract syntax tree (AST) generators to convert the mathematical representation back to an imperative program. Such generic AST generators avoid the need to resort to transformation-specific code generators, which may be very costly or technically difficult to develop as transformations become more complex. Existing AST generators have proven their effectiveness, but they hit limitations in more complex scenarios. Specifically, (1) they do not support or may fail to generate control flow for complex transformations using piecewise schedules or mappings involving modulo arithmetic; (2) they offer limited support for the specialization of the generated code exposing compact, straightline, vectorizable kernels with high arithmetic intensity necessary to exploit the peak performance of modern hardware; (3) they offer no support for memory layout transformations; and (4) they provide insufficient control over the AST generation strategy, preventing their application to complex domain-specific optimizations.\nWe present a new AST generation approach that extends classical polyhedral scanning to the full generality of Presburger arithmetic, including existentially quantified variables and piecewise schedules, and introduce new optimizations for the detection of components and shifted strides. Not limiting ourselves to control flow generation, we expose functionality to generate AST expressions from arbitrary piecewise quasi-affine expressions, which enables the use of our AST generator for data-layout transformations. We complement this with support for specialization by polyhedral unrolling, user-directed versioning, and specialization of AST expressions according to the location at which they are generated, and we complete this work with fine-grained user control over the AST generation strategies used. Using this generalized idea of AST generation, we present how to implement complex domain-specific transformations without the need to write specialized code generators, but instead relying on a generic AST generator parametrized to a specific problem domain.\n", "author": [{"name": "Tobias Grosser", "affiliation": "INRIA and \u00c9COLE NORMALE SUP\u00c9RIEURE, Paris, France"}, {"name": "Sven Verdoolaege", "affiliation": "INRIA, \u00c9COLE NORMALE SUP\u00c9RIEURE and KU Leuven, Paris, France"}, {"name": "Albert Cohen", "affiliation": "INRIA and \u00c9COLE NORMALE SUP\u00c9RIEURE, Paris, France"}, {"name": "Tobias Grosser", "affiliation": "INRIA and \u00c9COLE NORMALE SUP\u00c9RIEURE, Paris, France"}, {"name": "Sven Verdoolaege", "affiliation": "INRIA, \u00c9COLE NORMALE SUP\u00c9RIEURE and KU Leuven, Paris, France"}, {"name": "Albert Cohen", "affiliation": "INRIA and \u00c9COLE NORMALE SUP\u00c9RIEURE, Paris, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "24", "references": [{"title": "Scanning polyhedra with DO loop", "authors": ["Corinne Ancourt "]}, {"title": "Tiling stencil computations to maximize parallelism", "authors": ["Vinayaka B", " Irshad Pananilath"]}, {"title": "Code generation in the polyhedral model is easier than you think", "authors": ["C\u00e9dric Bastoul"]}, {"title": "Tiling and optimizing time-iterated computations on periodic domains", "authors": ["Uday Bondhugula", " Vinayaka B", " Albert Cohen", " Guillain Potron"]}, {"title": "A practical automatic polyhedral parallelization and locality optimization system", "authors": ["Uday Bondhugula", " Albert Hartono", " Jagannathan Ramanujam"]}, {"title": "Polyhedra scanning revisited", "authors": ["Chun Chen"]}, {"title": "A Framework for Composing High-Level Loop Transformations", "authors": ["Chun Chen", " Jacqueline Chame"]}, {"title": "Loop parallelization algorithms", "authors": ["Alain Darte", " Yves Robert"]}, {"title": "Parametric integer programming", "authors": ["Paul Feautrier"]}, {"title": "Some efficient solutions to the affine scheduling problem", "authors": ["Paul Feautrier"]}, {"title": "The polyhedron model", "authors": ["Paul Feautrier "]}, {"title": "Semi-automatic composition of loop transformations for deep parallelism and memory hierarchies", "authors": ["Sylvain Girbal", " Nicolas Vasilache", " C\u00e9dric Bastoul", " Albert Cohen", " David Parello", " Marc Sigler"]}, {"title": "An efficient code generation technique for tiled iteration spaces", "authors": ["Georgios Goumas", " Maria Athanasaki"]}, {"title": "Index set splitting", "authors": ["Martin Griebl", " Paul Feautrier"]}, {"title": "Hybrid hexagonal/classical tiling for GPUs", "authors": ["Tobias Grosser", " Albert Cohen", " Justin Holewinski", " Ponuswamy Sadayappan"]}, {"title": "Polly\u2014performing polyhedral optimizations on a low-level intermediate representation", "authors": ["Tobias Grosser", " Armin Gr\u00f6\u00dflinger"]}, {"title": "Optimistic delinearization of parametrically sized arrays", "authors": ["Tobias Grosser", " Louis-No\u00ebl Pouchet", " Jagannathan Ramanujam", " Ponnuswamy Sadayappan"]}, {"title": "DynTile: Parametric tiled loop generation for parallel execution on multicore processors", "authors": ["Albert Hartono", " Muthu Manik", " Jagannathan Ramanujam"]}, {"title": "A stencil compiler for short-vector SIMD architectures", "authors": ["Tom Henretty", " Richard Veras", " Franz Franchetti", " Louis-No\u00ebl Pouchet", " Jagannathan Ramanujam"]}, {"title": "High-performance code generation for stencil computations on GPU architectures", "authors": ["Justin Holewinski", " Louis-No\u00ebl Pouchet"]}, {"title": "ISO/IEC 9899:1999: Programming Languages C", "authors": ["ISO"]}, {"title": "Register tiling in nonrectangular iteration spaces", "authors": ["Marta Jim\u00e9nez"]}, {"title": "A unifying framework for iteration reordering transformations", "authors": ["Wayne Kelly "]}, {"title": "Code generation for multiple mappings", "authors": ["William Kelly", " William Pugh"]}, {"title": "Multi-level tiling: M for the price of one", "authors": ["DaeGon Kim", " Lakshminarayanan Renganarayanan", " Dave Rostron", " Sanjay Rajopadhye"]}, {"title": "When polyhedral transformations meet SIMD code generation", "authors": ["Martin Kong", " Richard Veras", " Kevin Stock", " Franz Franchetti", " Louis-No\u00ebl Pouchet"]}, {"title": "Parameterized polyhedra and their vertices", "authors": []}, {"title": "PolyBench/C 3", "authors": ["Louis-No\u00ebl Pouchet"]}, {"title": "Iterative optimization in the polyhedral model: Part II, multidimensional time", "authors": ["Louis-No\u00ebl Pouchet", " C\u00e9dric Bastoul", " Albert Cohen"]}, {"title": "Iterative optimization in the polyhedral model: Part I, one-dimensional time", "authors": ["Louis-No\u00ebl Pouchet", " C\u00e9dric Bastoul", " Albert Cohen"]}, {"title": "Iteration space slicing and its application to communication optimization", "authors": ["William Pugh "]}, {"title": "Static analysis of upper and lower bounds on dependences and parallelism", "authors": ["William Pugh "]}, {"title": "Generation of efficient nested loops from polyhedra", "authors": ["Fabien Quiller\u00e9", " Sanjay Rajopadhye"]}, {"title": "Parameterized tiled loops for free", "authors": ["Lakshminarayanan Renganarayanan", " DaeGon Kim", " Sanjay Rajopadhye"]}, {"title": "Oil and water can mix: An integration of polyhedral and AST-based transformations", "authors": ["Jun Shirako", " Louis-No\u00ebl Pouchet"]}, {"title": "Polyhedral code generation in the real world", "authors": ["Nicolas Vasilache", " C\u00e9dric Bastoul"]}, {"title": "Non-affine extensions to polyhedral code generation", "authors": ["An", " Manu Shantharam", " Mary Hall"]}, {"title": "isl: An integer set library for the polyhedral model", "authors": ["Sven Verdoolaege"]}, {"title": "Counting affine calculator and applications", "authors": ["Sven Verdoolaege"]}, {"title": "Integer set coalescing", "authors": ["Sven Verdoolaege"]}, {"title": "Polyhedral extraction tool", "authors": ["Sven Verdoolaege "]}, {"title": "Schedule trees", "authors": ["Sven Verdoolaege", " Serge Guelton", " Tobias Grosser"]}, {"title": "Equivalence checking of static affine programs using widening to handle recurrences", "authors": ["Sven Verdoolaege", " Gerda Janssens"]}, {"title": "Polyhedral parallel code generation for CUDA", "authors": ["Sven Verdoolaege", " Juan Carlos Juega", " Albert Cohen", " Jos\u00e9 Ignacio G\u00f3mez", " Christian Tenllado"]}, {"title": "Achieving scalable locality with time skewing", "authors": ["David Wonnacott"]}, {"title": "AlphaZ: A system for design space exploration in the polyhedral model", "authors": ["Tomofumi Yuki", " Gautam Gupta", " DaeGon Kim", " Tanveer Pathan"]}, {"title": "Improving polyhedral code generation for high-level synthesis", "authors": ["Wei Zuo", " Peng Li", " Deming Chen", " Louis-No\u00ebl Pouchet", " Shunan Zhong"]}]},
{"title": "Affine Refinement Types for Secure Distributed Programming", "time": "August 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Recent research has shown that it is possible to leverage general-purpose theorem-proving techniques to develop powerful type systems for the verification of a wide range of security properties on application code. Although successful in many respects, these type systems fall short of capturing resource-conscious properties that are crucial in large classes of modern distributed applications. In this article, we propose the first type system that statically enforces the safety of cryptographic protocol implementations with respect to authorization policies expressed in affine logic. Our type system draws on a novel notion of \u201cexponential serialization\u201d of affine formulas, a general technique to protect affine formulas from the effect of duplication. This technique allows formulate of an expressive logical encoding of the authentication mechanisms underpinning distributed resource-aware authorization policies. We discuss the effectiveness of our approach on two case studies: the EPMO e-commerce protocol and the Kerberos authentication protocol. We finally devise a sound and complete type-checking algorithm, which is the key to achieving an efficient implementation of our analysis technique.\n", "author": [{"name": "Michele Bugliesi", "affiliation": "Universit\u00e0 Ca\u2019 Foscari Venezia, Venezia Mestre (Italy)"}, {"name": "Stefano Calzavara", "affiliation": "Universit\u00e0 Ca\u2019 Foscari Venezia, Venezia Mestre (Italy)"}, {"name": "Fabienne Eigner", "affiliation": "CISPA, Saarland University, Saarbr\u00fccken, Germany"}, {"name": "Matteo Maffei", "affiliation": "CISPA, Saarland University, Saarbr\u00fccken, Germany"}, {"name": "Michele Bugliesi", "affiliation": "Universit\u00e0 Ca\u2019 Foscari Venezia, Venezia Mestre (Italy)"}, {"name": "Stefano Calzavara", "affiliation": "Universit\u00e0 Ca\u2019 Foscari Venezia, Venezia Mestre (Italy)"}, {"name": "Fabienne Eigner", "affiliation": "CISPA, Saarland University, Saarbr\u00fccken, Germany"}, {"name": "Matteo Maffei", "affiliation": "CISPA, Saarland University, Saarbr\u00fccken, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Mobile values, new names, and secure communication", "authors": ["Mart\u00edn Abadi "]}, {"title": "The AVISPA tool for the automated validation of Internet security protocols and applications", "authors": ["Aless", " Yohan Boichut", " Yannick Chevalier", " Luca Compagna", " Jorge Cu\u00e9llar", " Paul Hankes Drielsma", " Pierre-Cyrille H\u00e9am", " Olga Kouchnarenko", " Jacopo Mantovani", " Sebastian M\u00f6dersheim", " David von Oheimb", " Micha\u00ebl Rusinowitch", " Judson Santiago", " Mathieu Turuani", " Luca Vigan\u00f2"]}, {"title": "A calculus of challenges and responses", "authors": ["Michael Backes", " Agostino Cortesi", " Riccardo Focardi"]}, {"title": "Causality-based abstraction of multiplicity in cryptographic protocols", "authors": ["Michael Backes", " Agostino Cortesi"]}, {"title": "Achieving security despite compromise using zero-knowledge", "authors": ["Michael Backes", " Catalin Hritcu"]}, {"title": "Type-checking Zero-knowledge", "authors": ["Michael Backes", " C\u0103t\u0103lin Hri\u0163cu"]}, {"title": "Union and intersection types for secure protocol implementations", "authors": ["Michael Backes", " Catalin Hri\u0163cu"]}, {"title": "Union and intersection types for secure protocol implementations", "authors": ["Michael Backes", " Catalin Hri\u0163cu"]}, {"title": "Computationally sound verification of source code", "authors": ["Michael Backes", " Matteo Maffei"]}, {"title": "Type inference in intuitionistic linear logic", "authors": ["Patrick Baillot "]}, {"title": "Refinement types for secure implementations", "authors": ["Jesper Bengtson", " Karthikeyan Bhargavan", " C\u00e9dric Fournet"]}, {"title": "Cryptographic protocol synthesis and verification for multiparty sessions", "authors": ["Karthikeyan Bhargavan", " Ricardo Corin", " Pierre-Malo Deni\u00e9lou", " C\u00e9dric Fournet"]}, {"title": "Modular verification of security protocol code by typing", "authors": ["Karthikeyan Bhargavan", " C\u00e9dric Fournet"]}, {"title": "Verified interoperable implementations of security protocols", "authors": ["Karthikeyan Bhargavan", " C\u00e9dric Fournet"]}, {"title": "Modular typestate checking of aliased objects", "authors": ["Kevin Bierhoff "]}, {"title": "An efficient cryptographic protocol verifier based on prolog rules", "authors": ["Bruno Blanchet"]}, {"title": "Using horn clauses for analyzing security protocols", "authors": ["Bruno Blanchet"]}, {"title": "Resource-aware authorization policies for statically typed cryptographic protocols", "authors": ["Michele Bugliesi", " Stefano Calzavara", " Fabienne Eigner"]}, {"title": "Affine refinement types for authentication and authorization", "authors": ["Michele Bugliesi", " Stefano Calzavara", " Fabienne Eigner"]}, {"title": "Logical foundations of secure resource management in protocol implementations", "authors": ["Michele Bugliesi", " Stefano Calzavara", " Fabienne Eigner"]}, {"title": "Authenticity by tagging and typing", "authors": ["Michele Bugliesi", " Riccardo Focardi"]}, {"title": "Compositional analysis of authentication protocols", "authors": ["Michele Bugliesi", " Riccardo Focardi"]}, {"title": "Analysis of typed analyses of authentication protocols", "authors": ["Michele Bugliesi", " Riccardo Focardi"]}, {"title": "Dynamic types for authentication", "authors": ["Michele Bugliesi", " Riccardo Focardi"]}, {"title": "Authorization in trust management: Features and foundations", "authors": [" Christian Skalka"]}, {"title": "The scyther tool: Verification, falsification, and analysis of security protocols", "authors": []}, {"title": "Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the Church-Rosser theorem", "authors": []}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["Manuel F\u00e4hndrich "]}, {"title": "Types for security protocols", "authors": ["Riccardo Focardi "]}, {"title": "A type discipline for authorization policies", "authors": ["C\u00e9dric Fournet"]}, {"title": "A type discipline for authorization in distributed systems", "authors": ["C\u00e9dric Fournet"]}, {"title": "Modular code-based cryptographic verification", "authors": ["C\u00e9dric Fournet", " Markulf Kohlweiss"]}, {"title": "Linear logic: Its syntax and semantics", "authors": ["Jean-Yves Girard"]}, {"title": "Authenticity by typing for security protocols", "authors": []}, {"title": "Types and effects for asymmetric cryptographic protocols", "authors": []}, {"title": "Trust management in strand spaces: A rely-guarantee method", "authors": []}, {"title": "Tags for multi-protocol authentication", "authors": ["Matteo Maffei"]}, {"title": "An effective theory of type refinements", "authors": ["Yitzhak M", " David Walker"]}, {"title": "The TAMARIN prover for the symbolic analysis of security protocols", "authors": ["Simon Meier", " Benedikt Schmidt", " Cas Cremers"]}, {"title": "Functions as processes", "authors": ["Robin Milner"]}, {"title": "Protection in programming languages", "authors": []}, {"title": "A type system for borrowing permissions", "authors": ["Karl Naden", " Robert Bocchino", " Jonathan Aldrich"]}, {"title": "Kerberos: An authentication service for open network systems", "authors": [" Clifford Neuman"]}, {"title": "A bisimulation for dynamic sealing", "authors": []}, {"title": "First-class state change in plaid", "authors": ["Joshua Sunshine", " Karl Naden", " Sven Stork", " Jonathan Aldrich"]}, {"title": "Secure distributed programming with value-dependent types", "authors": ["Nikhil Swamy", " Juan Chen", " C\u00e9dric Fournet", " Pierre-Yves Strub", " Karthikeyan Bhargavan"]}, {"title": "Cut elimination for a logic with induction and co-induction", "authors": ["Alwen Tiu "]}, {"title": "llprover - A Linear Logic Prover", "authors": ["Naoyuki Tomura"]}, {"title": "Stateful contracts for affine types", "authors": ["Jesse Tov "]}, {"title": "Lectures on Linear Logic", "authors": []}]},
{"title": "Behavioral Subtyping, Specification Inheritance, and Modular Reasoning", "time": "August 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Verification of a dynamically dispatched method call, \n.\n(), seems to depend on \n\u2019s dynamic type. To avoid case analysis and allow incremental development, object-oriented program verification uses supertype abstraction. In other words, one reasons about \n.\n() using \n\u2019s specification for \n\u2019s static type. Supertype abstraction is valid when each subtype in the program is a behavioral subtype. This article semantically formalizes supertype abstraction and behavioral subtyping for a Java-like sequential language with mutation and proves that behavioral subtyping is both necessary and sufficient for the validity of supertype abstraction. Specification inheritance, as in JML, is also formalized and proved to entail behavioral subtyping.\n", "author": [{"name": "Gary T. Leavens", "affiliation": "University of Central Florida, FL, USA"}, {"name": "David A. Naumann", "affiliation": "Stevens Institute of Technology, NJ, USA"}, {"name": "Gary T. Leavens", "affiliation": "University of Central Florida, FL, USA"}, {"name": "David A. Naumann", "affiliation": "Stevens Institute of Technology, NJ, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "Behavioral compatibility of self-typed theories", "authors": ["Suad Alagic "]}, {"title": "Inheritance and subtyping in a parallel object-oriented language", "authors": ["Pierre America"]}, {"title": "Designing an object-oriented programming language with behavioural subtyping", "authors": ["Pierre America"]}, {"title": "Proving total correctness of recursive procedures", "authors": ["Pierre America "]}, {"title": "Ten years of Hoare\u2019s logic: A survey\u2014part I", "authors": []}, {"title": "Countable nondeterminism and random assignment", "authors": []}, {"title": "Verification of Sequential and Concurrent Programs (3rd ed", "authors": []}, {"title": "Verification of object-oriented programs: A transformational approach", "authors": [" Ernst-R\u00fcdiger Olderog"]}, {"title": "A calculus of refinements for program derivations", "authors": ["Ralph-Johan Back"]}, {"title": "Refinement Calculus: A Systematic Introduction", "authors": ["Ralph-Johan Back "]}, {"title": "Design and correctness of program transformations based on control-flow analysis", "authors": ["Anindya Banerjee", " Nevin Heintze"]}, {"title": "Ownership confinement ensures representation independence for object-oriented programs", "authors": []}, {"title": "Local reasoning for global invariants, part II: Dynamic boundaries", "authors": []}, {"title": "Verification of object-oriented programs with invariants", "authors": ["Mike Barnett", " Robert DeLine", " Manuel F\u00e4hndrich"]}, {"title": "The Spec# programming system: Challenges and directions", "authors": ["Mike Barnett", " Robert DeLine", " Bart Jacobs", " Manuel F\u00e4hndrich", " Wolfram Schulte"]}, {"title": "The Spec# programming system: An overview", "authors": ["Mike Barnett"]}, {"title": "Verification of Object-Oriented Software", "authors": ["Bernhard Beckert", " Reiner H\u00e4hnle"]}, {"title": "BI hyperdoctrines and higher-order separation logic", "authors": ["Bodil Biering", " Lars Birkedal"]}, {"title": "Separation logic and abstraction", "authors": ["Gavin Bierman "]}, {"title": "Algebraic reasoning for object-oriented programming", "authors": ["Paulo Borba", " Augusto Sampaio", " Ana Cavalcanti"]}, {"title": "An algebraic model of subtypes in object-oriented languages (Draft)", "authors": []}, {"title": "A semantics of multiple inheritance", "authors": ["Luca Cardelli"]}, {"title": "A semantic foundation for specification matching", "authors": []}, {"title": "Model variables: Cleanly supporting abstraction in design by contract", "authors": ["Yoonsik Cheon", " Murali Sitaraman"]}, {"title": "Enhancing modular OO verification with separation logic", "authors": ["Wei-Ngan Chin", " Cristina David", " Huu Hai Nguyen"]}, {"title": "Data Refinement: Model-Oriented Proof Methods and Their Comparison", "authors": ["Willem-Paul de Roever "]}, {"title": "Forcing behavioral subtyping through specification inheritance", "authors": []}, {"title": "A Discipline of Programming", "authors": []}, {"title": "Lazy behavioral subtyping", "authors": ["Johan Dovl", " Einar Broch Johnsen", " Olaf Owe"]}, {"title": "Lazy behavioral subtyping", "authors": ["Johan Dovl", " Einar Broch Johnsen", " Olaf Owe"]}, {"title": "Incremental reasoning with lazy behavioral subtyping for multiple inheritance", "authors": ["Johan Dovl", " Einar Broch Johnsen", " Olaf Owe"]}, {"title": "Eiffel: Analysis, Design, and Programming Language (2nd ed", "authors": ["ECMA International"]}, {"title": "Abstraction for concurrent objects", "authors": ["Ivana Filipovic", " Noam Rinetzky"]}, {"title": "Contract soundness for object-oriented languages", "authors": ["Robert Bruce Findler "]}, {"title": "Behavioral contracts and behavioral subtyping", "authors": ["Robert Bruce Findler", " Mario Latendresse"]}, {"title": "Extended static checking for Java", "authors": ["Cormac Flanagan", " Mark Lillibridge", " Greg Nelson"]}, {"title": "A complete axiomatic system for proving deductions about recursive programs", "authors": ["David Harel", " Amir Pnueli"]}, {"title": "Programs, Recursion, and Unbounded Choice", "authors": ["Wim Hesselink"]}, {"title": "Proofs of correctness of data representations", "authors": []}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Atsushi Igarashi", " Benjamin Pierce"]}, {"title": "Hoare logic and auxiliary variables", "authors": ["Thomas Kleymann"]}, {"title": "Verifying Object-Oriented Programs That Use Subtypes", "authors": []}, {"title": "Modular Verification of Object-Oriented Programs with Subtypes", "authors": []}, {"title": "JML\u2019s rich, inherited specifications for behavioral subtypes", "authors": []}, {"title": "Preliminary design of JML: A behavioral interface specification language for Java", "authors": []}, {"title": "Concepts of behavioral subtyping and a sketch of their extension to component-based systems", "authors": []}, {"title": "Preliminary Definition of Core JML", "authors": []}, {"title": "Specification and verification of object-oriented programs using supertype abstraction", "authors": []}, {"title": "Toward Reliable Modular Programs", "authors": []}, {"title": "Efficient weakest preconditions", "authors": []}, {"title": "A verification methodology for model fields", "authors": []}, {"title": "Data abstraction and information hiding", "authors": []}, {"title": "Data abstraction and hierarchy", "authors": ["Barbara Liskov"]}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": "Eiffel: A Langauge for Software Engineering", "authors": ["Bertr"]}, {"title": "Object-Oriented Software Construction (2nd ed", "authors": ["Bertr"]}, {"title": "The specification statement", "authors": ["Carroll Morgan"]}, {"title": "Programming from Specifications (2nd ed", "authors": ["Carroll Morgan"]}, {"title": "Modular Specification and Verification of Object-Oriented Programs", "authors": ["Peter M\u00fcller"]}, {"title": "Modular invariants for layered object structures", "authors": ["Peter M\u00fcller", " Arnd Poetzsch-Heffter"]}, {"title": "Calculating sharp adaptation rules", "authors": []}, {"title": "Verifying a secure information flow analyzer", "authors": []}, {"title": "Towards imperative modules: Reasoning about invariants and sharing of mutable state", "authors": []}, {"title": "Flexible alias protection", "authors": ["James Noble", " Jan Vitek"]}, {"title": "Local reasoning about programs that alter data structures", "authors": []}, {"title": "Separation and information hiding", "authors": [" Hongseok Yang"]}, {"title": "Hoare logic for NanoJava: Auxiliary variables, side effects and virtual methods revisited", "authors": ["David von Oheimb "]}, {"title": "On the notion of expressiveness and the rule of adaptation", "authors": ["Ernst-R\u00fcdiger Olderog"]}, {"title": "Local Reasoning for Java", "authors": ["Matthew Parkinson"]}, {"title": "Separation logic, abstraction and inheritance", "authors": ["Matthew Parkinson "]}, {"title": "Validation Techniques for Object-Oriented Proof Outlines", "authors": ["Cees Pierik"]}, {"title": "On behavioral subtyping and completeness", "authors": []}, {"title": "A proof outline logic for object-oriented programming", "authors": []}, {"title": "A programming logic for sequential Java", "authors": ["Arnd Poetzsch-Heffter "]}, {"title": "Flexible invariants through semantic collaboration", "authors": ["Nadia Polikarpova", " Julian Tschannen"]}, {"title": "A coalgebraic semantics of subtyping", "authors": ["Erik Poll"]}, {"title": "Modular semantics and logics of classes", "authors": ["Bernhard Reus"]}, {"title": "Definitional interpreters for higher-order programming languages", "authors": []}, {"title": "Idealized ALGOL and its specification logic", "authors": []}, {"title": "Concepts, Techniques, and Models of Computer Programming", "authors": ["Peter Van Roy "]}, {"title": "Specification in Fresco", "authors": ["Alan Wills"]}, {"title": "A Two-Tiered Approach to Specifying Programs", "authors": ["Jeannette Marie Wing"]}, {"title": "Modular completeness: Integrating the reuse of specified software in top-down program development", "authors": ["Job Zwiers", " Ulrich Hannemann", " Yassine Lakhnech"]}]},
{"title": "A Dynamic Continuation-Passing Style for Dynamic Delimited Continuations", "time": "October 2015", "keyword": ["Programming Languages and Systems"], "abstract": "We put a preexisting definitional abstract machine for dynamic delimited continuations in defunctionalized form, and we present the consequences of this adjustment. We first prove the correctness of the adjusted abstract machine. Because it is in defunctionalized form, we can refunctionalize it into a higher-order evaluation function. This evaluation function, which is compositional, is in continuation+state-passing style and threads a trail of delimited continuations and a meta-continuation. Since this style accounts for dynamic delimited continuations, we refer to it as \u201cdynamic continuation-passing style\u201d and we present the corresponding dynamic CPS transformation. We show that the notion of computation induced by dynamic CPS takes the form of a continuation monad with a recursive answer type. This continuation monad suggests a new simulation of dynamic delimited continuations in terms of static ones. Finally, we present new applications of dynamic delimited continuations, including a meta-circular evaluator. The significance of the present work is that the computational artifacts surrounding dynamic CPS are not independent designs: they are mechanical consequences of having put the definitional abstract machine in defunctionalized form.\n", "author": [{"name": "Dariusz Biernacki", "affiliation": "University of Wroc\u0142aw, Wroc\u0142aw, Poland"}, {"name": "Olivier Danvy", "affiliation": "Aarhus University, Aarhus N, Denmark"}, {"name": "Kevin Millikin", "affiliation": "Google, Aarhus N, Denmark"}, {"name": "Dariusz Biernacki", "affiliation": "University of Wroc\u0142aw, Wroc\u0142aw, Poland"}, {"name": "Olivier Danvy", "affiliation": "Aarhus University, Aarhus N, Denmark"}, {"name": "Kevin Millikin", "affiliation": "Google, Aarhus N, Denmark"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "A functional correspondence between evaluators and abstract machines", "authors": ["Mads Sig Ager", " Dariusz Biernacki", " Olivier Danvy"]}, {"title": "Classical call-by-need sequent calculi: The unity of semantic artifacts", "authors": [" Paul Downen", " Hugo Herbelin", " Keiko Nakata"]}, {"title": "Polymorphic delimited continuations", "authors": ["Kenichi Asai "]}, {"title": "An operational foundation for delimited continuations in the CPS hierarchy", "authors": ["Ma\u0142gorzata Biernacka", " Dariusz Biernacki"]}, {"title": "A syntactic correspondence between context-sensitive calculi and abstract machines", "authors": ["Ma\u0142gorzata Biernacka "]}, {"title": "The Theory and Practice of Programming Languages with Delimited Continuations", "authors": ["Dariusz Biernacki"]}, {"title": "A simple proof of a folklore theorem about delimited control", "authors": ["Dariusz Biernacki "]}, {"title": "On the static and dynamic extents of delimited continuations", "authors": ["Dariusz Biernacki", " Olivier Danvy"]}, {"title": "Proceedings of the 21st Annual ACM Symposium on Principles of Programming Languages", "authors": []}, {"title": "Proceedings of the 1988 ACM Conference on Lisp and Functional Programming", "authors": []}, {"title": "A scheme for a higher-level semantic algebra", "authors": ["William Clinger"]}, {"title": "Back to direct style", "authors": ["Olivier Danvy"]}, {"title": "An Analytical Approach to Programs as Data Objects", "authors": ["Olivier Danvy"]}, {"title": "A Functional Abstraction of Typed Contexts", "authors": ["Olivier Danvy "]}, {"title": "Abstracting control", "authors": ["Olivier Danvy "]}, {"title": "Representing control, a study of the CPS transformation", "authors": ["Olivier Danvy "]}, {"title": "Compiling Monads", "authors": ["Olivier Danvy", " J\u00fcrgen Koslowski"]}, {"title": "Back to direct style II: First-class continuations", "authors": []}, {"title": "Intensions and extensions in a reflective tower", "authors": ["Olivier Danvy "]}, {"title": "A rational deconstruction of Landin\u2019s SECD machine with the J operator", "authors": ["Olivier Danvy "]}, {"title": "Refunctionalization at work", "authors": ["Olivier Danvy "]}, {"title": "Defunctionalization at work", "authors": []}, {"title": "Lambda-dropping: Transforming recursive equations into programs with block structure", "authors": []}, {"title": "A systematic approach to delimited control with multiple prompts", "authors": []}, {"title": "A monadic framework for subcontinuations", "authors": [" Simon Peyton-Jones"]}, {"title": "Reflections on Landin\u2019s J operator: A partly historical note", "authors": ["Matthias Felleisen"]}, {"title": "The theory and practice of first-class prompts", "authors": ["Matthias Felleisen"]}, {"title": "Control operators, the SECD machine, and the \u03bb-calculus", "authors": []}, {"title": "Beyond Continuations", "authors": ["Matthias Felleisen", " Bruce Duba"]}, {"title": "Abstract continuations: A mathematical semantics for handling full functional jumps", "authors": ["Matthias Felleisen", " Mitchell W"]}, {"title": "Proceedings of the 15th Annual ACM Symposium on Principles of Programming Languages", "authors": []}, {"title": "Representing monads", "authors": ["Andrzej Filinski"]}, {"title": "Controlling Effects", "authors": ["Andrzej Filinski"]}, {"title": "A generalization of exceptions and control in ML-like languages", "authors": ["Carl Gunter", " Didier R\u00e9my"]}, {"title": "Typing first-class continuations in ML", "authors": ["Robert Harper"]}, {"title": "A generic account of continuation-passing styles", "authors": ["John Hatcliff "]}, {"title": "Continuations and concurrency", "authors": []}, {"title": "Subcontinuations", "authors": ["Robert Hieb", " III"]}, {"title": "Stores and partial continuations as first-class objects in a language and its environment", "authors": []}, {"title": "Axioms for delimited continuations in the CPS hierarchy", "authors": ["Yukiyoshi Kameyama"]}, {"title": "A sound and complete axiomatization of delimited continuations", "authors": ["Yukiyoshi Kameyama "]}, {"title": "Typed dynamic control operators for delimited continuations", "authors": ["Yukiyoshi Kameyama "]}, {"title": "Revised", "authors": ["Richard Kelsey", " William Clinger", " editors"]}, {"title": " ", "authors": []}, {"title": "How to Remove a Dynamic Prompt: Static and Dynamic Delimited Continuation Operators are Equally Expressible", "authors": ["Oleg Kiselyov"]}, {"title": "Control Abstraction for Layered Continuations: Semantics, Types and Implementation", "authors": ["Marek Materzok"]}, {"title": "Subtyping delimited continuations", "authors": ["Marek Materzok "]}, {"title": "A Structured Approach to the Transformation, Normalization and Execution of Computer Programs", "authors": ["Kevin Millikin"]}, {"title": "A Theory of Programming Language Semantics", "authors": []}, {"title": "Notions of computation and monads", "authors": ["Eugenio Moggi"]}, {"title": "Partial continuations as the difference of continuations, a duumvirate of control operators", "authors": ["Luc Moreau "]}, {"title": "Control operators, hierarchies, and pseudo-classical type systems: A-translation at work", "authors": []}, {"title": "A dynamic extent control operator for partial continuations", "authors": ["Christian Queinnec "]}, {"title": "Definitional interpreters for higher-order programming languages", "authors": []}, {"title": "A static simulation of dynamic delimited control", "authors": ["Chung-chieh Shan"]}, {"title": "Control delimiters and their hierarchies", "authors": ["Dorai Sitaram "]}, {"title": "Reasoning with continuations II: Full abstraction for models of control", "authors": ["Dorai Sitaram "]}, {"title": "Comprehending monads", "authors": ["Philip Wadler"]}, {"title": "Monads and composable continuations", "authors": ["Philip Wadler"]}, {"title": "Proceedings of the 1990 ACM Conference on Lisp and Functional Programming", "authors": []}, {"title": "The mystery of the tower revealed: A non-reflective description of the reflective tower", "authors": []}]},
{"title": "Fast: A Transducer-Based Language for Tree Manipulation", "time": "October 2015", "keyword": ["Programming Languages and Systems"], "abstract": "Tree automata and transducers are used in a wide range of applications in software engineering. While these formalisms are of immense practical use, they can only model finite alphabets. To overcome this problem we augment tree automata and transducers with symbolic alphabets represented as parametric theories. Admitting infinite alphabets makes these models more general and succinct than their classic counterparts. Despite this, we show how the main operations, such as composition and language equivalence, remain computable given a decision procedure for the alphabet theory. We introduce a high-level language called F\n that acts as a front-end for the preceding formalisms.\n", "author": [{"name": "Loris D'antoni", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Margus Veanes", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "Benjamin Livshits", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "David Molnar", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "Loris D'antoni", "affiliation": "University of Pennsylvania, Philadelphia, PA"}, {"name": "Margus Veanes", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "Benjamin Livshits", "affiliation": "Microsoft Research, Redmond, WA"}, {"name": "David Molnar", "affiliation": "Microsoft Research, Redmond, WA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "Streaming tree transducers", "authors": ["Rajeev Alur "]}, {"title": "Composition of top-down and bottom-up tree transductions", "authors": []}, {"title": "Streaming transformations for XML-STX", "authors": ["Oliver Becker"]}, {"title": "Two-variable logic on data trees and XML reasoning", "authors": ["Mikolaj Boja\u0144czyk", " Claire David", " Anca Muscholl", " Thomas Schwentick"]}, {"title": "Sigma&ast;: Symbolic learning of input-output specifications", "authors": ["Matko Botin\u010dan "]}, {"title": "Antichain-based universality and inclusion testing over nondeterministic finite tree automata", "authors": ["Ahmed Bouajjani", " Peter Habermehl", " Lukas Holik", " Tayssir Touili"]}, {"title": "Tree Automata Techniques and Applications", "authors": ["Hubert Comon", " Max Dauchet", " Remi Gilleron", " Christof L\u00f6ding", " Florent Jacquemard", " Denis Lugiez", " Sophie Tison"]}, {"title": "Fragments of ML decidable by nested data class memory automata", "authors": ["Conrad Cotton-Barratt", " David Hopkins"]}, {"title": "Equivalence of extended symbolic finite transducers", "authors": ["Loris D\u2019Antoni "]}, {"title": "Static analysis of string encoders and decoders", "authors": ["Loris D\u2019Antoni "]}, {"title": "Minimization of symbolic automata", "authors": ["Loris D\u2019Antoni "]}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo de Moura "]}, {"title": "Satisfiability modulo theories: Introduction & applications", "authors": ["Leonardo de Moura "]}, {"title": "Bottom-up and top-down tree transformations\u2014A comparison", "authors": ["Joost Engelfriet"]}, {"title": "Top-down tree transducers with regular look-ahead", "authors": ["Joost Engelfriet"]}, {"title": "Some open questions and recent results on tree transducers and tree languages", "authors": ["Joost Engelfriet"]}, {"title": "The equivalence problem for deterministic MSO tree transducers is decidable", "authors": ["Joost Engelfriet "]}, {"title": "Macro tree transducers", "authors": ["Joost Engelfriet "]}, {"title": "Decidability results concerning tree transducers", "authors": []}, {"title": "Logic programs as types for logic programs", "authors": []}, {"title": "Variants of top-down tree transducers with look-ahead", "authors": ["Zolt\u00e1n F\u00fcl\u00f6p "]}, {"title": "Forward and backward application of symbolic tree transducers", "authors": ["Zolt\u00e1n F\u00fcl\u00f6p "]}, {"title": "Syntax-Directed Semantics: Formal Models Based on Tree Transducers", "authors": []}, {"title": "On the analysis of cascading style sheets", "authors": ["Pierre Geneves", " Nabil Layaida"]}, {"title": "XQuery streaming by forest transducers", "authors": ["Shizuya Hakuta", " Sebastian Maneth", " Keisuke Nakano"]}, {"title": "C# Language Specification", "authors": ["Anders Hejlsberg", " Scott Wiltamuth"]}, {"title": "Fast and precise sanitizer analysis with BEK", "authors": ["Pieter Hooimeijer", " Benjamin Livshits", " David Molnar", " Prateek Saxena"]}, {"title": "Introduction to Automata Theory, Languages, and Computation", "authors": []}, {"title": "XDuce: A statically typed XML processing language", "authors": []}, {"title": "Higher-order multi-parameter tree transducers and recursion schemes for program verification", "authors": ["Naoki Kobayashi", " Naoshi Tabuchi"]}, {"title": "Comparison of deforestation techniques for functional programs and for tree transducers", "authors": ["Armin K\u00fchnemann"]}, {"title": "VATA: A library for efficient manipulation of non-deterministic tree automata", "authors": ["Ond Lengal", " Ji Sim\u00e1\u010dek"]}, {"title": "The power of extended top-down tree transducers", "authors": ["Andreas Maletti", " Jonathan Graehl", " Mark Hopkins"]}, {"title": "XML type checking with macro tree transducers", "authors": ["Sebastian Maneth", " Alex", " Thomas Perst"]}, {"title": "A Primer on Tree Automata Software for Natural Language Processing", "authors": ["Jonathan May "]}, {"title": "Typechecking for XML transformers", "authors": ["Tova Milo", " Dan Suciu"]}, {"title": "Macro forest transducers", "authors": ["Thomas Perst "]}, {"title": "TTT: A tree transduction language for syntactic and semantic processing", "authors": ["Adam Purtee "]}, {"title": "A survey of tree transductions", "authors": ["Jean-Claude Raoult"]}, {"title": "Equivalence of finite-valued tree transducers is decidable", "authors": ["Helmut Seidl"]}, {"title": "Haskell overloading is DEXPTIME-complete", "authors": ["Helmut Seidl"]}, {"title": ", Emoticons", "authors": []}, {"title": "Compiling language definitions: The ASF+SDF compiler", "authors": []}, {"title": "Symbolic tree transducers", "authors": ["Margus Veanes "]}, {"title": "Symbolic tree automata", "authors": ["Margus Veanes "]}, {"title": "Symbolic finite state transducers: Algorithms and applications", "authors": ["Margus Veanes", " Pieter Hooimeijer", " Benjamin Livshits", " David Molnar"]}, {"title": "Deforestation: Transforming programs to eliminate trees", "authors": ["Philip Wadler"]}, {"title": "XQuery", "authors": ["Priscilla Walmsley"]}]},
{"title": "A Logical Approach to Deciding Semantic Subtyping", "time": "October 2015", "keyword": ["Programming Languages and Systems"], "abstract": "We consider a type algebra equipped with recursive, product, function, intersection, union, and complement types, together with type variables. We consider the subtyping relation defined by Castagna and Xu [2011] over such type expressions and show how this relation can be decided in EXPTIME, answering an open question. The novelty, originality and strength of our solution reside in introducing a logical modeling for the semantic subtyping framework. We model semantic subtyping in a tree logic and use a satisfiability-testing algorithm in order to decide subtyping. We report on practical experiments made with a full implementation of the system. This provides a powerful polymorphic type system aiming at maintaining full static type-safety of functional programs that manipulate trees, even with higher-order functions, which is particularly useful in the context of XML.\n", "author": [{"name": "Nils Gesbert", "affiliation": "Grenoble INP -- Ensimag"}, {"name": "Pierre Genev\u00e8s", "affiliation": "CNRS"}, {"name": "Nabil Laya\u00efda", "affiliation": "Inria"}, {"name": "Nils Gesbert", "affiliation": "Grenoble INP -- Ensimag"}, {"name": "Pierre Genev\u00e8s", "affiliation": "CNRS"}, {"name": "Nabil Laya\u00efda", "affiliation": "Inria"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Destabilizers and independence of XML updates", "authors": ["Michael Benedikt "]}, {"title": "CDuce: An XML-centric general-purpose language", "authors": ["V\u00e9ronique Benzaken", " Giuseppe Castagna"]}, {"title": "Semantic subtyping with an SMT solver", "authors": [" C\u0103t\u0103lin Hri\u0163cu"]}, {"title": "XQuery 1", "authors": ["Scott Boag", " Don Chamberlin", " Daniela Florescu", " Jonathan Robie"]}, {"title": "Graph-based algorithms for Boolean function manipulation", "authors": []}, {"title": "Deciding validity in a spatial logic for trees", "authors": ["Cristiano Calcagno", " Luca Cardelli"]}, {"title": "Anytime, anywhere: Modal logics for mobile ambients", "authors": []}, {"title": "Set-theoretic foundation of parametric polymorphism and subtyping", "authors": ["Giuseppe Castagna "]}, {"title": "XML Path Language (XPath) Version 1", "authors": ["James Clark "]}, {"title": "Model Checking", "authors": [" Orna Grumberg"]}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo Mendon\u00e7a de Moura "]}, {"title": "Semantic subtyping: Dealing set-theoretically with function, union, intersection, and negation types", "authors": []}, {"title": "Logics for XML", "authors": ["Pierre Genev\u00e8s"]}, {"title": "Identifying query incompatibilities with evolving XML schemas", "authors": ["Pierre Genev\u00e8s", " Nabil Laya\u00efda"]}, {"title": "Efficient static analysis of XML paths and types", "authors": ["Pierre Genev\u00e8s", " Nabil Laya\u00efda"]}, {"title": "Efficiently deciding &mu;-calculus with converse over finite trees", "authors": ["Pierre Genev\u00e8s", " Nabil Laya\u00efda", " Alan Schmitt"]}, {"title": "Parametric polymorphism and semantic subtyping: The logical connection", "authors": ["Nils Gesbert", " Pierre Genev\u00e8s"]}, {"title": "Parametric polymorphism for XML", "authors": []}, {"title": "XDuce: A statically typed XML processing language", "authors": []}, {"title": "Regular expression types for XML", "authors": ["Haruo Hosoya", " J\u00e9r\u00f4me Vouillon"]}, {"title": "The zipper", "authors": []}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": "A logic for computable functions with reflexive and polymorphic types", "authors": []}, {"title": "BDD-based decision procedures for the modal logic K", "authors": ["Guoqiang Pan", " Ulrike Sattler"]}, {"title": "Types, abstraction and parametric polymorphism", "authors": []}, {"title": "XQuery 3", "authors": ["Jonathan Robie", " Don Chamberlin", " Michael Dyck"]}, {"title": "Polymorphic regular tree types and patterns", "authors": ["J\u00e9r\u00f4me Vouillon"]}]},
{"title": "Dynamic Deadlock Verification for General Barrier Synchronisation", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "We present Armus, a verification tool for dynamically detecting or avoiding barrier deadlocks. The core design of Armus is based on phasers, a generalisation of barriers that supports split-phase synchronisation, dynamic membership, and optional-waits. This allows Armus to handle the key barrier synchronisation patterns found in modern languages and libraries. We implement Armus for X10 and Java, giving the first sound and complete barrier deadlock verification tools in these settings.\nArmus introduces a novel event-based graph model of barrier concurrency constraints that distinguishes task-event and event-task dependencies. Decoupling these two kinds of dependencies facilitates the verification of distributed barriers with dynamic membership, a challenging feature of X10. Further, our base graph representation can be dynamically switched between a task-to-task model, Wait-for Graph (WFG), and an event-to-event model, State Graph (SG), to improve the scalability of the analysis.\nFormally, we show that the verification is sound and complete with respect to the occurrence of deadlock in our core phaser language, and that switching graph representations preserves the soundness and completeness properties. These results are machine checked with the Coq proof assistant. Practically, we evaluate the runtime overhead of our implementations using three benchmark suites in local and distributed scenarios. Regarding deadlock detection, distributed scenarios show negligible overheads and local scenarios show overheads below\u00a01.15\u00d7. Deadlock avoidance is more demanding, and highlights the potential gains from dynamic graph selection. In one benchmark scenario, the runtime overheads vary from 1.8\u00d7 for dynamic selection, 2.6\u00d7 for SG-static selection, and 5.9\u00d7 for WFG-static selection.\n", "author": [{"name": "Tiago Cogumbreiro", "affiliation": "Rice University, USA"}, {"name": "Raymond Hu", "affiliation": "Imperial College London, UK"}, {"name": "Francisco Martins", "affiliation": "LASIGE, Faculdade de Ci\u00eancias, Universidade de Lisboa, Portugal and University of the Azores, Portugal "}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London, UK"}, {"name": "Tiago Cogumbreiro", "affiliation": "Rice University, USA"}, {"name": "Raymond Hu", "affiliation": "Imperial College London, UK"}, {"name": "Francisco Martins", "affiliation": "LASIGE, Faculdade de Ci\u00eancias, Universidade de Lisboa, Portugal and University of the Azores, Portugal "}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "May-happen-in-parallel analysis of X10 programs", "authors": ["Shivali Agarwal", " Rajkishore Barik", " Vivek Sarkar"]}, {"title": "The design and implementation of clocked variables in X10", "authors": ["Daniel Atkins", " Alex Potanin"]}, {"title": "Design and implementation of the HPCS graph analysis benchmark on symmetric multiprocessors", "authors": []}, {"title": "Digraphs: Theory, Algorithms and Applications (2nd ed", "authors": []}, {"title": "An efficient deadlock avoidance technique", "authors": ["Ferenc Belik"]}, {"title": "A deadlock-free semantics for shared memory concurrency", "authors": ["G\u00e9rard Boudol"]}, {"title": "Magiclock: Scalable detection of potential deadlocks in large-scale multithreaded programs", "authors": ["Yan Cai "]}, {"title": "Habanero-Java: The new adventures of old X10", "authors": ["Vincent Cav\u00e9", " Jisheng Zhao", " Jun Shirako"]}, {"title": "Global communication analysis and optimization", "authors": ["Soumen Chakrabarti", " Manish Gupta"]}, {"title": "X10: An object-oriented approach to non-uniform cluster computing", "authors": ["Philippe Charles", " Christian Grothoff", " Vijay Saraswat", " Christopher Donawa", " Allan Kielstra", " Kemal Ebcioglu", " Christoph von Praun"]}, {"title": "Quantifying the effects of communication optimizations", "authors": ["Sung-Eun Choi "]}, {"title": "System deadlocks", "authors": []}, {"title": "Dynamic deadlock verification for general barrier synchronisation", "authors": ["Tiago Cogumbreiro", " Raymond Hu", " Francisco Martins"]}, {"title": "Coordinating phased activities while maintaining progress", "authors": ["Tiago Cogumbreiro", " Francisco Martins"]}, {"title": "Formalization of Habanero phasers using Coq", "authors": ["Tiago Cogumbreiro", " Jun Shirako"]}, {"title": "Deadlock avoidance in parallel programs with futures: Why parallel tasks should not wait for strangers", "authors": ["Tiago Cogumbreiro", " Rishi Surendran", " Francisco Martins", " Vivek Sarkar"]}, {"title": "Matrix multiplication via arithmetic progressions", "authors": ["Don Coppersmith "]}, {"title": "Semantics of (Resilient) X10", "authors": ["Silvia Crafa", " David Cunningham", " Vijay Saraswat", " Avraham Shinnar"]}, {"title": "Parallel Programming in Chapel", "authors": ["Steve Deitz"]}, {"title": "Trade-offs for fully dynamic transitive closure on DAGs: Breaking through the ", "authors": []}, {"title": "", "authors": []}, {"title": "Journal of the ACM 52, 2 (2005), 147--156", "authors": ["<su"]}, {"title": "Symbolic modular deadlock analysis", "authors": []}, {"title": "Cooperating Sequential Processes", "authors": []}, {"title": "Sherlock: Scalable deadlock detection for concurrent programs", "authors": ["Mahdi Eslamimehr "]}, {"title": "Performance and scalability of the NAS parallel benchmarks in Java", "authors": [" Matthew Schultz", " Haoqiang Jin"]}, {"title": "Safety verification of phaser programs", "authors": ["Zeinab Ganjei", " Ahmed Rezine", " Petru Eles"]}, {"title": "Statistically rigorous Java performance evaluation", "authors": ["Andy Georges", " Dries Buytaert"]}, {"title": "Dynamic deadlock avoidance in systems code using statically inferred effects", "authors": ["Prodromos Gerakios", " Nikolaos Papaspyrou", " Konstantinos Sagonas"]}, {"title": "X10X: Model checking a new programming language with an \u201cold\u201d model checker", "authors": ["Milos Gligoric"]}, {"title": "The fuzzy barrier: A mechanism for high speed synchronization of processors", "authors": ["Rajiv Gupta"]}, {"title": "Runtime MPI collective checking with tree-based overlay networks", "authors": ["Tobias Hilbrich", " Fabian H\u00e4nsel", " Martin Schulz"]}, {"title": "Distributed wait state tracking for runtime MPI deadlock detection", "authors": ["Tobias Hilbrich", " Joachim Protze", " Christel Baier"]}, {"title": "A graph based approach for MPI deadlock detection", "authors": ["Tobias Hilbrich", " Martin Schulz"]}, {"title": "Order preserving event aggregation in TBONs", "authors": ["Tobias Hilbrich", " Martin Schulz"]}, {"title": "MPI runtime error detection with MUST: Advances in deadlock detection", "authors": ["Tobias Hilbrich", " Joachim Protze", " Martin Schulz"]}, {"title": "Some deadlock properties of computer systems", "authors": []}, {"title": "Cooperative scheduling of parallel tasks with general synchronization patterns", "authors": ["Shams Mahmood Imam "]}, {"title": "The generalized deadlock resolution problem", "authors": ["Kamal Jain", " MohammadTaghi Hajiaghayi"]}, {"title": "Two-phase barrier: A synchronization primitive for improving the processor utilization", "authors": ["Inbum Jung", " Jongwoong Hyun", " Joonwon Lee"]}, {"title": "Enforcing textual alignment of collectives using dynamic checks", "authors": ["Amir Kamil "]}, {"title": "Deadlock detection in distributed databases", "authors": ["Edgar Knapp"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Leslie Lamport"]}, {"title": "Verification of static and dynamic barrier synchronization using bounded permissions", "authors": ["Duy-Khanh Le", " Wei-Ngan Chin"]}, {"title": "Featherweight X10: A core calculus for async-finish parallelism", "authors": []}, {"title": "The design of a task parallel library", "authors": ["Daan Leijen", " Wolfram Schulte"]}, {"title": "Deadlock avoidance for streaming computations with filtering", "authors": ["Peng Li", " Kunal Agrawal", " Jeremy Buhler"]}, {"title": "The HPC challenge (HPCC) benchmark suite", "authors": [" Jeremy Kepner", " Rolf Rabenseifner"]}, {"title": "Deadlock avoidance revisited", "authors": ["Toshimi Minoura"]}, {"title": "Efficient determination of the transitive closure of a directed graph", "authors": ["Ian Munro"]}, {"title": "Design and verification of distributed phasers", "authors": ["Karthik Murthy", " Sri Raj Paul", " Tiago Cogumbreiro"]}, {"title": "Quasi-static scheduling for safe futures", "authors": ["Arm", " Xiangyu Zhang"]}, {"title": "Deadlocks: From exhibiting to healing", "authors": ["Yarden Nir-Buchbinder", " Rachel Tzoref"]}, {"title": "A run-time deadlock detector for concurrent Java programs", "authors": ["Yusuke Nonaka", " Kazuo Ushijima", " Hibiki Serizawa", " Shigeru Murata"]}, {"title": "Hardware barrier synchronization: Dynamic barrier MIMD (DBM)", "authors": []}, {"title": "OpenStream: Expressiveness and data-flow compilation of OpenMP streaming programs", "authors": ["Antoniu Pop "]}, {"title": "Avoiding deadlock avoidance", "authors": []}, {"title": "Polynomial-complexity deadlock avoidance policies for sequential resource allocation systems", "authors": []}, {"title": "A scalable deadlock detection algorithm for UPC collective operations", "authors": ["Indranil Roy", " James Coyle"]}, {"title": "Trace driven dynamic deadlock detection and reproduction", "authors": ["Malavika Samak "]}, {"title": "Concurrent clustered programming", "authors": ["Vijay Saraswat "]}, {"title": "Verification of producer-consumer synchronization in GPU programs", "authors": ["Rahul Sharma", " Michael Bauer"]}, {"title": "Survey of Deadlock Detection in Distributed Concurrent Programming Environments and Its Application to Real-Time Systems", "authors": []}, {"title": "Phasers: A unified deadlock-free construct for collective and point-to-point synchronization", "authors": ["Jun Shirako", " Vivek Sarkar"]}, {"title": "Phaser accumulators: A new reduction construct for dynamic parallelism", "authors": ["Jun Shirako", " Vivek Sarkar"]}, {"title": "Phaser beams: Integrating stream parallelism with task parallelism", "authors": ["Jun Shirako", " Drago\u015f-Dumitru Sb\u00eerlea"]}, {"title": "A parallel Java Grande benchmark suite", "authors": []}, {"title": "Depth-first search and linear graph algorithms", "authors": ["Robert Tarjan"]}, {"title": "First-class synchronization barriers", "authors": ["Franklyn Turbak"]}, {"title": "Compile-time analysis and specialization of clocks in concurrent programs", "authors": ["Nalini Vasudevan", " Olivier Tardieu", " Julian Dolby"]}, {"title": "Scalable Formal Dynamic Verification of MPI Programs Through Distributed Causality Tracking", "authors": ["Anh Vo"]}, {"title": "Gadara: Dynamic deadlock avoidance for multithreaded programs", "authors": ["Yin Wang", " Terence Kelly", " Manjunath Kudlur", " St\u00e9phane Lafortune"]}, {"title": "StreamX10: A stream programming framework on X10", "authors": ["Haitao Wei", " Hong Tan", " Xiaoxian Liu"]}, {"title": "Safe futures for Java", "authors": ["Adam Welc", " Suresh Jagannathan"]}, {"title": "Concurrency analysis for shared memory programs with textually unaligned barriers", "authors": ["Yuan Zhang", " Evelyn Duesterwald"]}, {"title": "Communication optimizations for parallel C programs", "authors": []}]},
{"title": "Rigorous Estimation of Floating-Point Round-Off Errors with Symbolic Taylor Expansions", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "Rigorous estimation of maximum floating-point round-off errors is an important capability central to many formal verification tools. Unfortunately, available techniques for this task often provide very pessimistic overestimates, causing unnecessary verification failure. We have developed a new approach called \n that avoids these problems, and implemented a new tool called FPTaylor embodying this approach. Key to our approach is the use of rigorous global optimization, instead of the more familiar interval arithmetic, affine arithmetic, and/or SMT solvers. FPTaylor emits per-instance analysis certificates in the form of HOL Light proofs that can be machine checked.\nIn this article, we present the basic ideas behind Symbolic Taylor Expansions in detail. We also survey as well as thoroughly evaluate six tool families, namely, Gappa (two tool options studied), Fluctuat, PRECiSA, Real2Float, Rosa, and FPTaylor (two tool options studied) on 24 examples, running on the same machine, and taking care to find the best options for running each of these tools. This study demonstrates that FPTaylor estimates round-off errors within much tighter bounds compared to other tools on a significant number of case studies. We also release FPTaylor along with our benchmarks, thus contributing to future studies and tool development in this area.\n", "author": [{"name": "Alexey Solovyev", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Marek S. Baranowski", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Ian Briggs", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Charles Jacobsen", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Zvonimir Rakamari\u0107", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Ganesh Gopalakrishnan", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Alexey Solovyev", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Marek S. Baranowski", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Ian Briggs", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Charles Jacobsen", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Zvonimir Rakamari\u0107", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}, {"name": "Ganesh Gopalakrishnan", "affiliation": "School of Computing, University of Utah, Salt Lake City, UT, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "Finding and proving the optimum: Cooperative stochastic and deterministic search", "authors": ["Jean-Marc Alliot", " Nicolas Dur", " David Gianazza"]}, {"title": "Implementing an interval computation library for OCaml on x86/AMD64 architectures (short paper)", "authors": ["Jean-Marc Alliot", " Nicolas Dur", " David Gianazza"]}, {"title": "Printing floating-point numbers: A faster, always correct method", "authors": ["Marc Andrysco", " Ranjit Jhala"]}, {"title": "Automatic detection of floating-point exceptions", "authors": [" Thanh Vo", " Vu Le"]}, {"title": "Verifying relative error bounds using symbolic simulation", "authors": ["Jesse Bingham "]}, {"title": "Wave equation numerical resolution: A comprehensive mechanized proof of a C program", "authors": ["Sylvie Boldo", " Fran\u00e7ois Cl\u00e9ment", " Jean-Christophe Filli\u00e2tre", " Micaela Mayero", " Guillaume Melquiond"]}, {"title": "Combining Coq and Gappa for certifying floating-point programs", "authors": ["Sylvie Boldo", " Jean-Christophe Filli\u00e2tre"]}, {"title": "Verified compilation of floating-point computations", "authors": ["Sylvie Boldo", " Jacques-Henri Jourdan", " Xavier Leroy"]}, {"title": "Flocq: A unified library for proving floating-point algorithms in Coq", "authors": ["Sylvie Boldo "]}, {"title": "Mixed abstractions for floating-point arithmetic", "authors": ["Angelo Brillout", " Daniel Kroening"]}, {"title": "A sound floating-point polyhedra abstract domain", "authors": ["Liqian Chen", " Antoine Min\u00e9"]}, {"title": "Rigorous floating-point mixed-precision tuning", "authors": ["Wei-Fan Chiang", " Mark Baranowski", " Ian Briggs", " Alexey Solovyev", " Ganesh Gopalakrishnan"]}, {"title": "Efficient search for inputs causing high floating-point errors", "authors": ["Wei-Fan Chiang", " Ganesh Gopalakrishnan", " Zvonimir Rakamari\u0107"]}, {"title": "The MathSAT5 SMT solver", "authors": ["Aless", " Alberto Griggio", " BastiaanJoost Schaafsma"]}, {"title": "The Coq Proof Assistant", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "The ASTR\u00c9E analyser", "authors": ["Patrick Cousot", " Radhia Cousot", " Jer\u00f4me Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Improving the numerical accuracy of programs by automatic transformation", "authors": ["Nasrine Damouche", " Matthieu Martel"]}, {"title": "CR-LIBM: A correctly rounded elementary function library", "authors": ["Catherine Daramy", " David Defour", " Florent de Dinechin"]}, {"title": "Trustworthy numerical computation in Scala", "authors": ["Eva Darulova "]}, {"title": "Sound compilation of reals", "authors": ["Eva Darulova "]}, {"title": "Towards a compiler for reals", "authors": ["Eva Darulova "]}, {"title": "Certification of bounds on expressions involving rounded operators", "authors": ["Marc Daumas "]}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo de Moura "]}, {"title": "Towards an industrial use of FLUCTUAT on safety-critical avionics software", "authors": ["David Delmas", " Eric Goubault", " Sylvie Putot", " Jean Souyris", " Karim Tekkal"]}, {"title": "MPFR: A multiple-precision binary floating-point library with correct rounding", "authors": ["Laurent Fousse", " Guillaume Hanrot", " Vincent Lef\u00e8vre", " Patrick P\u00e9lissier"]}, {"title": "Frama-C Software Analyzers", "authors": ["Frama-"]}, {"title": "dReal: An SMT solver for nonlinear theories over the reals", "authors": ["Sicun Gao", " Soonho Kong"]}, {"title": "Miller analyzer for Matlab: A Matlab package for automatic roundoff analysis", "authors": ["Attila G\u00e1ti"]}, {"title": "Gelpia: A Global Optimizer for Real Functions", "authors": ["Gelpi"]}, {"title": "Taming test inputs for separation assurance", "authors": ["Dimitra Giannakopoulou", " Falk Howar", " Malte Isberner", " Todd Lauderdale", " Zvonimir Rakamari\u0107"]}, {"title": "What every computer scientist should know about floating-point arithmetic", "authors": ["David Goldberg"]}, {"title": "Verification of numerical programs: From real numbers to floating point numbers", "authors": ["Alwyn Goodloe", " C\u00e9sar Mu\u00f1oz", " Florent Kirchner"]}, {"title": "How do you compute the midpoint of an interval? ACM Trans", "authors": ["Fr\u00e9d\u00e9ric Goualard"]}, {"title": "GAOL (Not Just Another Interval Library)", "authors": ["Fr\u00e9d\u00e9ric Goualard"]}, {"title": "Static analysis of finite precision computations", "authors": ["Eric Goubault "]}, {"title": "Deciding floating-point logic with systematic abstraction", "authors": ["Leopold Haller", " Alberto Griggio", " Martin Brain"]}, {"title": "Formal verification of floating point trigonometric functions", "authors": ["John Harrison"]}, {"title": "Floating-point verification using theorem proving", "authors": ["John Harrison"]}, {"title": "HOL light: An overview", "authors": ["John Harrison"]}, {"title": "IEEE Standard for floating-point arithmetic", "authors": [" 1--7"]}, {"title": "A parameterized floating-point formalization in HOL light", "authors": ["Charles Jacobsen", " Alexey Solovyev"]}, {"title": "The NLopt Nonlinear-Optimization Package", "authors": []}, {"title": "How Futile Are Mindless Assessments of Roundoff in Floating-Point Computation? Retrieved October 13, 2017 from https://people", "authors": ["William Kahan"]}, {"title": "GlobSol user guide", "authors": []}, {"title": "ICOS: A branch and bound based solver for rigorous global optimization", "authors": ["Yahia Lebbah"]}, {"title": "Verifying bit-manipulations of floating-point", "authors": ["Wonyeol Lee", " Rahul Sharma"]}, {"title": "Make it real: Effective floating-point reasoning via exact arithmetic", "authors": ["Miriam Leeser", " Saoni Mukherjee", " Jaideep Ramach"]}, {"title": "Towards program optimization through automated analysis of numerical precision", "authors": [" Matthew Ho"]}, {"title": "Certified roundoff error bounds using semidefinite programming", "authors": ["Victor Magron", " George Constantinides"]}, {"title": "Semantics of roundoff error propagation in finite precision calculations", "authors": ["Matthieu Martel"]}, {"title": "Program transformation for numerical precision", "authors": ["Matthieu Martel"]}, {"title": "RangeLab: A static-analyzer to bound the accuracy of finite-precision computations", "authors": ["Matthieu Martel"]}, {"title": "Certified, efficient and sharp univariate Taylor models in Coq", "authors": ["\u00c9rik Martin-Dorel", " Laurence Rideau", " Laurent Th\u00e9ry", " Micaela Mayero"]}, {"title": "Maxima, a Computer Algebra System", "authors": ["Maxima"]}, {"title": "Floating-point arithmetic in the Coq system", "authors": ["Guillaume Melquiond"]}, {"title": "An Introduction to Multivariable Analysis from Vector to Manifold", "authors": ["Piotr Mikusinski "]}, {"title": "Software for roundoff analysis", "authors": ["Webb Miller"]}, {"title": "Interval Analysis", "authors": []}, {"title": "An approach for floating-point error analysis using computer algebra", "authors": []}, {"title": "A formally verified generic branching algorithm for global optimization", "authors": ["Anthony Narkawicz "]}, {"title": "NASA World Wind Java SDK", "authors": ["NASA"]}, {"title": "Taylor forms\u2014Use and limits", "authors": ["Arnold Neumaier"]}, {"title": "Complete search in continuous global optimization and constraint satisfaction", "authors": ["Arnold Neumaier"]}, {"title": "OpenOpt: Universal Numerical Optimization Package", "authors": ["OpenOpt"]}, {"title": "Verifying (in-)stability in floating-point programs by increasing precision, using SMT solving", "authors": ["Gabriele Paganelli "]}, {"title": "Automatically improving accuracy for floating point expressions", "authors": ["Pavel Panchekha", " Alex Sanchez-Stern"]}, {"title": "Verifying floating-point programs with constraint programming and abstract interpretation techniques", "authors": ["Olivier Ponsini", " Claude Michel"]}, {"title": "SMACK: Decoupling source language details from verifier implementations", "authors": ["Zvonimir Rakamari\u0107 "]}, {"title": "Taylor models and floating-point arithmetic: Proof that arithmetic operations are validated in COSY", "authors": []}, {"title": "An SMT-LIB theory of binary floating-point arithmetic", "authors": ["Philipp R\u00fcmmer "]}, {"title": "TOPLAS FPTaylor Results Table", "authors": ["Alexey Solovyev"]}, {"title": "Formal verification of nonlinear inequalities with Taylor interval approximations", "authors": []}, {"title": "Rigorous estimation of floating-point round-off errors with symbolic Taylor expansions", "authors": ["Alexey Solovyev", " Charles Jacobsen", " Zvonimir Rakamari\u0107"]}, {"title": "An introduction to affine arithmetic", "authors": []}, {"title": "Automatic error analysis using computer algebraic manipulation", "authors": []}, {"title": "Floating-point arithmetic may give inaccurate results in Excel", "authors": ["Microsoft Support"]}, {"title": "Trid Function", "authors": ["Sonja Surjanovic "]}, {"title": "Schloss Dagstuhl: Seminar Homepage", "authors": ["Laura Titolo"]}, {"title": "Chebyschev Polynomial of the First Kind\u2014From Wolfram MathWorld", "authors": ["Eric Weisstein"]}, {"title": "Legendre Polynomial\u2014From Wolfram MathWorld", "authors": ["Eric Weisstein"]}]},
{"title": "Type-Driven Gradual Security with References", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "In security-typed programming languages, types statically enforce noninterference between potentially conspiring values, such as the arguments and results of functions. But to adopt static security types, like other advanced type disciplines, programmers face a steep wholesale transition, often forcing them to refactor working code just to satisfy their type checker. To provide a gentler path to security typing that supports safe and stylish but hard-to-verify programming idioms, researchers have designed languages that blend static and dynamic checking of security types. Unfortunately, most of the resulting languages only support static, type-based reasoning about noninterference if a program is entirely statically secured. This limitation substantially weakens the benefits that dynamic enforcement brings to static security typing. Additionally, current proposals are focused on languages with explicit casts and therefore do not fulfill the vision of gradual typing, according to which the boundaries between static and dynamic checking only arise from the (im)precision of type annotations and are transparently mediated by implicit checks.\nIn this article, we present GSL\n, a gradual security-typed higher-order language with references. As a gradual language, GSL\n supports the range of static-to-dynamic security checking exclusively driven by type annotations, without resorting to explicit casts. Additionally, GSL\n lets programmers use types to reason statically about termination-insensitive noninterference in \n programs, even those that enforce security dynamically. We prove that GSL\n satisfies all but one of Siek et al.\u2019s criteria for gradually-typed languages, which ensure that programs can seamlessly transition between simple typing and security typing. A notable exception regards the dynamic gradual guarantee, which some specific programs must violate if they are to satisfy noninterference; it remains an open question whether such a language could fully satisfy the dynamic gradual guarantee. To realize this design, we were led to draw a sharp distinction between syntactic type \n and semantic type \n, each of which constrains the design of the gradual language.\n", "author": [{"name": "Mat\u00edas Toro", "affiliation": "PLEIAD Laboratory, Computer Science Department (DCC), University of Chile, Beauchef, Santiago, Chile "}, {"name": "Ronald Garcia", "affiliation": "Software Practices Laboratory, University of British Columbia, Vancouver, Canada"}, {"name": "\u00c9ric Tanter", "affiliation": "PLEIAD Laboratory, Computer Science Department (DCC), University of Chile, Beauchef, Santiago, Chile "}, {"name": "Mat\u00edas Toro", "affiliation": "PLEIAD Laboratory, Computer Science Department (DCC), University of Chile, Beauchef, Santiago, Chile "}, {"name": "Ronald Garcia", "affiliation": "Software Practices Laboratory, University of British Columbia, Vancouver, Canada"}, {"name": "\u00c9ric Tanter", "affiliation": "PLEIAD Laboratory, Computer Science Department (DCC), University of Chile, Beauchef, Santiago, Chile "}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "A core calculus of dependency", "authors": ["Mart\u00edn Abadi", " Anindya Banerjee", " Nevin Heintze"]}, {"title": "Semantics of Types for Mutable State", "authors": ["Amal Ahmed"]}, {"title": "Blame for all", "authors": ["Amal Ahmed", " Robert Bruce Findler", " Jeremy Siek"]}, {"title": "Theorems for free for free: Parametricity, with and without types", "authors": ["Amal Ahmed", " Dustin Jamner"]}, {"title": "Efficient purely dynamic information flow analysis", "authors": []}, {"title": "Permissive dynamic information flow analysis", "authors": []}, {"title": "Multiple facets for dynamic information flow", "authors": []}, {"title": "Multiple facets for dynamic information flow with exceptions", "authors": [" Tommy Schmitz"]}, {"title": "A theory of gradual effect systems", "authors": ["Felipe Ba\u00f1ados Schwerter", " Ronald Garcia"]}, {"title": "Gradual type-and-effect systems", "authors": ["Felipe Ba\u00f1ados Schwerter", " Ronald Garcia"]}, {"title": "Integrity Considerations for Secure Computer Systems", "authors": []}, {"title": "HLIO: Mixing static and dynamic typing for information-flow control in Haskell", "authors": ["Pablo Buiras", " Dimitrios Vytiniotis"]}, {"title": "Gradual typing with union and intersection types", "authors": ["Giuseppe Castagna "]}, {"title": "Fine-grained information flow analysis and enforcement in a Java virtual machine", "authors": []}, {"title": "A formulation of the simple theory of types", "authors": ["Alonzo Church"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "A lattice model of secure information flow", "authors": []}, {"title": "Gradual information flow typing", "authors": ["Tim Disney "]}, {"title": "Gradual security typing with references", "authors": ["Luminous Fennell "]}, {"title": "LJGS: Gradual security types for object-oriented languages", "authors": ["Luminous Fennell "]}, {"title": "Principal type schemes for gradual programs", "authors": ["Ronald Garcia "]}, {"title": "Abstracting gradual typing", "authors": ["Ronald Garcia"]}, {"title": "Deriving a Simple Gradual Security Language", "authors": ["Ronald Garcia "]}, {"title": "Foundations of typestate-oriented programming", "authors": ["Ronald Garcia", " \u00c9ric Tanter", " Roger Wolff"]}, {"title": "Integrating functional and imperative programming", "authors": []}, {"title": "Security policies and security models", "authors": []}, {"title": "Information-flow security for a core of JavaScript", "authors": ["Daniel Hedin "]}, {"title": "A perspective on information-flow control", "authors": ["Daniel Hedin "]}, {"title": "The SLam calculus: Programming with secrecy and integrity", "authors": []}, {"title": "The formulae-as-types notion of construction", "authors": []}, {"title": "On flow-sensitive security types", "authors": ["Sebastian Hunt "]}, {"title": "On polymorphic gradual typing", "authors": ["Yuu Igarashi", " Taro Sekiyama"]}, {"title": "Sums of uncertainty: Refinements go gradual", "authors": []}, {"title": "Hybrid type checking", "authors": ["Kenneth Knowles "]}, {"title": "Gradual refinement types", "authors": ["Nico Lehmann "]}, {"title": "Static analysis for efficient hybrid information-flow control", "authors": ["Scott Moore "]}, {"title": "JFlow: Practical mostly static information flow control", "authors": []}, {"title": "A decentralized model for information flow control", "authors": []}, {"title": "Protecting privacy using the decentralized label model", "authors": []}, {"title": "Information flow inference for ML", "authors": ["Fran\u00e7ois Pottier "]}, {"title": "Types, abstraction and parametric polymorphism", "authors": []}, {"title": "Dynamic vs", "authors": ["Alej"]}, {"title": "Language-based information-flow security", "authors": []}, {"title": "Declassification: Dimensions and principles", "authors": ["Andrei Sabelfeld "]}, {"title": "Gradual ownership types", "authors": ["Ilya Sergey "]}, {"title": "Dynamic dependency monitoring to secure information flow", "authors": ["Paritosh Shroff", " Scott Smith"]}, {"title": "Gradual typing for objects", "authors": ["Jeremy Siek "]}, {"title": "Threesomes, with and without blame", "authors": ["Jeremy Siek "]}, {"title": "Gradual typing for functional languages", "authors": []}, {"title": "Refined criteria for gradual typing", "authors": [" Matteo Cimini"]}, {"title": "Flexible dynamic information flow control in the presence of exceptions", "authors": ["Deian Stefan", " David Mazi\u00e8res"]}, {"title": "Gradual typing for annotated type systems", "authors": ["Peter Thiemann "]}, {"title": "Type-Driven Gradual Security with References: Complete Definitions and Proofs", "authors": ["Mat\u00edas Toro", " Ronald Garcia"]}, {"title": "Customizable gradual polymorphic effects for Scala", "authors": ["Mat\u00edas Toro "]}, {"title": "A gradual interpretation of union types", "authors": ["Mat\u00edas Toro "]}, {"title": "A sound type system for secure flow analysis", "authors": ["Dennis Volpano", " Cynthia Irvine"]}, {"title": "Theorems for free&excl; In Proceedings of the 4th International Conference on Functional Programming Languages and Computer Architecture (FPCA\u201989)", "authors": ["Philip Wadler"]}, {"title": "Gradual typestate", "authors": ["Roger Wolff", " Ronald Garcia", " \u00c9ric Tanter"]}, {"title": "Programming Languages for Information Security", "authors": ["Steve Zdancewic"]}, {"title": "Secure information flow and CPS", "authors": []}, {"title": "Dynamic security labels and noninterference", "authors": []}]},
{"title": "Interconnectability of Session-Based Logical Processes", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "In multiparty session types, interconnection networks identify which roles in a session engage in communication (i.e., two roles are connected if they exchange a message). In session-based interpretations of linear logic the analogue notion corresponds to determining which processes are composed, or cut, using compatible channels typed by linear propositions. In this work, we show that well-formed interactions represented in a session-based interpretation of classical linear logic (CLL) form strictly less-expressive interconnection networks than those of a multiparty session calculus. To achieve this result, we introduce a new compositional synthesis property dubbed partial multiparty compatibility (PMC), enabling us to build a global type denoting the interactions obtained by iterated composition of well-typed CLL threads. We then show that CLL composition induces PMC global types without circular interconnections between three (or more) participants. PMC is then used to define a new CLL composition rule that can form circular interconnections but preserves the deadlock-freedom of CLL.\n", "author": [{"name": "Bernardo Toninho", "affiliation": "NOVA-LINCS, Universidade Nova de Lisboa and Imperial College London, Caparica, Portugal"}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London, United Kingdom"}, {"name": "Bernardo Toninho", "affiliation": "NOVA-LINCS, Universidade Nova de Lisboa and Imperial College London, Caparica, Portugal"}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Computational interpretations of linear logic", "authors": ["Samson Abramsky"]}, {"title": "Specification structures and propositions-as-types for concurrency", "authors": ["Samson Abramsky"]}, {"title": "Conflation confers concurrency", "authors": ["Robert Atkey", " Sam Lindley"]}, {"title": "On the &pi;-calculus and linear logic", "authors": ["Gianluigi Bellin "]}, {"title": "Monitoring networks through multiparty session types", "authors": ["Laura Bocchi", " Tzu-Chun Chen", " Romain Demangeon", " Kohei Honda"]}, {"title": "Meeting deadlines together", "authors": ["Laura Bocchi", " Julien Lange"]}, {"title": "Multiparty session types within a canonical binary theory, and beyond", "authors": []}, {"title": "Session types as intuitionistic linear propositions", "authors": ["Lu\u00eds Caires "]}, {"title": "Linear logic propositions as session types", "authors": ["Lu\u00eds Caires", " Frank Pfenning"]}, {"title": "Information flow safety in multiparty sessions", "authors": ["Sara Capecchi", " Ilaria Castellani"]}, {"title": "Coherence generalises duality: A logical explanation of multiparty session types", "authors": ["Marco Carbone", " Sam Lindley", " Fabrizio Montesi", " Carsten Sch\u00fcrmann"]}, {"title": "Deadlock-freedom-by-design: Multiparty asynchronous global programming", "authors": ["Marco Carbone "]}, {"title": "Choreographies, logically", "authors": ["Marco Carbone", " Fabrizio Montesi"]}, {"title": "Multiparty session types as coherence proofs", "authors": ["Marco Carbone", " Fabrizio Montesi", " Carsten Sch\u00fcrmann"]}, {"title": "Concurrent reversible sessions", "authors": ["Ilaria Castellani", " Mariangiola Dezani-Ciancaglini"]}, {"title": "Self-adaptation and secure information flow in multiparty communications", "authors": ["Ilaria Castellani", " Mariangiola Dezani-Ciancaglini"]}, {"title": "On the preciseness of subtyping in session types", "authors": ["Tzu-Chun Chen", " Mariangiola Dezani-Ciancaglini", " Alceste Scalas"]}, {"title": "Global progress for dynamically interleaved multiparty sessions", "authors": ["Mario Coppo", " Mariangiola Dezani-Ciancaglini", " Nobuko Yoshida"]}, {"title": "Comparing deadlock-free session typed processes", "authors": []}, {"title": "Practical interruptible conversations: Distributed dynamic verification with multiparty session types and python", "authors": ["Romain Demangeon", " Kohei Honda", " Raymond Hu", " Rumyana Neykova"]}, {"title": "On the expressiveness of multiparty sessions", "authors": ["Romain Demangeon "]}, {"title": "Multiparty compatibility in communicating automata: Characterisation and synthesis of global session types", "authors": ["Pierre-Malo Deni\u00e9lou "]}, {"title": "Cut reduction in linear logic as asynchronous session-typed communication", "authors": ["Henry DeYoung", " Luis Caires", " Frank Pfenning"]}, {"title": "Multiparty session nets", "authors": ["Luca Fossati", " Raymond Hu"]}, {"title": "An erlang implementation of multiparty session actors", "authors": ["Simon Fowler"]}, {"title": "Subtyping for session types in the pi calculus", "authors": []}, {"title": "Subtyping supports safe session substitution", "authors": []}, {"title": "Linear logic", "authors": []}, {"title": "Language primitives and type disciplines for structured communication-based programming", "authors": ["Kohei Honda"]}, {"title": "Multiparty asynchronous session types", "authors": ["Kohei Honda", " Nobuko Yoshida"]}, {"title": "Multiparty asynchronous session types", "authors": ["Kohei Honda", " Nobuko Yoshida"]}, {"title": "Hybrid session verification through endpoint API generation", "authors": ["Raymond Hu "]}, {"title": "Explicit connection actions in multiparty session types", "authors": ["Raymond Hu "]}, {"title": "Foundations of session types and behavioural contracts", "authors": ["Hans H\u00fcttel", " Ivan Lanese", " Lu\u00eds Caires", " Marco Carbone", " Pierre-Malo Deni\u00e9lou", " Dimitris Mostrous", " Luca Padovani", " Ant\u00f3nio Ravara", " Emilio Tuosto", " Hugo Torres Vieira"]}, {"title": "Monitors and blame assignment for higher-order session types", "authors": ["Limin Jia", " Hannah Gommerstadt"]}, {"title": "Synthesising choreographies from local session types", "authors": ["Julien Lange "]}, {"title": "From communicating machines to graphical choreographies", "authors": ["Julien Lange", " Emilio Tuosto"]}, {"title": "Characteristic formulae for session types", "authors": ["Julien Lange "]}, {"title": "A semantics for propositions as sessions", "authors": []}, {"title": "Talking bananas: Structural recursion for session types", "authors": []}, {"title": "Protocol-based verification of message-passing parallel programs", "authors": [" Francisco Martins", " Nicholas Ng", " Casar Santos", " Vasco Thudichum Vasconcelos"]}, {"title": "Mungo homepage", "authors": ["Mung"]}, {"title": "Timed runtime monitoring for multiparty conversations", "authors": ["Rumyana Neykova", " Laura Bocchi"]}, {"title": "Session type provider: Compile-time API generation for distributed protocols in F#", "authors": ["Rumyana Neykova", " Raymond Hu", " Nobuko Yoshida"]}, {"title": "Let it recover: Multiparty protocol-induced recovery", "authors": ["Rumyana Neykova "]}, {"title": "Multiparty session actors", "authors": ["Rumyana Neykova "]}, {"title": "Protocols by default: Safe MPI code generation based on session types", "authors": ["Nicholas Ng", " Jose Coutinho"]}, {"title": "Static deadlock detection for concurrent go by global session graph synthesis", "authors": ["Nicholas Ng "]}, {"title": "Multiparty session C: Safe parallel programming with message optimisation", "authors": ["Nicholas Ng", " Nobuko Yoshida"]}, {"title": "Typing liveness in multiparty communicating systems", "authors": ["Luca Padovani", " Vasco Thudichum Vasconcelos"]}, {"title": "Linear logical relations for session-based concurrency", "authors": [" Lu\u00eds Caires", " Frank Pfenning"]}, {"title": "On distributability in process calculi", "authors": ["Kirstin Peters", " Uwe Nestmann"]}, {"title": "Pi-calculus, internal mobility, and agent passing calculi", "authors": []}, {"title": "A linear decomposition of multiparty sessions for safe distributed programming", "authors": ["Alceste Scalas", " Ornela Dardha", " Raymond Hu"]}, {"title": "Scribble Project", "authors": ["Scribble"]}, {"title": "Efficient sessions", "authors": [" Mohammad Qudeisat", " Lukasz Ziarek", " Karthik Nagaraj"]}, {"title": "Choreography-based analysis of distributed message passing programs", "authors": ["Ramsay Taylor", " Emilio Tuosto", " Neil Walkinshaw"]}, {"title": "Higher-order processes, functions, and sessions: A monadic integration", "authors": ["Bernardo Toninho", " Lu\u00eds Caires"]}, {"title": "Typing progress in communication-centred systems", "authors": ["Hugo Torres Vieira "]}, {"title": "Propositions as sessions", "authors": ["Philip Wadler"]}]},
{"title": "Feature-Specific Profiling", "time": "December 2018", "keyword": ["Programming Languages and Systems"], "abstract": "While high-level languages come with significant readability and maintainability benefits, their performance remains difficult to predict. For example, programmers may unknowingly use language features inappropriately, which cause their programs to run slower than expected. To address this issue, we introduce \n, a technique that reports performance costs in terms of linguistic constructs. Feature-specific profilers help programmers find expensive uses of specific features of their language. We describe the architecture of a profiler that implements our approach, explain prototypes of the profiler for two languages with different characteristics and implementation strategies, and provide empirical evidence for the approach\u2019s general usefulness as a performance debugging tool.\n", "author": [{"name": "Leif Andersen", "affiliation": "PLT @ Northeastern University, United States of America"}, {"name": "Vincent St-Amour", "affiliation": "PLT @ Northwestern University, United States of America"}, {"name": "Jan Vitek", "affiliation": "Northeastern University and Czech Technical University"}, {"name": "Matthias Felleisen", "affiliation": "PLT @ Northwestern University, United States of America"}, {"name": "Leif Andersen", "affiliation": "PLT @ Northeastern University, United States of America"}, {"name": "Vincent St-Amour", "affiliation": "PLT @ Northwestern University, United States of America"}, {"name": "Jan Vitek", "affiliation": "Northeastern University and Czech Technical University"}, {"name": "Matthias Felleisen", "affiliation": "PLT @ Northwestern University, United States of America"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Validity of the single processor approach to achieving large scale computing capabilities", "authors": []}, {"title": "Flexible and efficient profiling with aspect-oriented programming", "authors": ["Walter Binder", " Danilo Ansaloni", " Alex Villaz\u00f3n"]}, {"title": "Modeling an algebraic stepper", "authors": ["John Clements", " Matthew Flatt"]}, {"title": "Implementing continuation marks in JavaScript", "authors": ["John Clements", " Ayswarya Sundaram"]}, {"title": "Chez Scheme Version 8 User\u2019s Guide", "authors": []}, {"title": "Syntax abstraction in scheme", "authors": [" Robert Hieb"]}, {"title": "DrScheme: A programming environment for scheme", "authors": ["Robert Bruce Findler", " John Clements", " Cormac Flanagan", " Matthew Flatt", " Shriram Krishnamurthi", " Paul Steckler"]}, {"title": "Contracts for higher-order functions", "authors": ["Robert Bruce Findler "]}, {"title": "Keyword and optional arguments in PLT scheme", "authors": ["Matthew Flatt "]}, {"title": "Reference: Racket", "authors": ["Matthew Flatt "]}, {"title": "The network as a language construct", "authors": ["Tony Garnock-Jones", " Sam Tobin-Hochstadt"]}, {"title": "Vertical profiling", "authors": ["Matthias Hauswirth", " Amer Diwan"]}, {"title": "A universal modular ACTOR formalism for artificial intelligence", "authors": ["Carl Hewitt", " Peter Bishop"]}, {"title": "Listener latency profiling", "authors": ["Milan Jovic "]}, {"title": "Javana: A system for building customized Java program analysis tools", "authors": ["Jonas Maebe", " Dries Buytaert", " Lieven Eeckhout"]}, {"title": "A lightweight interactive debugger for Haskell", "authors": ["Simon Marlow", " Jos\u00e9 Iborra", " Bernard Pope"]}, {"title": "The two-state solution: Native and serializable continuations accord", "authors": ["Jay McCarthy"]}, {"title": "SHILL: A secure shell scripting language", "authors": ["Scott Moore", " Christos Dimoulas", " Dan King"]}, {"title": "Evaluating the design of the R language", "authors": ["Flor\u00e9al Mor", " Br", " Leo Osvald"]}, {"title": "Evaluating the accuracy of Java profilers", "authors": ["Todd Mytkowicz", " Amer Diwan", " Matthias Hauswirth"]}, {"title": "Valgrind: A framework for heavyweight dynamic binary instrumentation", "authors": ["Nicholas Nethercote "]}, {"title": "Continuations from generalized stack inspection", "authors": ["Greg Pettyjohn", " John Clements", " Joe Marshall", " Shriram Krishnamurthi"]}, {"title": "R Language Definition", "authors": ["R Development Core Team"]}, {"title": "Dynamic analysis of Java program concepts for visualization and profiling", "authors": ["Jeremy Singer "]}, {"title": "Feature-specific profiling", "authors": ["Vincent St-Amour", " Leif Andersen"]}, {"title": "Optimization coaching: Optimizers learn to communicate with programmers", "authors": ["Vincent St-Amour", " Sam Tobin-Hochstadt"]}, {"title": "Understanding the behavior of database operations under program control", "authors": [" Alex Aiken", " Nathan Bronson"]}, {"title": "The design and implementation of typed scheme", "authors": ["Sam Tobin-Hochstadt "]}, {"title": "Advanced R, 1st ed", "authors": ["Hadley Wickham"]}]},
{"title": "Optimal Choice of When to Garbage Collect", "time": "January 2019", "keyword": ["Programming Languages and Systems"], "abstract": "We consider the ultimate limits of program-specific garbage collector (GC) performance for real programs. We first characterize the GC schedule optimization problem. Based on this characterization, we develop a linear-time dynamic programming solution that, given a program run and heap size, computes an \n schedule of collections for a non-generational collector. Using an analysis of a heap object graph of the program, we compute a property of heap objects that we call their \n time. This information enables us to extend the non-generational GC schedule problem to the generational GC case in a way that also admits a dynamic programming solution with cost quadratic in the length of the trace (number of objects allocated). This improves our previously reported approximately optimal result. We further extend the two-generation dynamic program to any number of generations, allowing other generalizations as well. Our experimental results for two generations on traces from Java programs of the DaCapo benchmark suite show that there is considerable promise to reduce garbage collection costs for some programs by developing program-specific collection policies. For a given space budget, optimal schedules often obtain modest but useful time savings, and for a given time budget, optimal schedules can obtain considerable space savings.\n", "author": [{"name": "Nicholas Jacek", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "Meng-Chieh Chiu", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "Benjamin M. Marlin", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "J. Eliot B. Moss", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "Nicholas Jacek", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "Meng-Chieh Chiu", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "Benjamin M. Marlin", "affiliation": "University of Massachusetts Amherst, MA, USA"}, {"name": "J. Eliot B. Moss", "affiliation": "University of Massachusetts Amherst, MA, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": []},
{"title": "Practical Subtyping for Curry-Style Languages", "time": "February 2019", "keyword": ["Programming Languages and Systems"], "abstract": "We present a new, syntax-directed framework for Curry-style type systems with subtyping. It supports a rich set of features, and allows for a reasonably simple theory and implementation. The system we consider has sum and product types, universal and existential quantifiers, and inductive and coinductive types. The latter two may carry size invariants that can be used to establish the termination of recursive programs. For example, the termination of quicksort can be derived by showing that partitioning a list does not increase its size. The system deals with complex programs involving mixed induction and coinduction, or even mixed polymorphism and (co-)induction. One of the key ideas is to separate the notion of size from recursion. We do not check the termination of programs directly, but rather show that their (circular) typing proofs are well-founded. Termination is then obtained using a standard (semantic) normalisation proof. To demonstrate the practicality of the system, we provide an implementation accepting all the examples discussed in the article.\n", "author": [{"name": "Rodolphe Lepigre", "affiliation": "LAMA, CNRS, Univ. Savoie Mont Blanc and Inria, LSV, CNRS, Univ. Paris-Saclay"}, {"name": "Christophe Raffalli", "affiliation": "LAMA, CNRS, Univ. Savoie Mont Blanc and IMERL, FING, UdelaR"}, {"name": "Rodolphe Lepigre", "affiliation": "LAMA, CNRS, Univ. Savoie Mont Blanc and Inria, LSV, CNRS, Univ. Paris-Saclay"}, {"name": "Christophe Raffalli", "affiliation": "LAMA, CNRS, Univ. Savoie Mont Blanc and IMERL, FING, UdelaR"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Types for the Scott Numerals", "authors": ["Mart\u00edn Abadi", " Luca Cardelli"]}, {"title": "Choice in dynamic linking", "authors": ["Mart\u00edn Abadi", " Georges Gonthier"]}, {"title": "Foetus - Termination Checker for Simple Functional Programs", "authors": ["Andreas Abel"]}, {"title": "Semi-continuous Sized Types and Termination", "authors": ["Andreas Abel"]}, {"title": "Wellfounded recursion with copatterns: A unified approach to termination and productivity", "authors": ["Andreas Abel "]}, {"title": "Subtyping recursive types", "authors": []}, {"title": "Least and greatest fixed points in ludics", "authors": ["David Baelde", " Amina Doumane"]}, {"title": "Infinitary proof theory: The multiplicative additive case", "authors": ["David Baelde", " Amina Doumane"]}, {"title": "Hilbert\u2019s &epsiv;-operator in intuitionistic type theories", "authors": []}, {"title": "Decidability of type-checking in the calculus of algebraic constructions with size annotations", "authors": ["Fr\u00e9d\u00e9ric Blanqui"]}, {"title": "On the relation between sized-types based termination and semantic labelling", "authors": ["Fr\u00e9d\u00e9ric Blanqui "]}, {"title": "Cyclic proofs for first-order logic with inductive definitions", "authors": ["James Brotherston"]}, {"title": "Abstract types and the dot notation", "authors": ["Luca Cardelli "]}, {"title": "An extension of system F with subtyping", "authors": []}, {"title": "", "authors": ["Judica\u00ebl Courant"]}, {"title": "Journal of Functional Programming 17, 3 (2007), 287--352", "authors": ["<su"]}, {"title": "System F with coercion constraints", "authors": ["Julien Cretin "]}, {"title": "Principal type-schemes for functional programs", "authors": ["Luis Damas "]}, {"title": "A free variable version of the first-order predicate calculus", "authors": ["Martin Davis "]}, {"title": "Polymorphism, subtyping, and type inference in MLsub", "authors": ["Stephen Dolan "]}, {"title": "On the infinitary proof theory of logics with fixed points", "authors": ["Amina Doumane"]}, {"title": "Complete and easy bidirectional typechecking for higher-rank polymorphism", "authors": []}, {"title": "Cuts for circular proofs", "authors": ["J\u00e9r\u00f4me Fortier "]}, {"title": "Cuts for circular proofs: Semantics and cut-elimination", "authors": ["J\u00e9r\u00f4me Fortier "]}, {"title": "Programming with polymorphic variants", "authors": ["Jacques Garrigue"]}, {"title": "Interpr\u00e9tation Fonctionnelle et \u00c9limination des Coupures de l\u2019Arithm\u00e9tique d\u2019Ordre Sup\u00e9rieur", "authors": ["Jean-Yves Girard"]}, {"title": "Proofs and Types", "authors": ["Jean-Yves Girard", " Paul Taylor"]}, {"title": "On strong normalization of the calculus of constructions with type-based termination", "authors": ["Benjamin Gr\u00e9goire "]}, {"title": "Grundlagen der Mathematik", "authors": []}, {"title": "Proving the correctness of reactive systems using sized types", "authors": ["John Hughes", " Lars Pareto"]}, {"title": "The size-change termination principle for constructor based languages", "authors": ["Pierre Hyvernat"]}, {"title": "Size-Bases Termination of Higher-Order Rewrite Systems", "authors": ["Fr\u00e9d\u00e9ric Blanqui (INRIA)"]}, {"title": "Combining Typing and Size Constraints for Checking the Termination of Higher-Order Conditional Rewrite Systems", "authors": ["Fr\u00e9d\u00e9ric Blanqui (INRIA) "]}, {"title": "A decision procedure for the propositional &mu;-calculus", "authors": ["Dexter Kozen "]}, {"title": "Un algorithme non typable dans le syst\u00e8me F", "authors": ["Jean-Louis Krivine"]}, {"title": "MLF: Raising ML to the power of system F", "authors": ["Didier Le Botlan "]}, {"title": "The size-change principle for program termination", "authors": []}, {"title": "A classical realizability model for a semantical value restriction", "authors": ["Rodolphe Lepigre"]}, {"title": "Semantics and Implementation of an Extension of ML for Proving Programs", "authors": ["Rodolphe Lepigre"]}, {"title": "SubML Implementation", "authors": []}, {"title": "The Coq Proof Assistant Reference Manual", "authors": ["The Coq development team"]}, {"title": "Polymorphic type inference and containment", "authors": []}, {"title": "An extension of standard ML modules with subtyping and inheritance", "authors": [" Sigurd Meldal"]}, {"title": "Dependently typed programming in agda", "authors": ["Ulf Norell"]}, {"title": "Un r\u00e9curseur fortement normalisable et typable pour les entiers de Scott", "authors": ["Miche Parigot"]}, {"title": "Practical type inference for arbitrary-rank types", "authors": ["Simon Peyton Jones", " Dimitrios Vytiniotis", " Stephanie Weirich"]}, {"title": "Types and Programming Languages", "authors": []}, {"title": "Synth\u00e8se de types en pr\u00e9sence de sous-typage: de la th\u00e9orie \u00e0 la pratique", "authors": ["Fran\u00e7ois Pottier"]}, {"title": "Type checking in system ", "authors": []}, {"title": "", "authors": []}, {"title": "The PhoX Proof Assistant", "authors": []}, {"title": "The PML Programming Language", "authors": []}, {"title": "Simple, partial type-inference for system F based on type-containment", "authors": ["Didier R\u00e9my"]}, {"title": "Typed Hilbert epsilon operators and the semantics of determiner phrases", "authors": ["Christian Retor\u00e9"]}, {"title": "Towards a theory of type structure", "authors": []}, {"title": "Type-based productivity of stream definitions in the calculus of constructions", "authors": ["Jorge Luis Sacchini"]}, {"title": "Well-Founded Sized Types in the Calculus of (Co)Inductive Constructions", "authors": ["Jorge Luis Sacchini"]}, {"title": "A calculus of circular proofs and its categorical semantics", "authors": ["Luigi Santocanale"]}, {"title": "From parity games to circular proofs", "authors": ["Luigi Santocanale"]}, {"title": "Verifying temporal properties using explicit approximants: Completeness for context-free processes", "authors": ["Ulrich Sch\u00f6pp "]}, {"title": "On global induction mechanisms in a &mu;-calculus with explicit approximations", "authors": ["Christoph Sprenger "]}, {"title": "On the structure of inductive reasoning: Circular and tree-shaped proofs in the &mu;-calculus", "authors": ["Christoph Sprenger "]}, {"title": "The subtyping problem for second-order types is undecidable", "authors": []}, {"title": "Definite Descriptions and Choice Functions", "authors": ["Klaus Von Heusinger"]}, {"title": "Typability and type-checking in the second-order lambda-calculus are equivalent and undecidable", "authors": []}, {"title": "Typability is Undecidable for F+Eta", "authors": []}, {"title": "Typability and type checking in System F are equivalent and undecidable", "authors": []}]},
{"title": "Rethinking Incremental and Parallel Pointer Analysis", "time": "March 2019", "keyword": ["Programming Languages and Systems"], "abstract": "Pointer analysis is at the heart of most interprocedural program analyses. However, scaling pointer analysis to large programs is extremely challenging. In this article, we study incremental pointer analysis and present a new algorithm for computing the points-to information incrementally (i.e., upon code insertion, deletion, and modification). Underpinned by new observations of incremental pointer analysis, our algorithm significantly advances the state of the art in that it avoids redundant computations and the expensive graph reachability analysis, and preserves precision as the corresponding whole program exhaustive analysis. Moreover, it is parallel within each iteration of fixed-point computation. We have implemented our algorithm, IPA, for Java based on the WALA framework and evaluated its performance extensively on real-world large, complex applications. Experimental results show that IPA achieves more than 200X speedups over existing incremental algorithms, two to five orders of magnitude faster than whole program pointer analysis, and also improves the performance of an incremental data race detector by orders of magnitude. Our IPA implementation is open source and has been adopted by WALA.\n", "author": [{"name": "Bozhen Liu", "affiliation": "Texas A8M University, College Station, TX, USA"}, {"name": "Jeff Huang", "affiliation": "Texas A8M University, College Station, TX, USA"}, {"name": "Lawrence Rauchwerger", "affiliation": "Texas A8M University, College Station, TX, USA"}, {"name": "Bozhen Liu", "affiliation": "Texas A8M University, College Station, TX, USA"}, {"name": "Jeff Huang", "affiliation": "Texas A8M University, College Station, TX, USA"}, {"name": "Lawrence Rauchwerger", "affiliation": "Texas A8M University, College Station, TX, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Language Server Protocol", "authors": []}, {"title": "Application-only call graph construction", "authors": ["Karim Ali "]}, {"title": "Program Analysis and Specialization for the C Programming Language", "authors": ["Lars Ole Andersen"]}, {"title": "Reviser: Efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes", "authors": ["Steven Arzt "]}, {"title": "Retrieved January 23, 2019 from https://github", "authors": ["SSA based IR in WALA"]}, {"title": "A new approach to incremental cycle detection and related problems", "authors": [" Seth Gilbert"]}, {"title": "Incremental pattern matching for the efficient computation of transitive closure", "authors": ["G\u00e1bor Bergmann", " Istv\u00e1n R\u00e1th", " Tam\u00e1s Szab\u00f3", " Paolo Torrini"]}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": []}, {"title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders", "authors": ["Eric Bodden", " Andreas Sewe", " Jan Sinschek", " Hela Oueslati"]}, {"title": "Exception analysis and points-to analysis: Better together", "authors": ["Martin Bravenboer "]}, {"title": "Strictly declarative specification of sophisticated points-to analyses", "authors": ["Martin Bravenboer "]}, {"title": "Flow-insensitive interprocedural alias analysis in the presence of pointers", "authors": [" Jong-Deok Choi"]}, {"title": "Scalable flow-sensitive pointer analysis for Java with strong updates", "authors": ["Arnab De "]}, {"title": "Giga-scale exhaustive points-to analysis for Java in under a minute", "authors": ["Jens Dietrich", " Nicholas Hollingum"]}, {"title": "A note on the soundness of difference propagation", "authors": ["Jens Dietrich", " Nicholas Hollingum"]}, {"title": "Retrieved January 28, 2019 from http://lists", "authors": ["LLVM discussions on pointer analysis"]}, {"title": "Parallel points-to analysis for multi-core machines", "authors": ["Marcus Edvinsson", " Jonas Lundberg"]}, {"title": "Context-sensitive interprocedural points-to analysis in the presence of function pointers", "authors": ["Maryam Emami", " Rakesh Ghiya"]}, {"title": "Rete: A fast algorithm for the many pattern/many object pattern match problem", "authors": []}, {"title": "P/Taint: Unified points-to and taint analysis", "authors": ["Neville Grech "]}, {"title": "A framework for call graph construction algorithms", "authors": ["David Grove "]}, {"title": "Maintaining views incrementally", "authors": ["Ashish Gupta", " Inderpal Singh Mumick"]}, {"title": "The ant and the grasshopper: Fast and accurate pointer analysis for millions of lines of code", "authors": ["Ben Hardekopf "]}, {"title": "Semi-sparse flow-sensitive pointer analysis", "authors": ["Ben Hardekopf "]}, {"title": "Flow-sensitive pointer analysis for millions of lines of code", "authors": ["Ben Hardekopf "]}, {"title": "Demand-driven pointer analysis", "authors": ["Nevin Heintze "]}, {"title": "Pointer analysis: Haven\u2019t we solved this problem yet?", "authors": ["Michael Hind"]}, {"title": "Interprocedural pointer alias analysis", "authors": ["Michael Hind", " Michael Burke", " Paul Carini"]}, {"title": "Retrieved January 28, 2019 from http://wala", "authors": ["Pointer Analysis in WALA"]}, {"title": "https://github", "authors": ["IPA"]}, {"title": "Efficient and effective handling of exceptions in Java points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Hybrid context-sensitivity for points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Maintenance of transitive closures and transitive reductions of graphs", "authors": []}, {"title": "Pointer-induced aliasing: A problem classification", "authors": []}, {"title": "Interprocedural Aliasing in the Presence of Pointers", "authors": ["William Alex"]}, {"title": "Retrieved January 28, 2019 from https://github", "authors": ["WALA language-independent IDE support"]}, {"title": "Spark: A flexible points-to analysis framework for Java", "authors": ["Ond\u0159ej Lhot\u00e1k"]}, {"title": "Evaluating the benefits of context-sensitive points-to analysis using a BDD-based implementation", "authors": ["Ond\u0159ej Lhot\u00e1k "]}, {"title": "Boosting the performance of flow-sensitive points-to analysis using value flow", "authors": ["Lian Li", " Cristina Cifuentes"]}, {"title": "Self-inferencing reflection resolution for Java", "authors": ["Yue Li", " Tian Tan", " Yulei Sui"]}, {"title": "D4: Fast concurrency debugging with parallel differential analysis", "authors": ["Bozhen Liu "]}, {"title": "From datalog rules to efficient programs with time and space guarantees", "authors": []}, {"title": "Reflection analysis for Java", "authors": ["Benjamin Livshits", " John Whaley"]}, {"title": "LogiQL", "authors": ["LogicBlox"]}, {"title": "An incremental points-to analysis with CFL-reachability", "authors": ["Yi Lu", " Lei Shang", " Xinwei Xie"]}, {"title": "Stochastic reachability based motion planning for multiple moving obstacle avoidance", "authors": ["Nick Malone", " Kendra Lesser", " Meeko Oishi"]}, {"title": "An efficient hybrid algorithm for incremental data flow analysis", "authors": []}, {"title": "A GPU implementation of inclusion-based points-to analysis", "authors": ["Mario M\u00e9ndez-Lojo", " Martin Burtscher"]}, {"title": "Parallel inclusion-based points-to analysis", "authors": ["Mario M\u00e9ndez-Lojo", " Augustine Mathew"]}, {"title": "Parameterized object sensitivity for points-to analysis for Java", "authors": ["Ana Milanova", " Atanas Rountev"]}, {"title": "Incremental update of datalog materialisation: The backward/forward algorithm", "authors": ["Boris Motik", " Yavor Nenov", " Robert Piro"]}, {"title": "Parallel flow-sensitive pointer analysis by graph-rewriting", "authors": []}, {"title": "SANDROS: A dynamic graph search algorithm for motion planning", "authors": []}, {"title": "Efficient field-sensitive pointer analysis of C", "authors": []}, {"title": "Parallel replication-based points-to analysis", "authors": []}, {"title": "The undecidability of aliasing", "authors": []}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Thomas Reps", " Susan Horwitz"]}, {"title": "Incremental data flow analysis", "authors": []}, {"title": "Dimensions of precision in reference analysis of object-oriented programming languages", "authors": []}, {"title": "Incremental and demand-driven points-to analysis using logic programming", "authors": []}, {"title": "Symbolic support graph: A space efficient data structure for incremental tabled evaluation", "authors": []}, {"title": "A local algorithm for incremental evaluation of tabled logic programs", "authors": []}, {"title": "Fast and precise points-to analysis with incremental CFL-reachability summarisation: Preliminary experience", "authors": ["Lei Shang", " Yi Lu"]}, {"title": "Control-Flow Analysis of Higher-Order Languages", "authors": ["Olin Shivers"]}, {"title": "Pointer analysis", "authors": ["Yannis Smaragdakis "]}, {"title": "Introspective analysis: Context-sensitivity, across the board", "authors": ["Yannis Smaragdakis", " George Kastrinis"]}, {"title": "POPLOG\u2019s two-level virtual machine support for interactive languages", "authors": ["Robert Smith", " Aaron Sloman"]}, {"title": "Boomerang: Demand-driven flow- and context-sensitive pointer analysis for Java", "authors": ["Johannes Sp\u00e4th", " Lisa Nguyen Quang Do", " Karim Ali"]}, {"title": "A framework for interprocedural optimization in the presence of dynamic class loading", "authors": [" Michael Burke"]}, {"title": "A new framework for elimination-based data flow analysis using DJ graphs", "authors": []}, {"title": "Refinement-based context-sensitive points-to analysis for Java", "authors": ["Manu Sridharan "]}, {"title": "Alias Analysis for Object-oriented Programs", "authors": ["Manu Sridharan", " Satish Ch", " Julian Dolby"]}, {"title": "The complexity of Andersen\u2019s analysis in practice", "authors": []}, {"title": "Demand-driven points-to analysis for Java", "authors": ["Manu Sridharan", " Denis Gopan", " Lexin Shan"]}, {"title": "Points-to analysis in almost linear time", "authors": ["Bjarne Steensgaard"]}, {"title": "Parallel pointer analysis with CFL-reachability", "authors": ["Yu Su", " Ding Ye"]}, {"title": "SPAS: Scalable path-sensitive pointer analysis on full-sparse SSA", "authors": ["Yulei Sui", " Sen Ye", " Jingling Xue"]}, {"title": "Retrieved January 28, 2019 from http://iss", "authors": ["Galois System"]}, {"title": "IncA: A DSL for the definition of incremental program analyses", "authors": ["Tam\u00e1s Szab\u00f3", " Sebastian Erdweg"]}, {"title": "Efficient and precise points-to analysis: Modeling the heap by merging equivalent automata", "authors": ["Tian Tan", " Yue Li"]}, {"title": "Depth first search and linear graph algorithms", "authors": ["Robert Tarjan"]}, {"title": "Precise complexity guarantees for pointer analysis via datalog with extensions", "authors": []}, {"title": "EMF-IncQuery: An integrated development environment for live model queries", "authors": ["Zolt\u00e1n Ujhelyi", " G\u00e1bor Bergmann", " \u00c1bel Heged\u00fcs", " \u00c1kos Horv\u00e1th", " Benedek Izs\u00f3", " Istv\u00e1n R\u00e1th", " Zolt\u00e1n Szatm\u00e1ri"]}, {"title": "Soot - a Java bytecode optimization framework", "authors": ["Raja Vall\u00e9e-Rai", " Phong Co", " Etienne Gagnon", " Laurie Hendren", " Patrick Lam"]}, {"title": "T", "authors": ["WALA"]}, {"title": "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams", "authors": []}, {"title": "An incremental flow- and context-sensitive pointer aliasing analysis", "authors": ["Jyh-shiarn Yur"]}, {"title": "ECHO: Instantaneous in situ race detection in the IDE", "authors": ["Sheng Zhan "]}, {"title": "Parallel sparse flow-sensitive points-to analysis", "authors": ["Jisheng Zhao"]}]},
{"title": "Context-Free Session Type Inference", "time": "March 2019", "keyword": ["Programming Languages and Systems"], "abstract": "Some interesting communication protocols can be precisely described only by context-free session types, an extension of conventional session types supporting a general form of sequential composition. The complex metatheory of context-free session types, however, hinders the definition of corresponding checking and inference algorithms. In this work, we study a new syntax-directed type system for context-free session types that is easy to embed into a host programming language. We also detail 2 OCaml embeddings that allow us to piggyback on OCaml\u2019s type system to check and infer context-free session types.\n", "author": [{"name": "Luca Padovani", "affiliation": "Universit\u00e0 di Torino, Torino, Italy"}, {"name": "Luca Padovani", "affiliation": "Universit\u00e0 di Torino, Torino, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "L<sup>3</sup>: A linear language with locations", "authors": ["Amal Ahmed", " Matthew Fluet"]}, {"title": "Functional translation of a calculus of capabilities", "authors": ["Arthur Chargu\u00e9raud "]}, {"title": "Fundamental properties of infinite trees", "authors": ["Bruno Courcelle"]}, {"title": "Session types revisited", "authors": ["Ornela Dardha", " Elena Giachino"]}, {"title": "Full abstraction in a subtyped pi-calculus with linear types", "authors": ["Romain Demangeon "]}, {"title": "Object protocols as functional parsers", "authors": ["Gert Florijn"]}, {"title": "The inclusion problem for simple languages", "authors": []}, {"title": "First-class modules and composable signatures in Objective Caml 3", "authors": ["Alain Frisch "]}, {"title": "Subtyping for session types in the &pi;-calculus", "authors": ["Simon Gay "]}, {"title": "Linear type theory for asynchronous session types", "authors": []}, {"title": "Types for dyadic interaction", "authors": ["Kohei Honda"]}, {"title": "Language primitives and type disciplines for structured communication-based programming In Programming Languages and Systems", "authors": ["Kohei Honda"]}, {"title": "Hybrid session verification through endpoint API generation", "authors": ["Raymond Hu "]}, {"title": "Foundations of session types and behavioural contracts", "authors": ["Hans H\u00fcttel", " Ivan Lanese", " Lu\u00eds Caires", " Marco Carbone", " Pierre-Malo Deni\u00e9lou", " "]}, {"title": "Resource usage analysis", "authors": ["Atsushi Igarashi "]}, {"title": "Type reconstruction in the presence of polymorphic recursion", "authors": []}, {"title": "Type systems for concurrent programs", "authors": ["Naoki Kobayashi"]}, {"title": "Linearity and the pi-calculus", "authors": ["Naoki Kobayashi"]}, {"title": "Simple deterministic languages", "authors": []}, {"title": "State in Haskell", "authors": []}, {"title": "Abstract types have existential type", "authors": []}, {"title": "Monadic encapsulation of effects: A revised approach (extended version)", "authors": ["Eugenio Moggi "]}, {"title": "Global principal typing in partially commutative asynchronous sessions", "authors": ["Dimitris Mostrous", " Nobuko Yoshida"]}, {"title": "Regular types for active objects", "authors": ["Oscar Nierstrasz"]}, {"title": "FuSe\u2014A Simple Library Implementation of Binary Sessions", "authors": ["Luca Padovani"]}, {"title": "A simple library implementation of binary sessions", "authors": ["Luca Padovani"]}, {"title": "Context-free session type inference", "authors": ["Luca Padovani"]}, {"title": "Typing non-uniform concurrent objects", "authors": []}, {"title": "Concurrent Programming in ML", "authors": []}, {"title": "A model of components with non-regular protocols", "authors": ["Mario S\u00fcdholt"]}, {"title": "Context-free session types", "authors": []}, {"title": "Practical Programming With Substructural Types", "authors": []}, {"title": "Stateful contracts for affine types", "authors": []}, {"title": "Practical affine types", "authors": []}, {"title": "Propositions as sessions", "authors": ["Philip Wadler"]}, {"title": "On regions and linear types", "authors": ["David Walker "]}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": "First-class modules: Hidden power and tantalizing promises", "authors": ["Jeremy Yallop "]}]},
{"title": "A Classical Sequent Calculus with Dependent Types", "time": "March 2019", "keyword": ["Programming Languages and Systems"], "abstract": "Dependent types are a key feature of the proof assistants based on the Curry-Howard isomorphism. It is well known that this correspondence can be extended to classical logic by enriching the language of proofs with control operators. However, they are known to misbehave in the presence of dependent types, unless dependencies are restricted to values. Moreover, while sequent calculi naturally support continuation-passing-style interpretations, there is no such presentation of a language with dependent types. The main achievement of this article is to give a sequent calculus presentation of a call-by-value language with a control operator and dependent types, and to justify its soundness through a continuation-passing-style translation.\nWe start from the call-by-value version of the \n-calculus. We design a minimal language with a value restriction and a type system that includes a list of explicit dependencies to maintain type safety. We then show how to relax the value restriction and introduce delimited continuations to directly prove the consistency by means of a continuation-passing-style translation. Finally, we relate our calculus to a similar system by Lepigre and present a methodology to transfer properties from this system to our own.\n", "author": [{"name": "\u00c9tienne Miquey", "affiliation": "INRIA, \u00c9quipe Gallinette, B\u00e2timent, Nantes"}, {"name": "\u00c9tienne Miquey", "affiliation": "INRIA, \u00c9quipe Gallinette, B\u00e2timent, Nantes"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Dependent types and fibred computational effects", "authors": ["Danel Ahman", " Neil Ghani"]}, {"title": "A type-theoretic foundation of delimited continuations", "authors": [" Hugo Herbelin"]}, {"title": "A symmetric lambda calculus for classical program extraction", "authors": ["Franco Barbanera "]}, {"title": "CPS translations and applications: The cube and beyond", "authors": ["Gilles Barthe", " John Hatcliff"]}, {"title": "Hybrid realizability for intuitionistic and classical choice", "authors": ["Valentin Blot"]}, {"title": "Inductively defined types", "authors": ["Thierry Coqu"]}, {"title": "The duality of computation", "authors": ["Pierre-Louis Curien "]}, {"title": "Sequent calculus as a compiler intermediate language", "authors": ["Paul Downen", " Luke Maurer"]}, {"title": "On various negative translations", "authors": ["Gilda Ferreira "]}, {"title": "Representing monads", "authors": ["Andrzej Filinski"]}, {"title": "Pure type systems with explicit substitutions", "authors": ["Daniel Fridlender "]}, {"title": "Classically and intuitionistically provably recursive functions", "authors": ["Harvey Friedman"]}, {"title": "Direct models for the computational lambda calculus", "authors": ["Carsten F\u00fchrmann"]}, {"title": "Relaxing the value restriction", "authors": ["Jacques Garrigue"]}, {"title": "A formulae-as-type notion of control", "authors": []}, {"title": "Polymorphic type assignment and CPS conversion", "authors": ["Robert Harper "]}, {"title": "On the degeneracy of sigma-types in presence of computational classical logic", "authors": ["Hugo Herbelin"]}, {"title": "A constructive proof of dependent choice, compatible with classical logic", "authors": ["Hugo Herbelin"]}, {"title": "An approach to call-by-name delimited continuations", "authors": ["Hugo Herbelin "]}, {"title": "Short proofs of normalization for the simply- typed \u03bb-calculus, permutative conversions and G\u00f6del\u2019s T", "authors": ["Felix Joachimski "]}, {"title": "Realizability in classical logic", "authors": ["Jean-Louis Krivine"]}, {"title": "A classical realizability model for a semantical value restriction", "authors": ["Rodolphe Lepigre"]}, {"title": "Semantics and Implementation of an Extension of ML for Proving Programs", "authors": ["Rodolphe Lepigre"]}, {"title": "Constructive mathematics and computer programming", "authors": []}, {"title": "Existential witness extraction in classical realizability and via a negative translation", "authors": ["Alex"]}, {"title": "A classical sequent calculus with dependent types", "authors": ["\u00c9tienne Miquey"]}, {"title": "Realizability interpretation and normalization of typed call-by-need \u03bb-calculus with control", "authors": ["\u00c9tienne Miquey "]}, {"title": "A sequent calculus with dependent types for classical arithmetic", "authors": ["\u00c9tienne Miquey"]}, {"title": "Focalisation and classical realisability", "authors": ["Guillaume Munch-Maccagnoni"]}, {"title": "Models of a non-associative composition", "authors": ["Guillaume Munch-Maccagnoni"]}, {"title": "Proofs of strong normalisation for second order classical natural deduction", "authors": ["Michel Parigot"]}, {"title": "Extracting ", "authors": ["Christine Paulin-Mohring"]}, {"title": "ACM, New York, 89--104", "authors": []}, {"title": "An effectful way to eliminate addiction to dependence", "authors": ["Pierre-Marie P\u00e9drot "]}, {"title": "Strong normalization of lambda-bar-mu-mu-tilde-calculus with explicit substitutions", "authors": ["Emmanuel Polonovski"]}, {"title": "A framework for dependent types and effects", "authors": ["Matthijs V\u00e1k\u00e1r"]}, {"title": "In Search of Effectful Dependent Types", "authors": ["Matthijs V\u00e1k\u00e1r"]}, {"title": "Comparing cubes of typed and type assignment systems", "authors": ["Steffen van Bakel", " Luigi Liquori", " Simona Ronchi della Rocca"]}, {"title": "Call-by-value is dual to call-by-name", "authors": ["Philip Wadler"]}, {"title": "Simple imperative polymorphism", "authors": ["Andrew Wright"]}]},
{"title": "Probabilistic Termination by Monadic Affine Sized Typing", "time": "March 2019", "keyword": ["Programming Languages and Systems"], "abstract": "We introduce a system of monadic affine sized types, which substantially generalizes usual sized types and allows in this way to capture probabilistic higher-order programs that terminate almost surely. Going beyond plain, strong normalization without losing soundness turns out to be a hard task, which cannot be accomplished without a richer, quantitative notion of types, but also without imposing some affinity constraints. The proposed type system is powerful enough to type classic examples of probabilistically terminating programs such as random walks. The way typable programs are proved to be almost surely terminating is based on reducibility but requires a substantial adaptation of the technique.\n", "author": [{"name": "Ugo Dal Lago", "affiliation": "University of Bologna 8 INRIA Sophia Antipolis, Bologna, Italy"}, {"name": "Charles Grellois", "affiliation": "INRIA Sophia Antipolis"}, {"name": "Ugo Dal Lago", "affiliation": "University of Bologna 8 INRIA Sophia Antipolis, Bologna, Italy"}, {"name": "Charles Grellois", "affiliation": "INRIA Sophia Antipolis"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Termination checking with types", "authors": ["Andreas Abel"]}, {"title": "Analysis of a guard condition in type theory", "authors": []}, {"title": "Type-based termination of recursive definitions", "authors": ["Gilles Barthe", " Maria Jo\u00e3o Frade", " Eduardo Gim\u00e9nez", " Luis Pinto"]}, {"title": "Formal certification of code-based cryptographic proofs", "authors": ["Gilles Barthe", " Benjamin Gr\u00e9goire"]}, {"title": "Computer-aided security proofs for the working cryptographer", "authors": ["Gilles Barthe", " Benjamin Gr\u00e9goire", " Sylvain Heraud"]}, {"title": "A tutorial on type-based termination", "authors": ["Gilles Barthe", " Benjamin Gr\u00e9goire"]}, {"title": "Type-based termination with sized products", "authors": ["Gilles Barthe", " Benjamin Gr\u00e9goire"]}, {"title": "Proving positive almost-sure termination", "authors": ["Olivier Bournez "]}, {"title": "Probabilistic rewrite strategies", "authors": ["Olivier Bournez "]}, {"title": "One-counter Markov decision processes", "authors": []}, {"title": "On equivalences, metrics, and polynomial time", "authors": ["Alberto Cappai "]}, {"title": "Probabilistic program analysis with martingales", "authors": ["Aleks"]}, {"title": "Termination analysis of probabilistic programs through Positivstellensatz\u2019s", "authors": ["Krishnendu Chatterjee", " Hongfei Fu"]}, {"title": "Algorithmic analysis of qualitative and quantitative termination problems for affine probabilistic programs", "authors": ["Krishnendu Chatterjee", " Hongfei Fu", " Petr Novotn\u00fd"]}, {"title": "The geometry of linear higher-order recursion", "authors": ["Ugo Dal Lago"]}, {"title": "A short introduction to implicit computational complexity", "authors": ["Ugo Dal Lago"]}, {"title": "Linear dependent types and relative completeness", "authors": ["Ugo Dal Lago "]}, {"title": "Realizability models and implicit complexity", "authors": ["Ugo Dal Lago "]}, {"title": "A higher-order characterization of probabilistic polynomial time", "authors": ["Ugo Dal Lago "]}, {"title": "Probabilistic operational semantics for the lambda calculus", "authors": ["Ugo Dal Lago "]}, {"title": "Computability by probabilistic machines", "authors": ["Karel de Leeuw", " Edward Forrest Moore", " Claude Elwood Shannon"]}, {"title": "Proving termination of probabilistic programs using patterns", "authors": ["Javier Esparza", " Andreas Gaiser"]}, {"title": "Probabilistic termination: Soundness, completeness, and compositionality", "authors": ["Luis Mar\u00eda Ferrer Fioriti "]}, {"title": "Proofs and Types", "authors": ["Jean-Yves Girard", " Paul Taylor"]}, {"title": "Church: A language for generative models", "authors": [" Keith Bonawitz"]}, {"title": "A mixed modal/linear lambda calculus with applications to Bellantoni-Cook safe recursion", "authors": ["Martin Hofmann"]}, {"title": "Proving the correctness of reactive systems using sized types", "authors": ["John Hughes", " Lars Pareto"]}, {"title": "On the hardness of almost-sure termination", "authors": ["Benjamin Lucien Kaminski "]}, {"title": "Weakest precondition reasoning for expected runtimes of randomized algorithms", "authors": ["Benjamin Lucien Kaminski", " Joost-Pieter Katoen", " Christoph Matheja"]}, {"title": "Probabilistic termination by monadic affine sized typing", "authors": ["Ugo Dal Lago "]}, {"title": "Probabilistic recursion theory and implicit computational complexity", "authors": ["Ugo Dal Lago", " Sara Zuppiroli"]}, {"title": "Foundations of Statistical Natural Language Processing", "authors": ["Christopher Manning "]}, {"title": "Abstraction, Refinement and Proof for Probabilistic Systems", "authors": ["Annabelle McIver "]}, {"title": "A new proof rule for almost-sure termination", "authors": ["Annabelle McIver", " Carroll Morgan", " Benjamin Lucien Kaminski"]}, {"title": "Randomized Algorithms", "authors": ["Rajeev Motwani "]}, {"title": "Probabilistic Reasoning in Intelligent Systems - Networks of Plausible Inference", "authors": ["Judea Pearl"]}, {"title": "Reasoning about programs in continuation-passing style", "authors": ["Amr Sabry "]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Alex"]}, {"title": "Light affine lambda calculus and polynomial time strong normalization", "authors": ["Kazushige Terui"]}, {"title": "Robotic mapping: A survey", "authors": ["Sebastian Thrun"]}, {"title": "Dependent types for program termination verification", "authors": ["Hongwei Xi"]}]},
{"title": "ML, Visibly Pushdown Class Memory Automata, and Extended Branching Vector Addition Systems with States", "time": "April 2019", "keyword": ["Programming Languages and Systems"], "abstract": "We prove that the observational equivalence problem for a finitary fragment of the programming langauge ML is recursively equivalent to the reachability problem for \n (EBVASS). This result has two natural and independent parts. We first prove that the observational equivalence problem is equivalent to the emptiness problem for a new class of class memory automata equipped with a visibly pushdown stack, called \n (VPCMA). Our proof uses the fully abstract game semantics of the language. We then prove that the VPCMA emptiness problem is equivalent to the reachability problem for EBVASS. The results of this article complete our programme to give an automata classification of the ML types with respect to the observational equivalence problem for closed terms.\n", "author": [{"name": "Conrad Cotton-Barratt", "affiliation": "Jump Trading London, London, UK"}, {"name": "Andrzej S. Murawski", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "C.-H. Luke Ong", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Conrad Cotton-Barratt", "affiliation": "Jump Trading London, London, UK"}, {"name": "Andrzej S. Murawski", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "C.-H. Luke Ong", "affiliation": "University of Oxford, Oxford, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Full abstraction for PCF", "authors": ["Samson Abramsky", " Radha Jagadeesan"]}, {"title": "Linearity, sharing and state: A fully abstract game semantics for Idealized Algol with active expressions", "authors": ["Samson Abramsky "]}, {"title": "Call-by-value games", "authors": ["Samson Abramsky "]}, {"title": "Visibly pushdown languages", "authors": []}, {"title": "Some decision problems related to the reachability problem for Petri nets", "authors": ["Toshiro Araki "]}, {"title": "On notions of regularity for data languages", "authors": ["Henrik Bj\u00f6rklund "]}, {"title": "On notions of regularity for data languages", "authors": ["Henrik Bj\u00f6rklund "]}, {"title": "Using Class Memory Automata in Algorithmic Game Semantics", "authors": ["Conrad Cotton-Barratt"]}, {"title": "Fragments of ML decidable by nested data class memory automata", "authors": ["Conrad Cotton-Barratt", " David Hopkins"]}, {"title": "Weak and nested class memory automata", "authors": ["Conrad Cotton-Barratt"]}, {"title": "ML and extended branching VASS", "authors": ["Conrad Cotton-Barratt"]}, {"title": "Vector addition tree automata", "authors": ["Philippe de Groote", " Bruno Guillaume"]}, {"title": "Reasoning about Idealized ALGOL using regular languages", "authors": []}, {"title": "Regression verification", "authors": ["Benny Godlin "]}, {"title": "Game-theoretic analysis of call-by-value computation", "authors": ["Kohei Honda "]}, {"title": "Game Semantics Based Equivalence Checking of Higher-Order Programs", "authors": ["David Hopkins"]}, {"title": "A fragment of ML decidable by visibly pushdown automata", "authors": ["David Hopkins"]}, {"title": "On full abstraction for PCF: I, II, and III", "authors": []}, {"title": "FO2(&lt;, +1, &tilde;) on data trees, data tree automata and branching vector addition systems", "authors": ["Florent Jacquemard", " Luc Segoufin"]}, {"title": "Nonelementary complexities for branching VASS, MELL, and extensions", "authors": ["Ranko Lazic "]}, {"title": "Functions with local state: Regularity and undecidability", "authors": []}, {"title": "Idealized Algol with ground recursion, and DPDA equivalence", "authors": []}, {"title": "Game semantic analysis of equivalence in IMJ", "authors": []}, {"title": "Full abstraction for reduced ML", "authors": []}, {"title": "Algorithmic nominal game semantics", "authors": []}, {"title": "Algorithmic games for full ground references", "authors": []}, {"title": "Observational equivalence of 3rd-order Idealized Algol is decidable", "authors": []}, {"title": "Operational reasoning for functions with local state", "authors": []}, {"title": "The essence of algol", "authors": []}]},
{"title": "A Machine-Learning Algorithm with Disjunctive Model for Data-Driven Program Analysis", "time": "June 2019", "keyword": ["Programming Languages and Systems"], "abstract": "We present a new machine-learning algorithm with disjunctive model for data-driven program analysis. One major challenge in static program analysis is a substantial amount of manual effort required for tuning the analysis performance. Recently, data-driven program analysis has emerged to address this challenge by automatically adjusting the analysis based on data through a learning algorithm. Although this new approach has proven promising for various program analysis tasks, its effectiveness has been limited due to simple-minded learning models and algorithms that are unable to capture sophisticated, in particular disjunctive, program properties. To overcome this shortcoming, this article presents a new disjunctive model for data-driven program analysis as well as a learning algorithm to find the model parameters. Our model uses Boolean formulas over atomic features and therefore is able to express nonlinear combinations of program properties. A key technical challenge is to efficiently determine a set of good Boolean formulas, as brute-force search would simply be impractical. We present a stepwise and greedy algorithm that efficiently learns Boolean formulas. We show the effectiveness and generality of our algorithm with two static analyzers: context-sensitive points-to analysis for Java and flow-sensitive interval analysis for C. Experimental results show that our automated technique significantly improves the performance of the state-of-the-art techniques including ones hand-crafted by human experts.\n", "author": [{"name": "Minseok Jeon", "affiliation": "Korea University, Republic of Korea"}, {"name": "Sehun Jeong", "affiliation": "Korea University, Republic of Korea"}, {"name": "Sungdeok Cha", "affiliation": "Korea University, Republic of Korea"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Republic of Korea"}, {"name": "Minseok Jeon", "affiliation": "Korea University, Republic of Korea"}, {"name": "Sehun Jeong", "affiliation": "Korea University, Republic of Korea"}, {"name": "Sungdeok Cha", "affiliation": "Korea University, Republic of Korea"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Republic of Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Constraint-based Type Inference and Parametric Polymorphism", "authors": ["Ole Agesen"]}, {"title": "Porting doop to Souffl\u00e9: A tale of inter-engine portability for datalog-based analyses", "authors": ["Tony Antoniadis", " Konstantinos Triantafyllou"]}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": [" Robin Garner", " Chris Hoffmann", " Rotem Bentzur", " Amer Diwan", " Daniel Feinberg", " Daniel Frampton", " Martin Hirzel", " Antony Hosking", " Maria Jump", " Han Lee", " Aashish Phansalkar", " Darko Stefanovi\u0107", " Thomas VanDrunen", " Daniel von Dincklage"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9rome Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Strictly declarative specification of sophisticated points-to analyses", "authors": ["Martin Bravenboer "]}, {"title": "Learning a Strategy for Choosing Widening Thresholds from a Large Codebase", "authors": ["Sooyoung Cha", " Sehun Jeong"]}, {"title": "Automatically generating features for learning program analysis heuristics", "authors": ["Kwonsoo Chae", " Hakjoo Oh", " Kihong Heo"]}, {"title": "Relevant context inference", "authors": ["Ramkrishna Chatterjee"]}, {"title": "Call graph construction in object-oriented languages", "authors": ["David Grove", " Greg DeFouw", " Jeffrey Dean"]}, {"title": "Client-driven pointer analysis", "authors": []}, {"title": "Demand-driven pointer analysis", "authors": ["Nevin Heintze "]}, {"title": "Learning a Variable-Clustering Strategy for Octagon from Labeled Data Generated by a Static Analysis", "authors": ["Kihong Heo", " Hakjoo Oh"]}, {"title": "Learning analysis strategies for octagon and context sensitivity from labeled data generated by static analyses", "authors": ["Kihong Heo", " Hakjoo Oh"]}, {"title": "Machine-learning-guided selectively unsound static analysis", "authors": ["Kihong Heo", " Hakjoo Oh"]}, {"title": "Pointer analysis: Haven\u2019t we solved this problem yet? In Proceedings of the ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering (PASTE\u201901)", "authors": ["Michael Hind"]}, {"title": "Data-driven context-sensitivity for points-to analysis", "authors": ["Sehun Jeong", " Minseok Jeon", " Sungdeok Cha"]}, {"title": "Efficient and effective handling of exceptions in Java points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Hybrid context-sensitivity for points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Hybrid context-sensitivity for points-to analysis", "authors": ["George Kastrinis "]}, {"title": "Sound non-statistical clustering of static analysis alarms", "authors": ["Woosuk Lee", " Wonchan Lee", " Dongok Kang", " Kihong Heo", " Hakjoo Oh"]}, {"title": "Context-sensitive points-to analysis: Is it worth it? In Proceedings of the 15th International Conference on Compiler Construction (CC\u201906)", "authors": ["Ond\u0159ej Lhot\u00e1k "]}, {"title": "Evaluating the benefits of context-sensitive points-to analysis using a BDD-based implementation", "authors": ["Ond\u0159ej Lhot\u00e1k "]}, {"title": "Semantic-directed clumping of disjunctive abstract states", "authors": ["Huisong Li", " Francois Berenger", " Bor-Yuh Evan Chang"]}, {"title": "Efficient points-to analysis for whole-program analysis", "authors": ["Donglin Liang "]}, {"title": "Evaluating the impact of context-sensitivity on Andersen\u2019s algorithm for Java programs", "authors": ["Donglin Liang", " Maikel Pennings"]}, {"title": "Learning minimal abstractions", "authors": ["Percy Liang", " Omer Tripp"]}, {"title": "Parameterized object sensitivity for points-to analysis for Java", "authors": ["Ana Milanova", " Atanas Rountev"]}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "Large spurious cycle in global static analyses and its algorithmic mitigation", "authors": ["Hakjoo Oh"]}, {"title": "Global sparse analysis framework", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee", " Daejun Park", " Jeehoon Kang"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Selective context-sensitivity guided by impact pre-analysis", "authors": ["Hakjoo Oh", " Wonchan Lee", " Kihong Heo", " Hongseok Yang"]}, {"title": "Learning a strategy for adapting a program analysis via Bayesian optimisation", "authors": ["Hakjoo Oh", " Hongseok Yang"]}, {"title": "The trace partitioning abstract domain", "authors": ["Xavier Rival "]}, {"title": "Context-insensitive alias analysis reconsidered", "authors": ["Erik Ruf"]}, {"title": "Effective synchronization removal for Java", "authors": ["Erik Ruf"]}, {"title": "On fast large-scale program analysis in datalog", "authors": ["Bernhard Scholz", " Herbert Jordan", " Pavle Suboti\u0107"]}, {"title": "Pointer analysis", "authors": ["Yannis Smaragdakis "]}, {"title": "Pick your contexts well: Understanding object-sensitivity", "authors": ["Yannis Smaragdakis", " Martin Bravenboer"]}, {"title": "Introspective analysis: Context-sensitivity, across the board", "authors": ["Yannis Smaragdakis", " George Kastrinis"]}, {"title": "Refinement-based context-sensitive points-to analysis for Java", "authors": ["Manu Sridharan "]}, {"title": "Demand-driven points-to analysis for Java", "authors": ["Manu Sridharan", " Denis Gopan", " Lexin Shan"]}, {"title": "Making k-object-sensitive pointer analysis more precise with still k-limiting", "authors": ["Tian Tan", " Yue Li"]}, {"title": "Efficient and precise points-to analysis: Modeling the heap by merging equivalent automata", "authors": ["Tian Tan", " Yue Li"]}, {"title": "TAJ: Effective taint analysis of web applications", "authors": ["Omer Tripp", " Marco Pistoia", " Manu Sridharan"]}, {"title": "Soot\u2014A Java bytecode optimization framework", "authors": ["Raja Vall\u00e9e-Rai", " Phong Co", " Etienne Gagnon", " Laurie Hendren", " Patrick Lam"]}, {"title": "Adaptive context-sensitive analysis for JavaScript", "authors": []}, {"title": "Efficient context-sensitive pointer analysis for C programs", "authors": []}, {"title": "On abstraction refinement for program analyses in datalog", "authors": ["Xin Zhang", " Ravi Mangal", " Radu Grigore", " Mayur Naik"]}]},
{"title": "CSS Minification via Constraint Solving", "time": "June 2019", "keyword": ["Programming Languages and Systems"], "abstract": "Minification is a widely accepted technique that aims at reducing the size of the code transmitted over the web. This article concerns the problem of semantic-preserving minification of Cascading Style Sheets (CSS)\u2014the \n language for styling web documents\u2014based on merging similar rules.\nThe cascading nature of CSS makes the semantics of CSS files sensitive to the ordering of rules in the file. To automatically identify rule-merging opportunities that best minimise file size, we reduce the rule-merging problem to a problem concerning \u201cCSS-graphs,\u201d i.e., node-weighted bipartite graphs with a dependency ordering on the edges, where weights capture the number of characters.\nConstraint solving plays a key role in our approach. Transforming a CSS file into a CSS-graph problem requires us to extract the dependency ordering on the edges (an NP-hard problem), which requires us to solve the selector intersection problem. To this end, we provide the first full formalisation of CSS3 selectors (the most stable version of CSS) and reduce their selector intersection problem to satisfiability of quantifier-free integer linear arithmetic, for which highly optimised SMT-solvers are available. To solve the above NP-hard graph optimisation problem, we show how Max-SAT solvers can be effectively employed. We have implemented our rule-merging algorithm and tested it against approximately 70 real-world examples (including examples from each of the top 20 most popular websites). We also used our benchmarks to compare our tool against six well-known minifiers (which implement other optimisations). Our experiments suggest that our tool produced larger savings. A substantially better minification rate was shown when our tool is used together with these minifiers.\n", "author": [{"name": "Matthew Hague", "affiliation": "Royal Holloway, University of London, Egham, UK"}, {"name": "Anthony W. Lin", "affiliation": "TU Kaiserslautern and University of Oxford"}, {"name": "Chih-Duo Hong", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Matthew Hague", "affiliation": "Royal Holloway, University of London, Egham, UK"}, {"name": "Anthony W. Lin", "affiliation": "TU Kaiserslautern and University of Oxford"}, {"name": "Chih-Duo Hong", "affiliation": "University of Oxford, Oxford, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Alexa Top 500 Global Sites", "authors": ["Alexa Internet"]}, {"title": "Determinacy in static analysis for jQuery", "authors": []}, {"title": "Max-SAT\u201916 Competition", "authors": ["Josep Argelich", " Chu Min Li", " Felip Many\u00e0"]}, {"title": "CSS Snapshot 2017", "authors": []}, {"title": "XPath satisfiability in the presence of DTDs", "authors": ["Michael Benedikt", " Wenfei Fan"]}, {"title": "Structural properties of XPath fragments", "authors": ["Michael Benedikt", " Wenfei Fan"]}, {"title": "Maximum satisfiability using cores and correction sets", "authors": ["Nikolaj Bj\u00f8rner "]}, {"title": "cssmin", "authors": ["Johan Bleuzen"]}, {"title": "Automata for data words and data trees", "authors": ["Miko\u0142aj Boja\u0144czyk"]}, {"title": "Cascading Style Sheets Level 2 Revision 2 (CSS 2", "authors": ["Bert Bos"]}, {"title": "Reasoning with style", "authors": ["Mart\u00ed Bosch", " Pierre Genev\u00e8s"]}, {"title": "The Calculus of Computation: Decision Procedures with Applications to Verification", "authors": []}, {"title": "cssnano", "authors": ["Ben Briggs "]}, {"title": "Sass", "authors": ["Hampton Catlin", " Natalie Weizenbaum", " Chris Eppstein "]}, {"title": "Selectors Level 3: W3C Recommendation 29 September 2011", "authors": []}, {"title": "minify", "authors": ["Steve Clay "]}, {"title": "Efficient reasoning about data trees via integer linear programming", "authors": ["Claire David", " Leonid Libkin"]}, {"title": "Z3: An efficient SMT solver", "authors": []}, {"title": "csso", "authors": ["Roman Dvornov "]}, {"title": "Selectors Level 4: W3C Working Draft 2 May 2013", "authors": []}, {"title": "Reasoning on Words and Trees with Data: On Decidable Automata on Data Words and Data Trees in Relation to Satisfiability of LTL and XPath", "authors": ["Diego Figueira"]}, {"title": "Handbook of formal languages, Vol", "authors": ["Ferenc G\u00e9cseg "]}, {"title": "Satisfiability of XPath queries with sibling axes", "authors": ["Floris Geerts "]}, {"title": "A system for the static analysis of XPath", "authors": ["Pierre Genev\u00e8s "]}, {"title": "On the analysis of cascading style sheets", "authors": ["Pierre Genev\u00e8s", " Nabil Laya\u00efda"]}, {"title": "Efficiently deciding -calculus with converse over finite trees", "authors": ["Pierre Genev\u00e8s", " Nabil Laya\u00efda", " Alan Schmitt"]}, {"title": "Monadic queries over tree-structured data", "authors": ["Georg Gottlob "]}, {"title": "MaxSAT benchmarks: CSS refactoring", "authors": ["Matthew Hague "]}, {"title": "Data and Source Code for Sat CSS", "authors": ["Matthew Hague", " Anthony Widjaja Lin"]}, {"title": "Detecting redundant CSS rules in HTML5 applications: A tree rewriting approach", "authors": ["Matthew Hague", " Anthony Widjaja Lin"]}, {"title": "stripmq", "authors": ["Jake Hickenlooper"]}, {"title": "HTML5", "authors": ["Ian Hickson", " Robin Berjon", " Steve Faulkner", " Travis Leithead", " Erika Doyle Navara", " Edward O\u2019Connor"]}, {"title": "Satisfiability of XPath expressions", "authors": ["Jan Hidders"]}, {"title": "Synthesis of layout engines from relational constraints", "authors": ["Thibaud Hottelier "]}, {"title": "Modeling the HTML DOM and browser API in static analysis of JavaScript web applications", "authors": []}, {"title": "Type analysis for JavaScript", "authors": []}, {"title": "AdvancED CSS", "authors": []}, {"title": "On enumerating all maximal bicliques of bipartite graphs", "authors": ["Enver Kayaaslan"]}, {"title": "Logics for unranked trees: An overview", "authors": ["Leonid Libkin"]}, {"title": "Reasoning about XML with temporal logics and automata", "authors": ["Leonid Libkin "]}, {"title": "UnCSS", "authors": ["Glacomo Martino "]}, {"title": "Conditional XPath", "authors": ["Maarten Marx"]}, {"title": "Semantic characterizations of navigational XPath", "authors": ["Maarten Marx "]}, {"title": "Discovering refactoring opportunities in cascading style sheets", "authors": ["Davood Mazinanian", " Nikolaos Tsantalis"]}, {"title": "Automated analysis of CSS rules to support style maintenance", "authors": ["Ali Mesbah "]}, {"title": "Fast and parallel webpage layout", "authors": []}, {"title": "An NP-complete fragment of LTL", "authors": []}, {"title": "Maximum satisfiability using core-guided MaxSAT resolution", "authors": ["Nina Narodytska "]}, {"title": "Automata theory for XML researchers", "authors": ["Frank Neven"]}, {"title": "On the complexity of XPath containment in the presence of disjunction, DTDs, and variables", "authors": ["Frank Neven "]}, {"title": "Verifying that web pages have accessible layout", "authors": ["Pavel Panchekha", " Zachary Tatlock"]}, {"title": "Automated reasoning for web page layout", "authors": ["Pavel Panchekha "]}, {"title": "Clean-css", "authors": ["Jakub Pawlowicz"]}, {"title": "The maximum edge biclique problem is NP-complete", "authors": ["Ren\u00e9 Peeters"]}, {"title": "Bridging Constraint Satisfaction and Boolean Satisfiability", "authors": ["Justyna Petke"]}, {"title": "PyPy", "authors": ["Armin Rigo "]}, {"title": "Complexity of subcases of presburger arithmetic", "authors": []}, {"title": "Dynamic determinacy analysis", "authors": []}, {"title": "Counting in trees for free", "authors": ["Helmut Seidl", " Thomas Schwentick", " Anca Muscholl"]}, {"title": "Less", "authors": ["Alexis Sellier "]}, {"title": "YUI Compressor", "authors": ["Thomas Sha "]}, {"title": "Eight Best CSS Minifiers as of 2017", "authors": ["Slant"]}, {"title": "Google mobile first index: Page speed included as a ranking factor", "authors": ["Jennifer Slegg"]}, {"title": "High Performance Web Sites: Essential Knowledge for Front-End Engineers", "authors": ["Steve Souders"]}, {"title": "Correlation tracking for points-to analysis of JavaScript", "authors": []}, {"title": "Constraint-based refactoring", "authors": ["Friedrich Steimann"]}, {"title": "Word problems requiring exponential time: Preliminary report", "authors": []}, {"title": "Complete axiomatizations for XPath fragments", "authors": ["Balder ten Cate", " Tadeusz Litak"]}, {"title": "Navigational XPath: Calculus and algebra", "authors": ["Balder ten Cate "]}, {"title": "Axiomatizing the logical core of XPath 2", "authors": ["Balder ten Cate "]}, {"title": "Refactoring using type constraints", "authors": ["Frank Tip", " Adam Kiezun", " Ittai Balaban"]}, {"title": "The Unicode Standard, Version 9", "authors": ["Unicode", " Inc"]}, {"title": "An automata-theoretic approach to linear temporal logic", "authors": []}, {"title": "Node- and edge-deletion NP-complete problems", "authors": ["Mihalis Yannakakis"]}]},
{"title": "Don\u2019t Sit on the Fence: A Static Analysis Approach to Automatic Fence Insertion", "time": "May 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Modern architectures rely on memory fences to prevent undesired weakenings of memory consistency. As the fences\u2019 semantics may be subtle, the automation of their placement is highly desirable. But precise methods for restoring consistency do not scale to deployed systems\u2019 code. We choose to trade some precision for genuine scalability: our technique is suitable for large code bases. We implement it in our new musketeer tool and report experiments on more than 700 executables from packages found in Debian GNU/Linux 7.1, including memcached with about 10,000 LoC.\n", "author": [{"name": "Jade Alglave", "affiliation": "Microsoft Research, University College London, London, UK"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, Parks Road, Oxford, UK"}, {"name": "Vincent Nimal", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Daniel Poetzl", "affiliation": "University of Oxford, Parks Road, Oxford, UK"}, {"name": "Jade Alglave", "affiliation": "Microsoft Research, University College London, London, UK"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, Parks Road, Oxford, UK"}, {"name": "Vincent Nimal", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Daniel Poetzl", "affiliation": "University of Oxford, Parks Road, Oxford, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Memorax, A precise and sound tool for automatic fence insertion under TSO", "authors": ["Parosh Aziz Abdulla", " Mohamed Faouzi Atig", " Yu-Fang Chen", " Carl Leonardsson"]}, {"title": "Precise and sound automatic fence insertion procedure under PSO", "authors": ["Parosh Aziz Abdulla", " Mohamed Faouzi Atig", " Magnus Lang"]}, {"title": "The best of both worlds: Trading efficiency and optimality in fence insertion for TSO", "authors": ["Parosh Aziz Abdulla", " Mohamed Faouzi Atig"]}, {"title": "Shared memory consistency models: A tutorial", "authors": []}, {"title": "Soundness of data flow analyses for weak memory models", "authors": ["Jade Alglave", " Daniel Kroening", " John Lugton", " Vincent Nimal"]}, {"title": "Software verification for weak memory via program transformation", "authors": ["Jade Alglave", " Daniel Kroening", " Vincent Nimal"]}, {"title": "Stability in weak memory models", "authors": ["Jade Alglave "]}, {"title": "Fences in weak memory models", "authors": ["Jade Alglave", " Luc Maranget"]}, {"title": "Herding cats: Modelling, simulation, testing, and data mining for weak memory", "authors": ["Jade Alglave", " Luc Maranget"]}, {"title": "Declarative fence insertion", "authors": ["John Bender", " Mohsen Lesani"]}, {"title": "Checking and enforcing robustness against TSO", "authors": ["Ahmed Bouajjani", " Egor Derevenetc"]}, {"title": "Deciding robustness against total store ordering", "authors": ["Ahmed Bouajjani"]}, {"title": "2011", "authors": []}, {"title": "Dynamic circular work-stealing deque", "authors": ["David Chase "]}, {"title": "Even better DCAS-based concurrent deques", "authors": ["David Detlefs", " Alex Garthwaite", " Nir Shavit"]}, {"title": "A race in LockSuport park() arising from weak memory models", "authors": ["David Dice"]}, {"title": "Solution of a problem in concurrent programming control", "authors": []}, {"title": "Automatic fence insertion for shared memory multiprocessing", "authors": ["Xing Fang", " Jaejin Lee"]}, {"title": "The implementation of the Cilk-5 multithreaded language", "authors": ["Matteo Frigo"]}, {"title": "The Art of Multiprocessor Programming", "authors": ["Maurice Herlihy "]}, {"title": "Power ISA Version 2", "authors": ["IBM"]}, {"title": "Property-driven fence insertion using reorder bounded model checking", "authors": ["Saurabh Joshi "]}, {"title": "Static data race detection for concurrent programs with asynchronous calls", "authors": ["Vineet Kahlon", " Nishant Sinha", " Erik Kruus"]}, {"title": "Analyses and optimizations for shared address space programs", "authors": []}, {"title": "Automating software analysis at large scale", "authors": ["Daniel Kroening "]}, {"title": "Automatic inference of memory fences", "authors": ["Michael Kuperstein"]}, {"title": "Partial-coherence abstractions for relaxed memory models", "authors": ["Michael Kuperstein"]}, {"title": "How to make a correct multiprocess program execute correctly on a multiprocessor", "authors": ["Leslie Lamport"]}, {"title": "A fast mutual exclusion algorithm", "authors": ["Leslie Lamport"]}, {"title": "Hiding relaxed memory consistency with a compiler", "authors": []}, {"title": "A verification-based approach to memory fence insertion in PSO memory systems", "authors": ["Alex"]}, {"title": "Dynamic synthesis for relaxed memory models", "authors": ["Feng Liu", " Nayden Nedev", " Nedyalko Prisadnikov"]}, {"title": "ArMOR: Defending against memory consistency model mismatches in heterogeneous architectures", "authors": ["Daniel Lustig", " Caroline Trippel", " Michael Pellauer"]}, {"title": "A case for an SC-preserving compiler", "authors": ["Daniel Marino", " Abhayendra Singh", " Madanlal Musuvathi"]}, {"title": "Synthesis of memory fences via refinement propagation", "authors": ["Yuri Meshman", " Andrei Dan", " Martin Vechev"]}, {"title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms", "authors": []}, {"title": "Idempotent work stealing", "authors": []}, {"title": "Static Analyses over Weak Memory", "authors": ["Vincent Nimal"]}, {"title": "CDSchecker: Checking concurrent data structures written with C/C++ atomics", "authors": ["Brian Norris "]}, {"title": "A better x86 memory model: x86-TSO", "authors": ["Scott Owens", " Susmit Sarkar"]}, {"title": "Myths about the mutual exclusion problem", "authors": []}, {"title": "Efficient and correct execution of parallel programs that share memory", "authors": ["Dennis Shasha "]}, {"title": "SPARC Architecture Manual Version 9", "authors": ["SPARC"]}, {"title": "Reducing memory ordering overheads in software transactional memory", "authors": []}, {"title": "Compiler techniques for high performance sequentially consistent Java programs", "authors": ["Zehra Sura", " Xing Fang", " Chi-Leung Wong", " Jaejin Lee"]}, {"title": "A simple solution to Lamport\u2019s concurrent programming problem with linear wait", "authors": []}, {"title": "Enumeration of the elementary circuits of a directed graph", "authors": ["Robert Tarjan"]}, {"title": "Verifying fence elimination optimisations", "authors": ["Viktor Vafeiadis "]}, {"title": "Event structures", "authors": ["Glynn Winskel"]}]},
{"title": "Higher-order Demand-driven Program Analysis", "time": "July 2019", "keyword": ["Programming Languages and Systems"], "abstract": "Developing accurate and efficient program analyses for languages with higher-order functions is known to be difficult. Here we define a new higher-order program analysis, Demand-Driven Program Analysis (DDPA), which extends well-known \n lookup techniques found in first-order program analyses to higher-order programs.\nThis task presents several unique challenges to obtain good accuracy, including the need for a new method for demand-driven lookup of non-local variable values. DDPA is flow- and context-sensitive and provably polynomial-time. To efficiently implement DDPA, we develop a novel pushdown automaton metaprogramming framework, the Pushdown Reachability automaton. The analysis is formalized and proved sound, and an implementation is described.\n", "author": [{"name": "Leandro Facchinetti", "affiliation": "The Johns Hopkins University"}, {"name": "Zachary Palmer", "affiliation": "Swarthmore College, PA"}, {"name": "Scott Smith", "affiliation": "The Johns Hopkins University"}, {"name": "Leandro Facchinetti", "affiliation": "The Johns Hopkins University"}, {"name": "Zachary Palmer", "affiliation": "Swarthmore College, PA"}, {"name": "Scott Smith", "affiliation": "The Johns Hopkins University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "The cartesian product algorithm: Simple and precise type inference of parametric polymorphism", "authors": ["Ole Agesen"]}, {"title": "Type inclusion constraints and type inference", "authors": []}, {"title": "Handbook of Model Checking", "authors": ["Rajeev Alur", " Ahmed Bouajjani"]}, {"title": "Visibly pushdown languages", "authors": []}, {"title": "Compiling with Continuations", "authors": []}, {"title": "Reachability analysis of pushdown automata: Application to model-checking", "authors": ["Ahmed Bouajjani", " Javier Esparza"]}, {"title": "Global Index Languages", "authors": ["Jos\u00e9 Castano"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "A demand-driven adaptive type analysis", "authors": ["Danny Dub\u00e9 "]}, {"title": "A practical framework for demand-driven interprocedural data flow analysis", "authors": ["Evelyn Duesterwald", " Rajiv Gupta"]}, {"title": "Pushdown control-flow analysis of higher-order programs", "authors": ["Christopher Earl", " Matthew Might"]}, {"title": "Introspective pushdown analysis of higher-order programs", "authors": ["Christopher Earl", " Ilya Sergey", " Matthew Might"]}, {"title": "Relative store fragments for singleton abstraction", "authors": ["Le", " Zachary Palmer"]}, {"title": "Scalable context-sensitive flow analysis using instantiation constraints", "authors": ["Manuel F\u00e4hndrich", " Jakob Rehof"]}, {"title": "Control operators, the SECD-machine, and the lambda-calculus", "authors": []}, {"title": "The revised report on the syntactic theories of sequential control and state", "authors": ["Matthias Felleisen "]}, {"title": "The essence of compiling with continuations", "authors": ["Cormac Flanagan", " Amr Sabry"]}, {"title": "A posteriori environment analysis with pushdown delta CFA", "authors": ["Kimball Germane "]}, {"title": "Pushdown control-flow analysis for free", "authors": ["Thomas Gilray", " Steven Lyde", " Matthew Might"]}, {"title": "Demand-driven pointer analysis", "authors": ["Nevin Heintze "]}, {"title": "Demand interprocedural dataflow analysis", "authors": ["Susan Horwitz", " Thomas Reps"]}, {"title": "A unified treatment of flow analysis in higher-order languages", "authors": ["Suresh Jagannathan "]}, {"title": "Optimizing abstract abstract machines", "authors": [" Nicholas Labich", " Matthew Might"]}, {"title": "Pushdown flow analysis with abstract garbage collection", "authors": [" Ilya Sergey", " Christopher Earl", " Matthew Might"]}, {"title": "The set constraint/CFL reachability connection in practice", "authors": ["John Kodumal "]}, {"title": "Reachability of multistack pushdown systems with scope-bounded matching relations", "authors": ["Salvatore La Torre "]}, {"title": "An algorithm for optimal lambda calculus reduction", "authors": ["John Lamping"]}, {"title": "Interconvertbility of set constraints and context-free language reachability", "authors": ["David Melski "]}, {"title": "Control-flow analysis of functional programs", "authors": ["Jan Midtgaard"]}, {"title": "Environment Analysis of Higher-order Languages", "authors": ["Matthew Might"]}, {"title": "Abstract interpreters for free", "authors": ["Matthew Might"]}, {"title": "Environment analysis via \u0394CFA", "authors": ["Matthew Might "]}, {"title": "Improving flow analyses via \u0393CFA: Abstract garbage collection and counting", "authors": ["Matthew Might "]}, {"title": "Resolving and exploiting the k-CFA paradox: Illuminating functional vs", "authors": ["Matthew Might", " Yannis Smaragdakis"]}, {"title": "Principles of Program Analysis", "authors": ["Flemming Nielson"]}, {"title": "Higher-order demand-driven program analysis", "authors": []}, {"title": "Type-base flow analysis: From polymorphic subtyping to CFL-reachability", "authors": ["Jakob Rehof "]}, {"title": "Shape analysis as a generalized path problem", "authors": ["Thomas Reps"]}, {"title": "Undecidability of context-sensitive data-dependence analysis", "authors": ["Thomas Reps"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Thomas Reps", " Susan Horwitz"]}, {"title": "Program analysis using weighted pushdown systems", "authors": ["Thomas Reps", " Akash Lal"]}, {"title": "Demand Interprocedural Program Analysis Using Logic Databases", "authors": []}, {"title": "Incremental and demand-driven points-to analysis using logic programming", "authors": []}, {"title": "Control-flow Analysis of Higher-order Languages", "authors": ["Olin Grigsby Shivers"]}, {"title": "Flow-Directed Lightweight Closure Conversion", "authors": ["Jeffrey Mark Siskind"]}, {"title": "Using datalog for fast and easy program analysis", "authors": ["Yannis Smaragdakis "]}, {"title": "Boomerang: Demand-driven flow- and context-sensitive pointer analysis for Java", "authors": ["Johannes Sp\u00e4th", " Lisa Nguyen Quang Do", " Karim Ali"]}, {"title": "Demand-driven type inference with subgoal pruning: Trading precision for scalability", "authors": []}, {"title": "Relating complexity and precision in control flow analysis", "authors": []}, {"title": "Deciding kCFA is complete for EXPTIME", "authors": []}, {"title": "CFA2: A context-free approach to control-flow analysis", "authors": ["Dimitrios Vardoulakis "]}, {"title": "Pushdown flow analysis of first-class control", "authors": ["Dimitrios Vardoulakis "]}, {"title": "Semantics and Pragmatics of the Lambda-calculus", "authors": []}, {"title": "Whole-program compilation in MLton", "authors": ["Stephen Weeks"]}, {"title": "Context-sensitive data-dependence analysis via linear conjunctive language reachability", "authors": ["Qirun Zhang "]}, {"title": "Finding optimum abstractions in parametric dataflow analysis", "authors": ["Xin Zhang", " Mayur Naik"]}]},
{"title": "From Clarity to Efficiency for Distributed Algorithms", "time": "May 2017", "keyword": ["Programming Languages and Systems"], "abstract": "This article describes a very high-level language for clear description of distributed algorithms and optimizations necessary for generating efficient implementations. The language supports high-level control flows in which complex synchronization conditions can be expressed using high-level queries, especially logic quantifications, over message history sequences. Unfortunately, the programs would be extremely inefficient, including consuming unbounded memory, if executed straightforwardly.\nWe present new optimizations that automatically transform complex synchronization conditions into incremental updates of necessary auxiliary values as messages are sent and received. The core of the optimizations is the first general method for efficient implementation of logic quantifications. We have developed an operational semantics of the language, implemented a prototype of the compiler and the optimizations, and successfully used the language and implementation on a variety of important distributed algorithms.\n", "author": [{"name": "Yanhong A. Liu", "affiliation": "Stony Brook University, NY, USA"}, {"name": "Scott D. Stoller", "affiliation": "Stony Brook University, NY, USA"}, {"name": "Bo Lin", "affiliation": "Stony Brook University, NY, USA"}, {"name": "Yanhong A. Liu", "affiliation": "Stony Brook University, NY, USA"}, {"name": "Scott D. Stoller", "affiliation": "Stony Brook University, NY, USA"}, {"name": "Bo Lin", "affiliation": "Stony Brook University, NY, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "11", "references": [{"title": "Adaptive functional programming", "authors": []}, {"title": "Actors: A Model of Concurrent Computation in Distributed Systems", "authors": ["Gul Agha"]}, {"title": "Reduction of operator strength", "authors": [" John Cocke"]}, {"title": "I do declare: Consensus in a logic language", "authors": []}, {"title": "The SR Programming Language: Concurrency in Practice", "authors": []}, {"title": "A language for large ensembles of independently executing nodes", "authors": [" Peter Lee", " Seth Copen Goldstein", " Padmanabhan Pillai"]}, {"title": "Distributed Computing: Fundamentals, Simulations, and Advanced Topics (2nd ed", "authors": ["Hagit Attiya "]}, {"title": "Concert/C: A language for distributed programming", "authors": []}, {"title": "Question answering and database querying: Bridging the gap with generalized quantification", "authors": ["Antonio Badia"]}, {"title": "An implementation of a query language with generalized quantifiers", "authors": ["Antonio Badia", " Br"]}, {"title": "Query languages with generalized quantifiers", "authors": ["Antonio Badia", " Dirk Van Gucht"]}, {"title": "Megastore: Providing scalable, highly available storage for interactive services", "authors": ["Jason Baker", " Chris Bond", " Andrey Khorlin", " James Larson", " Jean-Michel L\u00e9on", " Yawei Li", " Alex"]}, {"title": "Bloom Programming Language", "authors": ["Berkeley Orders of Magnitud"]}, {"title": "Component specification using event classes", "authors": ["Mark Bickford"]}, {"title": "The development of the Emerald programming language", "authors": [" Eric Jul"]}, {"title": "The chubby lock service for loosely-coupled distributed systems", "authors": ["Mike Burrows"]}, {"title": "Type analysis and data structure selection", "authors": ["Jiazhen Cai", " Philippe Facon", " Fritz Henglein", " Robert Paige"]}, {"title": "Formal verification of multi-Paxos for distributed consensus", "authors": ["Saksham Ch"]}, {"title": "Bigtable: A distributed storage system for structured data", "authors": ["Fay Chang", " Jeffrey Dean", " Sanjay Ghemawat", " Mike Burrows", " Tushar Ch", " Andrew Fikes"]}, {"title": "Optimizing queries with universal quantification in object-oriented and object-relational databases", "authors": ["Jens Clau\u00dfen", " Alfons Kemper", " Guido Moerkotte"]}, {"title": "Introduction to Algorithms (3rd ed", "authors": []}, {"title": "A linear logic programming language for concurrent programming over graph structures", "authors": ["Flavio Cruz", " Ricardo Rocha", " Seth Copen Goldstein"]}, {"title": "MapReduce: Simplified data processing on large clusters", "authors": ["Jeffrey Dean "]}, {"title": "Dynamo: Amazon\u2019s highly available key-value store", "authors": ["Giuseppe DeC", " Deniz Hastorun", " Madan Jampani", " Gunavardhan Kakulapati", " Avinash Lakshman", " Alex Pilchin", " Swaminathan Sivasubramanian", " Peter Vosshall"]}, {"title": "DistAlgo: A Language for Distributed Algorithms", "authors": ["DistAlgo"]}, {"title": "Erlang Programming Language", "authors": ["Erlang"]}, {"title": "Timestamps in message-passing systems that preserve the partial ordering", "authors": []}, {"title": "Program transformation for development, verification, and synthesis of programs", "authors": []}, {"title": "Elements of Distributed Computing", "authors": []}, {"title": "Simplifying reductions", "authors": []}, {"title": "Automated implementation of complex distributed algorithms specified in the IOA language", "authors": ["Chryssis Georgiou"]}, {"title": "The Google file system", "authors": ["Sanjay Ghemawat", " Howard Gobioff"]}, {"title": "Alias analysis for optimization of dynamic languages", "authors": ["Michael Gorbovitski", " Tom Rothamel"]}, {"title": "A Language Theoretic Approach to Algorithms", "authors": ["Deepak Goyal"]}, {"title": "Rewriting UNITY", "authors": ["Adam Granicz"]}, {"title": "Maintaining views incrementally", "authors": ["Ashish Gupta", " Inderpal Singh Mumick"]}, {"title": "Distributed prototyping from validated specifications", "authors": ["David Hansel", " Rance Cleavel"]}, {"title": "ZooKeeper: Wait-free coordination for Internet-scale Systems", "authors": ["Patrick Hunt", " Mahadev Konar", " Flavio Paiva Junqueira"]}, {"title": "The Theory of Timed I/O Automata", "authors": ["Dilsun Kaynar", " Nancy Lynch", " Roberto Segala"]}, {"title": "An experiment in compiler design for a concurrent object-based programming language", "authors": ["Ingolf Heiko Kr\u00fcger"]}, {"title": "Distributed Computing: Principles, Algorithms, and Systems", "authors": []}, {"title": "Cassandra: A decentralized structured storage system", "authors": ["Avinash Lakshman "]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Leslie Lamport"]}, {"title": "Specifying Systems: The TLA+ Language and Tools for Hardware and Software Engineers", "authors": ["Leslie Lamport"]}, {"title": "The pluscal algorithm language", "authors": ["Leslie Lamport"]}, {"title": "Erlang for concurrent programming", "authors": ["Jim Larson"]}, {"title": "Distributed programming in Argus", "authors": ["Barbara Liskov"]}, {"title": "Systematic Program Design: From Clarity to Efficiency", "authors": ["Yanhong Annie Liu"]}, {"title": "Demand-driven incremental object queries", "authors": [" Jon Br"]}, {"title": "A language and framework for invariant-driven transformations", "authors": [" Michael Gorbovitski"]}, {"title": "Dynamic programming via static incrementalization", "authors": []}, {"title": "From datalog rules to efficient programs with time and space guarantees", "authors": []}, {"title": "Incrementalization across object abstraction", "authors": [" Michael Gorbovitski", " Tom Rothamel"]}, {"title": "Optimizing aggregate array computations in loops", "authors": [" Ning Li"]}, {"title": "High-level executable specifications of distributed algorithms", "authors": []}, {"title": "From clarity to efficiency for distributed algorithms", "authors": [" Bo Lin"]}, {"title": "Core role-based access control: Efficient implementations by transformations", "authors": [" Chen Wang", " Michael Gorbovitski", " Tom Rothamel", " Yongxi Cheng", " Yingchao Zhao"]}, {"title": "Applying Prolog to develop distributed systems", "authors": [" Andrey Rybalchenko"]}, {"title": "Distributed Algorithms", "authors": []}, {"title": "Virtual time and global states of distributed systems", "authors": ["Friedemann Mattern"]}, {"title": "Kademlia: A peer-to-peer information system based on the XOR metric", "authors": ["Petar Maymounkov "]}, {"title": "Message Passing Interface Forum", "authors": ["MPI"]}, {"title": "Incremental computation of complex object queries", "authors": ["Hiroaki Nakamura"]}, {"title": "Real-time simulation of a set machine on a RAM", "authors": ["Robert Paige"]}, {"title": "Finite differencing of computable expressions", "authors": ["Robert Paige "]}, {"title": "Programs with universally quantified embedded implications", "authors": ["Vyacheslav Petukhin"]}, {"title": "EventML", "authors": ["PRL Project"]}, {"title": "Incremental computation via function caching", "authors": ["William Pugh "]}, {"title": "A categorized bibliography on incremental computation", "authors": []}, {"title": "Distributed Algorithms and Protocols", "authors": ["Michel Raynal"]}, {"title": "Communication and Agreement Abstractions for Fault-Tolerant Asynchronous Distributed Systems", "authors": ["Michel Raynal"]}, {"title": "Distributed Algorithms for Message-Passing Systems", "authors": ["Michel Raynal"]}, {"title": "Generating incremental implementations of object-set queries", "authors": []}, {"title": "Pastry: Scalable, decentralized object location, and routing for large-scale peer-to-peer systems", "authors": ["Antony Rowstron "]}, {"title": "Incremental evaluation of tabled logic programs", "authors": []}, {"title": "The Lynx distributed programming language: Motivation, design, and experience", "authors": []}, {"title": "A rewriting logic approach to operational semantics", "authors": ["Traian Florin Serbanuta", " Grigore Rosu"]}, {"title": "The Hadoop distributed file system", "authors": ["Konstantin Shvachko", " Hairong Kuang", " Sanjay Radia"]}, {"title": "Chord: A scalable peer-to-peer lookup protocol for Internet applications", "authors": []}, {"title": "The XSB System Version 3", "authors": ["Theresa Swift"]}, {"title": "Introduction to Distributed Algorithms (2nd ed", "authors": ["Gerard Tel"]}, {"title": "Paxos made moderately complex", "authors": ["Robbert van Renesse "]}, {"title": "Chain replication for supporting high throughput and availability", "authors": []}, {"title": "Efficient processing of relational calculus expressions using range query theory", "authors": []}, {"title": "An algorithm for handling many relational calculus queries efficiently", "authors": []}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": "Tapestry: A resilient global-scale overlay for service deployment", "authors": [" Ling Huang", " Jeremy Stribling"]}]},
{"title": "Precise Predictive Analysis for Discovering Communication Deadlocks in MPI Programs", "time": "August 2017", "keyword": ["Programming Languages and Systems"], "abstract": "The Message Passing Interface (MPI) is the standard API for parallelization in high-performance and scientific computing. Communication deadlocks are a frequent problem in MPI programs, and this article addresses the problem of discovering such deadlocks. We begin by showing that if an MPI program is single path, the problem of discovering communication deadlocks is NP-complete. We then present a novel propositional encoding scheme that captures the existence of communication deadlocks. The encoding is based on modeling executions with partial orders and implemented in a tool called \n. The tool executes an MPI program, collects the trace, builds a formula from the trace using the propositional encoding scheme, and checks its satisfiability. Finally, we present experimental results that quantify the benefit of the approach in comparison to other analyzers and demonstrate that it offers a scalable solution for single-path programs.\n", "author": [{"name": "Vojt\u01cech Forejt", "affiliation": "Diffblue Ltd., Oxford, UK"}, {"name": "Saurabh Joshi", "affiliation": "IIT Hyderabad, Kandi, Telangana, India"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford and Diffblue Ltd."}, {"name": "Ganesh Narayanaswamy", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Subodh Sharma", "affiliation": "IIT Delhi, India"}, {"name": "Vojt\u01cech Forejt", "affiliation": "Diffblue Ltd., Oxford, UK"}, {"name": "Saurabh Joshi", "affiliation": "IIT Hyderabad, Kandi, Telangana, India"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford and Diffblue Ltd."}, {"name": "Ganesh Narayanaswamy", "affiliation": "University of Oxford, Oxford, UK"}, {"name": "Subodh Sharma", "affiliation": "IIT Delhi, India"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "Partial orders for efficient bounded model checking of concurrent software", "authors": ["Jade Alglave", " Daniel Kroening"]}, {"title": "Efficient CNF encoding of Boolean cardinality constraints", "authors": ["Olivier Bailleux "]}, {"title": "State-space reduction of non-deterministically synchronizing systems applicable to deadlock detection in MPI", "authors": ["Stanislav B\u00f6hm", " Ondrej Meca"]}, {"title": "Parallel symbolic execution for automated real-world software testing", "authors": ["Stefan Bucur", " Vlad Ureche", " Cristian Zamfir"]}, {"title": "KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs", "authors": ["Cristian Cadar", " Daniel Dunbar"]}, {"title": "The pilot library for novice MPI programmers", "authors": []}, {"title": "jPredictor: A predictive runtime analysis tool for Java", "authors": ["Feng Chen", " Traian Florin Serbanuta"]}, {"title": "Complexity results for 1-safe nets", "authors": ["Allan Cheng", " Javier Esparza"]}, {"title": "A tool for checking ANSI-C programs", "authors": ["Edmund Clarke", " Daniel Kroening"]}, {"title": "Verification and coverage of message passing multicore applications", "authors": ["Etem Deniz", " Alper Sen"]}, {"title": "An extensible SAT-solver", "authors": ["Niklas E\u00e9n "]}, {"title": "Debugging support tool for MCAPI applications", "authors": ["Mohamed Elwakil "]}, {"title": "Sherlock: Scalable deadlock detection for concurrent programs", "authors": ["Mahdi Eslamimehr "]}, {"title": "Precise predictive analysis for discovering communication deadlocks in MPI programs", "authors": ["Vojtech Forejt", " Daniel Kroening", " Ganesh Narayanaswamy"]}, {"title": "SAT encodings of the at-most- constraint: Some old, some new, some fast, some slow", "authors": []}, {"title": "Synchronization error detection of MPI programs by symbolic execution", "authors": ["Xianjin Fu", " Zhenbang Chen", " Chun Huang", " Wei Dong"]}, {"title": "MPISE: Symbolic execution of MPI programs", "authors": ["Xianjin Fu", " Zhenbang Chen", " Yufeng Zhang", " Chun Huang", " Wei Dong"]}, {"title": "DELFIN: An efficient deadlock detection tool for CCS processes", "authors": ["Sara Gradara", " Antonella Santone"]}, {"title": "Concurrent deadlock detection in parallel programs", "authors": ["Waqar Haque"]}, {"title": "MPI runtime error detection with MUST: Advances in deadlock detection", "authors": ["Tobias Hilbrich", " Joachim Protze", " Martin Schulz"]}, {"title": "Software standards for the multicore era", "authors": ["Jim Holt", " Anant Agarwal", " Sven Brehmer", " Max Domeika", " Patrick Griffin"]}, {"title": "Detecting MPI zero buffer incompatibility by SMT encoding", "authors": ["Yu Huang "]}, {"title": "Proving MCAPI executions are correct using SMT", "authors": ["Yu Huang", " Eric Mercer"]}, {"title": "MARMOT: An MPI analysis and checking tool", "authors": ["Bettina Krammer", " Katrin Bidmon"]}, {"title": "Verifying GPU kernels by test amplification", "authors": ["Alan Leung", " Manish Gupta", " Yuvraj Agarwal", " Rajesh Gupta", " Ranjit Jhala"]}, {"title": "Protocol-based verification of message-passing parallel programs", "authors": [" Francisco Martins", " Nicholas Ng", " C\u00e9sar Santos", " Vasco Thudichum Vasconcelos"]}, {"title": "Deadlock detection in MPI programs", "authors": [" Yan Zou", " James Coyle", " Jim Hoekstra"]}, {"title": "SimGrid MC: Verification support for a multi-API simulation platform", "authors": ["Stephan Merz", " Martin Quinson"]}, {"title": "MPI 2", "authors": ["Message Passing Interface Forum"]}, {"title": "Dealing with MPI Bugs at Scale: Best Practices, Automatic Detection, Debugging, and Formal Verification", "authors": [" Ganesh Gopalakrishnan", " David Lecomber"]}, {"title": "A distributed algorithm for detecting communication deadlocks", "authors": []}, {"title": "All from one, one for all: On model checking using representatives", "authors": []}, {"title": "Deductive verification of parallel programs using why3", "authors": ["C\u00e9sar Santos", " Francisco Martins"]}, {"title": "MCC: A runtime verification tool for MCAPI user applications", "authors": ["Subodh Sharma", " Ganesh Gopalakrishnan", " Eric Mercer"]}, {"title": "Model checking nonblocking MPI programs", "authors": []}, {"title": "CIVL: The concurrency intermediate verification language", "authors": [" Manchun Zheng", " Ziqing Luo"]}, {"title": "FEVS: A functional equivalence verification suite for high-performance scientific computing", "authors": []}, {"title": "The Toolkit for Accurate Scientific Software", "authors": []}, {"title": "Efficient Dynamic Verification Algorithms for MPI Applications", "authors": ["Sarvani Vakkalanka"]}, {"title": "Dynamic verification of MPI programs with reductions in presence of split operations and relaxed orderings", "authors": [" Ganesh Gopalakrishnan"]}, {"title": "Stubborn sets for reduced state space generation", "authors": ["Antti Valmari"]}, {"title": "A scalable and distributed dynamic formal verifier for MPI programs", "authors": ["Anh Vo", " Sriram Aananthakrishnan", " Ganesh Gopalakrishnan", " Martin Schulz"]}, {"title": "Symbolic predictive analysis for concurrent programs", "authors": ["Chao Wang", " Sudipta Kundu"]}, {"title": "MPIWiz: Subgroup reproducible replay of MPI applications", "authors": ["Ruini Xue", " Xuezheng Liu", " Ming Wu", " Zhenyu Guo", " Wenguang Chen", " Weimin Zheng", " Zheng Zhang"]}, {"title": "Using Symbolic Execution to Verify the Order of Accuracy of Numerical Approximations", "authors": []}]},
{"title": "Sound Non-Statistical Clustering of Static Analysis Alarms", "time": "August 2017", "keyword": ["Programming Languages and Systems"], "abstract": "We present a sound method for clustering alarms from static analyzers. Our method clusters alarms by discovering sound dependencies between them such that if the dominant alarms of a cluster turns out to be false, all the other alarms in the same cluster are guaranteed to be false. We have implemented our clustering algorithm on top of a realistic buffer-overflow analyzer and proved that our method reduces 45% of alarm reports. Our framework is applicable to any abstract interpretation-based static analysis and orthogonal to abstraction refinements and statistical ranking schemes.\n", "author": [{"name": "Woosuk Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Stanford University"}, {"name": "Dongok Kang", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Seongbuk-gu, Seoul, Korea"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Woosuk Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Stanford University"}, {"name": "Dongok Kang", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hakjoo Oh", "affiliation": "Korea University, Seongbuk-gu, Seoul, Korea"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "SLR: Path-sensitive analysis through infeasible-path detection and syntactic language refinement", "authors": ["Gogul Balakrishnan", " Sriram Sankaranarayanan", " Franjo Ivan\u010di\u0107", " Ou Wei"]}, {"title": "From symptom to cause: Localizing errors in counterexample traces", "authors": ["Thomas Ball", " Mayur Naik"]}, {"title": "Explaining type errors in polymorphic languages", "authors": ["Mike Beaven "]}, {"title": "Thresher: Precise refutations for heap reachability", "authors": ["Sam Blackshear", " Bor-Yuh Evan Chang"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9rome Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Compositional explanation of types and algorithmic debugging of type errors", "authors": ["Olaf Chitil"]}, {"title": "BegBunch: Benchmarking for C bug detection tools", "authors": ["Cristina Cifuentes", " Christian Hoermann", " Nathan Keynes", " Lian Li", " Simon Long", " Erica Mealy", " Michael Mounteney"]}, {"title": "Abstract interpretation and application to logic programs", "authors": ["Patrick Cousot "]}, {"title": "Fixpoint-guided abstraction refinements", "authors": []}, {"title": "Numeric bounds analysis with conflict-driven learning", "authors": ["Vijay D\u2019Silva", " Leopold Haller", " Daniel Kroening"]}, {"title": "Explaining type inference", "authors": ["Dominic Duggan "]}, {"title": "What went wrong: Explaining counterexamples", "authors": ["Alex Groce "]}, {"title": "Counterexample driven refinement for abstract interpretation", "authors": []}, {"title": "Automatically refining abstract interpretations", "authors": [" Supratik Chakraborty"]}, {"title": "A maximum-flow approach to anomaly isolation in unification-based incremental type inference", "authors": []}, {"title": "Taming false alarms from a domain-unaware C analyzer by a bayesian statistical post analysis", "authors": ["Yungbum Jung", " Jaehwang Kim", " Jaeho Shin"]}, {"title": "MeCC: Memory comparison-based clone detector", "authors": ["Heejung Kim", " Yungbum Jung", " Sunghun Kim"]}, {"title": "Filtering false alarms of buffer overflow analysis using SMT solvers", "authors": ["Youil Kim", " Jooyong Lee", " Hwansoo Han"]}, {"title": "Correlation exploitation in error ranking", "authors": ["Ted Kremenek", " Ken Ashcraft", " Junfeng Yang"]}, {"title": "Z-ranking: Using statistical analysis to counter the impact of static analysis approximations", "authors": ["Ted Kremenek "]}, {"title": "Path-based fault correlations", "authors": ["Wei Le "]}, {"title": "Sound non-statistical clustering of static analysis alarms", "authors": ["Woosuk Lee", " Wonchan Lee"]}, {"title": "Learning minimal abstractions", "authors": ["Percy Liang", " Omer Tripp"]}, {"title": "A user-guided approach to program analysis", "authors": ["Ravi Mangal", " Xin Zhang"]}, {"title": "Polyspace Embedded Software Verification", "authors": ["MathWorks"]}, {"title": "Trace partitioning in abstract interpretation based static analyzers", "authors": ["Laurent Mauborgne "]}, {"title": "Code Contracts", "authors": ["Microsoft"]}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "Global sparse analysis framework", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee", " Daejun Park", " Jeehoon Kang"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "Understanding the origin of alarms in ASTR\u00c9E", "authors": ["Xavier Rival"]}, {"title": "The Sparrow Static Analyzer", "authors": ["ROPAS"]}, {"title": "A slicing-based approach for locating type errors", "authors": []}, {"title": "Finding the source of type errors", "authors": ["Mitchell W"]}]},
{"title": "The Chemical Approach to Typestate-Oriented Programming", "time": "May 2017", "keyword": ["Programming Languages and Systems"], "abstract": "We introduce a novel approach to typestate-oriented programming based on the chemical metaphor: state and operations on objects are molecules of messages, and state transformations are chemical reactions. This approach allows us to investigate typestate in an inherently concurrent setting, whereby objects can be accessed and modified concurrently by several processes, each potentially changing only part of their state. We introduce a simple behavioral type theory to express in a uniform way both the private and the public interfaces of objects; describe and enforce structured object protocols consisting of possibilities, prohibitions, and obligations; and control object sharing.\n", "author": [{"name": "Silvia Crafa", "affiliation": "Universit\u00e0 di Padova, Padova, Italy"}, {"name": "Luca Padovani", "affiliation": "Universit\u00e0 di Torino, Torino, Italy"}, {"name": "Silvia Crafa", "affiliation": "Universit\u00e0 di Padova, Padova, Italy"}, {"name": "Luca Padovani", "affiliation": "Universit\u00e0 di Torino, Torino, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Actors: A Model of Concurrent Computation in Distributed Systems", "authors": ["Gul Agha"]}, {"title": "Typestate-oriented programming", "authors": ["Jonathan Aldrich", " Joshua Sunshine", " Darpan Saini"]}, {"title": "An empirical study of object protocols in the wild", "authors": [" Duri Kim"]}, {"title": "Modern concurrency abstractions for C#", "authors": ["Nick Benton", " Luca Cardelli"]}, {"title": "The chemical abstract machine", "authors": ["G\u00e9rard Berry "]}, {"title": "Modular typestate checking of aliased objects", "authors": ["Kevin Bierhoff "]}, {"title": "Derivatives of regular expressions", "authors": []}, {"title": "Control flow analysis for the join calculus", "authors": ["Peter Calvert "]}, {"title": "Reference capabilities for concurrency control", "authors": ["Elias Castegren "]}, {"title": "Regular Algebra and Finite Machines", "authors": ["John Conway"]}, {"title": "Global progress for dynamically interleaved multiparty sessions", "authors": ["Mario Coppo", " Mariangiola Dezani-Ciancaglini", " Nobuko Yoshida"]}, {"title": "Fundamental properties of infinite trees", "authors": ["Bruno Courcelle"]}, {"title": "The chemical approach to typestate-oriented programming", "authors": ["Silvia Crafa "]}, {"title": "CobaltBlue", "authors": ["Silvia Crafa "]}, {"title": "A type safe state abstraction for coordination in Java-like languages", "authors": ["Ferruccio Damiani", " Elena Giachino", " Paola Giannini"]}, {"title": "Session types revisited", "authors": ["Ornela Dardha", " Elena Giachino"]}, {"title": "Enabledness-based program abstractions for behavior validation", "authors": ["Guido de Caso", " Diego Garbervetsky"]}, {"title": "Typestates for objects", "authors": ["Robert DeLine "]}, {"title": "Fickle: Dynamic object re-classification", "authors": ["Sophia Drossopoulou", " Ferruccio Damiani", " Mariangiola Dezani-Ciancaglini"]}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["Manuel F\u00e4hndrich "]}, {"title": "The reflexive CHAM and the join-calculus", "authors": ["C\u00e9dric Fournet "]}, {"title": "The join calculus: A language for distributed mobile programming", "authors": ["C\u00e9dric Fournet "]}, {"title": "Implicit typing \u00e0 la ML for the join-calculus", "authors": ["C\u00e9dric Fournet", " Cosimo Laneve", " Luc Maranget"]}, {"title": "Inheritance in the join calculus", "authors": ["C\u00e9dric Fournet", " Cosimo Laneve", " Luc Maranget"]}, {"title": "JoCaml: A language for concurrent distributed and mobile programming", "authors": ["C\u00e9dric Fournet", " Fabrice Le Fessant", " Luc Maranget"]}, {"title": "Foundations of typestate-oriented programming", "authors": ["Ronald Garcia", " \u00c9ric Tanter", " Roger Wolff"]}, {"title": "Linear type theory for asynchronous session types", "authors": []}, {"title": "Modular session types for distributed object-oriented programming", "authors": [" Vasco Thudichum Vasconcelos", " Ant\u00f3nio Ravara", " Nils Gesbert"]}, {"title": "Implementing joins using extensible pattern matching", "authors": ["Philipp Haller "]}, {"title": "Statecharts: A visual formalism for complex systems", "authors": ["David Harel"]}, {"title": "Permissive interfaces", "authors": [" Ranjit Jhala"]}, {"title": "A universal modular ACTOR formalism for artificial intelligence", "authors": ["Carl Hewitt", " Peter Bishop"]}, {"title": "Types for dyadic interaction", "authors": ["Kohei Honda"]}, {"title": "Multiparty asynchronous session types", "authors": ["Kohei Honda", " Nobuko Yoshida"]}, {"title": "Hybrid session verification through endpoint API generation", "authors": ["Raymond Hu "]}, {"title": "Foundations of session types and behavioural contracts", "authors": ["Hans H\u00fcttel", " Ivan Lanese", " Lu\u00eds Caires", " Marco Carbone", " Pierre-Malo Deni\u00e9lou", " Dimitris Mostrous", " "]}, {"title": "On implementing high level concurrency in Java", "authors": []}, {"title": "Garbage collection for monitoring parametric properties", "authors": ["Dongyun Jin", " Patrick O\u2019Neil Meredith", " Dennis Griffith"]}, {"title": "Linearity and the pi-calculus", "authors": ["Naoki Kobayashi"]}, {"title": "Typechecking protocols with Mungo and StMungo", "authors": ["Dimitrios Kouzapas", " Ornela Dardha", " Roly Perera"]}, {"title": "Compiling join-patterns", "authors": ["Fabrice Le Fessant "]}, {"title": "Efficient monitoring of parametric context-free patterns", "authors": ["Patrick O\u2019Neil Meredith", " Dongyun Jin", " Feng Chen"]}, {"title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms", "authors": []}, {"title": "Comega", "authors": ["Microsoft Research"]}, {"title": "Guaranteeing liveness in an object calculus through behavioural typing", "authors": ["Elie Najm", " Abdelkrim Nimour"]}, {"title": "Practical Framework for Contract-Based Concurrent Object-Oriented Programming", "authors": ["Piotr Nienaltowski"]}, {"title": "Regular types for active objects", "authors": ["Oscar Nierstrasz"]}, {"title": "Deadlock and lock freedom in the linear &pi;-calculus", "authors": ["Luca Padovani"]}, {"title": "Ownership types for the join calculus", "authors": ["Marco Patrignani", " Dave Clarke"]}, {"title": "JErlang: Erlang with joins", "authors": ["Hubert Plociniczak "]}, {"title": "State inference for dynamically changing interfaces", "authors": ["Franz Puntigam"]}, {"title": "Strong types for coordinating active objects", "authors": ["Franz Puntigam"]}, {"title": "Types for active objects with static deadlock prevention", "authors": ["Franz Puntigam "]}, {"title": "Typing non-uniform concurrent objects", "authors": []}, {"title": "The joins concurrency library", "authors": []}, {"title": "Join patterns for Visual Basic", "authors": []}, {"title": "The Pi-Calculus: A Theory of Mobile Processes", "authors": ["Davide Sangiorgi "]}, {"title": "Concurrency by default: Using permissions to express dataflow in stateful programs", "authors": ["Sven Stork", " Paulo Marques"]}, {"title": "\u00c6minium: A permission-based concurrent-by-default programming language approach", "authors": ["Sven Stork", " Karl Naden", " Joshua Sunshine", " Manuel Mohr", " Alcides Fonseca", " Paulo Marques"]}, {"title": "Typestate: A programming language concept for enhancing software reliability", "authors": []}, {"title": "First-class state change in plaid", "authors": ["Joshua Sunshine", " Karl Naden", " Sven Stork", " Jonathan Aldrich"]}, {"title": "Scalable join patterns", "authors": []}, {"title": "Propositions as sessions", "authors": ["Philip Wadler"]}, {"title": "Efficient and reasonable object-oriented concurrency", "authors": ["Scott West", " Sebastian Nanz"]}]},
{"title": "Scaling Reliably: Improving the Scalability of the Erlang Distributed Actor Platform", "time": "August 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Distributed actor languages are an effective means of constructing scalable reliable systems, and the Erlang programming language has a well-established and influential model. While the Erlang model conceptually provides reliable scalability, it has some inherent scalability limits and these force developers to depart from the model at scale. This article establishes the scalability limits of Erlang systems and reports the work of the EU RELEASE project to improve the scalability and understandability of the Erlang reliable distributed actor model.\nWe systematically study the scalability limits of Erlang and then address the issues at the virtual machine, language, and tool levels. More specifically: (1) We have evolved the Erlang virtual machine so that it can work effectively in large-scale single-host multicore and NUMA architectures. We have made important changes and architectural improvements to the widely used Erlang/OTP release. (2) We have designed and implemented Scalable Distributed (SD) Erlang libraries to address language-level scalability issues and provided and validated a set of semantics for the new language constructs. (3) To make large Erlang systems easier to deploy, monitor, and debug, we have developed and made open source releases of five complementary tools, some specific to SD Erlang.\nThroughout the article we use two case studies to investigate the capabilities of our new technologies and tools: a distributed hash table based Orbit calculation and Ant Colony Optimisation (ACO). Chaos Monkey experiments show that two versions of ACO survive random process failure and hence that SD Erlang preserves the Erlang reliability model. While we report measurements on a range of NUMA and cluster architectures, the key scalability experiments are conducted on the Athos cluster with 256 hosts (6,144 cores). Even for programs with no global recovery data to maintain, SD Erlang partitions the network to reduce network traffic and hence improves performance of the Orbit and ACO benchmarks above 80 hosts. ACO measurements show that maintaining global recovery data dramatically limits scalability; however, scalability is recovered by partitioning the recovery data. We exceed the established scalability limits of distributed Erlang, and do not reach the limits of SD Erlang for these benchmarks at this scale (256 hosts, 6,144 cores).\n", "author": [{"name": "Phil Trinder", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Natalia Chechina", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Nikolaos Papaspyrou", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Konstantinos Sagonas", "affiliation": "Uppsala University and National Technical University of Athens, Uppsala, Sweden"}, {"name": "Simon Thompson", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Stephen Adams", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Stavros Aronis", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Robert Baker", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Eva Bihari", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Olivier Boudeville", "affiliation": "\u00c9lectricit\u00e9 de France"}, {"name": "Francesco Cesarini", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Maurizio Di Stefano", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Sverker Eriksson", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Vikt\u00f3ria f\u00f6rd\u0151s", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Amir Ghaffari", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Aggelos Giantsios", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Rickard Green", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Csaba Hoch", "affiliation": "Erlang Solutions, London, UK"}, {"name": "David Klaftenegger", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Huiqing Li", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Kenneth Lundin", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Kenneth Mackenzie", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Katerina Roukounaki", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Yiannis Tsiouris", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Kjell Winblad", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Phil Trinder", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Natalia Chechina", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Nikolaos Papaspyrou", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Konstantinos Sagonas", "affiliation": "Uppsala University and National Technical University of Athens, Uppsala, Sweden"}, {"name": "Simon Thompson", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Stephen Adams", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Stavros Aronis", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Robert Baker", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Eva Bihari", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Olivier Boudeville", "affiliation": "\u00c9lectricit\u00e9 de France"}, {"name": "Francesco Cesarini", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Maurizio Di Stefano", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Sverker Eriksson", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Vikt\u00f3ria f\u00f6rd\u0151s", "affiliation": "Erlang Solutions, London, UK"}, {"name": "Amir Ghaffari", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Aggelos Giantsios", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Rickard Green", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Csaba Hoch", "affiliation": "Erlang Solutions, London, UK"}, {"name": "David Klaftenegger", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Huiqing Li", "affiliation": "University of Kent, Canterbury, UK"}, {"name": "Kenneth Lundin", "affiliation": "Ericsson AB, Kista, Sweden"}, {"name": "Kenneth Mackenzie", "affiliation": "University of Glasgow, Glasgow, Scotland"}, {"name": "Katerina Roukounaki", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Yiannis Tsiouris", "affiliation": "National Technical University of Athens, Athens, Greece"}, {"name": "Kjell Winblad", "affiliation": "Uppsala University, Uppsala, Sweden"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "ACTORS: A Model of Concurrent Computation in Distributed Systems", "authors": ["Gul Agha"]}, {"title": "An overview of actor languages", "authors": ["Gul Agha"]}, {"title": "Bulldozer (microarchitecture) Retrieved from https://en", "authors": []}, {"title": "Liblcoud", "authors": ["Apache SF"]}, {"title": "Randomized search trees", "authors": []}, {"title": "Programming Erlang: Software for a Concurrent World", "authors": ["Joe Armstrong"]}, {"title": "Erlang", "authors": ["Joe Armstrong"]}, {"title": "A scalability benchmark suite for erlang/OTP", "authors": ["Stavros Aronis", " Nikolaos Papaspyrou", " Katerina Roukounaki", " Konstantinos Sagonas", " Yiannis Tsiouris"]}, {"title": "Testing telecoms software with quviq quickcheck", "authors": ["Thomas Arts", " John Hughes", " Joakim Johansson"]}, {"title": "Multi-level visualization of concurrent and distributed computation in erlang", "authors": ["Robert Baker", " Peter Rodgers", " Simon Thompson"]}, {"title": "The Datacenter as a Computer (2nd ed", "authors": ["Luiz Andr\u00e9 Barroso", " Jimmy Clidaras"]}, {"title": "Riakdocs", "authors": ["Basho Technologies"]}, {"title": "OR-library: Distributing test problems by electronic mail", "authors": []}, {"title": "Chaos Monkey Released into the Wild", "authors": ["Cory Bennett "]}, {"title": "Cilk: An efficient multithreaded runtime system", "authors": []}, {"title": "Technical manual of the sim-diasca simulation engine", "authors": ["Olivier Boudeville"]}, {"title": "Refactorings to enable parallelization", "authors": ["Istv\u00e1n Boz\u00f3", " Vikt\u00f3ria F\u00f6rd\u0151s", " D\u00e1niel Horp\u00e1csi", " Zolt\u00e1n Horv\u00e1th", " Tam\u00e1s Kozsik", " Judit K\u0151szegi"]}, {"title": "NUMA-aware reader-writer locks", "authors": ["Irina Calciu", " Dave Dice", " Yossi Lev", " Victor Luchangco"]}, {"title": "Erlang Programming: A Concurrent Approach to Software Development (1st ed", "authors": ["Francesco Cesarini "]}, {"title": "Parallel Programming in OpenMP", "authors": ["Rohit Ch", " Leonardo Dagum", " Dave Kohr", " Dror Maydan", " Jeff McDonald"]}, {"title": "Improving the network scalability of erlang", "authors": ["Natalia Chechina", " Huiqing Li", " Amir Ghaffari", " Simon Thompson"]}, {"title": "Evaluating scalable distributed erlang for scalability and reliability", "authors": ["Natalia Chechina", " Kenneth MacKenzie", " Simon Thompson", " Phil Trinder", " Olivier Boudeville", " Vikt\u00f3ria F\u00f6rd\u0151s", " Csaba Hoch", " Amir Ghaffari"]}, {"title": "A scalable reliable instant messenger using the SD erlang libraries", "authors": ["Natalia Chechina", " Mario Moro Hern"]}, {"title": "QuickCheck: A lightweight tool for random testing of Haskell programs", "authors": ["Koen Claessen "]}, {"title": "Local search heuristics for the single machine total weighted tardiness scheduling problem", "authors": []}, {"title": "MapReduce: Simplified data processing on large clusters", "authors": ["Jeffrey Dean "]}, {"title": "FT-MPI, fault-tolerant metacomputing and generic name services: A case study", "authors": ["David Dewolfs", " Jan Broeckhove", " Vaidy Sunderam"]}, {"title": "The Go Programming Language", "authors": []}, {"title": "Ant Colony Optimization", "authors": ["Marco Dorigo "]}, {"title": "SNZI: Scalable nonzero indicators", "authors": ["Faith Ellen", " Yossi Lev", " Victor Luchangco"]}, {"title": "Towards Haskell in the cloud", "authors": ["Jeff Epstein"]}, {"title": "Refactoring: Improving the Design of Existing Code", "authors": ["Martin Fowler"]}, {"title": "Errors and faults", "authors": ["Ana Gainaru "]}, {"title": "New Instances for the Single Machine Total Weighted Tardiness Problem", "authors": ["Martin Josef Geiger"]}, {"title": "Concurrency oriented programming in termite scheme", "authors": ["Guillaume Germain"]}, {"title": "DE-Bench, A Benchmark Tool for Distributed Erlang (2014)", "authors": ["Amir Ghaffari"]}, {"title": "Investigating the scalability limits of distributed Erlang", "authors": ["Amir Ghaffari"]}, {"title": "Scalable persistent storage for Erlang: Theory and practice", "authors": ["Amir Ghaffari", " Natalia Chechina", " Phip Trinder"]}, {"title": "Brewer\u2019s conjecture and the feasibility of consistent, available, partition-tolerant web services", "authors": ["Seth Gilbert "]}, {"title": "The legion vision of a worldwide virtual computer", "authors": []}, {"title": "Actor model for discretionary, adaptive concurrency", "authors": ["Carl Hewitt"]}, {"title": "A universal modular ACTOR formalism for artificial intelligence", "authors": ["Carl Hewitt", " Peter Bishop"]}, {"title": "The clojure programming language", "authors": ["Rich Hickey"]}, {"title": "Building a refactoring tool for Erlang", "authors": ["Zolt\u00e1n Horv\u00e1th", " L\u00e1szl\u00f3 L\u00f6vei", " Tam\u00e1s Kozsik", " R\u00f3bert Kitlei", " Anik\u00f3 Nagyn\u00e9 V\u00edg", " Tam\u00e1s Nagy", " Melinda T\u00f3th"]}, {"title": "CHARM++: A portable concurrent object oriented system based on C++", "authors": []}, {"title": "On the scalability of the Erlang term storage", "authors": ["David Klaftenegger", " Konstantinos Sagonas"]}, {"title": "Delegation locking libraries for improved performance of multithreaded programs", "authors": ["David Klaftenegger", " Konstantinos Sagonas"]}, {"title": "Queue delegation locking", "authors": ["David Klaftenegger", " Konstantinos Sagonas"]}, {"title": "Riak core: Building distributed applications without shared state", "authors": ["Rusty Klophaus"]}, {"title": "Cassandra: A decentralized structured storage system", "authors": ["Avinash Lakshman "]}, {"title": "Python Actor Runtime Library", "authors": []}, {"title": "Automated API migration in a user-extensible refactoring tool for erlang programs", "authors": ["Huiqing Li "]}, {"title": "Multicore profiling for Erlang programs using percept2", "authors": ["Huiqing Li "]}, {"title": "Improved semantics and implementation through property-based testing with quickcheck", "authors": ["Huiqing Li "]}, {"title": "Safe concurrency introduction through slicing", "authors": ["Huiqing Li "]}, {"title": "Refactoring with Wrangler, updated", "authors": ["Huiqing Li", " Simon Thompson", " Gy\u00f6rgy Orosz"]}, {"title": "Enumerating large orbits and direct condensation", "authors": ["Frank Lubeck "]}, {"title": "Towards reliable and scalable robot communication", "authors": ["Andreea Lutac", " Natalia Chechina", " Gerardo Aragon-Camarasa"]}, {"title": "The high-resolution timer API", "authors": []}, {"title": "Performance portability through semi-explicit placement in distributed Erlang", "authors": ["Kenneth MacKenzie", " Natalia Chechina"]}, {"title": "A taxonomy of distributed termination detection algorithms", "authors": ["Jeff Matocha "]}, {"title": "The rust language", "authors": []}, {"title": "Scheduling with deadlines and loss functions", "authors": ["Robert McNaughton"]}, {"title": "The Scala Programming Language", "authors": ["Martin Odersky "]}, {"title": "Refactoring Object-Oriented Frameworks", "authors": []}, {"title": "On preserving term sharing in the Erlang virtual machine", "authors": ["Nikolaos Papaspyrou "]}, {"title": "EU Framework 7 Project 287510 (2011--2015)", "authors": ["RELEASE Project Team"]}, {"title": "Automatic refactoring of Erlang programs", "authors": ["Konstantinos Sagonas "]}, {"title": "More scalable ordered set for ETS using adaptation", "authors": ["Konstantinos Sagonas "]}, {"title": "Contention adapting search trees", "authors": ["Konstantinos Sagonas "]}, {"title": "Efficient support for range queries and range updates using contention adapting search trees", "authors": ["Konstantinos Sagonas "]}, {"title": "MPI: The Complete Reference", "authors": ["Marc Snir", " Jack Dongarra"]}, {"title": "Kilim: Isolation-typed actors for Java", "authors": ["Sriram Srinivasan "]}, {"title": "Expert F# 4", "authors": ["Don Syme", " Adam Granicz"]}, {"title": "Refactoring tools for functional languages", "authors": ["Simon Thompson "]}, {"title": "Linux Timers", "authors": ["Marcus V\u00f6lker"]}, {"title": "Homepage", "authors": ["WhatsApp"]}, {"title": "Hadoop\u2014The Definitive Guide: Storage and Analysis at Internet Scale (3rd ed", "authors": ["Tom White"]}, {"title": "Industrial-strength functional programming: Experiences with the ericsson AXD301 project", "authors": ["Ulf Wiger"]}]},
{"title": "A Simple, Possibly Correct LR Parser for C11", "time": "September 2017", "keyword": ["Programming Languages and Systems"], "abstract": "The syntax of the C programming language is described in the C11 standard by an ambiguous context-free grammar, accompanied with English prose that describes the concept of \u201cscope\u201d and indicates how certain ambiguous code fragments should be interpreted. Based on these elements, the problem of implementing a compliant C11 parser is not entirely trivial. We review the main sources of difficulty and describe a relatively simple solution to the problem. Our solution employs the well-known technique of combining an LALR(1) parser with a \u201clexical feedback\u201d mechanism. It draws on folklore knowledge and adds several original aspects, including a twist on lexical feedback that allows a smooth interaction with lookahead; a simplified and powerful treatment of scopes; and a few amendments in the grammar. Although not formally verified, our parser avoids several pitfalls that other implementations have fallen prey to. We believe that its simplicity, its mostly declarative nature, and its high similarity with the C11 grammar are strong informal arguments in favor of its correctness. Our parser is accompanied with a small suite of \u201ctricky\u201d C11 programs. We hope that it may serve as a reference or a starting point in the implementation of compilers and analysis tools.\n", "author": [{"name": "Jacques-Henri Jourdan", "affiliation": "Inria Paris, MPI-SWS, Saarbr\u00fccken, Germany"}, {"name": "Fran\u00e7ois Pottier", "affiliation": "Inria Paris, Paris Cedex, France"}, {"name": "Jacques-Henri Jourdan", "affiliation": "Inria Paris, MPI-SWS, Saarbr\u00fccken, Germany"}, {"name": "Fran\u00e7ois Pottier", "affiliation": "Inria Paris, Paris Cedex, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Lookahead vs", "authors": []}, {"title": "Compilers: Principles, Techniques, and Tools", "authors": [" Ravi Sethi"]}, {"title": "ANSI X3", "authors": ["ANSI"]}, {"title": "DMS\u00ae: Program transformations for practical scalable software evolution", "authors": []}, {"title": "How Clang handles the type / variable name ambiguity of C/C++", "authors": ["Eli Bendersky"]}, {"title": "Lex 8 Yacc (2nd ed", "authors": ["Doug Brown", " John Levine"]}, {"title": "C11 Yacc grammar", "authors": ["Jutta Degener"]}, {"title": "BtYacc", "authors": ["Chris Dodd "]}, {"title": "Bison", "authors": ["Charles Donnelly "]}, {"title": "SuperC: Parsing all of C by taming the preprocessor", "authors": ["Paul Gazzillo "]}, {"title": "Better extensibility through modular syntax", "authors": ["Robert Grimm"]}, {"title": "Parsing Techniques: A Practical Guide (2nd ed)", "authors": []}, {"title": "ISO/IEC 9899:2011 -- Programming languages -- C", "authors": ["ISO"]}, {"title": "Generating LR syntax error messages from examples", "authors": []}, {"title": "GCC bug #67784: Incorrect parsing when using declarations in for loops and typedefs", "authors": ["Jacques-Henri Jourdan"]}, {"title": "A simple, possibly correct LR parser for C11\u2014Implementation and test suite", "authors": ["Jacques-Henri Jourdan "]}, {"title": "Validating LR(1) parsers", "authors": ["Jacques-Henri Jourdan", " Fran\u00e7ois Pottier"]}, {"title": "The C Programming Language (2nd ed", "authors": []}, {"title": "On the translation of languages from left to right", "authors": []}, {"title": "Formal verification of a realistic compiler", "authors": ["Xavier Leroy"]}, {"title": "The CompCert C verified compiler", "authors": ["Xavier Leroy"]}, {"title": "Elkhound: A fast, practical GLR parser generator", "authors": []}, {"title": "Real World OCaml: Functional Programming for the Masses", "authors": ["Yaron Minsky", " Anil Madhavapeddy"]}, {"title": "Parsing C/C++ code without pre-processing", "authors": ["Yoann Padioleau"]}, {"title": "Documenting and automating collateral evolutions in linux device drivers", "authors": ["Yoann Padioleau", " Ren\u00e9 Rydhof Hansen"]}, {"title": "A practical general method for constructing LR(k) parsers", "authors": ["David Pager"]}, {"title": "Reachability and error diagnosis in LR(1) parsers", "authors": ["Fran\u00e7ois Pottier"]}, {"title": "The Menhir parser generator", "authors": ["Fran\u00e7ois Pottier "]}, {"title": "The development of the C language", "authors": []}, {"title": "A grammar for ANSI C", "authors": ["Jim Roskind"]}, {"title": "Practical parsing for ANSI C", "authors": ["Daniele Paolo Scarpazza"]}, {"title": "GCC 3", "authors": ["The GNU project"]}, {"title": "A backtracking LR algorithm for parsing ambiguous context-dependent languages", "authors": []}, {"title": "Context-aware scanning for parsing extensible languages", "authors": []}, {"title": "Meta-Compilation for C++", "authors": []}]},
{"title": "Bit-Precise Procedure-Modular Termination Analysis", "time": "December 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Non-termination is the root cause of a variety of program bugs, such as hanging programs and denial-of-service vulnerabilities. This makes an automated analysis that can prove the absence of such bugs highly desirable. To scale termination checks to large systems, an interprocedural termination analysis seems essential. This is a largely unexplored area of research in termination analysis, where most effort has focussed on small but difficult single-procedure problems.\nWe present a modular termination analysis for C programs using template-based interprocedural summarisation. Our analysis combines a context-sensitive, over-approximating forward analysis with the inference of under-approximating preconditions for termination. Bit-precise termination arguments are synthesised over lexicographic linear ranking function templates. Our experimental results show the advantage of interprocedural reasoning over monolithic analysis in terms of efficiency, while retaining comparable precision.\n", "author": [{"name": "Hong-Yi Chen", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Cristina David", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Daniel Kroening", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Peter Schrammel", "affiliation": "School of Engineering and Informatics, University of Sussex, United Kingdom"}, {"name": "Bj\u00f6rn Wachter", "affiliation": "SSW-Trading GmbH, Oststeinbek, Germany"}, {"name": "Hong-Yi Chen", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Cristina David", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Daniel Kroening", "affiliation": "Department of Computer Science, University of Oxford, United Kingdom"}, {"name": "Peter Schrammel", "affiliation": "School of Engineering and Informatics, University of Sussex, United Kingdom"}, {"name": "Bj\u00f6rn Wachter", "affiliation": "SSW-Trading GmbH, Oststeinbek, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "2016", "authors": []}, {"title": "Conditional termination of loops over heap-allocated data", "authors": ["Elvira Albert", " Puri Arenas", " Samir Genaim", " Germ\u00e1n Puebla"]}, {"title": "COSTA: Design and implementation of a cost and termination analyzer for java bytecode", "authors": ["Elvira Albert", " Puri Arenas", " Samir Genaim", " German Puebla"]}, {"title": "Cost analysis of object-oriented bytecode programs", "authors": ["Elvira Albert", " Puri Arenas", " Samir Genaim", " German Puebla"]}, {"title": "Rely-guarantee termination and cost analyses of loops with concurrent interleavings", "authors": ["Elvira Albert", " Antonio Flores-Montoya", " Samir Genaim"]}, {"title": "Multi-dimensional rankings, program termination, and complexity bounds of flowchart programs", "authors": ["Christophe Alias", " Alain Darte", " Paul Feautrier"]}, {"title": "2009", "authors": ["Apache CV"]}, {"title": "Automated Program Verification Environment (AProVE)", "authors": ["AProVE"]}, {"title": "On the linear ranking problem for integer linear-constraint loops", "authors": []}, {"title": "Ranking functions for linear-constraint loops", "authors": []}, {"title": "Automatic termination proofs for programs with shape-shifting heaps", "authors": ["Josh Berdine", " Byron Cook", " Dino Distefano"]}, {"title": "Reliable and reproducible competition results with benchExec and witnesses (report on SV-COMP 2016)", "authors": ["Dirk Beyer"]}, {"title": "Deciding conditional termination", "authors": ["Marius Bozga", " Radu Iosif"]}, {"title": "Linear ranking with reachability", "authors": [" Zohar Manna"]}, {"title": "Termination of polynomial programs", "authors": [" Zohar Manna"]}, {"title": "Safety verification and refutation by -invariants and -induction", "authors": ["Martin Brain", " Saurabh Joshi", " Daniel Kroening"]}, {"title": "Analyzing runtime and size complexity of integer programs", "authors": ["Marc Brockschmidt", " Fabian Emmes", " Stephan Falke", " Carsten Fuhs"]}, {"title": "Synthesising interprocedural bit-precise termination proofs", "authors": ["Hong-Yi Chen", " Cristina David", " Daniel Kroening", " Peter Schrammel"]}, {"title": "Proving nontermination via safety", "authors": ["Hong Yi Chen", " Byron Cook", " Carsten Fuhs", " Kaustubh Nimkar"]}, {"title": "Control flow refinement and symbolic computation of average case bound", "authors": ["Hong Yi Chen", " Supratik Mukhopadhyay"]}, {"title": "(2014)", "authors": ["CLAPAC"]}, {"title": "Counterexample-guided abstraction refinement", "authors": [" Orna Grumberg", " Somesh Jha", " Yuan Lu"]}, {"title": "Proving conditional termination", "authors": ["Byron Cook", " Sumit Gulwani", " Tal Lev-Ami", " Andrey Rybalchenko"]}, {"title": "Ranking function synthesis for bit-vector relations", "authors": ["Byron Cook", " Daniel Kroening", " Philipp R\u00fcmmer"]}, {"title": "Termination proofs for systems code", "authors": ["Byron Cook", " Andreas Podelski"]}, {"title": "Proving thread termination", "authors": ["Byron Cook", " Andreas Podelski"]}, {"title": "Ramsey vs", "authors": ["Byron Cook", " Abigail See"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "CppInv Termination Prover", "authors": ["CppInv"]}, {"title": "Unrestricted termination and non-termination arguments for bit-vector programs", "authors": ["Cristina David", " Daniel Kroening"]}, {"title": "Cleanness checking of string manipulations in C programs via integer analysis", "authors": ["Nurit Dor", " Michael Rodeh"]}, {"title": "Termination analysis of imperative programs using bitvector arithmetic", "authors": ["Stephan Falke", " Deepak Kapur"]}, {"title": "Resource analysis of complex programs with cost equations", "authors": ["Antonio Flores-Montoya "]}, {"title": "FuncTion Termination Prover", "authors": ["FuncTion"]}, {"title": "Proving termination starting from the end", "authors": ["Pierre Ganty "]}, {"title": "Precise relational invariants through strategy iteration", "authors": []}, {"title": "Inferring termination conditions for logic programs using backwards analysis", "authors": ["Samir Genaim "]}, {"title": "Analyzing program termination and complexity automatically with AProVE", "authors": ["J\u00fcrgen Giesl", " Cornelius Aschermann", " Marc Brockschmidt", " Fabian Emmes", " Florian Frohn", " Carsten Fuhs", " Jera Hensel", " Carsten Otto", " Martin Pl\u00fccker", " Peter Schneider-Kamp", " Thomas Str\u00f6der", " Stephanie Swiderski"]}, {"title": "Synthesis of ranking functions using extremal counterexamples", "authors": ["Laure Gonnord", " David Monniaux"]}, {"title": "Synthesizing software verifiers from proof rules", "authors": ["Sergey Grebenshchikov", " Corneliu Popeea"]}, {"title": "Model checking and modular verification", "authors": []}, {"title": "Control-flow refinement and progress invariants for bound analysis", "authors": ["Sumit Gulwani", " Sagar Jain"]}, {"title": "Program analysis as constraint solving", "authors": ["Sumit Gulwani", " Saurabh Srivastava"]}, {"title": "Proving non-termination", "authors": ["Ashutosh Gupta", " Rupak Majumdar", " Andrey Rybalchenko"]}, {"title": "Predicate abstraction and refinement for verifying multi-threaded programs", "authors": ["Ashutosh Gupta", " Corneliu Popeea"]}, {"title": "Alternation for termination", "authors": [" Akash Lal"]}, {"title": "Ultimate automizer with two-track proofs (competition contribution)", "authors": ["Matthias Heizmann", " Daniel Dietsch", " Marius Greitschus", " Jan Leike", " Betim Musa", " Claus Sch\u00e4tzle"]}, {"title": "Linear ranking for linear lasso programs", "authors": ["Matthias Heizmann", " Jochen Hoenicke", " Jan Leike"]}, {"title": "Termination analysis by learning terminating programs", "authors": ["Matthias Heizmann", " Jochen Hoenicke"]}, {"title": "Proving termination of programs with bitvector arithmetic by symbolic execution", "authors": ["Jera Hensel", " J\u00fcrgen Giesl", " Florian Frohn"]}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": "A backward analysis for constraint logic programs", "authors": ["Andy King "]}, {"title": "KITTeL/KoAT Termination Prover", "authors": ["KiTTeL/KoAT"]}, {"title": "Symbolic loop bound computation for WCET analysis", "authors": ["Jens Knoop", " Laura Kov\u00e1cs"]}, {"title": "r-TuBound: Loop bounds for WCET analysis (tool paper)", "authors": ["Jens Knoop", " Laura Kov\u00e1cs"]}, {"title": "Termination analysis with compositional transition invariants", "authors": ["Daniel Kroening", " Natasha Sharygina", " Aliaksei Tsitovich"]}, {"title": "Causal termination of multi-threaded programs", "authors": ["Andrey Kupriyanov "]}, {"title": "A resource-based logic for termination and non-termination proofs", "authors": ["Ton Chanh Le", " Cristian Gherghina", " Aquinas Hobor"]}, {"title": "Termination and non-termination specification inference", "authors": ["Ton Chanh Le", " Shengchao Qin"]}, {"title": "Termination analysis with algorithmic learning", "authors": ["Wonchan Lee", " Bow-Yaw Wang"]}, {"title": "Ranking templates for linear loops", "authors": ["Jan Leike "]}, {"title": "Symbolic optimization with SMT solvers", "authors": ["Yi Li", " Aws Albarghouthi", " Zachary Kincaid", " Arie Gurfinkel"]}, {"title": "2016", "authors": []}, {"title": "Loopus Termination Prover", "authors": ["Loopus"]}, {"title": "Automatic numeric abstractions for heap-manipulating programs", "authors": ["Stephen Magill", " Ming-Hsien Tsai", " Peter Lee"]}, {"title": "From shape analysis to termination analysis in linear time", "authors": ["Roman Manevich", " Boris Dogadov"]}, {"title": "Proving termination by policy iteration", "authors": ["Damien Mass\u00e9"]}, {"title": "Policy iteration-based conditional termination and ranking functions", "authors": ["Damien Mass\u00e9"]}, {"title": "Termination analysis of floating-point programs using parameterizable rational approximations", "authors": ["Fonenantsoa Maurica", " Fr\u00e9d\u00e9ric Mesnard"]}, {"title": "Quantified invariant generation using an interpolating saturation prover", "authors": []}, {"title": "Inferring left-terminating classes of queries for constraint logic programs", "authors": ["Fr\u00e9d\u00e9ric Mesnard"]}, {"title": "ACE: An automatic complexity evaluator", "authors": ["Daniel Le M\u00e9tayer"]}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "Transition invariants", "authors": ["Andreas Podelski "]}, {"title": "ARMC: The logical choice for software model checking with abstraction refinement", "authors": ["Andreas Podelski "]}, {"title": "Summaries for while programs with recursion", "authors": ["Andreas Podelski", " Ina Schaefer"]}, {"title": "Compositional termination proofs for multi-threaded programs", "authors": ["Corneliu Popeea "]}, {"title": "A forward-backward abstraction refinement algorithm", "authors": ["Francesco Ranzato", " Olivia Rossi-Doria"]}, {"title": "Automatic complexity analysis", "authors": ["Mads Rosendahl"]}, {"title": "Controlling a solver execution with the runsolver tool", "authors": ["Olivier Roussel"]}, {"title": "Scalable analysis of linear systems using mathematical programming", "authors": ["Sriram Sankaranarayanan"]}, {"title": "Challenges in decomposing encodings of verification problems", "authors": ["Peter Schrammel"]}, {"title": "219", "authors": [" 2016 (EPTCS)"]}, {"title": "2LS for program analysis (competition contribution)", "authors": ["Peter Schrammel "]}, {"title": "SeaHorn, A Verification Framework", "authors": ["SeaHorn"]}, {"title": "A simple and scalable static analysis for bound analysis and amortized complexity analysis", "authors": ["Moritz Sinn", " Florian Zuleger"]}, {"title": "A termination analyzer for java bytecode based on path-length", "authors": ["Fausto Spoto", " Fred Mesnard"]}, {"title": "Competition on Software Verification (SV-COMP)", "authors": ["SV-COMP"]}, {"title": "2016", "authors": []}, {"title": "TAN Termination Prover", "authors": ["TAN"]}, {"title": "A decision tree abstract domain for proving conditional termination", "authors": ["Caterina Urban "]}, {"title": "Inference of ranking functions for proving temporal properties by abstract interpretation", "authors": ["Caterina Urban "]}, {"title": "Mechanical program analysis", "authors": ["Ben Wegbreit"]}, {"title": "The worst-case execution time problem\u2014Overview of methods and survey of tools", "authors": ["Reinhard Wilhelm", " Jakob Engblom", " Andreas Ermedahl", " Niklas Holsti", " Stephan Thesing", " David Whalley", " Guillem Bernat", " Christian Ferdin", " Reinhold Heckmann", " Tulika Mitra", " Frank Mueller", " Isabelle Puaut", " Peter Puschner", " Jan Staschulat"]}]},
{"title": "Verifying Reliability Properties Using the Hyperball Abstract Domain", "time": "December 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Modern systems are increasingly susceptible to soft errors that manifest themselves as bit flips and possibly alter the semantics of an application. We would like to measure the quality degradation on semantics due to such bit flips, and thus we introduce a Hyperball abstract domain that allows us to determine the worst-case distance between expected and actual results. Similar to intervals, hyperballs describe a connected and dense space. The semantics of low-level code in the presence of bit flips is hard to accurately describe in such a space. We therefore combine the Hyperball domain with an existing affine system abstract domain that we extend to handle bit flips, which are introduce as disjunctions. Bit-flips can reduce the precision of our analysis, and we therefor introduce the Scale domain as a disjunctive refinement to minimize precision loss. This domain bounds the number of disjunctive elements by quantifying the over-approximation of different partitions and uses submodular optimization to find a good partitioning (within a bound of optimal). We evaluate these domains to show benefits and potential problems. For the application we examine here, adding the Scale domain to the Hyperball abstraction improves accuracy by up to two orders of magnitude. Our initial results demonstrate the feasibility of this approach, although we would like to further improve execution efficiency.\n", "author": [{"name": "Jacob Lidman", "affiliation": "Chalmers University of Technology, Gothenburg, Sweden"}, {"name": "Sally A. Mckee", "affiliation": "Chalmers University of Technology, Gothenburg, Sweden"}, {"name": "Jacob Lidman", "affiliation": "Chalmers University of Technology, Gothenburg, Sweden"}, {"name": "Sally A. Mckee", "affiliation": "Chalmers University of Technology, Gothenburg, Sweden"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Deriving numerical abstract domains via principal component analysis", "authors": ["Gianluca Amato", " Maurizio Parton"]}, {"title": "A hierarchy of constraint systems for data-flow analysis of constraint logic-based languages", "authors": []}, {"title": "The sorcerer\u2019s apprentice guide to fault attacks", "authors": []}, {"title": "Range and set abstraction using SAT", "authors": ["Edd Barrett "]}, {"title": "On the importance of eliminating errors in cryptographic computations", "authors": ["Dan Boneh"]}, {"title": "The octahedron abstract domain", "authors": []}, {"title": "The domain of parametric hypercubes for static analysis of computer games software", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": []}, {"title": "A scalable segmented decision tree abstract domain", "authors": []}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": []}, {"title": "Abstract domains of affine relations", "authors": []}, {"title": "Smallest Enclosing Balls of Balls: Combinatorial Structure 8 Algorithms", "authors": []}, {"title": "Approximating submodular functions everywhere", "authors": [" Satoru Iwata"]}, {"title": "Empirical studies of the soft error susceptibility ofsorting algorithms to statistical fault injection", "authors": ["Qiang Guan", " Nathan DeBardeleben", " Sean Blanchard"]}, {"title": "Quantifying the quality of side-channel acquisition", "authors": ["Sylvain Guilley", " Houssem Maghrebi", " Youssef Souissi", " Laurent Sauvage"]}, {"title": "Boxes: A symbolic abstract domain of boxes", "authors": []}, {"title": "Affine relationships among variables of a program", "authors": []}, {"title": "Inferring congruence equations using SAT", "authors": []}, {"title": "Differential power analysis", "authors": [" Joshua Jaffe"]}, {"title": "SFO: A toolbox for submodular function optimization", "authors": []}, {"title": "Accurate reliability evaluation and enhancement via probabilistic transfer matrices", "authors": []}, {"title": "An automated performance-aware approach to reliability transformations", "authors": []}, {"title": "Trace partitioning in abstract interpretation based static analyzers", "authors": []}, {"title": "Faulty logic: Reasoning about fault tolerant programs", "authors": []}, {"title": "Predicting the number of fatal soft errors in Los alamos national laboratory\u2019s ASC Q supercomputer", "authors": []}, {"title": "Chisel: Reliability- and accuracy-aware optimization of approximate computational kernels", "authors": []}, {"title": "Principles of Program Analysis", "authors": ["Flemming Nielson"]}, {"title": "A generic ellipsoid abstract domain for linear time invariant systems", "authors": ["Pierre Roux", " Romain Jobredeaux", " Pierre-Lo\u00efc Garoche"]}, {"title": "Scalable analysis of linear systems using mathematical programming", "authors": []}, {"title": "Improving linear feedback shift registers using similarity transformations", "authors": []}, {"title": "Bias-variance tradeoffs in program analysis", "authors": ["Rahul Sharma"]}, {"title": "An Abstract Domain for Bit-vector Inequalities", "authors": []}, {"title": "Quantifying the Precision of Numerical Abstract Domains", "authors": []}, {"title": "CGAL User and Reference Manual (4", "authors": ["The CGAL Project"]}, {"title": "Architectural error prediction using probabilistic error masking matrices", "authors": []}, {"title": "CRC Concise Encyclopedia of Mathematics", "authors": []}, {"title": "Greedy splitting algorithms for approximating multiway partition problems", "authors": []}]},
{"title": "Constraint-Based Refactoring", "time": "January 2018", "keyword": ["Programming Languages and Systems"], "abstract": "Constraint-based refactoring generalizes constraint-based type refactoring as introduced by Tip et al. [61] by extending the coverage of change from types to names, locations, accessibilities, and other properties of program elements. Starting with a generic specification of refactoring tools, we systematically develop constraint-based refactoring as a generic solution to a certain class of refactoring problems and provide a condition under which constraint-based refactoring tools are proven correct for any given target language. Although compliance with this correctness condition is hard to prove for target languages whose semantics is not formally defined, we show how the condition gives rise to automated testing procedures. We present a novel algorithm based on constraint-logic programming for the generation of constraints from a program to be refactored, and demonstrate its time and space requirements by using it in the application of refactorings to open source programs. Summarizing earlier work, we show how the principles underlying constraint-based refactoring tools extend to ad hoc refactoring, cross-language refactoring, and model/code co-refactoring.\n", "author": [{"name": "Friedrich Steimann", "affiliation": "Fernuniversit\u00e4t in Hagen, Germany"}, {"name": "Friedrich Steimann", "affiliation": "Fernuniversit\u00e4t in Hagen, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "A framework for implementing pluggable type systems", "authors": ["Chris Andreae", " James Noble", " Shane Markstrum"]}, {"title": "Refactoring support for class library migration", "authors": ["Ittai Balaban", " Frank Tip"]}, {"title": "Changing programs correctly: Refactoring with specifications", "authors": ["Fabian Bannwart "]}, {"title": "Algebraic reasoning for object-oriented programming", "authors": ["Paulo Borba", " Augusto Sampaio", " Ana Cavalcanti"]}, {"title": "Constraint hierarchies", "authors": ["Alan Borning", " Robert Duisberg", " Axel Kramer"]}, {"title": "Refactoring tools are trustworthy enough and trust must be earned", "authors": ["John Brant "]}, {"title": "ECLi PSe Constraint Library Manual", "authors": ["Pascal Brisset", " Hani El Sakkout", " Thom Fr\u00fchwirth", " Carmen Gervet", " Warwick Harvey", " Micha Meier", " Stefano Novello", " Thierry Le Provost", " Joachim Schimpf", " Kish Shen"]}, {"title": "Boolean satisfiability with transitivity constraints", "authors": []}, {"title": "Automated testing of refactoring engines", "authors": ["Brett Daniel", " Danny Dig", " Kely Garcia"]}, {"title": "2006", "authors": ["ECM"]}, {"title": "WitchDoctor: IDE support for real-time auto-completion of refactorings", "authors": []}, {"title": "Refactoring\u2014Improving the Design of Existing Code", "authors": ["Martin Fowler"]}, {"title": "An incremental constraint solver", "authors": [" John Maloney"]}, {"title": "Efficiently refactoring Java applications to use generic libraries", "authors": [" Frank Tip", " Adam Kiezun", " Julian Dolby"]}, {"title": "Formal specification and verification of Java refactorings", "authors": ["Alej"]}, {"title": "In Proceedings of the 2012 34th International Conference on Software Engineering (ICSE\u201912)", "authors": ["Xi Ge"]}, {"title": "Systematic testing of refactoring engines on real software projects", "authors": ["Milos Gligoric", " Farnaz Behrang", " Yilong Li", " Jeffrey Overbey", " Munawar Hafiz"]}, {"title": "The Java Language Specification, Java SE 8 Edition", "authors": ["James Gosling", " Bill Joy", " Gilad Bracha"]}, {"title": "Program Restructuring as an Aid to Software Maintenance", "authors": []}, {"title": "Encapsulating objects with confined types", "authors": ["Christian Grothoff", " Jens Palsberg"]}, {"title": "codeQuest: Scalable source code queries with datalog", "authors": ["Elnar Hajiyev", " Mathieu Verbaere"]}, {"title": "Constraint Satisfaction in Logic Programming", "authors": ["Pascal Van Hentenryck"]}, {"title": "Constraint-Based Local Search", "authors": ["Pascal Van Hentenryck "]}, {"title": "An axiomatic basis for computer programming", "authors": []}, {"title": "Systematically refactoring inheritance to delegation in Java", "authors": ["Hannes Kegel "]}, {"title": "Refactoring for parameterizing Java classes", "authors": ["Adam Kiezun", " Frank Tip"]}, {"title": "Semantics of context-free languages", "authors": []}, {"title": "An approach to invariant-based program refactoring", "authors": ["Tiago Massoni", " Rohit Gheyi"]}, {"title": "Formalizing refactorings with graph transformations", "authors": ["Tom Mens", " Niels Van Eetvelde", " Serge Demeyer"]}, {"title": "A survey of software refactoring", "authors": ["Tom Mens "]}, {"title": "Kontrollflusssensible Quelltext-Umgestaltung mithilfe von Constraint-Programmierung (in German)", "authors": ["Marcus Mews"]}, {"title": "Constraining the structure and style of object-oriented programs", "authors": ["Scott Meyers"]}, {"title": "C# Language Specification", "authors": ["Microsoft"]}, {"title": "About the Object Constraint Language Specification Version 2", "authors": ["OMG"]}, {"title": "Refactoring Object-Oriented Frameworks", "authors": []}, {"title": "A Toolkit for Constructing Refactoring Engines", "authors": []}, {"title": "Object-Oriented Type Systems", "authors": []}, {"title": "Refactoring with synthesis", "authors": ["Veselin Raychev", " Max Sch\u00e4fer", " Manu Sridharan"]}, {"title": "Practical Analysis for Refactoring", "authors": ["Donald Bradley Roberts"]}, {"title": "Specification, Implementation and Verification of Refactorings", "authors": ["Max Sch\u00e4fer"]}, {"title": "Specifying and implementing refactorings", "authors": ["Max Sch\u00e4fer "]}, {"title": "Correct refactoring of concurrent Java code", "authors": ["Max Sch\u00e4fer", " Julian Dolby", " Manu Sridharan", " Emina Torlak"]}, {"title": "Sound and extensible renaming for Java", "authors": ["Max Sch\u00e4fer", " Torbj\u00f6rn Ekman"]}, {"title": "A comprehensive approach to naming and accessibility in refactoring Java programs", "authors": ["Max Sch\u00e4fer", " Andreas Thies", " Friedrich Steimann"]}, {"title": "Stepping stones over the refactoring rubicon In Proceedings of the 23rd European Conference on ECOOP2009\u2014Object-Oriented Programming (ECOOP\u201909)", "authors": ["Max Sch\u00e4fer", " Mathieu Verbaere", " Torbj\u00f6rn Ekman"]}, {"title": "Logical loops", "authors": ["Joachim Schimpf"]}, {"title": "Automated behavioral testing of refactoring engines", "authors": ["Gustavo Soares", " Rohit Gheyi"]}, {"title": "Identifying overly strong conditions in refactoring implementations", "authors": ["Gustavo Soares", " Melina Mongiovi"]}, {"title": "From well-formedness to meaning preservation: Model refactoring for almost free", "authors": ["Friedrich Steimann"]}, {"title": "Refactoring tools and their kin", "authors": ["Friedrich Steimann"]}, {"title": "Computing repair alternatives for malformed programs using constraint attribute grammars", "authors": ["Friedrich Steimann", " J\u00f6rg Hagemann"]}, {"title": "A refactoring constraint language and its application to Eiffel", "authors": ["Friedrich Steimann", " Christian Kollee"]}, {"title": "From public to private to absent: Refactoring Java programs under constrained accessibility", "authors": ["Friedrich Steimann "]}, {"title": "Constraint-based refactoring with foresight", "authors": ["Friedrich Steimann "]}, {"title": "Refactorings without names", "authors": ["Friedrich Steimann "]}, {"title": "Mechanical verification of refactorings", "authors": []}, {"title": "Constraintbasierte Refaktorisierung von Deklarationen in Java", "authors": ["Andreas Thies"]}, {"title": "RefaFlex: Safer refactorings for reflective Java programs", "authors": ["Andreas Thies "]}, {"title": "Systematic testing of refactoring tools (poster)", "authors": ["Andreas Thies "]}, {"title": "Refactoring tools for functional languages", "authors": []}, {"title": "Refactoring using type constraints", "authors": ["Frank Tip", " Adam Kiezun", " Ittai Balaban"]}, {"title": "Refactoring for generalization using type constraints", "authors": ["Frank Tip", " Adam Kiezun"]}, {"title": "OCL as a constraint generation language", "authors": ["Bastian Ulke "]}, {"title": "Partial evaluation of OCL expressions", "authors": ["Bastian Ulke", " Friedrich Steimann"]}, {"title": "Use, disuse, and misuse of automated refactorings", "authors": ["Mohsen Vakilian", " Nicholas Chen", " Stas Negara", " Balaji Ambresh Rajkumar"]}, {"title": "JunGL: A scripting language for refactoring", "authors": ["Mathieu Verbaere", " Ran Ettinger"]}, {"title": "Model/code co-refactoring: An MDE approach", "authors": ["Jens von Pilgrim", " Bastian Ulke", " Andreas Thies"]}]},
{"title": "Conditioning in Probabilistic Programming", "time": "January 2018", "keyword": ["Programming Languages and Systems"], "abstract": "This article investigates the semantic intricacies of conditioning, a main feature in probabilistic programming. Our study is based on an extension of the imperative probabilistic guarded command language pGCL with conditioning. We provide a weakest precondition (wp) semantics and an operational semantics. To deal with possibly diverging program behavior, we consider liberal preconditions. We show that diverging program behavior plays a key role when defining conditioning. We establish that weakest preconditions coincide with conditional expected rewards in Markov chains\u2014the operational semantics\u2014and that the wp-semantics conservatively extends the existing semantics of pGCL (without conditioning). An extension of these results with nondeterminism turns out to be problematic: although an operational semantics using Markov decision processes is rather straightforward, we show that providing an inductive wp-semantics in this setting is impossible. Finally, we present two program transformations that eliminate conditioning from any program. The first transformation hoists conditioning while updating the probabilistic choices in the program, while the second transformation replaces conditioning\u2014in the same vein as rejection sampling\u2014by a program with loops. In addition, we present a last program transformation that replaces an independent identically distributed loop with conditioning.\n", "author": [{"name": "Federico Olmedo", "affiliation": "Department of Computer Science, University of Chile, Chile"}, {"name": "Friedrich Gretz", "affiliation": "Bosch Corporate Research, Germany"}, {"name": "Nils Jansen", "affiliation": "Radboud University Nijmegen, The Netherlands"}, {"name": "Benjamin Lucien Kaminski", "affiliation": "RWTH Aachen University, Germany"}, {"name": "Joost-Pieter Katoen", "affiliation": "RWTH Aachen University, Germany"}, {"name": "Annabelle Mciver", "affiliation": "Macquarie University, Sydney, Australia"}, {"name": "Federico Olmedo", "affiliation": "Department of Computer Science, University of Chile, Chile"}, {"name": "Friedrich Gretz", "affiliation": "Bosch Corporate Research, Germany"}, {"name": "Nils Jansen", "affiliation": "Radboud University Nijmegen, The Netherlands"}, {"name": "Benjamin Lucien Kaminski", "affiliation": "RWTH Aachen University, Germany"}, {"name": "Joost-Pieter Katoen", "affiliation": "RWTH Aachen University, Germany"}, {"name": "Annabelle Mciver", "affiliation": "Macquarie University, Sydney, Australia"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "Noncomputable conditional distributions", "authors": ["Nathanael Leedom Ackerman"]}, {"title": "Conditional probabilities over probabilistic and nondeterministic systems", "authors": []}, {"title": "Proofs of randomized algorithms in Coq", "authors": ["Philippe Audebaud "]}, {"title": "Refinement Calculus - A Systematic Introduction", "authors": ["Ralph-Johan Back "]}, {"title": "Principles of Model Checking", "authors": ["Christel Baier "]}, {"title": "Computing conditional probabilities in Markovian models efficiently", "authors": ["Christel Baier", " Joachim Klein", " Sascha Kl\u00fcppelholz"]}, {"title": "Synthesizing probabilistic invariants via doob\u2019s decomposition", "authors": ["Gilles Barthe", " Thomas Espitau", " Luis Mar\u00eda Ferrer Fioriti"]}, {"title": "Definable operation in general algebras, and the theory of automata and flowcharts", "authors": ["Hans Beki\u0107"]}, {"title": "Measure transformer semantics for Bayesian machine learning", "authors": ["Johannes Borgstr\u00f6m", " Michael Greenberg", " James Margetson"]}, {"title": "Acceptance--rejection sampling from the conditional distribution of independent discrete random variables, given their sum", "authors": ["G\u00f6ran Brostr\u00f6m "]}, {"title": "Verifying quantitative reliability for programs that execute on unreliable hardware", "authors": ["Michael Carbin", " Sasa Misailovic"]}, {"title": "Probabilistic program analysis with martingales", "authors": ["Aleks"]}, {"title": "Expectation invariants for probabilistic program loops as fixed points", "authors": ["Aleks"]}, {"title": "Algorithmic analysis of qualitative and quantitative termination problems for affine probabilistic programs", "authors": ["Krishnendu Chatterjee", " Hongfei Fu", " Petr Novotn\u00fd"]}, {"title": "Bayesian inference using data flow analysis", "authors": ["Guillaume Claret"]}, {"title": "pGCL for Isabelle", "authors": ["David Cock"]}, {"title": "Probabilistic abstract interpretation", "authors": ["Patrick Cousot "]}, {"title": "Verifying probabilistic programs using a Hoare like logic", "authors": []}, {"title": "A Discipline of Programming", "authors": []}, {"title": "ProbLog2: Probabilistic logic programming", "authors": ["Anton Dries", " Angelika Kimmig", " Wannes Meert", " Joris Renkens", " Guy Van den Broeck", " Jonas Vlasselaer"]}, {"title": "Min-entropy as a resource", "authors": ["Barbara Espinoza "]}, {"title": "The Design and Implementation of Probabilistic Programming Languages", "authors": []}, {"title": "Tabular: A schema-driven probabilistic programming language", "authors": [" Thore Graepel", " Nicolas Roll", " Johannes Borgstr\u00f6m"]}, {"title": "Probabilistic programming", "authors": []}, {"title": "Operational versus weakest pre-expectation semantics for the probabilistic guarded command language", "authors": ["Friedrich Gretz", " Joost-Pieter Katoen"]}, {"title": "Stochastic processes as concurrent constraint programs", "authors": ["Vineet Gupta", " Radha Jagadeesan"]}, {"title": "A probability perspective", "authors": []}, {"title": "Slicing probabilistic programs", "authors": ["Chung-Kil Hur"]}, {"title": "Probabilistic guarded commands mechanized in HOL", "authors": ["Joe Hurd", " Annabelle McIver"]}, {"title": "Bounded model checking for probabilistic programs", "authors": ["Nils Jansen", " Christian Dehnert", " Benjamin Lucien Kaminski", " Joost-Pieter Katoen"]}, {"title": "Conditioning in probabilistic programming", "authors": ["Nils Jansen", " Benjamin Lucien Kaminski", " Joost-Pieter Katoen", " Federico Olmedo", " Friedrich Gretz"]}, {"title": "On the hardness of almost-sure termination", "authors": ["Benjamin Lucien Kaminski "]}, {"title": "A weakest pre-expectation semantics for mixed-sign expectations", "authors": ["Benjamin Lucien Kaminski "]}, {"title": "Understanding probabilistic programs", "authors": ["Joost-Pieter Katoen", " Friedrich Gretz", " Nils Jansen", " Benjamin Lucien Kaminski"]}, {"title": "Linear-invariant generation for probabilistic programs", "authors": ["Joost-Pieter Katoen", " Annabelle McIver", " Larissa Meinicke"]}, {"title": "A game-based abstraction-refinement framework for Markov decision processes", "authors": ["Mark Kattenbelt", " Gethin Norman"]}, {"title": "Semantics of probabilistic programs", "authors": ["Dexter Kozen"]}, {"title": "A probabilistic PDL", "authors": ["Dexter Kozen"]}, {"title": "Operational semantics and generalized weakest preconditions", "authors": []}, {"title": "Abstraction, Refinement and Proof for Probabilistic Systems", "authors": ["Annabelle McIver "]}, {"title": "Probabilistic predicate transformers", "authors": ["Carroll Morgan", " Annabelle McIver"]}, {"title": "R2: An efficient MCMC sampler for probabilistic programs", "authors": [" Chung-Kil Hur"]}, {"title": "Reasoning about recursive probabilistic programs", "authors": ["Federico Olmedo", " Benjamin Lucien Kaminski", " Joost-Pieter Katoen"]}, {"title": "A compilation target for probabilistic programming languages", "authors": ["Brooks Paige "]}, {"title": "Practical Probabilistic Programming", "authors": ["Avi Pfeffer"]}, {"title": "Markov Decision Processes: Discrete Stochastic Dynamic Programming", "authors": ["Martin Puterman"]}, {"title": "Monte Carlo Statistical Methods", "authors": ["Christian Robert "]}, {"title": "Expressing and verifying probabilistic assertions", "authors": ["Adrian Sampson", " Pavel Panchekha", " Todd Mytkowicz", " Dan Grossman"]}, {"title": "A Computational Introduction to Number Theory and Algebra", "authors": ["Victor Shoup"]}, {"title": "Semantics for probabilistic programming: Higher-order functions, continuous distributions, and soft constraints", "authors": ["Sam Staton", " Hongseok Yang", " Frank Wood", " Chris Heunen"]}, {"title": "Understanding Probability: Chance Rules in Everyday Life", "authors": ["Henk Tijms"]}, {"title": "Distributing probability over non-determinism", "authors": ["Daniele Varacca "]}, {"title": "Universal Algebra for Computer Scientists", "authors": ["Wolfgang Wechler"]}, {"title": "On dynamical probabilities, or: How to learn to shoot straight", "authors": ["Herbert Wiklicky"]}]},
{"title": "Algorithmic Analysis of Qualitative and Quantitative Termination Problems for Affine Probabilistic Programs", "time": "May 2018", "keyword": ["Programming Languages and Systems"], "abstract": "In this article, we consider the termination problem of probabilistic programs with real-valued variables. The questions concerned are: qualitative ones that ask (i) whether the program terminates with probability 1 (almost-sure termination) and (ii) whether the expected termination time is finite (finite termination); and quantitative ones that ask (i) to approximate the expected termination time (expectation problem) and (ii) to compute a bound \n such that the probability not to terminate after \n steps decreases exponentially (concentration problem). To solve these questions, we utilize the notion of ranking supermartingales, which is a powerful approach for proving termination of probabilistic programs. In detail, we focus on algorithmic synthesis of linear ranking-supermartingales over affine probabilistic programs (A\n) with both angelic and demonic non-determinism. An important subclass of A\n is LRA\n which is defined as the class of all A\n over which a linear ranking-supermartingale exists.\nOur main contributions are as follows. Firstly, we show that the membership problem of LRA\n (i) can be decided in polynomial time for A\n with at most demonic non-determinism, and (ii) is NP-hard and in PSPACE for A\n with angelic non-determinism. Moreover, the NP-hardness result holds already for A\n without probability and demonic non-determinism. Secondly, we show that the concentration problem over LRA\n can be solved in the same complexity as for the membership problem of LRA\n. Finally, we show that the expectation problem over LRA\n can be solved in 2EXPTIME and is PSPACE-hard even for A\n without probability and non-determinism (i.e., deterministic programs). Our experimental results demonstrate the effectiveness of our approach to answer the qualitative and quantitative questions over A\n with at most demonic non-determinism.\n", "author": [{"name": "Krishnendu Chatterjee", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Hongfei Fu", "affiliation": "Shanghai Jiao Tong University, Shanghai, P.R. China"}, {"name": "Petr Novotn\u00fd", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Rouzbeh Hasheminezhad", "affiliation": "Sharif University of Technology, Iran"}, {"name": "Krishnendu Chatterjee", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Hongfei Fu", "affiliation": "Shanghai Jiao Tong University, Shanghai, P.R. China"}, {"name": "Petr Novotn\u00fd", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Rouzbeh Hasheminezhad", "affiliation": "Sharif University of Technology, Iran"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Weighted sums of certain dependent random variables", "authors": []}, {"title": "Principles of Model Checking", "authors": ["Christel Baier "]}, {"title": "Synthesizing probabilistic invariants via Doob\u2019s decomposition", "authors": ["Gilles Barthe", " Thomas Espitau", " Luis Mar\u00eda Ferrer Fioriti"]}, {"title": "Probability inequalities for the sum of independent random variables", "authors": ["George Bennett"]}, {"title": "Probability and Measure (3rd ed", "authors": ["P Billingsley"]}, {"title": "Solving numerical constraints", "authors": ["Alex"]}, {"title": "Proving positive almost-sure termination", "authors": ["Olivier Bournez "]}, {"title": "Linear ranking with reachability", "authors": [" Zohar Manna"]}, {"title": "The polyranking principle", "authors": [" Zohar Manna"]}, {"title": "Analyzing probabilistic pushdown automata", "authors": []}, {"title": "Some algebraic and geometric computations in PSPACE", "authors": ["John Canny"]}, {"title": "Probabilistic program analysis with martingales", "authors": ["Aleks"]}, {"title": "Algorithmic analysis of qualitative and quantitative termination problems for affine probabilistic programs", "authors": ["Krishnendu Chatterjee", " Hongfei Fu", " Petr Novotn\u00fd"]}, {"title": "Concentration inequalities and martingale inequalities: A survey", "authors": ["Fan Chung "]}, {"title": "Synthesis of linear ranking functions", "authors": ["Michael Col\u00f3n "]}, {"title": "Ramsey vs", "authors": ["Byron Cook", " Abigail See"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Concentration of Measure for the Analysis of Randomized Algorithms (1st ed", "authors": ["Devdatt Dubhashi "]}, {"title": "Probability: Theory and Examples (2nd ed", "authors": []}, {"title": "Proving termination of probabilistic programs using patterns", "authors": ["Javier Esparza", " Andreas Gaiser"]}, {"title": "Quantitative analysis of probabilistic pushdown automata: Expectations and variances", "authors": ["J Esparza", " A Ku\u010dera"]}, {"title": "A fourier-f\u00e9le mechanikai elv alkalmaz\u00e1sai (Hungarian)", "authors": []}, {"title": "Probabilistic termination: Soundness, completeness, and compositionality", "authors": ["Luis Mar\u00eda Ferrer Fioriti "]}, {"title": "Assigning meanings to programs", "authors": []}, {"title": "On the stochastic matrices associated with certain queuing processes", "authors": []}, {"title": "Concurrent probabilistic programs, or: How to schedule if you must", "authors": ["Sergiu Hart "]}, {"title": "Probability inequalities for sums of bounded random variables", "authors": ["Wassily Hoeffding"]}, {"title": "Dynamic Programming and Markov Processes", "authors": []}, {"title": "IBM ILOG CPLEX Optimizer", "authors": []}, {"title": "Planning and acting in partially observable stochastic domains", "authors": []}, {"title": "Reinforcement learning: A survey", "authors": []}, {"title": "Linear-invariant generation for probabilistic programs: Automated support for proof-based methods", "authors": ["Joost-Pieter Katoen", " Annabelle McIver", " Larissa Meinicke"]}, {"title": "Denumerable Markov Chains", "authors": []}, {"title": "Temporal-logic-based reactive mission and motion planning", "authors": []}, {"title": "PRISM 4", "authors": [" Gethin Norman"]}, {"title": "The size-change principle for program termination", "authors": ["Chin Soon Lee"]}, {"title": "Concentration", "authors": ["Colin McDiarmid"]}, {"title": "Developing and reasoning about probabilistic programs in pGCL", "authors": ["Annabelle McIver "]}, {"title": "Abstraction, Refinement and Proof for Probabilistic Systems", "authors": ["Annabelle McIver "]}, {"title": "Markov Chains and Stochastic Stability", "authors": []}, {"title": "An abstract analysis of the probabilistic termination of programs", "authors": ["David Monniaux"]}, {"title": "Randomized Algorithms", "authors": ["Rajeev Motwani "]}, {"title": "Beitr\u00e4ge zur Theorie der Linearen Ungleichungen (German)", "authors": []}, {"title": "A Course in Game Theory", "authors": []}, {"title": "Introduction to Probabilistic Automata (Computer Science and Applied Mathematics)", "authors": []}, {"title": "A complete method for the synthesis of linear ranking functions", "authors": ["Andreas Podelski "]}, {"title": "Probabilistic automata", "authors": []}, {"title": "A First Look at Rigorous Probability Theory (2nd ed", "authors": []}, {"title": "Static analysis for probabilistic programs: Inferring whole program properties from finitely many paths", "authors": ["Sriram Sankaranarayanan", " Aleks"]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Alex"]}, {"title": "Combinatorial Optimization\u2014Polyhedra and Efficiency", "authors": ["Alex"]}, {"title": "Verification of probabilistic programs", "authors": ["Micha Sharir", " Amir Pnueli"]}, {"title": "Termination detection in logic programs using argument sizes", "authors": ["Kirack Sohn "]}, {"title": "Programming by sketching for bit-streaming programs", "authors": ["Arm", " Rastislav Bod\u00edk"]}, {"title": "Approximation algorithms for indefinite quadratic programming", "authors": []}, {"title": "Probability with Martingales", "authors": ["David Williams"]}]},
{"title": "Static Identification of Injection Attacks in Java", "time": "July 2019", "keyword": ["Programming Languages and Systems"], "abstract": "The most dangerous security-related software errors, according to the OWASP Top Ten 2017 list, affect web applications. They are potential injection attacks that exploit user-provided data to execute undesired operations: database access and updates (\n); generation of malicious web pages (\n); redirection to user-specified web pages (\n); execution of OS commands and arbitrary scripts (\n); loading of user-specified, possibly heavy or dangerous classes at run time (\n); access to arbitrary files on the file system (\n); and storing user-provided data into heap regions normally assumed to be shielded from the outside world (\n). All these attacks exploit the same weakness: unconstrained propagation of data from \n that the user of a web application controls into \n whose activation might trigger dangerous operations. Although web applications are written in a variety of languages, Java remains a frequent choice, in particular for banking applications, where security has tangible relevance.\nThis article defines a unified, sound protection mechanism against such attacks, based on the identification of all possible explicit flows of \n data in Java code. Such flows can be arbitrarily complex, passing through dynamically allocated data structures in the heap. The analysis is based on abstract interpretation and is interprocedural, flow-sensitive, and context-sensitive. Its notion of taint applies to reference (non-primitive) types dynamically allocated in the heap and is object-sensitive and field-sensitive. The analysis works by translating the program into Boolean formulas that model all possible data flows. Its implementation, within the Julia analyzer for Java and Android, found injection security vulnerabilities in the Internet banking service and in the customer relationship management of large Italian banks, as well as in a set of open-source third-party applications. It found the command injection, which is at the origin of the 2017 Equifax data breach, one of the worst data breaches ever. For objective, repeatable results, this article also evaluates the implementation on two open-source security benchmarks: the Juliet Suite and the OWASP Benchmark for the automatic comparison of static analyzers for cybersecurity. We compared this technique against more than 10 other static analyzers, both free and commercial. The result of these experiments is that ours is the only analysis for injection that is sound (up to well-stated limitations such as multithreading and native code) and works on industrial code, and it is also much more precise than other tools.\n", "author": [{"name": "Fausto Spoto", "affiliation": "Universit\u00e0 di Verona, Italy and JuliaSoft Srl, Verona, Italy"}, {"name": "Elisa Burato", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Pietro Ferrara", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Alberto Lovato", "affiliation": "Universit\u00e0 di Verona, Verona, Italy"}, {"name": "Damiano Macedonio", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Ciprian Spiridon", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Fausto Spoto", "affiliation": "Universit\u00e0 di Verona, Italy and JuliaSoft Srl, Verona, Italy"}, {"name": "Elisa Burato", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Pietro Ferrara", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Alberto Lovato", "affiliation": "Universit\u00e0 di Verona, Verona, Italy"}, {"name": "Damiano Macedonio", "affiliation": "JuliaSoft Srl, Verona, Italy"}, {"name": "Ciprian Spiridon", "affiliation": "JuliaSoft Srl, Verona, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "An introduction to binary decision diagrams", "authors": []}, {"title": "Automated testing for SQL injection vulnerabilities: An input mutation approach", "authors": []}, {"title": "FlowDroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps", "authors": []}, {"title": "QL: Object-oriented queries on relational data", "authors": []}, {"title": "Static analysis of implicit control flow: Resolving Java reflection and Android intents (T)", "authors": []}, {"title": "A certified lightweight non-interference Java bytecode verifier", "authors": []}, {"title": "Security types preserving compilation", "authors": []}, {"title": "Content-type: Malicious\u2014New Apache Struts2 0-day under attack", "authors": []}, {"title": "Symbolic Boolean manipulation with ordered binary-decision diagrams", "authors": []}, {"title": "Security analysis of the OWASP benchmark with Julia", "authors": []}, {"title": "Information flow for ALGOL-like languages", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": []}, {"title": "SQL FILTER\u2014SQL injection prevention and logging using dynamic network filter", "authors": []}, {"title": "Boolean formulas for the static identification of injection attacks in Java", "authors": []}, {"title": "Tailoring taint analysis to GDPR", "authors": []}, {"title": "A static analysis framework for detecting SQL injection vulnerabilities", "authors": []}, {"title": "Modeling secure information flow with Boolean functions", "authors": []}, {"title": "Information flow analysis for Java bytecode", "authors": []}, {"title": "Constancy analysis", "authors": []}, {"title": "Measuring software development productivity: A machine learning approach", "authors": []}, {"title": "Java Platform, Enterprise Edition", "authors": ["Oracle Inc"]}, {"title": "JavaServer Pages Technology", "authors": ["Oracle Inc"]}, {"title": "Spring", "authors": ["Pivotal Software Inc"]}, {"title": "Detecting SQL injection attacks using query result size", "authors": []}, {"title": "SQLiGoT: Detecting SQL injection attacks using graph of tokens and SVM", "authors": []}, {"title": "Type-based information flow analysis for low-level languages", "authors": []}, {"title": "MAC based solution for SQL injection", "authors": []}, {"title": "Challenges for static analysis of Java reflection: Literature review and empirical study", "authors": []}, {"title": "Semantics and program analysis of computationally secure information flow", "authors": []}, {"title": "The Java Virtual Machine Specification, Java SE 7 Edition (1st ed", "authors": []}, {"title": "A dynamic SQL injection vulnerability test case generation model based on the multiple phases detection approach", "authors": []}, {"title": "An effective penetration test approach based on feature matrix for exposing SQL injection vulnerability", "authors": []}, {"title": "Improving web application firewalls to detect advanced SQL injection attacks", "authors": []}, {"title": "Top 25 most dangerous software errors", "authors": ["MITRE/SANS"]}, {"title": "A least fixed point approach to inter-procedural information flow control", "authors": []}, {"title": "Employing neural networks for the detection of SQL injection attack", "authors": []}, {"title": "Juliet test suite for Java", "authors": ["National Institute of St"]}, {"title": "Reachability analysis of program variables", "authors": []}, {"title": "CVE-2017-5638 detail", "authors": ["NIST"]}, {"title": "Giant Equifax data breach: 143 million people could be affected", "authors": []}, {"title": "Benchmark", "authors": ["OWASP"]}, {"title": "Object-oriented type inference", "authors": []}, {"title": "Static analysis of Android apps interaction with automotive CAN", "authors": []}, {"title": "Magic-sets transformation for the analysis of Java bytecode", "authors": []}, {"title": "Static analysis of Android programs", "authors": []}, {"title": "SQL injection attack scanner using Boyer-Moore string matching algorithm", "authors": []}, {"title": "Program analysis via graph reachability", "authors": []}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": []}, {"title": "Language-based information-flow security", "authors": []}, {"title": "A PER model of secure information flow in sequential programs", "authors": []}, {"title": "An Analysis of CVE-2017-5638", "authors": ["Gotham Digital Science"]}, {"title": "Pair-sharing analysis of object-oriented programs", "authors": []}, {"title": "Information-theoretic detection of SQL injection attacks", "authors": []}, {"title": "Defeating SQL injection", "authors": []}, {"title": "Eliminating SQL injection and cross site scripting using aspect oriented programming", "authors": []}, {"title": "Static enforcement of security with types", "authors": []}, {"title": "Nullness analysis in Boolean form", "authors": []}, {"title": "The Julia static analyzer for Java", "authors": []}, {"title": "Inferential SQL injection attacks", "authors": []}, {"title": "Scalable propagation-based call graph construction algorithms", "authors": []}, {"title": "Andromeda: Accurate and scalable security analysis of web applications", "authors": []}, {"title": "TAJ: Effective taint analysis of web applications", "authors": []}, {"title": "Javari: Adding reference immutability to Java", "authors": []}, {"title": "Optimizing Java bytecode using the soot framework: Is it feasible? In Proceedings of the 9th International Conference on Compiler Construction (CC\u201900)", "authors": []}, {"title": "A sound type system for secure flow analysis", "authors": []}, {"title": "Sound and precise analysis of web applications for injection vulnerabilities", "authors": []}, {"title": "Java binary decision diagram library", "authors": []}, {"title": "Towards SQL injection attacks detection mechanism using parse tree", "authors": []}, {"title": "SQL injection attack detection method using expectation criterion", "authors": []}]},
{"title": "A Logical Analysis of Framing for Specifications with Pure Method Calls", "time": "May 2018", "keyword": ["Programming Languages and Systems"], "abstract": "For specifying and reasoning about object-based programs, it is often attractive for contracts to be expressed using calls to pure methods. It is useful for pure methods to have contracts, including read effects, to support local reasoning based on frame conditions. This leads to puzzles such as the use of a pure method in its own contract. These ideas have been explored in connection with verification tools based on axiomatic semantics, guided by the need to avoid logical inconsistency, and focusing on encodings that cater for first-order automated provers. This article adds pure methods and read effects to region logic, a first-order program logic that features frame-based local reasoning and provides modular reasoning principles for end-to-end correctness. Modular reasoning is embodied in a proof rule for linking a module\u2019s method implementations with a client that relies on the method contracts. Soundness is proved with respect to conventional operational semantics and uses an extensional (i.e, relational) interpretation of read effects. Applicability to tools based on SMT solvers is demonstrated through machine-checked verification of examples. The developments in this article can guide the implementations of linking as used in modular verifiers and serve as a basis for studying observationally pure methods and encapsulation.\n", "author": [{"name": "Anindya Banerjee", "affiliation": "IMDEA Software Institute, Madrid, Spain"}, {"name": "David A. Naumann", "affiliation": "Stevens Institute of Technology, Hoboken, NJ"}, {"name": "Mohammad Nikouei", "affiliation": "Stevens Institute of Technology, Hoboken, NJ"}, {"name": "Anindya Banerjee", "affiliation": "IMDEA Software Institute, Madrid, Spain"}, {"name": "David A. Naumann", "affiliation": "Stevens Institute of Technology, Hoboken, NJ"}, {"name": "Mohammad Nikouei", "affiliation": "Stevens Institute of Technology, Hoboken, NJ"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Seventh International Workshop on Specification and Verification of Component Systems (SAVCBS'08)", "authors": ["Jonathan Aldrich", " Mike Barnett", " Dimitra Giannakopoulou", " Natasha Sharygina"]}, {"title": "A logic for information flow in object-oriented programs", "authors": []}, {"title": "Verification of Sequential and Concurrent Programs (3rd ed", "authors": []}, {"title": "Ownership confinement ensures representation independence for object-oriented programs", "authors": []}, {"title": "Local reasoning for global invariants, part II: Dynamic boundaries", "authors": []}, {"title": "A logical analysis of framing for specifications with pure method calls", "authors": []}, {"title": "Relational logic with framing and hypotheses", "authors": ["Anindya Banerjee"]}, {"title": "Local reasoning for global invariants, part I: Region logic", "authors": ["Anindya Banerjee"]}, {"title": "Reasoning About Frame Properties in Object-Oriented Programs", "authors": ["Yuyan Bao"]}, {"title": "Conditional effects in fine-grained region logic", "authors": ["Yuyan Bao"]}, {"title": "Specification and verification: The spec# experience", "authors": ["Mike Barnett", " Manuel F\u00e4hndrich", " Peter M\u00fcller", " Wolfram Schulte"]}, {"title": "99", "authors": ["Mike Barnett", " Wolfram Schulte"]}, {"title": "Secure information flow by self-composition", "authors": ["Gilles Barthe"]}, {"title": "Verification of Object-Oriented Software: The KeY Approach", "authors": ["Bernhard Beckert", " Reiner H\u00e4hnle"]}, {"title": "Simple relational correctness proofs for static analyses and program transformations", "authors": []}, {"title": "Abstract effects and proof-relevant logical relations", "authors": ["Nick Benton", " Martin Hofmann"]}, {"title": "Relational semantics for effect-based program transformations with dynamic allocation", "authors": ["Nick Benton", " Andrew Kennedy", " Lennart Beringer"]}, {"title": "Separation predicates: A taste of separation logic in first-order logic", "authors": ["Fran\u00e7ois Bobot "]}, {"title": "Permission accounting in separation logic", "authors": ["Richard Bornat", " Cristiano Calcagno"]}, {"title": "The Calculus of Computation--Decision Procedures with Applications to Verification", "authors": []}, {"title": "Extensions of the theory of observational purity and a practical design for JML", "authors": []}, {"title": "Reasoning with specifications containing method calls and model fields", "authors": []}, {"title": "Practical reasoning about invocations and implementations of pure methods", "authors": []}, {"title": "Efficient well-definedness checking", "authors": ["\u00c1d\u00e1m Darvas", " Farhad Mehta"]}, {"title": "Reasoning about method calls in interface specifications", "authors": []}, {"title": "The spirit of ghost code", "authors": ["Jean-Christophe Filli\u00e2tre", " L\u00e9on Gondelman"]}, {"title": "A Pragmatic Type System for Deductive Verification", "authors": ["Jean-Christophe Filli\u00e2tre", " L\u00e9on Gondelman"]}, {"title": "Extended static checking for Java", "authors": ["Cormac Flanagan", " Mark Lillibridge", " Greg Nelson"]}, {"title": "Behavioral interface specification languages", "authors": ["John Hatcliff", " Peter M\u00fcller"]}, {"title": "Ironclad apps: End-to-end security via automated full-system verification", "authors": ["Chris Hawblitzel", " Jon Howell", " Arjun Narayan", " Bryan Parno", " Danfeng Zhang"]}, {"title": "Verification condition generation for permission logics with abstract predicates and abstraction functions", "authors": ["Stefan Heule", " Peter M\u00fcller"]}, {"title": "Proofs of correctness of data representations", "authors": []}, {"title": "Dynamic frames: Support for framing, dependencies and sharing without restrictions", "authors": []}, {"title": "The dynamic frames theory", "authors": []}, {"title": "Preliminary design of JML: A behavioral interface specification language for Java", "authors": []}, {"title": "Behavioral subtyping, specification inheritance, and modular reasoning", "authors": []}, {"title": "Specification and Versification in Object-Oriented Software", "authors": []}, {"title": "Dafny: An automatic program verifier for functional correctness", "authors": []}, {"title": "Proving consistency of pure methods and model fields", "authors": []}, {"title": "Verification of equivalent-results methods", "authors": []}, {"title": "A basis for verifying multi-threaded programs", "authors": []}, {"title": "Using data groups to specify and check side effects", "authors": [" Arnd Poetzsch-Heffter"]}, {"title": "Viper: A verification infrastructure for permission-based reasoning", "authors": ["Peter M\u00fcller", " Malte Schwerhoff"]}, {"title": "Abstract predicates and mutable ADTs in Hoare type theory", "authors": ["Aleks", " Amal Ahmed", " Greg Morrisett"]}, {"title": "Dependent type theory for verification of information flow and access control policies", "authors": ["Aleks", " Anindya Banerjee"]}, {"title": "Observational purity and encapsulation", "authors": []}, {"title": "Separation and information hiding", "authors": [" Hongseok Yang"]}, {"title": "Separation logic, abstraction and inheritance", "authors": ["Matthew Parkinson "]}, {"title": "Separation logic and abstraction", "authors": []}, {"title": "The relationship between separation logic and implicit dynamic frames", "authors": []}, {"title": "Grasshopper", "authors": ["Ruzica Piskac", " Thomas Wies"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": []}, {"title": "Local reasoning and dynamic framing for the composite pattern and its clients", "authors": ["Stan Rosenberg", " Anindya Banerjee"]}, {"title": "Checking well-formedness of pure-method specifications", "authors": ["Arsenii Rudich", " \u00c1d\u00e1m Darvas"]}, {"title": "Purity and side effect analysis for Java programs", "authors": []}, {"title": "Dynamic frames in Java dynamic logic", "authors": [" Mattias Ulbrich"]}, {"title": "VeriCool: An automatic verifier for a concurrent object-oriented language", "authors": ["Jan Smans", " Bart Jacobs"]}, {"title": "Implicit dynamic frames", "authors": ["Jan Smans", " Bart Jacobs"]}, {"title": "Automatic verification of Java programs with dynamic frames", "authors": ["Jan Smans", " Bart Jacobs", " Frank Piessens"]}, {"title": "A formal semantics for isorecursive and equirecursive state abstractions", "authors": []}, {"title": "Relational separation logic", "authors": ["Hongseok Yang"]}]},
{"title": "SHErrLoc: A Static Holistic Error Locator", "time": "August 2017", "keyword": ["Programming Languages and Systems"], "abstract": "We introduce a general way to locate programmer mistakes that are detected by static analyses. The program analysis is expressed in a general constraint language that is powerful enough to model type checking, information flow analysis, dataflow analysis, and points-to analysis. Mistakes in program analysis result in unsatisfiable constraints. Given an unsatisfiable system of constraints, both satisfiable and unsatisfiable constraints are analyzed to identify the program expressions most likely to be the cause of unsatisfiability. The likelihood of different error explanations is evaluated under the assumption that the programmer\u2019s code is mostly correct, so the simplest explanations are chosen, following Bayesian principles. For analyses that rely on programmer-stated assumptions, the diagnosis also identifies assumptions likely to have been omitted. The new error diagnosis approach has been implemented as a tool called SHErrLoc, which is applied to three very different program analyses, such as type inference for a highly expressive type system implemented by the Glasgow Haskell Compiler\u2014including type classes, Generalized Algebraic Data Types (GADTs), and type families. The effectiveness of the approach is evaluated using previously collected programs containing errors. The results show that when compared to existing compilers and other tools, SHErrLoc consistently identifies the location of programmer errors significantly more accurately, without any language-specific heuristics.\n", "author": [{"name": "Danfeng Zhang", "affiliation": "Pennsylvania State University, PA, USA"}, {"name": "Andrew C. Myers", "affiliation": "Cornell University, NY, USA"}, {"name": "Dimitrios Vytiniotis", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Simon Peyton-Jones", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Danfeng Zhang", "affiliation": "Pennsylvania State University, PA, USA"}, {"name": "Andrew C. Myers", "affiliation": "Cornell University, NY, USA"}, {"name": "Dimitrios Vytiniotis", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Simon Peyton-Jones", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "5", "references": [{"title": "Introduction to set constraint-based program analysis", "authors": ["Alex"]}, {"title": "Type inclusion constraints and type inference", "authors": []}, {"title": "Program Analysis and Specialization for the C Programming Language", "authors": ["Lars Ole Andersen"]}, {"title": "Sharing mobile code securely with information flow control", "authors": ["Owen Arden", " Jed Liu", " Aslan Askarov"]}, {"title": "From symptom to cause: Localizing errors in counterexample traces", "authors": ["Thomas Ball", " Mayur Naik"]}, {"title": "Formal-language-constrained path problems", "authors": ["Chris Barrett", " Riko Jacob"]}, {"title": "Almost-correct specifications: A modular semantic framework for assigning confidence to warnings", "authors": []}, {"title": "Accuracy of CF-Typing", "authors": ["Shen Chen"]}, {"title": "Better Type-Error Messages Through Lazy Typing", "authors": ["Sheng Chen "]}, {"title": "Counter-factual typing for debugging type errors", "authors": ["Sheng Chen "]}, {"title": "Diagnosis of Ill-typed Programs", "authors": []}, {"title": "Type Assignment in Programming Languages", "authors": ["Luis Manuel Martins Damas"]}, {"title": "A Lattice model of secure information flow", "authors": []}, {"title": "Automated error diagnosis using abductive inference", "authors": ["Isil Dillig", " Thomas Dillig"]}, {"title": "EasyOCaml", "authors": ["EasyOCaml"]}, {"title": "Flow-Insensitive Points-to Analysis with Term and Set Constraints", "authors": [" Manuel Fahndrich"]}, {"title": "Flow-insensitive type qualifiers", "authors": [" Robert Johnson", " John Kodumal"]}, {"title": "Bayesian Data Analysis (2nd ed", "authors": ["Andrew Gelman"]}, {"title": "Type error slicing in implicitly typed higher-order languages", "authors": []}, {"title": "Helium benchmark programs (2002--2005)", "authors": ["Jurriaan Hage"]}, {"title": "Heuristics for type error discovery and recovery", "authors": ["Jurriaan Hage "]}, {"title": "A formal basis for the heuristic determination of minimum cost paths", "authors": []}, {"title": "Helium, for learning Haskell", "authors": ["Bastiaan Heeren", " Daan Leijen"]}, {"title": "Top Quality Type Error Messages", "authors": []}, {"title": "(2014) 2014", "authors": ["Heliu"]}, {"title": "Report on the programming language Haskell", "authors": ["Paul Hudak", " Simon Peyton Jones"]}, {"title": "A maximum flow approach to anomaly isolation in unification-based incremental type inference", "authors": []}, {"title": "Effective blame for information-flow violations", "authors": ["Dave King", " Trent Jaeger", " Somesh Jha"]}, {"title": "From uncertainty to belief: Inferring the specification within", "authors": ["Ted Kremenek", " Paul Twohey", " Godmar Back", " Andrew Ng"]}, {"title": "Proofs about a folklore let-polymorphic type inference algorithm", "authors": ["Oukseh Lee "]}, {"title": "Searching for type-error messages", "authors": [" Matthew Flower", " Dan Grossman"]}, {"title": "Scalable statistical bug isolation", "authors": ["Ben Liblit", " Mayur Naik", " Alex Aiken"]}, {"title": "Merlin: Specification inference for explicit information flow problems", "authors": ["Benjamin Livshits"]}, {"title": "A practical framework for type inference error explanation", "authors": ["Calvin Loncaric", " Satish Ch", " Cole Schlesinger"]}, {"title": "The Glasgow Haskell Compiler", "authors": ["Simon Marlow "]}, {"title": "On the unification of substitutions in type inference", "authors": ["Bruce James McAdam"]}, {"title": "Repairing Type Errors in Functional Programs", "authors": ["Bruce James McAdam"]}, {"title": "Interconvertibility of a class of set constraints and context-free language reachability", "authors": ["David Melski "]}, {"title": "The Definition of Standard ML", "authors": ["Robin Milner", " Mads Tofte"]}, {"title": "A decentralized model for information flow control", "authors": []}, {"title": "Jif 3", "authors": [" Lantian Zheng", " Steve Zdancewic", " Stephen Chong"]}, {"title": "Logic for Applications (2nd ed", "authors": ["Anil Nerode "]}, {"title": "OCaml programming language", "authors": ["OCaml"]}, {"title": "Type inference with constrained types", "authors": ["Martin Odersky", " Martin Sulzmann"]}, {"title": "Finding minimum type error sources", "authors": ["Zvonimir Pavlinovic", " Tim King"]}, {"title": "Practical type inference for arbitrary-rank types", "authors": ["Simon Peyton Jones", " Dimitrios Vytiniotis", " Stephanie Weirich"]}, {"title": "The essence of ML type inference", "authors": ["Francois Pottier "]}, {"title": "A Constraint System for a SML Type Error Slicer", "authors": ["Vincent Rahli"]}, {"title": "Program analysis via graph reachability", "authors": ["Thomas Reps"]}, {"title": "SHErrLoc (Static Holistic Error Locator) Tool Release (ver 1", "authors": ["SHErrLoc"]}, {"title": "Points-to analysis in almost linear time", "authors": ["Bjarne Steensgaard"]}, {"title": "A slicing-based approach for locating type errors", "authors": []}, {"title": "OutsideIn(X): Modular type inference with local assumptions", "authors": ["Dimitrios Vytiniotis", " Simon Peyton Jones", " Tom Schrijvers"]}, {"title": "Let should not be generalized", "authors": ["Dimitrios Vytiniotis", " Simon Peyton Jones"]}, {"title": "Finding the source of type errors", "authors": ["Mitchell W"]}, {"title": "A simple algorithm and proof for type inference", "authors": ["Mitchell W"]}, {"title": "Security type error diagnosis for higher-order, polymorphic languages", "authors": ["Jeroen Weijers", " Jurriaan Hage"]}, {"title": "Toward general diagnosis of static errors", "authors": []}, {"title": "Diagnosing type errors with class", "authors": ["Danfeng Zhang", " Dimitrios Vytiniotis"]}, {"title": "Statistical debugging: Simultaneous identification of multiple bugs", "authors": [" Ben Liblit"]}]},
{"title": "Program Synthesis for Program Analysis", "time": "May 2018", "keyword": ["Programming Languages and Systems"], "abstract": "In this article, we propose a \n framework for designing static analysers based on \n. For this purpose, we identify a fragment of second-order logic with restricted quantification that is expressive enough to model numerous static analysis problems (e.g., safety proving, bug finding, termination and non-termination proving, refactoring). As our focus is on programs that use bit-vectors, we build a decision procedure for this fragment over finite domains in the form of a program synthesiser. We\u00a0provide instantiations of our framework for solving a diverse range of program verification tasks such as termination, non-termination, safety and bug finding, superoptimisation, and refactoring. Our experimental results show that our program synthesiser compares positively with specialised tools in each area as well as with general-purpose synthesisers.\n", "author": [{"name": "Cristina David", "affiliation": "University of Oxford, UK"}, {"name": "Pascal Kesseli", "affiliation": "University of Oxford, UK"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, UK"}, {"name": "Matt Lewis", "affiliation": "University of Oxford, UK"}, {"name": "Cristina David", "affiliation": "University of Oxford, UK"}, {"name": "Pascal Kesseli", "affiliation": "University of Oxford, UK"}, {"name": "Daniel Kroening", "affiliation": "University of Oxford, UK"}, {"name": "Matt Lewis", "affiliation": "University of Oxford, UK"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Sound and automated synthesis of digital stabilizing controllers for continuous plants", "authors": ["Aless", " Iury Bessa", " Dario Cattaruzza", " Lucas Cordeiro", " Cristina David", " Pascal Kesseli"]}, {"title": "Automated formal synthesis of digital controllers for state-space physical plants", "authors": ["Aless", " Iury Bessa", " Dario Cattaruzza", " Cristina David", " Pascal Kesseli", " Daniel Kroening"]}, {"title": "Syntax-guided synthesis", "authors": ["Rajeev Alur", " Rastislav Bod\u00edk", " Garvit Juniwal", " Mukund Raghothaman", " Rishabh Singh", " Arm", " Emina Torlak"]}, {"title": "Syntax-guided synthesis", "authors": ["Rajeev Alur", " Rastislav Bod\u00edk", " Garvit Juniwal", " Mukund Raghothaman", " Rishabh Singh", " Arm", " Emina Torlak"]}, {"title": "Feedback Systems: An Introduction for Scientists and Engineers", "authors": []}, {"title": "Computer-Controlled Systems: Theory and Design", "authors": []}, {"title": "Size-change termination and bound analysis", "authors": ["James Avery"]}, {"title": "The static driver verifier research platform", "authors": ["Thomas Ball", " Ella Bounimova", " Vladimir Levin", " Rahul Kumar"]}, {"title": "Size-change termination, monotonicity constraints and ranking functions", "authors": []}, {"title": "On the linear ranking problem for integer linear-constraint loops", "authors": []}, {"title": "CTL+FO verification as constraint solving", "authors": [" Marc Brockschmidt"]}, {"title": "Solving existentially quantified horn clauses", "authors": [" Corneliu Popeea"]}, {"title": "CPAchecker: A tool for configurable software verification", "authors": []}, {"title": "Linear ranking with reachability", "authors": [" Zohar Manna"]}, {"title": "The polyranking principle", "authors": [" Zohar Manna"]}, {"title": "Termination of polynomial programs", "authors": [" Zohar Manna"]}, {"title": "TOAST: Applying answer set programming to superoptimisation", "authors": ["Martin Brain "]}, {"title": "Linear Genetic Programming", "authors": []}, {"title": "Better termination proving through cooperation", "authors": ["Marc Brockschmidt", " Byron Cook"]}, {"title": "Proving Nontermination via Safety", "authors": ["Hong-Yi Chen", " Byron Cook", " Carsten Fuhs", " Kaustubh Nimkar"]}, {"title": "Termination proofs for linear simple loops", "authors": ["Hong Yi Chen", " Shaked Flur"]}, {"title": "Optimizing database-backed applications with query synthesis", "authors": ["Alvin Cheung", " Arm"]}, {"title": "Logic, arithmetic, automata", "authors": ["Alonzo Church"]}, {"title": "Bounded model checking using satisfiability solving", "authors": ["Edmund Clarke", " Armin Biere", " Richard Raimi"]}, {"title": "Behavioral consistency of C and verilog programs using bounded model checking", "authors": ["Edmund Clarke", " Daniel Kroening"]}, {"title": "Model checking and abstraction", "authors": [" Orna Grumberg"]}, {"title": "Proving termination one loop at a time", "authors": ["Michael Codish "]}, {"title": "Ranking function synthesis for bit-vector relations", "authors": ["Byron Cook", " Daniel Kroening", " Philipp R\u00fcmmer"]}, {"title": "Termination proofs for systems code", "authors": ["Byron Cook", " Andreas Podelski"]}, {"title": "Ramsey vs", "authors": ["Byron Cook", " Abigail See"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Kayak: Safe Semantic Refactoring to Java Streams", "authors": ["Cristina David", " Pascal Kesseli"]}, {"title": "Danger invariants", "authors": ["Cristina David", " Pascal Kesseli", " Daniel Kroening"]}, {"title": "Program synthesis: Challenges and opportunities", "authors": ["Cristina David "]}, {"title": "Unrestricted termination and non-termination arguments for bit-vector programs", "authors": ["Cristina David", " Daniel Kroening"]}, {"title": "Using program synthesis for program analysis", "authors": ["Cristina David", " Daniel Kroening"]}, {"title": "Deciding effectively propositional logic using DPLL and substitution sets", "authors": ["Leonardo Mendon\u00e7a de Moura "]}, {"title": "A general framework for automatic termination analysis of logic programs", "authors": ["Nachum Dershowitz", " Naomi Lindenstrauss", " Yehoshua Sagiv"]}, {"title": "Generalized first-order spectra and polynomial-time recognizable sets", "authors": ["Ronald Fagin"]}, {"title": "Assigning Meanings to Programs", "authors": []}, {"title": "Feedback Control of Dynamic Systems (4th ed", "authors": []}, {"title": "ICE: A Robust Framework for Learning Invariants", "authors": ["Pranav Garg", " Christof L\u00f6ding"]}, {"title": "Inference rules for proving the equivalence of recursive procedures, Time for Verification", "authors": ["Benny Godlin "]}, {"title": "Incremental evolution of complex general behavior", "authors": ["Faustino Gomez "]}, {"title": "Synthesizing software verifiers from proof rules", "authors": ["Sergey Grebenshchikov", " Corneliu Popeea"]}, {"title": "Dimensions in program synthesis", "authors": ["Sumit Gulwani"]}, {"title": "Control-flow refinement and progress invariants for bound analysis", "authors": ["Sumit Gulwani", " Sagar Jain"]}, {"title": "Synthesis of loop-free programs", "authors": ["Sumit Gulwani", " Susmit Jha", " Ashish Tiwari"]}, {"title": "Program analysis as constraint solving", "authors": ["Sumit Gulwani", " Saurabh Srivastava"]}, {"title": "Proving non-termination", "authors": ["Ashutosh Gupta", " Rupak Majumdar", " Andrey Rybalchenko"]}, {"title": "SeaHorn: A framework for verifying C programs (competition contribution)", "authors": ["Arie Gurfinkel", " Temesghen Kahsai"]}, {"title": "SMACK+Corral: A modular verifier (competition contribution)", "authors": ["Arvind Haran", " Montgomery Carter", " Michael Emmi", " Akash Lal", " Shaz Qadeer"]}, {"title": "Alternation for termination", "authors": [" Akash Lal"]}, {"title": "Linear Ranking for Linear Lasso Programs", "authors": ["Matthias Heizmann", " Jochen Hoenicke", " Jan Leike"]}, {"title": "Synthesizing multiple Boolean functions using interpolation on a single proof", "authors": ["Georg Hofferek", " Ashutosh Gupta", " Bettina K\u00f6nighofer", " Jie-Hong Rol"]}, {"title": "JReq: Database queries in imperative languages", "authors": ["Ming-Yee Iu", " Emmanuel Cecchet"]}, {"title": "Oracle-guided component-based program synthesis", "authors": ["Susmit Jha", " Sumit Gulwani"]}, {"title": "Robust, fragile, or optimal? IEEE Transactions on Automatic Control 42, 8 (1997), 1098--1105", "authors": []}, {"title": "Stability margins and digital implementation of controllers", "authors": []}, {"title": "Automatically Inferring Quantified Loop Invariants by Algorithmic Learning from Simple Templates", "authors": ["Soonho Kong", " Yungbum Jung", " Cristina David", " Bow-Yaw Wang"]}, {"title": "Logic program synthesis via proof planning", "authors": ["Ina Kraan", " David Basin"]}, {"title": "Under-approximating loops in C programs for fast counterexample detection", "authors": ["Daniel Kroening", " Matt Lewis"]}, {"title": "Proving safety with trace automata and bounded model checking", "authors": ["Daniel Kroening", " Matt Lewis"]}, {"title": "Termination analysis with compositional transition invariants", "authors": ["Daniel Kroening", " Natasha Sharygina", " Aliaksei Tsitovich"]}, {"title": "Foundations of Genetic Programming", "authors": []}, {"title": "Proving termination of imperative programs using Max-SMT", "authors": ["Daniel Larraz", " Albert Oliveras", " Enric Rodr\u00edguez-Carbonell"]}, {"title": "Toward automatic program synthesis", "authors": []}, {"title": "Lazy abstraction with interpolants", "authors": []}, {"title": "An empirical study of optimizations in yogi", "authors": []}, {"title": "Termination proofs from tests", "authors": []}, {"title": "A complete method for the synthesis of linear ranking functions", "authors": ["Andreas Podelski "]}, {"title": "Transition invariants", "authors": ["Andreas Podelski "]}, {"title": "A foray into conficker\u2019s logic and rendezvous points", "authors": ["Phillip Porras", " Hassen Sa\u00efdi"]}, {"title": "Counterexample-Guided Quantifier Instantiation for Synthesis in SMT", "authors": ["Andrew Reynolds", " Morgan Deters", " Viktor Kuncak", " Cesare Tinelli"]}, {"title": "ARMC", "authors": ["Andrey Rybalchenko"]}, {"title": "Combinatorial sketching for finite programs", "authors": ["Arm", " Liviu Tancau", " Rastislav Bod\u00edk"]}, {"title": "Retrieved November 2014 from http://sv-comp", "authors": ["SV-COMP"]}, {"title": "Retrieved November 2015 from http://sv-comp", "authors": ["SV-COMP"]}, {"title": "On computable numbers with an application to the Entscheidungsproblem", "authors": ["Alan Turing"]}, {"title": "The abstract domain of segmented ranking functions", "authors": ["Caterina Urban"]}, {"title": "Formal analysis of robustness at model and code level", "authors": [" Pierre-Lo\u00efc Garoche", " Pierre Roux", " Romain Jobredeaux"]}, {"title": "Hacker\u2019s Delight", "authors": []}, {"title": "Efficiently solving quantified bit-vector formulas", "authors": [" Youssef Hamadi"]}]},
{"title": "Cross-Language Interoperability in a Multi-Language Runtime", "time": "May 2018", "keyword": ["Programming Languages and Systems"], "abstract": "In large-scale software applications, programmers often combine different programming languages because this allows them to use the most suitable language for a given problem, to gradually migrate existing projects from one language to another, or to reuse existing source code. However, different programming languages have fundamentally different implementations, which are hard to combine. The composition of language implementations often results in complex interfaces between languages, insufficient flexibility, or poor performance.\nWe propose TruffleVM, a virtual machine (VM) that can execute different programming languages and is able to compose them in a seamless way. TruffleVM supports dynamically-typed languages (e.g., JavaScript and Ruby) as well as statically typed low-level languages (e.g., C). It consists of individual language implementations, which translate source code to an intermediate representation that is executed by a shared VM. TruffleVM composes these different language implementations via \n. \n is a language-agnostic mechanism that language implementations use to access foreign data or call foreign functions. It features language-agnostic messages that the TruffleVM resolves to efficient foreign-language-specific operations at runtime. \n supports multiple languages, enables an efficient multi-language development, and ensures high performance.\nWe evaluate \n with two case studies. The first one explains the transparent composition of JavaScript, Ruby, and C. The second one shows an implementation of the C extensions application programming interface (API) for Ruby. We show that \n guarantees good runtime performance. It avoids conversion or marshalling of foreign objects at the language boundary and allows the dynamic compiler to perform its optimizations across language boundaries.\n", "author": [{"name": "Matthias Grimmer", "affiliation": "Oracle Labs, Austria"}, {"name": "Roland Schatz", "affiliation": "Oracle Labs, Austria"}, {"name": "Chris Seaton", "affiliation": "Oracle Labs, United Kingdom"}, {"name": "Thomas W\u00fcrthinger", "affiliation": "Oracle Labs, Switzerland"}, {"name": "Mikel Luj\u00e1n", "affiliation": "University of Manchester, United Kingdom"}, {"name": "Hanspeter M\u00f6ssenb\u00f6ck", "affiliation": "Johannes Kepler University"}, {"name": "Matthias Grimmer", "affiliation": "Oracle Labs, Austria"}, {"name": "Roland Schatz", "affiliation": "Oracle Labs, Austria"}, {"name": "Chris Seaton", "affiliation": "Oracle Labs, United Kingdom"}, {"name": "Thomas W\u00fcrthinger", "affiliation": "Oracle Labs, Switzerland"}, {"name": "Mikel Luj\u00e1n", "affiliation": "University of Manchester, United Kingdom"}, {"name": "Hanspeter M\u00f6ssenb\u00f6ck", "affiliation": "Johannes Kepler University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "5", "references": [{"title": "Dynamic typing in a statically-typed language", "authors": []}, {"title": "A survey of adaptive optimization in virtual machines", "authors": []}, {"title": "Unipycation: A case study in cross-language tracing", "authors": ["Edd Barrett", " Carl Friedrich Bolz"]}, {"title": "Approaches to interpreter composition", "authors": ["Edd Barrett", " Carl Friedrich Bolz"]}, {"title": "Fine-grained language composition", "authors": ["Edd Barrett", " Lukas Diekmann"]}, {"title": "SWIG: An easy to use tool for integrating scripting languages with C and C++", "authors": []}, {"title": "Lightweight remote procedure call", "authors": []}, {"title": "No-longer-foreign: Teaching an ML compiler to speak C natively", "authors": ["Matthias Blume"]}, {"title": "Tracing the meta-level: PyPy\u2019s tracing JIT compiler", "authors": ["Carl Friedrich Bolz", " Antonio Cuni", " Maciej Fijalkowski"]}, {"title": "Essential ", "authors": []}, {"title": "The challenge of cross-language interoperability", "authors": ["David Chisnall"]}, {"title": "Efficient and thread-safe objects for dynamically-typed languages", "authors": ["Benoit Daloze", " Stefan Marr", " Daniele Bonetta"]}, {"title": "Speculation without regret: Reducing deoptimization meta-data in the graal compiler", "authors": ["Gilles Duboscq", " Thomas W\u00fcrthinger"]}, {"title": "An intermediate representation for speculative optimizations in a dynamic compiler", "authors": ["Gilles Duboscq", " Thomas W\u00fcrthinger", " Lukas Stadler", " Christian Wimmer", " Doug Simon"]}, {"title": "Standard ECMA-335", "authors": ["ECMA-International"]}, {"title": "Calling hell from heaven and heaven from hell", "authors": ["Sigbjorn Finne", " Daan Leijen", " Erik Meijer"]}, {"title": "How not to lie with statistics: The correct way to summarize benchmark results", "authors": []}, {"title": "Partial evaluation of computation process\u2014An approach to a compiler-compiler", "authors": ["Yoshihiko Futamura"]}, {"title": "Fine-grained interoperability through mirrors and contracts", "authors": ["Kathryn Gray", " Robert Bruce Findler"]}, {"title": "Safe cross-language inheritance", "authors": []}, {"title": "Applying optimizations for dynamically-typed languages to java", "authors": ["Matthias Grimmer", " Stefan Marr", " Mario Kahlhofer", " Christian Wimmer", " Thomas W\u00fcrthinger"]}, {"title": "TruffleC: Dynamic execution of C on a java virtual machine", "authors": ["Matthias Grimmer", " Manuel Rigger", " Rol", " Lukas Stadler"]}, {"title": "An efficient native function interface for java", "authors": ["Matthias Grimmer", " Manuel Rigger", " Lukas Stadler", " Rol"]}, {"title": "Memory-safe execution of C on a java VM", "authors": ["Matthias Grimmer", " Rol", " Chris Seaton", " Thomas W\u00fcrthinger"]}, {"title": "High-performance cross-language interoperability in a multi-language runtime", "authors": ["Matthias Grimmer", " Chris Seaton", " Rol", " W\u00fcrthinger"]}, {"title": "Dynamically composing languages in a modular way: Supporting C extensions for dynamic languages", "authors": ["Matthias Grimmer", " Chris Seaton", " Thomas W\u00fcrthinger"]}, {"title": "An efficient approach for accessing C data structures from javascript", "authors": ["Matthias Grimmer", " Thomas W\u00fcrthinger", " Andreas W\u00f6\u00df"]}, {"title": "The dynamic language runtime and the iron languages", "authors": ["Jeff Hardy"]}, {"title": "Jeannie: Granting java native interface developers their wishes", "authors": ["Martin Hirzel "]}, {"title": "Optimizing dynamically-typed object-oriented languages with polymorphic inline caches", "authors": ["Urs H\u00f6lzle", " Craig Chambers"]}, {"title": "Debugging optimized code with dynamic deoptimization", "authors": ["Urs H\u00f6lzle", " Craig Chambers"]}, {"title": "C99 Standard: ISO/IEX 9899:TC3", "authors": ["International Organization for St"]}, {"title": "GreenCard: A foreign-language interface for Haskell", "authors": ["Simon Peyton Jones", " Thomas Nordin"]}, {"title": "Rigorous benchmarking in reasonable time", "authors": ["Tomas Kalibera "]}, {"title": "Virtual machines should be invisible", "authors": ["Stephen Kell "]}, {"title": "The layers of Larceny\u2019s foreign function interface", "authors": []}, {"title": "Debug all your code: Portable mixed-environment debugging", "authors": ["Byeongcheol Lee", " Martin Hirzel", " Robert Grimm"]}, {"title": "Java Native Interface: Programmer\u2019s Guide and Reference (1st ed", "authors": ["Sheng Liang"]}, {"title": "The Java Native Interface: Programmer\u2019s Guide and Specification", "authors": ["Sheng Liang"]}, {"title": "Tracing vs", "authors": ["Marr "]}, {"title": "Operational semantics for multi-language programs", "authors": ["Jacob Matthews "]}, {"title": "Technical overview of the common language runtime", "authors": ["Erik Meijer "]}, {"title": "XPCOM Specification", "authors": ["Mozilla Developer Network"]}, {"title": "Common Object Request Brooker Architecture (CORBA) Specification", "authors": ["Object Management Group"]}, {"title": "Application-specific foreign-interface generation", "authors": ["John Reppy "]}, {"title": "Integrating the scheme and C languages", "authors": []}, {"title": "Debugging at full speed", "authors": ["Chris Seaton"]}, {"title": "Thrift: Scalable cross-language services implementation", "authors": ["Mark Slee", " Aditya Agarwal"]}, {"title": "Compilation queuing and graph caching for dynamic compilers", "authors": ["Lukas Stadler", " Gilles Duboscq", " Hanspeter M\u00f6ssenb\u00f6ck"]}, {"title": "An experimental study of the influence of dynamic compiler optimizations on scala performance", "authors": ["Lukas Stadler", " Gilles Duboscq", " Hanspeter M\u00f6ssenb\u00f6ck", " Thomas W\u00fcrthinger"]}, {"title": "Partial escape analysis and scalar replacement for java", "authors": ["Lukas Stadler", " Thomas W\u00fcrthinger"]}, {"title": "Inlining java native calls at runtime", "authors": ["Levon Stepanian", " Angela Demke Brown", " Allan Kielstra", " Gita Koblents"]}, {"title": "2016", "authors": []}, {"title": "Safe and Principled Language Interoperation", "authors": ["Valery Trifonov "]}, {"title": "Overview of the CORBA component model", "authors": ["Nanbor Wang"]}, {"title": "Cross-language, type-safe, and transparent object sharing for co-located managed runtimes", "authors": ["Michal Wegiel "]}, {"title": "ZipPy on truffle: A fast and simple implementation of python", "authors": ["Christian Wimmer "]}, {"title": "An object storage model for the truffle language implementation framework", "authors": ["Andreas W\u00f6\u00df", " Christian Wirth", " Daniele Bonetta", " Chris Seaton", " Christian Humer"]}, {"title": "Integrating typed and untyped code in a scripting language", "authors": ["Tobias Wrigstad", " Francesco Zappa Nardelli", " Sylvain Lebresne", " Johan \u00d6stlund"]}, {"title": "Practical partial evaluation for high-performance dynamic language runtimes", "authors": ["Thomas W\u00fcrthinger", " Christian Wimmer", " Christian Humer", " Andreas W\u00f6\u00df", " Lukas Stadler", " Chris Seaton", " Gilles Duboscq", " Doug Simon"]}, {"title": "One VM to rule them all", "authors": ["Thomas W\u00fcrthinger", " Christian Wimmer", " Andreas W\u00f6\u00df", " Lukas Stadler", " Gilles Duboscq", " Christian Humer", " Gregor Richards", " Doug Simon"]}, {"title": "Self-optimizing AST interpreters", "authors": ["Thomas W\u00fcrthinger", " Andreas W\u00f6\u00df", " Lukas Stadler", " Gilles Duboscq", " Doug Simon"]}, {"title": "Accelerating iterators in optimizing AST interpreters", "authors": ["Wei Zhang", " Per Larsen", " Stefan Brunthaler"]}]},
{"title": "POP-PL: A Patient-Oriented Prescription Programming Language", "time": "July 2018", "keyword": ["Programming Languages and Systems"], "abstract": "A medical prescription is a set of health care instructions that govern the plan of care for an individual patient, which may include orders for drug therapy, diet, clinical assessment, and laboratory testing. Clinicians have long used algorithmic thinking to describe and implement prescriptions but without the benefit of a formal programming language. Instead, medical algorithms are expressed using a natural language patois, flowcharts, or as structured data in an electronic medical record system. The lack of a prescription programming language inhibits expressiveness; results in prescriptions that are difficult to understand, hard to debug, and awkward to reuse; and increases the risk of fatal medical error.\nThis article reports on the design and evaluation of Patient-Oriented Prescription Programming Language (POP-PL), a domain-specific programming language designed for expressing prescriptions. The language is based around the idea that programs and humans have complementary strengths that, when combined properly, can make for safer, more accurate performance of prescriptions. Use of POP-PL facilitates automation of certain low-level vigilance tasks, freeing up human cognition for abstract thinking, compassion, and human communication.\nWe implemented this language and evaluated its design attempting to write prescriptions in the new language and evaluated its usability by assessing whether clinicians can understand and modify prescriptions written in the language. We found that some medical prescriptions can be expressed in a formal domain-specific programming language, and we determined that medical professionals can understand and correctly modify programs written in POP-PL. We also discuss opportunities for refining and further developing POP-PL.\n", "author": [{"name": "Spencer P. Florence", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Burke Fetscher", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Matthew Flatt", "affiliation": "University of Utah, School of Computing"}, {"name": "William H. Temps", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology"}, {"name": "Vincent St-Amour", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Tina Kiguradze", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology"}, {"name": "Dennis P. West", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology 8 Northwestern University Feinberg School of Medicine, Department of Pediatrics "}, {"name": "Charlotte Niznik", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Obstetrics and Gynecology "}, {"name": "Paul R. Yarnold", "affiliation": "Optimal Data Analysis LLC"}, {"name": "Robert Bruce Findler", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Steven M. Belknap", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology 8 Northwestern University Feinberg School of Medicine, Department of Medicine "}, {"name": "Spencer P. Florence", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Burke Fetscher", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Matthew Flatt", "affiliation": "University of Utah, School of Computing"}, {"name": "William H. Temps", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology"}, {"name": "Vincent St-Amour", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Tina Kiguradze", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology"}, {"name": "Dennis P. West", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology 8 Northwestern University Feinberg School of Medicine, Department of Pediatrics "}, {"name": "Charlotte Niznik", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Obstetrics and Gynecology "}, {"name": "Paul R. Yarnold", "affiliation": "Optimal Data Analysis LLC"}, {"name": "Robert Bruce Findler", "affiliation": "Northwestern University, Department of Electrical Engineering and Computer Science"}, {"name": "Steven M. Belknap", "affiliation": "Northwestern University Feinberg School of Medicine, Department of Dermatology 8 Northwestern University Feinberg School of Medicine, Department of Medicine "}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Hypercard Script Language Guide: The Hypertalk Language", "authors": ["Apple Computer", " Inc"]}, {"title": "Application of software design principles and debugging methods to an analgesia prescription reduces risk of severe injury from medical use of opioids", "authors": []}, {"title": "The Chicago Kinetic Simulator", "authors": []}, {"title": "Cognitive Dimensions of Notations: Design Tools for Cognitive Technology", "authors": []}, {"title": "A cognitive dimensions questionnaire optimised for users", "authors": []}, {"title": "The Esterel language", "authors": ["Frederic Boussinot "]}, {"title": "CLEAN\u2014A language for functional graph rewriting", "authors": []}, {"title": "Open heterogeneous computing in ActorSpace", "authors": []}, {"title": "Automatic fault tree derivation from Little-JIL process definitions", "authors": ["Bin Chen"]}, {"title": "Modeling temporal, data-centric medical processes", "authors": ["Carlo Combi", " Mauro Gambini", " Sara Migliorini"]}, {"title": "Preventing Medication Errors: Quality Chasm Series", "authors": ["Committee on Identifying "]}, {"title": "Monitor alarm fatigue: An integrative review", "authors": ["Maria Cvach"]}, {"title": "Guideline for Intravenous Insulin Infusion in the Adult ICU Patient", "authors": ["Division of Endocrinology", " Department of Medicine "]}, {"title": "Labeling of medicines and patient safety: Evaluating methods of reducing drug name confusion", "authors": []}, {"title": "Reference: Racket", "authors": ["Matthew Flatt "]}, {"title": "Future Design Mindful of the MoRAS", "authors": []}, {"title": "Anesthetic mishaps: Breaking the chain of accident evolution", "authors": [" Mary Maxwell"]}, {"title": "The network as a language construct", "authors": ["Tony Garnock-Jones", " Sam Tobin-Hochstadt"]}, {"title": "Tall Man Lettering: Final report of the use of tall man lettering to minimise selection errors of medicine names in computer prescribing and dispensing systems", "authors": ["David Gerrett", " Ruth Filik"]}, {"title": "Smalltalk-80: The Language and Its Implementation", "authors": ["Adele Goldberg "]}, {"title": "Usability analysis of visual programming environments: A \u2018cognitive dimensions\u2019 framework", "authors": []}, {"title": "When Visual Programs are Harder to Read than Textual Programs", "authors": []}, {"title": "Cognitive Dimensions of Notations", "authors": []}, {"title": "American Association of Clinical Endocrinologists medical guidelines for clinical practice for developing a diabetes mellitus comprehensive care plan", "authors": ["Yehuda H", " Lawrence Blonde", " George Grunberger", " Samuel Dagogo-Jack", " Daniel Einhorn", " On G", " Faramarz Ismail-Beigi", " Lios Jovanovi\u010d", " Harold Lebovitz", " Philip Levy"]}, {"title": "Improving the Safety of Heparin Administration by Implementing a Human Factors Process Analysis", "authors": [" Mark Kirschbaum"]}, {"title": "Common Medical Diagnoses: An Algorithmic Approach", "authors": []}, {"title": "A universal modular ACTOR formalism for artificial intelligence", "authors": ["Carl Hewitt", " Peter Bishop"]}, {"title": "Can electronic medical record systems transform health care? Potential health benefits, savings, and costs", "authors": ["Richard Hillestad", " James Bigelow", " Anthony Bower", " Federico Girosi", " Robin Meili", " Richard Scoville"]}, {"title": "A new, evidence-based estimate of patient harms associated with hospital care", "authors": []}, {"title": "Embedding a web-based workflow management system in a functional language", "authors": ["Jan Martin Jansen", " Rinus Plasmeijer", " Pieter Koopman"]}, {"title": "Health information technology: An updated systematic review with a focus on meaningful use", "authors": [" Tanja Perry"]}, {"title": "iALARM: An intelligent alert language for activation, response, and monitoring of medical alerts", "authors": ["Denis Kilmov "]}, {"title": "Some implications of patient-oriented health care", "authors": []}, {"title": "The state of the art in enduser software engineering", "authors": [" Robin Abraham", " Laura Beckwith", " Alan Blackwell", " Margaret Burnett", " Martin Erwig", " Chris Scaffidi", " Brad Myers", " Mary Beth Rosson", " Gregg Rothermel"]}, {"title": "Role of computerized physician order entry systems in facilitating medication errors", "authors": ["Ross Koppel", " Metlay Cohen", " Brian Abaluck", " Russell Localio"]}, {"title": "Temporal trends in rates of Ppatient harm resulting from medical care", "authors": []}, {"title": "Error in medicine", "authors": []}, {"title": "Preventing medical injury", "authors": []}, {"title": "Variations in hospital worker perceptions of safety culture", "authors": ["Tita Alissa Listyowardojo"]}, {"title": "TurKit: Human Computation Algorithms on Mechanical Turk", "authors": ["Greg Little", " Max Goldman"]}, {"title": "The minimum effective analgetic blood concentration of pethidine in patients with intractable pain", "authors": []}, {"title": "Using process elicitation and validation to understand and improve chemotherapy ordering and delivery", "authors": []}, {"title": "GLARE: A Domain-Independent System for Acquiring, Representing and Executing Clinical Guidelines", "authors": ["Gianpaolo Molino", " Paolo Terenziani", " Stefania Montani", " Alessio Bottrighi"]}, {"title": "Decision Making in Medicine (3rd ed", "authors": []}, {"title": "A Small Matter of Programming: Perspectives on End User Computing", "authors": []}, {"title": "Using HCI Techniques to Design a More Usable Programming System", "authors": []}, {"title": "Studying the language and structure in nonprogrammers\u2019 solutions to programming problems", "authors": [" Chotirat Ann Ratanamahatana"]}, {"title": "GLIF3: The evolution of a guideline representation format", "authors": ["Mor Peleg", " Omolola Ogunyemi", " Qin Zeng", " Samson Tu", " Ronilda Lacson", " Elmer Bernstam", " Nachman Ash", " Peter Mork", " Lucila Ohno-Machado"]}, {"title": "A comparison of pain measurement characteristics of mechanical visual analogue and simple numerical rating scales", "authors": [" Stephen Long"]}, {"title": "The validation of visual analogue scales as ratio scale measurments for chronic and experimental pain", "authors": [" Amir Rafii"]}, {"title": "A taxonomy of current issues in requirements engineering", "authors": ["Gruia-Catalin Roman"]}, {"title": "Process Management in Health Care: A System for Preventing Risks and Medical Errors", "authors": ["Massimo Ruffolo", " Rosario Curia"]}, {"title": "Declarative Interaction Design for Data Visualization", "authors": ["Arvind Satyanarayan", " Kanit Wongsuphasawat"]}, {"title": "The hazards of hospitalization", "authors": []}, {"title": "The Asgaard project: a task-specific framework for the application and critiquing of time-oriented clinical guidelines", "authors": ["Yuval Sharar", " Silvia Miksch"]}, {"title": "Psychological evaluation of two conditional constructs used in computer languages", "authors": []}, {"title": "Patient safety climate in 92 US hospitals: Differences by work area and discipline", "authors": [" Alyson Falwell", " Shoutzu Lin", " Jennifer Hayes"]}, {"title": "Prescription errors and outcomes related to inconsistent information transmitted through computerized order entry: A prospective study", "authors": ["Hardeep Singh", " Shrinidi Mani", " Donna Espadas", " Nancy Petersen", " Veronica Franklin"]}, {"title": "An empirical comparison of the accuracy rates of novices using the Quorum, Perl, and Randomo programming languages", "authors": ["Andreas Stefik", " Susanna Siebert", " Melissa Stefik"]}, {"title": "Implementation of the ottawa ankle rules", "authors": [" Ian McDowell", " Cristine Johns"]}, {"title": "A randomized trial of intensive versus standard blood-pressure control", "authors": ["The SPRINT Research Group"]}, {"title": "A flexible approach to guideline modeling", "authors": []}, {"title": "Declarative workflows: Balancing between flexibility and support", "authors": []}, {"title": "Busisness Process Management: A Survey", "authors": []}, {"title": "Weight-Based beparin orders", "authors": ["Washington Adventist Hospital"]}, {"title": "Visual Programming Languages and the Empirical Evidence For and Against", "authors": []}, {"title": "Optimal Data Analysis: A Guidebook With Software for Windows", "authors": []}, {"title": "Maximizing Predictive Accuracy", "authors": []}]},
{"title": "Algorithms for Algebraic Path Properties in Concurrent Systems of Constant Treewidth Components", "time": "July 2018", "keyword": ["Programming Languages and Systems"], "abstract": "We study algorithmic questions wrt algebraic path properties in concurrent systems, where the transitions of the system are labeled from a complete, closed semiring. The algebraic path properties can model dataflow analysis problems, the shortest path problem, and many other natural problems that arise in program analysis. We consider that each component of the concurrent system is a graph with constant treewidth, a property satisfied by the controlflow graphs of most programs. We allow for multiple possible queries, which arise naturally in demand driven dataflow analysis. The study of multiple queries allows us to consider the tradeoff between the resource usage of the \n preprocessing and for \n query. The traditional approach constructs the product graph of all components and applies the best-known graph algorithm on the product. In this approach, even the answer to a single query requires the transitive closure (i.e., the results of all possible queries), which provides no room for tradeoff between preprocessing and query time.\nOur main contributions are algorithms that significantly improve the worst-case running time of the traditional approach, and provide various tradeoffs depending on the number of queries. For example, in a concurrent system of two components, the traditional approach requires hexic time in the worst case for answering one query as well as computing the transitive closure, whereas we show that with one-time preprocessing in almost cubic time, each subsequent query can be answered in at most linear time, and even the transitive closure can be computed in almost quartic time. Furthermore, we establish conditional optimality results showing that the worst-case running time of our algorithms cannot be improved without achieving major breakthroughs in graph algorithms (i.e., improving the worst-case bound for the shortest path problem in general graphs). Preliminary experimental results show that our algorithms perform favorably on several benchmarks.\n", "author": [{"name": "Krishnendu Chatterjee", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Rasmus Ibsen-Jensen", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Amir Kafshdar Goharshady", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Andreas Pavlogiannis", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Krishnendu Chatterjee", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Rasmus Ibsen-Jensen", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Amir Kafshdar Goharshady", "affiliation": "IST Austria, Klosterneuburg, Austria"}, {"name": "Andreas Pavlogiannis", "affiliation": "IST Austria, Klosterneuburg, Austria"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "Popular conjectures imply strong lower bounds for dynamic problems", "authors": ["Amir Abboud "]}, {"title": "Matching triangles and basing hardness on an extremely popular conjecture", "authors": ["Amir Abboud", " Virginia Vassilevska Williams"]}, {"title": "Communicating hierarchical state machines", "authors": ["Rajeev Alur", " Sampath Kannan"]}, {"title": "Linear time algorithms for NP-hard problems restricted to partial k-trees", "authors": ["Stefan Arnborg "]}, {"title": "The method of attributes for data flow analysis", "authors": []}, {"title": "On a routing problem", "authors": []}, {"title": "Linear-time computation of optimal subgraphs of decomposable graphs", "authors": []}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": []}, {"title": "Discovering treewidth", "authors": []}, {"title": "Dynamic programming on graphs with bounded treewidth", "authors": []}, {"title": "A tourist guide through treewidth", "authors": []}, {"title": "A linear-time algorithm for finding tree-decompositions of small treewidth", "authors": []}, {"title": "Parallel algorithms with optimal speedup for bounded treewidth", "authors": []}, {"title": "Reachability analysis of multithreaded software with asynchronous communication", "authors": ["Ahmed Bouajjani", " Javier Esparza", " Stefan Schwoon"]}, {"title": "A generic approach to the static analysis of concurrent programs with procedures", "authors": ["Ahmed Bouajjani", " Javier Esparza"]}, {"title": "Infinite runs in weighted timed automata with energy constraints", "authors": ["Patricia Bouyer", " Uli Fahrenberg", " Nicolas Markey"]}, {"title": "On the tree width of ada programs", "authors": ["Bernd Burgstaller", " Johann Blieberger"]}, {"title": "From non-preemptive to preemptive scheduling using synchronization synthesis", "authors": ["Pavol Cerny", " Arjun Radhakrishna", " Leonid Ryzhyk", " Roopsha Samanta"]}, {"title": "Quantitative abstraction refinement", "authors": ["Pavol Cerny"]}, {"title": "Quantitative languages", "authors": ["Krishnendu Chatterjee", " Laurent Doyen"]}, {"title": "Algorithms for algebraic path properties in concurrent systems of constant treewidth components", "authors": ["Krishnendu Chatterjee", " Amir Kafshdar Goharshady", " Rasmus Ibsen-Jensen"]}, {"title": "Faster algorithms for quantitative verification in constant treewidth graphs", "authors": ["Krishnendu Chatterjee", " Rasmus Ibsen-Jensen"]}, {"title": "Faster algorithms for algebraic path properties in recursive state machines with constant treewidth", "authors": ["Krishnendu Chatterjee", " Rasmus Ibsen-Jensen", " Andreas Pavlogiannis"]}, {"title": "Faster algorithms for Markov decision processes with low treewidth", "authors": []}, {"title": "Quantitative interprocedural analysis", "authors": ["Krishnendu Chatterjee", " Andreas Pavlogiannis"]}, {"title": "Shortest paths in digraphs of small treewidth", "authors": []}, {"title": "Dataflow analysis for concurrent programs using datarace detection", "authors": ["Ravi Chugh", " Ranjit Jhala"]}, {"title": "Graph rewriting: An algebraic and logic approach", "authors": ["Brouno Courcelle"]}, {"title": "Dataflow analysis for datarace-free programs", "authors": ["Arnab De", " Deepak D\u2019Souza"]}, {"title": "Demand-driven computation of interprocedural data flow", "authors": ["Evelyn Duesterwald", " Rajiv Gupta"]}, {"title": "Flow analysis for verifying properties of concurrent software systems", "authors": []}, {"title": "Logspace versions of the theorems of bodlaender and courcelle", "authors": []}, {"title": "Inductive data flow graphs", "authors": ["Azadeh Farzan", " Zachary Kincaid"]}, {"title": "Causal dataflow analysis for concurrent programs", "authors": []}, {"title": "Algorithm 97: Shortest path", "authors": []}, {"title": "Network Flow Theory", "authors": []}, {"title": "Data flow equations for explicitly parallel programs", "authors": ["Dirk Grunwald "]}, {"title": "The treewidth of java programs", "authors": []}, {"title": "S-functions for graphs", "authors": ["Rudolf Halin"]}, {"title": "On the complexity of verifying concurrent transition systems", "authors": ["David Harel", " Orna Kupferman"]}, {"title": "Fast algorithms for finding nearest common ancestors", "authors": []}, {"title": "Unifying and strengthening hardness for dynamic problems via the online matrix-vector multiplication conjecture", "authors": ["Monika Henzinger", " Sebastian Krinninger", " Danupon Nanongkai"]}, {"title": "Demand interprocedural dataflow analysis", "authors": ["Susan Horwitz", " Thomas Reps"]}, {"title": "Efficient algorithms for shortest paths in sparse networks", "authors": []}, {"title": "Static analysis for concurrent programs with applications to data race detection", "authors": ["Vineet Kahlon", " Sriram Sankaranarayanan"]}, {"title": "Static data race detection for concurrent programs with asynchronous calls", "authors": ["Vineet Kahlon", " Nishant Sinha", " Erik Kruus"]}, {"title": "A characterization of the minimum cycle mean in a digraph", "authors": []}, {"title": "A unified approach to global program optimization", "authors": []}, {"title": "Representation of events in nerve nets and finite automata", "authors": []}, {"title": "Parallelism for free: Efficient and optimal bitvector analyses for parallel programs", "authors": ["Jens Knoop", " Bernhard Steffen"]}, {"title": "Optimal register allocation in polynomial time", "authors": ["Philipp Klaus Krause"]}, {"title": "Context-bounded analysis of concurrent queue systems", "authors": ["Salvatore La Torre"]}, {"title": "A solver for reachability modulo theories", "authors": ["Akash Lal", " Shaz Qadeer"]}, {"title": "Reducing concurrent analysis under a context bound to sequential analysis", "authors": ["Akash Lal "]}, {"title": "Interprocedural analysis of concurrent programs under a context bound", "authors": ["Akash Lal", " Tayssir Touili", " Nicholas Kidd"]}, {"title": "Combinatorial Optimization: Networks and Matroids", "authors": ["Eugene Lawler"]}, {"title": "Algebraic structures for transitive closure", "authors": []}, {"title": "The tree width of auxiliary storage", "authors": []}, {"title": "Practical extensions to the IFDS algorithm", "authors": [" Ond\u0159ej Lhot\u00e1k"]}, {"title": "Fast Mu-calculus model checking when tree-width is bounded", "authors": ["Jan Obdrz\u00e1lek"]}, {"title": "Context-bounded model checking of concurrent software", "authors": ["Shaz Qadeer "]}, {"title": "Finding approximate separators and computing tree width quickly", "authors": []}, {"title": "Demand interprocedural program analysis using logic databases", "authors": []}, {"title": "Program analysis via graph reachability", "authors": ["Thomas Reps"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Thomas Reps", " Susan Horwitz"]}, {"title": "Graph minors", "authors": []}, {"title": "Precise interprocedural dataflow analysis with applications to constant propagation", "authors": ["Mooly Sagiv", " Thomas Reps"]}, {"title": "Symbolic context-bounded analysis of multithreaded java programs", "authors": ["Dejvuth Suwimonteerabuth", " Javier Esparza"]}, {"title": "All structured programs have small tree width and good register allocation", "authors": ["Mikkel Thorup"]}, {"title": "Soot - A java bytecode optimization framework", "authors": ["Raja Vall\u00e9e-Rai", " Phong Co", " Etienne Gagnon", " Laurie Hendren", " Patrick Lam"]}, {"title": "Computing Treewidth with LibTW", "authors": ["Thomas van Dijk", " Jan-Pieter van den Heuvel"]}, {"title": "Error bounds for convolutional codes and an asymptotically optimum decoding algorithm", "authors": []}, {"title": "A theorem on boolean matrices", "authors": ["Stephen Warshall"]}, {"title": "The worst-case execution-time problem - Overview of methods and survey of tools", "authors": ["Reinhard Wilhelm", " Jakob Engblom", " Andreas Ermedahl", " Niklas Holsti", " Stephan Thesing", " Guillem Bernat", " Christian Ferdin", " Reinhold Heckmann", " Tulika Mitra", " Frank Mueller", " Isabelle Puaut", " Jan Staschulat"]}, {"title": "Demand-driven context-sensitive alias analysis for java", "authors": ["Dacong Yan", " Guoqing Xu"]}, {"title": "Demand-driven data flow analysis for communication optimization", "authors": ["Xin Yuan", " Rajiv Gupta"]}, {"title": "Incremental data flow analysis in a structured program editor", "authors": ["Frank Kenneth Zadeck"]}]},
{"title": "Modular Termination Verification of Single-Threaded and Multithreaded Programs", "time": "July 2018", "keyword": ["Programming Languages and Systems"], "abstract": "We propose an approach for the modular specification and verification of total correctness properties of object-oriented programs. The core of our approach is a \n that prescribes a way to assign a \n to each method such that each callee\u2019s level is below the caller\u2019s, even in the presence of dynamic binding. The specification style yields specifications that properly hide implementation details. The main idea is to use \n as levels, and to associate with each object levels that abstractly reflect the way the object is built from other objects. A method\u2019s level is then defined in terms of the method\u2019s own name and the levels associated with the objects passed as arguments.\nWe first present the specification style in the context of programs that do not modify object fields. We then combine it with separation logic and abstract predicate families to obtain an approach for programs with heap mutation. In a third step, we address concurrency, by incorporating an existing approach for verifying deadlock freedom of channels and locks. Our main contribution here is to achieve information hiding by using the proposed termination levels for lock ordering as well. Also, we introduce \n to enable elegant verification of termination of programs where threads cause work in other threads, such as in thread pools or fine-grained concurrent algorithms involving compare-and-swap loops.\nWe explain how our approach can be used also to verify the liveness of nonterminating programs.\n", "author": [{"name": "Bart Jacobs", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Dragan Bosnacki", "affiliation": "Eindhoven University of Technology, The Netherlands"}, {"name": "Ruurd Kuiper", "affiliation": "Eindhoven University of Technology, The Netherlands"}, {"name": "Bart Jacobs", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Dragan Bosnacki", "affiliation": "Eindhoven University of Technology, The Netherlands"}, {"name": "Ruurd Kuiper", "affiliation": "Eindhoven University of Technology, The Netherlands"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Amortised resource analysis with separation logic", "authors": ["Robert Atkey"]}, {"title": "Permission accounting in separation logic", "authors": ["Richard Bornat", " Cristiano Calcagno"]}, {"title": "Modular verification of finite blocking in non-terminating programs", "authors": ["Pontus Bostr\u00f6m "]}, {"title": "Checking interference with fractional permissions", "authors": ["John Boyl"]}, {"title": "Characteristic formulae for the verification of imperative programs", "authors": ["Arthur Chargu\u00e9raud"]}, {"title": "Machine-checked verification of the correctness and amortized complexity of an efficient union-find implementation", "authors": ["Arthur Chargu\u00e9raud "]}, {"title": "Modular termination verification for non-blocking concurrency", "authors": ["Pedro da Rocha Pinto", " Thomas Dinsdale-Young", " Philippa Gardner"]}, {"title": "Reasoning about method calls in interface specifications", "authors": ["\u00c1d\u00e1m Darvas "]}, {"title": "Proving termination with multiset orderings", "authors": ["Nachum Dershowitz "]}, {"title": "Quantitative reasoning for proving lock-freedom", "authors": ["Jan Hoffmann", " Michael Marmar"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Atsushi Igarashi"]}, {"title": "Provably live exception handling", "authors": ["Bart Jacobs"]}, {"title": "Modular Termination Verification: Machine-Checked Proofs", "authors": ["Bart Jacobs"]}, {"title": "VeriFast 18", "authors": []}, {"title": "Modular termination verification", "authors": ["Bart Jacobs", " Dragan Bosnacki"]}, {"title": "Modular Termination Verification: Extended Version", "authors": ["Bart Jacobs", " Dragan Bosnacki"]}, {"title": "Failboxes: Provably safe exception handling", "authors": ["Bart Jacobs "]}, {"title": "Koka: Programming with row polymorphic effect types", "authors": ["Daan Leijen"]}, {"title": "Dafny: An automatic program verifier for functional correctness", "authors": []}, {"title": "Proving consistency of pure methods and model fields", "authors": []}, {"title": "Deadlock-free channels and locks", "authors": [" Peter M\u00fcller"]}, {"title": "Trace-based coinductive operational semantics for while", "authors": ["Keiko Nakata "]}, {"title": "Local reasoning about programs that alter data structures", "authors": []}, {"title": "Separation logic and abstraction", "authors": []}, {"title": "Sound, modular and compositional verification of the input/output behavior of programs", "authors": ["Willem Penninckx", " Bart Jacobs"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": []}, {"title": "Checking well-formedness of pure-method specifications", "authors": ["Arsenii Rudich", " \u00c1d\u00e1m Darvas"]}, {"title": "Concurrent separation logic and operational semantics", "authors": ["Viktor Vafeiadis"]}, {"title": "Featherweight VeriFast", "authors": ["Fr\u00e9d\u00e9ric Vogels", " Bart Jacobs"]}]},
{"title": "Verifying Custom Synchronization Constructs Using Higher-Order Separation Logic", "time": "January 2016", "keyword": ["Programming Languages and Systems"], "abstract": "Synchronization constructs lie at the heart of any reliable concurrent program. Many such constructs are standard (e.g., locks, queues, stacks, and hash-tables). However, many concurrent applications require custom synchronization constructs with special-purpose behavior. These constructs present a significant challenge for verification. Like standard constructs, they rely on subtle racy behavior, but unlike standard constructs, they may not have well-understood abstract interfaces. As they are custom built, such constructs are also far more likely to be unreliable.\nThis article examines the formal specification and verification of custom synchronization constructs. Our target is a library of channels used in automated parallelization to enforce sequential behavior between program statements. Our high-level specification captures the conditions necessary for correct execution; these conditions reflect program dependencies necessary to ensure sequential behavior. We connect the high-level specification with the low-level library implementation to prove that a client\u2019s requirements are satisfied. Significantly, we can reason about program and library correctness without breaking abstraction boundaries.\nTo achieve this, we use a program logic called iCAP (impredicative Concurrent Abstract Predicates) based on separation logic. iCAP supports both high-level abstraction and low-level reasoning about races. We use this to show that our high-level channel specification abstracts three different, increasingly complex low-level implementations of the library. iCAP\u2019s support for higher-order reasoning lets us prove that sequential dependencies are respected, while iCAP\u2019s next-generation semantic model lets us avoid ugly problems with cyclic dependencies.\n", "author": [{"name": "Mike Dodds", "affiliation": "University of York, York, UK"}, {"name": "Suresh Jagannathan", "affiliation": "Purdue University, Indiana, USA"}, {"name": "Matthew J. Parkinson", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Kasper Svendsen", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Lars Birkedal", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Mike Dodds", "affiliation": "University of York, York, UK"}, {"name": "Suresh Jagannathan", "affiliation": "Purdue University, Indiana, USA"}, {"name": "Matthew J. Parkinson", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Kasper Svendsen", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Lars Birkedal", "affiliation": "Aarhus University, Aarhus, Denmark"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "11", "references": [{"title": "Concurrent separation logic for pipelined parallelization", "authors": []}, {"title": "Grace: Safe multithreaded programming for C/C++", "authors": []}, {"title": "First steps in synthetic guarded domain theory: Step-indexing in the topos of trees", "authors": []}, {"title": "A type and effect system for deterministic parallel Java", "authors": []}, {"title": "Permission accounting in separation logic", "authors": []}, {"title": "Resource-sensitive synchronization inference by abduction", "authors": []}, {"title": "A simple abstraction for complex concurrent indexes", "authors": []}, {"title": "TaDA: A logic for time and data abstraction", "authors": []}, {"title": "Concurrent abstract predicates", "authors": []}, {"title": "Deny-guarantee reasoning", "authors": []}, {"title": "Modular reasoning for deterministic parallelism", "authors": []}, {"title": "On the relationship between concurrent separation logic and assume-guarantee reasoning", "authors": []}, {"title": "Local reasoning for storable locks and threads", "authors": []}, {"title": "Reasoning about Java\u2019s reentrant locks", "authors": []}, {"title": "Separation logic semantics for communicating processes", "authors": []}, {"title": "Oracle semantics for concurrent separation logic", "authors": []}, {"title": "Modular Full Functional Specification and Verification of Lock-Free Data Structures", "authors": []}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": "Verifying event-driven programs using ramified frame properties", "authors": []}, {"title": "Deadlock-free channels and locks", "authors": []}, {"title": "Communicating state transition systems for fine-grained concurrent resources", "authors": []}, {"title": "Quasi-static scheduling for safe futures", "authors": []}, {"title": "Resources, concurrency and local reasoning", "authors": []}, {"title": "Separation logic and abstraction", "authors": []}, {"title": "Semantic foundations of Jade", "authors": []}, {"title": "Impredicative concurrent abstract predicates", "authors": []}, {"title": "Impredicative Concurrent Abstract Predicates", "authors": []}, {"title": "Joins: A case study in modular specification of a concurrent reentrant higher-order library", "authors": []}, {"title": "Unifying refinement and hoare-style reasoning in a logic for higher-order concurrency", "authors": []}, {"title": "Modular Fine-Grained Concurrency Verification", "authors": []}, {"title": "A marriage of rely/guarantee and separation logic", "authors": []}, {"title": "Tracking heaps that hop with heap-hop", "authors": []}, {"title": "Safe futures for Java", "authors": []}, {"title": "Explicit stabilisation for modular rely-guarantee reasoning", "authors": []}]},
{"title": "An Abstract Interpretation-Based Model of Tracing Just-in-Time Compilation", "time": "January 2016", "keyword": ["Programming Languages and Systems"], "abstract": "Tracing just-in-time compilation is a popular compilation technique for the efficient implementation of dynamic languages, which is commonly used for JavaScript, Python, and PHP. It relies on two key ideas. First, it monitors program execution in order to detect so-called hot paths, that is, the most frequently executed program paths. Then, hot paths are optimized by exploiting some information on program stores that is available and therefore gathered at runtime. The result is a residual program where the optimized hot paths are guarded by sufficient conditions ensuring some form of equivalence with the original program. The residual program is persistently mutated during its execution, for example, to add new optimized hot paths or to merge existing paths. Tracing compilation is thus fundamentally different from traditional static compilation. Nevertheless, despite the practical success of tracing compilation, very little is known about its theoretical foundations. We provide a formal model of tracing compilation of programs using abstract interpretation. The monitoring phase (viz., hot path detection) corresponds to an abstraction of the trace semantics of the program that captures the most frequent occurrences of sequences of program points together with an abstraction of their corresponding stores, for example, a type environment. The optimization phase (viz., residual program generation) corresponds to a transform of the original program that preserves its trace semantics up to a given observation as modeled by some abstraction. We provide a generic framework to express dynamic optimizations along hot paths and to prove them correct. We instantiate it to prove the correctness of dynamic type specialization and constant variable folding. We show that our framework is more general than the model of tracing compilation introduced by Guo and Palsberg [2011], which is based on operational bisimulations. In our model, we can naturally express hot path reentrance and common optimizations like dead-store elimination, which are either excluded or unsound in Guo and Palsberg\u2019s framework.\n", "author": [{"name": "Stefano Dissegna", "affiliation": "University of Padova, Padova, Italy"}, {"name": "Francesco Logozzo", "affiliation": "Facebook Inc., WA, USA"}, {"name": "Francesco Ranzato", "affiliation": "University of Padova, Padova, Italy"}, {"name": "Stefano Dissegna", "affiliation": "University of Padova, Padova, Italy"}, {"name": "Francesco Logozzo", "affiliation": "Facebook Inc., WA, USA"}, {"name": "Francesco Ranzato", "affiliation": "University of Padova, Padova, Italy"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "The Hiphop virtual machine", "authors": []}, {"title": "Dynamo: A transparent dynamic optimization system", "authors": []}, {"title": "Abstract interpretation of trace semantics for concurrent calculi", "authors": []}, {"title": "Pycket: A tracing JIT for a functional language", "authors": []}, {"title": "SPUR: A trace-based JIT compiler for CIL", "authors": []}, {"title": "Generalized just-in-time trace compilation using a parallel task farm in a dynamic binary translator", "authors": []}, {"title": "Allocation removal by partial evaluation in a tracing JIT", "authors": []}, {"title": "Tracing the meta-level: PyPy\u2019s tracing JIT compiler", "authors": []}, {"title": "Trace-based program analysis", "authors": []}, {"title": "Constructive design of a hierarchy of semantics of a transition system by abstract interpretation (Extended Abstract)", "authors": []}, {"title": "Constructive design of a hierarchy of semantics of a transition system by abstract interpretation", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": []}, {"title": "Systematic design of program analysis frameworks", "authors": []}, {"title": "Systematic design of program transformation frameworks by abstract interpretation", "authors": []}, {"title": "Tracing compilation by abstract interpretation", "authors": []}, {"title": "Standard ECMA-262, ECMAScript 2015 Language Specification (6th ed", "authors": ["Ecma International"]}, {"title": "The HipHop Virtual Machine", "authors": ["Facebook Inc"]}, {"title": "Trace-based just-in-time type specialization for dynamic languages", "authors": []}, {"title": "HotPathVM: An effective JIT compiler for resource-constrained devices", "authors": []}, {"title": "A New Crankshaft for V8", "authors": ["Google Inc"]}, {"title": "The essence of compiling with traces", "authors": []}, {"title": "Refining static analyses by trace-based partitioning using control flow", "authors": []}, {"title": "Trace-based compilation for the Java HotSpot virtual machine", "authors": []}, {"title": "Trace transitioning and exception handling in a trace-based JIT compiler for Java", "authors": []}, {"title": "A trace-based Java JIT compiler retrofitted from a method-based compiler", "authors": [" Peng Wu"]}, {"title": "Class invariants as abstract interpretation of trace semantics", "authors": []}, {"title": "Communication and Concurrency", "authors": []}, {"title": "TraceMonkey", "authors": ["Mozilla Foundation"]}, {"title": "IonMonkey", "authors": ["Mozilla Foundation"]}, {"title": "The LuaJIT Project", "authors": []}, {"title": "Symbolic transfer function-based approaches to certified compilation", "authors": []}, {"title": "The trace partitioning abstract domain", "authors": []}, {"title": "Trace-Based Just-In-Time Compilation for Lazy Functional Programming Languages", "authors": []}, {"title": "Trace-based abstract interpretation of operational semantics", "authors": []}, {"title": "Class analyses as abstract interpretations of trace semantics", "authors": []}, {"title": "Constant propagation with conditional branches", "authors": []}]},
{"title": "Thinking Inside the Box: Compartmentalized Garbage Collection", "time": "April 2016", "keyword": ["Programming Languages and Systems"], "abstract": "The web browser is the \u201cnew desktop.\u201d Not only do many users spend most of their time using the browser, the browser has also become host to rich and dynamic applications that were previously tailored to each individual operating system. The lingua franca of web scripting, JavaScript, was pivotal in this development.\nImagine that all desktop applications allocated memory from a single heap managed by the operating system. To reclaim memory upon application shutdown, all processes would then be garbage collected\u2014not just the one being quit. While operating systems improved upon this approach long ago, this was how browsers managed memory until recently.\nThis article explores \n memory management, an approach tailored specifically to web browsers. The idea is to partition the JavaScript heap into compartments and allocate objects to compartments based on their origin. All objects in the same compartment reference each other direct, whereas cross-origin references go through wrapper objects.\nWe carefully evaluate our techniques using Mozilla\u2019s Firefox browser\u2014which now ships with our enhancements\u2014and demonstrate the benefits of collecting each compartment independently. This simultaneously improves runtime performance (up to 36%) and reduces garbage collection pause times (up to 75%) as well as the memory footprint of the browser. In addition, enforcing the same-origin security policy becomes simple and efficient with compartments.\n", "author": [{"name": "Gregor Wagner", "affiliation": "Mozilla Corporation, Berlin, Germany"}, {"name": "Per Larsen", "affiliation": "University of California, Irvine, Irvine, CA"}, {"name": "Stefan Brunthaler", "affiliation": "University of California, Irvine, Irvine, CA"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine, Irvine, CA"}, {"name": "Gregor Wagner", "affiliation": "Mozilla Corporation, Berlin, Germany"}, {"name": "Per Larsen", "affiliation": "University of California, Irvine, Irvine, CA"}, {"name": "Stefan Brunthaler", "affiliation": "University of California, Irvine, Irvine, CA"}, {"name": "Michael Franz", "affiliation": "University of California, Irvine, Irvine, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Garbage collecting the Internet: A survey of distributed garbage collection", "authors": []}, {"title": "Better static memory management: Improving region-based analysis of higher-order languages", "authors": ["Alex", " Manuel F\u00e4hndrich"]}, {"title": "Simple generational garbage collection and fast allocation", "authors": []}, {"title": "The WebKit Open Source Project", "authors": ["Apple"]}, {"title": "Tracing garbage collection on highly parallel platforms", "authors": ["Katherine Barabash "]}, {"title": "Using lifetime predictors to improve memory allocation performance", "authors": []}, {"title": "Garbage collection using a dynamic threatening boundary", "authors": []}, {"title": "Hoard: A scalable memory allocator for multithreaded applications", "authors": []}, {"title": "Reconsidering custom memory allocation", "authors": []}, {"title": "Beltway: Getting around garbage collection gridlock", "authors": [" Richard Jones"]}, {"title": "Pretenuring for Java", "authors": [" Sharad Singhai", " Matthew Hertz"]}, {"title": "On bounding time and space for multiprocessor garbage collection", "authors": []}, {"title": "Scheduling multithreaded computations by work stealing", "authors": []}, {"title": "Ropes: An alternative to strings", "authors": [" Russ Atkinson"]}, {"title": "A parallel, real-time garbage collector", "authors": []}, {"title": "Using generational garbage collection to implement cache-conscious data placement", "authors": []}, {"title": "Thread-local heaps for Java", "authors": ["Tamar Domani", " Gal Goldshtein", " Ethan Lewis", " Erez Petrank"]}, {"title": "A study of tabbed browsing among Mozilla Firefox users", "authors": ["Patrick Dubroy "]}, {"title": "A scalable mark-sweep garbage collector on large-scale shared-memory machines", "authors": ["Toshio Endo", " Kenjiro Taura"]}, {"title": "Parallel garbage collection for shared memory multiprocessors", "authors": [" David Detlefs", " Nir Shavit"]}, {"title": "Trace-based just-in-time type specialization for dynamic languages", "authors": ["Andreas Gal", " Brendan Eich", " Mike Shaver", " David Anderson", " David M", " Blake Kaplan", " Graydon Hoare", " Boris Zbarsky", " Jason Orendorff", " Jesse Ruderman", " Rick Reitmaier", " Michael Bebenita", " Mason Chang"]}, {"title": "Introducing Google Chrome OS", "authors": ["Google"]}, {"title": "Chrome V8 - Efficient Garbage Collection", "authors": ["Google"]}, {"title": "Improving the cache locality of memory allocation", "authors": ["Dirk Grunwald", " Benjamin Zorn"]}, {"title": "Finding your cronies: Static analysis for dynamic object colocation", "authors": []}, {"title": "Fast and precise hybrid type inference for JavaScript", "authors": ["Brian Hackett "]}, {"title": "Storage management for an implementation of SNOBOL4", "authors": []}, {"title": "Fast allocation and deallocation of memory based on object lifetimes", "authors": []}, {"title": "Using key object opportunism to collect old objects", "authors": ["Barry Hayes"]}, {"title": "Understanding the connectivity of heap objects", "authors": ["Martin Hirzel", " Johannes Henkel", " Amer Diwan"]}, {"title": "Optimizing dynamically-typed object-oriented languages with polymorphic inline caches", "authors": ["Urs H\u00f6lzle", " Craig Chambers"]}, {"title": "The garbage collection advantage: Improving program locality", "authors": ["Xianglong Huang", " Zhenlin Wang"]}, {"title": "Incremental collection of mature objects", "authors": []}, {"title": "A semi-incremental garbage collection algorithm", "authors": []}, {"title": "Using the RDTSC Instruction for Performance Monitoring", "authors": ["Intel"]}, {"title": "Non-Compacting Memory Allocation and Real-Time Garbage Collection", "authors": ["Mark Stuart Johnstone"]}, {"title": "The memory fragmentation problem: Solved? In Proceedings of the International Symposium on Memory Management (ISMM\u201998)", "authors": []}, {"title": "The Garbage Collection Handbook: The Art of Automatic Memory Management", "authors": ["Richard Jones", " Anthony Hosking"]}, {"title": "Fine-grained mobility in the Emerald system", "authors": ["Eric Jul", " Henry Levy", " Norman Hutchinson"]}, {"title": "Comprehensive and robust garbage collection in a distributed system", "authors": ["Niels Christian Juul "]}, {"title": "The Art of Computer Programming, Fundamental Algorithms (2nd ed", "authors": []}, {"title": "Design of the Java hotspot\u2122 client compiler for Java 6", "authors": ["Thomas Kotzmann", " Christian Wimmer", " Hanspeter M\u00f6ssenb\u00f6ck", " Thomas Rodriguez", " Kenneth Russell"]}, {"title": "Incremental incrementally compacting garbage collection", "authors": []}, {"title": "Carakan Revisited", "authors": ["Jens Lindstr\u00f6m"]}, {"title": "Tizen", "authors": ["Linux Foundation"]}, {"title": "Advances in JavaScript Performance in IE10 and Windows 8", "authors": ["Andrew Miadowicz"]}, {"title": "What\u2019s New in Internet Explorer 8", "authors": ["Microsoft"]}, {"title": "Kraken JavaScript Benchmark", "authors": ["Mozilla"]}, {"title": "Experience Firefox OS on your Android device", "authors": ["Mozilla"]}, {"title": "Java 2 Platform SE v", "authors": ["Oracle"]}, {"title": "Isolating web programs in modern browser architectures", "authors": []}, {"title": "Garbage Collection: Automatic Memory Management in the Microsoft ", "authors": ["Jeffrey Richter"]}, {"title": "The AED free storage package", "authors": []}, {"title": "The Same Origin Policy", "authors": []}, {"title": "An efficient machine-independent procedure for garbage collection in various list structures", "authors": []}, {"title": "Segregating heap objects by reference behavior and lifetime", "authors": []}, {"title": "Exploiting prolific types for memory management and optimizations", "authors": ["Yefim Shuf", " Manish Gupta", " Rajesh Bordawekar"]}, {"title": "Eliminating external fragmentation in a nonmoving garbage collector for Java", "authors": ["Fridtjof Siebert"]}, {"title": "Limits of parallel marking garbage collection", "authors": ["Fridtjof Siebert"]}, {"title": "Task-aware garbage collection in a multi-tasking virtual machine", "authors": ["Sunil Soman", " Laurent Dayn\u00e8s"]}, {"title": "MTM2: Scalable memory management for multi-tasking managed runtime environments", "authors": ["Sunil Soman", " Ch"]}, {"title": "HTTP Archive", "authors": ["Steve Souders"]}, {"title": "Thread-specific heaps for multi-threaded programs", "authors": ["Bjarne Steensgaard"]}, {"title": "A brief introduction to regions", "authors": ["Mads Tofte"]}, {"title": "Region-based memory management", "authors": ["Mads Tofte "]}, {"title": "Generation scavenging: A non-disruptive high performance storage reclamation algorithm", "authors": ["David Ungar"]}, {"title": "Vmalloc: A general and efficient memory allocator", "authors": ["Kiem-Phong Vo"]}, {"title": "Domain Specific Memory Management in a Modern Web Browser", "authors": ["Gregor Wagner"]}, {"title": "Compartmental memory management in a modern web browser", "authors": ["Gregor Wagner", " Andreas Gal", " Christian Wimmer", " Brendan Eich"]}, {"title": "Uniprocessor garbage collection techniques", "authors": []}, {"title": "Effective \u201cstatic-graph\u201d reorganization to improve locality in garbage-collected systems", "authors": []}, {"title": "Comparative Performance Evaluation of Garbage Collection Algorithms", "authors": []}]},
{"title": "ThisType for Object-Oriented Languages: From Theory to Practice", "time": "April 2016", "keyword": ["Programming Languages and Systems"], "abstract": "In object-oriented programs, objects often provide methods whose parameter types or return types are the object types themselves. For example, the parameter types of binary methods are the types of their receiver objects, and the return types of some factory methods are the types of their enclosing objects. However, most object-oriented languages do not support such methods precisely because their type systems do not support explicit recursive types, which lead to a mismatch between subclassing and subtyping. This mismatch means that an expression of a subclass may not always be usable in a context where an expression of a superclass is expected, which is not intuitive in an object-oriented setting. Researchers have proposed various type-sound approaches to support methods with types of their enclosing object types denoted by some variants of ThisType, but they reject reasonable and useful methods due to unpermissive type systems or they use less precise declared inexact types rather than runtime exact types.\nIn this article, we present a thorough approach to support methods with ThisTypes: from a new encoding of objects in a typed lambda calculus that allows subtyping by subclassing to an open-source implementation as an extension of the Java programming language. We first provide real-world examples that motivate the need for ThisTyped methods to precisely describe desired properties of programs. We define a new object encoding that enables subtyping by subclassing even in the presence of negative occurrences of type recursion variables by distinguishing object types from existential object types. Based on this object encoding, we formalize language features to support ThisTyped methods with a core calculus CoreThisJava, and prove its type soundness. Finally, we provide ThisJava, a prototype implementation of the calculus, to show its backward compatibility, and we make it publicly available. We believe that our approach theoretically expands the long pursuit of an object-oriented language with ThisTypes to support more useful methods with more precise types.\n", "author": [{"name": "Sukyoung Ryu", "affiliation": "KAIST, Republic of Korea"}, {"name": "Sukyoung Ryu", "affiliation": "KAIST, Republic of Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "On subtyping and matching", "authors": ["Mart\u00edn Abadi "]}, {"title": "A Theory of Objects", "authors": ["Martin Abadi "]}, {"title": "Compilers Principles, Techniques, & Tools (2nd", "authors": [" Ravi Sethi"]}, {"title": "The Fortress Language Specification Version 1", "authors": ["Eric Allen", " David Chase", " Victor Luchangco", " Jan-Willem Maessen", " Sukyoung Ryu"]}, {"title": "Adding type constructor parameterization to java", "authors": ["Philippe Altherr "]}, {"title": "The Java\u2122 Programming Language (4th", "authors": ["Ken Arnold", " James Gosling"]}, {"title": "SAFE", "authors": ["SungGyeong Bae", " Hyunghun Cho", " Inho Lim"]}, {"title": "ACM", "authors": []}, {"title": "A paradigmatic object-oriented programming language: Design, static typing and semantics", "authors": ["Kim Bruce"]}, {"title": "On binary methods", "authors": ["Kim Bruce", " Luca Cardelli", " Giuseppe Castagna"]}, {"title": "Comparing object encodings", "authors": [" Luca Cardelli"]}, {"title": "LOOJ: Weaving LOOM into java", "authors": []}, {"title": "A statically safe alternative to virtual types", "authors": ["Kim Bruce", " Martin Odersky"]}, {"title": "Subtyping is not a good \u201cmatch\u201d for object-oriented languages", "authors": ["Kim Bruce", " Leaf Petersen"]}, {"title": "PolyTOIL: A type-safe polymorphic object-oriented language", "authors": ["Kim Bruce", " Angela Schuett", " Robert van Gent"]}, {"title": "Increasing Java\u2019s Expressiveness with ThisType and Match-Bounded Polymorphism", "authors": []}, {"title": "A model for java with wildcards", "authors": ["Nicholas Cameron", " Sophia Drossopoulou"]}, {"title": "Towards an existential types model for java wildcards", "authors": ["Nicholas Cameron", " Erik Ernst"]}, {"title": "F-bounded polymorphism for object-oriented programming", "authors": ["Peter Canning", " William Cook", " Walter Hill", " Walter Olthoff"]}, {"title": "A semantics of multiple inheritance", "authors": ["Luca Cardelli"]}, {"title": "Amber", "authors": ["Luca Cardelli"]}, {"title": "A proposal for making Eiffel type-safe", "authors": []}, {"title": "Inheritance is not subtyping", "authors": [" Walter Hill"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "ECMAScript Language Specification", "authors": ["Ecma"]}, {"title": "An interpretation of typed OOP in a language with state", "authors": ["Jonathan Eifrig", " Scott Smith", " Valery Trifonov"]}, {"title": "The JastAdd extensible java compiler", "authors": ["Torbj\u00f6rn Ekman "]}, {"title": "Family polymorphism", "authors": ["Erik Ernst"]}, {"title": "The Development of Type Systems for Object-Oriented Languages", "authors": []}, {"title": "Rupiah: Towards an Expressive Static Type System for Java", "authors": ["John Foster"]}, {"title": "The Java Language Specification (3rd", "authors": ["James Gosling", " Bill Joy", " Guy Steele"]}, {"title": "Reference attributed grammars", "authors": ["G\u00f6rel Hedin"]}, {"title": "JastAdd", "authors": ["G\u00f6rel Hedin", " Emma S\u00f6derberg", " Niklas Fors"]}, {"title": "A unifying type-theoretic framework for objects", "authors": ["Martin Hofmann "]}, {"title": "Featherweight java: A minimal core calculus for java and GJ", "authors": ["Atsushi Igarashi"]}, {"title": "Variant parametric types: A flexible subtyping scheme for generics", "authors": ["Atsushi Igarashi "]}, {"title": "Inheritance in Smalltalk-80: A denotational definition", "authors": []}, {"title": "Two semantic models of object-oriented languages", "authors": []}, {"title": "Subclassing \u2260 subtyping \u2260 is-a", "authors": ["Wilf LaLonde "]}, {"title": "SAFE: Formal specification and implementation of a scalable analysis framework for ECMAScript", "authors": ["Hongki Lee", " Sooncheol Won", " Joonho Jin", " Junhee Cho"]}, {"title": "The Java\u2122 Virtual Machine Specification, Java SE 7 Edition", "authors": ["Tim Lindholm", " Frank Yellin", " Gilad Bracha"]}, {"title": "Keynote address\u2014Data abstraction and hierarchy", "authors": ["Barbara Liskov"]}, {"title": "Encoding featherweight java with assignment and immutability using the Coq proof assistant", "authors": ["Julian Mackay", " Hannes Mehnert", " Alex Potanin", " Lindsay Groves"]}, {"title": "Type inference for java 5: Wildcards, f-bounds, and undecidability", "authors": ["Karl Mazurak "]}, {"title": "Object-Oriented Software Construction", "authors": ["Bertr"]}, {"title": "C", "authors": ["Microsoft"]}, {"title": "", "authors": [" Language Specification Versio"]}, {"title": "Toward a typed foundation for method specialization and inheritance", "authors": []}, {"title": "Advanced Compiler Design and Implementation", "authors": []}, {"title": "Languages with ThisType", "authors": ["Hyunik Na"]}, {"title": "ThisJava: An extension of java with exact types", "authors": ["Hyunik Na "]}, {"title": "A new formalization of subtyping to match subclasses to subtypes", "authors": ["Hyunik Na "]}, {"title": "Exact type parameterization and ThisType support", "authors": ["Hyunik Na", " Sukyoung Ryu"]}, {"title": "Scalable extensibility via nested inheritance", "authors": ["Nathaniel Nystrom", " Stephen Chong"]}, {"title": "Scala Reflection Library 2", "authors": ["Martin Odersky", " St\u00e9phane Micheloud", " Nikolay Mihaylov", " Michel Schinz", " Erik Stenman", " Matthias Zenger"]}, {"title": "Programming in Scala", "authors": ["Martin Odersky", " Lex Spoon"]}, {"title": "OpenJDK 6 source", "authors": ["Oracle"]}, {"title": "Types and Programming Languages", "authors": []}, {"title": "Simple type-theoretic foundations for object-oriented programming", "authors": []}, {"title": "SAFE: Scalable Analysis Framework for ECMAScript", "authors": []}, {"title": "Objects as closures: Abstract semantics of object-oriented languages", "authors": ["Uday Reddy"]}, {"title": "Matching ThisType to subtyping", "authors": ["Chieri Saito "]}, {"title": "Lightweight family polymorphism", "authors": ["Chieri Saito", " Atsushi Igarashi"]}, {"title": "Unifying genericity\u2014Combining the benefits of virtual types and parameterized classes", "authors": ["Kresten Krab Thorup "]}, {"title": "Wild FJ", "authors": ["Mads Torgersen", " Erik Ernst"]}, {"title": "Adding wildcards to the Java programming language", "authors": ["Mads Torgersen", " Christian Plesner Hansen", " Erik Ernst", " Peter von der Ah\u00e9", " Gilad Bracha"]}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": "Ownership and immutability in generic java", "authors": ["Yoav Zibin", " Alex Potanin", " Paley Li", " Mahmood Ali"]}]},
{"title": "The Pluto+ Algorithm: A Practical Approach for Parallelization and Locality Optimization of Affine Loop Nests", "time": "April 2016", "keyword": ["Programming Languages and Systems"], "abstract": "Affine transformations have proven to be powerful for loop restructuring due to their ability to model a very wide range of transformations. A single multidimensional affine function can represent a long and complex sequence of simpler transformations. Existing affine transformation frameworks such as the Pluto algorithm, which include a cost function for modern multicore architectures for which coarse-grained parallelism and locality are crucial, consider only a subspace of transformations to avoid a combinatorial explosion in finding transformations. The ensuing practical trade-offs lead to the exclusion of certain useful transformations: in particular, transformation compositions involving loop reversals and loop skewing by negative factors. In addition, there is currently no proof that the algorithm successfully finds a tree of permutable loop bands for all affine loop nests. In this article, we propose an approach to address these two issues (1) by modeling a much larger space of practically useful affine transformations in conjunction with the existing cost function of Pluto, and (2) by extending the Pluto algorithm in a way that allows a proof for its soundness and completeness for all affine loop nests. We perform an experimental evaluation of both, the effect on compilation time, and performance of generated codes. The evaluation shows that our new framework, Pluto+, provides no degradation in performance for any benchmark from Polybench. For the Lattice Boltzmann Method (LBM) simulations with periodic boundary conditions, it provides a mean speedup of 1.33 \u00d7 over Pluto. We also show that Pluto+ does not increase compilation time significantly. Experimental results on Polybench show that Pluto+ increases overall polyhedral source-to-source optimization time by only 15%. In cases in which it improves execution time significantly, it increased polyhedral optimization time by only 2.04 \u00d7 .\n", "author": [{"name": "Uday Bondhugula", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Aravind Acharya", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Albert Cohen", "affiliation": "INRIA and ENS, Paris, France"}, {"name": "Uday Bondhugula", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Aravind Acharya", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Albert Cohen", "affiliation": "INRIA and ENS, Paris, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "19", "references": [{"title": "PLUTO+: Near-complete modeling of affine transformations for parallelism and locality", "authors": ["Aravind Acharya "]}, {"title": "Synthesizing transformations for locality enhancement of imperfectly-nested loops", "authors": [" Nikolay Mateev"]}, {"title": "Compilers: Principles, Techniques, and Tools (2nd Edition)", "authors": [" Ravi Sethi"]}, {"title": "Scanning polyhedra with DO loops", "authors": ["Corinne Ancourt "]}, {"title": "Tiling stencil computations to maximize parallelism", "authors": ["Vinayaka B", " Irshad Pananilath"]}, {"title": "Code generation in the polyhedral model is easier than you think", "authors": ["C\u00e9dric Bastoul"]}, {"title": "Effective Automatic Parallelization and Locality Optimization Using the Polyhedral Model", "authors": ["Uday Bondhugula"]}, {"title": "Tiling and optimizing time-iterated computations on periodic domains", "authors": ["Uday Bondhugula", " Vinayaka B", " Albert Cohen", " Guillain Potron"]}, {"title": "Automatic transformations for communication-minimized parallelization and locality optimization in the polyhedral model", "authors": ["Uday Bondhugula", " Sriram Krishnamoorthy"]}, {"title": "A model for fusion and code motion in an automatic parallelizing compiler", "authors": ["Uday Bondhugula", " Oktay Gunluk", " Sanjeeb Dash"]}, {"title": "A practical automatic polyhedral parallelizer and locality optimizer", "authors": ["Uday Bondhugula", " Albert Hartono"]}, {"title": "Polyhedra scanning revisited", "authors": ["Chun Chen"]}, {"title": "Lattice Boltzmann method for fluid flows", "authors": []}, {"title": "Folding of the plane and the design of systolic arrays", "authors": []}, {"title": "The CLooG Code Generator in the Polyhedral Model", "authors": ["Cloo"]}, {"title": "Computational Infrastructure for Operations Research", "authors": ["COIN-OR"]}, {"title": "Multiple--relaxation--time Lattice Boltzmann models in three dimensions", "authors": ["Dominique d\u2019Humi\u00e8res"]}, {"title": "Parametric integer programming", "authors": []}, {"title": "Dataflow analysis of scalar and array references", "authors": []}, {"title": "Some efficient solutions to the affine scheduling problem: Part I, one-dimensional time", "authors": []}, {"title": "Some efficient solutions to the affine scheduling problem: Part II, multidimensional time", "authors": []}, {"title": "GLPK (GNU Linear Programming Kit)", "authors": ["GNU"]}, {"title": "Automatic Parallelization of Loop Programs for Distributed Memory Architectures", "authors": ["Martin Griebl"]}, {"title": "Polly polyhedral optimization in LLVM", "authors": ["Tobias Grosser", " Hongbin Zheng", " Ragesh Aloor", " Andreas Simbrger", " Armin Grolinger"]}, {"title": "A parametric multi-level tiler for imperfect loop nests", "authors": ["Albert Hartono", " Muthu Baskaran", " C\u00e9dric Bastoul", " Albert Cohen", " Sriram Krishnamoorthy", " Boyana Norris"]}, {"title": "Data layout transformation for stencil computations on short SIMD architectures", "authors": ["Tom Henretty", " Kevin Stock", " Louis-No\u00ebl Pouchet", " Franz Franchetti"]}, {"title": "A stencil compiler for short-vector SIMD architectures", "authors": ["Tom Henretty", " Richard Veras", " Franz Franchetti", " Louis-No\u00ebl Pouchet"]}, {"title": "Supernode partitioning", "authors": []}, {"title": "A Unifying Framework for Iteration Reordering Transformations", "authors": []}, {"title": "Code generation for multiple mappings", "authors": []}, {"title": "When polyhedral transformations meet SIMD code generation", "authors": ["Martin Kong", " Richard Veras", " Kevin Stock", " Franz Franchetti", " Louis-No\u00ebl Pouchet"]}, {"title": "Methods and apparatus for joint parallelism and locality optimization in source code compilation", "authors": []}, {"title": "A singular loop transformation framework based on non-singular matrices", "authors": ["Wei Li "]}, {"title": "An affine partitioning algorithm to maximize parallelism and minimize communication", "authors": []}, {"title": "Maximizing parallelism and minimizing synchronization with affine transforms", "authors": []}, {"title": "Maximizing parallelism and minimizing synchronization with affine partitions", "authors": []}, {"title": "The common optimization interface for operations research", "authors": ["Robin Lougee-Heimer"]}, {"title": "Productivity via automatic code generation for PGAS platforms with the R-stream compiler", "authors": ["Benoit Meister", " Allen Leung", " Nicolas Vasilache", " David Wohlford", " C\u00e9dric Bastoul"]}, {"title": "R-stream compiler", "authors": ["Beno\u00eet Meister", " Nicolas Vasilache", " David Wohlford", " Muthu Baskaran", " Allen Leung"]}, {"title": "PolyMage: Automatic optimization for image processing pipelines", "authors": ["Ravi Teja Mullapudi", " Vinay Vasista"]}, {"title": "Smashing: Folding space to tile through time", "authors": ["Nissa Osheim", " Michelle Mills Strout", " Dave Rostron"]}, {"title": "Palabos", "authors": ["Palabos"]}, {"title": "An optimizing code generator for a class of Lattice-Boltzmann computations", "authors": ["Irshad Pananilath", " Aravind Acharya", " Vinay Vasista"]}, {"title": "PLUTO: An automatic parallelizer and locality optimizer for affine loop nests", "authors": ["Plut"]}, {"title": "Polybench suite", "authors": ["Polybenc"]}, {"title": "Iterative optimization in the polyhedral model: Part II, multidimensional time", "authors": [" C\u00e9dric Bastoul", " John Cavazos"]}, {"title": "Loop transformations: Convexity, pruning and optimization", "authors": ["Louis-No\u00ebl Pouchet", " Uday Bondhugula", " C\u00e9dric Bastoul", " Albert Cohen"]}, {"title": "Generation of efficient nested loops from polyhedra", "authors": ["Fabien Quiller\u00e9"]}, {"title": "A programming language interface to describe transformations and code generation", "authors": ["Gabe Rudy", " Malik Murtaza Khan", " Mary Hall", " Chun Chen"]}, {"title": "The dynamics of finite-difference models of the shallow-water equations", "authors": ["Robert Sadourny"]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Alex"]}, {"title": "Cache accurate time skewing in iterative stencil computations", "authors": ["Robert Strzodka", " Mohammed Shaheen", " Dawid Pajak"]}, {"title": "171", "authors": []}, {"title": "The Pochoir stencil compiler", "authors": ["Yuan Tang", " Rezaul Alam Chowdhury", " Chi-Keung Luk"]}, {"title": "Scalable Program Optimization Techniques in the Polyhedral Model", "authors": ["Nicolas Vasilache"]}, {"title": "Joint scheduling and layout optimization to enable multi-level vectorization", "authors": ["Nicolas Vasilache", " Benoit Meister", " Muthu Baskaran"]}, {"title": "ISL: An integer set library for the polyhedral model", "authors": ["Sven Verdoolaege"]}, {"title": "Polyhedral parallel code generation for CUDA", "authors": ["Sven Verdoolaege", " Juan Carlos Juega", " Albert Cohen", " Jos\u00e9 Ignacio G\u00f3mez", " Christian Tenllado"]}, {"title": "A data locality optimizing algorithm", "authors": []}, {"title": "Using time skewing to eliminate idle time due to memory bandwidth and network limitations", "authors": []}, {"title": "Converting affine recurrence equations to quasi-uniform recurrence equations", "authors": []}, {"title": "Understanding Polybench/C 3", "authors": ["Tomofumi Yuki"]}, {"title": "AlphaZ: A system for design space exploration in the polyhedral model", "authors": ["Tomofumi Yuki", " Gautam Gupta", " DaeGon Kim", " Tanveer Pathan"]}, {"title": "Program locality analysis using reuse distance", "authors": ["Yutao Zhong", " Xipeng Shen"]}, {"title": "On pressure and velocity boundary conditions for the Lattice Boltzmann BGK model", "authors": ["Qisu Zou "]}]},
{"title": "A Practical Approach for Model Checking C/C++11 Code", "time": "May 2016", "keyword": ["Programming Languages and Systems"], "abstract": "Writing low-level concurrent software has traditionally required intimate knowledge of the entire toolchain and often has involved coding in assembly. New language standards have extended C and C++ with support for low-level atomic operations and a weak memory model, enabling developers to write portable and efficient multithreaded code.\nIn this article, we present CDSC\n, a tool for exhaustively exploring the behaviors of concurrent code under the C/C++ memory model. We have used CDSC\n to exhaustively unit test concurrent data structure implementations and have discovered errors in a published implementation of a work-stealing queue and a single producer, single consumer queue.\n", "author": [{"name": "Brian Norris", "affiliation": "University of California, Irvine"}, {"name": "Brian Demsky", "affiliation": "University of California, Irvine"}, {"name": "Brian Norris", "affiliation": "University of California, Irvine"}, {"name": "Brian Demsky", "affiliation": "University of California, Irvine"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "15", "references": [{"title": "https://groups", "authors": ["Synchronization Algorithm Verificator for C"]}, {"title": "http://stackoverflow", "authors": ["Writing a (spinning) thread barrier using c"]}, {"title": "", "authors": []}, {"title": "html", "authors": []}, {"title": "http://cbloomrants", "authors": ["A look at some bounded queues - par"]}, {"title": "Library abstraction for C/C++ concurrency", "authors": ["Mark Batty", " Mike Dodds"]}, {"title": "Mathematizing C++ concurrency", "authors": ["Mark Batty", " Scott Owens", " Susmit Sarkar", " Peter Sewell"]}, {"title": "Nitpicking C++ concurrency", "authors": ["Jasmin Christian Blanchette", " Tjark Weber", " Mark Batty", " Scott Owens"]}, {"title": "Can seqlocks get along with programming language memory models? In Proceedings of the 2012 ACM SIGPLAN Workshop on Memory Systems Performance and Correctness", "authors": ["Hans Boehm"]}, {"title": "N3786: Prohibiting \u201cout of thin air\u201d results in C++14", "authors": []}, {"title": "Foundations of the C++ concurrency memory model", "authors": []}, {"title": "N3710: Specifying the absence of \u201cout of thin air\u201d results", "authors": [" Mark Batty", " Brian Demsky", " Olivier Giroux", " Paul McKenney", " Peter Sewell"]}, {"title": "Outlawing ghosts: Avoiding out-of-thin-air results", "authors": []}, {"title": "Line-up: A complete and automatic linearizability checker", "authors": ["Sebastian Burckhardt", " Chris Dern", " Madanlal Musuvathi"]}, {"title": "A Lock-Free Hash Table", "authors": ["Cliff Click"]}, {"title": "Java memory model aware software validation", "authors": ["Arnab De", " Abhik Roychoudhury"]}, {"title": "Goldilocks: A race and transaction-aware java runtime", "authors": ["Tayfun Elmas", " Shaz Qadeer"]}, {"title": "RacerX: Effective, static detection of race conditions and deadlocks", "authors": ["Dawson Engler "]}, {"title": "FastTrack: Efficient and precise dynamic race detection", "authors": []}, {"title": "Adversarial memory for detecting destructive races", "authors": []}, {"title": "Dynamic partial-order reduction for model checking software", "authors": ["Cormac Flanagan "]}, {"title": "Partial-order methods for the verification of concurrent systems: An approach to the state-explosion problem", "authors": ["Patrice Godefroid"]}, {"title": "Model checking for programming languages using VeriSoft", "authors": ["Patrice Godefroid"]}, {"title": "The SPIN Model Checker: Primer and Reference Manual (1st ed", "authors": []}, {"title": "A memory model sensitive checker for C#", "authors": ["Thuan Quang Huynh "]}, {"title": "ISO/IEC 14882:2011, Information Technology -- Programming Languages -- C++", "authors": ["ISO/IE"]}, {"title": "ISO/IEC 9899:2011, Information Technology -- Programming Languages -- C", "authors": ["ISO/IE"]}, {"title": "State-space exploration for concurrent algorithms under weak memory orderings", "authors": ["Bengt Jonsson"]}, {"title": "Automatic inference of memory fences", "authors": ["Michael Kuperstein", " Martin Vechev"]}, {"title": "Partial-coherence abstractions for relaxed memory models", "authors": ["Michael Kuperstein", " Martin Vechev"]}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": ["Leslie Lamport"]}, {"title": "Correct and efficient work-stealing for weak memory models", "authors": ["Nhat Minh L\u00ea", " Antoniu Pop", " Albert Cohen"]}, {"title": "Conflict exceptions: Simplifying concurrent language semantics with precise hardware exceptions for data-races", "authors": ["Br", " Luis Ceze", " Karin Strauss", " Shaz Qadeer"]}, {"title": "A case for an sc-preserving compiler", "authors": ["Daniel Marino", " Abhayendra Singh", " Todd Millstein", " Madanlal Musuvathi"]}, {"title": "Synchronization without contention", "authors": []}, {"title": "Simple, fast, and practical non-blocking and blocking concurrent queue algorithms", "authors": []}, {"title": "Handbook of Data Structures and Applications", "authors": ["Mark Moir "]}, {"title": "Finding and reproducing heisenbugs in concurrent programs", "authors": ["Madanlal Musuvathi", " Shaz Qadeer", " Piramanayagam Arumuga Nainar", " Thomas Ball", " Gerard Basler"]}, {"title": "CDSChecker: Checking concurrent data structures written with C/C++ atomics", "authors": ["Brian Norris "]}, {"title": "An executable specification and verifier for relaxed memory order", "authors": []}, {"title": "Eraser: A dynamic data race detector for multithreaded programs", "authors": ["Stefan Savage", " Michael Burrows", " Greg Nelson", " Patrick Sobalvarro"]}, {"title": "Data structures in the multicore age", "authors": ["Nir Shavit"]}, {"title": "Common compiler optimisations are invalid in the C11 memory model and what we can do about it", "authors": ["Viktor Vafeiadis", " Thibaut Balabonski", " Soham Chakraborty", " Robin Morisset"]}, {"title": "Relaxed separation logic: A program logic for C11 concurrency", "authors": ["Viktor Vafeiadis "]}, {"title": "Oct", "authors": []}, {"title": "Dynamic model checking with property driven pruning to detect race conditions", "authors": ["Chao Wang", " Yu Yang", " Aarti Gupta"]}, {"title": "Efficient stateful dynamic partial order reduction", "authors": ["Yu Yang", " Xiaofang Chen", " Ganesh Gopalakrishnan"]}, {"title": "Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis", "authors": ["Yu Yang", " Xiaofang Chen", " Ganesh Gopalakrishnan"]}]},
{"title": "The Design and Formalization of Mezzo, a Permission-Based Programming Language", "time": "August 2016", "keyword": ["Programming Languages and Systems"], "abstract": "The programming language Mezzo is equipped with a rich type system that controls aliasing and access to mutable memory. We give a comprehensive tutorial overview of the language. Then we present a modular formalization of Mezzo\u2019s core type system, in the form of a concurrent \u03bb-calculus, which we successively extend with references, locks, and adoption and abandon, a novel mechanism that marries Mezzo\u2019s static ownership discipline with dynamic ownership tests. We prove that well-typed programs do not go wrong and are data-race free. Our definitions and proofs are machine checked.\n", "author": [{"name": "Thibaut Balabonski", "affiliation": "INRIA"}, {"name": "Fran\u00e7ois Pottier", "affiliation": "INRIA, Paris Cedex, France"}, {"name": "Jonathan Protzenko", "affiliation": "INRIA"}, {"name": "Thibaut Balabonski", "affiliation": "INRIA"}, {"name": "Fran\u00e7ois Pottier", "affiliation": "INRIA, Paris Cedex, France"}, {"name": "Jonathan Protzenko", "affiliation": "INRIA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "The ins and outs of clean I/O", "authors": []}, {"title": "L<sup>3</sup>: A linear language with locations", "authors": ["Amal Ahmed", " Matthew Fluet"]}, {"title": "Permission-based separation logic for multithreaded Java programs", "authors": ["Afshin Amighi", " Christian Haack", " Marieke Huisman"]}, {"title": "Foundations for decision problems in separation logic with general inductive predicates", "authors": ["Timos Antonopoulos", " Nikos Gorogiannis", " Christoph Haase"]}, {"title": "A Coq formalization of Mezzo, take 2", "authors": ["Thibaut Balabonski "]}, {"title": "Type soundness and race freedom for Mezzo", "authors": ["Thibaut Balabonski", " Fran\u00e7ois Pottier"]}, {"title": "Dual Intuitionistic Linear Logic", "authors": ["Andrew Barber"]}, {"title": "BatList", "authors": ["Batteries included"]}, {"title": "A decidable fragment of separation logic", "authors": ["Josh Berdine", " Cristiano Calcagno"]}, {"title": "Smallfoot: Modular automatic assertion checking with separation logic", "authors": ["Josh Berdine", " Cristiano Calcagno"]}, {"title": "Symbolic execution with separation logic", "authors": ["Josh Berdine", " Cristiano Calcagno"]}, {"title": "Modular typestate checking of aliased objects", "authors": ["Kevin Bierhoff "]}, {"title": "Practical API protocol checking with access permissions", "authors": ["Kevin Bierhoff"]}, {"title": "Checking concurrent typestate with access permissions in plural: A retrospective", "authors": ["Kevin Bierhoff"]}, {"title": "Step-indexed Kripke models over recursive worlds", "authors": ["Lars Birkedal", " Bernhard Reus", " Jan Schwinghammer", " Kristian St\u00f8vring", " Jacob Thamsborg"]}, {"title": "Alias control for deterministic parallelism", "authors": []}, {"title": "Types, regions, and effects for safe programming with object-oriented parallel frameworks", "authors": []}, {"title": "Parallel programming must be deterministic by default", "authors": []}, {"title": "A type and effect system for deterministic parallel Java", "authors": [" Danny Dig", " Stephen Heumann", " Rakesh Komuravelli", " Jeffrey Overbey", " Patrick Simmons", " Hyojin Sung"]}, {"title": "Safe nondeterminism in a deterministic-by-default parallel language", "authors": [" Stephen Heumann", " Nima Honarm", " Adam Welc"]}, {"title": "Permission accounting in separation logic", "authors": ["Richard Bornat", " Cristiano Calcagno", " Peter O\u2019Hearn"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Ch", " Robert Lee"]}, {"title": "Checking interference with fractional permissions", "authors": ["John Boyl"]}, {"title": "Semantics of fractional permissions with nesting", "authors": ["John Tang Boyl"]}, {"title": "Tactics for reasoning modulo AC in Coq", "authors": ["Thomas Braibant "]}, {"title": "A semantics for concurrent separation logic", "authors": []}, {"title": "Affine Refinement Types for Secure Distributed Programming", "authors": ["Michele Bugliesi", " Stefano Calzavara", " Fabienne Eigner"]}, {"title": "A step-indexed Kripke model of separation logic for storable locks", "authors": ["Alex", " Lars Birkedal"]}, {"title": "Open-sourcing Facebook Infer: Identify bugs before you ship", "authors": ["Cristiano Calcagno", " Dino Distefano"]}, {"title": "Relational inductive shape analysis", "authors": ["Bor-Yuh Evan Chang "]}, {"title": "Characteristic Formulae for Mechanized Program Verification", "authors": ["Arthur Chargu\u00e9raud"]}, {"title": "Functional translation of a calculus of capabilities", "authors": ["Arthur Chargu\u00e9raud "]}, {"title": "Certified Programming and Dependent Types", "authors": ["Adam Chlipala"]}, {"title": "Polymorphic subtyping without distributivity", "authors": ["Jacek Chrzaszcz"]}, {"title": "Alia sing, confinement, and ownership in object-oriented programming", "authors": ["Dave Clarke", " Sophia Drossopoulou"]}, {"title": "Owner ship types: A survey", "authors": ["Dave Clarke", " Johan \u00d6stlund", " Ilya Sergey"]}, {"title": "External uniqueness is unique enough", "authors": ["Dave Clarke "]}, {"title": "Simple ownership types for object containment", "authors": [" James Noble"]}, {"title": "Ownership types for flexible alias protection", "authors": []}, {"title": "VCC: A practical system for verifying concurrent C", "authors": ["Ernie Cohen", " Markus Dahlweid", " Dirk Leinenbach", " Michal Moskal", " Thomas Santen", " Wolfram Schulte"]}, {"title": "Tractable reasoning in a fragment of separation logic", "authors": ["Byron Cook", " Christoph Haase", " Jo\u00ebl Ouaknine"]}, {"title": "Type Assignment in Programming Languages", "authors": ["Luis Damas"]}, {"title": "Meta- theory \u00e0 la carte", "authors": ["Benjamin Delaware"]}, {"title": "Enforcing high-level protocols in low-level software", "authors": ["Robert DeLine "]}, {"title": "Wrestling with rep exposure", "authors": []}, {"title": "Universes: Lightweight ownership for JML", "authors": ["Werner Dietl "]}, {"title": "Views: Compositional reasoning for concurrent programs", "authors": ["Thomas Dinsdale-Young", " Lars Birkedal", " Philippa Gardner"]}, {"title": "Concurrent abstract predicates", "authors": ["Thomas Dinsdale-Young", " Mike Dodds", " Philippa Gardner"]}, {"title": "jStar: Towards practical verification for Java", "authors": []}, {"title": "A fresh look at separation algebras and share accounting", "authors": ["Robert Dockins", " Aquinas Hobor"]}, {"title": "The spirit of ghost code", "authors": ["Jean-Christophe Filli\u00e2tre", " L\u00e9on Gondelman"]}, {"title": "Types for safe locking", "authors": ["Cormac Flanagan "]}, {"title": "Language support for fast and reliable message-based communication in singularity OS", "authors": ["Manuel F\u00e4hndrich", " Mark Aiken", " Chris Hawblitzel", " Orion Hodson", " Galen Hunt"]}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["Manuel F\u00e4hndrich "]}, {"title": "Uniqueness and reference immutability for safe parallelism", "authors": [" Jared Parsons", " Aleks Bromfield"]}, {"title": "Local Reasoning for Storable Locks and Threads", "authors": ["Alexey Gotsman", " Josh Berdine", " Byron Cook", " Noam Rinetzky"]}, {"title": "The ins and outs of iteration in Mezzo", "authors": ["Arma\u00ebl Gu\u00e9neau", " Fran\u00e7ois Pottier"]}, {"title": "Reasoning about Java\u2019s reentrant locks", "authors": ["Christian Haack", " Marieke Huisman"]}, {"title": "Resource usage protocols for iterators", "authors": ["Christian Haack "]}, {"title": "Abstract read permissions: Fractional permissions without the fractions", "authors": ["Stefan Heule", " Peter M\u00fcller"]}, {"title": "Oracle semantics for concurrent separation logic", "authors": ["Aquinas Hobor"]}, {"title": "Modular termination verification", "authors": ["Bart Jacobs", " Dragan Bosnacki"]}, {"title": "The VeriFast Program Verifier", "authors": ["Bart Jacobs "]}, {"title": "Design patterns in separation logic", "authors": [" Jonathan Aldrich", " Lars Birkedal", " Kasper Svendsen"]}, {"title": "Restructuring Symbolic Programs for Concurrent Execution on Multiprocessors", "authors": ["James Richard Larus"]}, {"title": "A basis for verifying multi-threaded programs", "authors": []}, {"title": "Deadlock-free channels and locks", "authors": [" Peter M\u00fcller"]}, {"title": "Extended alias type system using separating implication", "authors": ["Toshiyuki Maeda", " Haruki Sato"]}, {"title": "Lightweight linear types in system F\u00b0", "authors": ["Karl Mazurak", " Jianzhou Zhao"]}, {"title": "A theory of type polymorphism in programming", "authors": ["Robin Milner"]}, {"title": "A functional representation of data structures with a hole", "authors": ["Yasuhiko Minamide"]}, {"title": "Modul ar structural operational semantics", "authors": []}, {"title": "Ownership transfer in universe types", "authors": ["Peter M\u00fcller "]}, {"title": "A type system for borrowing permissions", "authors": ["Karl Naden", " Robert Bocchino", " Jonathan Aldrich"]}, {"title": "Structuring the verification of heap-manipulating programs", "authors": ["Aleks", " Viktor Vafeiadis"]}, {"title": "Separation logic + superposition calculus &equals; heap theorem prover", "authors": ["Juan Antonio Navarro P\u00e9rez "]}, {"title": "Resources, concurrency and local reasoning", "authors": []}, {"title": "Imperative functional programming", "authors": ["Simon Peyton Jones "]}, {"title": "Automating separation logic using SMT", "authors": ["Ruzica Piskac", " Thomas Wies"]}, {"title": "Hiding local state in direct style: A higher-order anti-frame rule", "authors": ["Fran\u00e7ois Pottier"]}, {"title": "Syntactic soundness proof of a type-and-capability system with hidden state", "authors": ["Fran\u00e7ois Pottier"]}, {"title": "Programming with permissions in Mezzo", "authors": ["Fran\u00e7ois Pottier "]}, {"title": "A few lessons from the Mezzo project", "authors": ["Fran\u00e7ois Pottier "]}, {"title": "Mezzo: a typed language for safe effectful concurrent programs", "authors": ["Jonathan Protzenko"]}, {"title": "A Mezzo sample project", "authors": ["Jonathan Protzenko"]}, {"title": "Mezzo-web: try Mezzo in your browser", "authors": ["Jonathan Protzenko"]}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": []}, {"title": "Nested Hoare triples and frame rules for higher-order store", "authors": ["Jan Schwinghammer", " Lars Birkedal", " Bernhard Reus"]}, {"title": "A semantic foundation for hidden state", "authors": ["Jan Schwinghammer", " Hongseok Yang", " Lars Birkedal", " Fran\u00e7ois Pottier"]}, {"title": "Guaranteeing safe destructive updates through a type system with uniqueness information for graphs", "authors": ["Sjaak Smetsers", " Erik Barendsen"]}, {"title": "Ali as types", "authors": ["Frederick Smith", " David Walker"]}, {"title": "Impredi cative concurrent abstract predicates", "authors": ["Kasper Svendsen "]}, {"title": "Sa fe manual memory management in cyclone", "authors": ["Nikhil Swamy", " Michael Hicks", " Greg Morrisett", " Dan Grossman"]}, {"title": "The Rust programming language", "authors": ["The Mozilla foundation"]}, {"title": "Ope rational Semantics and Polymorphic Type Inference", "authors": ["Mads Tofte"]}, {"title": "Implementation of the typed call-by-value \u03bb-calculus using a stack of regions", "authors": ["Mads Tofte "]}, {"title": "Re gion-based memory management", "authors": ["Mads Tofte "]}, {"title": "Practic al affine types", "authors": []}, {"title": "Javari: Adding reference immutability to Java", "authors": []}, {"title": "Local reasoning about while-loops", "authors": ["Thomas Tuerk"]}, {"title": "Unifying refinement and Hoare-style reasoning in a logic for higher-order concurrency", "authors": ["Aaron Turon", " Derek Dreyer"]}, {"title": "Concurrent separation logic and operational semantics", "authors": ["Viktor Vafeiadis"]}, {"title": "Confined types in Java", "authors": ["Jan Vitek "]}, {"title": "Linear types can change the world&excl; In Programming Concepts and Methods, M", "authors": ["Philip Wadler"]}, {"title": "Typed memory management via static capabilities", "authors": ["David Walker", " Karl Crary"]}, {"title": "Alias types for recursive data structures", "authors": ["David Walker "]}, {"title": "Simple imperative polymorphism", "authors": []}, {"title": "A syntactic approach to type soundness", "authors": []}]},
{"title": "Automatic Storage Optimization for Arrays", "time": "April 2016", "keyword": ["Programming Languages and Systems"], "abstract": "Efficient memory allocation is crucial for data-intensive applications, as a smaller memory footprint ensures better cache performance and allows one to run a larger problem size given a fixed amount of main memory. In this article, we describe a new automatic storage optimization technique to minimize the dimensionality and storage requirements of arrays used in sequences of loop nests with a predetermined schedule. We formulate the problem of intra-array storage optimization as one of finding the right storage partitioning hyperplanes: each storage partition corresponds to a single storage location. Our heuristic is driven by a dual-objective function that minimizes both the dimensionality of the mapping and the extents along those dimensions. The technique is dimension optimal for most codes encountered in practice. The storage requirements of the mappings obtained also are asymptotically better than those obtained by any existing schedule-dependent technique. Storage reduction factors and other results that we report from an implementation of our technique demonstrate its effectiveness on several real-world examples drawn from the domains of image processing, stencil computations, high-performance computing, and the class of tiled codes in general.\n", "author": [{"name": "Somashekaracharya G. Bhaskaracharya", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Uday Bondhugula", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Albert Cohen", "affiliation": "INRIA, Paris, France"}, {"name": "Somashekaracharya G. Bhaskaracharya", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Uday Bondhugula", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Albert Cohen", "affiliation": "INRIA, Paris, France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "5", "references": [{"title": "Scheduling tasks to maximize usage of aggregate variables in place", "authors": ["Samah Abu-Mahmeed", " Cheryl McCosh", " Zoran Budimli", " Ken Kennedy", " Kaushik Ravindran", " Kevin Hogan", " Paul Austin", " Steve Rogers"]}, {"title": "Compilers: Principles, Techniques, and Tools (2nd ed", "authors": [" Ravi Sethi"]}, {"title": "", "authors": ["Christophe Alias"]}, {"title": "ns-lyon", "authors": []}, {"title": "", "authors": ["Christophe Alias", " Fabrice Baray"]}, {"title": " ", "authors": [" Compilers"]}, {"title": "Tiling stencil computations to maximize parallelism", "authors": ["Vinayaka B", " Irshad Pananilath"]}, {"title": "Automatic transformations for communication-minimized parallelization and locality optimization in the polyhedral model", "authors": []}, {"title": "Symbolic polynomial maximization over convex sets and its application to memory requirement estimation", "authors": ["Philippe Clauss", " Federico Javier Fern", " Diego Garbervetsky"]}, {"title": "Lattice-based memory allocation", "authors": ["Alain Darte", " Robert Schreiber"]}, {"title": "Memory size reduction through storage order optimization for embedded parallel multimedia applications", "authors": ["Eddy de Greef", " Francky Catthoor"]}, {"title": "Some efficient solutions to the affine scheduling problem: Part I, one-dimensional time", "authors": []}, {"title": "GLPK (GNU Linear Programming Kit)", "authors": ["GNU"]}, {"title": "Hybrid hexagonal/classical tiling for GPUs", "authors": ["Tobias Grosser", " Albert Cohen", " Justin Holewinski", " Ponuswamy Sadayappan"]}, {"title": "A combined corner and edge detector", "authors": ["Chris Harris "]}, {"title": "Using Intel VTune Amplifier XE to Tune Software on the Intel Xeon Processor E5 Family", "authors": ["Intel"]}, {"title": "Intel VTune Amplifier XE 2015 (build 367957)", "authors": ["Intel"]}, {"title": "Automatic storage management for parallel programs", "authors": ["Vincent Lefebvre "]}, {"title": "PolyMage: Automatic optimization for image processing pipelines", "authors": ["Ravi Teja Mullapudi", " Vinay Vasista"]}, {"title": "An optimizing code generator for a class of Lattice-Boltzmann computations", "authors": ["Irshad Pananilath", " Aravind Acharya", " Vinay Vasista"]}, {"title": "PLUTO: An Automatic Polyhedral parallelizer and locality optimizer for multicores", "authors": ["Pluto"]}, {"title": "Optimizing memory usage in the polyhedral model", "authors": []}, {"title": "Halide: A language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", "authors": ["Jonathan Ragan-Kelley", " Connelly Barnes", " Andrew Adams", " Sylvain Paris", " Fr\u00e9do Dur"]}, {"title": "Theory of Linear and Integer Programming", "authors": ["Alex"]}, {"title": "Schedule-independent storage mapping for loops", "authors": []}, {"title": "The Lattice Boltzmann Equation: For Fluid Dynamics and Beyond", "authors": []}, {"title": "A step towards unifying schedule and storage optimization", "authors": ["William Thies", " Fr\u00e9d\u00e9ric Vivien"]}, {"title": "A unified framework for schedule and storage optimization", "authors": ["William Thies", " Fr\u00e9d\u00e9ric Vivien", " Jeffrey Sheldon"]}, {"title": "isl: An integer set library for the polyhedral model", "authors": ["Sven Verdoolaege"]}, {"title": "Memory reuse analysis in the polyhedral model", "authors": []}]},
{"title": "Analyzing Runtime and Size Complexity of Integer Programs", "time": "August 2016", "keyword": ["Programming Languages and Systems"], "abstract": "We present a modular approach to automatic complexity analysis of integer programs. Based on a novel alternation between finding symbolic time bounds for program parts and using these to infer bounds on the absolute values of program variables, we can restrict each analysis step to a small part of the program while maintaining a high level of precision. The bounds computed by our method are polynomial or exponential expressions that depend on the absolute values of input parameters.\nWe show how to extend our approach to arbitrary cost measures, allowing the use of our technique to find upper bounds for other expended resources, such as network requests or memory consumption. Our contributions are implemented in the open-source tool KoAT, and extensive experiments show the performance and power of our implementation in comparison with other tools.\n", "author": [{"name": "Marc Brockschmidt", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Fabian Emmes", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Stephan Falke", "affiliation": "Karlsruhe Institute of Technology, Karlsruhe, Germany"}, {"name": "Carsten Fuhs", "affiliation": "Birkbeck, University of London, London, UK"}, {"name": "J\u00fcrgen Giesl", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Marc Brockschmidt", "affiliation": "Microsoft Research, Cambridge, UK"}, {"name": "Fabian Emmes", "affiliation": "RWTH Aachen University, Aachen, Germany"}, {"name": "Stephan Falke", "affiliation": "Karlsruhe Institute of Technology, Karlsruhe, Germany"}, {"name": "Carsten Fuhs", "affiliation": "Birkbeck, University of London, London, UK"}, {"name": "J\u00fcrgen Giesl", "affiliation": "RWTH Aachen University, Aachen, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "22", "references": [{"title": "Termination analysis of Java bytecode", "authors": ["Elvira Albert", " Puri Arenas", " Michael Codish", " Samir Genaim", " Germ\u00e1n Puebla"]}, {"title": "Closed-form upper bounds in static cost analysis", "authors": ["Elvira Albert", " Puri Arenas", " Samir Genaim"]}, {"title": "Cost analysis of object-oriented bytecode programs", "authors": ["Elvira Albert", " Puri Arenas", " Samir Genaim", " Germ\u00e1n Puebla"]}, {"title": "Verified resource guarantees using COSTA and KeY", "authors": ["Elvira Albert", " Richard Bubel", " Samir Genaim", " Reiner H\u00e4hnle", " Germ\u00e1n Puebla"]}, {"title": "Multi-dimensional rankings, program termination, and complexity bounds of flowchart programs", "authors": ["Christophe Alias", " Alain Darte", " Paul Feautrier"]}, {"title": "Precise cost analysis via local reasoning", "authors": ["Diego Esteban Alonso-Blas", " Puri Arenas"]}, {"title": "A combination framework for complexity", "authors": ["Martin Avanzini "]}, {"title": "A new look at the automatic synthesis of linear ranking functions", "authors": ["Roberto Bagnara", " Fred Mesnard", " Andrea Pescetti"]}, {"title": "On the linear ranking problem for integer linear-constraint loops", "authors": []}, {"title": "Linear, polynomial or exponential? Complexity inference in polynomial time", "authors": []}, {"title": "Proceedings: First Workshop on Horn Clauses for Verification and Synthesis", "authors": ["Nikolaj Bj\u00f8rner", " Fabio Fioravanti", " Andrey Rybalchenko"]}, {"title": "ABC: Algebraic bound computation for loops", "authors": ["R\u00e9gis Blanc", " Thibaud Hottelier"]}, {"title": "Linear ranking with reachability", "authors": [" Zohar Manna"]}, {"title": "Better termination proving through cooperation", "authors": ["Marc Brockschmidt", " Byron Cook"]}, {"title": "Alternating runtime and size complexity analysis of integer programs", "authors": ["Marc Brockschmidt", " Fabian Emmes", " Stephan Falke", " Carsten Fuhs"]}, {"title": "Automated termination proofs for Java programs with cyclic data", "authors": ["Marc Brockschmidt", " Richard Musiol", " Carsten Otto"]}, {"title": "Termination proofs for systems code", "authors": ["Byron Cook", " Andreas Podelski"]}, {"title": "Ramsey vs", "authors": ["Byron Cook", " Abigail See"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Cost analysis of logic programs", "authors": ["Saumya Debray "]}, {"title": "Lower bound cost estimation for logic programs", "authors": ["Saumya Debray", " Pedro L\u00f3pez-Garc\u00eda"]}, {"title": "Termination analysis of C programs using compiler intermediate languages", "authors": ["Stephan Falke", " Deepak Kapur"]}, {"title": "Resource analysis of complex programs with cost equations", "authors": ["Antonio Flores-Montoya "]}, {"title": "SAT solving for termination analysis with polynomial interpretations", "authors": ["Carsten Fuhs", " J\u00fcrgen Giesl", " Aart Middeldorp", " Peter Schneider-Kamp", " Ren\u00e9 Thiemann"]}, {"title": "Proving termination of integer term rewriting", "authors": ["Carsten Fuhs", " J\u00fcrgen Giesl", " Martin Pl\u00fccker", " Peter Schneider-Kamp"]}, {"title": "Proving termination of programs automatically with AProVE", "authors": ["J\u00fcrgen Giesl", " Marc Brockschmidt", " Fabian Emmes", " Florian Frohn", " Carsten Fuhs", " Carsten Otto", " Martin Pl\u00fccker", " Peter Schneider-Kamp", " Thomas Str\u00f6der", " Stephanie Swiderski"]}, {"title": "Symbolic evaluation graphs and term rewriting: A general methodology for analyzing logic programs", "authors": ["J\u00fcrgen Giesl", " Thomas Str\u00f6der", " Peter Schneider-Kamp", " Fabian Emmes"]}, {"title": "Mechanizing and improving dependency pairs", "authors": ["J\u00fcrgen Giesl", " Ren\u00e9 Thiemann", " Peter Schneider-Kamp"]}, {"title": "Synthesizing software verifiers from proof rules", "authors": ["Sergey Grebenshchikov", " Corneliu Popeea"]}, {"title": "SPEED: Precise and efficient static estimation of program computational complexity", "authors": ["Sumit Gulwani"]}, {"title": "Alternation for termination", "authors": [" Akash Lal"]}, {"title": "Termination analysis by learning terminating programs", "authors": ["Matthias Heizmann", " Jochen Hoenicke"]}, {"title": "An overview of Ciao and its design philosophy", "authors": [" Francisco Bueno", " Manuel Carro", " Pedro L\u00f3pez-Garc\u00eda", " Edison Mera"]}, {"title": "Multivariate amortized resource analysis", "authors": ["Jan Hoffmann", " Klaus Aehlig"]}, {"title": "Type-based amortized resource analysis with integers and arrays", "authors": ["Jan Hoffmann "]}, {"title": "A verification toolkit for numerical transition systems\u2014tool paper", "authors": ["Hossein Hojjat", " Filip Konecn\u00fd", " Florent Garnier", " Radu Iosif", " Viktor Kuncak"]}, {"title": "Apron: A library of numerical abstract domains for static analysis", "authors": ["Bertr"]}, {"title": "r-TuBound: Loop bounds for WCET analysis", "authors": ["Jens Knoop", " Laura Kov\u00e1cs"]}, {"title": "On Proving Term Rewriting Systems are Noetherian", "authors": ["Dallas Lankford"]}, {"title": "Proving termination of imperative programs using Max-SMT", "authors": ["Daniel Larraz", " Albert Oliveras", " Enric Rodr\u00edguez-Carbonell"]}, {"title": "The size-change principle for program termination", "authors": ["Chin Soon Lee"]}, {"title": "Ranking templates for linear loops", "authors": ["Jan Leike "]}, {"title": "Automatic numeric abstractions for heap-manipulating programs", "authors": ["Stephen Magill", " Ming-Hsien Tsai", " Peter Lee"]}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "Z3: An efficient SMT solver", "authors": []}, {"title": "User-definable resource bounds analysis for logic programs", "authors": [" Edison Mera", " Pedro L\u00f3pez-Garc\u00eda"]}, {"title": "Analyzing innermost runtime complexity of term rewriting by dependency pairs", "authors": ["Lars Noschinski", " Fabian Emmes"]}, {"title": "A complete method for the synthesis of linear ranking functions", "authors": ["Andreas Podelski "]}, {"title": "Resource usage analysis of logic programs via abstract interpretation using sized types", "authors": ["Alej", " Pedro L\u00f3pez-Garc\u00eda"]}, {"title": "A simple and scalable static analysis for bound analysis and amortized complexity analysis", "authors": ["Moritz Sinn", " Florian Zuleger"]}, {"title": "A termination analyser for Java bytecode based on path-length", "authors": ["Fausto Spoto", " Fred Mesnard"]}, {"title": "Loop summarization and termination analysis", "authors": ["Aliaksei Tsitovich", " Natasha Sharygina"]}, {"title": "A new algorithm for identifying loops in decompilation", "authors": ["Tao Wei", " Jian Mao", " Wei Zou"]}, {"title": "The worst-case execution-time problem: Overview of methods and survey of tools", "authors": ["Reinhard Wilhelm", " Jakob Engblom", " Andreas Ermedahl", " Niklas Holsti", " Stephan Thesing", " et&nbsp;al"]}, {"title": "Bound analysis of imperative programs with the size-change abstraction", "authors": ["Florian Zuleger", " Sumit Gulwani", " Moritz Sinn"]}]},
{"title": "DRF", "time": "September 2016", "keyword": ["Programming Languages and Systems"], "abstract": "The most intuitive memory model for shared-memory multi-threaded programming is \n (SC), but it disallows the use of many compiler and hardware optimizations and thus affects performance. Data-race-free (DRF) models, such as the C++11 memory model, guarantee SC execution for data-race-free programs. But these models provide no guarantee at all for racy programs, compromising the safety and debuggability of such programs. To address the safety issue, the Java memory model, which is also based on the DRF model, provides a weak semantics for racy executions. However, this semantics is subtle and complex, making it difficult for programmers to reason about their programs and for compiler writers to ensure the correctness of compiler optimizations.\nWe present the \n memory model, which is simple for programmers to understand and use while still supporting many common optimizations. We introduce a \n that can be signaled to halt execution. If a program executes without throwing this exception, then \n guarantees that the execution is SC. If a program throws an MM exception during an execution, then \n guarantees that the program has a data race. We observe that SC violations can be detected in hardware through a lightweight form of conflict detection. Furthermore, our model safely allows aggressive compiler and hardware optimizations within compiler-designated program regions. We formalize our memory model, prove several properties of this model, describe a compiler and hardware design suitable for \n, and evaluate the performance overhead due to our compiler and hardware requirements.\n", "author": [{"name": "Daniel Marino", "affiliation": "Symantec Research Labs"}, {"name": "Abhayendra Singh", "affiliation": "Google Inc., CA"}, {"name": "Todd Millstein", "affiliation": "University of California, Los Angeles"}, {"name": "Madanlal Musuvathi", "affiliation": "Microsoft Research, Redmond"}, {"name": "Satish Narayanasamy", "affiliation": "University of Michigan, Ann Arbor"}, {"name": "Daniel Marino", "affiliation": "Symantec Research Labs"}, {"name": "Abhayendra Singh", "affiliation": "Google Inc., CA"}, {"name": "Todd Millstein", "affiliation": "University of California, Los Angeles"}, {"name": "Madanlal Musuvathi", "affiliation": "Microsoft Research, Redmond"}, {"name": "Satish Narayanasamy", "affiliation": "University of Michigan, Ann Arbor"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Shared memory consistency models: A tutorial", "authors": []}, {"title": "Memory models: A case for rethinking parallel languages and hardware", "authors": []}, {"title": "Weak ordering\u2014A new definition", "authors": []}, {"title": "Detecting data races on weak memory systems", "authors": []}, {"title": "BulkCompiler: High-performance sequential consistency through cooperative compiler and hardware support", "authors": ["Wonsun Ahn", " Shanxiang Qi", " Jae-Woo Lee", " Marios Nicolaides", " Xing Fang", " Josep Torrellas", " David Wong"]}, {"title": "The PARSEC benchmark suite: Characterization and architectural implications", "authors": []}, {"title": "InvisiFence: Performance-transparent memory ordering in conventional multiprocessors", "authors": []}, {"title": "Simple thread semantics require race detection", "authors": []}, {"title": "Foundations of the C++ concurrency memory model", "authors": []}, {"title": "PACER: Proportional detection of data races", "authors": []}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": []}, {"title": "A parameterized type system for race-free java programs", "authors": ["Ch"]}, {"title": "The case for system support for concurrency exceptions", "authors": []}, {"title": "BulkSC: Bulk enforcement of sequential consistency", "authors": ["Luis Ceze", " James Tuck", " Pablo Montesinos"]}, {"title": "Bulk disambiguation of speculative threads in multiprocessors", "authors": ["Luis Ceze", " James Tuck", " Josep Torrellas"]}, {"title": "Early experience with a commercial hardware transactional memory implementation", "authors": []}, {"title": "Goldilocks: A race and transaction-aware java runtime", "authors": []}, {"title": "Logical time in distributed computing systems", "authors": []}, {"title": "FastTrack: Efficient and precise dynamic race detection", "authors": []}, {"title": "Detecting violations of sequential consistency", "authors": []}, {"title": "Two techniques to enhance the performance of memory consistency models", "authors": []}, {"title": "Memory consistency and event ordering in scalable shared-memory multiprocessors", "authors": []}, {"title": "Transactional memory coherence and consistency", "authors": ["Lance Hammond", " Vicky Wong", " Ben Hertzberg", " Honggo Wijaya", " Christos Kozyrakis"]}, {"title": "The IBM blue gene/Q compute chip", "authors": []}, {"title": "Transactional memory: Architectural support for lock-free data structures", "authors": []}, {"title": "Intel architecture instruction set extensions programming reference", "authors": ["Intel Corporation"]}, {"title": "Making sequential consistency practical in titanium", "authors": []}, {"title": "Analyses and optimizations for shared address space programs", "authors": []}, {"title": "Time, clocks, and the ordering of events in a distributed system", "authors": []}, {"title": "How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": []}, {"title": "LLVM: A compilation framework for lifelong program analysis & transformation", "authors": []}, {"title": "Efficient sequential consistency via conflict ordering", "authors": ["Changhui Lin", " Vijay Nagarajan", " Rajiv Gupta"]}, {"title": "Conflict exceptions: Providing simple parallel language semantics with precise hardware exceptions", "authors": ["Br", " Luis Ceze", " Karin Strauss", " Shaz Qadeer"]}, {"title": "The java memory model", "authors": []}, {"title": "LiteRace: Effective sampling for lightweight data-race detection", "authors": []}, {"title": "DRFx: A Simple and Efficient Memory Model for Concurrent Programming Languages", "authors": ["Daniel Marino", " Abhayendra Singh", " Todd Millstein", " Madanlal Musuvathi"]}, {"title": "DRFx: A simple and efficient memory model for concurrent programming languages", "authors": ["Daniel Marino", " Abhayendra Singh", " Todd Millstein", " Madanlal Musuvathi"]}, {"title": "A case for an SC-preserving compiler", "authors": ["Daniel Marino", " Abhayendra Singh", " Todd Millstein", " Madanlal Musuvathi"]}, {"title": "Virtual time and global states of distributed systems", "authors": ["Friedemann Mattern"]}, {"title": "Vulcan: Hardware support for detecting sequential consistency violations dynamically", "authors": ["Abdullah Muzahid", " Shanxiang Qi"]}, {"title": "SigRace: Signature-based data race detection", "authors": []}, {"title": "FeS2: A Full-system Execution-driven Simulator for x86", "authors": []}, {"title": "ReEnact: Using thread-level speculation mechanisms to debug data races in multithreaded codes", "authors": []}, {"title": "Volition: Scalable and precise sequential consistency violation detection", "authors": ["Xuehai Qian", " Josep Torrellas", " Benjamin Sahelices"]}, {"title": "Using speculative retirement and larger instruction windows to narrow the performance gap between memory consistency models", "authors": []}, {"title": "Race directed random testing of concurrent programs", "authors": ["Koushik Sen"]}, {"title": "Hybrid static--dynamic analysis for statically bounded region serializability", "authors": ["Aritra Sengupta", " Swarnendu Biswas", " Minjia Zhang"]}, {"title": "Efficient and correct execution of parallel programs that share memory", "authors": []}, {"title": "Efficient processor support for DRFx, a memory model with exceptions", "authors": ["Abhayendra Singh", " Daniel Marino", " Satish Narayanasamy", " Todd Millstein"]}, {"title": "Efficient Processor Support for DRFx, a Memory Model with Exceptions", "authors": ["Abhayendra Singh", " Daniel Marino", " Satish Narayanasamy", " Todd Millstein"]}, {"title": "End-to-end sequential consistency", "authors": ["Abhayendra Singh"]}, {"title": "Compiler techniques for high performance sequentially consistent java programs", "authors": []}, {"title": "Programming Itanium\u00f6-based Systems", "authors": ["Walter Triebel", " Joseph Bissell"]}, {"title": "Mechanisms for store-wait-free multiprocessors", "authors": []}, {"title": "More iteration space tiling", "authors": []}, {"title": "The SPLASH-2 programs: Characterization and methodological considerations", "authors": []}]},
{"title": "The Truth, The Whole Truth, and Nothing But the Truth: A Pragmatic Guide to Assessing Empirical Evaluations", "time": "October 2016", "keyword": ["Programming Languages and Systems"], "abstract": "An unsound claim can misdirect a field, encouraging the pursuit of unworthy ideas and the abandonment of promising ideas. An inadequate description of a claim can make it difficult to reason about the claim, for example, to determine whether the claim is sound. Many practitioners will acknowledge the threat of unsound claims or inadequate descriptions of claims to their field. We believe that this situation is exacerbated, and even encouraged, by the lack of a systematic approach to exploring, exposing, and addressing the source of unsound claims and poor exposition.\nThis article proposes a framework that identifies three sins of reasoning that lead to unsound claims and two sins of exposition that lead to poorly described claims and evaluations. Sins of exposition obfuscate the objective of determining whether or not a claim is sound, while sins of reasoning lead directly to unsound claims.\nOur framework provides practitioners with a principled way of critiquing the integrity of their own work and the work of others. We hope that this will help individuals conduct better science and encourage a cultural shift in our research community to identify and promulgate sound claims.\n", "author": [{"name": "Stephen M. Blackburn", "affiliation": "Australian National University, ACT, Australia"}, {"name": "Amer Diwan", "affiliation": "Google"}, {"name": "Matthias Hauswirth", "affiliation": "Universit\u00e0 della Svizzera italiana, Lugano, Switzerland"}, {"name": "Peter F. Sweeney", "affiliation": "IBM Research, New York, USA"}, {"name": "Jos\u00e9 Nelson Amaral", "affiliation": "University of Alberta, Alberta, Canada"}, {"name": "Tim Brecht", "affiliation": "University of Waterloo, Waterloo, Ontario, Canada"}, {"name": "Lubom\u00edr Bulej", "affiliation": "Charles University, Czech Republic"}, {"name": "Cliff Click", "affiliation": "Azul, H2O, Neurensic"}, {"name": "Lieven Eeckhout", "affiliation": "Ghent University, Zwijnaarde, Belgium"}, {"name": "Sebastian Fischmeister", "affiliation": "University of Waterloo, Waterloo, Ontario, Canada"}, {"name": "Daniel Frampton", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Laurie J. Hendren", "affiliation": "McGill University, Montreal, Quebec, Canada"}, {"name": "Michael Hind", "affiliation": "IBM Research, NY, USA"}, {"name": "Antony L. Hosking", "affiliation": "Australian National University, Data61, Purdue University, ACT, Australia"}, {"name": "Richard E. Jones", "affiliation": "University of Kent, UK"}, {"name": "Tomas Kalibera", "affiliation": "University of Kent, UK"}, {"name": "Nathan Keynes", "affiliation": "Oracle, Brisbane, Australia"}, {"name": "Nathaniel Nystrom", "affiliation": "Universit\u00e0 della Svizzera italiana, Lugano, Switzerland"}, {"name": "Andreas Zeller", "affiliation": "Saarland University, Saarbr\u00fccken Germany"}, {"name": "Stephen M. Blackburn", "affiliation": "Australian National University, ACT, Australia"}, {"name": "Amer Diwan", "affiliation": "Google"}, {"name": "Matthias Hauswirth", "affiliation": "Universit\u00e0 della Svizzera italiana, Lugano, Switzerland"}, {"name": "Peter F. Sweeney", "affiliation": "IBM Research, New York, USA"}, {"name": "Jos\u00e9 Nelson Amaral", "affiliation": "University of Alberta, Alberta, Canada"}, {"name": "Tim Brecht", "affiliation": "University of Waterloo, Waterloo, Ontario, Canada"}, {"name": "Lubom\u00edr Bulej", "affiliation": "Charles University, Czech Republic"}, {"name": "Cliff Click", "affiliation": "Azul, H2O, Neurensic"}, {"name": "Lieven Eeckhout", "affiliation": "Ghent University, Zwijnaarde, Belgium"}, {"name": "Sebastian Fischmeister", "affiliation": "University of Waterloo, Waterloo, Ontario, Canada"}, {"name": "Daniel Frampton", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Laurie J. Hendren", "affiliation": "McGill University, Montreal, Quebec, Canada"}, {"name": "Michael Hind", "affiliation": "IBM Research, NY, USA"}, {"name": "Antony L. Hosking", "affiliation": "Australian National University, Data61, Purdue University, ACT, Australia"}, {"name": "Richard E. Jones", "affiliation": "University of Kent, UK"}, {"name": "Tomas Kalibera", "affiliation": "University of Kent, UK"}, {"name": "Nathan Keynes", "affiliation": "Oracle, Brisbane, Australia"}, {"name": "Nathaniel Nystrom", "affiliation": "Universit\u00e0 della Svizzera italiana, Lugano, Switzerland"}, {"name": "Andreas Zeller", "affiliation": "Saarland University, Saarbr\u00fccken Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "The five orders of ignorance", "authors": []}, {"title": "Misleading performance claims in parallel computation", "authors": []}, {"title": "Facilitating reproducibility in scientific computing: Principles and practice", "authors": []}, {"title": "Independent labs to verify high-profile papers: Reproducibility initiative aims to speed up preclinical research", "authors": []}, {"title": "More trial, less error - An effort to improve scientific studies", "authors": ["Sharon Begley"]}, {"title": "Wake up and smell the coffee: Evaluation methodology for the 21st century", "authors": [" Robin Garner", " Chris Hoffmann", " Rotem Bentzur", " Amer Diwan", " Daniel Feinberg", " Daniel Frampton", " Martin Hirzel", " Antony Hosking", " Maria Jump", " Han Lee", " Aashish Phansalkar", " Darko Stefanovik", " Thomas VanDrunen", " Daniel von Dincklage"]}, {"title": "Repeatability and workability evaluation of SIGMOD 2011", "authors": ["Philippe Bonnet", " Stefan Manegold", " Matias Bj\u00f8rling", " Wei Cao", " Javier Gonzalez", " Joel Granados", " Nancy Hall", " Stratos Idreos", " Milena Ivanova", " Ryan Johnson", " David Koop", " Tim Kraska", " Ren\u00e9 M\u00fcller", " Dan Olteanu", " Paolo Papotti", " Christine Reilly", " Dimitris Tsirogiannis", " Cong Yu", " Juliana Freire"]}, {"title": "The computer scientist as toolsmith II", "authors": [" Jr"]}, {"title": "Using HPM-sampling to drive dynamic compilation", "authors": []}, {"title": "DataMill: Rigorous performance evaluation made easy", "authors": ["Augusto Born de Oliveira", " Jean-Christophe Petkovich", " Thomas Reidemeister"]}, {"title": "Paper bricks: An alternative to complete-story peer reviewing", "authors": ["Jens Dittrich"]}, {"title": "Enabling collaborative, systematic and reproducible research and experimentation in computer engineering with an open publication model", "authors": ["Grigori Fursin"]}, {"title": "Statistically rigorous java performance evaluation", "authors": []}, {"title": "Artifact Evaluation Artifact", "authors": []}, {"title": "Contradicted and initially stronger effects in highly cited clinical research", "authors": []}, {"title": "Garbage Collection: Algorithms for Automatic Dynamic Memory Management", "authors": ["Richard Jones "]}, {"title": "Supporting Experimental Computer Science", "authors": ["Kate Keahey "]}, {"title": "Artifact evaluation for software conferences", "authors": ["Shriram Krishnamurthi"]}, {"title": "Should software conferences respect software? In Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, 8 Applications: Software for Humanity (SPLASH\u201913)", "authors": ["Shriram Krishnamurthi", " James Noble"]}, {"title": "The truth wears off: Is there something wrong with the scientific method? The New Yorker (13 December 2010)", "authors": ["Jonah Lehrer"]}, {"title": "Repeatability 8 workability evaluation of SIGMOD\u201909", "authors": []}, {"title": "Nonideal battery and main memory effects on CPU speed-setting for low power", "authors": []}, {"title": "Producing wrong data without doing anything obviously wrong!", "authors": ["Todd Mytkowicz", " Amer Diwan", " Matthias Hauswirth"]}, {"title": "Evaluating the accuracy of java profilers", "authors": ["Todd Mytkowicz", " Amer Diwan", " Matthias Hauswirth"]}, {"title": "Warning Signs in Experimental Design and Interpretation", "authors": ["Peter Norvig"]}, {"title": "Architectural simulators considered harmful", "authors": ["Tony Nowatzki", " Jaikrishnan Menon", " Chen-Han Ho"]}, {"title": "The Ghost in the Machine: Dont Let it Haunt Your Software Performance Measurements", "authors": ["Vreda Pieterse "]}, {"title": "A multi-language computing environment for literate programming and reproducible research", "authors": ["Eric Schulte", " Dan Davison", " Thomas Dye"]}, {"title": "A literate experimentation manifesto", "authors": ["Jeremy Singer"]}, {"title": "\u2018Setting the default to reproducible\u2019 in computational science research", "authors": ["Victoria Stodden", " Jonathan Borwein"]}, {"title": "Unreliable research", "authors": ["The Economist"]}, {"title": "The speedup-test: A statistical methodology for program speedup analysis and computation", "authors": ["Sid-Ahmed-Ali Touati", " Julien Worms"]}, {"title": "Repeatability, reproducibility, and rigor in systems research", "authors": ["Jan Vitek "]}]},
{"title": "Polymorphic Manifest Contracts, Revised and Resolved", "time": "February 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Manifest contracts track precise program properties by refining types with predicates\u2014for example, {\n:Int\u2223 \n > 0} denotes the positive integers. Contracts and polymorphism make a natural combination: programmers can give strong contracts to abstract types, precisely stating pre- and post conditions while hiding implementation details\u2014 for instance, an abstract type of stacks might specify that the pop operation has input type {\n:\u03b1 Stack \u2223 not (empty \n)}.\nThis article studies a polymorphic calculus with manifest contracts and establishes fundamental properties including type soundness and relational parametricity. Indeed, this is not the first work on polymorphic manifest contracts, but existing calculi are not very satisfactory. Gronski et al. developed the S\n language, which introduces polymorphism through the Type:Type discipline, but they do not study parametricity. Some authors of this article have produced two separate works: Belo et al. [2011] and Greenberg [2013] studied polymorphic manifest contracts and parametricity, but their calculi have metatheoretical problems in the type conversion relations. Indeed, they depend on a few conjectures, which turn out to be false. Our calculus is the first polymorphic manifest calculus with parametricity, depending on no conjectures\u2014it resolves the issues in prior calculi with delayed substitution on casts.\n", "author": [{"name": "Taro Sekiyama", "affiliation": "Kyoto University"}, {"name": "Atsushi Igarashi", "affiliation": "Kyoto University, Kyoto, Japan"}, {"name": "Michael Greenberg", "affiliation": "Pomona College, CA, USA"}, {"name": "Taro Sekiyama", "affiliation": "Kyoto University"}, {"name": "Atsushi Igarashi", "affiliation": "Kyoto University, Kyoto, Japan"}, {"name": "Michael Greenberg", "affiliation": "Pomona College, CA, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "6", "references": [{"title": "Explicit substitutions", "authors": ["Mart\u00edn Abadi", " Luca Cardelli", " Pierre-Louis Curien"]}, {"title": "Dynamic typing in a statically-typed language", "authors": ["Mart\u00edn Abadi", " Luca Cardelli"]}, {"title": "Step-indexed syntactic logical relations for recursive and quantified types", "authors": ["Amal Ahmed"]}, {"title": "Blame for all", "authors": ["Amal Ahmed", " Robert Bruce Findler", " Jacob Matthews"]}, {"title": "Blame for all", "authors": ["Amal Ahmed", " Robert Bruce Findler", " Jeremy Siek"]}, {"title": "Lambda calculi with types", "authors": ["Hendrik Pieter Barendregt"]}, {"title": "Polymorphic contracts", "authors": ["Jo\u00e3o Filipe Belo", " Michael Greenberg", " Atsushi Igarashi"]}, {"title": "Semantic subtyping with an SMT solver", "authors": [" C\u0103t\u0103lin Hri\u0163cu"]}, {"title": "A Polymorphic \u03bb-Calculus with Type:Type", "authors": ["Luca Cardelli"]}, {"title": "First-Class Phantom Types", "authors": ["James Cheney "]}, {"title": "Dependent types for Javascript", "authors": ["Ravi Chugh", " David Herman"]}, {"title": "A survey of the project Automath", "authors": []}, {"title": "The revised report on the syntactic theories of sequential control and state", "authors": ["Matthias Felleisen "]}, {"title": "Contracts for higher-order functions", "authors": ["Robert Bruce Findler "]}, {"title": "Hybrid type checking", "authors": ["Cormac Flanagan"]}, {"title": "Reference: Racket", "authors": ["Matthew Flatt "]}, {"title": "Refinement types for ML", "authors": ["Tim Freeman "]}, {"title": "Manifest Contracts", "authors": ["Michael Greenberg"]}, {"title": "Combining Manifest Contracts with State", "authors": ["Michael Greenberg"]}, {"title": "Space-efficient manifest contracts", "authors": ["Michael Greenberg"]}, {"title": "Contracts made manifest", "authors": ["Michael Greenberg"]}, {"title": "Unifying hybrid types and contracts", "authors": ["Jessica Gronski "]}, {"title": "Sage: Hybrid checking for flexible specifications", "authors": ["Jessica Gronski", " Kenneth Knowles", " Aaron Tomb"]}, {"title": "Syntactic type abstraction", "authors": ["Dan Grossman", " Greg Morrisett"]}, {"title": "Relationally-parametric polymorphic contracts", "authors": ["Arjun Guha", " Jacob Matthews", " Robert Bruce Findler"]}, {"title": "A framework for defining logics", "authors": ["Robert Harper", " Furio Honsell"]}, {"title": "Dynamic typing", "authors": ["Fritz Henglein"]}, {"title": "Space-efficient gradual typing", "authors": ["David Herman", " Aaron Tomb"]}, {"title": "An axiomatic basis for computer programming", "authors": []}, {"title": "Refinement types for Haskell", "authors": ["Ranjit Jhala"]}, {"title": "Type-based data structure verification", "authors": ["Ming Kawaguchi", " Patrick Maxim Rondon"]}, {"title": "Occurrence typing modulo theories", "authors": [" David Kempe"]}, {"title": "Executable Refinement Types", "authors": ["Kenneth Knowles"]}, {"title": "Compositional reasoning and decidable checking for dependent contract types", "authors": ["Kenneth Knowles "]}, {"title": "Hybrid type checking", "authors": ["Kenneth Knowles "]}, {"title": "An effective theory of type refinements", "authors": ["Yitzhak M", " David Walker"]}, {"title": "Parametric polymorphism through run-time sealing or, theorems for low, low prices&excl; In Proceedings of the European Symposium on Programming (ESOP\u201908)", "authors": ["Jacob Matthews "]}, {"title": "Abstract types have existential type", "authors": []}, {"title": "SHILL: A secure shell scripting language", "authors": ["Scott Moore", " Christos Dimoulas", " Dan King"]}, {"title": "Types are not sets", "authors": []}, {"title": "Polymorphism and separation in Hoare type theory", "authors": ["Aleks", " Greg Morrisett"]}, {"title": "Non-parametric parametricity", "authors": ["Georg Neis", " Derek Dreyer"]}, {"title": "Soft contract verification", "authors": [" Sam Tobin-Hochstadt"]}, {"title": "Dynamic typing with dependent types", "authors": ["Xinming Ou", " Gang Tan", " Yitzhak M"]}, {"title": "Inductive definitions in the system Coq\u2014rules and properties", "authors": ["Christine Paulin-Mohring"]}, {"title": "Relating cryptography and polymorphism", "authors": ["Benjamin Pierce "]}, {"title": "Parametric polymorphism and operational equivalence", "authors": []}, {"title": "Types, abstraction and parametric polymorphism", "authors": []}, {"title": "Liquid types", "authors": [" Ming Kawaguchi"]}, {"title": "Logical Relations for a Manifest Contract Calculus, Fixed (talk abstract and slides)", "authors": ["Taro Sekiyama "]}, {"title": "Manifest contracts for datatypes", "authors": ["Taro Sekiyama", " Yuki Nishida"]}, {"title": "Gradual typing for functional languages", "authors": []}, {"title": "Gradual typing for first-class classes", "authors": ["Asumu Takikawa", " Christos Dimoulas", " Sam Tobin-Hochstadt"]}, {"title": "Interlanguage migration: From scripts to programs", "authors": ["Sam Tobin-Hochstadt "]}, {"title": "Logical types for untyped languages", "authors": ["Sam Tobin-Hochstadt "]}, {"title": "Theorems for free! In Proceedings of the Conference on Functional Programming and Computer Architecture (FPCA\u201989)", "authors": ["Philip Wadler"]}, {"title": "Well-typed programs can\u2019t be blamed", "authors": ["Philip Wadler "]}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": "Guarded recursive datatype constructors", "authors": ["Hongwei Xi", " Chiyan Chen"]}, {"title": "Dependent types in practical programming", "authors": ["Hongwei Xi "]}]},
{"title": "On Subtyping-Relation Completeness, with an Application to Iso-Recursive Types", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Well-known techniques exist for proving the soundness of subtyping relations with respect to type safety. However, completeness has not been treated with widely applicable techniques, as far as we\u2019re aware.\nThis article develops techniques for stating and proving that a subtyping relation is complete with respect to type safety and applies the techniques to the study of iso-recursive subtyping. A new proof technique, induction on failing derivations, is provided that may be useful in other domains as well.\nThe common subtyping rules for iso-recursive types\u2014the \u201cAmber rules\u201d\u2014are shown to be incomplete with respect to type safety. That is, there exist iso-recursive types \u03c4\n and \u03c4\n such that \u03c4\n can safely be considered a subtype of \u03c4\n, but \u03c4\n \u2a7d \u03c4\n is not derivable with the Amber rules.\nNew, algorithmic rules are defined for subtyping iso-recursive types, and the rules are proved sound and complete with respect to type safety. The fully implemented subtyping algorithm is optimized to run in \n(\n) time, where \n is the number of \u03bc-terms in the types being considered and \n is the size of the types being considered.\n", "author": [{"name": "Jay Ligatti", "affiliation": "University of South Florida"}, {"name": "Jeremy Blackburn", "affiliation": "Telefonica Research"}, {"name": "Michael Nachtigal", "affiliation": "University of South Florida"}, {"name": "Jay Ligatti", "affiliation": "University of South Florida"}, {"name": "Jeremy Blackburn", "affiliation": "Telefonica Research"}, {"name": "Michael Nachtigal", "affiliation": "University of South Florida"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Subtyping recursive types", "authors": []}, {"title": "Union and intersection types for secure protocol implementations", "authors": ["Michael Backes", " C\u0103t\u0103lin Hri\u0163cu"]}, {"title": "A filter lambda model and the completeness of type assignment", "authors": ["Henk Barendregt", " Mario Coppo"]}, {"title": "Refinement types for secure implementations", "authors": ["Jesper Bengtson", " Karthikeyan Bhargavan", " C\u00e9dric Fournet"]}, {"title": "Coinductive axiomatization of recursive type equality and subtyping", "authors": ["Michael Br"]}, {"title": "Amber", "authors": ["Luca Cardelli"]}, {"title": "Subtyping, recursion and parametric polymorphism in kernel fun", "authors": ["Dario Colazzo "]}, {"title": "Inheritance is not subtyping", "authors": []}, {"title": "Preciseness of subtyping on intersection and union types", "authors": ["Mariangiola Dezani-Ciancaglini "]}, {"title": "Th\u00e9orie, Conception Et R\u00e9alisation D\u2019un Langage De Programmation Fonctionnel Adapt\u00e9 \u00e0 XML", "authors": ["Alain Frisch"]}, {"title": "Semantic subtyping: Dealing set-theoretically with function, union, intersection, and negation types", "authors": ["Alain Frisch", " Giuseppe Castagna"]}, {"title": "Recursive subtyping revealed", "authors": ["Vladimir Gapeyev"]}, {"title": "Numbering matters: First-order canonical forms for second-order recursive types", "authors": ["Nadji Gauthier "]}, {"title": "Practical Foundations for Programming Languages", "authors": ["Robert Harper"]}, {"title": "Datatypes and Subtyping", "authors": ["Haruo Hosoya"]}, {"title": "Regular expression types for XML", "authors": ["Haruo Hosoya", " J\u00e9r\u00f4me Vouillon"]}, {"title": "Contractive signatures with recursive types, type parameters, and abstract types", "authors": ["Hyeonseung Im", " Keiko Nakata"]}, {"title": "Efficient recursive subtyping", "authors": ["Dexter Kozen", " Jens Palsberg"]}, {"title": "Formal Semantics of the FLINT Intermediate Language", "authors": ["Christopher League "]}, {"title": "Induction on Failing Derivations", "authors": ["Jay Ligatti"]}, {"title": "Subtyping-Algorithm Implementation", "authors": ["Jay Ligatti"]}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": "An ideal model for recursive polymorphic types", "authors": ["David MacQueen", " Gordon Plotkin"]}, {"title": "Programming with Intersection Types and Bounded Polymorphism", "authors": []}, {"title": "Types and Programming Languages", "authors": []}, {"title": "On behavioral subtyping and completeness", "authors": []}, {"title": "A structural approach to operational semantics", "authors": []}, {"title": "A complete type inference system for subtyped recursive types", "authors": ["Tatsurou Sekiguchi "]}, {"title": "Adding Axioms to Cardelli-Wegner Subtyping", "authors": []}, {"title": "The theory of classification, part 4: Object types and subtyping", "authors": []}, {"title": "Equational theories with recursive types", "authors": []}, {"title": "Taming wildcards in Java\u2019s type system", "authors": ["Ross Tate", " Alan Leung"]}, {"title": "The Minimal Relevant Logic and the Call-by-Value Lambda Calculus", "authors": ["Steffen van Bakel", " Mariangiola Dezani-Ciancaglini", " Ugo de'Liguoro"]}, {"title": "Typed compilation of recursive datatypes", "authors": [" Derek Dreyer", " Leaf Petersen", " Karl Crary", " Robert Harper"]}, {"title": "Subtyping union types", "authors": ["J\u00e9r\u00f4me Vouillon"]}, {"title": "Polymorphic regular tree types and patterns", "authors": ["J\u00e9r\u00f4me Vouillon"]}]},
{"title": "Limitations of Partial Compaction: Towards Practical Bounds", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Compaction of a managed heap is a costly operation to be avoided as much as possible in commercial runtimes. Instead, partial compaction is often used to defragment parts of the heap and avoid space blowup. Previous study of compaction limitation provided some initial asymptotic bounds but no implications for practical systems. In this work, we extend the theory to obtain better bounds and make them strong enough to become meaningful for modern systems.\n", "author": [{"name": "Nachshon Cohen", "affiliation": "Technion Institute of Technology, Haifa, Israel"}, {"name": "Erez Petrank", "affiliation": "Technion Institute of Technology, Haifa, Israel"}, {"name": "Nachshon Cohen", "affiliation": "Technion Institute of Technology, Haifa, Israel"}, {"name": "Erez Petrank", "affiliation": "Technion Institute of Technology, Haifa, Israel"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "An efficient parallel heap compaction algorithm", "authors": ["Diab Abuaiadh", " Yoav Ossia", " Erez Petrank"]}, {"title": "A real-time garbage collector with low overhead and consistent utilization", "authors": [" Perry Cheng"]}, {"title": "An algorithm for parallel incremental compaction", "authors": ["Ori Ben-Yitzhak", " Irit Goft", " Elliot Kolodner", " Kean Kuiper"]}, {"title": "Space overhead bounds for dynamic memory management with partial compaction", "authors": []}, {"title": "Bounding space usage of conservative garbage collectors, See POPL 2002 {2002}, 93--100", "authors": ["Hans-Juergen Boehm"]}, {"title": "The space cost of lazy reference counting", "authors": ["Hans-Juergen Boehm"]}, {"title": "The Pauseless GC algorithm", "authors": ["Cliff Click", " Gil Tene"]}, {"title": "Garbage-first garbage collection", "authors": ["David Detlefs", " Christine Flood", " Steven Heller"]}, {"title": "The Garbage Collection Handbook: The Art of Automatic Memory Management", "authors": ["Richard Jones", " Antony Hosking"]}, {"title": "The compressor: Concurrent, incremental and parallel compaction", "authors": ["Haim Kermany "]}, {"title": "The hardness of cache conscious data placement", "authors": ["Erez Petrank "]}, {"title": "A study of concurrent real-time garbage collectors", "authors": ["Filip Pizlo", " Erez Petrank"]}, {"title": "Twenty-Ninth Annual ACM Symposium on Principles of Programming Languages", "authors": ["POPL"]}, {"title": "An estimate of the store size necessary for dynamic storage allocation", "authors": []}, {"title": "Bounds for some functions concerning dynamic storage allocation", "authors": []}]},
{"title": "SPL: An Extensible Language for Distributed Stream Processing", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Big data is revolutionizing how all sectors of our economy do business, including telecommunication, transportation, medical, and finance. Big data comes in two flavors: data at rest and data in motion. Processing data in motion is \n. Stream processing for big data analytics often requires scale that can only be delivered by a distributed system, exploiting parallelism on many hosts and many cores. One such distributed stream processing system is IBM Streams. Early customer experience with IBM Streams uncovered that another core requirement is extensibility, since customers want to build high-performance domain-specific operators for use in their streaming applications. Based on these two core requirements of distribution and extensibility, we designed and implemented the Streams Processing Language (SPL). This article describes SPL with an emphasis on the language design, distributed runtime, and extensibility mechanism. SPL is now the gateway for the IBM Streams platform, used by our customers for stream processing in a broad range of application domains.\n", "author": [{"name": "Martin Hirzel", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Scott Schneider", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Bu\u011fra Gedik", "affiliation": "Bilkent University, Ankara, Turkey"}, {"name": "Martin Hirzel", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Scott Schneider", "affiliation": "IBM Thomas J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Bu\u011fra Gedik", "affiliation": "Bilkent University, Ankara, Turkey"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "11", "references": [{"title": "The design of the Borealis stream processing engine", "authors": [" Yanif Ahmad", " Magdalena Balazinska", " U\u011fur Cetintemel", " Mitch Cherniack", " Jeong-Hyon Hwang", " Wolfgang Lindner", " Alex", " Esther Ryvkina", " Nesime Tatbul", " Ying Xing"]}, {"title": "Aurora: A new model and architecture for data stream management", "authors": [" Don Carney", " U\u011fur Cetintemel", " Mitch Cherniack", " Christian Convey", " Sangdon Lee", " Michael Stonebraker", " Nesime Tatbul"]}, {"title": "Efficient pattern matching over event streams", "authors": ["Jagrati Agrawal", " Yanlei Diao", " Daniel Gyllstrom"]}, {"title": "DBToaster: A SQL compiler for high-performance delta processing in main-memory databases", "authors": ["Yanif Ahmad "]}, {"title": "MillWheel: Fault-tolerant stream processing at internet scale", "authors": ["Tyler Akidau", " Alex Balikov", " Kaya Bekiroglu", " Slava Chernyak", " Josh Haberman", " Reuven Lax", " Sam McVeety", " Daniel Mills", " Paul Nordstrom"]}, {"title": "The extensibility framework in Microsoft streaminsight", "authors": ["Mohamed Ali", " Badrish Ch", " Jonathan Goldstein"]}, {"title": "The CQL continuous query language: Semantic foundations and query execution", "authors": ["Arvind Arasu", " Shivnath Babu"]}, {"title": "Linear road: A stream data management benchmark", "authors": ["Arvind Arasu", " Mitch Cherniack", " Eduardo Galvez", " David Maier", " Anurag Maskey", " Esther Ryvkina", " Michael Stonebraker"]}, {"title": "META: Middleware for events, transactions, and analytics", "authors": ["Matthew Arnold", " David Grove", " Benjamin Herta", " Michael Hind", " Martin Hirzel", " Arun Iyengar", " Louis M", " Avraham Shinnar", " J\u00e9r\u00f4me Sim\u00e9on", " Mikio Takeuchi", " Olivier Tardieu"]}, {"title": "Lime: A java-compatible and synthesizable language for heterogeneous architectures", "authors": ["Joshua Auerbach", " Perry Cheng"]}, {"title": "Models and issues in data stream systems", "authors": ["Brian Babcock", " Shivnath Babu", " Mayur Datar", " Rajeev Motwani"]}, {"title": "The Java Syntactic Extender (JSE)", "authors": ["Jonathan Bachrach "]}, {"title": "Consistent streaming through time: A vision for event stream processing", "authors": [" Jonathan Goldstein", " Mohamed Ali"]}, {"title": "The Esterel synchronous programming language: Design, semantics, implementation", "authors": ["G\u00e9rard Berry "]}, {"title": "Jaql: A scripting language for large scale semistructured data analysis", "authors": [" Vuk Ercegovac", " Rainer Gemulla", " Andrey Balmin", " Mohamed Eltabakh", " Carl-Christian Kanne", " Fatma Ozcan"]}, {"title": "IBM infosphere streams for scalable, real-time, intelligent transportation services", "authors": ["Alain Biem", " Eric Bouillet", " Hanhua Feng", " An", " Anton Riabov", " Olivier Verscheure", " Haris Koutsopoulos"]}, {"title": "A streaming approach to radio astronomy imaging", "authors": ["Alain Biem", " Bruce Elmegreen", " Olivier Verscheure", " Deepak Turaga", " Henrique Andrade"]}, {"title": "StreamJIT: A commensal compiler for high-performance stream programming", "authors": ["Jeffrey Bosboom", " Sumanaruban Rajadurai", " Weng-Fai Wong"]}, {"title": "Experience report: Processing 6 billion CDRs/day: from research to production", "authors": ["Eric Bouillet", " Ravi Kothari", " Vibhore Kumar", " Laurent Mignet", " Senthil Nathan", " An", " Octavian Udrea"]}, {"title": "FlumeJava: Easy, efficient data-parallel pipelines", "authors": ["Craig Chambers", " Ashish Raniwala", " Frances Perry", " Stephen Adams", " Robert Bradshaw"]}, {"title": "TelegraphCQ: Continuous dataflow processing for an uncertain world", "authors": ["Sirish Ch", " Owen Cooper", " Amol Deshp", " Wei Hong", " Sailesh Krishnamurthy", " Samuel Madden", " Vijayshankar Raman", " Frederick Reiss"]}, {"title": "NiagaraCQ: A scalable continuous query system for internet databases", "authors": ["Jianjun Chen", " Feng Tian"]}, {"title": "MapReduce online", "authors": ["Tyson Condie", " Neil Conway", " Peter Alvaro", " Khaled Elmeleegy"]}, {"title": "Hancock: A language for extracting signatures from data streams", "authors": ["Corinna Cortes", " Kathleen Fisher", " Daryl Pregibon"]}, {"title": "Gigascope: A stream database for network applications", "authors": ["Chuck Cranor", " Theodore Johnson", " Oliver Spataschek"]}, {"title": "Visual debugging for stream processing applications", "authors": ["Wim De Pauw", " Mihai Letia", " Bu\u011fra Gedik", " Henrique Andrade", " Andy Frenkiel", " Michael Pfeifer"]}, {"title": "MapReduce: Simplified data processing on large clusters", "authors": ["Jeffrey Dean "]}, {"title": "Cayuga: A general purpose event monitoring system", "authors": ["Alan Demers", " Johannes Gehrke", " Biswanath P", " Mirek Riedewald", " Varun Sharma"]}, {"title": "Event processing with esper and nesper", "authors": ["Esper"]}, {"title": "SPADE: The system s declarative stream processing engine", "authors": ["Bu\u011fra Gedik", " Henrique Andrade", " Kun-Lung Wu"]}, {"title": "Elastic scaling for data stream processing", "authors": ["Bu\u011fra Gedik", " Scott Schneider", " Martin Hirzel"]}, {"title": "Exploiting coarse-grained task, data, and pipeline parallelism in stream programs", "authors": [" William Thies"]}, {"title": "The synchronous data flow programming language LUSTRE", "authors": ["Nicholas Halbwachs", " Paul Caspi", " Pascal Raymond"]}, {"title": "Partition and compose: Parallel complex event processing", "authors": ["Martin Hirzel"]}, {"title": "IBM streams processing language: Analyzing big data in motion", "authors": ["Martin Hirzel", " Henrique Andrade", " Bu\u011fra Gedik", " Gabriela Jacques-Silva", " Rohit Kh", " Vibhore Kumar", " Mark Mendell", " Howard Nasgaard", " Scott Schneider", " Robert Soul\u00e9"]}, {"title": "SPL Streams Processing Language Specification", "authors": ["Martin Hirzel", " Henrique Andrade", " Bu\u011fra Gedik", " Vibhore Kumar", " Giuliano Losa", " Mark Mendell", " Howard Nasgaard", " Robert Soul\u00e9"]}, {"title": "Streams that compose using macros that oblige", "authors": ["Martin Hirzel "]}, {"title": "Jeannie: Granting Java native interface developers their wishes", "authors": ["Martin Hirzel "]}, {"title": "Spreadsheets for stream processing with unbounded windows and partitions", "authors": ["Martin Hirzel", " Rodric Rabbah", " Philippe Suter", " Olivier Tardieu"]}, {"title": "A catalog of stream processing optimizations", "authors": ["Martin Hirzel", " Robert Soul\u00e9", " Scott Schneider", " Bu\u011fra Gedik"]}, {"title": "Modular domain specific languages and tools", "authors": ["Paul Hudak"]}, {"title": "Arrows, robots, and functional reactive programming", "authors": ["Paul Hudak", " Antony Courtney", " Henrik Nilsson"]}, {"title": "Advances in dataflow programming languages", "authors": []}, {"title": "The semantics of a simple language for parallel processing", "authors": ["Gilles Kahn"]}, {"title": "COLA: Optimizing stream processing applications via graph partitioning", "authors": ["Rohit Kh", " Kirsten Hildrum", " Sujay Parekh", " Deepak Rajan", " Joel Wolf", " Kun-Lung Wu", " Henrique Andrade"]}, {"title": "Incremental DNA sequence analysis in the cloud", "authors": ["Romeo Kienzler", " R\u00e9my Bruggmann", " An"]}, {"title": "Marco: Safe, expressive macros for any language", "authors": ["Byeongcheol Lee", " Robert Grimm", " Martin Hirzel"]}, {"title": "Synchronous data flow", "authors": []}, {"title": "Deadlock avoidance for streaming computations with filtering", "authors": ["Peng Li", " Kunal Agrawal", " Jeremy Buhler"]}, {"title": "SPL LogAnalysisBenchmark on StreamsExchange", "authors": ["LogMon"]}, {"title": "Extending a general-purpose streaming system for XML", "authors": [" Howard Nasgaard", " Eric Bouillet", " Martin Hirzel"]}, {"title": "Naiad: A timely dataflow system", "authors": [" Frank McSherry", " Rebecca Isaacs", " Michael Isard", " Paul Barham"]}, {"title": "Pig Latin: A not-so-foreign language for data processing", "authors": ["Christopher Olston", " Benjamin Reed", " Utkarsh Srivastava", " Ravi Kumar"]}, {"title": "The OpenMP API specificaiton for parallel programming", "authors": ["OpenMP"]}, {"title": "Evaluation of a high-volume, low-latency market data processing system implemented with IBM middleware", "authors": ["Yoonho Park", " Richard King", " Senthil Nathan", " Wesley Most"]}, {"title": "Interpreting the data: Parallel analysis with Sawzall", "authors": ["Rob Pike", " Sean Dorward", " Robert Griesemer"]}, {"title": "\u2019C and tcc: A language and compiler for dynamic code generation", "authors": ["Massimiliano Poletto"]}, {"title": "Wishful search: Interactive composition of data mashups", "authors": [" Eric Bouillet", " Zhen Liu"]}, {"title": "Auto-parallelizing stateful distributed streaming applications", "authors": ["Scott Schneider", " Martin Hirzel", " Bu\u011fra Gedik"]}, {"title": "Safe data parallelism for general streaming", "authors": ["Scott Schneider", " Martin Hirzel", " Bu\u011fra Gedik"]}, {"title": "Capture fields: Modularity in a stream-relational event processing language", "authors": ["Naomi Seyfer", " Richard Tibbetts"]}, {"title": "Dynamic expressivity with static optimization for streaming languages", "authors": ["Robert Soul\u00e9", " Saman Amarasinghe", " Robert Grimm"]}, {"title": "A universal calculus for stream processing languages", "authors": ["Robert Soul\u00e9", " Martin Hirzel", " Robert Grimm", " Bu\u011fra Gedik", " Henrique Andrade", " Vibhore Kumar"]}, {"title": "Real-time analysis for short-term prognosis in intensive care", "authors": [" Jimeng Sun", " Alain Biem", " Jianying Hu", " Marion Blount"]}, {"title": "A survey of stream processing", "authors": ["Robert Stephens"]}, {"title": "Multi-stage programming with explicit annotation", "authors": ["Walid Taha "]}, {"title": "Autopipelining for data stream processing", "authors": ["Yuzhe Tang "]}, {"title": "General incremental sliding-window aggregation", "authors": ["Kanat Tangwongsan", " Martin Hirzel", " Scott Schneider"]}, {"title": "Hive\u2014A warehousing solution over a map-reduce framework", "authors": ["Ashish Thusoo", " Sen Joydeep Sarma", " Namit Jain", " Zheng Shao", " Prasad Chakka", " Suresh Anthony", " Hao Liu", " Pete Wyckoff"]}, {"title": "Languages as libraries", "authors": ["Sam Tobin-Hochstadt", " Vincent St-Amour", " Ryan Culpepper", " Matthew Flatt"]}, {"title": "Storm @Twitter", "authors": ["Ankit Toshniwal", " Siddarth Taneja", " Amit Shukla", " Karthik Ramasamy", " Sanjeev Kulkarni", " Jason Jackson", " Krishna Gade", " Maosong Fu", " Jake Donham", " Nikunj Bhagat", " Sailesh Mittal"]}, {"title": "Stream processing with a spreadsheet", "authors": [" Olivier Tardieu", " Rodric Rabbah", " Philippe Suter"]}, {"title": "Testing properties of dataflow program operators", "authors": ["Zhihong Xu", " Martin Hirzel", " Gregg Rothermel"]}, {"title": "DryadLINQ: A system for general-purpose distributed data-parallel computing using a high-level language", "authors": ["Yuan Yu", " Michael Isard", " Dennis Fetterly", " Mihai Budiu", " \u00dalfar Erlingsson", " Pradeep Kumar Gunda"]}, {"title": "Discretized streams: Fault-tolerant streaming computation at scale", "authors": ["Matei Zaharia", " Tathagata Das", " Haoyuan Li", " Timothy Hunter", " Scott Shenker"]}, {"title": "SpamWatcher: A streaming social network analytic on the IBM wire-speed processor", "authors": ["Qiong Zou", " Bu\u011fra Gedik"]}]},
{"title": "Towards a Compiler for Reals", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Numerical software, common in scientific computing or embedded systems, inevitably uses a finite-precision approximation of the real arithmetic in which most algorithms are designed. In many applications, the roundoff errors introduced by finite-precision arithmetic are not the only source of inaccuracy, and measurement and other input errors further increase the uncertainty of the computed results. Adequate tools are needed to help users select suitable data types and evaluate the provided accuracy, especially for safety-critical applications.\nWe present a source-to-source compiler called Rosa that takes as input a real-valued program with error specifications and synthesizes code over an appropriate floating-point or fixed-point data type. The main challenge of such a compiler is a fully automated, sound, and yet accurate-enough numerical error estimation. We introduce a unified technique for bounding roundoff errors from floating-point and fixed-point arithmetic of various precisions. The technique can handle nonlinear arithmetic, determine closed-form symbolic invariants for unbounded loops, and quantify the effects of discontinuities on numerical errors. We evaluate Rosa on a number of benchmarks from scientific computing and embedded systems and, comparing it to the state of the art in automated error estimation, show that it presents an interesting tradeoff between accuracy and performance.\n", "author": [{"name": "Eva Darulova", "affiliation": "Ecole Polytechnique Federale de Lausanne"}, {"name": "Viktor Kuncak", "affiliation": "Ecole Polytechnique Federale de Lausanne, Lausanne, Switzerland"}, {"name": "Eva Darulova", "affiliation": "Ecole Polytechnique Federale de Lausanne"}, {"name": "Viktor Kuncak", "affiliation": "Ecole Polytechnique Federale de Lausanne, Lausanne, Switzerland"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "29", "references": [{"title": "Automatic verification of control system implementations", "authors": ["Adolfo Anta", " Rupak Majumdar", " Indranil Saha"]}, {"title": "Multi-prover verification of floating-point programs", "authors": ["Ali Ayad "]}, {"title": "C++/Fortran-90 double-double and quad-double package", "authors": [" Yozo Hida"]}, {"title": "A dynamic program analysis to find floating-point accuracy problems", "authors": ["Florian Benz", " Andreas Hildebr"]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " J\u00e9rome Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Formal verification of numerical programs: From C annotated programs to mechanical proofs", "authors": ["Sylvie Boldo "]}, {"title": "An automatable formal semantics for IEEE-754 floating-point arithmetic", "authors": ["Martin Brain", " Cesare Tinelli", " Philipp R\u00fcmmer"]}, {"title": "Mixed abstractions for floating-point arithmetic", "authors": ["Angelo Brillout", " Daniel Kroening"]}, {"title": "Frama-C Software Analyzers", "authors": ["CEA-LIST"]}, {"title": "Proving programs robust", "authors": ["Swarat Chaudhuri", " Sumit Gulwani", " Roberto Lublinerman"]}, {"title": "A sound floating-point polyhedra abstract domain", "authors": ["Liqian Chen", " Antoine Min\u00e9"]}, {"title": "Efficient search for inputs causing high floating-point errors", "authors": ["Wei-Fan Chiang", " Ganesh Gopalakrishnan", " Zvonimir Rakamaric"]}, {"title": "Trustworthy numerical computation in scala", "authors": ["Eva Darulova "]}, {"title": "Sound compilation of reals", "authors": ["Eva Darulova "]}, {"title": "Affine arithmetic: Concepts and applications", "authors": []}, {"title": "Z3: An efficient SMT solver", "authors": ["Leonardo De Moura "]}, {"title": "Accurate and efficient expression evaluation and linear algebra", "authors": ["James Demmel", " Ioana Dumitriu", " Olga Holtz"]}, {"title": "Lossy Polynomial Datapath Synthesis", "authors": ["Theo Drane"]}, {"title": "Static analysis of digital filters", "authors": ["J\u00e9r\u00f4me Feret"]}, {"title": "The arithmetic-geometric progression abstract domain", "authors": ["J\u00e9r\u00f4me Feret"]}, {"title": "Unifying bit-width optimisation for fixed-point and floating-point designs", "authors": ["Altaf Abdul Gaffar", " Oskar Mencer", " Wayne Luk"]}, {"title": "A non-local method for robustness analysis of floating point programs", "authors": ["Ivan Gazeau", " Dale Miller"]}, {"title": "The zonotope abstract domain taylor1+", "authors": ["Khalil Ghorbal", " Eric Goubault"]}, {"title": "A logical product approach to zonotope intersection", "authors": ["Khalil Ghorbal", " Eric Goubault"]}, {"title": "What every computer scientist should know about floating-point arithmetic", "authors": ["David Goldberg"]}, {"title": "Static analysis of finite precision computations", "authors": ["Eric Goubault "]}, {"title": "Robustness analysis of finite precision implementations", "authors": ["Eric Goubault "]}, {"title": "On the Maximum Relative Error When Computing x", "authors": ["Stef Graillat", " Vincent Lef\u00e8vre"]}, {"title": "Laboratoire d\u2019Informatique de Paris 6, Inria Grenoble Rh\u00f4ne-Alpes", "authors": []}, {"title": "Deciding floating-point logic with systematic abstraction", "authors": ["Leopold Haller", " Alberto Griggio", " Martin Brain"]}, {"title": "Floating-point verification using theorem proving", "authors": ["John Harrison"]}, {"title": "Accuracy and Stability of Numerical Algorithms", "authors": []}, {"title": "IEEE standard for floating-point arithmetic", "authors": ["Computer Society IEEE"]}, {"title": "Programming Languages\u2014C\u2014Extensions to Support Embedded Processors", "authors": ["ISO/IEC"]}, {"title": "Numerical stability analysis of floating-point computations using software model checking", "authors": ["Franjo Ivancic", " Sriram Sankaranarayanan"]}, {"title": "Synthesis of optimal fixed-point implementations of numerical software routines", "authors": []}, {"title": "Solving non-linear arithmetic", "authors": ["Dejan Jovanovi\u0107 "]}, {"title": "Finite precision bit-width allocation using sat-modulo theory", "authors": []}, {"title": "Automatically adapting programs for mixed-precision floating-point computation", "authors": []}, {"title": "Dynamic floating-point cancellation detection", "authors": []}, {"title": "Accuracy-guaranteed bit-width optimization", "authors": [" Altaf Abdul Gaffar", " Oskar Mencer", " Wayne Luk"]}, {"title": "Towards program optimization through automated analysis of numerical precision", "authors": [" Matthew Ho"]}, {"title": "Systematic testing for control applications", "authors": ["Rupak Majumdar", " Indranil Saha"]}, {"title": "Low-power optimization by smart bit-width allocation in a systemc-based asic design environment", "authors": ["Arindam Mallik", " Debjit Sinha", " Prithviraj Banerjee"]}, {"title": "Static analysis of the numerical stability of loops", "authors": ["Matthieu Martel"]}, {"title": "Relational abstract domains for the detection of floating-point run-time errors", "authors": ["Antoine Min\u00e9"]}, {"title": "Interval Analysis", "authors": []}, {"title": "Verifying (in-)stability in floating-point programs by increasing precision, using SMT solving", "authors": ["Gabriele Paganelli "]}, {"title": "Precimonious: Tuning assistant for floating-point precision", "authors": ["Cindy Rubio-Gonz\u00e1lez", " Cuong Nguyen", " Hong Diep Nguyen", " James Demmel", " William Kahan", " Koushik Sen", " Costin Iancu"]}, {"title": "Numerical \u2018health check\u2019 for scientific codes: The CADNA approach", "authors": [" Fabienne J\u00e9z\u00e9quel", " Christophe Denis"]}, {"title": "Rigorous estimation of floating-point round-off errors with symbolic taylor expansions", "authors": ["Alexey Solovyev", " Charles Jacobsen", " Zvonimir Rakamaric"]}, {"title": "Perturbing numerical calculations for statistical analysis of floating-point program (in)stability", "authors": ["Enyi Tang", " Earl Barr", " Xu"]}, {"title": "Numerical Methods with Worked Examples", "authors": ["Chris Woodford "]}, {"title": "Fixed-Point Arithmetic: An Introduction", "authors": []}]},
{"title": "Programs from Proofs: A Framework for the Safe Execution of Untrusted Software", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Today, software is traded worldwide on global markets, with apps being downloaded to smartphones within minutes or seconds. This poses, more than ever, the challenge of ensuring safety of software in the face of (1) unknown or untrusted software providers together with (2) resource-limited software consumers. The concept of Proof-Carrying Code (PCC), years ago suggested by Necula, provides one framework for securing the execution of untrusted code. PCC techniques attach safety proofs, constructed by software producers, to code. Based on the assumption that \n proofs is usually much simpler than \n proofs, software consumers should thus be able to quickly check the safety of software. However, PCC techniques often suffer from the size of \n (i.e., the attached proofs), making PCC techniques inefficient in practice.\nIn this article, we introduce a new framework for the safe execution of untrusted code called \n (PfP). The basic assumption underlying the PfP technique is the fact that the \n of programs significantly influences the complexity of checking a specific safety property. Instead of attaching proofs to program code, the PfP technique transforms the program into an efficiently checkable form, thus guaranteeing quick safety checks for software consumers. For this transformation, the technique also uses a producer-side automatic proof of safety. More specifically, safety proving for the software producer proceeds via the construction of an abstract reachability graph (ARG) unfolding the control-flow automaton (CFA) up to the degree necessary for simple checking. To this end, we combine different sorts of software analysis: expensive analyses incrementally determining the degree of unfolding, and cheap analyses responsible for safety checking. Out of the abstract reachability graph we generate the new program. In its CFA structure, it is isomorphic to the graph and hence another, this time consumer-side, cheap analysis can quickly determine its safety.\nLike PCC, Programs from Proofs is a general framework instantiable with different sorts of (expensive and cheap) analysis. Here, we present the general framework and exemplify it by some concrete examples. We have implemented different instantiations on top of the configurable program analysis tool CPA\n and report on experiments, in particular on comparisons with PCC techniques.\n", "author": [{"name": "Marie-Christine Jakobs", "affiliation": "Paderborn University (Germany)"}, {"name": "Heike Wehrheim", "affiliation": "Paderborn University (Germany)"}, {"name": "Marie-Christine Jakobs", "affiliation": "Paderborn University (Germany)"}, {"name": "Heike Wehrheim", "affiliation": "Paderborn University (Germany)"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Abstraction-carrying code", "authors": ["Elvira Albert", " Germ\u00e1n Puebla"]}, {"title": "Improving data-flow analysis with path profiles", "authors": []}, {"title": "A certificate infrastructure for machine-checked proofs of conditional information flow", "authors": ["Torben Amtoft", " Josiah Dodds", " Zhi Zhang", " Andrew Appel", " Lennart Beringer", " John Hatcliff", " Xinming Ou"]}, {"title": "Refining the control structure of loops using static analysis", "authors": ["Gogul Balakrishnan", " Sriram Sankaranarayanan", " Franjo Ivan\u010di\u0107"]}, {"title": "SLR: Path-sensitive analysis through infeasible-path detection and syntactic language refinement", "authors": ["Gogul Balakrishnan", " Sriram Sankaranarayanan", " Franjo Ivan\u010di\u0107", " Ou Wei"]}, {"title": "SPARK - The Proven Approach to High Integrity Software", "authors": ["John Barnes"]}, {"title": "Proofs as programs", "authors": []}, {"title": "Access control on the web using proof-carrying authorization", "authors": ["Lujo Bauer"]}, {"title": "Proof theory at work: Program development in the minlog system", "authors": ["Holger Benl", " Ulrich Berger", " Helmut Schwichtenberg", " Monika Seisenberger"]}, {"title": "Program extraction in simply-typed higher order logic", "authors": ["Stefan Berghofer"]}, {"title": "Software verification and verifiable witnesses", "authors": ["Dirk Beyer"]}, {"title": "The BLAST query language for software verification", "authors": ["Dirk Beyer", " Ranjit Jhala"]}, {"title": "Configurable software verification: Concretizing the convergence of model checking and program analysis", "authors": ["Dirk Beyer"]}, {"title": "CPAchecker: A tool for configurable software verification", "authors": []}, {"title": "Predicate abstraction with adjustable-block encoding", "authors": ["Dirk Beyer"]}, {"title": "Explicit-state software model checking based on CEGAR and interpolation", "authors": ["Dirk Beyer "]}, {"title": "Precision reuse for efficient regression verification", "authors": ["Dirk Beyer", " Stefan L\u00f6we", " Evgeny Novikov", " Andreas Stahlbauer"]}, {"title": "Benchmarking and resource measurement", "authors": ["Dirk Beyer", " Stefan L\u00f6we"]}, {"title": "Refinement selection", "authors": ["Dirk Beyer", " Stefan L\u00f6we"]}, {"title": "Sliced path prefixes: An effective method to enable refinement selection", "authors": ["Dirk Beyer", " Stefan L\u00f6we"]}, {"title": "Improving static analyses of C programs with conditional predicates", "authors": [" David B\u00fchler"]}, {"title": "AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis", "authors": []}, {"title": "Checkstyle Retrieved from http://checkstyle", "authors": ["Oliver Burn (founder)"]}, {"title": "The MathSAT5 SMT solver", "authors": ["Aless", " Alberto Griggio", " Bastiaan Joost Schaafsma"]}, {"title": "Counterexample-guided abstraction refinement", "authors": ["Edmund Clarke", " Orna Grumberg", " Somesh Jha", " Yuan Lu"]}, {"title": "Temporal property verification as a program analysis task", "authors": ["Byron Cook", " Eric Koskinen"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Fixpoint-guided abstraction refinements", "authors": ["Patrick Cousot", " Pierre Ganty"]}, {"title": "Resource bound certification", "authors": ["Karl Crary "]}, {"title": "Frama-C", "authors": ["Pascal Cuoq", " Florent Kirchner", " Nikolai Kosmatov", " Virgile Prevosto", " Julien Signoles"]}, {"title": "ESP: Path-sensitive program verification in polynomial time", "authors": ["Manuvir Das", " Sorin Lerner"]}, {"title": "Path-sensitive dataflow analysis with iterative refinement", "authors": ["Dinakar Dhurjati", " Manuvir Das"]}, {"title": "Proof-Carrying Hardware: Towards runtime verification of reconfigurable modules", "authors": ["Stefanie Drzevitzky", " Uwe Kastens"]}, {"title": "Concurrent bug patterns and how to test them", "authors": ["Eitan Farchi", " Yarden Nir"]}, {"title": "Joining dataflow with predicates", "authors": ["Jeffrey Fischer", " Ranjit Jhala"]}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Susanne Graf "]}, {"title": "Specification guidelines to avoid the state space explosion problem", "authors": []}, {"title": "Counterexample driven refinement for abstract interpretation", "authors": []}, {"title": "Control-flow refinement and progress invariants for bound analysis", "authors": ["Sumit Gulwani", " Sagar Jain"]}, {"title": "FIAT: A framework for interprocedural analysis and transformation", "authors": [" Alan Carle"]}, {"title": "Testability transformation", "authors": ["Mark Harman", " Lin Hu", " Rob Hierons", " Joachim Wegener", " Harmen Sthamer", " Andr\u00e9 Baresel"]}, {"title": "Refinement of trace abstraction", "authors": ["Matthias Heizmann", " Jochen Hoenicke"]}, {"title": "Abstractions from proofs", "authors": [" Ranjit Jhala", " Rupak Majumdar"]}, {"title": "Extreme model checking", "authors": [" Ranjit Jhala", " Rupak Majumdar"]}, {"title": "Lazy abstraction", "authors": [" Ranjit Jhala", " Rupak Majumdar"]}, {"title": "Temporal-safety proofs for systems code", "authors": [" Ranjit Jhala", " Gr\u00e9goire Sutre", " Rupak Majumdar"]}, {"title": "Effective pattern-driven concurrency bug detection for operating systems", "authors": ["Shin Hong "]}, {"title": "Finding bugs is easy", "authors": ["David Hovemeyer "]}, {"title": "The formulae-as-types notion of construction", "authors": []}, {"title": "On flow-sensitive security types", "authors": ["Sebastian Hunt "]}, {"title": "T", "authors": ["IBM Research"]}, {"title": "A path-sensitively sliced control flow graph", "authors": ["Joxan Jaffar "]}, {"title": "Speed up configurable certificate validation by certificate reduction and partitioning", "authors": ["Marie-Christine Jakobs"]}, {"title": "Certification for configurable program analysis", "authors": ["Marie-Christine Jakobs "]}, {"title": "Programs from Proofs of predicated dataflow analyses", "authors": ["Marie-Christine Jakobs "]}, {"title": "Apron: A library of numerical abstract domains for static analysis", "authors": ["Bertr"]}, {"title": "Software model checking", "authors": ["Ranjit Jhala "]}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "authors": [" Erich Gamma", " John Vlissides"]}, {"title": "Monotone data flow analysis frameworks", "authors": []}, {"title": "A unified approach to global program optimization", "authors": []}, {"title": "A buffer overflow benchmark for software model checkers", "authors": ["Kelvin Ku", " Marsha Chechik"]}, {"title": "Bytecode verification on Java smart cards", "authors": ["Xavier Leroy"]}, {"title": "A new extraction for Coq", "authors": ["Pierre Letouzey"]}, {"title": "Extraction in Coq: An overview", "authors": ["Pierre Letouzey"]}, {"title": "Convex invariant refinement by control node splitting: A heuristic approach", "authors": ["Vivien Maisonneuve"]}, {"title": "Certifying model checkers", "authors": []}, {"title": "Proof-Carrying Code", "authors": []}, {"title": "Safe, untrusted agents using Proof-Carrying Code", "authors": []}, {"title": "CCured: Type-safe retrofitting of legacy code", "authors": [" Scott McPeak"]}, {"title": "Principles of Program Analysis", "authors": ["Flemming Nielson"]}, {"title": "From model checking to a temporal proof", "authors": ["Doron Peled "]}, {"title": "The trace partitioning abstract domain", "authors": ["Xavier Rival "]}, {"title": "Lightweight bytecode verification", "authors": ["Eva Rose"]}, {"title": "NECLA Static Analysis Benchmarks (necla-static-small) v1", "authors": ["Sriram Sankaranarayanan "]}, {"title": "Static analysis in disjunctive numerical domains", "authors": ["Sriram Sankaranarayanan", " Franjo Ivan\u010di\u0107", " Ilya Shlyakhter"]}, {"title": "A survey of compiler optimization techniques", "authors": []}, {"title": "Interpolation-based function summaries in bounded model checking", "authors": ["Ondrej Sery", " Grigory Fedyukovich"]}, {"title": "Simplifying loop invariant generation using splitter predicates", "authors": ["Rahul Sharma", " Isil Dillig", " Thomas Dillig"]}, {"title": "Property-oriented expansion", "authors": ["Bernhard Steffen"]}, {"title": "Comprehensive path-sensitive data-flow analysis", "authors": []}, {"title": "Soot - A Java bytecode optimization framework", "authors": ["Raja Vall\u00e9e-Rai", " Phong Co", " Etienne Gagnon", " Laurie Hendren", " Patrick Lam"]}, {"title": "Using counterexamples for improving the precision of reachability computation with polyhedra", "authors": ["Chao Wang", " Zijiang Yang", " Aarti Gupta"]}, {"title": "Path-sensitive data flow analysis simplified", "authors": ["Kirsten Winter", " Chenyi Zhang", " Nathan Keynes", " Cristina Cifuentes"]}, {"title": "Programs from Proofs -- A PCC alternative", "authors": ["Daniel Wonisch", " Alex"]}, {"title": "Predicate analysis with block-abstraction memoization", "authors": ["Daniel Wonisch "]}, {"title": "Formal verification by reverse synthesis", "authors": ["Xiang Yin"]}, {"title": "Exploiting refactoring in formal verification", "authors": ["Xiang Yin"]}, {"title": "On identifying bug patterns in aspect-oriented programs", "authors": ["Sai Zhang "]}]},
{"title": "Multiple Facets for Dynamic Information Flow with Exceptions", "time": "May 2017", "keyword": ["Programming Languages and Systems"], "abstract": "JavaScript is the source of many security problems, including cross-site scripting attacks and malicious advertising code. Central to these problems is the fact that code from untrusted sources runs with full privileges. \n help prevent violations of data confidentiality and integrity.\nThis article explores \n, a mechanism for providing information flow security in a dynamic manner that avoids the stuck executions of some prior approaches, such as the no-sensitive-upgrade technique. Faceted values simultaneously simulate multiple executions for different security levels to guarantee termination-insensitive noninterference. We also explore the interaction of faceted values with exceptions, declassification, and clearance.\n", "author": [{"name": "Thomas H. Austin", "affiliation": "San Jos\u00e9 State University, San Jose, CA"}, {"name": "Tommy Schmitz", "affiliation": "University of California, Santa Cruz, CA"}, {"name": "Cormac Flanagan", "affiliation": "University of California, Santa Cruz, CA"}, {"name": "Thomas H. Austin", "affiliation": "San Jos\u00e9 State University, San Jose, CA"}, {"name": "Tommy Schmitz", "affiliation": "University of California, Santa Cruz, CA"}, {"name": "Cormac Flanagan", "affiliation": "University of California, Santa Cruz, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "4", "references": [{"title": "Termination-insensitive noninterference leaks more than just a bit", "authors": ["Aslan Askarov", " Sebastian Hunt", " Andrei Sabelfeld"]}, {"title": "A semantic framework for declassification and endorsement", "authors": ["Aslan Askarov "]}, {"title": "Catch me if you can: Permissive yet secure error handling", "authors": ["Aslan Askarov "]}, {"title": "Tight enforcement of information-release policies for dynamic languages", "authors": ["Aslan Askarov "]}, {"title": "ZaphodFacetes github page", "authors": []}, {"title": "Efficient purely-dynamic information flow analysis", "authors": []}, {"title": "Permissive dynamic information flow analysis", "authors": []}, {"title": "Multiple facets for dynamic information flow, See Field and Hicks {2012}, 165--178", "authors": []}, {"title": "Faceted execution of policy-agnostic programs", "authors": [" Jean Yang", " Cormac Flanagan"]}, {"title": "Secure information flow and pointer confinement in a Java-like language", "authors": []}, {"title": "Generalizing permissive-upgrade in dynamic information flow analysis", "authors": ["Abhishek Bichhawat", " Vineet Rajani", " Deepak Garg"]}, {"title": "Capabilities for information flow", "authors": ["Arnar Birgisson", " Alej"]}, {"title": "Reactive noninterference", "authors": ["Aaron Bohannon", " Vilhelm Sj\u00f6berg", " Stephanie Weirich"]}, {"title": "Preventing information leaks through shadow executions", "authors": []}, {"title": "Security policies for downgrading", "authors": []}, {"title": "Staged information flow for JavaScript", "authors": ["Ravi Chugh", " Ranjit Jhala"]}, {"title": "FlowFox: A web browser with flexible and precise information flow control", "authors": ["Willem De Groef", " Dominique Devriese", " Nick Nikiforakis"]}, {"title": "A lattice model of secure information flow", "authors": []}, {"title": "Noninterference through secure multi-execution", "authors": ["Dominique Devriese "]}, {"title": "Analyzing information flow in JavaScript-based browser extensions", "authors": ["Mohan Dhawan "]}, {"title": "Narcissus--JS implemented in JS", "authors": ["Brendan Eich"]}, {"title": "Memoryless subsystems", "authors": []}, {"title": "Proceedings of the 39th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL\u201912)", "authors": []}, {"title": "dom", "authors": ["Andreas Gal", " David Flanagan"]}, {"title": "Information flow control with errors", "authors": ["Andreas Gampe "]}, {"title": "Automata-based confidentiality monitoring", "authors": ["Gurvan Le Guernic", " Anindya Banerjee"]}, {"title": "Flow-sensitive, context-sensitive, and object-sensitive information flow control based on program dependence graphs", "authors": ["Christian Hammer "]}, {"title": "Value-sensitive hybrid information flow control for a JavaScript-like language", "authors": ["Daniel Hedin", " Luciano Bello"]}, {"title": "Information-flow security for a core of JavaScript", "authors": ["Daniel Hedin "]}, {"title": "The SLam calculus: Programming with secrecy and integrity", "authors": []}, {"title": "All your IFCException are belong to us", "authors": ["Catalin Hritcu", " Michael Greenberg", " Ben Karel"]}, {"title": "On flow-sensitive security types", "authors": ["Sebastian Hunt "]}, {"title": "An empirical study of privacy-violating information flows in JavaScript web applications", "authors": ["Dongseok Jang", " Ranjit Jhala", " Sorin Lerner"]}, {"title": "Jif homepage", "authors": []}, {"title": "Information flow analysis for javascript", "authors": ["Seth Just", " Alan Cleary", " Br"]}, {"title": "Timing- and termination-sensitive secure information flow: Exploring a new approach", "authors": ["Vineeth Kashyap", " Ben Wiedermann"]}, {"title": "Information Flow Tracking meets Just-In-Time Compilation", "authors": ["Christoph Kerschbaumer", " Eric Hennigan", " Per Larsen", " Stefan Brunthaler"]}, {"title": "Towards precise and efficient information flow control in web browsers", "authors": ["Christoph Kerschbaumer", " Eric Hennigan", " Per Larsen", " Stefan Brunthaler"]}, {"title": "Implicit flows: Can\u2019t live with\u2019em, can\u2019t live without\u2019em", "authors": ["Dave King", " Boniface Hicks", " Michael Hicks"]}, {"title": "Symbolic execution and program testing", "authors": []}, {"title": "Rozzle: De-Cloaking Internet Malware", "authors": ["Clemens Kolbitsch", " Benjamin Livshits", " Benjamin Zorn"]}, {"title": "Precise enforcement of progress-sensitive security", "authors": ["Scott Moore", " Aslan Askarov"]}, {"title": "Mozilla Labs: Zaphod add-on for the Firefox browser", "authors": ["Mozilla Labs Zapho"]}, {"title": "JFlow: Practical mostly-static information flow control", "authors": []}, {"title": "Enforcing robust declassification", "authors": [" Andrei Sabelfeld"]}, {"title": "Information flow inference for ML", "authors": ["Fran\u00e7ois Pottier "]}, {"title": "Limiting information leakage in event-based communication", "authors": ["Willard Rafnsson "]}, {"title": "Secure multi-execution: Fine-grained, declassification-aware, and transparent", "authors": ["Willard Rafnsson "]}, {"title": "Information flow control for event handling and the DOM in web browsers", "authors": []}, {"title": "Enhancing server availability and security through failure-oblivious computing", "authors": ["Martin Rinard", " Cristian Cadar", " Daniel Dumitran", " Tudor Leu"]}, {"title": "Securing timeout instructions in web applications", "authors": ["Alej"]}, {"title": "Dynamic vs", "authors": ["Alej"]}, {"title": "Tracking information flow in dynamic tree structures", "authors": ["Alej", " Andrei Sabelfeld"]}, {"title": "Language-based information-flow security", "authors": []}, {"title": "Dynamic dependency monitoring to secure information flow", "authors": ["Paritosh Shroff"]}, {"title": "Flexible dynamic information flow control in Haskell", "authors": ["Deian Stefan", " Alej"]}, {"title": "Stateful declassification policies for event-driven programs", "authors": []}, {"title": "Inference of expressive declassification policies", "authors": ["Jeffrey Vaughan "]}, {"title": "Cross-site scripting prevention with dynamic data tainting and static analysis", "authors": ["Philipp Vogt", " Florian Nentwich", " Nenad Jovanovic", " Engin Kirda", " Christopher Kr\u00fcgel"]}, {"title": "A sound type system for secure flow analysis", "authors": ["Dennis Volpano", " Cynthia Irvine"]}, {"title": "SunSpider JavaScript Benchmark", "authors": []}, {"title": "A language for automatically enforcing privacy policies, See Field and Hicks {2012}, 85--96", "authors": ["Jean Yang", " Kuat Yessenov"]}, {"title": "Improving application security with data flow assertions", "authors": ["Alex", " Xi Wang", " Nickolai Zeldovich"]}, {"title": "Precise enforcement of confidentiality for reactive systems", "authors": ["Dante Zanarini", " Mauro Jaskelioff"]}, {"title": "A type system for robust declassification", "authors": ["Steve Zdancewic"]}, {"title": "Programming Languages for Information Security", "authors": ["Stephan Arthur Zdancewic"]}]},
{"title": "Newtonian Program Analysis via Tensor Product", "time": "March 2017", "keyword": ["Programming Languages and Systems"], "abstract": "Recently, Esparza et al. generalized Newton\u2019s method\u2014a numerical-analysis algorithm for finding roots of real-valued functions\u2014to a method for finding fixed-points of systems of equations over semirings. Their method provides a new way to solve interprocedural dataflow-analysis problems. As in its real-valued counterpart, each iteration of their method solves a simpler \u201clinearized\u201d problem.\nOne of the reasons this advance is exciting is that some numerical analysts have claimed that \u201c\u2018all\u2019 effective and fast iterative [numerical] methods are forms (perhaps very disguised) of Newton\u2019s method.\u201d However, there is an important difference between the dataflow-analysis and numerical-analysis contexts: When Newton\u2019s method is used in numerical-analysis problems, \n is relied on to rearrange an expression of the form \u201c\n * \n * \n + \n * \n * \n\u201d into \u201c(\n*\n + \n*\n)*\n.\u201d Equations with such expressions correspond to path problems described by regular languages. In contrast, when Newton\u2019s method is used for interprocedural dataflow analysis, the \u201cmultiplication\u201d operation involves function composition and hence is non-commutative: \u201c\n*\n*\n + \n*\n*\n\u201d cannot be rearranged into \u201c(\n*\n + \n*\n)*\n.\u201d Equations with such expressions correspond to path problems described by linear context-free languages (LCFLs).\nIn this article, we present an improved technique for solving the LCFL sub-problems produced during successive rounds of Newton\u2019s method. Our method applies to predicate abstraction, on which most of today\u2019s software model checkers rely.\n", "author": [{"name": "Thomas Reps", "affiliation": "University of Wisconsin\u2014Madison and Gramma Tech, Inc., Madison, WI"}, {"name": "Emma Turetsky", "affiliation": "University of Wisconsin\u2014Madison, Mountain View, CA"}, {"name": "Prathmesh Prabhu", "affiliation": "University of Wisconsin\u2014Madison, Mountain View, CA"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin\u2014Madison and Gramma Tech, Inc., Madison, WI"}, {"name": "Emma Turetsky", "affiliation": "University of Wisconsin\u2014Madison, Mountain View, CA"}, {"name": "Prathmesh Prabhu", "affiliation": "University of Wisconsin\u2014Madison, Mountain View, CA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "2", "references": [{"title": "Bebop: A symbolic model checker for Boolean programs", "authors": []}, {"title": "A generic approach to the static analysis of concurrent programs with procedures", "authors": []}, {"title": "Graph-based algorithms for Boolean function manipulation", "authors": []}, {"title": "Global common subexpression elimination", "authors": []}, {"title": "Static determination of dynamic properties of recursive procedures", "authors": []}, {"title": "Handbook of Weighted Automata", "authors": []}, {"title": "Abstract domains of affine relations", "authors": []}, {"title": "Newton\u2019s method for omega-continuous semirings", "authors": []}, {"title": "Newtonian program analysis", "authors": []}, {"title": "Compositional recurrence analysis", "authors": []}, {"title": "Personal communication", "authors": []}, {"title": "Underapproximation of procedure summaries for integer programs", "authors": []}, {"title": "Construction of abstract state graphs with PVS", "authors": []}, {"title": "A fast and usually linear algorithm for data flow analysis", "authors": []}, {"title": "KAT + B&excl;", "authors": []}, {"title": "Horn clause verification with convex polyhedral abstraction and tree automata-based refinement", "authors": []}, {"title": "Solving non-linear Horn clauses using a linear Horn clause solver", "authors": []}, {"title": "Global data flow analysis and iterative algorithms", "authors": []}, {"title": "Monotone data flow analysis frameworks", "authors": []}, {"title": "WALi: The Weighted Automaton Library", "authors": []}, {"title": "A unified approach to global program optimization", "authors": []}, {"title": "Compositional Recurrence Analysis Revisited", "authors": []}, {"title": "The interprocedural coincidence theorem", "authors": []}, {"title": "A generalization of Dijkstra\u2019s algorithm", "authors": []}, {"title": "Abstract error projection", "authors": []}, {"title": "Improving pushdown system model checking", "authors": []}, {"title": "Reducing concurrent analysis under a context bound to sequential analysis", "authors": []}, {"title": "Extended weighted pushdown systems", "authors": []}, {"title": "Interprocedural Analysis of Concurrent Programs Under a Context Bound", "authors": []}, {"title": "Interprocedural analysis of concurrent programs under a context bound", "authors": []}, {"title": "Universal algorithms for solving the matrix Bellman equations over semirings", "authors": []}, {"title": "Regular expressions and state graphs for automata", "authors": []}, {"title": "Grammar flow analysis", "authors": []}, {"title": "Precise interprocedural analysis through linear algebra", "authors": []}, {"title": "Analysis of modular arithmetic", "authors": []}, {"title": "Bounded Incremental Computation", "authors": []}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": []}, {"title": "Program analysis using weighted pushdown systems", "authors": []}, {"title": "Weighted pushdown systems and their application to interprocedural dataflow analysis", "authors": []}, {"title": "Newtonian program analysis via tensor product", "authors": []}, {"title": "Algebraic Systems of Fixpoint Equations over Semirings: Theory and Applications", "authors": []}, {"title": "Putting Newton into practice: A solver for polynomial equations over semirings", "authors": []}, {"title": "Two approaches to interprocedural data flow analysis", "authors": []}, {"title": "Retrieved from msdn", "authors": ["Static Driver Verifier"]}, {"title": "Inverse, Shifted Inverse, and Rayleigh Quotient Iteration as Newton\u2019s Method", "authors": []}, {"title": "Fast algorithms for solving path problems", "authors": []}, {"title": "A unified approach to path problems", "authors": []}, {"title": "Fast algorithms for the elimination of common subexpressions", "authors": []}, {"title": "Parallel complexity of logical query programs", "authors": []}, {"title": "A graph theoretical Fortran source language analyzer", "authors": []}, {"title": "Graph-theoretic methods in database theory", "authors": []}]},
{"title": "Proof-Directed Parallelization Synthesis by Separation Logic", "time": "July 2013", "keyword": ["Programming Languages and Systems"], "abstract": "We present an analysis which takes as its input a sequential program, augmented with annotations indicating potential parallelization opportunities, and a sequential proof, written in separation logic, and produces a correctly synchronized parallelized program and proof of that program. Unlike previous work, ours is not a simple independence analysis that admits parallelization only when threads do not interfere; rather, we insert synchronization to preserve dependencies in the sequential program that might be violated by a na\u00efve translation. Separation logic allows us to parallelize fine-grained patterns of resource usage, moving beyond straightforward points-to analysis. The sequential proof need only represent shape properties, meaning we can handle complex algorithms without verifying every aspect of their behavior.\nOur analysis works by using the sequential proof to discover dependencies between different parts of the program. It leverages these discovered dependencies to guide the insertion of synchronization primitives into the parallelized program, and to ensure that the resulting parallelized program satisfies the same specification as the original sequential program, and exhibits the same sequential behavior. Our analysis is built using frame inference and abduction, two techniques supported by an increasing number of separation logic tools.\n", "author": [{"name": "Matko Botin\u010dan", "affiliation": "University of Cambridge"}, {"name": "Mike Dodds", "affiliation": "University of Cambridge"}, {"name": "Suresh Jagannathan", "affiliation": "Purdue University"}, {"name": "Matko Botin\u010dan", "affiliation": "University of Cambridge"}, {"name": "Mike Dodds", "affiliation": "University of Cambridge"}, {"name": "Suresh Jagannathan", "affiliation": "Purdue University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "Compiler-assisted dynamic scheduling for effective parallelization of loop nests on multicore processors", "authors": ["Baskaran", " Vydyanathan", " Bondhugula", " Ramanujam", " Rountev"]}, {"title": " ", "authors": []}, {"title": "Concurrent separation logic for pipelined parallelization", "authors": ["Bell", " Appel"]}, {"title": "", "authors": []}, {"title": "Smallfoot: Modular automatic assertion checking with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": " ", "authors": []}, {"title": "Symbolic execution with separation logic", "authors": ["Berdine", " Calcagno"]}, {"title": " ", "authors": []}, {"title": "CoreDet: A compiler and runtime system for deterministic multithreaded execution", "authors": ["Bergan", " Anderson", " Devietti", " Ceze"]}, {"title": " ", "authors": []}, {"title": "Grace: Safe multithreaded programming for C/C+&thinsp;+", "authors": ["Berger", " Yang", " Liu"]}, {"title": " ", "authors": []}, {"title": "A type and effect system for deterministic parallel Java", "authors": ["Bocchino", " Adve", " Dig", " Adve", " Heumann", " Komuravelli", " Overbey", " Simmons", " Sung"]}, {"title": " ", "authors": []}, {"title": "Permission accounting in separation logic", "authors": ["Bornat", " Calcagno", " O\u2019Hearn"]}, {"title": " ", "authors": []}, {"title": "coreStar: The core of jStar", "authors": ["Botin\u010dan", " Distefano", " Dodds", " Griore", " Naud\u017ei\u016bnien\u0117"]}, {"title": "", "authors": []}, {"title": "Asserting and checking determinism for multithreaded programs", "authors": ["Burnim"]}, {"title": " ", "authors": []}, {"title": "Compositional shape analysis by means of bi-abduction", "authors": ["Calcagno", " Distefano", " O\u2019Hearn"]}, {"title": " ", "authors": []}, {"title": "Bi-abductive resource invariant synthesis", "authors": ["Calcagno", " Distefano"]}, {"title": " ", "authors": []}, {"title": "Tractable reasoning in a fragment of separation logic", "authors": ["Cook", " Haase", " Ouaknine", " Parkinson"]}, {"title": "", "authors": []}, {"title": "Making fast hardware with separation logic", "authors": ["Cook", " Magill", " Raza", " Simsa"]}, {"title": "A complete classification of the complexity of propositional abduction", "authors": ["Creignou"]}, {"title": " ", "authors": []}, {"title": "Logical concurrency control from sequential proofs", "authors": ["Deshmukh", " Ramalingam", " Ranganath"]}, {"title": " ", "authors": []}, {"title": "Memory leaks detection in java by bi-abductive inference", "authors": ["Distefano"]}, {"title": " ", "authors": []}, {"title": "jStar: Towards practical verification for Java", "authors": ["Distefano"]}, {"title": " ", "authors": []}, {"title": "Modular reasoning for deterministic parallelism", "authors": ["Dodds", " Jagannathan"]}, {"title": " ", "authors": []}, {"title": "The complexity of logic-based abduction", "authors": ["Eiter"]}, {"title": " ", "authors": []}, {"title": "Detecting parallelism in c programs with recursive data structures", "authors": ["Ghiya", " Hendren"]}, {"title": "", "authors": []}, {"title": "Automatic fine-grain locking using shape properties", "authors": ["Golan-Gueta", " Bronson", " Aiken", " Ramalingam", " Sagiv"]}, {"title": " ", "authors": []}, {"title": "Local reasoning for storable locks and threads", "authors": ["Gotsman", " Berdine", " Cook", " Rinetzky"]}, {"title": "", "authors": []}, {"title": "Compilation techniques for parallel systems", "authors": ["Gupta", " P", " Psarris"]}, {"title": " ", "authors": []}, {"title": "Reasoning about Java\u2019s reentrant locks", "authors": ["Haack", " Huisman"]}, {"title": " ", "authors": []}, {"title": "Parallelizing programs with recursive data structures", "authors": ["Hendren"]}, {"title": " ", "authors": []}, {"title": "Separation logic semantics for communicating processes", "authors": ["Hoare"]}, {"title": " ", "authors": []}, {"title": "Oracle semantics for concurrent separation logic", "authors": ["Hobor", " Appel"]}, {"title": "Springer", "authors": []}, {"title": "Dependence analysis for pointer variables", "authors": ["Horwitz", " Pfeiffer"]}, {"title": " ", "authors": []}, {"title": "Automatic parallelization and optimization of programs by proof rewriting", "authors": ["Hurlin"]}, {"title": " ", "authors": []}, {"title": "Modular full functional specification and verification of lock-free data structures", "authors": ["Jacobs"]}, {"title": "Deadlock-free channels and locks", "authors": ["Leino", " M\u00fcller"]}, {"title": " ", "authors": []}, {"title": "Dthreads: Efficient deterministic multithreading", "authors": ["Liu", " Curtsinger"]}, {"title": " ", "authors": []}, {"title": "Quasi-static scheduling for safe futures", "authors": ["Navabi", " Zhang"]}, {"title": " ", "authors": []}, {"title": "Resources, concurrency and local reasoning", "authors": ["O\u2019Hearn"]}, {"title": " ", "authors": []}, {"title": "Automatic thread extraction with decoupled software pipelining", "authors": ["Ottoni", " Rangan", " Stoler"]}, {"title": " ", "authors": []}, {"title": "The tao of parallelism in algorithms", "authors": ["Pingali", " Nguyen", " Kulkarni", " Burtscher", " Hassaan", " Kaleem", " Lee", " Lenharth", " Manevich", " M\u00e9ndez-Lojo", " Prountzos"]}, {"title": " ", "authors": []}, {"title": "Automatic synthesis of deterministic concurrency", "authors": ["Raychev", " Vechev"]}, {"title": "Springer", "authors": []}, {"title": "Automatic parallelization with separation logic", "authors": ["Raza", " Calcagno"]}, {"title": " ", "authors": []}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": ["Reynolds"]}, {"title": "", "authors": []}, {"title": "http://sv-comp", "authors": ["SV-Comp"]}, {"title": "Reducing data communication overhead for DOACROSS loop nests", "authors": ["Tang", " Tang", " Zigman"]}, {"title": " ", "authors": []}, {"title": "Tracking heaps that hop with Heap-Hop", "authors": ["Villard", " Lozes"]}, {"title": " ", "authors": []}, {"title": "Safe futures for Java", "authors": ["Welc", " Jagannathan"]}, {"title": " ", "authors": []}, {"title": "Scalable shape analysis for systems code", "authors": ["Yang", " Lee", " Berdine", " Calcagno", " Cook", " Distefano"]}, {"title": " ", "authors": []}]},
{"title": "Efficient Identification of Linchpin Vertices in Dependence Clusters", "time": "July 2013", "keyword": ["Programming Languages and Systems"], "abstract": "Several authors have found evidence of large dependence clusters in the source code of a diverse range of systems, domains, and programming languages. This raises the question of how we might efficiently locate the fragments of code that give rise to large dependence clusters. We introduce an algorithm for the identification of \n vertices, which hold together large dependence clusters, and prove correctness properties for the algorithm\u2019s primary innovations. We also report the results of an empirical study concerning the reduction in analysis time that our algorithm yields over its predecessor using a collection of 38 programs containing almost half a million lines of code. Our empirical findings indicate improvements of almost two orders of magnitude, making it possible to process larger programs for which it would have previously been impractical.\n", "author": [{"name": "David Binkley", "affiliation": "Loyola University Maryland"}, {"name": "Nicolas Gold", "affiliation": "University College London"}, {"name": "Mark Harman", "affiliation": "University College London"}, {"name": "Syed Islam", "affiliation": "University College London"}, {"name": "Jens Krinke", "affiliation": "University College London"}, {"name": "Zheng Li", "affiliation": "Beijing University of Chemical Technology"}, {"name": "David Binkley", "affiliation": "Loyola University Maryland"}, {"name": "Nicolas Gold", "affiliation": "University College London"}, {"name": "Mark Harman", "affiliation": "University College London"}, {"name": "Syed Islam", "affiliation": "University College London"}, {"name": "Jens Krinke", "affiliation": "University College London"}, {"name": "Zheng Li", "affiliation": "Beijing University of Chemical Technology"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Practical change impact analysis based on static program slicing for industrial software systems", "authors": ["Acharya"]}, {"title": " ", "authors": [" ACM"]}, {"title": "Program analysis and specialization for the C programming language", "authors": ["Andersen"]}, {"title": "Using dependence graphs as a support to document programs", "authors": ["Balmas"]}, {"title": "", "authors": []}, {"title": "Computation of static execute after relation with applications to software maintenance", "authors": ["Besz\u00e9des", " Gergely", " J\u00e1sz", " Toth", " Gyim\u00f3thy"]}, {"title": "", "authors": []}, {"title": "Locating dependence clusters and dependence pollution", "authors": ["Binkley"]}, {"title": " ", "authors": []}, {"title": "Identifying \u2018linchpin vertices\u2019 that cause large dependence clusters", "authors": ["Binkley"]}, {"title": "IEEE", "authors": []}, {"title": "Dependence anti patterns", "authors": ["Binkley", " Gold", " Harman", " Li", " Mahdavi"]}, {"title": "", "authors": []}, {"title": "Assessing the impact of global variables on program dependence and dependence clusters", "authors": ["Binkley", " Harman", " Hassoun", " Islam"]}, {"title": " ", "authors": []}, {"title": "Precise executable interprocedural slices", "authors": ["Binkley"]}, {"title": " ", "authors": []}, {"title": "Source code analysis: A road map", "authors": ["Binkley"]}, {"title": " ", "authors": [" IEEE"]}, {"title": "Using program slicing to identify faults in software", "authors": ["Black", " Counsell", " Hall"]}, {"title": "", "authors": [" Dagstuhl Seminar Proceedings", " Numbe"]}, {"title": "Fault analysis in OSS based on program slicing metrics", "authors": ["Black", " Counsell", " Hall"]}, {"title": " ", "authors": []}, {"title": "Computing ripple effect for software maintenance", "authors": ["Black"]}, {"title": "", "authors": []}, {"title": "Program slice browser", "authors": ["Deng", " Kothari"]}, {"title": "", "authors": []}, {"title": "Graph-based approaches to insider threat detection", "authors": ["Eberle"]}, {"title": " ", "authors": []}, {"title": "Locating features in source code", "authors": ["Eisenbarth", " Koschke"]}, {"title": " ", "authors": []}, {"title": "Partial online cycle elimination in inclusion constraint graphs", "authors": ["Fahndrich", " Foster", " Su"]}, {"title": " ", "authors": []}, {"title": "Using program slicing in software maintenance", "authors": ["Gallagher"]}, {"title": " ", "authors": []}, {"title": "The codesurfer slicing system", "authors": ["Grammatech Inc"]}, {"title": "A demand-driven approach to slicing legacy COBOL systems", "authors": ["Hajnal"]}, {"title": "Wiley Online Library", "authors": []}, {"title": "Dependence clusters in source code", "authors": ["Harman", " Binkley", " Gallagher", " Gold"]}, {"title": " ", "authors": []}, {"title": "Interprocedural slicing using dependence graphs", "authors": ["Horwitz", " Reps"]}, {"title": " ", "authors": []}, {"title": "Dependence cluster visualization", "authors": ["Islam", " Krinke"]}, {"title": " ", "authors": []}, {"title": "Coherent dependence clusters", "authors": ["Islam", " Krinke", " Binkley"]}, {"title": "ACM", "authors": []}, {"title": "Dynamic program slicing", "authors": ["Korel"]}, {"title": " ", "authors": []}, {"title": "Unsupervised link discovery in multi-relational data via rarity analysis", "authors": ["Lin"]}, {"title": "", "authors": []}, {"title": "An analysis of open source software development using social network theory and agent-based modeling", "authors": ["Madey", " Freeh", " Tynan"]}, {"title": "", "authors": []}, {"title": "On the automatic modularization of software systems using the bunch tool", "authors": ["Mitchell"]}, {"title": " ", "authors": []}, {"title": "Software module clustering as a multi-objective search problem", "authors": ["Praditwong", " Harman"]}, {"title": " ", "authors": []}, {"title": "The case for anomalous link discovery", "authors": ["Rattigan"]}, {"title": " ", "authors": []}, {"title": "The semantics of program slicing", "authors": ["Reps"]}, {"title": "Precise interprocedural chopping", "authors": ["Reps"]}, {"title": " ", "authors": [" ACM Press"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": " ", "authors": []}, {"title": "Entwicklung eines automatischen Verfahrens zur Aufl\u00f6sung statischer zyklischer Abh\u00e4ngigkeiten in Softwaresystemen (in German)", "authors": ["Savernik"]}, {"title": "GI, 357--360", "authors": [" LNI Series", " vol"]}, {"title": "", "authors": ["Sharir"]}, {"title": "Prentice-Hall, Englewood Cliffs, NJ", "authors": [" Englewood Cliffs"]}, {"title": "Verifying the concept of union slices on Java programs", "authors": ["Szegedi", " Gergely", " Besz\u00e9des", " Gyim\u00f3thy"]}, {"title": " ", "authors": []}, {"title": "Using a concept lattice of decomposition slices for program understanding and impact analysis", "authors": ["Tonella"]}, {"title": " ", "authors": []}, {"title": "Program slicing", "authors": ["Weiser"]}, {"title": " ", "authors": []}, {"title": "Pointer analysis for programs with structures and casting", "authors": ["Yong", " Horwitz"]}, {"title": " ", "authors": []}, {"title": "Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge", "authors": ["Yoo", " Harman", " Tonella"]}, {"title": " ", "authors": []}]},
{"title": "Probabilistic Relational Reasoning for Differential Privacy", "time": "November 2013", "keyword": ["Programming Languages and Systems"], "abstract": "Differential privacy is a notion of confidentiality that allows useful computations on sensible data while protecting the privacy of individuals. Proving differential privacy is a difficult and error-prone task that calls for principled approaches and tool support. Approaches based on linear types and static analysis have recently emerged; however, an increasing number of programs achieve privacy using techniques that fall out of their scope. Examples include programs that aim for weaker, approximate differential privacy guarantees and programs that achieve differential privacy without using any standard mechanisms. Providing support for reasoning about the privacy of such programs has been an open problem.\nWe report on CertiPriv, a machine-checked framework for reasoning about differential privacy built on top of the Coq proof assistant. The central component of CertiPriv is a quantitative extension of probabilistic relational Hoare logic that enables one to derive differential privacy guarantees for programs from first principles. We demonstrate the applicability of CertiPriv on a number of examples whose formal analysis is out of the reach of previous techniques. In particular, we provide the first machine-checked proofs of correctness of the Laplacian, Gaussian, and exponential mechanisms and of the privacy of randomized and streaming algorithms from the literature.\n", "author": [{"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "Boris K\u00f6pf", "affiliation": "IMDEA Software Institute"}, {"name": "Federico Olmedo", "affiliation": "IMDEA Software Institute"}, {"name": "Santiago Zanella-B\u00e9guelin", "affiliation": "Microsoft Research"}, {"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "Boris K\u00f6pf", "affiliation": "IMDEA Software Institute"}, {"name": "Federico Olmedo", "affiliation": "IMDEA Software Institute"}, {"name": "Santiago Zanella-B\u00e9guelin", "affiliation": "Microsoft Research"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "30", "references": [{"title": "Full proof cryptography: Verifiable compilation of efficient zero-knowledge protocols", "authors": ["Jose Bacelar Almeida", " Manuel Barbosa", " Endre Bangerter", " Gilles Barthe", " Stephan Krenn"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Information flow analysis in logical form", "authors": ["Torben Amtoft "]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A logic for information flow in objectoriented programs", "authors": ["Torben Amtoft", " Sruthi B"]}, {"title": " ", "authors": [" New York"]}, {"title": "Proofs of randomized algorithms in coq", "authors": ["Philippe Audebaud "]}, {"title": " ", "authors": []}, {"title": "Automatic discovery and quantification of information leaks", "authors": ["Michael Backes", " Boris Kopf"]}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "Towards provably robust watermarking", "authors": ["David Baelde", " Pierre Courtieu", " David Gross-Amblard"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Information-theoretic bounds for differentially private mechanisms", "authors": ["Gilles Barthe "]}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "Beyond differential privacy: Composition theorems and relational logic for f-divergences between probabilistic programs", "authors": ["Gilles Barthe "]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Secure information flow by self-composition", "authors": ["Gilles Barthe", " Pedro D\u2019Argenio"]}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "Formal certification of code-based cryptographic proofs", "authors": ["Gilles Barthe", " Benjamin Gregoire"]}, {"title": " ", "authors": [" New York"]}, {"title": "Computer-aided security proofs for the working cryptographer", "authors": ["Gilles Barthe", " Benjamin Gregoire", " Sylvain Heraud"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Relational verification using product progams", "authors": ["Gilles Barthe", " Juan Manuel Crespo"]}, {"title": "", "authors": [" vol"]}, {"title": "Probabilistic relational reasoning for differential privacy", "authors": ["Gilles Barthe", " Boris Kopf", " Federico Olmedo"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Verified computational differential privacy with applications to smart metering", "authors": ["Gilles Barthe", " George Danezis", " Benjamin Gregoire", " Cesar Kunz"]}, {"title": "IEEE Computer Society, Los Alamitos, CA", "authors": [" Los Alamitos"]}, {"title": "Distributed private data analysis: Simultaneously solving how and what", "authors": ["Amos Beimel", " Kobbi Nissim"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Simple relational correctness proofs for static analyses and program transformations", "authors": ["Nick Benton"]}, {"title": " ", "authors": [" New York"]}, {"title": "Asserting and checking determinism for multithreaded programs", "authors": ["Jacob Burnim "]}, {"title": " ", "authors": [" New York"]}, {"title": "Reasoning about probabilistic sequential programs", "authors": ["Rohit Chadha", " Luis Cruz-Filipe", " Paulo Mateus"]}, {"title": " ", "authors": []}, {"title": "Private and continual release of statistics", "authors": [" Elaine Shi"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Proving programs robust", "authors": ["Swarat Chaudhuri", " Sumit Gulwani", " Roberto Lublinerman"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A static analysis for quantifying information flow in a simple imperative language", "authors": ["David Clark", " Sebastian Hunt"]}, {"title": "", "authors": []}, {"title": "Hyperproperties", "authors": []}, {"title": "", "authors": []}, {"title": "Formalized information-theoretic proofs of privacy using the hol4 theorem-prover", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Anonymity, information, and machine-assisted proof", "authors": []}, {"title": "The coq proof assistant reference manual version 8", "authors": ["The Coq Development Team"]}, {"title": "Verifying probabilistic programs using a hoare like logic", "authors": ["Jerry Den Hartog"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Approximate analysis of probabilistic processes: Logic, simulation and games", "authors": ["Josee Desharnais", " Francois Laviolette"]}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "Approximate non-interference", "authors": ["Aless", " Chris Hankin"]}, {"title": "", "authors": []}, {"title": "Differential privacy: A survey of results", "authors": ["Cynthia Dwork"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A firm foundation for private data analysis", "authors": ["Cynthia Dwork"]}, {"title": " ", "authors": []}, {"title": "Our data, ourselves: Privacy via distributed noise generation", "authors": ["Cynthia Dwork", " Krishnaram Kenthapadi", " Frank Mcsherry", " Ilya Mironov"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Calibrating noise to sensitivity in private data analysis", "authors": ["Cynthia Dwork", " Frank Mcsherry", " Kobbi Nissim"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Boosting and differential privacy", "authors": ["Cynthia Dwork"]}, {"title": " ", "authors": [" IEEE Computer Society", " Los Alamitos", " CA"]}, {"title": "A probabilistic dynamic logic", "authors": []}, {"title": "", "authors": []}, {"title": "Polynomial-time highest-gain augmenting path algorithms for the generalized circulation problem", "authors": ["Donald Goldfarb", " Zhiying Jin"]}, {"title": " ", "authors": []}, {"title": "Differentially private combinatorial optimization", "authors": ["Anupam Gupta", " Katrina Ligett", " Frank Mcsherry", " Aaron Roth"]}, {"title": "", "authors": [" SIAM"]}, {"title": "Differential privacy under fire", "authors": ["Andreas Haeberlen"]}, {"title": "USENIX Association, Berkeley, CA", "authors": [" Berkeley", " CA"]}, {"title": "Formal verification of probabilistic algorithms", "authors": ["Joe Hurd"]}, {"title": "Probabilistic guarded commands mechanized in hol", "authors": ["Joe Hurd", " Annabelle Mciver"]}, {"title": " ", "authors": []}, {"title": "Probabilistic non-determinism", "authors": ["Claire Jones"]}, {"title": "Probabilistic extensions of process algebras", "authors": ["Bengt Jonsson", " Wang Yi"]}, {"title": "", "authors": [" Amsterdam"]}, {"title": "A note on differential privacy: Defining resistance to arbitrary side information", "authors": ["Shiva Prasad Kasiviswanathan "]}, {"title": "No free lunch in data privacy", "authors": ["Daniel Kifer "]}, {"title": " ", "authors": [" New York"]}, {"title": "A probabilistic pdl", "authors": ["Dexter Kozen"]}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "Holt, Rinehart and Winston, New York", "authors": [" Rinehart ", " New Yor"]}, {"title": "Privacy integrated queries: An extensible platform for privacy-preserving data analysis", "authors": ["Frank Mcsherry"]}, {"title": " ", "authors": [" New York"]}, {"title": "Mechanism design via differential privacy", "authors": ["Frank Mcsherry "]}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "On the formalization of the lebesgue integration theory in hol", "authors": ["Tarek Mhamdi", " Osman Hasan"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Formalization of entropy measures in hol", "authors": ["Tarek Mhamdi", " Osman Hasan"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Computational differential privacy", "authors": ["Ilya Mironov", " Omkant P", " Omer Reingold"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Probabilistic predicate transformers", "authors": ["Carroll Morgan", " Annabelle Mciver"]}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Prentice Hall, Englewood Cliffs, NJ", "authors": [" Englewood Cliffs", " NJ"]}, {"title": "The geometry of differential privacy: The sparse and approximate cases", "authors": ["Aleks", " Kunal Talwar"]}, {"title": "", "authors": []}, {"title": "A simple probabilistic approximation algorithm for vertex cover", "authors": ["Leonard Pitt"]}, {"title": "Stochastic lambda calculus and monads of probability distributions", "authors": ["Norman Ramsey "]}, {"title": " ", "authors": [" New York"]}, {"title": "Distance makes the types grow stronger: A calculus for differential privacy", "authors": []}, {"title": " ", "authors": [" New York"]}, {"title": "Logics for probabilistic programming (extended abstract)", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Airavat: Security and privacy for mapreduce", "authors": ["Indrajit Roy", " Ann Kilzer", " Vitaly Shmatikov"]}, {"title": "", "authors": [" Berkeley", " CA"]}, {"title": "Probabilistic noninterference for multi-threaded programs", "authors": ["Andrei Sabelfeld "]}, {"title": "", "authors": [" Los Alamitos", " CA"]}, {"title": "Approximated computationally bounded simulation relations for probabilistic automata", "authors": ["Roberto Segala "]}, {"title": " ", "authors": [" Los Alamitos"]}, {"title": "Simple generalized maximum flow algorithms", "authors": ["Eva Tardos "]}, {"title": "", "authors": [" vol"]}, {"title": "Secure information flow as a safety problem", "authors": ["Tachio Terauchi "]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Formal verification of differential privacy for interactive systems", "authors": ["Michael Carl Tschantz", " Dilsun Kaynar"]}, {"title": " ", "authors": []}, {"title": "CoVaC: Compiler validation by program analysis of the cross-product", "authors": ["Anna Zaks "]}, {"title": " ", "authors": [" vol"]}]},
{"title": "Contracts for First-Class Classes", "time": "November 2013", "keyword": ["Programming Languages and Systems"], "abstract": "First-class classes enable programmers to abstract over patterns in the class hierarchy and to experiment with new forms of object-oriented programming such as mixins and traits. This increase in expressive power calls for tools to control the complexity of the software architecture. A contract system is one possible tool that has seen much use in object-oriented programming languages, but existing contract systems cannot cope with first-class classes. On the one hand, the typical contract language deals only with plain values such as numbers, while classes are higher-order values. On the other hand, contract specifications are usually contained within class definitions, while classes as values call for a separate contract language.\nThis article presents the design and implementation of a contract system for first-class classes as well as a two-pronged evaluation. The first one states and proves a \u201cblame correctness\u201d theorem for a model of our language. The theorem shows that when the contract system assigns blame to a component for a contract violation, the component is indeed responsible for providing the nonconforming value. The second part, consisting of benchmarks and case studies, demonstrates the need for the rich contract language and validates that our implementation approach is performant with respect to time.\n", "author": [{"name": "T. Stephen Strickland", "affiliation": "Northeastern University"}, {"name": "Christos Dimoulas", "affiliation": "Northeastern University"}, {"name": "Asumu Takikawa", "affiliation": "Northeastern University"}, {"name": "Matthias Felleisen", "affiliation": "Northeastern University"}, {"name": "T. Stephen Strickland", "affiliation": "Northeastern University"}, {"name": "Christos Dimoulas", "affiliation": "Northeastern University"}, {"name": "Asumu Takikawa", "affiliation": "Northeastern University"}, {"name": "Matthias Felleisen", "affiliation": "Northeastern University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "11", "references": [{"title": "A first-class approach to genericity", "authors": ["Eric Allen", " Jonathan Bannet"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Eric Allen", " David Chase", " Joe Hallett", " Victor Luchangco", " Jan-Willem Maessen", " Sukyoung Ryu"]}, {"title": "", "authors": [" Sun Microsystem"]}, {"title": "Jam---Designing a Java extension with mixins", "authors": ["Davide Ancona", " Giovanni Lagorio"]}, {"title": " ", "authors": []}, {"title": "Virtual values for language extension", "authors": [" Tim Disney"]}, {"title": "The spec# programming system: An overview", "authors": ["Mike Barnett"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Jass---Java with assertions", "authors": ["Detlef Bartetzko", " Clemens Fischer", " Michael Moller"]}, {"title": "", "authors": []}, {"title": "The programming language jigsaw: Mixins, modularity, and multiple inheritance", "authors": ["Gilad Bracha"]}, {"title": "Mixin-based inheritance", "authors": ["Gilad Bracha "]}, {"title": " ", "authors": []}, {"title": "Mirrors: Design principles for meta-level facilities of object-oriented programming languages", "authors": ["Gilad Bracha "]}, {"title": " ", "authors": []}, {"title": "Operations on records", "authors": []}, {"title": "", "authors": []}, {"title": "Design by contract in smalltalk", "authors": ["Manuela Carrillo-Castellon", " Jesus Garcia-Molina", " Ernesto Pimentel"]}, {"title": "", "authors": []}, {"title": "On contract satisfaction in a higher-order world", "authors": ["Christos Dimoulas "]}, {"title": " ", "authors": []}, {"title": "Correct blame for contracts: No more scapegoating", "authors": ["Christos Dimoulas", " Cormac Flanagan"]}, {"title": " ", "authors": []}, {"title": "Modular mixin-based inheritance for application frameworks", "authors": ["Dominic Duggan "]}, {"title": " ", "authors": []}, {"title": "gbeta---A language with virtual attributes, block structure, and propagating, dynamic inheritance", "authors": ["Erik Ernst"]}, {"title": "On the expressive power of programming languages", "authors": ["Matthias Felleisen"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Matthias Felleisen", " Robert Bruce Findler"]}, {"title": "MIT Press", "authors": []}, {"title": "Contracts as pairs of projections", "authors": ["Robert Bruce Findler "]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "DrScheme: A programming environment for scheme", "authors": ["Robert Bruce Findler", " John Clements", " Cormac Flanagan", " Matthew Flatt", " Shriram Krishnamurthi", " Paul Steckler"]}, {"title": " ", "authors": []}, {"title": "Contract soundness for object-oriented languages", "authors": ["Robert Bruce Findler "]}, {"title": " ", "authors": []}, {"title": "Contracts for higher-order functions", "authors": ["Robert Bruce Findler "]}, {"title": " ", "authors": []}, {"title": "A typed calculus of traits", "authors": ["Kathleen Fisher "]}, {"title": "", "authors": ["David Flanagan "]}, {"title": "O\u2019Reilly", "authors": []}, {"title": "Reference: Racket", "authors": ["Matthew Flatt "]}, {"title": "Classes and mixins", "authors": ["Matthew Flatt", " Shriram Krishnamurthi"]}, {"title": " ", "authors": []}, {"title": "Scheme with classes, mixins, and traits", "authors": ["Matthew Flatt", " Robert Bruce Findler"]}, {"title": " ", "authors": [" vol"]}, {"title": "A polymorphic type system for extensible records and variants", "authors": []}, {"title": "", "authors": ["Adele Goldberg "]}, {"title": "Addison-Wesley", "authors": []}, {"title": "Super and inner---Together at last! In ", "authors": [" Robert Bruce Findler"]}, {"title": " ", "authors": []}, {"title": "A language manual for sather 1", "authors": ["Benedict Gomes", " David Stoutamire", " Boris Vaysman"]}, {"title": "Safe cross-language inheritance", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Interoperability in a scripted world: Putting inheritance and prototypes together", "authors": []}, {"title": "Fine-grained interoperability through contracts and mirrors", "authors": [" Robert Bruce Findler"]}, {"title": " ", "authors": []}, {"title": "A records calculus based on symmetric concatenation", "authors": ["Robert Harper "]}, {"title": " ", "authors": []}, {"title": "jContractor: A reflective java library to support design by contract", "authors": ["Murat Karaorman", " Urs Holzle"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Blue: Language specification, version 0", "authors": ["Michael Kolling "]}, {"title": "iContract: The java design by contract tool", "authors": ["Reto Kramer"]}, {"title": "", "authors": []}, {"title": "Typing the specialization interface", "authors": ["John Lamping"]}, {"title": " ", "authors": []}, {"title": "Report on the programming language euclid", "authors": []}, {"title": " ", "authors": []}, {"title": "JML\u2019s rich, inherited specifications for behavioral subtypes", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "How the design of jml accommodates both runtime assertion checking and formal verification", "authors": [" Yoonsik Cheon", " Curtis Clifton", " Clyde Ruby"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Ole Lehrmann Madsen", " Birger M\u00f8ller-Pedersen"]}, {"title": "Addison-Wesley Publishing, New York", "authors": [" New York"]}, {"title": "A behavioral notion of subtyping", "authors": []}, {"title": " ", "authors": []}, {"title": "An overview of anna, a specification language for ada", "authors": []}, {"title": " ", "authors": []}, {"title": "Jiazzi: New-age components for old-fashioned java", "authors": ["Sean Mcdirmid", " Matthew Flatt"]}, {"title": " ", "authors": []}, {"title": "Applying design by contract", "authors": ["Bertr"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Bertr"]}, {"title": "Prentice Hall", "authors": []}, {"title": "Object-oriented programming with flavors", "authors": []}, {"title": " ", "authors": []}, {"title": "On the criteria to be used in decomposing systems into modules", "authors": []}, {"title": " ", "authors": []}, {"title": "Design by contract for python", "authors": ["Reinhold Plosch"]}, {"title": "", "authors": []}, {"title": "LCF considered as a programming language", "authors": []}, {"title": "", "authors": []}, {"title": "Traits: Composable units of behavior", "authors": ["Nathanael Scharli", " Stephane Ducasse", " Oscar Nierstrasz"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "MetaFJig: A meta-circular composition language for java-like classes", "authors": ["Marco Servetto "]}, {"title": " ", "authors": []}, {"title": "Contracts for first-class classes", "authors": []}, {"title": " ", "authors": []}, {"title": "Nested and dynamic contract boundaries", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Chaperones and impersonators: Run-time support for reasonable interposition", "authors": [" Sam Tobin-Hochstadt", " Robert Bruce Findler"]}, {"title": " ", "authors": []}, {"title": "Component Software", "authors": ["Clemens Szyperski"]}, {"title": "Proxies: Design principles for robust object-oriented intercession apis", "authors": ["Tom Van Cutsem "]}, {"title": " ", "authors": []}, {"title": "Type inference for objects with instance variables and inheritance", "authors": ["Mitchell W"]}, {"title": "", "authors": []}]},
{"title": "Analysis of Recursively Parallel Programs", "time": "November 2013", "keyword": ["Programming Languages and Systems"], "abstract": "We propose a general formal model of isolated hierarchical parallel computations, and identify several fragments to match the concurrency constructs present in real-world programming languages such as Cilk and X10. By associating fundamental formal models (vector addition systems with recursive transitions) to each fragment, we provide a common platform for exposing the relative difficulties of algorithmic reasoning. For each case we measure the complexity of deciding state reachability for finite-data recursive programs, and propose algorithms for the decidable cases. The complexities which include PTIME, NP, EXPSPACE, and 2EXPTIME contrast with undecidable state reachability for recursive multithreaded programs.\n", "author": [{"name": "Ahmed Bouajjani", "affiliation": "LIAFA, Universit\u00e9 Paris Diderot"}, {"name": "Michael Emmi", "affiliation": "LIAFA, Universit\u00e9 Paris Diderot"}, {"name": "Ahmed Bouajjani", "affiliation": "LIAFA, Universit\u00e9 Paris Diderot"}, {"name": "Michael Emmi", "affiliation": "LIAFA, Universit\u00e9 Paris Diderot"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "13", "references": [{"title": "General decidability theorems for infinite-state systems", "authors": ["Abdulla", " Cerans", " Jonsson"]}, {"title": "", "authors": []}, {"title": "May-happen-in-parallel analysis of X10 programs", "authors": ["Agarwal", " Barik", " Sarkar"]}, {"title": " ", "authors": [" New York"]}, {"title": "The fortress language specification", "authors": ["Allen", " Chase", " Luchangco", " Maessen", " Ryu"]}, {"title": "Limits for automatic verification of finite-state concurrent systems", "authors": ["Apt"]}, {"title": " ", "authors": []}, {"title": "Analyzing asynchronous programs with preemption", "authors": ["Atig", " Bouajjani"]}, {"title": "", "authors": [" vol"]}, {"title": "Context-bounded analysis for concurrent programs with dynamic creation of threads", "authors": ["Atig", " Bouajjani"]}, {"title": "", "authors": []}, {"title": "Parameterized verification of multithreaded software libraries", "authors": ["Ball", " Chaki"]}, {"title": "", "authors": [" vol"]}, {"title": "Rewriting models of Boolean programs", "authors": ["Bouajjani"]}, {"title": " ", "authors": [" vol"]}, {"title": "Regular symbolic analysis of dynamic networks of pushdown systems", "authors": ["Bouajjani", " M\u00fcller-Olm"]}, {"title": " ", "authors": [" vol"]}, {"title": "Concurrent programming with revisions and isolation types", "authors": ["Burckhardt", " Baldassin"]}, {"title": " ", "authors": [" New York"]}, {"title": "Parallel programmability and the Chapel language", "authors": ["Chamberlain", " Callahan"]}, {"title": " ", "authors": []}, {"title": "X10: An object-oriented approach to non-uniform cluster computing", "authors": ["Charles", " Grothoff", " Saraswat", " Donawa", " Kielstra", " Ebcioglu", " von Praun"]}, {"title": " ", "authors": [" New York"]}, {"title": "Subcubic algorithms for recursive state machines", "authors": ["Chaudhuri"]}, {"title": " ", "authors": []}, {"title": "Design and synthesis of synchronization skeletons using branching-time temporal logic", "authors": ["Clarke"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "", "authors": ["Clarke", " Grumberg"]}, {"title": "MIT Press", "authors": []}, {"title": "Static determination of dynamic properties of programs", "authors": ["Cousot"]}, {"title": "", "authors": []}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": " ", "authors": [" New York"]}, {"title": "Towards the automated verification of multithreaded Java programs", "authors": ["Delzanno", " Raskin"]}, {"title": "", "authors": [" vol"]}, {"title": "The covering and boundedness problems for branching vector addition systems", "authors": ["Demri", " Jurdzinski", " Lachish"]}, {"title": "", "authors": [" vol"]}, {"title": "A calculus of atomic actions", "authors": ["Elmas", " Qadeer"]}, {"title": " ", "authors": [" New York"]}, {"title": "Delay-bounded scheduling", "authors": ["Emmi", " Qadeer"]}, {"title": " ", "authors": [" New York"]}, {"title": "Asynchronous programs with prioritized task-buffers", "authors": ["Emmi", " Lal"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Decidability issues for Petri nets - A survey", "authors": ["Esparza"]}, {"title": "", "authors": []}, {"title": "Efficient algorithms for pre* and post* on interprocedural parallel flow graphs", "authors": ["Esparza"]}, {"title": " ", "authors": [" New York"]}, {"title": "Complexity of pattern-based verification for multithreaded programs", "authors": ["Esparza"]}, {"title": " ", "authors": [" New York"]}, {"title": "Model checking LTL with regular valuations for pushdown systems", "authors": ["Esparza", " Kucera"]}, {"title": " ", "authors": []}, {"title": "Sequoia: Programming the memory hierarchy", "authors": ["Fatahalian", " Horn", " Knight", " Leem", " Houston", " Park", " Erez", " Ren", " Aiken", " Dally"]}, {"title": " ", "authors": [" New York"]}, {"title": "Well-structured transition systems everywhere! ", "authors": ["Finkel"]}, {"title": " ", "authors": []}, {"title": "The semantics of future and an application", "authors": ["Flanagan"]}, {"title": " ", "authors": []}, {"title": "Thread-modular model checking", "authors": ["Flanagan"]}, {"title": "", "authors": [" vol"]}, {"title": "Algorithmic verification of asynchronous programs", "authors": ["Ganty"]}, {"title": " ", "authors": []}, {"title": "Verifying liveness for asynchronous programs", "authors": ["Ganty", " Majumdar"]}, {"title": " ", "authors": [" New York"]}, {"title": "Queue-dispatch asynchronous systems", "authors": ["Geeraerts", " Heu\u00dfner"]}, {"title": "Expand, enlarge and check: New algorithms for the coverability problem of WSTS", "authors": ["Geeraerts", " Raskin"]}, {"title": " ", "authors": []}, {"title": "Reasoning about systems with many processes", "authors": ["German"]}, {"title": " ", "authors": []}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "", "authors": [" vol"]}, {"title": "Why do computers stop and what can be about it? http://www", "authors": ["Gray"]}, {"title": "Predicate abstraction and refinement for verifying multi-threaded programs", "authors": ["Gupta", " Popeea"]}, {"title": " ", "authors": [" New York"]}, {"title": "Multilisp: A language for concurrent symbolic computation", "authors": []}, {"title": " ", "authors": []}, {"title": "Thread-modular abstraction refinement", "authors": ["Henzinger", " Jhala", " Majumdar"]}, {"title": "", "authors": [" vol"]}, {"title": "Interprocedural analysis of asynchronous programs", "authors": ["Jhala"]}, {"title": " ", "authors": [" New York"]}, {"title": "Boundedness vs", "authors": ["Kahlon"]}, {"title": " ", "authors": []}, {"title": "Parallel program schemata", "authors": ["Karp"]}, {"title": " ", "authors": []}, {"title": "Parallelism for free: Efficient and optimal bitvector analyses for parallel programs", "authors": ["Knoop", " Steffen"]}, {"title": " ", "authors": []}, {"title": "Decidability of reachability in vector addition systems (preliminary version)", "authors": ["Kosaraju"]}, {"title": " ", "authors": [" New York"]}, {"title": "Lower bounds for natural proof systems", "authors": ["Kozen"]}, {"title": " ", "authors": [" Lois Alamitos", " CA"]}, {"title": "Reducing context-bounded concurrent reachability to sequential reachability", "authors": ["La Torre", " Madhusudan"]}, {"title": " ", "authors": [" vol"]}, {"title": "Model-checking parameterized concurrent programs using linear interfaces", "authors": ["La Torre", " Madhusudan"]}, {"title": " ", "authors": [" vol"]}, {"title": "Reducing concurrent analysis under a context bound to sequential analysis", "authors": ["Lal"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Larus"]}, {"title": "200/S00070ED1V01Y200611CAC002", "authors": []}, {"title": "The problem with threads", "authors": ["Lee"]}, {"title": " ", "authors": []}, {"title": "Featherweight X10: A core calculus for async-finish parallelism", "authors": ["Lee"]}, {"title": " ", "authors": [" New York"]}, {"title": "The design of a task parallel library", "authors": ["Leijen", " Schulte"]}, {"title": " ", "authors": [" New York"]}, {"title": "Vector addition system reachability problem: A short self-contained proof", "authors": ["Leroux"]}, {"title": " ", "authors": [" New York"]}, {"title": "The reachability problem requires exponential space", "authors": ["Lipton"]}, {"title": "An algorithm for the general Petri net reachability problem", "authors": ["Mayr"]}, {"title": " ", "authors": [" New York"]}, {"title": "Iterative context bounding for systematic testing of multithreaded programs", "authors": ["Musuvathi"]}, {"title": " ", "authors": [" New York"]}, {"title": "", "authors": ["Nielson", " Nielson"]}, {"title": "Springer", "authors": []}, {"title": "Verifying properties of parallel programs: An axiomatic approach", "authors": ["Owicki"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Papadimitriou"]}, {"title": "Addison Wesley", "authors": []}, {"title": "On context-free languages", "authors": ["Parikh"]}, {"title": " ", "authors": []}, {"title": "A programming model for deterministic task parallelism", "authors": ["Pratikakis", " V", " Lyberis"]}, {"title": " ", "authors": [" New York"]}, {"title": "KISS: Keep it simple and sequential", "authors": ["Qadeer"]}, {"title": " ", "authors": [" New York"]}, {"title": "Context-bounded model checking of concurrent software", "authors": ["Qadeer"]}, {"title": " ", "authors": [" vol"]}, {"title": "Specification and verification of concurrent systems in cesar", "authors": ["Queille"]}, {"title": "", "authors": [" vol"]}, {"title": "The covering and boundedness problems for vector addition systems", "authors": ["Rackoff"]}, {"title": "", "authors": []}, {"title": "Context-sensitive synchronization-sensitive analysis is undecidable", "authors": ["Ramalingam"]}, {"title": " ", "authors": []}, {"title": "Cilk: Efficient multithreaded computing", "authors": []}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": " ", "authors": [" New York"]}, {"title": "Relationships between nondeterministic and deterministic tape complexities", "authors": ["Savitch"]}, {"title": " ", "authors": []}, {"title": "Synchronization-free and deterministic coarse-grain parallelism: Architectural support and programming model", "authors": ["Segulja"]}, {"title": "", "authors": []}, {"title": "Constraint-based inter-procedural analysis of parallel programs", "authors": ["Seidl"]}, {"title": "", "authors": [" vol"]}, {"title": "Counting in trees for free", "authors": ["Seidl", " Schwentick", " Muscholl"]}, {"title": "", "authors": [" vol"]}, {"title": "Model checking multithreaded programs with asynchronous atomic methods", "authors": ["Sen"]}, {"title": " ", "authors": [" vol"]}, {"title": "Two approaches to interprocedural data-flow analysis", "authors": ["Sharir"]}, {"title": "", "authors": [" Prentice-Hall", " Chapte"]}, {"title": "", "authors": ["Sipser"]}, {"title": "PWS Publishing Company", "authors": []}, {"title": "Complexity of analyzing the synchronization structure of concurrent programs", "authors": ["Taylor"]}, {"title": "", "authors": []}, {"title": "Karp-Miller trees for a branching extension of VASS", "authors": ["Verma"]}, {"title": "", "authors": []}, {"title": "On the complexity of equational horn clauses", "authors": ["Verma", " Seidl"]}, {"title": " ", "authors": [" vol"]}]},
{"title": "Making the java memory model safe", "time": "January 2014", "keyword": ["Programming Languages and Systems"], "abstract": "This work presents a machine-checked formalisation of the Java memory model and connects it to an operational semantics for Java and Java bytecode. For the whole model, I prove the data race freedom guarantee and type safety. The model extends previous formalisations by dynamic memory allocation, thread spawns and joins, infinite executions, the wait-notify mechanism, and thread interruption, all of which interact in subtle ways with the memory model. The formalisation resulted in numerous clarifications of and fixes to the existing JMM specification.\n", "author": [{"name": "Andreas Lochbihler", "affiliation": "Karlsruhe Institute of Technology, Switzerland"}, {"name": "Andreas Lochbihler", "affiliation": "Karlsruhe Institute of Technology, Switzerland"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "17", "references": [{"title": "Shared memory consistency models: A tutorial", "authors": ["Adve"]}, {"title": "Weak ordering\u2014a new definition", "authors": ["Adve"]}, {"title": "Formal Syntax and Semantics of Java", "authors": ["Alves-Foss", " Ed"]}, {"title": "Formalising Java's data-race-free guarantee", "authors": ["Aspinall"]}, {"title": "Java memory model examples: Good, bad and ugly", "authors": ["Aspinall"]}, {"title": "Clarifying and compiling C/C&plus;&plus; concurrency: From C&plus;&plus;11 to POWER", "authors": ["Batty", " Memarian", " Owens", " Sarkar"]}, {"title": "Mathematizing C&plus;&plus; concurrency", "authors": ["Batty", " Owens", " Sarkar", " Sewell"]}, {"title": "Memory model rationales", "authors": ["Boehm"]}, {"title": "Can seqlocks get along with programming language memory models&quest; In Proceedings of the ACM SIGPLAN Workshop on Memory Systems Performance and Correctness (MSPC'12)", "authors": ["Boehm"]}, {"title": "Foundations of the C&plus;&plus; concurrency memory model", "authors": ["Boehm"]}, {"title": "Relaxed memory models: An operational approach", "authors": ["Boudol"]}, {"title": "An operational semantics including \u201cvolatile\u201d for safe concurrency", "authors": ["Boyl"]}, {"title": "The Java memory model: Operationally, denotationally, axiomatically", "authors": ["Cenciarelli", " Knapp"]}, {"title": "Escape analysis for Java", "authors": ["Choi", " Gupta", " Serrano", " Sreedhar"]}, {"title": "Java memory model aware software validation", "authors": [" Roychoudhury"]}, {"title": "Plan B: A buffered memory model for Java", "authors": ["Demange", " Laporte", " Zhao", " Jagannathan", " Pichardie"]}, {"title": "Describing the semantics of Java and proving type soundness", "authors": ["Drossopoulou"]}, {"title": "Formal analysis of Java programs in JavaFAN", "authors": ["Farzan", " Chen", " Meseguer"]}, {"title": "Formal JVM code analysis in JavaFAN", "authors": ["Farzan", " Meseguer"]}, {"title": "Slicing of concurrent programs and its application to information flow control", "authors": ["Giffhorn"]}, {"title": "Inside Java 2 Platform Security: Architecture, API Design, and Implementation 2nd Ed", "authors": ["Gong"]}, {"title": "The Java Language Specification 3rd", "authors": ["Gosling", " Joy", " Steele"]}, {"title": "Types for relaxed memory models", "authors": ["Goto", " Jagadeesan", " Pitcher"]}, {"title": "Multiprocessors should support simple memory-consistency models", "authors": ["Hill"]}, {"title": "The Java memory model: A formal explanation", "authors": ["Huisman"]}, {"title": "The power of parameterization in coinductive proof", "authors": ["Hur", " Neis", " Dreyer"]}, {"title": "International standard ISO/IEC 14882:2011", "authors": ["ISO"]}, {"title": "JLS3 contains glitch concerning volatiles&quest; Java Memory Model mailing list, post 2477", "authors": ["Jacobs"]}, {"title": "Generative operational semantics for relaxed memory models", "authors": ["Jagadeesan", " Pitcher"]}, {"title": "Java memory model-aware model checking", "authors": ["Jin", " Yavuz-Kahveci"]}, {"title": "A machine-checked model for a Java-like language, virtual machine and compiler", "authors": ["Klein"]}, {"title": "How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": ["Lamport"]}, {"title": "JSR 166: Concurrency utilities", "authors": ["Lea"]}, {"title": "Executable JVM model for analytical reasoning: A study", "authors": ["Liu"]}, {"title": "Jinja with threads", "authors": ["Lochbihler"]}, {"title": "Type safe nondeterminism - a formal semantics of Java threads", "authors": ["Lochbihler"]}, {"title": "Verifying a compiler for Java threads", "authors": ["Lochbihler"]}, {"title": "Java and the Java memory model -- a unified, machine-checked formalisation", "authors": ["Lochbihler"]}, {"title": "A machine-checked, type-safe model of Java concurrency -- language, virtual machine, memory model and verified compiler", "authors": ["Lochbihler"]}, {"title": "Animating the formalised semantics of a Java-like language", "authors": ["Lochbihler"]}, {"title": "The proof of DRF guarantee and initialization", "authors": ["Manson"]}, {"title": "The Java memory model", "authors": ["Manson", " Pugh"]}, {"title": "Isabelle/HOL\u2014A Proof Assistant for Higher-Order Logic", "authors": ["Nipkow", " Paulson"]}, {"title": "Java", "authors": ["Nipkow"]}, {"title": "ACM, 161--170", "authors": []}, {"title": "BicolanoMT: A formalization of multi-threaded Java at bytecode level", "authors": ["Petri"]}, {"title": "Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Verification of the Java causality requirements", "authors": ["Polyakov"]}, {"title": "The Java memory model is fatally flawed", "authors": ["Pugh"]}, {"title": "Causality test cases for the Java memory model", "authors": ["Pugh"]}, {"title": "Effective synchronization removal for Java", "authors": ["Ruf"]}, {"title": "On the bisimulation proof method", "authors": ["Sangiorgi"]}, {"title": "Program transformations in weak memory models", "authors": ["\u0160ev\u010d\u00edk"]}, {"title": "On validity of program transformations in the Java memory model", "authors": ["\u0160ev\u010d\u00edk"]}, {"title": "Relaxed-memory concurrency and verified compilation", "authors": ["\u0160ev\u010d\u00edk", " Vafeiadis", " Nardelli", " Jagannathan"]}, {"title": "\u00d786-TSO: A rigorous and usable programmer's model for \u00d786 multiprocessors", "authors": ["Sewell", " Sarkar", " Owens", " Nardelli"]}, {"title": "A Primer on Memory Consistency and Cache Coherence", "authors": ["Sorin", " Hill"]}, {"title": "Java and the Java Virtual Machine", "authors": ["St\u00e4rk", " Schmid"]}, {"title": "A unified theory of shared memory consistency", "authors": ["Steinke"]}, {"title": "Compiler techniques for high performance sequentially consistent Java programs", "authors": ["Sura", " Fang", " Wong", " Midkiff", " Lee"]}, {"title": "MemSAT: Checking axiomatic specifications of memory models", "authors": ["Torlak", " Vaziri"]}, {"title": "There is nothing wrong with out-of-thin-air: Compiler optimization and memory models", "authors": ["Verbrugge", " Kielstra"]}, {"title": "A syntactic approach to type soundness", "authors": ["Wright"]}]},
{"title": "Divergence analysis", "time": "January 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Growing interest in graphics processing units has brought renewed attention to the Single Instruction Multiple Data (SIMD) execution model. SIMD machines give application developers tremendous computational power; however, programming them is still challenging. In particular, developers must deal with memory and control-flow divergences. These phenomena stem from a condition that we call data divergence, which occurs whenever two processing elements (PEs) see the same variable name holding different values. This article introduces divergence analysis, a static analysis that discovers data divergences. This analysis, currently deployed in an industrial quality compiler, is useful in several ways: it improves the translation of SIMD code to non-SIMD CPUs, it helps developers to manually improve their SIMD applications, and it also guides the automatic optimization of SIMD programs. We demonstrate this last point by introducing the notion of a divergence-aware register spiller. This spiller uses information from our analysis to either rematerialize or share common data between PEs. As a testimony of its effectiveness, we have tested it on a suite of 395 CUDA kernels from well-known benchmarks. The divergence-aware spiller produces GPU code that is 26.21% faster than the code produced by the register allocator used in the baseline compiler.\n", "author": [{"name": "Diogo Sampaio", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}, {"name": "Rafael Martins de Souza", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}, {"name": "Sylvain Collange", "affiliation": "INRIA, Rennes Cedex, France"}, {"name": "Fernando Magno Quint\u00e3o Pereira", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}, {"name": "Diogo Sampaio", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}, {"name": "Rafael Martins de Souza", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}, {"name": "Sylvain Collange", "affiliation": "INRIA, Rennes Cedex, France"}, {"name": "Fernando Magno Quint\u00e3o Pereira", "affiliation": "Universidade Federal de Minas Gerais, Belo Horizonte, Brazil"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "9", "references": [{"title": "TRANQUIL: A language for an array processing computer", "authors": ["Abel", " Budnik", " Kuck", " Muraoka", " Northcote"]}, {"title": "Compilers: Principles, Techniques, and Tools 2nd Ed", "authors": ["Aho", " Lam", " Sethi"]}, {"title": "Barrier inference", "authors": ["Aiken"]}, {"title": "SSA is functional programming", "authors": ["Appel"]}, {"title": "An adaptive performance modeling tool for GPU architectures", "authors": ["Baghsorkhi", " Delahaye", " Patel", " Gropp"]}, {"title": "A study of replacement algorithms for a virtual storage computer", "authors": ["Belady"]}, {"title": "Vcode: A data-parallel intermediate language", "authors": ["Blelloch"]}, {"title": "Memory system on Fusion APUs", "authors": ["Boudier"]}, {"title": "Control structures for data-parallel SIMD languages: Semantics and implementation", "authors": ["Boug\u00e9"]}, {"title": "The Illiac IV system", "authors": ["Bouknight", " Denenberg", " McIntyre", " R", " Sameh"]}, {"title": "Rematerialization", "authors": ["Briggs", " Cooper"]}, {"title": "Efficient oblivious parallel sorting on the MasPar MP-1", "authors": ["Brockmann"]}, {"title": "Fast copy coalescing and live-range identification", "authors": ["Budimlic", " Cooper", " Harvey", " Kennedy", " Oberg"]}, {"title": "A control-structure splitting optimization for GPGPU", "authors": ["Carrillo", " Siegel"]}, {"title": "GPU-quicksort: A practical quicksort algorithm for graphics processors", "authors": ["Cederman"]}, {"title": "Rodinia: A benchmark suite for heterogeneous computing", "authors": ["Che", " Boyer", " Meng", " Tarjan", " Sheaffer", " Lee"]}, {"title": "Automatic construction of sparse data flow evaluation graphs", "authors": ["Choi", " Cytron"]}, {"title": "Dynamic detection of uniform and affine vectors in GPGPU computations", "authors": ["Collange", " Defour"]}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": ["Cousot"]}, {"title": "Divergence analysis and optimizations", "authors": ["Coutinho", " Sampaio", " Pereira"]}, {"title": "Profiling divergences in GPU applications", "authors": ["Coutinho", " Sampaio", " Pereira"]}, {"title": "GPU programming in a high level language: Compiling \u00d710 to CUDA", "authors": ["Cunningham", " Bordawekar"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Cytron", " Ferrante", " Rosen", " Wegman"]}, {"title": "A single-program-multiple-data computational model for EPEX/FORTRAN", "authors": ["Darema", " George", " Norton"]}, {"title": "Ocelot, a dynamic optimization framework for bulk-synchronous applications in heterogeneous systems", "authors": ["Diamos", " Kerr", " Yalamanchili"]}, {"title": "Compiling a high-level language for GPUS: (via language support for architectures and compilers)", "authors": ["Dubach", " Cheng", " Rabbah", " Bacon"]}, {"title": "Formal specification of parallel SIMD execution", "authors": ["Farrell"]}, {"title": "The program dependence graph and its use in optimization", "authors": ["Ferrante", " Ottenstein"]}, {"title": "Some computer organizations and their effectiveness", "authors": ["Flynn"]}, {"title": "Dynamic warp formation and scheduling for efficient GPU control flow", "authors": ["Fung", " Sham", " Yuan"]}, {"title": "Understanding throughput-oriented architectures", "authors": ["Garl"]}, {"title": "Addressing GPU on-chip shared memory bank conflicts using elastic pipeline", "authors": ["Gou"]}, {"title": "Variance analysis for translating CUDA code for execution by a general purpose processor", "authors": ["Grover", " Joannes", " Aarts"]}, {"title": "Optimal register allocation for SSA-form programs in polynomial time", "authors": ["Hack"]}, {"title": "Reducing branch divergence in GPU programs", "authors": ["Han"]}, {"title": "Static memory access pattern analysis on a massively parallel GPU", "authors": ["Jang", " Schaa", " Mistry"]}, {"title": "Whole-function vectorization", "authors": ["Karrenberg"]}, {"title": "Improving performance of OpenCL on CPUS", "authors": ["Karrenberg"]}, {"title": "POMP, or how to design a massively parallel machine with small developments", "authors": ["Keryell", " Materat"]}, {"title": "Wavefront array processor: Language, architecture, and applications", "authors": ["Kung", " Arun", " Gal-Ezer"]}, {"title": "Performance in GPU architectures: Potentials and distances", "authors": ["Lashgar"]}, {"title": "GLYPNIR-a programming language for ILLIAC IV", "authors": ["Lawrie", " Layman", " Baer"]}, {"title": "OpenMP to GPGPU: A compiler framework for automatic translation and optimization", "authors": ["Lee", " Min"]}, {"title": "Exploring the tradeoffs between programmability and efficiency in data-parallel accelerators", "authors": ["Lee", " Avizienis", " Bishara", " Xia", " Lockhart", " Batten"]}, {"title": "Convergence and scalarization for data-parallel architectures", "authors": ["Lee", " Krashinsky", " Grover", " Keckler"]}, {"title": "Extending a C-like language for portable SIMD programming", "authors": ["Leiba", " Hack"]}, {"title": "Dynamic warp subdivision for integrated branch and memory divergence tolerance", "authors": ["Meng", " Tarjan"]}, {"title": "The octagon abstract domain", "authors": ["Min\u00e9"]}, {"title": "IP routing processing with graphic processors", "authors": [" Zhang", " Zhang", " Lu", " Deng"]}, {"title": "The GPU computing era", "authors": ["Nickolls"]}, {"title": "Graphics and Computing GPUs", "authors": ["Nickolls"]}, {"title": "Principles of Program Analysis", "authors": ["Nielson", " Nielson"]}, {"title": "The program dependence Web: A representation supporting control-, data-, and demand-driven interpretation of imperative languages", "authors": ["Ottenstein", " Ballance"]}, {"title": "Dirmap's Blog", "authors": ["Pereira"]}, {"title": "A language for array and vector processors", "authors": ["Perrot"]}, {"title": "ISPC: A SPMD compiler for high-performance CPU programming", "authors": ["Pharr"]}, {"title": "Linear scan register allocation", "authors": ["Poletto"]}, {"title": "EigenCFA: Accelerating flow analysis with GPUs", "authors": ["Prabhu", " Ramalingam", " Might"]}, {"title": "Optimization principles and application performance evaluation of a multithreaded GPU using CUDA", "authors": ["Ryoo", " Rodrigues", " Baghsorkhi", " Stone", " Kirk"]}, {"title": "Programming model for a heterogeneous \u00d786 platform", "authors": ["Saha", " Zhou", " Chen", " Gao", " Yan", " Rajagopalan", " Fang", " Zhang", " Ronen"]}, {"title": "Adaptive input-aware compilation for graphics engines", "authors": ["Samadi", " Hormati", " Mehrara"]}, {"title": "Divergence analysis with affine constraints", "authors": ["Sampaio", " Martins", " Collange"]}, {"title": "Spill code placement for simd machines", "authors": ["Sampaio", " Gedeon", " Pereira"]}, {"title": "CUDALIGN: Using GPU to accelerate the comparison of megabase genomic sequences", "authors": []}, {"title": "User-input dependence analysis via graph reachability", "authors": ["Scholz", " Zhang"]}, {"title": "Efficient compilation of fine-grained SPMD-threaded programs for multicore CPUs", "authors": ["Stratton", " Grover", " Marathe", " Aarts", " Murphy", " Hu"]}, {"title": "The parboil report", "authors": ["Stratton", " Rodrigues", " Sun", " Obeid", " Chang", " Anssari", " Liu"]}, {"title": "Efficient building and placing of gating functions", "authors": []}, {"title": "Program slicing", "authors": ["Weiser"]}, {"title": "A GPGPU compiler for memory optimization and parallelism management", "authors": ["Yang", " Xiang", " Kong"]}, {"title": "Streamlining GPU applications on the fly: Thread divergence elimination through runtime thread-data remapping", "authors": ["Zhang", " Jiang", " Guo"]}, {"title": "On-the-fly elimination of dynamic irregularities for GPU computing", "authors": ["Zhang", " Jiang", " Guo", " Tian"]}, {"title": "A quantitative performance analysis model for GPU architectures", "authors": ["Zhang"]}]},
{"title": "Reachability analysis of program variables", "time": "January 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Reachability from a program variable \n to a program variable \n states that from \n, it is possible to follow a path of memory locations that leads to the object bound to \n. We present a new abstract domain for the static analysis of possible reachability between program variables or, equivalently, definite unreachability between them. This information is important for improving the precision of other static analyses, such as side-effects, field initialization, cyclicity and path-length analysis, as well as more complex analyses built upon them, such as nullness and termination analysis. We define and prove correct our reachability analysis for Java bytecode, defined as a constraint-based analysis, where the constraint is a graph whose nodes are the program points and whose arcs propagate reachability information in accordance to the abstract semantics of each bytecode instruction. For each program point \n, our reachability analysis produces an overapproximation of the ordered pairs of variables \u3008\n, \n\u3009 such that \n \n \n at \n. Seen the other way around, if a pair \u3008\n, \n\u3009 is not present in the overapproximation at \n, then \n \n \n at \n. We have implemented the analysis inside the Julia static analyzer. Our experiments of analysis of nontrivial Java and Android programs show the improvement of precision due to the presence of reachability information. Moreover, reachability analysis actually reduces the overall cost of nullness and termination analysis.\n", "author": [{"name": "\u0110urica Nikoli\u0107", "affiliation": "University of Verona and Microsoft Research - University of Trento Centre for Computational and Systems Biology "}, {"name": "Fausto Spoto", "affiliation": "University of Verona"}, {"name": "\u0110urica Nikoli\u0107", "affiliation": "University of Verona and Microsoft Research - University of Trento Centre for Computational and Systems Biology "}, {"name": "Fausto Spoto", "affiliation": "University of Verona"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "8", "references": [{"title": "Cost analysis of Java bytecode", "authors": ["Albert", " Arenas", " Genaim", " Puebla"]}, {"title": "Shape analysis by predicate abstraction", "authors": ["Balaban", " Pnueli"]}, {"title": "Automatic predicate abstraction of C programs", "authors": ["Ball", " Majumdar", " Millstein"]}, {"title": "Polymorphic predicate abstraction", "authors": ["Ball", " Millstein"]}, {"title": "Shape analysis for composite data structures", "authors": ["Berdine", " Calcagno", " Cook", " Distefano", " O'Hearn", " Wies"]}, {"title": "Graph-based algorithms for boolean function manipulation", "authors": ["Bryant"]}, {"title": "Compositional shape analysis by means of bi-abduction", "authors": ["Calcagno", " Distefano", " O'Hearn"]}, {"title": "A low-level memory model and an accompanying reachability predicate", "authors": ["Chatterjee", " Lahiri", " Qadeer"]}, {"title": "Using shape analysis to reduce finite-state models of concurrent Java programs", "authors": ["Corbett"]}, {"title": "Abstract Interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": "Shape analysis through predicate abstraction and model checking", "authors": ["Dams"]}, {"title": "A local shape analysis based on separation logic", "authors": ["Distefano", " O'Hearn"]}, {"title": "The acyclicity inference of COSTA", "authors": ["Genaim"]}, {"title": "Reachability-based acyclicity analysis by abstract interpretation", "authors": ["Genaim"]}, {"title": "Pointer analysis: Building a foundation for effective program analysis", "authors": ["Hardekopf"]}, {"title": "Pointer analysis: Haven't we solved this problem yet&quest; In Proceedings of the Workshop on Program Analysis for Software Tools and Engineering (PASTE)", "authors": ["Hind"]}, {"title": "Dynamic shape analysis via degree metrics", "authors": ["Jump"]}, {"title": "Program analysis using binary decision Diagrams", "authors": ["Lhot\u00e1k"]}, {"title": "Points-to analysis with efficient strong updates", "authors": ["Lhot\u00e1k"]}, {"title": "Scaling Java points-to analysis using SPARK", "authors": ["Lhot\u00e1k"]}, {"title": "The Java", "authors": ["Lindholm"]}, {"title": "Addison-Wesley", "authors": [" Virtual Machine Specificatio"]}, {"title": "Efficient context-sensitive shape analysis with graph based heap models", "authors": ["Marron", " Hermenegildo", " Kapur"]}, {"title": "Verifying reachability invariants of linked structures", "authors": ["Nelson"]}, {"title": "A general framework for constraint-based static analyses of Java bytecode programs", "authors": ["Nikoli\u0107", " &Dstrok;"]}, {"title": "Automaton-based array initialization analysis", "authors": ["Nikoli\u0107"]}, {"title": "Definite expression aliasing analysis for Java bytecode", "authors": ["Nikoli\u0107"]}, {"title": "Reachability analysis of program variables", "authors": ["Nikoli\u0107"]}, {"title": "Inferring complete initialization of arrays", "authors": ["Nikoli\u0107"]}, {"title": "Object-oriented type inference", "authors": ["Palsberg"]}, {"title": "Practical pluggable types for Java", "authors": ["Papi", " Ali", " Correa", " Perkins"]}, {"title": "Magic-sets transformation for the analysis of Java bytecode", "authors": ["Payet"]}, {"title": "Dynamic shape and data structure analysis in Java", "authors": ["Pheng"]}, {"title": "Detecting non-cyclicity by abstract compilation into boolean functions", "authors": ["Rossignoli"]}, {"title": "Points-to analysis for Java using annotated constraints", "authors": ["Rountev", " Milanova"]}, {"title": "Solving shape-analysis problems in languages with destructive updating", "authors": ["Sagiv", " Reps"]}, {"title": "Parametric shape analysis via 3-valued logic", "authors": ["Sagiv", " Reps"]}, {"title": "Pointer analysis for Java programs: Novel techniques and applications", "authors": ["Salcianu"]}, {"title": "Pair-sharing analysis of object-oriented programs", "authors": ["Secci"]}, {"title": "Pick your contexts well: Understanding object-sensitivity", "authors": ["Smaragdakis", " Bravenboer"]}, {"title": "Nullness analysis in boolean form", "authors": ["Spoto"]}, {"title": "Precise null-pointer analysis", "authors": ["Spoto"]}, {"title": "Inference of field initialization", "authors": ["Spoto"]}, {"title": "A termination analyzer for Java bytecode based on path-length", "authors": ["Spoto", " Mesnard"]}]},
{"title": "Extending Type Inference to Variational Programs", "time": "March 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Through the use of conditional compilation and related tools, many software projects can be used to generate a huge number of related programs. The problem of typing such variational software is difficult. The brute-force strategy of generating all variants and typing each one individually is: (1) usually infeasible for efficiency reasons and (2) produces results that do not map well to the underlying variational program. Recent research has focused mainly on efficiency and addressed only the problem of type checking. In this work we tackle the more general problem of variational type inference and introduce variational types to represent the result of typing a variational program. We introduce the variational lambda calculus (VLC) as a formal foundation for research on typing variational programs. We define a type system for VLC in which VLC expressions are mapped to correspondingly variational types. We show that the type system is correct by proving that the typing of expressions is preserved over the process of variation elimination, which eventually results in a plain lambda calculus expression and its corresponding type. We identify a set of equivalence rules for variational types and prove that the type unification problem modulo these equivalence rules is unitary and decidable; we also present a sound and complete unification algorithm. Based on the unification algorithm, the variational type inference algorithm is an extension of algorithm \n. We show that it is sound and complete and computes principal types. We also consider the extension of VLC with sum types, a necessary feature for supporting variational data types, and demonstrate that the previous theoretical results also hold under this extension. Finally, we characterize the complexity of variational type inference and demonstrate the efficiency gains over the brute-force strategy.\n", "author": [{"name": "Sheng Chen", "affiliation": "Oregon State University"}, {"name": "Martin Erwig", "affiliation": "Oregon State University"}, {"name": "Eric Walkingshaw", "affiliation": "Oregon State University"}, {"name": "Sheng Chen", "affiliation": "Oregon State University"}, {"name": "Martin Erwig", "affiliation": "Oregon State University"}, {"name": "Eric Walkingshaw", "affiliation": "Oregon State University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "29", "references": [{"title": "", "authors": ["Abrahams"]}, {"title": "Addison-Wesley Professional", "authors": []}, {"title": "Unification modulo ACUI plus homomorphisms/distributivity", "authors": ["Anantharaman", " Narendran"]}, {"title": " ", "authors": []}, {"title": "A calculus for uniform feature composition", "authors": ["Apel"]}, {"title": " ", "authors": []}, {"title": "An overview of feature-oriented software development", "authors": ["Apel"]}, {"title": "", "authors": []}, {"title": "Feature featherweight java: A calculus for feature-oriented programming and stepwise refinement", "authors": ["Apel", " K\u00e4stner"]}, {"title": " ", "authors": []}, {"title": "Type safety for feature-oriented product lines", "authors": ["Apel", " K\u00e4stner", " Gr\u00f6\u00dflinger"]}, {"title": " ", "authors": []}, {"title": "Strategies for product-line verification: Case studies and experiments", "authors": ["Apel", " von Rhein", " Wendler", " Gr\u00f6\u00dflinger"]}, {"title": "To appear", "authors": []}, {"title": "", "authors": ["Austern"]}, {"title": "Addison-Wesley Longman", "authors": []}, {"title": "Handling preprocessor-conditioned declarations", "authors": ["Aversano", " Penta"]}, {"title": "", "authors": []}, {"title": "", "authors": ["Baader"]}, {"title": "Cambridge University Press", "authors": []}, {"title": "Unification theory", "authors": ["Baader"]}, {"title": "", "authors": [" North Holl"]}, {"title": "Extensional normalisation and type-directed partial evaluation for typed lambda calculus with sums", "authors": ["Balat", " Cosmo"]}, {"title": " ", "authors": []}, {"title": "Scaling step-wise refinement", "authors": ["Batory", " Sarvela"]}, {"title": " ", "authors": []}, {"title": "Intraprocedural dataflow analysis for software product lines", "authors": ["Brabr", " Ribeiro", " Tol\u00eado"]}, {"title": " ", "authors": []}, {"title": "Mixin-based inheritance", "authors": ["Bracha"]}, {"title": " ", "authors": []}, {"title": "Building a family of compilers", "authors": ["Chae"]}, {"title": " ", "authors": []}, {"title": "Counter-factual typing for debugging type errors", "authors": ["Chen"]}, {"title": "To appear", "authors": []}, {"title": "An error-tolerant type system for variational lambda calculus", "authors": ["Chen", " Erwig"]}, {"title": " ", "authors": []}, {"title": "Model checking lots of systems: Efficient verification of temporal properties in software product lines", "authors": ["Classen", " Heymans", " Schobbens", " Legay"]}, {"title": " ", "authors": []}, {"title": "Symbolic model checking of software product lines", "authors": ["Classen", " Heymans", " Schobbens"]}, {"title": " ", "authors": []}, {"title": "Simulation-based abstractions for software product-line model checking", "authors": ["Cordy", " Classen", " Perrouin", " Schobbens", " Heymans"]}, {"title": "", "authors": []}, {"title": "", "authors": ["Czarnecki"]}, {"title": "Addison-Wesley", "authors": []}, {"title": "Principal type schemes for functional programming languages", "authors": ["Damas"]}, {"title": " ", "authors": []}, {"title": "Unification-based pointer analysis with directional assignments", "authors": ["Das"]}, {"title": " ", "authors": []}, {"title": "A machine-checked model of safe composition", "authors": ["Delaware", " Cook"]}, {"title": " ", "authors": []}, {"title": "Fitting the pieces together: A machine-checked model of safe composition", "authors": ["Delaware", " Cook"]}, {"title": " ", "authors": []}, {"title": "Product lines of theorems", "authors": ["Delaware", " Cook"]}, {"title": " ", "authors": []}, {"title": "The \u201crelevance\u201d of intersection and union types", "authors": ["Dezani-Ciancaglini", " Ghilezan"]}, {"title": "", "authors": []}, {"title": "A closer look at aspect interference and cooperation", "authors": ["Disenfeld"]}, {"title": " ", "authors": []}, {"title": "Specifying C++ concepts", "authors": ["Dos Reis"]}, {"title": " ", "authors": []}, {"title": "Variations on the common subexpression problem", "authors": ["Downey", " Sethi"]}, {"title": " ", "authors": []}, {"title": "Aspect-oriented programming", "authors": ["Elrad", " Filman"]}, {"title": " ", "authors": []}, {"title": "The choice calculus: A representation for software variation", "authors": ["Erwig"]}, {"title": " ", "authors": []}, {"title": "Reflective program generation with patterns", "authors": ["F\u00e4hndrich", " Carbin"]}, {"title": " ", "authors": []}, {"title": "Reference: Racket", "authors": ["Flatt"]}, {"title": "Concoqtion: Indexed types now! In ", "authors": ["Fogarty", " Pasalic", " Siek"]}, {"title": " ", "authors": []}, {"title": "Static computation and reflection", "authors": ["Garcia"]}, {"title": "Toward foundations for type-reflective metaprogramming", "authors": ["Garcia"]}, {"title": " ", "authors": []}, {"title": "SuperC: Parsing all of C by taming the preprocessor", "authors": ["Gazzillo"]}, {"title": " ", "authors": []}, {"title": "The C preprocessor", "authors": ["GNU Project"]}, {"title": "Maven: Modular aspect verification and interference analysis", "authors": ["Goldman", " Katz"]}, {"title": " ", "authors": []}, {"title": "Concepts: Linguistic support for generic programming in C++", "authors": ["Gregor", " J\u00e4rvi", " Siek", " Stroustrup", " Dos Reis"]}, {"title": " ", "authors": []}, {"title": "Expressive and safe static reflection with MorphJ", "authors": ["Huang"]}, {"title": " ", "authors": []}, {"title": "Morphing: Structurally shaping a class by reflecting on others", "authors": ["Huang"]}, {"title": " ", "authors": []}, {"title": "Statically safe program generation with safegen", "authors": ["Huang", " Zook"]}, {"title": " ", "authors": []}, {"title": "CJ: Enhancing java with safe type conditions", "authors": ["Huang", " Zook"]}, {"title": " ", "authors": []}, {"title": "Algorithm specialization in generic programming: Challenges of constrained generics in C++", "authors": ["J\u00e4rvi", " Gregor", " Willcock", " Lumsdaine"]}, {"title": " ", "authors": []}, {"title": "Foundations for structured programming with GADTs", "authors": ["Johann"]}, {"title": " ", "authors": []}, {"title": "Polymorphic variants in Haskell", "authors": ["Kagawa"]}, {"title": " ", "authors": []}, {"title": "Feature-oriented domain analysis (FODA) feasibility study", "authors": ["Kang", " Cohen", " Hess", " Novak"]}, {"title": "Granularity in software product lines", "authors": ["K\u00e4stner", " Apel"]}, {"title": " ", "authors": []}, {"title": "Variability-aware parsing in the presence of lexical macros and conditional compilation", "authors": ["K\u00e4stner", " Giarrusso", " Rendel", " Erdweg", " Ostermann"]}, {"title": " ", "authors": []}, {"title": "Type checking annotation-based product lines", "authors": ["K\u00e4stner", " Apel", " Th\u00fcm"]}, {"title": " ", "authors": []}, {"title": "A variability-aware module system", "authors": ["K\u00e4stner", " Ostermann"]}, {"title": " ", "authors": []}, {"title": "TypeChef: Toward type checking &num;ifdef variability in C", "authors": ["Kenner", " K\u00e4stner", " Haase"]}, {"title": " ", "authors": []}, {"title": "On the modularity of feature interactions", "authors": ["Kim", " K\u00e4stner"]}, {"title": " ", "authors": []}, {"title": "Large-scale variability-aware type checking and dataflow analysis", "authors": ["Liebig", " von Rhein", " K\u00e4stner", " Apel", " D\u00f6rre"]}, {"title": "Conquering aspects with Caesar", "authors": ["Mezini"]}, {"title": " ", "authors": []}, {"title": "Variability management with feature-oriented programming and aspects", "authors": ["Mezini"]}, {"title": " ", "authors": []}, {"title": "Incremental type-checking for type-reflective metaprograms", "authors": ["Miao"]}, {"title": " ", "authors": []}, {"title": "Fast decision procedures based on congruence closure", "authors": ["Nelson"]}, {"title": " ", "authors": []}, {"title": "Towards a practical programming language based on dependent type theory", "authors": ["Norell"]}, {"title": "Type inference with constrained types", "authors": ["Odersky", " Sulzmann"]}, {"title": " ", "authors": []}, {"title": "Inductive definitions in the system Coq rules and properties", "authors": ["Paulin-Mohring"]}, {"title": "", "authors": []}, {"title": "", "authors": ["Pierce"]}, {"title": "MIT Press, Cambridge, MA", "authors": [" Cambridge", " MA"]}, {"title": "", "authors": ["Pohl", " B\u00f6ckle"]}, {"title": "Springer", "authors": []}, {"title": "A formalism for C++", "authors": ["Reis"]}, {"title": "A machine-oriented logic based on the resolution principle", "authors": ["Robinson"]}, {"title": " ", "authors": []}, {"title": "Template meta-programming for Haskell", "authors": ["Sheard"]}, {"title": " ", "authors": []}, {"title": "Dynamic typing as staged type inference", "authors": ["Shields", " Sheard"]}, {"title": " ", "authors": []}, {"title": "A semantic analysis of C++ templates", "authors": ["Siek"]}, {"title": " ", "authors": []}, {"title": "Points-to analysis in almost linear time", "authors": ["Steensgaard"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Stroustrup"]}, {"title": "Addison-Wesley Professional", "authors": []}, {"title": "A general type inference framework for Hindley/Milner style systems", "authors": ["Sulzmann"]}, {"title": "", "authors": []}, {"title": "HM(X) type inference is CLP(X) solving", "authors": ["Sulzmann"]}, {"title": " ", "authors": []}, {"title": "MetaML and multi-stage programming with explicit annotations", "authors": ["Taha"]}, {"title": " ", "authors": []}, {"title": "Safe composition of product lines", "authors": ["Thaker", " Batory", " Kitchin"]}, {"title": " ", "authors": []}, {"title": "Statically scoped object adaptation with expanders", "authors": ["Warth", " Stanojevi\u0107"]}, {"title": " ", "authors": []}, {"title": "Dependent types in practical programming", "authors": []}, {"title": " ", "authors": []}]},
{"title": "\u00c6minium: A Permission-Based Concurrent-by-Default Programming Language Approach", "time": "March 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Writing concurrent applications is extremely challenging, not only in terms of producing bug-free and maintainable software, but also for enabling developer productivity. In this article we present the \u00c6minium concurrent-by-default programming language. Using \u00c6minium programmers express data dependencies rather than control flow between instructions. Dependencies are expressed using permissions, which are used by the type system to automatically parallelize the application. The \u00c6minium approach provides a modular and composable mechanism for writing concurrent applications, preventing data races in a provable way. This allows programmers to shift their attention from low-level, error-prone reasoning about thread interleaving and synchronization to focus on the core functionality of their applications. We study the semantics of \u00c6minium through \n\u00c6minium, a sound core calculus that leverages permission flow to enable concurrent-by-default execution. After discussing our prototype implementation we present several case studies of our system. Our case studies show up to 6.5X speedup on an eight-core machine when leveraging data group permissions to manage access to shared state, and more than 70% higher throughput in a Web server application.\n", "author": [{"name": "Sven Stork", "affiliation": "Carnegie Mellon University"}, {"name": "Karl Naden", "affiliation": "Carnegie Mellon University"}, {"name": "Joshua Sunshine", "affiliation": "Carnegie Mellon University"}, {"name": "Manuel Mohr", "affiliation": "Karlsruhe Institute of Technology"}, {"name": "Alcides Fonseca", "affiliation": "University of Coimbra"}, {"name": "Paulo Marques", "affiliation": "University of Coimbra"}, {"name": "Jonathan Aldrich", "affiliation": "Carnegie Mellon University"}, {"name": "Sven Stork", "affiliation": "Carnegie Mellon University"}, {"name": "Karl Naden", "affiliation": "Carnegie Mellon University"}, {"name": "Joshua Sunshine", "affiliation": "Carnegie Mellon University"}, {"name": "Manuel Mohr", "affiliation": "Karlsruhe Institute of Technology"}, {"name": "Alcides Fonseca", "affiliation": "University of Coimbra"}, {"name": "Paulo Marques", "affiliation": "University of Coimbra"}, {"name": "Jonathan Aldrich", "affiliation": "Carnegie Mellon University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "18", "references": [{"title": "Oracle scheduling: Controlling granularity in implicitly parallel languages", "authors": ["Acar", " Chargu\u00e9raud"]}, {"title": " ", "authors": []}, {"title": "Memory models: A case for rethinking parallel languages and hardware", "authors": ["Adve"]}, {"title": " ", "authors": []}, {"title": "Typestate-oriented programming", "authors": ["Aldrich", " Sunshine", " Saini"]}, {"title": "", "authors": []}, {"title": "The plaid language: Typed core specification", "authors": ["Aldrich", " Beckman", " Bocchino", " Naden", " Saini", " Stork"]}, {"title": "The fortress language specification version 1", "authors": ["Allen", " Chase", " Hallett", " Luchangco", " Maessen", " Ryu", " Steele Jr"]}, {"title": "Sharc: Checking data sharing strategies for multithreaded C", "authors": ["Anderson", " Gay", " Ennals"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Verifying correct usage of atomic blocks and typestate", "authors": ["Beckman", " Bierhoff"]}, {"title": "", "authors": []}, {"title": "A provable time and space efficient implementation of NESL", "authors": ["Blelloch"]}, {"title": " ", "authors": []}, {"title": "Cilk: An efficient multithreaded runtime system", "authors": ["Blumofe", " Joerg", " Kuszmaul", " Leiserson", " R"]}, {"title": "", "authors": []}, {"title": "A type and effect system for deterministic parallel Java", "authors": ["Bocchino", " Adve", " Dig", " Adve", " Heumann", " Komuravelli", " Overbey", " Simmons", " Sung"]}, {"title": "", "authors": []}, {"title": "Safe nondeterminism in a deterministic-by-default parallel language", "authors": ["Bocchino", " Heumann", " Honarm", " Adve", " Adve", " Welc"]}, {"title": " ", "authors": []}, {"title": "Transactional memory should be an implementation technique, not a programming interface", "authors": ["Boehm"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": " ", "authors": []}, {"title": "Checking interference with fractional permissions", "authors": ["Boyl"]}, {"title": "", "authors": []}, {"title": "Ownership types for flexible alias protection", "authors": ["Clarke", " Potter"]}, {"title": " ", "authors": []}, {"title": "A simple graph-based intermediate representation", "authors": ["Click"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Using ownership to reason about inherent parallelism in object-oriented programs", "authors": ["Craik"]}, {"title": " ", "authors": []}, {"title": "Adoption and focus: Practical linear types for imperative programming", "authors": ["Fahndrich"]}, {"title": " ", "authors": [" Vol"]}, {"title": "Athapascan-1: On-line building data flow graph in a parallel language", "authors": ["Galil\u00e9e", " Cavalheiro", " Louis Roch"]}, {"title": "", "authors": []}, {"title": "Integrating functional and imperative programming", "authors": ["Gifford"]}, {"title": " ", "authors": []}, {"title": "Linear logic", "authors": ["Girard"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Goldberg"]}, {"title": "Addison-Wesley Longman Publishing, Boston, MA", "authors": [" Boston", " MA"]}, {"title": "Atomicity via source-to-source translation", "authors": ["Hindman"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": " ", "authors": []}, {"title": "Data groups: Specifying the modification of extended state", "authors": ["Leino"]}, {"title": "", "authors": []}, {"title": "Using data groups to specify and check side effects", "authors": ["Leino", " Poetzsch-Heffter"]}, {"title": " ", "authors": []}, {"title": "Peephole optimization", "authors": ["McKeeman"]}, {"title": " ", "authors": []}, {"title": "Axum programmer\u2019s guide", "authors": ["Microsoft Corporatio"]}, {"title": "Notions of computation and monads", "authors": ["Moggi"]}, {"title": " ", "authors": []}, {"title": "High-level small-step operational semantics for transactions", "authors": ["Moore"]}, {"title": "", "authors": []}, {"title": "A type system for borrowing permissions", "authors": ["Naden", " Bocchino", " Aldrich"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "", "authors": ["Pierce"]}, {"title": "MIT Press, Cambridge, MA", "authors": [" Cambridge", " MA"]}, {"title": "A parallel asynchronous computer architecture for data flow programs", "authors": ["Rumbaugh"]}, {"title": "", "authors": ["Sarkar"]}, {"title": "MIT Press, Cambridge, MA", "authors": [" Cambridge", " MA"]}, {"title": "\u00c6MINIUM- Freeing programmers from the shackles of sequentiality", "authors": ["Stork"]}, {"title": "Micro-AEmimium language specification", "authors": ["Stork", " Aldrich"]}, {"title": "Concurrency by default: Using permissions to express dataflow in stateful programs", "authors": ["Stork", " Marques"]}, {"title": " ", "authors": []}, {"title": "AEminium code repository", "authors": ["Stork", " Naden"]}, {"title": "First-class state change in plaid", "authors": ["Sunshine", " Naden", " Stork", " Aldrich"]}, {"title": " ", "authors": [" New York"]}, {"title": "A type system for data-centric synchronization", "authors": ["Vaziri", " Tip", " Dolby"]}, {"title": "", "authors": []}]},
{"title": "Rely-Guarantee-Based Simulation for Compositional Verification of Concurrent Program Transformations", "time": "March 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Verifying program transformations usually requires proving that the resulting program (the target) refines or is equivalent to the original one (the source). However, the refinement relation between individual sequential threads cannot be preserved in general with the presence of parallel compositions, due to instruction reordering and the different granularities of atomic operations at the source and the target. On the other hand, the refinement relation defined based on fully abstract semantics of concurrent programs assumes arbitrary parallel environments, which is too strong and cannot be satisfied by many well-known transformations.\nIn this article, we propose a \nely-\nuarantee-based \nulation (RGSim) to verify concurrent program transformations. The relation is parametrized with constraints of the environments that the source and the target programs may compose with. It considers the interference between threads and their environments, thus is less permissive than relations over sequential programs. It is compositional with respect to parallel compositions as long as the constraints are satisfied. Also, RGSim does not require semantics preservation under all environments, and can incorporate the assumptions about environments made by specific program transformations in the form of rely/guarantee conditions. We use RGSim to reason about optimizations and prove atomicity of concurrent objects. We also propose a general garbage collector verification framework based on RGSim, and verify the Boehm et al. concurrent mark-sweep GC.\n", "author": [{"name": "Hongjin Liang", "affiliation": "University of Science and Technology of China"}, {"name": "Xinyu Feng", "affiliation": "University of Science and Technology of China"}, {"name": "Ming Fu", "affiliation": "University of Science and Technology of China"}, {"name": "Hongjin Liang", "affiliation": "University of Science and Technology of China"}, {"name": "Xinyu Feng", "affiliation": "University of Science and Technology of China"}, {"name": "Ming Fu", "affiliation": "University of Science and Technology of China"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "The existence of refinement mappings", "authors": ["Mart\u00edn Abadi "]}, {"title": " ", "authors": []}, {"title": "A model of cooperative threads", "authors": ["Mart\u00edn Abadi "]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A parallel, incremental, mostly concurrent garbage collector for servers", "authors": ["Katherine Barabash", " Ori Ben-Yitzhak", " Irit Goft", " Victor Leikehman", " Yoav Ossia", " Avi Owshanko"]}, {"title": " ", "authors": []}, {"title": "Simple relational correctness proofs for static analyses and program transformations", "authors": ["Nick Benton"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Biorthogonality, step-indexing and compiler correctness", "authors": ["Nick Benton "]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Threads cannot be implemented as a library", "authors": ["Hans-Juergen Boehm"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Foundations of the C++ concurrency memory model", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Mostly parallel garbage collection", "authors": ["Hans-Juergen Boehm"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Full abstraction for a shared-variable parallel language", "authors": []}, {"title": "", "authors": []}, {"title": "Verifying local transformations on relaxed memory models", "authors": ["Sebastian Burckhardt", " Madanlal Musuvathi"]}, {"title": " ", "authors": [" Springer"]}, {"title": "The Coq proof assistant reference manual", "authors": ["Coq Development Team"]}, {"title": "Transactional locking ii", "authors": ["David Dice", " Ori Shalev"]}, {"title": " ", "authors": []}, {"title": "Simplifying linearizability proofs with reduction and abstraction", "authors": ["Tayfun Elmas", " Shaz Qadeer", " Ali Sezgin", " Omer Subasi"]}, {"title": " ", "authors": [" Springer"]}, {"title": "Local rely-guarantee reasoning", "authors": ["Xinyu Feng"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Abstraction for concurrent objects", "authors": ["Ivana Filipovi\u0107", " Peter O\u2019Hearn", " Noam Rinetzky"]}, {"title": " ", "authors": []}, {"title": "Compiler correctness for concurrent languages", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "", "authors": ["Maurice Herlihy "]}, {"title": "Morgan Kaufmann, San Fransisco", "authors": [" San Fransisco"]}, {"title": "Proof of correctness of data representations", "authors": []}, {"title": " ", "authors": []}, {"title": "A Kripke logical relation between ML and assembly", "authors": ["Chung-Kil Hur "]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": " ", "authors": []}, {"title": "Fine-grained concurrency with separation logic", "authors": ["Kalpesh Kapoor", " Kamal Lodaya"]}, {"title": "", "authors": []}, {"title": "A formally verified compiler back-end", "authors": ["Xavier Leroy"]}, {"title": " ", "authors": []}, {"title": "A rely-guarantee-based simulation for verifying concurrent program transformations", "authors": ["Hongjin Liang", " Xinyu Feng"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Verifying a compiler for java threads", "authors": ["Andreas Lochbihler"]}, {"title": " ", "authors": [" Springer"]}, {"title": "A general framework for certifying garbage collectors and their mutators", "authors": ["Andrew McCreight", " Zhong Shao", " Chunxiao Lin"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Variables as resource in hoare logics", "authors": ["Matthew Parkinson", " Richard Bornat"]}, {"title": " ", "authors": [" IEEE Computer Society"]}, {"title": "Formal derivation of concurrent garbage collectors", "authors": ["Dusko Pavlovic", " Peter Pepper"]}, {"title": "", "authors": []}, {"title": "Separation logic: A logic for shared mutable data structures", "authors": []}, {"title": "", "authors": [" IEEE Computer Society"]}, {"title": "Relaxed-memory concurrency and verified compilation", "authors": ["Jaroslav \u0160ev\u010d\u00edk", " Viktor Vafeiadis", " Francesco Zappa Nardelli", " Suresh Jagannathan"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "System programming: Coping with parallelism", "authors": []}, {"title": "A separation logic for refining concurrent objects", "authors": ["Aaron Turon "]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Modular fine-grained concurrency verification", "authors": ["Viktor Vafeiadis"]}, {"title": "A marriage of rely/guarantee and separation logic", "authors": []}, {"title": "", "authors": [" Springer"]}, {"title": "Correctness-preserving derivation of concurrent garbage collection algorithms", "authors": [" Eran Yahav"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Compiler correctness for parallel languages", "authors": ["Mitchell W"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Relational separation logic", "authors": ["Hongseok Yang"]}, {"title": " ", "authors": []}]},
{"title": "Formal Verification of an SSA-Based Middle-End for CompCert", "time": "March 2014", "keyword": ["Programming Languages and Systems"], "abstract": "CompCert is a formally verified compiler that generates compact and efficient code for a large subset of the C language. However, CompCert foregoes using SSA, an intermediate representation employed by many compilers that enables writing simpler, faster optimizers. In fact, it has remained an open problem to verify formally an SSA-based compiler. We report on a formally verified, SSA-based middle-end for CompCert. In addition to providing a formally verified SSA-based middle-end, we address two problems raised by Leroy in [2009]: giving an intuitive formal semantics to SSA, and leveraging its global properties to reason locally about program optimizations.\n", "author": [{"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "Delphine Demange", "affiliation": "IRISA -- University of Rennes 1/Inria"}, {"name": "David Pichardie", "affiliation": "IRISA -- ENS Rennes/Inria"}, {"name": "Gilles Barthe", "affiliation": "IMDEA Software Institute"}, {"name": "Delphine Demange", "affiliation": "IRISA -- University of Rennes 1/Inria"}, {"name": "David Pichardie", "affiliation": "IRISA -- ENS Rennes/Inria"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "16", "references": [{"title": "Detecting equality of variables in programs", "authors": ["Alpern", " Wegman"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "", "authors": ["Appel"]}, {"title": "Cambridge University Press, New York", "authors": [" New York"]}, {"title": "SSA is functional programming", "authors": ["Appel"]}, {"title": " ", "authors": []}, {"title": "Simple generation of static single-assignment form", "authors": ["Aycock"]}, {"title": "held as part of the ", "authors": [" held as part of th"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A formally verified SSA-based middle-end-static single assignment meets compcert", "authors": ["Barthe", " Demange"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Optimizing code generation from SSA form: A comparison between two formal correctness proofs in isabelle/hol", "authors": ["Blech", " Glesner", " Leitner"]}, {"title": " ", "authors": []}, {"title": "Fast liveness checking for ssa form programs", "authors": ["Boissinot", " Hack", " Grund", " Dupont De Dinechin"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Revisiting out-of-ssa translation for correctness, code quality and efficiency", "authors": ["Boissinot", " Darte", " Rastello", " Dupont De Dinechin"]}, {"title": " ", "authors": [" IEEE Computer Society"]}, {"title": "Single-pass generation of static single-assignment form for structured languages", "authors": ["Br"]}, {"title": " ", "authors": []}, {"title": "Value numbering", "authors": ["Briggs", " Cooper"]}, {"title": " ", "authors": []}, {"title": "Practical improvements to the construction and destruction of static single assignment form", "authors": ["Briggs", " Cooper", " Harvey"]}, {"title": " ", "authors": []}, {"title": "Advances in static single assignment form and register allocation", "authors": ["Brisk"]}, {"title": "Parametric higher-order abstract syntax for mechanized semantics", "authors": ["Chlipala"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A verified compiler for an impure functional language", "authors": ["Chlipala"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A new algorithm for partial redundancy elimination based on ssa form", "authors": ["Chow", " Chan", " Kennedy", " Liu", " Lo"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Companion web page", "authors": ["CompCertSSA"]}, {"title": "A simple, fast dominance algorithm", "authors": ["Cooper", " Harvey"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Cytron", " Ferrante", " Rosen", " Wegman"]}, {"title": " ", "authors": []}, {"title": "Mechanized verification of CPS transformations", "authors": ["Dargaye"]}, {"title": "", "authors": []}, {"title": "Register allocation for programs in SSA form", "authors": ["Hack", " Grund"]}, {"title": " ", "authors": []}, {"title": "Lazy code motion", "authors": ["Knoop", " R\u00fcthing"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Basic-block graphs: Living dinosaurs? In ", "authors": ["Knoop", " Kosch\u00fctzkil"]}, {"title": "held as part of the ", "authors": [" held as part of th"]}, {"title": "", "authors": []}, {"title": "A fast algorithm for finding dominators in a flowgraph", "authors": ["Lengauer"]}, {"title": " ", "authors": []}, {"title": "A formally verified compiler back-end", "authors": ["Leroy"]}, {"title": " ", "authors": []}, {"title": "A framework for formal verification of compiler optimizations", "authors": ["Mansky"]}, {"title": " ", "authors": []}, {"title": "A type system equivalent to static single assignment", "authors": ["Matsuno"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A verifiable ssa program representation for aggressive compiler optimization", "authors": ["Menon", " Glew", " Murphy", " Mccreight", " Shpeisman", " Adl-Tabatabai"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Translation validation for an optimizing compiler", "authors": ["Necula"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Translation validation", "authors": ["Pnueli", " Siegel"]}, {"title": "", "authors": []}, {"title": "Tilting at windmills with Coq: Formal verification of a compilation algorithm for parallel moves", "authors": ["Rideau", " Serpette"]}, {"title": " ", "authors": []}, {"title": "Automatically proving the correctness of translations involving optimized code", "authors": ["Samet"]}, {"title": "Semantics of an intermediate language for program transformation", "authors": ["Schneider"]}, {"title": "Translating out of static single assignment form", "authors": ["Sreedhar", " Ju", " Gillies"]}, {"title": "", "authors": []}, {"title": "Equality-based translation validator for LLVM", "authors": ["Stepp", " Tate"]}, {"title": "", "authors": []}, {"title": "Equality saturation: A new approach to optimization", "authors": ["Tate", " Stepp", " Tatlock"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Verified validation of lazy code motion", "authors": ["Tristan"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A simple, verified validator for software pipelining", "authors": ["Tristan"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Evaluating value-graph translation validation for llvm", "authors": ["Tristan", " Govereau"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Formalizing an SSA-based compiler for verified advanced program transformations", "authors": ["Zhao"]}, {"title": "Mechanized verification of computing dominators for formalizing compilers", "authors": ["Zhao"]}, {"title": " ", "authors": []}, {"title": "Formalizing the LLVM intermediate representation for verified program transformation", "authors": ["Zhao", " Zdancewic", " Nagarakatte"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Formal verification of SSA-based optimizations for LLVM", "authors": ["Zhao", " Nagarakatte", " Martin"]}, {"title": " ", "authors": [" ACM Press", " New York"]}]},
{"title": "Specialization Slicing", "time": "June 2014", "keyword": ["Programming Languages and Systems"], "abstract": "This paper defines a new variant of program slicing, called \n, and presents an algorithm for the specialization-slicing problem that creates an optimal output slice. An algorithm for specialization slicing is \n: for a given procedure \u0440, the algorithm may create multiple specialized copies of \u0440. In creating specialized procedures, the algorithm must decide for which patterns of formal parameters a given procedure should be specialized and which program elements should be included in each specialized procedure.\nWe formalize the specialization-slicing problem as a partitioning problem on the elements of the possibly \n unrolled program. To manipulate possibly infinite sets of program elements, the algorithm makes use of automata-theoretic techniques originally developed in the model-checking community. The algorithm returns a \n that is optimal (with respect to a criterion defined in the article). In particular, (i) each element replicated by the specialization-slicing algorithm provides information about specialized patterns of program behavior that are intrinsic to the program, and (ii) the answer is of minimal size (i.e., among all possible answers with property (i), there is no smaller one).\nThe specialization-slicing algorithm provides a new way to create executable slices. Moreover, by combining specialization slicing with forward slicing, we obtain a method for removing unwanted features from a program. While it was previously known how to solve the feature-removal problem for single-procedure programs, it was not known how to solve it for programs with procedure calls.\n", "author": [{"name": "Min Aung", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Susan Horwitz", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Rich Joiner", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin, Madison, WI and Gramma Tech, Inc., Ithaca, NY"}, {"name": "Min Aung", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Susan Horwitz", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Rich Joiner", "affiliation": "University of Wisconsin, Madison, WI"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin, Madison, WI and Gramma Tech, Inc., Ithaca, NY"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "Binding-time analysis and the taming of C pointers", "authors": []}, {"title": "Design and implementation of a fine-grained software inspection tool", "authors": []}, {"title": "ISO/IEC 9899:TC2", "authors": ["ANSI C"]}, {"title": "Incremental program testing using program dependence graphs", "authors": []}, {"title": "Using semantic differencing to reduce the cost of regression testing", "authors": []}, {"title": "Precise executable interprocedural slices", "authors": []}, {"title": "Semantics guided regression test cost reduction", "authors": []}, {"title": "Personal Communication", "authors": []}, {"title": "Formalizing executable dynamic and forward slicing", "authors": []}, {"title": "A formal relationship between program slicing and partial evaluation", "authors": []}, {"title": "Program slicing", "authors": []}, {"title": "String-Rewriting Systems", "authors": []}, {"title": "An efficient automata approach to some problems on context-free grammars", "authors": []}, {"title": "Reachability analysis of pushdown automata: Application to model checking", "authors": []}, {"title": "Regular canonical systems and finite automata", "authors": []}, {"title": "Finite Automata, their Algebras and Grammars", "authors": []}, {"title": "Extracting polyvariant binding time analysis from polyvariant specializer", "authors": []}, {"title": "Software salvaging based on conditions", "authors": []}, {"title": "On the regular structure of prefix rewriting", "authors": []}, {"title": "Subcubic algorithms for recursive state machines", "authors": []}, {"title": "Retrieved May 10, 2014 from www", "authors": []}, {"title": "Interprocedural side-effect analysis in linear time", "authors": []}, {"title": "ConSUS: A light-weight program conditioner", "authors": []}, {"title": "Understanding function behaviors through program slicing", "authors": []}, {"title": "Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact", "authors": []}, {"title": "Efficient algorithms for model checking pushdown systems", "authors": []}, {"title": "Parametric program slicing", "authors": []}, {"title": "A direct symbolic approach to model checking pushdown systems", "authors": []}, {"title": "An efficient interprocedural slicing method for large programs", "authors": []}, {"title": "ConSIT: A fully automated conditioned program slicer", "authors": []}, {"title": "Using program slicing in software maintenance", "authors": []}, {"title": "Non-standard semantics for program slicing", "authors": []}, {"title": "DART: Directed automated random testing", "authors": []}, {"title": "Construction of abstract state graphs with PVS", "authors": []}, {"title": "Inductive Boolean Function Manipulation: A Hardware Verification Methodology for Automatic Induction", "authors": []}, {"title": "Amorphous program slicing", "authors": []}, {"title": "Amorphous program slicing", "authors": []}, {"title": "Abstract slicing: A new approach to program slicing based on abstract interpretation and model checking", "authors": []}, {"title": "An ", "authors": []}, {"title": "og ", "authors": [" lo"]}, {"title": "", "authors": [" Haifa", " Israel", " Academic Press", " New York", " Augus"]}, {"title": "Identifying the semantic and textual differences between two versions of a program", "authors": []}, {"title": "Better debugging via output tracing and callstack-sensitive slicing", "authors": []}, {"title": "Integrating non-interfering versions of programs", "authors": []}, {"title": "Efficient comparison of program slices", "authors": []}, {"title": "The use of program dependence graphs in software engineering", "authors": []}, {"title": "Interprocedural slicing using dependence graphs", "authors": []}, {"title": "Experiments of the effectiveness of dataflow- and controlflow-based test adequacy criteria", "authors": []}, {"title": "A new model of program dependences for reverse engineering", "authors": []}, {"title": "Path-sensitive backward slicing", "authors": []}, {"title": "Partial Evaluation and Automatic Program Generation", "authors": []}, {"title": "WALi: The Weighted Automaton Library", "authors": []}, {"title": "Context-sensitivity matters, but context does not", "authors": []}, {"title": "Dependence graphs and compiler optimizations", "authors": []}, {"title": "Restructuring programs by tucking statements into functions", "authors": []}, {"title": "Experiments on slicing-based debugging tools", "authors": []}, {"title": "Automatic program bug location by program slicing", "authors": []}, {"title": "Program slicing", "authors": []}, {"title": "OpenFst Library", "authors": ["OpenFST"]}, {"title": "The program dependence graph in a software development environment", "authors": []}, {"title": "A denotational interprocedural program slicer", "authors": []}, {"title": "Program analysis via graph reachability", "authors": []}, {"title": "Speeding up slicing", "authors": []}, {"title": "Precise interprocedural chopping", "authors": []}, {"title": "Program specialization via program slicing", "authors": []}, {"title": "Model-Checking Pushdown Systems", "authors": []}, {"title": "Reversal of regular languages and state complexity", "authors": []}, {"title": "Retrieved May 10, 2014 from sir", "authors": []}, {"title": "Efficient path conditions in dependence graphs for software safety analysis", "authors": []}, {"title": "Enforcing reactive noninterference with reachability analysis", "authors": []}, {"title": "Enforcing reactive noninterference with reachability analysis", "authors": []}, {"title": "A survey of program slicing techniques", "authors": []}, {"title": "Program slicing", "authors": []}, {"title": "Output-sensitive algorithm", "authors": ["Wikipedia: Output-Sensitive Algorith"]}, {"title": "Graph-theoretic methods in database theory", "authors": []}]},
{"title": "Atomicity Refinement for Verified Compilation", "time": "July 2014", "keyword": ["Programming Languages and Systems"], "abstract": "We consider the verified compilation of high-level managed languages like Java or C# whose intermediate representations provide support for shared-memory synchronization and automatic memory management. Our development is framed in the context of the Total Store Order relaxed memory model. Ensuring complier correctness is challenging because high-level actions are translated into sequences of nonatomic actions with compiler-injected snippets of racy code; the behavior of this code depends not only on the actions of other threads but also on out-of-order executions performed by the processor. A na\u00efve proof of correctness would require reasoning over all possible thread interleavings. In this article, we propose a refinement-based proof methodology that precisely relates concurrent code expressed at different abstraction levels, cognizant throughout of the relaxed memory semantics of the underlying processor. Our technique allows the compiler writer to reason compositionally about the atomicity of low-level concurrent code used to implement managed services. We illustrate our approach with examples taken from the verification of a concurrent garbage collector.\n", "author": [{"name": "Suresh Jagannathan", "affiliation": "Purdue University, IN. USA"}, {"name": "Vincent Laporte", "affiliation": "Universit\u00e9 Rennes 1 /IRISA, Rennes Cedex, France"}, {"name": "Gustavo Petri", "affiliation": "Purdue University, IN. USA"}, {"name": "David Pichardie", "affiliation": "ENS Rennes /IRISA /INRIA, Rennes Cedex, France"}, {"name": "Jan Vitek", "affiliation": "Purdue University, IN. USA"}, {"name": "Suresh Jagannathan", "affiliation": "Purdue University, IN. USA"}, {"name": "Vincent Laporte", "affiliation": "Universit\u00e9 Rennes 1 /IRISA, Rennes Cedex, France"}, {"name": "Gustavo Petri", "affiliation": "Purdue University, IN. USA"}, {"name": "David Pichardie", "affiliation": "ENS Rennes /IRISA /INRIA, Rennes Cedex, France"}, {"name": "Jan Vitek", "affiliation": "Purdue University, IN. USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "Weak Ordering - A New Definition", "authors": []}, {"title": "Software verification for weak memory via program transformation", "authors": ["Jade Alglave", " Daniel Kroening", " Vincent Nimal"]}, {"title": "Mathematizing C&plus;&plus; concurrency", "authors": ["Mark Batty", " Scott Owens", " Susmit Sarkar", " Peter Sewell"]}, {"title": "Checking and enforcing robustness against TSO", "authors": ["Ahmed Bouajjani", " Egor Derevenetc"]}, {"title": "Full Abstraction for a Shared Variable Parallel Language", "authors": []}, {"title": "Concurrent library correctness on the TSO memory model", "authors": ["Sebastian Burckhardt", " Alexey Gotsman", " Madanlal Musuvathi"]}, {"title": "Deny-guarantee reasoning", "authors": ["Mike Dodds", " Xinyu Feng"]}, {"title": "Portable, unobtrusive garbage collection for multiprocessor systems", "authors": ["Damien Doligez "]}, {"title": "A concurrent, generational garbage collector for a multithreaded implementation of ML", "authors": ["Damien Doligez "]}, {"title": "Implementing an on-the-fly garbage collector for Java", "authors": ["Tamar Domani", " Ethan Lewis", " Katherine Barabash", " Itai Lahan", " Yossi Levanoni", " Erez Petrank"]}, {"title": "Simplifying linearizability proofs with reduction and abstraction", "authors": ["Tayfun Elmas", " Shaz Qadeer", " Ali Sezgin", " Omer Subasi"]}, {"title": "A calculus of atomic actions", "authors": ["Tayfun Elmas", " Shaz Qadeer"]}, {"title": "Local rely-guarantee reasoning", "authors": ["Xinyu Feng"]}, {"title": "Linearizability: A correctness condition for concurrent objects", "authors": []}, {"title": "An axiomatic basis for computer programming", "authors": []}, {"title": "Oracle semantics for concurrent separation logic", "authors": ["Aquinas Hobor"]}, {"title": "Tentative steps toward a development method for interfering programs", "authors": []}, {"title": "A formally verified compiler back-end", "authors": ["Xavier Leroy"]}, {"title": "The CompCert Memory Model, Version 2", "authors": ["Xavier Leroy", " S"]}, {"title": "A rely-guarantee-based simulation for verifying concurrent program transformations", "authors": ["Hongjin Liang", " Xinyu Feng"]}, {"title": "A Rely-Guarantee-Based Simulation for Verifying Concurrent Program Transformations", "authors": ["Hongjin Liang", " Xinyu Feng"]}, {"title": "Verifying a compiler for Java threads", "authors": ["Andreas Lochbihler"]}, {"title": "A certified framework for compiling and executing garbage-collected languages", "authors": ["Andrew McCreight", " Tim Chevalier"]}, {"title": "A rely-guarantee proof system for x86-TSO", "authors": ["Tom Ridge"]}, {"title": "Understanding POWER multiprocessors", "authors": ["Susmit Sarkar", " Peter Sewell", " Jade Alglave", " Luc Maranget"]}, {"title": "Relaxed-memory concurrency and verified compilation", "authors": ["Jaroslav \u0160ev\u010d\u00edk", " Viktor Vafeiadis", " Francesco Zappa Nardelli", " Suresh Jagannathan"]}, {"title": "CompCertTSO: A verified compiler for relaxed-memory concurrency", "authors": ["Jaroslav \u0160ev\u010d\u00edk", " Viktor Vafeiadis", " Francesco Zappa Nardelli", " Suresh Jagannathan"]}, {"title": "The SPARC Architecture Manual (version 9)", "authors": []}, {"title": "Systems Programming: Coping with Parallelism - RJ 5118", "authors": []}, {"title": "A separation logic for refining concurrent objects", "authors": ["Aaron Joseph Turon "]}, {"title": "A marriage of rely/guarantee and separation logic", "authors": []}]},
{"title": "Herding Cats: Modelling, Simulation, Testing, and Data Mining for Weak Memory", "time": "July 2014", "keyword": ["Programming Languages and Systems"], "abstract": "We propose an axiomatic generic framework for modelling weak memory. We show how to instantiate this framework for Sequential Consistency (SC), Total Store Order (TSO), C++ restricted to release-acquire atomics, and Power. For Power, we compare our model to a preceding operational model in which we found a flaw. To do so, we define an operational model that we show equivalent to our axiomatic model.\nWe also propose a model for ARM. Our testing on this architecture revealed a behaviour later acknowledged as a bug by ARM, and more recently, 31 additional anomalies.\nWe offer a new simulation tool, called herd, which allows the user to specify the model of his choice in a concise way. Given a specification of a model, the tool becomes a simulator for that model. The tool relies on an axiomatic description; this choice allows us to outperform all previous simulation tools. Additionally, we confirm that verification time is vastly improved, in the case of bounded model checking.\nFinally, we put our models in perspective, in the light of empirical data obtained by analysing the C and C++ code of a Debian Linux distribution. We present our new analysis tool, called mole, which explores a piece of code to find the weak memory idioms that it uses.\n", "author": [{"name": "Jade Alglave", "affiliation": "University College London, Gower Street, London, United Kingdom"}, {"name": "Luc Maranget", "affiliation": "INRIA, France"}, {"name": "Michael Tautschnig", "affiliation": "Queen Mary University of London, London, United Kingdom"}, {"name": "Jade Alglave", "affiliation": "University College London, Gower Street, London, United Kingdom"}, {"name": "Luc Maranget", "affiliation": "INRIA, France"}, {"name": "Michael Tautschnig", "affiliation": "Queen Mary University of London, London, United Kingdom"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "158", "references": [{"title": "Counter-example guided fence insertion under TSO", "authors": ["Parosh Aziz Abdulla", " Mohamed Faouzi Atig", " Yu-Fang Chen", " Carl Leonardsson"]}, {"title": "Memorax, a precise and sound tool for automatic fence insertion under TSO", "authors": ["Parosh Aziz Abdulla", " Mohamed Faouzi Atig", " Yu-Fang Chen", " Carl Leonardsson"]}, {"title": "Information-flow models for shared memory with an application to the PowerPC architecture", "authors": ["Allon Adir", " Hagit Attiya"]}, {"title": "Memory models: A case for rethinking parallel languages and hardware", "authors": []}, {"title": "Shared memory consistency models: A tutorial", "authors": []}, {"title": "A Shared Memory Poetics", "authors": ["Jade Alglave"]}, {"title": "A formal hierarchy of weak memory models", "authors": ["Jade Alglave"]}, {"title": "The semantics of power and ARM multiprocessor machine code", "authors": ["Jade Alglave", " Samin Ishtiaq", " Susmit Sarkar", " Peter Sewell"]}, {"title": "Soundness of data flow analyses for weak memory models", "authors": ["Jade Alglave", " Daniel Kroening", " John Lugton", " Vincent Nimal"]}, {"title": "Software verification for weak memory via program transformation", "authors": ["Jade Alglave", " Daniel Kroening", " Vincent Nimal"]}, {"title": "Partial orders for efficient bounded model checking of concurrent software", "authors": ["Jade Alglave", " Daniel Kroening"]}, {"title": "Stability in weak memory models", "authors": ["Jade Alglave "]}, {"title": "Fences in weak memory models", "authors": ["Jade Alglave", " Luc Maranget", " Susmit Sarkar"]}, {"title": "Litmus: Running tests against hardware", "authors": ["Jade Alglave", " Luc Maranget", " Susmit Sarkar"]}, {"title": "Fences in weak memory models (extended version)", "authors": ["Jade Alglave", " Luc Maranget", " Susmit Sarkar"]}, {"title": "ARM Architecture Reference Manual: ARMv7-A and ARMv7-R Edition", "authors": ["ARM Ltd"]}, {"title": "Cortex-A9 MPCore, Programmer Advice Notice, Read-after-Read Hazards", "authors": ["ARM Ltd"]}, {"title": "Memory Model = Instruction Reordering &plus; Store Atomicity", "authors": ["Arvind "]}, {"title": "On the verification problem for weak memory models", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani", " Sebastian Burckhardt"]}, {"title": "What\u2019s decidable about weak memory models&quest; In Proceedings of ESOP", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani", " Sebastian Burckhardt"]}, {"title": "Getting rid of store-buffers in TSO analysis", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani"]}, {"title": "Library abstraction for C/C&plus;&plus; concurrency", "authors": ["Mark Batty", " Mike Dodds"]}, {"title": "Mathematizing C&plus;&plus; concurrency", "authors": ["Mark Batty", " Scott Owens", " Susmit Sarkar", " Peter Sewell"]}, {"title": "Interactive Theorem Proving and Program Development: Coq\u2019Art: The Calculus of Inductive Constructions", "authors": ["Yves Bertot "]}, {"title": "Foundations of the C&plus;&plus; concurrency memory model", "authors": []}, {"title": "You don\u2019t know jack about shared variables or memory models", "authors": []}, {"title": "Checking and enforcing robustness against TSO", "authors": ["Ahmed Bouajjani", " Egor Derevenetc"]}, {"title": "Deciding robustness against total store ordering", "authors": ["Ahmed Bouajjani", " Rol"]}, {"title": "Relaxed memory models: An operational approach", "authors": ["G\u00e9rard Boudol "]}, {"title": "Relaxed operational semantics of concurrent programming languages", "authors": ["G\u00e9rard Boudol", " Gustavo Petri"]}, {"title": "CheckFence: Checking consistency of concurrent data types on relaxed memory models", "authors": ["Sebastian Burckhardt", " Rajeev Alur"]}, {"title": "Understanding eventual consistency", "authors": ["Sebastian Burckhardt", " Alexey Gotsman"]}, {"title": "Replicated data types: Specification, verification, optimality", "authors": ["Sebastian Burckhardt", " Alexey Gotsman", " Hongseok Yang"]}, {"title": "Memory Model Safety of Programs", "authors": ["Sebastian Burckhardt "]}, {"title": "", "authors": []}, {"title": "The Java memory model: Operationally, denotationally, axiomatically", "authors": ["Pietro Cenciarelli", " Alex"]}, {"title": "Reasoning about the ARM weakly consistent memory model", "authors": ["Nathan Chong "]}, {"title": "A tool for checking ANSI-C programs", "authors": [" Daniel Kroening"]}, {"title": "Reasoning About Parallel Architectures", "authors": ["William Collier"]}, {"title": "Alpha Architecture Reference Manual", "authors": ["Compaq Computer Corp"]}, {"title": "Memory consistency and event ordering in scalable shared-memory multiprocessors", "authors": ["Kourosh Gharachorloo", " Daniel Lenoski", " James Laudon", " Anoop Gupta"]}, {"title": "Cache consistency and sequential consistency", "authors": ["Jacob Goodman"]}, {"title": "QB or not QB: An efficient execution verification tool for memory orderings", "authors": ["Ganesh Gopalakrishnan", " Yue Yang"]}, {"title": "Relating event and trace semantics of hardware description languages", "authors": []}, {"title": "ARM Barrier Litmus Tests and Cookbook", "authors": ["Richard Grisenthwaite"]}, {"title": "TSOtool: A program for verifying memory systems using the memory consistency model", "authors": ["Sudheendra Hangal", " Durgam Vahia", " Chaiyasit Manovit", " Juin-Yeu Joseph Lu"]}, {"title": "Consistent and complementary formal theories of the semantics of programming languages", "authors": []}, {"title": "Linux Kernel Memory Barriers, 2013 version", "authors": []}, {"title": "Power ISA Version 2", "authors": ["IBM Corp"]}, {"title": "A Formal Specification of Intel Itanium Processor Family Memory Ordering", "authors": ["Intel Corp"]}, {"title": "Intel 64 and IA-32 Architectures Software Developer\u2019s Manual", "authors": ["Intel Corp"]}, {"title": "ISO/IEC 9899:2011 Information technology \u2014 Programming languages \u2014 C", "authors": ["ISO"]}, {"title": "Alloy: A lightweight object modelling notation", "authors": ["Daniel Jackson"]}, {"title": "Fast and accurate static data-race detection for concurrent programs", "authors": ["Vineet Kahlon", " Yu Yang", " Sriram Sankaranarayanan"]}, {"title": "Automatic inference of memory fences", "authors": ["Michael Kuperstein"]}, {"title": "Partial-coherence abstractions for relaxed memory models", "authors": ["Michael Kuperstein"]}, {"title": "How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": ["Leslie Lamport"]}, {"title": "PRAM: A scalable shared memory", "authors": []}, {"title": "Dynamic synthesis for relaxed memory models", "authors": ["Feng Liu", " Nayden Nedev", " Nedyalko Prisadnikov"]}, {"title": "Generating litmus tests for contrasting memory consistency models", "authors": ["Sela Mador-Haim", " Rajeev Alur"]}, {"title": "An axiomatic memory model for POWER multiprocessors", "authors": ["Sela Mador-Haim", " Luc Maranget", " Susmit Sarkar", " Kayvan Memarian", " Jade Alglave", " Scott Owens", " Rajeev Alur", " Peter Sewell"]}, {"title": "The Java memory model", "authors": ["Jeremy Manson", " William Pugh"]}, {"title": "What is RCU, fundamentally&quest; Retrieved May 29, 2014, from http://lwn", "authors": []}, {"title": "A taxonomy of multiprocessor memory-ordering models", "authors": ["Gil Neiger"]}, {"title": "Lem: A lightweight tool for heavyweight semantics", "authors": ["Scott Owens", " Peter B\u00f6hm", " Francesco Zappa Nardelli"]}, {"title": "A better x86 memory model: x86-TSO", "authors": ["Scott Owens", " Susmit Sarkar"]}, {"title": "Synchronising C/C&plus;&plus; and POWER", "authors": ["Susmit Sarkar", " Kayvan Memarian", " Scott Owens", " Mark Batty", " Peter Sewell", " Luc Maranget", " Jade Alglave"]}, {"title": "Understanding power multiprocessors", "authors": ["Susmit Sarkar", " Peter Sewell", " Jade Alglave", " Luc Maranget"]}, {"title": "The semantics of x86-CC multiprocessor machine code", "authors": ["Susmit Sarkar", " Peter Sewell", " Francesco Zappa Nardelli", " Scott Owens", " Tom Ridge", " Thomas Braibant"]}, {"title": "Efficient and correct execution of parallel programs that share memory", "authors": ["Dennis Shasha "]}, {"title": "The SPARC Architecture Manual Version 8", "authors": ["SPARC International Inc"]}, {"title": "The SPARC Architecture Manual Version 9", "authors": ["SPARC International Inc"]}, {"title": "A unified theory of shared memory consistency", "authors": []}, {"title": "Enumeration of the elementary circuits of a directed graph", "authors": ["Robert Tarjan"]}, {"title": "POWER4 system microarchitecture", "authors": [" Hung Le"]}, {"title": "MemSAT: Checking axiomatic specifications of memory models", "authors": ["Emina Torlak", " M"]}, {"title": "Nemos: A framework for axiomatic and executable specifications of memory consistency models", "authors": ["Yue Yang", " Ganesh Gopalakrishnan", " Gary Lindstrom"]}, {"title": "Relaxed memory models must be rigorous", "authors": ["Francesco Zappa Nardelli", " Peter Sewell", " Jaroslav Sevcik", " Susmit Sarkar", " Scott Owens", " Luc Maranget", " Mark Batty"]}, {"title": "", "authors": []}]},
{"title": "Lazy Scheduling: A Runtime Adaptive Scheduler for Declarative Parallelism", "time": "September 2014", "keyword": ["Programming Languages and Systems"], "abstract": " is a runtime scheduler for task-parallel codes that effectively coarsens parallelism on load conditions in order to significantly reduce its overheads compared to existing approaches, thus enabling the efficient execution of more fine-grained tasks. Unlike other adaptive dynamic schedulers, lazy scheduling does not maintain any additional state to infer system load and does not make irrevocable serialization decisions. These two features allow it to scale well and to provide excellent load balancing in practice but at a much lower overhead cost compared to work stealing, the golden standard of dynamic schedulers. We evaluate three variants of lazy scheduling on a set of benchmarks on three different platforms and find it to substantially outperform popular work stealing implementations on fine-grained codes. Furthermore, we show that the vast performance gap between manually coarsened and fully parallel code is greatly reduced by lazy scheduling, and that, with minimal static coarsening, lazy scheduling delivers performance very close to that of fully tuned code.\nThe tedious manual coarsening required by the best existing work stealing schedulers and its damaging effect on performance portability have kept novice and general-purpose programmers from parallelizing their codes. Lazy scheduling offers the foundation for a declarative parallel programming methodology that should attract those programmers by minimizing the need for manual coarsening and by greatly enhancing the performance portability of parallel code.\n", "author": [{"name": "Alexandros Tzannes", "affiliation": "University of Illinois, Urbana-Champaign, Urbana, IL"}, {"name": "George C. Caragea", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Uzi Vishkin", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Rajeev Barua", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Alexandros Tzannes", "affiliation": "University of Illinois, Urbana-Champaign, Urbana, IL"}, {"name": "George C. Caragea", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Uzi Vishkin", "affiliation": "University of Maryland, College Park, MD"}, {"name": "Rajeev Barua", "affiliation": "University of Maryland, College Park, MD"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "19", "references": [{"title": "Intel Threading Building Blocks Reference Manual, Rev", "authors": []}, {"title": "The data locality of work stealing", "authors": []}, {"title": "Oracle scheduling: Controlling granularity in implicitly parallel languages", "authors": [" Arthur Chargu\u00e9raud"]}, {"title": "Scheduling parallel programs by work stealing with private deques", "authors": [" Arthur Chargu\u00e9raud"]}, {"title": "Highly Parallel Computing (2nd ed", "authors": []}, {"title": "Thread scheduling for multiprogrammed multiprocessors", "authors": []}, {"title": "The Landscape of Parallel Computing Research: A View from Berkeley", "authors": ["Krste Asanovic", " Ras Bodik", " Bryan Christopher Catanzaro", " Joseph James Gebis", " Parry Husb", " Kurt Keutzer", " William Lester Plishker", " John Shalf", " Samuel Webb Williams"]}, {"title": "Exploiting multiple levels of parallelism in OpenMP: A case study", "authors": ["Eduard Ayguade", " Xavier Martorell", " Jesus Labarta", " Marc Gonzalez"]}, {"title": "Lazy tree splitting", "authors": ["Lars Bergstrom", " Mike Rainey", " John Reppy", " Adam Shaw"]}, {"title": "Compiling collection-oriented languages onto massively parallel computers", "authors": []}, {"title": "Implementation of a portable nested data-parallel language", "authors": [" Siddhartha Chatterjee", " Jay Sipelstein"]}, {"title": "Scheduling multithreaded computations by work stealing", "authors": []}, {"title": "A class of OpenMP applications involving nested parallelism", "authors": [" Arno Rasch"]}, {"title": "Executing functional programs on a virtual tree of processors", "authors": []}, {"title": "A practical approach for reconciling high and predictable performance in non-regular parallel programs", "authors": ["Olivier Certner", " Zheng Li", " Pierre Palatin", " Olivier Temam", " Frederic Arzel"]}, {"title": "Dynamic circular work-stealing deque", "authors": ["David Chase "]}, {"title": "Homepage", "authors": ["CilkPlus"]}, {"title": "Introduction to Algorithms (3rd ed", "authors": []}, {"title": "The University of Florida sparse matrix collection", "authors": []}, {"title": "An adaptive cut-off for task parallelism", "authors": ["Alej", " Julita Corbal\u00e1n"]}, {"title": "Automatic thread distribution for nested parallelism in OpenMP", "authors": ["Alej", " Marc Gonz\u00e0lez"]}, {"title": "The implementation of the Cilk-5 multithreaded language", "authors": ["Matteo Frigo"]}, {"title": "Lazy threads: Implementing a fast parallel call", "authors": ["Seth Copen Goldstein", " Klaus Erik Schauser"]}, {"title": "SLAW: A scalable locality-aware adaptive work-stealing scheduler", "authors": ["Yi Guo", " Jisheng Zhao"]}, {"title": "Implementation of multilisp: Lisp on a multiprocessor", "authors": [" Jr"]}, {"title": "A dynamic-sized nonblocking work stealing deque", "authors": ["Danny Hendler", " Yossi Lev", " Mark Moir"]}, {"title": "Non-blocking steal-half work queues", "authors": ["Danny Hendler "]}, {"title": "Mul-T: A high-performance parallel Lisp", "authors": []}, {"title": "Carbon: Architectural support for ed parallelism on chip multiprocessors", "authors": ["Sanjeev Kumar"]}, {"title": "Work-stealing without the baggage", "authors": ["Vivek Kumar", " Daniel Frampton", " David Grove"]}, {"title": "A Java fork/join framework", "authors": ["Doug Lea"]}, {"title": "The design of a task parallel library", "authors": ["Daan Leijen", " Wolfram Schulte"]}, {"title": "The Cilk&plus;&plus; concurrency platform", "authors": []}, {"title": "Asynchronous work stealing on distributed memory systems", "authors": ["Shigang Li", " Jingyuan Hu", " Xin Cheng"]}, {"title": "Scalable hardware support for conditional parallelization", "authors": ["Zheng Li", " Olivier Certner", " Jose Duato"]}, {"title": "Thread fork/join techniques for multi-level parallelism exploitation in NUMA multiprocessors", "authors": ["Xavier Martorell", " Eduard Ayguad\u00e9", " Nacho Navarro", " Julita Corbal\u00e1n", " Marc Gonz\u00e1lez"]}, {"title": "Idempotent work stealing", "authors": []}, {"title": "Hierarchical work stealing on manycore clusters", "authors": []}, {"title": "Lazy task creation: A technique for increasing the granularity of parallel programs", "authors": ["Eric Mohr", " Jr"]}, {"title": "Towards a first vertical prototyping of an extremely fine-grained parallel programming approach", "authors": ["Dorit Naishlos", " Joseph Nuzman", " Chau-Wen Tseng"]}, {"title": "Towards a first vertical prototyping of an extremely fine-grained parallel programming approach", "authors": ["Dorit Naishlos", " Joseph Nuzman", " Chau-Wen Tseng"]}, {"title": "Efficient runtime thread management for the nano-threads programming model", "authors": []}, {"title": "UTS: An unbalanced tree search benchmark", "authors": ["Stephen Olivier", " Jun Huan", " Jinze Liu", " Jan Prins", " James Dinan"]}, {"title": "OpenMP Application Program Interface, Ver", "authors": ["OpenMP Architecture Review Board"]}, {"title": "Hierarchical work-stealing", "authors": ["Jean-No\u00ebl Quintin "]}, {"title": "Optimization via reflection on work stealing in TBB", "authors": []}, {"title": "Dynamic fine-Grain scheduling of pipeline parallelism", "authors": ["Daniel Sanchez", " David Lo", " Jeremy Sugerman"]}, {"title": "Flexible architectural support for fine-grain scheduling", "authors": ["Daniel Sanchez"]}, {"title": "Chunking parallel loops in the presence of synchronization", "authors": ["Jun Shirako"]}, {"title": "StackThreads/MP: Integrating futures into calling standards", "authors": ["Kenjiro Taura", " Kunio Tabata"]}, {"title": "Enhancing Productivity and Performance Portability of General-Purpose Parallel Programming", "authors": ["Alex"]}, {"title": "Segmentation fault with recursively nested parallelism (gcc snapshot)", "authors": ["Alex"]}, {"title": "Code and datasets for all benchmarks presented in this article (TBB & UTS)", "authors": ["Alex"]}, {"title": "Implementation of Lazy TBB", "authors": ["Alex"]}, {"title": "Lazy binary-splitting: A run-time adaptive work-stealing scheduler", "authors": ["Alex"]}, {"title": "The Unbalanced Tree Search Benchmark", "authors": ["UTSproject"]}, {"title": "A unified scheduler for recursive and task dataflow parallelism", "authors": ["Hans V", " George Tzenakis"]}, {"title": "Using simple abstraction to reinvent computing for parallelism", "authors": ["Uzi Vishkin"]}, {"title": "Explicit multi-threading (XMT) bridging models for instruction parallelism (extended abstract)", "authors": ["Uzi Vishkin", " Shlomit Dascal", " Efraim Berkovich"]}, {"title": "Hardware Design, Prototyping and Studies of the Explicit Multi-Threading (XMT) Paradigm", "authors": ["Xingzhi Wen"]}, {"title": "FPGA-based prototype of a PRAM-on-chip processor", "authors": ["Xingzhi Wen "]}]},
{"title": "Pattern-Based Verification for Multithreaded Programs", "time": "September 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Pattern-based verification checks the correctness of program executions that follow a given \n, a regular expression over the alphabet of program transitions of the form \n \u2026 \n. For multithreaded programs, the alphabet of the pattern is given by the reads and writes to the shared storage. We study the complexity of pattern-based verification for multithreaded programs with shared counters and finite variables. While unrestricted verification is undecidable for abstracted multithreaded programs with recursive procedures and PSPACE-complete for abstracted multithreaded while-programs (even without counters), we show that pattern-based verification is NP-complete for both classes, even in the presence of counters. We then conduct a multiparameter analysis to study the complexity of the problem on its three natural parameters (number of threads+counters+variables, maximal size of a thread, size of the pattern) and on two parameters related to thread structure (maximal number of procedures per thread and longest simple path of procedure calls). We present an algorithm that for a fixed number of threads, counters, variables, and pattern size solves the verification problem in \n time, where \n is the maximal size of a thread, \n is the maximal number of procedures per thread, and \n is the longest simple path of procedure calls.\n", "author": [{"name": "Javier Esparza", "affiliation": "Fakult\u00e4t f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Pierre Ganty", "affiliation": "IMDEA Software Institute, Madrid, Spain"}, {"name": "Tom\u00e1\u0161 Poch", "affiliation": "Charles University Prague, Faculty of Mathematics and Physics, Czech Republic"}, {"name": "Javier Esparza", "affiliation": "Fakult\u00e4t f\u00fcr Informatik, Technische Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Pierre Ganty", "affiliation": "IMDEA Software Institute, Madrid, Spain"}, {"name": "Tom\u00e1\u0161 Poch", "affiliation": "Charles University Prague, Faculty of Mathematics and Physics, Czech Republic"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "13", "references": [{"title": "Zing: A Model Checker for Concurrent Software", "authors": ["Tony Andrews", " Shaz Qadeer", " Jakob Rehof"]}, {"title": "Emptiness of multi-pushdown automata is 2EXPTIME-complete", "authors": ["Mohamed Faouzi Atig", " Benedikt Bollig"]}, {"title": "Context-Bounded analysis for concurrent programs with dynamic creation of threads", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani"]}, {"title": "On the reachability analysis of acyclic networks of pushdown systems", "authors": ["Mohamed Faouzi Atig", " Ahmed Bouajjani"]}, {"title": "Regular symbolic analysis of dynamic networks of pushdown systems", "authors": ["Ahmed Bouajjani", " Markus M\u00fcller-Olm"]}, {"title": "Petri nets, commutative context-free grammars, and basic parallel processes", "authors": ["Javier Esparza"]}, {"title": "Parikh\u2019s theorem: A simple and direct automaton construction", "authors": ["Javier Esparza", " Pierre Ganty", " Stefan Kiefer"]}, {"title": "Bounded underapproximations", "authors": ["Pierre Ganty", " Rupak Majumdar"]}, {"title": "Computers and Intractability, A Guide to the Theory of NP-Completeness", "authors": []}, {"title": "The Mathematical Theory of Context-Free Languages", "authors": ["Seymour Ginsburg"]}, {"title": "The complexity of decision problems for finite-turn multicounter machines", "authors": []}, {"title": "Parameterised pushdown systems with non-atomic writes", "authors": ["Matthew Hague"]}, {"title": "Synchronisation- and reversal-bounded analysis of multithreaded programs with counters", "authors": ["Matthew Hague "]}, {"title": "Introduction to Automata Theory, Languages and Computation (1st ed", "authors": []}, {"title": "Boundedness vs", "authors": ["Vineet Kahlon"]}, {"title": "Tractable Dataflow Analysis for Concurrent Programs via Bounded Languages", "authors": ["Vineet Kahlon"]}, {"title": "On the analysis of interacting pushdown systems", "authors": ["Vineet Kahlon "]}, {"title": "Reasoning about threads communicating via locks", "authors": ["Vineet Kahlon", " Franjo Ivancic"]}, {"title": "Dynamic cutoff detection in parameterized concurrent programs", "authors": ["Alex", " Daniel Kroening"]}, {"title": "Reducing concurrent analysis under a context bound to sequential analysis", "authors": ["Akash Lal "]}, {"title": "Interprocedural analysis of concurrent programs under a context bound", "authors": ["Akash Lal", " Tayssir Touili", " Nicholas Kidd"]}, {"title": "Language-theoretic abstraction refinement", "authors": ["Zhenyue Long", " Georgel Calin", " Rupak Majumdar"]}, {"title": "Iterative context bounding for systematic testing of multithreaded programs", "authors": ["Madanlal Musuvathi "]}, {"title": "On context-free languages", "authors": []}, {"title": "Context-Bounded model checking of concurrent software", "authors": ["Shaz Qadeer "]}, {"title": "KISS: keep it simple and sequential", "authors": ["Shaz Qadeer "]}, {"title": "Context-sensitive synchronization-sensitive analysis is undecidable", "authors": ["Ganesan Ramalingam"]}, {"title": "Symbolic context-bounded analysis of multithreaded Java programs", "authors": ["Dejvuth Suwimonteerabuth", " Javier Esparza"]}, {"title": "Reducing context-bounded concurrent reachability to sequential reachability", "authors": ["Salvatore La Torre", " Gennaro Parlato"]}, {"title": "On the complexity of equational horn clauses", "authors": [" Helmut Seidl"]}, {"title": "A bound on solutions of linear integer equalities and inequalities", "authors": ["Joachim von zur Gathen "]}]},
{"title": "Global Sparse Analysis Framework", "time": "September 2014", "keyword": ["Programming Languages and Systems"], "abstract": "In this article, we present a general method for achieving global static analyzers that are precise and sound, yet also scalable. Our method, on top of the abstract interpretation framework, is a general sparse analysis technique that supports relational as well as nonrelational semantics properties for various programming languages. Analysis designers first use the abstract interpretation framework to have a global and correct static analyzer whose scalability is unattended. Upon this underlying sound static analyzer, analysis designers add our generalized sparse analysis techniques to improve its scalability while preserving the precision of the underlying analysis. Our method prescribes what to prove to guarantee that the resulting sparse version should preserve the precision of the underlying analyzer.\nWe formally present our framework and show that existing sparse analyses are all restricted instances of our framework. In addition, we show more semantically elaborate design examples of sparse nonrelational and relational static analyses. We then present their implementation results that scale to globally analyze up to one million lines of C programs. We also show a set of implementation techniques that turn out to be critical to economically support the sparse analysis process.\n", "author": [{"name": "Hakjoo Oh", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Woosuk Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Daejun Park", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Jeehoon Kang", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Hakjoo Oh", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kihong Heo", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Wonchan Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Woosuk Lee", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Daejun Park", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Jeehoon Kang", "affiliation": "Seoul National University, Seoul, Korea"}, {"name": "Kwangkeun Yi", "affiliation": "Seoul National University, Seoul, Korea"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Static analysis of string manipulations in critical embedded C programs", "authors": ["Xavier Allamigeon", " Wenceslas Godard"]}, {"title": "Analyzing memory accesses in \u00d786 binary executables", "authors": ["Gogul Balakrishnan "]}, {"title": "A static analyzer for large safety-critical software", "authors": ["Bruno Blanchet", " Patrick Cousot", " Radhia Cousot", " Jerome Feret", " Laurent Mauborgne", " Antoine Min\u00e9", " David Monniaux"]}, {"title": "Efficient chaotic iteration strategies with widenings", "authors": ["Francois Bourdoncle"]}, {"title": "Analysis of pointers and structures", "authors": [" Mark Wegman"]}, {"title": "Automatic construction of sparse data flow evaluation graphs", "authors": ["Jong-Deok Choi", " Ron Cytron"]}, {"title": "Incremental computation of static single assignment form", "authors": ["Jong-Deok Choi", " Vivek Sarkar"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Patrick Cousot "]}, {"title": "Systematic design of program analysis frameworks", "authors": ["Patrick Cousot "]}, {"title": "Abstract interpretation frameworks", "authors": ["Patrick Cousot "]}, {"title": "Why does Astre scale up&quest; Formal Methods in System Design 35, 3, 229--264", "authors": ["Patrick Cousot", " Radhia Cousot", " Jerome Feret", " Laurent Mauborgne", " Antoine Min\u00e9"]}, {"title": "Automatic discovery of linear restraints among variables of a program", "authors": ["Patrick Cousot "]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Ron Cytron", " Jeanne Ferrante"]}, {"title": "Efficiently computing &phis;-nodes on-the-fly", "authors": []}, {"title": "How to analyze large programs efficiently and informatively", "authors": []}, {"title": "Sound, complete and scalable path-sensitive analysis", "authors": ["Isil Dillig", " Thomas Dillig"]}, {"title": "Precise reasoning for programs using containers", "authors": ["Isil Dillig", " Thomas Dillig"]}, {"title": "Verification of parameterized concurrent programs by modular reasoning about data and control", "authors": ["Azadeh Farzan "]}, {"title": "Inductive data flow graphs", "authors": ["Azadeh Farzan", " Zachary Kincaid"]}, {"title": "The ant and the grasshopper: Fast and accurate pointer analysis for millions of lines of code", "authors": ["Ben Hardekopf "]}, {"title": "Semi-sparse flow-sensitive pointer analysis", "authors": ["Ben Hardekopf "]}, {"title": "Flow-sensitive pointer analysis for millions of lines of code", "authors": ["Ben Hardekopf "]}, {"title": "Assessing the effects of flow-sensitivity on pointer alias analyses", "authors": ["Michael Hind "]}, {"title": "APRON: A library of numerical abstract domains for static analysis", "authors": ["Bertr"]}, {"title": "Abstract interpretation &plus; impure catalysts: Our sparrow experience", "authors": ["Yongin Jhee", " Minsik Jin", " Yungbum Jung", " Deokhwan Kim", " Soonho Kong", " Heejong Lee", " Hakjoo Oh", " Daejun Park"]}, {"title": "Dependence-based program analysis", "authors": ["Richard Johnson "]}, {"title": "Taming false alarms from a domain-unaware C analyzer by a Bayesian statistical post analysis", "authors": ["Yungbum Jung", " Jaehwang Kim", " Jaeho Shin"]}, {"title": "Monotone data flow analysis frameworks", "authors": []}, {"title": "Making context-sensitive points-to analysis with heap cloning practical for the real world", "authors": ["Chris Lattner", " Andrew Lenharth"]}, {"title": "Sound non-statistical clustering of static analysis alarms", "authors": ["Woosuk Lee", " Wonchan Lee"]}, {"title": "Boosting the performance of flow-sensitive points-to analysis using value flow", "authors": ["Lian Li", " Cristina Cifuentes"]}, {"title": "ecs", "authors": []}, {"title": "athworks", "authors": []}, {"title": "Trace partitioning in abstract interpretation based static analyzers", "authors": ["Laurent Mauborgne "]}, {"title": "Improving flow analyses via \u0393CFA: Abstract garbage collection and counting", "authors": ["Matthew Might "]}, {"title": "Precise and efficient call graph construction for C programs with function pointers", "authors": ["Ana Milanova", " Atanas Rountev"]}, {"title": "Field-sensitive value analysis of embedded C programs with union types and pointer arithmetics", "authors": ["Antoine Min\u00e9"]}, {"title": "The octagon abstract domain", "authors": ["Antoine Min\u00e9"]}, {"title": "Large spurious cycle in global static analyses and its algorithmic mitigation", "authors": ["Hakjoo Oh"]}, {"title": "Access analysis-based tight localization of abstract memories", "authors": ["Hakjoo Oh", " Lucas Brutschy"]}, {"title": "Design and implementation of sparse global analyses for C-like languages", "authors": ["Hakjoo Oh", " Kihong Heo", " Wonchan Lee", " Woosuk Lee"]}, {"title": "An algorithmic mitigation of large spurious interprocedural cycles in static analysis", "authors": ["Hakjoo Oh "]}, {"title": "Access-based localization with bypassing", "authors": ["Hakjoo Oh "]}, {"title": "On sparse evaluation representations", "authors": ["Ganesan Ramalingam"]}, {"title": "Symbolic evaluation and the global value graph", "authors": []}, {"title": "A semantics for procedure local heaps and its abstractions", "authors": ["Noam Rinetzky", " J\u00f6rg Bauer", " Thomas Reps", " Mooly Sagiv"]}, {"title": "Efficient flow-sensitive interprocedural data-flow analysis in the presence of pointers", "authors": ["Teck Bok Tok"]}, {"title": "Precise and efficient static array bound checking for large embedded C programs", "authors": ["Arnaud Venet "]}, {"title": "Constant propagation with conditional branches", "authors": []}, {"title": "Scalable shape analysis for systems code", "authors": ["Hongseok Yang", " Oukseh Lee", " Josh Berdine", " Cristiano Calcagno", " Byron Cook", " Dino Distefano"]}, {"title": "Level by level: Making flow- and context-sensitive pointer analysis scalable for millions of lines of code", "authors": ["Hongtao Yu", " Jingling Xue", " Wei Huo", " Xiaobing Feng"]}, {"title": "Testing static analysis tools using exploitable buffer overflows from open source code", "authors": ["Misha Zitser"]}]},
{"title": "Parameterized loop tiling", "time": "May 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Loop tiling is a widely used program optimization that improves data locality and enables coarse-grained parallelism. Parameterized tiled loops, where the tile sizes remain symbolic parameters until runtime, are quite useful for iterative compilers and autotuners that produce highly optimized libraries and codes. Although it is easy to generate such loops for (hyper-) rectangular iteration spaces tiled with (hyper-) rectangular tiles, many important computations do not fall into this restricted domain. In the past, parameterized tiled code generation for the general case of convex iteration spaces being tiled by (hyper-) rectangular tiles has been solved with bounding box approaches or with sophisticated and expensive machinery.\nWe present a novel formulation of the parameterized tiled loop generation problem using a polyhedral set called the \n. By reducing the problem of parameterized tiled code generation to that of generating standard loops and simple postprocessing of these loops, the outset method achieves a code generation efficiency that is comparable to existing code generation techniques, including those for fixed tile sizes. We compare the performance of our technique with several other tiled loop generation methods on kernels from BLAS3 and scientific computations. The simplicity of our solution makes it well suited for use in production compilers\u2014in particular, the IBM XL compiler uses the inset-based technique introduced in this article for register tiling. We also provide a complete coverage of parameterized tiling of perfect loop nests by describing three related techniques: (i) a scheme for separating full and partial tiles; (ii) a scheme for generating tiled loops directly from the abstract syntax tree representation of loops; (iii) a formal characterization of parameterized loop tiling using bilinear forms and a Symbolic Fourier-Motzkin Elimination (SFME)-based parameterized tiled loop generation method.\n", "author": [{"name": "Lakshminarayanan Renganarayanan", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Daegon Kim", "affiliation": "CORESPEQ, Inc., Milpitas, CA"}, {"name": "Michelle Mills Strout", "affiliation": "Colorado State University, Fort Collins, CO"}, {"name": "Sanjay Rajopadhye", "affiliation": "Colorado State University, Fort Collins, CO"}, {"name": "Lakshminarayanan Renganarayanan", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Daegon Kim", "affiliation": "CORESPEQ, Inc., Milpitas, CA"}, {"name": "Michelle Mills Strout", "affiliation": "Colorado State University, Fort Collins, CO"}, {"name": "Sanjay Rajopadhye", "affiliation": "Colorado State University, Fort Collins, CO"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "20", "references": [{"title": "Parallelizing compiler techniques based on linear inequalities", "authors": ["Amarasinghe"]}, {"title": "Communication optimization and code generation for distributed memory machines", "authors": ["Amarasinghe"]}, {"title": "Scanning polyhedra with do loops", "authors": ["Ancourt"]}, {"title": "Optimal orthogonal tiling of 2-d iterations", "authors": ["Andonov"]}, {"title": "Code generation in the polyhedral model is easier than you think", "authors": ["Bastoul"]}, {"title": "(Pen)-ultimate tiling? Integr", "authors": ["Boulet", " Darte", " Risset"]}, {"title": "Tile size selection using cache organization and data layout", "authors": ["Coleman"]}, {"title": "Systems of linear inequalities", "authors": ["Dines"]}, {"title": "A theory on extending algorithms for parametric problems", "authors": ["Eaves"]}, {"title": "Dines-Fourier-Motzkin quantifier elimination and an application of corresponding transfer principles over ordered fields", "authors": ["Eaves"]}, {"title": "Reported in Analyse des travaux de l'Academie Royale des Sciences, pendant l'annee 1824, Partie mathematique", "authors": ["Fourier"]}, {"title": "An efficient code generation technique for tiled iteration spaces", "authors": ["Goumas", " Athanasaki"]}, {"title": "Introducing nonlinear parameters to the polyhedron model", "authors": ["Gr\u00f6sslinger", " Griebl"]}, {"title": "Parametric multilevel tiling of imperfectly nested loops", "authors": ["Hartono", " Baskaran", " Bastoul", " Cohen", " Krishnamoorthy", " Norris", " Ramanujam"]}, {"title": "HiTLoG: Hierarchical Tiled Loop Generator", "authors": ["HiTLo"]}, {"title": "Determining the idle time of a tiling", "authors": ["H\u00f6gstedt", " Carter"]}, {"title": "Supernode partitioning", "authors": ["Irigoin"]}, {"title": "Register tiling in nonrectangular iteration spaces", "authors": ["Jim\u00e9nez", " Llaber\u00eda"]}, {"title": "Implicit and explicit optimizations for stencil computations", "authors": ["Kamil", " Datta", " Williams", " Oliker", " Shalf"]}, {"title": "Code generation for multiple mappings", "authors": ["Kelly", " Pugh"]}, {"title": "Parameterized tiling for imperfectly nested loops", "authors": ["Kim"]}, {"title": "Multilevel tiling: M for the price of one", "authors": ["Kim", " Renganarayanan", " Rostron", " Rajopadhye"]}, {"title": "Combined selection of tile sizes and unroll factors using iterative compilation", "authors": ["Kisuki", " Knijnenburg"]}, {"title": "Iterative compilation", "authors": ["Knijnenburg", " Kisuki"]}, {"title": "Scanning parameterized polyhedron using Fourier-Motzkin elmination", "authors": ["Le Fur"]}, {"title": "La synth\u00e8se de nids de boucles avec la biblioth\u00e8que poly\u00e9drique", "authors": ["Le Verge", " Van Dongen"]}, {"title": "Loop nest synthesis using the polyhedral library", "authors": ["Le Verge", " Van Dongen"]}, {"title": "Accurately selecting block size at runtime in pipelined parallel, programs", "authors": ["Lowenthal"]}, {"title": "Beitrage zur theorie der linearen ungliechungen", "authors": ["Motzkin"]}, {"title": "Dynamic tiling for effective use of shared caches on multithreaded processors", "authors": ["Nikolopoulos"]}, {"title": "OMEGA&plus;: Pressburger engine and code generator", "authors": ["OMEGA&plus"]}, {"title": "Omega test: A practical algorithm for exact array dependency analysis", "authors": ["Pugh"]}, {"title": "Spiral: Code generation for dsp transforms", "authors": ["P\u00fcschel", " Moura", " Johnson", " Padua", " Veloso", " Singer", " Xiong", " Franchetti", " Gacic", " Voronenko", " Chen", " Johnson"]}, {"title": "Generation of efficient nested loops from polyhedra", "authors": ["Quiller\u00e9", " Rajopadhye"]}, {"title": "Tiling multidimensional iteration spaces for multicomputers", "authors": ["Ramanujam"]}, {"title": "Compact multidimensional kernel extraction for register tiling", "authors": ["Renganarayana", " Bondhugula", " Derisavi", " Eichenberger"]}, {"title": "Automatic blocking of nested loops", "authors": ["Schreiber"]}, {"title": "Parametric linear and quadratic optimization by elimination", "authors": ["Weispfenning"]}, {"title": "Automatically tuned linear algebra software", "authors": ["Whaley"]}, {"title": "SUIF: An infrastructure for research on parallelizing and optimizing compilers", "authors": ["Wilson", " French", " Wilson", " Amarasinghe", " Anderson", " Tjiang", " Liao", " Tseng", " Hall", " Lam"]}, {"title": "A data locality optimizing algorithm", "authors": ["Wolf"]}, {"title": "Iteration space tiling for memory hierarchies", "authors": ["Wolfe"]}, {"title": "Loop Tiling for Parallelism", "authors": ["Xue"]}]},
{"title": "A data-centric approach to synchronization", "time": "May 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Concurrency-related errors, such as data races, are frustratingly difficult to track down and eliminate in large object-oriented programs. Traditional approaches to preventing data races rely on protecting instruction sequences with synchronization operations. Such control-centric approaches are inherently brittle, as the burden is on the programmer to ensure that all concurrently accessed memory locations are consistently protected. Data-centric synchronization is an alternative approach that offloads some of the work on the language implementation. Data-centric synchronization groups fields of objects into \n to indicate that these fields must always be updated atomically. Each atomic set has associated \n, that is, code fragments that preserve the consistency of that atomic set. Synchronization operations are added automatically by the compiler. We present an extension to the Java programming language that integrates annotations for data-centric concurrency control. The resulting language, called AJ, relies on a type system that enables separate compilation and supports atomic sets that span multiple objects and that also supports full encapsulation for more efficient code generation. We evaluate our proposal by refactoring classes from standard libraries, as well as a number of multithreaded benchmarks, to use atomic sets. Our results suggest that data-centric synchronization is easy to use and enjoys low annotation overhead, while successfully preventing data races. Moreover, experiments on the SPECjbb benchmark suggest that acceptable performance can be achieved with a modest amount of tuning.\n", "author": [{"name": "Julian Dolby", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Christian Hammer", "affiliation": "Saarland University, Saarbr\u00fccken, Germany"}, {"name": "Daniel Marino", "affiliation": "Symantec Research Labs, Culver City, CA"}, {"name": "Frank Tip", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Mandana Vaziri", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Jan Vitek", "affiliation": "Purdue University, West Lafayette, IN"}, {"name": "Julian Dolby", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Christian Hammer", "affiliation": "Saarland University, Saarbr\u00fccken, Germany"}, {"name": "Daniel Marino", "affiliation": "Symantec Research Labs, Culver City, CA"}, {"name": "Frank Tip", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Mandana Vaziri", "affiliation": "IBM T.J. Watson Research Center, Yorktown Heights, NY"}, {"name": "Jan Vitek", "affiliation": "Purdue University, West Lafayette, IN"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "16", "references": [{"title": "Types for safe locking: Static race detection for Java", "authors": ["Abadi", " Flanagan"]}, {"title": "High-level data races", "authors": ["Artho", " Havelund"]}, {"title": "Coredet: A compiler and runtime system for deterministic multithreaded execution", "authors": ["Bergan", " Anderson", " Devietti", " Ceze"]}, {"title": "A type and effect system for deterministic parallel Java", "authors": ["Bocchino", " Adve", " Dig", " Adve", " Heumann", " Komuravelli", " Overbey", " Simmons", " Sung"]}, {"title": "Ownership types for safe programming: Preventing data races and deadlocks", "authors": ["Boyapati", " Lee"]}, {"title": "A parameterized type system for race-free Java programs", "authors": ["Boyapati"]}, {"title": "Finding stale-value errors in concurrent programs", "authors": ["Burrows"]}, {"title": "Concurrency control with data coloring", "authors": ["Ceze", " von Praun", " Cascaval", " Montesinos"]}, {"title": "Inferring locks for atomic sections", "authors": ["Cherem", " Chilimbi"]}, {"title": "Ownership types for flexible alias protection", "authors": ["Clarke", " Potter"]}, {"title": "Views: Object-inspired concurrency control", "authors": ["Demsky"]}, {"title": "Invariant-based specification, synthesis, and verification of synchronization in concurrent programs", "authors": ["Deng", " Dwyer", " Hatcliff"]}, {"title": "RacerX: Effective, static detection of race conditions and deadlocks", "authors": ["Engler"]}, {"title": "Type-based race detection for Java", "authors": ["Flanagan"]}, {"title": "Types for atomicity: Static checking and inference for Java", "authors": ["Flanagan", " Freund", " Lifshin"]}, {"title": "A type and effect system for atomicity", "authors": ["Flanagan"]}, {"title": "An object-oriented effects system", "authors": ["Greenhouse"]}, {"title": "Encapsulating objects with confined types", "authors": ["Grothoff", " Palsberg"]}, {"title": "Dynamic detection of atomic-set-serializability violations", "authors": ["Hammer", " Dolby", " Vaziri"]}, {"title": "Language support for lightweight transactions", "authors": ["Harris"]}, {"title": "Transactional memory: Architectural support for lock-free data structures", "authors": ["Herlihy"]}, {"title": "Monitors: An operating system structuring concept", "authors": ["Hoare"]}, {"title": "Finding concurrency-related bugs using random isolation", "authors": ["Kidd", " Reps", " Dolby"]}, {"title": "Task types for pervasive atomicity", "authors": ["Kulkarni", " Liu"]}, {"title": "Detecting atomic-set serializability violations in multithreaded programs through active randomized testing", "authors": ["Lai", " Cheung"]}, {"title": "Data Groups: Specifying the modification of extended state", "authors": ["Leino"]}, {"title": "Checking Java programs via guarded commands", "authors": ["Leino", " Saxe"]}, {"title": "Muvi: Automatically inferring multi-variable access correlations and detecting related semantic and concurrency bugs", "authors": [" Park", " Hu", " Ma", " Jiang", " Li", " Popa"]}, {"title": "Learning from mistakes: A comprehensive study on real world concurrency bug characteristics", "authors": [" Park", " Seo"]}, {"title": "Colorsafe: Architectural support for debugging and dynamically avoiding multi-variable atomicity violations", "authors": ["Lucia", " Ceze"]}, {"title": "Autolocker: Synchronization inference for atomic sections", "authors": ["McCloskey", " Zhou", " Gay"]}, {"title": "Flexible alias protection", "authors": ["Noble", " Vitek"]}, {"title": "Hybrid dynamic data race detection", "authors": ["O'Callahan"]}, {"title": "Eraser: A dynamic data race detector for multi-threaded programs", "authors": ["Savage", " Burrows", " Nelson", " Sobalvarro"]}, {"title": "Associating synchronization constraints with data in an object-oriented language", "authors": ["Vaziri", " Tip"]}, {"title": "Confined types in Java", "authors": ["Vitek"]}, {"title": "Static detection of atomicity violations in object-oriented programs", "authors": ["von Praun"]}, {"title": "Accurate and efficient runtime detection of atomicity errors in concurrent programs", "authors": ["Wang"]}, {"title": "Runtime analysis of atomicity for multithreaded programs", "authors": ["Wang"]}, {"title": "Loci: Simple thread-locality for Java", "authors": ["Wrigstad", " Pizlo", " Meawad", " Zhao"]}, {"title": "A serializability violation detector for shared-memory server programs", "authors": [" Bodik"]}]},
{"title": "Kitsune: Efficient, General-Purpose Dynamic Software Updating for C", "time": "October 2014", "keyword": ["Programming Languages and Systems"], "abstract": "Dynamic software updating (DSU) systems facilitate software updates to running programs, thereby permitting developers to add features and fix bugs without downtime. This article introduces Kitsune, a DSU system for C. Kitsune\u2019s design has three notable features. First, Kitsune updates the whole program, rather than individual functions, using a mechanism that places no restrictions on data representations or allowed compiler optimizations. Second, Kitsune makes the important aspects of updating explicit in the program text, making the program\u2019s semantics easy to understand while minimizing programmer effort. Finally, the programmer can write simple specifications to direct Kitsune to generate code that traverses and transforms old-version state for use by new code; such state transformation is often necessary and is significantly more difficult in prior DSU systems. We have used Kitsune to update six popular, open-source, single- and multithreaded programs and find that few program changes are required to use Kitsune, that it incurs essentially no performance overhead, and that update times are fast.\n", "author": [{"name": "Christopher M. Hayden", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Karla Saur", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Edward K. Smith", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Michael Hicks", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Christopher M. Hayden", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Karla Saur", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Edward K. Smith", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Michael Hicks", "affiliation": "University of Maryland, College Park, USA"}, {"name": "Jeffrey S. Foster", "affiliation": "University of Maryland, College Park, USA"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "17", "references": [{"title": "OPUS: Online Patches and Updates for Security", "authors": ["Gautam Altekar", " Ilya Bagrak", " Paul Burstein"]}, {"title": "Ksplice: Automatic rebootless kernel updates", "authors": []}, {"title": "Providing dynamic update in an operating system", "authors": ["Andrew Baumann", " Gernot Heiser", " Dilma Da Silva", " Orran Krieger"]}, {"title": "Reconsidering custom memory allocation", "authors": []}, {"title": "Live updating operating systems using virtualization", "authors": ["Haibo Chen", " Rong Chen", " Fengzhe Zhang", " Binyu Zang"]}, {"title": "Dynamic software updating using a relaxed consistency model", "authors": ["Haibo Chen", " Jie Yu", " Chengqun Hang", " Binyu Zang"]}, {"title": "Dependent types for low-level programming", "authors": ["Jeremy Condit", " Matthew Harren", " Zachary Anderson", " David Gay"]}, {"title": "Dynamic ML without Dynamic Types", "authors": ["Stephen Gilmore", " Dilsun K\u00edrl\u00ed"]}, {"title": "Safe and automatic live update for operating systems", "authors": ["Cristiano Giuffrida", " Anton Kuijsten"]}, {"title": "Specifying and verifying the correctness of dynamic software updates", "authors": [" Stephen Magill", " Michael Hicks", " Nate Foster"]}, {"title": "A study of dynamic software update quiescence for multithreaded programs", "authors": [" Karla Saur", " Michael Hicks"]}, {"title": "Kitsune: Efficient, general-purpose dynamic software updating for C", "authors": [" Michail Denchev", " Michael Hicks"]}, {"title": "Evaluating dynamic software update safety using efficient systematic testing", "authors": [" Michael Hicks"]}, {"title": "State transfer for clear and efficient runtime upgrades", "authors": [" Michael Hicks"]}, {"title": "Dynamic software updating", "authors": ["Michael Hicks "]}, {"title": "K42: Building a complete operating system", "authors": ["Orran Krieger", " Jimi Xenidis", " Dilma Da Silva", " Michal Ostrowski", " Jonathan Appavoo", " Amos Waterl"]}, {"title": "LiveRebel", "authors": ["LiveRebe"]}, {"title": "Whole-Program Dynamic Software Updating", "authors": ["Kristis Makris"]}, {"title": "Immediate multi-threaded dynamic software updates using stack reconstruction", "authors": ["Kristis Makris "]}, {"title": "Dynamic and adaptive updates of non-quiescent subsystems in commodity operating system kernels", "authors": ["Kristis Makris "]}, {"title": "Producing wrong data without doing anything obviously wrong&excl; In Proceedings of ASPLOS", "authors": ["Todd Mytkowicz", " Amer Diwan", " Matthias Hauswirth"]}, {"title": "Safe and timely dynamic updates for multi-threaded programs", "authors": ["Iulian Neamtiu "]}, {"title": "Contextual effects for version-consistent dynamic software updating and safe concurrent programming", "authors": ["Iulian Neamtiu", " Michael Hicks"]}, {"title": "Practical dynamic software updating for C", "authors": ["Iulian Neamtiu", " Michael Hicks", " Gareth Stoyle"]}, {"title": "CIL: Intermediate language and tools for analysis and transformation of C programs", "authors": [" Scott Mcpeak"]}, {"title": "Scaling memcache at Facebook", "authors": ["Rajesh Nishtala", " Hans Fugal", " Steven Grimm", " Marc Kwiatkowski", " Herman Lee", " Ryan McElroy", " Mike Paleczny", " Daniel Peek", " Paul Saab", " David Stafford", " Tony Tung"]}, {"title": "DynSec: On-the-fly code rewriting and repair", "authors": ["Mathias Payer", " Boris Bluntschli"]}, {"title": "Hot-patching a web server: A case study of ASAP code repair", "authors": []}, {"title": "Rubah: Efficient, general-purpose dynamic software updating for Java", "authors": ["Lu\u00eds Pina "]}, {"title": "A Survey of Checkpoint/Restart Implementations", "authors": ["Eric Roman"]}, {"title": "(2nd", "authors": []}, {"title": "Dynamic software updates: A VM-centric approach", "authors": ["Suriya Subramanian", " Michael Hicks"]}]},
{"title": "S", "time": "May 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Performance modeling for scientific applications is important for assessing potential application performance and systems procurement in high-performance computing (HPC). Recent progress on communication tracing opens up novel opportunities for communication modeling due to its lossless yet scalable trace collection. Estimating the impact of scaling on communication efficiency still remains nontrivial due to execution-time variations and exposure to hardware and software artifacts.\nThis work contributes a fundamentally novel modeling scheme. We synthetically generate the application trace for large numbers of nodes via extrapolation from a set of smaller traces. We devise an innovative approach for topology extrapolation of single program, multiple data (SPMD) codes with stencil or mesh communication. Experimental results show that the extrapolated traces precisely reflect the communication behavior and the performance characteristics at the target scale for both strong and weak scaling applications. The extrapolated trace can subsequently be (a) replayed to assess communication requirements before porting an application, (b) transformed to autogenerate communication benchmarks for various target platforms, and (c) analyzed to detect communication inefficiencies and scalability limitations.\nTo the best of our knowledge, rapidly obtaining the communication behavior of parallel applications at arbitrary scale with the availability of timed replay, yet without actual execution of the application, at this scale, is without precedence and has the potential to enable otherwise infeasible system simulation at the exascale level.\n", "author": [{"name": "Xing Wu", "affiliation": "North Carolina State University, Raleigh, NC"}, {"name": "Frank Mueller", "affiliation": "North Carolina State University, Raleigh, NC"}, {"name": "Xing Wu", "affiliation": "North Carolina State University, Raleigh, NC"}, {"name": "Frank Mueller", "affiliation": "North Carolina State University, Raleigh, NC"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Performance modeling: Understanding the present and predicting the future", "authors": ["Bailey"]}, {"title": "The NAS parallel benchmarks", "authors": ["Bailey", " Barszcz", " Barton", " Browning", " Carter", " Dagum", " Fatoohi", " Frederickson", " Lasinski", " Schreiber", " Simon", " Venkatakrishnan"]}, {"title": "A survey of longest common subsequence algorithms", "authors": ["Bergroth", " Hakonen"]}, {"title": "Tools for scalable parallel program analysis\u2014Vampir NG and DeWiz", "authors": ["Brunst", " Kranzlm\u00fcller"]}, {"title": "Automatic generation of complete communication skeletons from traces", "authors": ["Deshp"]}, {"title": "Trace extrapolation for parallel programs on shared memory multiprocessors", "authors": ["Eckert"]}, {"title": "Parallel program trace extrapolation", "authors": ["Eckert"]}, {"title": "A study of process arrival patterns for MPI collective operations", "authors": ["Faraj", " Patarasuk"]}, {"title": "A high-performance, portable implementation of the MPI message passing interface standard", "authors": ["Gropp", " Lusk", " Doss"]}, {"title": "Parallel programming with capse\u2014A case study", "authors": ["Gruber", " Haring", " Kranzlmueller"]}, {"title": "Reevaluating Amdahl's law", "authors": ["Gustafson"]}, {"title": "Verifying causality between distant performance phenomena in large-scale mpi applications", "authors": ["Hermanns", " Geimer", " Wolf"]}, {"title": "Performance analysis of wavefront algorithms on very-large scale distributed systems", "authors": ["Hoisie", " Lubeck"]}, {"title": "Efficiently exploring architectural design spaces via predictive modeling", "authors": ["\u00cfpek", " McKee", " Caruana", " de Supinski"]}, {"title": "Predictive performance and scalability modeling of a large-scale application", "authors": ["Kerbyson", " Alme", " Hoisie", " Petrini", " Wasserman"]}, {"title": "Performance modeling of the blue gene architecture", "authors": ["Kerbyson"]}, {"title": "Introducing the open trace format (OTF)", "authors": ["Kn\u00fcpfer", " Brendel", " Brunst", " Mix"]}, {"title": "Analyzing scheduling policies using dimemas", "authors": ["Labarta", " Girona"]}, {"title": "VAMPIR: Visualization and analysis of MPI resources", "authors": ["Nagel", " Arnold", " Weber", " Hoppe"]}, {"title": "Scalable compression and replay of communication traces in massively parallel environments", "authors": ["Noeth", " Mueller", " Schulz"]}, {"title": "Scalatrace: Scalable compression and replay of communication traces in high performance computing", "authors": ["Noeth", " Mueller", " Schulz"]}, {"title": "PARAVER: A tool to visualise and analyze parallel code", "authors": ["Pillet", " Labarta", " Cortes"]}, {"title": "Detecting patterns in mpi communication traces", "authors": ["Preissl", " K\u00f6ckerbauer", " Schulz", " Kranzlm\u00fcller", " Supinski"]}, {"title": "Using mpi communication patterns to guide source code transformations", "authors": ["Preissl", " Schulz", " Kranzlm\u00fcller", " Supinski"]}, {"title": "Preserving time in large-scale communication traces", "authors": ["Ratn", " Mueller", " de Supinski"]}, {"title": "The structural simulation toolkit: exploring novel architectures", "authors": ["Rodrigues", " Murphy", " Kogge"]}, {"title": "Roltmp-replay of lamport timestamps for message passing systems", "authors": ["Ronsse"]}, {"title": "Automatically characterizing large scale program behavior", "authors": ["Sherwood", " Perelman", " Hamerly"]}, {"title": "A framework for performance modeling and prediction", "authors": ["Snavely", " Carrington", " Wolter", " Labarta", " Badia"]}, {"title": "Statistical scalability analysis of communication operations in distributed applications", "authors": ["Vetter"]}, {"title": "Performance and scalability analysis of teraflop-scale parallel architectures using multidimensional wavefront applications", "authors": ["Wasserman", " Hoisie"]}, {"title": "Automatic generation of executable communication specifications from parallel applications", "authors": [" Mueller"]}, {"title": "Probabilistic communication and i/o tracing with deterministic replay at scale", "authors": [" Vijayakumar", " Mueller", " Ma"]}, {"title": "Logicalization of mpi communication traces", "authors": [" Prithivathi", " Subhlok"]}, {"title": "Construction and evaluation of coordinated performance skeletons", "authors": []}, {"title": "Phantom: Predicting performance of parallel applications on large-scale parallel machines using a single node", "authors": ["Zhai", " Chen"]}, {"title": "Fact: Fast communication trace collection for parallel applications through program slicing", "authors": ["Zhai", " Sheng", " He", " Chen"]}]},
{"title": "Algorithmic verification of asynchronous programs", "time": "May 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Asynchronous programming is a ubiquitous systems programming idiom for managing concurrent interactions with the environment. In this style, instead of waiting for time-consuming operations to complete, the programmer makes a non-blocking call to the operation and posts a callback task to a task buffer that is executed later when the time-consuming operation completes. A cooperative scheduler mediates the interaction by picking and executing callback tasks from the task buffer to completion (and these callbacks can post further callbacks to be executed later). Writing correct asynchronous programs is hard because the use of callbacks, while efficient, obscures program control flow.\nWe provide a formal model underlying asynchronous programs and study verification problems for this model. We show that the safety verification problem for finite-data asynchronous programs is expspace-complete. We show that liveness verification for finite-data asynchronous programs is decidable and polynomial-time equivalent to Petri net reachability. Decidability is not obvious, since even if the data is finite-state, asynchronous programs constitute infinite-state transition systems: both the program stack for an executing task and the task buffer of pending calls to tasks can be potentially unbounded.\nOur main technical constructions are polynomial-time, semantics-preserving reductions from asynchronous programs to Petri nets and back. The first reduction allows the use of algorithmic techniques on Petri nets for the verification of asynchronous programs, and the second allows lower bounds on Petri nets to apply also to asynchronous programs.\nWe also study several extensions to the basic models of asynchronous programs that are inspired by additional capabilities provided by implementations of asynchronous libraries and classify the decidability and undecidability of verification questions on these extensions.\n", "author": [{"name": "Pierre Ganty", "affiliation": "IMDEA Software, Madrid, Spain"}, {"name": "Rupak Majumdar", "affiliation": "MPI-SWS, Kaiserslautern, Germany"}, {"name": "Pierre Ganty", "affiliation": "IMDEA Software, Madrid, Spain"}, {"name": "Rupak Majumdar", "affiliation": "MPI-SWS, Kaiserslautern, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "48", "references": [{"title": "General decidability theorems for infinite-state systems", "authors": ["Abdulla", " Cerans", " Jonsson"]}, {"title": "Minimal cost reachability/coverability in priced timed petri nets", "authors": ["Abdulla"]}, {"title": "Compilers: Principles, Techniques, and Tools", "authors": ["Aho", " Sethi"]}, {"title": "Analyzing asynchronous programs with preemption", "authors": ["Atig", " Bouajjani"]}, {"title": "On Yen's path logic for Petri nets", "authors": ["Atig"]}, {"title": "Reachability analysis of pushdown automata: Application to model-checking", "authors": ["Bouajjani", " Esparza"]}, {"title": "Pushdown processes: Parallel composition and model checking", "authors": ["Burkart"]}, {"title": "Decidability results for well-structured transition systems with auxiliary storage", "authors": ["Chadha"]}, {"title": "Deciding branching time properties for asynchronous programs", "authors": ["Chadha"]}, {"title": "Finiteness of the odd perfect and primitive abundant numbers with $n$ distinct prime factors", "authors": ["Dickson"]}, {"title": "Reset nets between decidability and undecidability", "authors": ["Dufourd", " Finkel"]}, {"title": "Petri nets, commutative context-free grammars, and basic parallel processes", "authors": ["Esparza"]}, {"title": "Decidability and complexity of petri net problems -- an introduction", "authors": ["Esparza"]}, {"title": "On the verification of broadcast protocols", "authors": ["Esparza", " Finkel"]}, {"title": "Parikh's theorem: A simple and direct automaton construction", "authors": ["Esparza", " Ganty", " Kiefer"]}, {"title": "Newtonian program analysis", "authors": ["Esparza", " Kiefer"]}, {"title": "Decibility issues for Petri nets\u2014a survey", "authors": ["Esparza"]}, {"title": "Mixing coverability and reachability to analyze vass with one zero-test", "authors": ["Finkel"]}, {"title": "Well-structured transition systems everywhere&excel; Theor", "authors": ["Finkel"]}, {"title": "Analyzing real-time event-driven programs", "authors": ["Ganty"]}, {"title": "Verifying liveness for asynchronous programs", "authors": ["Ganty", " Majumdar"]}, {"title": "Decidability questions for Petri nets", "authors": ["Hack"]}, {"title": "System architecture directions for networked sensors", "authors": ["Hill", " Szewczyk", " Woo", " Hollar", " Culler"]}, {"title": "Interprocedural analysis of asynchronous programs", "authors": ["Jhala"]}, {"title": "Parallel program schemata", "authors": ["Karp"]}, {"title": "The click modular router", "authors": ["Kohler", " Morris", " Chen", " Jannotti"]}, {"title": "Decidability of reachability in vector addition systems (preliminary version)", "authors": ["Kosaraju"]}, {"title": "Events can make sense", "authors": ["Krohn", " Kohler"]}, {"title": "A structure to decide reachability in petri nets", "authors": ["Lambert"]}, {"title": "Proving the correctness of multiprocess programs", "authors": ["Lamport"]}, {"title": "To CNF or not to CNF? An efficient yet presentable version of the CYK algorithm", "authors": ["Lange"]}, {"title": "The reachability problem is exponential-space hard", "authors": ["Lipton"]}, {"title": "An algorithm for the general petri net reachability problem", "authors": ["Mayr"]}, {"title": "The complexity of the finite containment problem for Petri nets", "authors": ["Mayr"]}, {"title": "Finite and Infinite Machines", "authors": ["Minsky"]}, {"title": "Flash: An efficient and portable web server", "authors": ["Pai", " Druschel"]}, {"title": "On context-free languages", "authors": ["Parikh"]}, {"title": "The covering and boundedness problems for vector addition systems", "authors": ["Rackoff"]}, {"title": "Petri Nets", "authors": ["Reisig"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": "Model checking multithreaded programs with asynchronous atomic methods", "authors": ["Sen"]}, {"title": "Two approaches to interprocedural data flow analysis", "authors": ["Sharir"]}, {"title": "Verification of concurrent programs\u2014the automata-theoretic approach", "authors": ["Vardi"]}, {"title": "Pushdown processes: Games and model-checking", "authors": ["Walukiewicz"]}, {"title": "A unified approach for deciding the existence of certain petri net paths", "authors": ["Yen"]}]},
{"title": "Partially Evaluating Finite-State Runtime Monitors Ahead of Time", "time": "June 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Finite-state properties account for an important class of program properties, typically related to the order of operations invoked on objects. Many library implementations therefore include manually written finite-state monitors to detect violations of finite-state properties at runtime. Researchers have recently proposed the explicit specification of finite-state properties and automatic generation of monitors from the specification. However, runtime monitoring only shows the presence of violations, and typically cannot prove their absence. Moreover, inserting a runtime monitor into a program under test can slow down the program by several orders of magnitude.\nIn this work, we therefore present a set of four static whole-program analyses that partially evaluate runtime monitors at compile time, with increasing cost and precision. As we show, ahead-of-time evaluation can often evaluate the monitor completely statically. This may prove that the program cannot violate the property on any execution or may prove that violations do exist. In the remaining cases, the partial evaluation converts the runtime monitor into a residual monitor. This monitor only receives events from program locations that the analyses failed to prove irrelevant. This makes the residual monitor much more efficient than a full monitor, while still capturing all property violations at runtime.\nWe implemented the analyses in Clara, a novel framework for the partial evaluation of AspectJ-based runtime monitors, and validated our approach by applying Clara to finite-state properties over several large-scale Java programs. Clara proved that most of the programs never violate our example properties. Some programs required monitoring, but in those cases Clara could often reduce the monitoring overhead to below 10%. We observed that several programs did violate the stated properties.\n", "author": [{"name": "Eric Bodden", "affiliation": "Technische Universit\u00e4t Darmstadt"}, {"name": "Patrick Lam", "affiliation": "University of Waterloo"}, {"name": "Laurie Hendren", "affiliation": "McGill University"}, {"name": "Eric Bodden", "affiliation": "Technische Universit\u00e4t Darmstadt"}, {"name": "Patrick Lam", "affiliation": "University of Waterloo"}, {"name": "Laurie Hendren", "affiliation": "McGill University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "Adding trace matching with free variables to AspectJ", "authors": []}, {"title": " ", "authors": [" ACM Press"]}, {"title": "abc: An extensible AspectJ compiler", "authors": []}, {"title": " ", "authors": []}, {"title": "Efficient trace monitoring", "authors": []}, {"title": "Making trace monitors feasible", "authors": []}, {"title": " ", "authors": []}, {"title": "Modular typestate checking of aliased objects", "authors": []}, {"title": " ", "authors": []}, {"title": "The DaCapo benchmarks: Java benchmarking development and analysis", "authors": []}, {"title": " ", "authors": []}, {"title": "J-LO - A tool for runtime-checking temporal assertions", "authors": [" RWTH Aachen University"]}, {"title": "Verifying finite-state properties of large-scale programs", "authors": []}, {"title": "Efficient hybrid typestate analysis by determining continuation-equivalent states", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "A staged static program analysis to improve the performance of runtime monitoring", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Finding programming errors earlier by evaluating runtime monitors ahead-of-time", "authors": []}, {"title": " ", "authors": []}, {"title": "Object representatives: A uniform abstraction for pointer information", "authors": []}, {"title": "British Computing Society", "authors": []}, {"title": "Dependent advice: A general approach to optimizing history-based aspects", "authors": []}, {"title": " ", "authors": []}, {"title": "Collaborative runtime verification with tracematches", "authors": []}, {"title": " ", "authors": []}, {"title": "Clara: A framework for statically evaluating finite-state runtime monitors", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders", "authors": []}, {"title": " ", "authors": []}, {"title": "Canonical regular expressions and minimal state graphs for definite events", "authors": []}, {"title": "", "authors": []}, {"title": "MOP: An efficient and generic runtime verification framework", "authors": []}, {"title": " ", "authors": []}, {"title": "Parametric trace slicing and monitoring", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "", "authors": []}, {"title": "Centennial Books", "authors": []}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": []}, {"title": " ", "authors": []}, {"title": "ESP: Path-sensitive program verification in polynomial time", "authors": []}, {"title": " ", "authors": []}, {"title": "Typestates for objects", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Software validation via scalable path-sensitive value flow analysis", "authors": []}, {"title": " ", "authors": []}, {"title": "More dynamic object reclassification: Fickle II", "authors": []}, {"title": " ", "authors": []}, {"title": "Residual dynamic typestate analysis: Exploiting static analysis results to reformulate and reduce the cost of dynamic analysis", "authors": []}, {"title": " ", "authors": []}, {"title": "Effective typestate verification in the presence of aliasing", "authors": []}, {"title": " ", "authors": []}, {"title": "Relational queries over program traces", "authors": []}, {"title": " ", "authors": []}, {"title": "Demand interprocedural dataflow analysis", "authors": []}, {"title": " ", "authors": []}, {"title": "Finding bugs is easy", "authors": []}, {"title": " ", "authors": []}, {"title": "An overview of AspectJ", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Reducing configurations to monitor in a software product line", "authors": []}, {"title": "Lecture Notes in Computer Science, Springer", "authors": [" Springer"]}, {"title": "Automating software architecture exploration with M2Aspects", "authors": []}, {"title": " ", "authors": []}, {"title": "Scaling Java points-to analysis using Spark", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "From multi-modal scenarios to code: Compiling LSCs into AspectJ", "authors": []}, {"title": " ", "authors": []}, {"title": "Finding application errors using PQL: A program query language", "authors": []}, {"title": " ", "authors": []}, {"title": "A compilation and optimization model for aspect-oriented programs", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Typestate-like analysis of multiple interacting objects", "authors": []}, {"title": " ", "authors": []}, {"title": "E_cient testing of concurrent programs with abstraction-guided symbolic execution", "authors": []}, {"title": " ", "authors": []}, {"title": "Refinement-based context-sensitive points-to analysis for Java", "authors": []}, {"title": " ", "authors": []}, {"title": "Typestate: A programming language concept for enhancing software reliability", "authors": []}, {"title": " ", "authors": []}]},
{"title": "On a Technique for Transparently Empowering Classical Compiler Optimizations on Multithreaded Code", "time": "June 2012", "keyword": ["Programming Languages and Systems"], "abstract": "A large body of data-flow analyses exists for analyzing and optimizing sequential code. Unfortunately, much of it cannot be directly applied on parallel code, for reasons of correctness. This article presents a technique to automatically, aggressively, yet safely apply sequentially-sound data-flow transformations, \n, on shared-memory programs. The technique is founded on the notion of program references being \u201csiloed\u201d on certain control-flow paths. Intuitively, siloed references are free of interference from other threads within the confines of such paths. Data-flow transformations can, in general, be unblocked on siloed references.\nThe solution has been implemented in a widely used compiler. Results on benchmarks from SPLASH-2 show that performance improvements of up to 41% are possible, with an average improvement of 6% across all the tested programs over all thread counts.\n", "author": [{"name": "Pramod G. Joisha", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Robert S. Schreiber", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Prithviraj Banerjee", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Hans-J. Boehm", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Dhruva R. Chakrabarti", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Pramod G. Joisha", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Robert S. Schreiber", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Prithviraj Banerjee", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Hans-J. Boehm", "affiliation": "Hewlett-Packard Laboratories"}, {"name": "Dhruva R. Chakrabarti", "affiliation": "Hewlett-Packard Laboratories"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "1", "references": [{"title": "Shared memory consistency models: A tutorial", "authors": []}, {"title": " ", "authors": []}, {"title": "Weak ordering: A new definition", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Escape analysis for object-oriented languages: Application to Java", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Foundations of the C++ concurrency memory model", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Removing unnecessary synchronization in Java", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Anomaly detection in concurrent programs", "authors": []}, {"title": "", "authors": [" Los Alamitos", " CA"]}, {"title": "ISO/IEC 9899:1999", "authors": []}, {"title": "Programming Languages---C++ (final draft international standard)", "authors": []}, {"title": "Committee draft: Programming languages---C", "authors": []}, {"title": "Static analysis of low-level synchronization", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Escape analysis for Java", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Effective representation of aliases and indirect memory operations in SSA form", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Dataflow analysis for concurrent programs using datarace detection", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": []}, {"title": " ", "authors": []}, {"title": "Concurrency analysis in the presence of procedures using a data-flow framework", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "GCC 4", "authors": []}, {"title": "Extending object-oriented optimizations for concurrent programs", "authors": []}, {"title": " ", "authors": [" Los Alamitos", " CA"]}, {"title": "Parallelizing programs with recursive data structures", "authors": []}, {"title": " ", "authors": []}, {"title": "Parallel data flow analysis for OpenMP programs", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Monotone data flow analysis frameworks", "authors": []}, {"title": "", "authors": []}, {"title": "Measuring parallel processor performance", "authors": []}, {"title": " ", "authors": []}, {"title": "Parallelism for free: Efficient and optimal bitvector analyses for parallel programs", "authors": []}, {"title": " ", "authors": []}, {"title": "How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": []}, {"title": " ", "authors": []}, {"title": "Concurrent static single assignment form and constant propagation for explicitly parallel programs", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A practical MHP information analysis for concurrent Java programs", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Non-concurrency analysis", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Issues in the optimization of parallel programs", "authors": []}, {"title": "", "authors": [" Pennsylvania State University Press", " University Park", " PA"]}, {"title": "A conservative data flow algorithm for detecting all pairs of statements that may happen in parallel", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "An efficient algorithm for computing MHP information for concurrent Java programs", "authors": []}, {"title": "", "authors": [" New York", " NY"]}, {"title": "Memory SSA: A unified approach for sparsely representing memory operations", "authors": []}, {"title": "", "authors": []}, {"title": "Concurrent SSA form in the presence of mutual exclusion", "authors": []}, {"title": "", "authors": [" Los Alamitos", " CA"]}, {"title": "OpenMP application program interface", "authors": []}, {"title": "IEEE Standard 1003", "authors": []}, {"title": "Extending JML for modular specification and verification of multi-threaded programs", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Software support for speculative loads", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Effective synchronization removal for Java", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Pointer analysis for structured parallel programs", "authors": []}, {"title": " ", "authors": []}, {"title": "Analysis and optimization of explicitly parallel programs using the parallel program graph representation", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Compiler optimization techniques for OpenMP programs", "authors": []}, {"title": "", "authors": []}, {"title": "Program transformations in weak memory models", "authors": [" University of Edinburgh"]}, {"title": "Efficient and correct execution of parallel programs that share memory", "authors": []}, {"title": " ", "authors": []}, {"title": "A new framework for analysis and optimization of shared memory parallel programs", "authors": [" University of Delaware"]}, {"title": "Static single assignment for explicitly parallel programs", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Compiler techniques for high performance sequentially consistent Java programs", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "A general-purpose algorithm for analyzing concurrent programs", "authors": []}, {"title": " ", "authors": []}, {"title": "Intel OpenMP C++/Fortran compiler for hyper-threading technology: Implementation and performance", "authors": []}, {"title": "", "authors": []}, {"title": "Static conflict analysis for multi-threaded object-oriented programs", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Load elimination in the presence of side effects, concurrency and precise exceptions", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "The SPLASH-2 programs: Characterization and methodological considerations", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Optimized lock assignment and allocation: A method for exploiting concurrency among critical sections", "authors": [" University of Delaware"]}]},
{"title": "Structured Communication-Centered Programming for Web Services", "time": "June 2012", "keyword": ["Programming Languages and Systems"], "abstract": "This article relates two different paradigms of descriptions of communication behavior, one focusing on global message flows and another on end-point behaviors, using formal calculi based on session types. The global calculus, which originates from a Web service description language (W3C WS-CDL), describes an interaction scenario from a vantage viewpoint; the end-point calculus, an applied typed \n-calculus, precisely identifies a local behavior of each participant. We explore a theory of end-point projection, by which we can map a global description to its end-point counterparts preserving types and dynamics. Three principles of well-structured description and the type structures play a fundamental role in the theory.\n", "author": [{"name": "Marco Carbone", "affiliation": "IT University of Copenhagen"}, {"name": "Kohei Honda", "affiliation": "Queen Mary, University of London"}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London"}, {"name": "Marco Carbone", "affiliation": "IT University of Copenhagen"}, {"name": "Kohei Honda", "affiliation": "Queen Mary, University of London"}, {"name": "Nobuko Yoshida", "affiliation": "Imperial College London"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "65", "references": [{"title": "Mobile values, new names, and secure communication", "authors": [" new names"]}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "A calculus for cryptographic protocols: The SPI calculus", "authors": []}, {"title": " ", "authors": []}, {"title": "Realizability and verification of MSC graphs", "authors": []}, {"title": " ", "authors": []}, {"title": "Reo: A channel-based coordination model for component composition", "authors": []}, {"title": " ", "authors": []}, {"title": "Specifying internet applications with DiCons", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Modeling heterogeneous real-time components in bip", "authors": []}, {"title": " ", "authors": []}, {"title": "Modern concurrency abstractions for C#", "authors": []}, {"title": " ", "authors": []}, {"title": "Sequentiality and the ", "authors": []}, {"title": "In ", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Verified reference implementations of WS-security protocols", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Cryptographic protocol synthesis and verification for multiparty sessions", "authors": []}, {"title": " ", "authors": []}, {"title": "Correspondence assertions for process synchronization in concurrent communications", "authors": []}, {"title": " ", "authors": []}, {"title": "A theory for strong service compliance", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A formal semantics for protocol narrations", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A semantic and methodological essence of message sequence charts", "authors": []}, {"title": " ", "authors": []}, {"title": "Interaction and realizability", "authors": []}, {"title": " ", "authors": []}, {"title": "A formal model of services", "authors": []}, {"title": " ", "authors": []}, {"title": "Choreography and orchestration conformance for system design", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Conversation types", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "A calculus for trust management", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "A calculus of global interaction based on session types", "authors": []}, {"title": "Elsevier Science Publishers, Amsterdam, The Netherlands", "authors": [" Amsterdam", " The Netherl"]}, {"title": "A theoretical basis of communication-centred concurrent programming", "authors": []}, {"title": "Structured communication-centred programming for web services", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A theory of contracts for web services", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Types as models: model checking message-passing programs", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Secure implementations for typed session abstractions", "authors": []}, {"title": " ", "authors": []}, {"title": "Full abstraction in a subtyped pi-calculus with linear types", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Sessions and session types: An overview", "authors": []}, {"title": "", "authors": []}, {"title": "Session types for object-oriented languages", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Language support for fast and reliable message-based communication in singularity OS", "authors": []}, {"title": " ", "authors": []}, {"title": "LTSA WS-engineer home page", "authors": []}, {"title": "Conversation protocols: A formalism for specification and verification of reactive electronic services", "authors": []}, {"title": " ", "authors": []}, {"title": "Realizability of conversation protocols with message contents", "authors": []}, {"title": "", "authors": []}, {"title": "Subtyping for session types in the pi calculus", "authors": []}, {"title": " ", "authors": []}, {"title": "Validating a web service security abstraction by typing", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "SOCK: A calculus for service oriented computing", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "The faithfulness of abstract protocol analysis: message authentication", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Resource access control in systems of mobile agents", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "A theory of regular MSC languages", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Prentice Hall, UK", "authors": [" UK"]}, {"title": "Composing processes", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Language primitives and type disciplines for structured communication-based programming", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Web Services, mobile processes and types", "authors": []}, {"title": "", "authors": []}, {"title": "Multiparty asynchronous session types", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Web services flow language (WSFL 1", "authors": []}, {"title": "WebSphere MQ workflow", "authors": []}, {"title": "A generic type system for the pi-calculus", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Recommendation Z", "authors": []}, {"title": "Linear types and ", "authors": []}, {"title": "In ", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Smooth orchestrators", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "XLANG: Web services for business process design", "authors": []}, {"title": "The polyadic ", "authors": []}, {"title": "In ", "authors": []}, {"title": "", "authors": [" Springe"]}, {"title": "A calculus of mobile processes, I and II", "authors": []}, {"title": " ", "authors": []}, {"title": "Using encryption for authentication in large networks of computers", "authors": []}, {"title": " ", "authors": []}, {"title": "Conversation with Steve Ross-Talbot", "authors": []}, {"title": "Unified modelling language, version 2", "authors": []}, {"title": "http://www", "authors": []}, {"title": "", "authors": []}, {"title": "MIT Press, Cambridge, MA", "authors": [" Cambridge", " MA"]}, {"title": "Typing and subtyping for mobile processes", "authors": []}, {"title": "", "authors": []}, {"title": "Pict: A programming language based on the pi-calculus", "authors": []}, {"title": "", "authors": [" MIT Press", " Cambridge", " MA"]}, {"title": "Towards the theoretical foundation of choreography", "authors": []}, {"title": " ", "authors": []}, {"title": "Conformance checking for models of asynchronous message passing software", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "The name discipline of uniform receptiveness", "authors": []}, {"title": " ", "authors": []}, {"title": "An interaction-based language and its typing system", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Inheritance of interorganizational workflows: How to agree to disagree without loosing control? ", "authors": []}, {"title": " ", "authors": []}, {"title": "Session types for functional multithreading", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "The conversation calculus: A model of service-oriented computation", "authors": []}, {"title": "", "authors": []}, {"title": "Web services choreography description language version 1", "authors": []}, {"title": "Workflow management coalition", "authors": []}, {"title": "Graph types for monadic mobile processes", "authors": []}, {"title": "", "authors": []}, {"title": "Language primitives and type discipline for structured communication-based programming revisited: Two systems for higher-order session communication", "authors": []}, {"title": " ", "authors": []}, {"title": "Strong normalisation in the ", "authors": []}, {"title": "", "authors": ["-calculus"]}, {"title": " ", "authors": []}]},
{"title": "Reasoning about Web Applications: An Operational Semantics for HOP", "time": "June 2012", "keyword": ["Programming Languages and Systems"], "abstract": "We propose a small-step operational semantics to support reasoning about Web applications written in the multitier language HOP. The semantics covers both server side and client side computations, as well as their interactions, and includes creation of Web services, distributed client-server communications, concurrent evaluation of service requests at server side, elaboration of HTML documents, DOM operations, evaluation of script nodes in HTML documents and actions from HTML pages at client side. We also model the browser same origin policy (SOP) in the semantics. We propose a safety property by which programs do not get stuck due to a violation of the SOP and a type system to enforce it.\n", "author": [{"name": "G\u00e9rard Boudol", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Zhengqin Luo", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Tamara Rezk", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Manuel Serrano", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "G\u00e9rard Boudol", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Zhengqin Luo", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Tamara Rezk", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}, {"name": "Manuel Serrano", "affiliation": "INRIA Sophia Antipolis-Mediterran\u00e9e"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "7", "references": [{"title": "The chemical abstract machine", "authors": []}, {"title": " ", "authors": [" New York"]}, {"title": "Featherweight Firefox: Formalizing the core of a web browser", "authors": []}, {"title": "USENIX Association, Berkeley, CA", "authors": [" Berkeley", " CA"]}, {"title": "Towards reasoning for web applications: An operational semantics for hop", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "Ur: Statically-typed metaprogramming with type-level record computation", "authors": []}, {"title": "ACM", "authors": []}, {"title": "Building secure web applications with automatic partitioning", "authors": []}, {"title": " ", "authors": []}, {"title": "Links: Web programming without tiers", "authors": []}, {"title": "Springer", "authors": []}, {"title": "The rpc calculus", "authors": []}, {"title": " ", "authors": [" New York", " NY"]}, {"title": "The revised report on the syntactic theories of sequential control and state", "authors": []}, {"title": " ", "authors": []}, {"title": "DOM: Towards a formal specification", "authors": []}, {"title": "ACM Press", "authors": []}, {"title": "Local Hoare reasoning about DOM", "authors": []}, {"title": " ", "authors": []}, {"title": "Modeling web interactions", "authors": []}, {"title": "", "authors": [" Springer"]}, {"title": "The essence of JavaScript", "authors": []}, {"title": "Springer", "authors": []}, {"title": "Document Object Model (DOM) level 2 core specification", "authors": [" W3C"]}, {"title": "Revised report on the algorithmic language scheme", "authors": []}, {"title": " ", "authors": []}, {"title": "HOP Client-side compilation", "authors": []}, {"title": "T", "authors": []}, {"title": "An operational semantics for JavaScript", "authors": []}, {"title": "Springer", "authors": []}, {"title": "Automatically restructuring programs for the web", "authors": []}, {"title": " ", "authors": []}, {"title": "The inuence of browsers on evaluators", "authors": []}, {"title": " ", "authors": []}, {"title": "HOP, a fast server for the di_use web", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "HOP, a language for programming the web 2", "authors": []}, {"title": "ACM, New York, NY", "authors": [" New York"]}, {"title": "A multi-tier semantics for HOP", "authors": []}, {"title": " ", "authors": []}, {"title": "A syntactic approach to type soundness", "authors": []}, {"title": " ", "authors": []}]},
{"title": "Equivalence checking of static affine programs using widening to handle recurrences", "time": "November 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Designers often apply manual or semi-automatic loop and data transformations on array- and loop-intensive programs to improve performance. It is crucial that such transformations preserve the functionality of the program. This article presents an automatic method for constructing equivalence proofs for the class of static affine programs. The equivalence checking is performed on a dependence graph abstraction and uses a new approach based on widening to find the proper induction hypotheses for reasoning about recurrences. Unlike transitive-closure-based approaches, this widening approach can also handle nonuniform recurrences. The implementation is publicly available and is the first of its kind to fully support commutative operations.\n", "author": [{"name": "Sven Verdoolaege", "affiliation": "Katholieke Universiteit Leuven, Belgium"}, {"name": "Gerda Janssens", "affiliation": "Katholieke Universiteit Leuven, Belgium"}, {"name": "Maurice Bruynooghe", "affiliation": "Katholieke Universiteit Leuven, Belgium"}, {"name": "Sven Verdoolaege", "affiliation": "Katholieke Universiteit Leuven, Belgium"}, {"name": "Gerda Janssens", "affiliation": "Katholieke Universiteit Leuven, Belgium"}, {"name": "Maurice Bruynooghe", "affiliation": "Katholieke Universiteit Leuven, Belgium"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "31", "references": [{"title": "Data-Access optimization of embedded systems through selective inlining transformation", "authors": ["Absar", " Marchal"]}, {"title": "On the recognition of algorithm templates", "authors": ["Alias"]}, {"title": "CVC3", "authors": ["Barrett"]}, {"title": "W", "authors": [" International Conference on Computer Aided Verification (CA"]}, {"title": "Fuzzy array dataflow analysis", "authors": ["Barthou", " Collard"]}, {"title": "On the equivalence of two systems of affine recurrence equations", "authors": ["Barthou", " Feautrier"]}, {"title": "Code generation in the polyhedral model is easier than you think", "authors": ["Bastoul"]}, {"title": "Data Access and Storage Management for Embedded Programmable Processors", "authors": ["Catthoor", " Danckaert", " Kulkarni", " Brockmeyer", " Kjeldsberg", " Van Achteren"]}, {"title": "Omega+ library", "authors": ["Chen"]}, {"title": "An implementation of the generalized basis reduction algorithm for integer programming", "authors": ["Cook", " Rutherford", " Scarf"]}, {"title": "Comparing the Galois connection and widening/narrowing approaches to abstract interpretation", "authors": ["Cousot"]}, {"title": "Array expansion", "authors": ["Feautrier"]}, {"title": "Dataflow analysis of array and scalar references", "authors": ["Feautrier"]}, {"title": "The Data Parallel Programming Model", "authors": ["Feautrier"]}, {"title": "Array recovery and high-level transformations for DSP applications", "authors": ["Franke"]}, {"title": "Requirements for constraint solvers in verification of data-intensive embedded system software", "authors": [" Bruynooghe", " Janssens"]}, {"title": "Inference rules for proving the equivalence of recursive procedures", "authors": ["Godlin"]}, {"title": "Regression verification", "authors": ["Godlin"]}, {"title": "Semantical interprocedural parallelisation: An overview of the PIPS project", "authors": ["Irigoin", " Jouvelot"]}, {"title": "Affine relationships among variables of a program", "authors": ["Karr"]}, {"title": "Computer-Aided Reasoning: An Approach", "authors": ["Kaufmann", " Moore"]}, {"title": "The Omega library", "authors": ["Kelly", " Maslov", " Pugh", " Rosser", " Shpeisman"]}, {"title": "Transitive closure of infinite graphs and its applications", "authors": ["Kelly", " Pugh", " Rosser"]}, {"title": "Proving optimizations correct using parameterized program equivalence", "authors": ["Kundu", " Tatlock"]}, {"title": "Introducing VAUCANSON", "authors": ["Lombardy", " R\u00e9gis-Gianas"]}, {"title": "Uniformization of affine dependance programs for parallel embedded system design", "authors": ["Manjunathaiah", " Megson", " Rajopadhye"]}, {"title": "Fractal symbolic analysis", "authors": ["Mateev", " Menon"]}, {"title": "Formal equivalence checking for loop optimization in C programs without unrolling", "authors": ["Matsumoto", " Seto"]}, {"title": "Precise interprocedural analysis through linear algebra", "authors": ["M\u00fcller-Olm"]}, {"title": "Translation validation for an optimizing compiler", "authors": ["Necula"]}, {"title": "Efficient automatic verification of loop and data-flow transformations by functional equivalence checking", "authors": ["Shashidhar"]}, {"title": "Verification of source code transformations by program equivalence checking", "authors": ["Shashidhar", " Bruynooghe", " Catthoor"]}, {"title": "An efficient algorithm for pointer-to-array access conversion for compiling and optimizing DSP applications", "authors": ["van Engelen"]}, {"title": "isl: An integer set library for the polyhedral model", "authors": ["Verdoolaege"]}, {"title": "Algorithms for weighted counting over parametric polytopes: A survey and a practical comparison", "authors": ["Verdoolaege"]}, {"title": "Transitive closures of affine integer tuple relations and their overapproximations", "authors": ["Verdoolaege", " Cohen"]}, {"title": "Polyhedral extraction tool", "authors": ["Verdoolaege"]}, {"title": "Equivalence checking of static affine programs using widening to handle recurrences", "authors": ["Verdoolaege", " Janssens"]}, {"title": "Experience with widening based equivalence checking in realistic multimedia systems", "authors": ["Verdoolaege", " Palkovic", " Bruynooghe", " Janssens"]}, {"title": "Advanced Memory Optimization Techniques for Low-Power Embedded Processors", "authors": ["Verma"]}, {"title": "Translation and run-time validation of loop transformations", "authors": ["Zuck", " Pnueli", " Goldberg", " Barrett", " Fang"]}]},
{"title": "Essential AOP: The a calculus", "time": "November 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Aspect-oriented programming (AOP) has produced interesting language designs, but also ad hoc semantics that needs clarification. We contribute to this clarification with a calculus that models essential AOP, both simpler and more general than existing formalizations. In AOP, \n may intercept method invocations, and \n executes the suspended call. Proceed is an ad hoc mechanism, only usable inside advice bodies. Many pointcut mechanisms, for example, wildcards, also lack regularity. We model proceed using first-class closures, and shift complexity from pointcuts to ordinary object-oriented code. Two well-known pointcut categories, \n and \n, are commonly considered similar. We formally expose their differences, and resolve the associated soundness problem. Our calculus includes \n, an intuitive and concise alternative to explicit type variables that allows advice to be polymorphic over intercepted methods. We use calculus parameters to cover type safety for a wide design space of other features. Type soundness is verified in Coq.\n", "author": [{"name": "Bruno De Fraine", "affiliation": "Vrije Universiteit Brussel, Brussel, Belgium"}, {"name": "Erik Ernst", "affiliation": "Aarhus Universitet, Aarus C Denmark"}, {"name": "Mario S\u00fcdholt", "affiliation": "\u00c9cole des Mines de Nantes, Nantes cedex 3 France"}, {"name": "Bruno De Fraine", "affiliation": "Vrije Universiteit Brussel, Brussel, Belgium"}, {"name": "Erik Ernst", "affiliation": "Aarhus Universitet, Aarus C Denmark"}, {"name": "Mario S\u00fcdholt", "affiliation": "\u00c9cole des Mines de Nantes, Nantes cedex 3 France"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "0", "references": [{"title": "Open modules: Modular reasoning about advice", "authors": ["Aldrich"]}, {"title": "Adding trace matching with free variables to AspectJ", "authors": ["Allan", " Avgustinov", " Christensen", " Hendren", " Kuzins", " Lhot\u00e1k", " de Moor", " Sereni", " Sittampalam"]}, {"title": "Engineering formal metatheory", "authors": ["Aydemir", " Chargu\u00e9raud", " Pierce", " Pollack"]}, {"title": "Interactive Theorem Proving and Program Development\u2014Coq'Art: The Calculus of Inductive Constructions", "authors": ["Bertot"]}, {"title": "Closure joinpoints: Block joinpoints without surprises", "authors": ["Bodden"]}, {"title": "Survey of aspect-oriented languages and execution models", "authors": ["Brichau", " Eds"]}, {"title": "&mu;ABC: A minimal aspect calculus", "authors": ["Bruns", " Jagadeesan", " Jeffrey"]}, {"title": "JBoss Aspect-Oriented Programming", "authors": ["Burke"]}, {"title": "MiniMAO1: An imperative core language for studying aspect-oriented reasoning", "authors": ["Clifton"]}, {"title": "Language facilities for the deployment of reusable aspects", "authors": ["De Fraine"]}, {"title": "Essential AOP: The A calculus", "authors": ["De Fraine", " Ernst"]}, {"title": "Coq source for proofs of the results in this article, version 2011-10-19", "authors": ["De Fraine", " Ernst"]}, {"title": "StrongAspectJ: Flexible and safe pointcut/advice bindings", "authors": ["De Fraine", " S\u00fcdholt"]}, {"title": "A framework for the detection and resolution of aspect interactions", "authors": ["Douence", " Fradet"]}, {"title": "Composition, reuse and interaction analysis of stateful aspects", "authors": ["Douence", " Fradet"]}, {"title": "A formal definition of crosscuts", "authors": ["Douence", " Motelet"]}, {"title": "Aspects and polymorphism in AspectJ", "authors": ["Ernst"]}, {"title": "Arranging language features for pattern-based crosscuts", "authors": ["Gybels"]}, {"title": "Featherweight Java: A minimal core calculus for Java and GJ", "authors": ["Igarashi", " Pierce"]}, {"title": "Typed parametric polymorphism for aspects", "authors": ["Jagadeesan", " Jeffrey"]}, {"title": "Spring Java/J2EE application framework", "authors": ["Johnson"]}, {"title": "An overview of AspectJ", "authors": ["Kiczales", " Hilsdale", " Hugunin", " Kersten", " Palm"]}, {"title": "Aspect-oriented programming", "authors": ["Kiczales", " Lamping", " Mendhekar", " Maeda", " Lopes", " Loingtier"]}, {"title": "A semantical approach to method-call interception", "authors": ["L\u00e4mmel"]}, {"title": "A type-theoretic interpretation of pointcuts and advice", "authors": ["Ligatti", " Walker"]}, {"title": "Aspectual collaborations: Combining modules and aspects", "authors": ["Lorenz", " Lieberherr"]}, {"title": "Adaptive plug-and-play components for evolutionary software development", "authors": ["Mezini"]}, {"title": "Type inference with constrained types", "authors": ["Odersky", " Sulzmann"]}, {"title": "Expressive pointcuts for increased modularity", "authors": ["Ostermann", " Mezini"]}, {"title": "A classification system and analysis for aspect-oriented programs", "authors": ["Rinard", " Salcianu"]}, {"title": "Association aspects", "authors": ["Sakurai", " Masuhara", " Ubayashi", " Matsuura"]}, {"title": "JAsCo: An aspect-oriented approach tailored for component based software development", "authors": ["Suv\u00e9e", " V"]}, {"title": "Aspectual Caml: An aspect-oriented functional language", "authors": ["Tatsuzawa", " Masuhara"]}, {"title": "Adding wildcards to the Java programming language", "authors": ["Torgersen", " Hansen", " Ernst", " von der Ah\u00e9", " Bracha"]}, {"title": "Implementing protocols via declarative event patterns", "authors": ["Walker"]}, {"title": "Understanding java stack inspection", "authors": ["Wallach"]}, {"title": "A semantics for advice and dynamic join points in aspect-oriented programming", "authors": [" Kiczales"]}]},
{"title": "Space overhead bounds for dynamic memory management with partial compaction", "time": "November 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Dynamic memory allocation is ubiquitous in today's runtime environments. Allocation and deallocation of objects during program execution may cause fragmentation and foil the program's ability to allocate objects. Robson [1971] has shown that a worst-case scenario can create a space overhead within a factor of log \n of the space that is actually required by the program, where \n is the size of the largest possible object. Compaction can eliminate fragmentation, but is too costly to be run frequently. Many runtime systems employ partial compaction, in which only a small fraction of the allocated objects are moved. Partial compaction reduces some of the existing fragmentation at an acceptable cost. In this article we study the effectiveness of partial compaction and provide the first rigorous lower and upper bounds on its effectiveness in reducing fragmentation at a low cost.\n", "author": [{"name": "Anna Bendersky", "affiliation": "Technion, Haifa, Israel"}, {"name": "Erez Petrank", "affiliation": "Technion, Haifa, Israel"}, {"name": "Anna Bendersky", "affiliation": "Technion, Haifa, Israel"}, {"name": "Erez Petrank", "affiliation": "Technion, Haifa, Israel"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "13", "references": [{"title": "An efficient parallel heap compaction algorithm", "authors": ["Abuaiadh", " Ossia", " Petrank"]}, {"title": "Parametric inference of memory requirements for garbage collected languages", "authors": ["Albert", " Genaim"]}, {"title": "Live heap space analysis for languages with garbage collection", "authors": ["Albert", " Genaim"]}, {"title": "A real-time garbage collector with low overhead and consistent utilization", "authors": ["Bacon", " Cheng"]}, {"title": "An algorithm for parallel incremental compaction", "authors": ["Ben-Yitzhak", " Goft", " Kolodner", " Kuiper"]}, {"title": "Bounding space usage of conservative garbage collectors", "authors": ["Boehm"]}, {"title": "The space cost of lazy reference counting", "authors": ["Boehm"]}, {"title": "Garbage collection in an uncooperative environment", "authors": ["Boehm"]}, {"title": "The Pauseless GC algorithm", "authors": ["Click", " Tene"]}, {"title": "Garbage-First garbage collection", "authors": ["Detlefs", " Flood", " Heller"]}, {"title": "Implementing an on-the-fly garbage collector for Java", "authors": ["Domani", " Kolodner", " Lewis", " Salant", " Barabash", " Lahan", " Petrank", " Yanover"]}, {"title": "The Garbage Collection Handbook: The Art of Automatic Memory Management", "authors": ["Jones", " Hosking"]}, {"title": "The Compressor: Concurrent, incremental and parallel compaction", "authors": ["Kermany"]}, {"title": "Proceedings of the 8th International Symposium on Memory Management", "authors": ["Kolodner", " Eds"]}, {"title": "Live memory analysis for garbage collection in embedded systems", "authors": ["Persson"]}, {"title": "The hardness of cache conscious data placement", "authors": ["Petrank"]}, {"title": "Stopless: A real-time garbage collector for multiprocessors", "authors": ["Pizlo", " Frampton", " Petrank"]}, {"title": "A study of concurrent real-time garbage collectors", "authors": ["Pizlo", " Petrank"]}, {"title": "Proceedings of the 29th Annual ACM Symposium on Principles of Programming Languages", "authors": ["POPL"]}, {"title": "An estimate of the store size necessary for dynamic storage allocation", "authors": ["Robson"]}, {"title": "Bounds for some functions concerning dynamic storage allocation", "authors": ["Robson"]}, {"title": "Parametric heap usage analysis for functional programs", "authors": ["Unnikrishnan"]}, {"title": "Automatic accurate live memory analysis for garbage-collected languages", "authors": ["Unnikrishnan", " Stoller"]}, {"title": "Dynamic storage allocation: A survey and critical review", "authors": ["Wilson", " Johnstone", " Neely"]}]},
{"title": "Multivariate amortized resource analysis", "time": "November 2012", "keyword": ["Programming Languages and Systems"], "abstract": "We study the problem of automatically analyzing the worst-case resource usage of procedures with several arguments. Existing automatic analyses based on amortization or sized types bound the resource usage or result size of such a procedure by a sum of unary functions of the sizes of the arguments.\nIn this article we generalize this to arbitrary multivariate polynomial functions thus allowing bounds of the form \n which had to be grossly overestimated by \n + \n before. Our framework even encompasses bounds like \u2211\n where the \n are the sizes of the entries of a list of length \n.\nThis allows us for the first time to derive useful resource bounds for operations on matrices that are represented as lists of lists and to considerably improve bounds on other superlinear operations on lists such as longest common subsequence and removal of duplicates from lists of lists. Furthermore, resource bounds are now closed under composition which improves accuracy of the analysis of composed programs when some or all of the components exhibit superlinear resource or size behavior.\nThe analysis is based on a novel multivariate amortized resource analysis. We present it in form of a type system for a simple first-order functional language with lists and trees, prove soundness, and describe automatic type inference based on linear programming.\nWe have experimentally validated the automatic analysis on a wide range of examples from functional programming with lists and trees. The obtained bounds were compared with actual resource consumption. All bounds were asymptotically tight, and the constants were close or even identical to the optimal ones.\n", "author": [{"name": "Jan Hoffmann", "affiliation": "Yale University, New Haven, CT"}, {"name": "Klaus Aehlig", "affiliation": "Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Martin Hofmann", "affiliation": "Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Jan Hoffmann", "affiliation": "Yale University, New Haven, CT"}, {"name": "Klaus Aehlig", "affiliation": "Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen, Germany"}, {"name": "Martin Hofmann", "affiliation": "Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen, Germany"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "73", "references": [{"title": "Asymptotic resource usage bounds", "authors": ["Albert", " Alonso", " Arenas", " Genaim"]}, {"title": "Termination and cost analysis with COSTA and its user interfaces", "authors": ["Albert", " Arenas", " Genaim", " G\u00f3mez-Zamalloa", " Puebla", " Ram\u00edrez", " Rom\u00e1n"]}, {"title": "Automatic inference of upper bounds for recurrence relations in cost analysis", "authors": ["Albert", " Arenas", " Genaim"]}, {"title": "Closed-form upper bounds in static cost analysis", "authors": ["Albert", " Arenas", " Genaim"]}, {"title": "Cost analysis of java bytecode", "authors": ["Albert", " Arenas", " Genaim", " Puebla"]}, {"title": "Parametric inference of memory requirements for garbage collected languages", "authors": ["Albert", " Genaim"]}, {"title": "More precise yet widely applicable cost analysis", "authors": ["Albert", " Genaim"]}, {"title": "Precise and efficient parametric path analysis", "authors": ["Althaus", " Altmeyer"]}, {"title": "Parametric timing analysis for complex architectures", "authors": ["Altmeyer", " Humbert", " Lisper"]}, {"title": "Amortised resource analysis with separation logic", "authors": ["Atkey"]}, {"title": "Automated complexity analysis of nuprl extracted programs", "authors": ["Benzinger"]}, {"title": "Automated higher-order complexity analysis", "authors": ["Benzinger"]}, {"title": "Automatic certification of heap consumption", "authors": ["Beringer", " Hofmann", " Momigliano"]}, {"title": "Parametric prediction of heap memory requirements", "authors": ["Braberman", " Fern\u00e1ndez", " Garbervetsky"]}, {"title": "An efficient algorithm for parametric WCET calculation", "authors": ["Bygde", " Ermedahl"]}, {"title": "Amortised memory analysis using the depth of data structures", "authors": ["Campbell"]}, {"title": "Calculating sized types", "authors": ["Chin"]}, {"title": "Analysing memory resource bounds for low-level programs", "authors": ["Chin", " Nguyen", " Popeea"]}, {"title": "Symbolic polynomial maximization over convex sets and its application to memory requirement estimation", "authors": ["Clauss", " Fern\u00e1ndez", " Garbervetsky"]}, {"title": "Finding heap-bounds for hardware synthesis", "authors": ["Cook", " Gupta", " Magill", " Rybalchenko", " Simsa", " Singh"]}, {"title": "Inductive definitions, semantics and abstract interpretations", "authors": ["Cousot"]}, {"title": "Resource bound certification", "authors": ["Crary"]}, {"title": "Lightweight semiformal time complexity analysis for purely functional data structures", "authors": ["Danielsson"]}, {"title": "Cost analysis of logic programs", "authors": ["Debray"]}, {"title": "Automatic average-case analysis of algorithms", "authors": ["Flajolet", " Salvy"]}, {"title": "Cost recurrences for DML programs", "authors": ["Grobauer"]}, {"title": "A numerical abstract domain based on expression abstraction and max operator with application in timing analysis", "authors": ["Gulavani"]}, {"title": "Control-flow refinement and progress invariants for bound analysis", "authors": ["Gulwani", " Jain"]}, {"title": "SPEED: Precise and efficient static estimation of program computational complexity", "authors": ["Gulwani", " Mehra"]}, {"title": "The reachability-bound problem", "authors": ["Gulwani"]}, {"title": "Hume: A domain-specific language for real-time embedded systems", "authors": ["Hammond"]}, {"title": "Automating program analysis", "authors": ["Hickey"]}, {"title": "Types with potential: Polynomial resource bounds via automatic amortized analysis", "authors": ["Hoffmann"]}, {"title": "Multivariate amortized resource analysis", "authors": ["Hoffmann", " Aehlig"]}, {"title": "Amortized resource analysis with polymorphic recursion and partial big-step operational semantics", "authors": ["Hoffmann"]}, {"title": "Amortized resource analysis with polynomial potential", "authors": ["Hoffmann"]}, {"title": "A type system for bounded space and functional in-place update--extended abstract", "authors": ["Hofmann"]}, {"title": "Static prediction of heap space usage for first-order functional programs", "authors": ["Hofmann"]}, {"title": "Type-based amortised heap-space analysis", "authors": ["Hofmann"]}, {"title": "Efficient type-checking for amortised heap-space analysis", "authors": ["Hofmann"]}, {"title": "Recursion and dynamic data-structures in bounded space: Towards embedded ML programming", "authors": ["Hughes"]}, {"title": "Proving the correctness of reactive systems using sized types", "authors": ["Hughes", " Pareto"]}, {"title": "Static determination of quantitative resource usage for higher-order programs", "authors": ["Jost", " Hammond", " Loidl"]}, {"title": "Carbon credits for resource-bounded computations using amortised analysis", "authors": ["Jost", " Loidl", " Hammond", " Scaife"]}, {"title": "Coinductive big-step operational semantics", "authors": ["Leroy"]}, {"title": "Fully automatic, parametric worst-case execution time analysis", "authors": ["Lisper"]}, {"title": "ACE: An automatic complexity evaluator", "authors": ["M\u00e9tayer"]}, {"title": "Advanced Topics in Types and Programming Languages", "authors": ["Pierce"]}, {"title": "Formalizing the analysis of algorithms", "authors": ["Ramshaw"]}, {"title": "Automatic complexity analysis", "authors": ["Rosendahl"]}, {"title": "Polynomial size analysis of first-order functions", "authors": ["Shkaravska", " van Kesteren"]}, {"title": "Enumerative Combinatorics Vol", "authors": ["Stanley"]}, {"title": "Generating heap-bounded programs in a functional setting", "authors": ["Taha", " Ellner"]}, {"title": "Amortized computational complexity", "authors": ["Tarjan"]}, {"title": "Space cost analysis using sized types", "authors": ["Vasconcelos"]}, {"title": "Mechanical program analysis", "authors": ["Wegbreit"]}, {"title": "The worst-case execution-time problem -- Overview of methods and survey of tools", "authors": ["Wilhelm", " Engblom", " Ermedahl", " Holsti", " Thesing", " Whalley", " Bernat", " Ferdin", " Heckmann", " Mitra", " Mueller", " Puaut", " Puschner", " Staschulat"]}]},
{"title": "Natural and Flexible Error Recovery for Generated Modular Language Environments", "time": "December 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Integrated Development Environments (IDEs) increase programmer productivity, providing rapid, interactive feedback based on the syntax and semantics of a language. Unlike conventional parsing algorithms, scannerless generalized-LR parsing supports the full set of context-free grammars, which is closed under composition, and hence can parse languages composed from separate grammar modules. To apply this algorithm in an interactive environment, this article introduces a novel error recovery mechanism. Our approach is language independent, and relies on automatic derivation of recovery rules from grammars. By taking layout information into consideration it can efficiently suggest natural recovery suggestions.\n", "author": [{"name": "Maartje de Jonge", "affiliation": "Technical University Delft"}, {"name": "Lennart C. L. Kats", "affiliation": "Technical University Delft"}, {"name": "Eelco Visser", "affiliation": "Technical University Delft"}, {"name": "Emma S\u00f6derberg", "affiliation": "Lund University"}, {"name": "Maartje de Jonge", "affiliation": "Technical University Delft"}, {"name": "Lennart C. L. Kats", "affiliation": "Technical University Delft"}, {"name": "Eelco Visser", "affiliation": "Technical University Delft"}, {"name": "Emma S\u00f6derberg", "affiliation": "Lund University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "15", "references": [{"title": "Hierarchic syntax error repair for lr grammars", "authors": []}, {"title": "", "authors": [" 231--258"]}, {"title": "Concrete syntax for objects: Domain-Specific language embedding and assimilation without restrictions", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Declarative, formal, and extensible syntax definition for AspectJ", "authors": [" formal"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Preventing injection attacks with syntax embeddings", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Stratego/XT 0", "authors": []}, {"title": " ", "authors": [" 1--2"]}, {"title": "Preventing injection attacks with syntax embeddings", "authors": []}, {"title": " ", "authors": []}, {"title": "A practical method for lr and ll syntactic error diagnosis and recovery", "authors": []}, {"title": " ", "authors": []}, {"title": "Repairing syntax errors in lr-based parsers", "authors": []}, {"title": "Australian Computer Society, 17--22", "authors": [" CRPIT Series", " vol"]}, {"title": "A practical method for constructing efficient lalr(k) parsers with automatic error recovery", "authors": []}, {"title": "IMP: A meta-tooling platform for creating language-specific ides in Eclipse", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Repairing syntax errors in lr parsers", "authors": []}, {"title": " ", "authors": []}, {"title": "Automated evaluation of syntax error recovery", "authors": [" Delft University of Technology", " Software Engineering Research Group", " Delft", " The Netherl"]}, {"title": "Natural and flexible error recovery for generated parsers", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Comparison of syntactic error handling in lr parsers", "authors": []}, {"title": " ", "authors": []}, {"title": "Traits: A mechanism for fine-grained reuse", "authors": []}, {"title": " ", "authors": []}, {"title": "oAW xText: A framework for textual dsls", "authors": []}, {"title": "", "authors": []}, {"title": "Efficient ll(1) error correction and recovery using only insertions", "authors": []}, {"title": "", "authors": []}, {"title": "Packrat parsing: Simple, powerful, lazy, linear time", "authors": [" powerful", " lazy"]}, {"title": " ", "authors": []}, {"title": "Language workbenches: The killer-app for domain specific languages? http://martinfowler", "authors": []}, {"title": "PostIntelliJ", "authors": []}, {"title": "Better extensibility through modular syntax", "authors": []}, {"title": " ", "authors": []}, {"title": "Monticore: A framework for the development of textual domain specific languages", "authors": []}, {"title": " ", "authors": []}, {"title": "The syntax definition formalism sdf", "authors": []}, {"title": " ", "authors": [" 11"]}, {"title": "Derivation and refinement of textual syntax for models", "authors": []}, {"title": " ", "authors": []}, {"title": "Generalised parsing: Some costs", "authors": [" 89--103"]}, {"title": "TCS: A dsl for the specification of textual concrete syntaxes in model engineering", "authors": []}, {"title": " ", "authors": [" New York"]}, {"title": "The Spoofax language workbench: Rules for declarative specification of languages and ides", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Mixing source and bytecode: A case for compilation by normalization", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Providing rapid feedback in generated modular language environments", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Decorated attribute grammars: Attribute evaluation meets strategic programming", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science Series", " vol"]}, {"title": "Domain-specific languages for composable editor plugins", "authors": []}, {"title": " ", "authors": [" vol"]}, {"title": "Pure and declarative syntax definition: Paradise lost and regained", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "The permissive grammars project", "authors": []}, {"title": "Aspect-oriented programming", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Deriving tolerant grammars from a base-line grammar", "authors": []}, {"title": "", "authors": []}, {"title": "Efficient editor generation for compositional dsls in Eclipse", "authors": []}, {"title": "", "authors": []}, {"title": "MontiCore: Modular development of textual domain specific languages", "authors": []}, {"title": "", "authors": [" Lecture Notes in Business Information Processing", " vol"]}, {"title": "Eclipse corner: Abstract syntax tree", "authors": []}, {"title": "GLR*-An efficient noise skipping parsing algorithm for context free grammars", "authors": []}, {"title": "", "authors": []}, {"title": "Automatic correction of syntax errors in programming languages", "authors": [" Ithaca", " NY"]}, {"title": "Determining the extent of lookahead in syntactic error repair", "authors": []}, {"title": " ", "authors": []}, {"title": "Error repair in shift-reduce parsers", "authors": []}, {"title": " ", "authors": []}, {"title": "Generating robust parsers using island grammars", "authors": []}, {"title": "", "authors": []}, {"title": "Lightweight impact analysis using island grammars", "authors": []}, {"title": "", "authors": []}, {"title": "Practical scope recovery using bridge parsing", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Global context recovery: A new strategy for syntactic error recovery by table-drive parsers", "authors": []}, {"title": " ", "authors": []}, {"title": "Ll(*): The foundation of the antlr parser generator", "authors": []}, {"title": " ", "authors": []}, {"title": "ANTLR: A predicated-ll(k) parser generator", "authors": []}, {"title": " ", "authors": []}, {"title": "A forward move algorithm for lr error recovery", "authors": []}, {"title": " ", "authors": [" New York"]}, {"title": "Substring parsing for arbitrary context-free grammars", "authors": []}, {"title": " ", "authors": []}, {"title": "The disambiguation and scannerless parsing of complete character-level grammars for programming languages", "authors": [" Department of Computer Science", " University of Manitoba", " Winnipeg", " Canada"]}, {"title": "Scannerless nslr(1) parsing of programming languages", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Manning", "authors": []}, {"title": "Modular syntax demands verification", "authors": [" Laboratoire I3S", " Universit\u00e9 de Nice-Sophia Antipolis", " France"]}, {"title": "Verifiable composition of deterministic grammars", "authors": []}, {"title": " ", "authors": []}, {"title": "Deterministic, error-correcting combinator parsers", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Robust multilingual parsing using island grammars", "authors": []}, {"title": "", "authors": []}, {"title": "Syntactic error correction in programming languages", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "Syntax error handling in scannerless generalized lr parsers", "authors": [" University of Amsterdam"]}, {"title": "Efficient annotated terms", "authors": []}, {"title": " ", "authors": []}, {"title": "Disambiguation filters for scannerless generalized lr parsers", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Compiling language definitions: The asf+sdf compiler", "authors": []}, {"title": " ", "authors": []}, {"title": "Using the meta-environment for maintenance and renovation", "authors": []}, {"title": " ", "authors": []}, {"title": "Building documentation generators", "authors": []}, {"title": "", "authors": []}, {"title": "A case study in optimizing parsing schemata by disambiguation filters", "authors": []}, {"title": "", "authors": []}, {"title": "Scannerless generalized-lr parsing", "authors": [" Programming Research Group", " University of Amsterdam"]}, {"title": "Syntax definition for language prototyping", "authors": [" University of Amsterdam"]}, {"title": "Meta-Programming with concrete object syntax", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "High-Fidelity c/c++ code transformation", "authors": []}, {"title": " ", "authors": []}]},
{"title": "On the Termination of Integer Loops", "time": "December 2012", "keyword": ["Programming Languages and Systems"], "abstract": "In this article we study the decidability of termination of several variants of simple integer loops, without branching in the loop body and with affine constraints as the loop guard (and possibly a precondition). We show that termination of such loops is undecidable in some cases, in particular, when the body of the loop is expressed by a set of linear inequalities where the coefficients are from Z \u222a {\n} with \n an arbitrary irrational; when the loop is a sequence of instructions, that compute either linear expressions or the step function; and when the loop body is a piecewise linear deterministic update with two pieces. The undecidability result is proven by a reduction from counter programs, whose termination is known to be undecidable. For the common case of integer linear-constraint loops with rational coefficients we have not succeeded in proving either decidability or undecidability of termination, but we show that a Petri net can be simulated with such a loop; this implies some interesting lower bounds. For example, termination for a partially specified input is at least EXPSPACE-hard.\n", "author": [{"name": "Amir M. Ben-Amram", "affiliation": "The Academic College of Tel-Aviv Yaffo"}, {"name": "Samir Genaim", "affiliation": "Complutense University of Madrid"}, {"name": "Abu Naser Masud", "affiliation": "Technical University of Madrid"}, {"name": "Amir M. Ben-Amram", "affiliation": "The Academic College of Tel-Aviv Yaffo"}, {"name": "Samir Genaim", "affiliation": "Complutense University of Madrid"}, {"name": "Abu Naser Masud", "affiliation": "Technical University of Madrid"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "Costa: Design and implementation of a cost and termination analyzer for java bytecode", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A new look at the automatic synthesis of linear ranking functions", "authors": []}, {"title": " ", "authors": []}, {"title": "Size-Change termination with difference constraints", "authors": []}, {"title": " ", "authors": []}, {"title": "Size-Change termination, monotonicity constraints and ranking functions", "authors": []}, {"title": "", "authors": []}, {"title": "Monotonicity constraints for termination in the integer domain", "authors": []}, {"title": "", "authors": []}, {"title": "A SAT-based approach to size change termination with global ranking functions", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Program termination analysis in polynomial time", "authors": []}, {"title": " ", "authors": []}, {"title": "On the termination of integer loops", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Deciding stability and mortality of piecewise affine dynamical systems", "authors": []}, {"title": " ", "authors": []}, {"title": "Deciding conditional termination", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Verification of gap-order constraint abstractions of counter systems", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Termination analysis of integer linear loops", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Termination of integer linear programs", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Termination analysis of logic programs through combination of type-based norms", "authors": []}, {"title": " ", "authors": []}, {"title": "Testing for termination with monotonicity constraints", "authors": []}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Synthesis of linear ranking functions", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Termination proofs for systems code", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Boundedness of reset p/t nets", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Decidability and complexity of Petri net problems -- An introduction", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Decidability issues for Petri nets", "authors": [" BRICS", " Department of Computer Science", " University of Aarhus"]}, {"title": "Automated termination proofs with aprove", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Automated termination proofs for Haskell by term rewriting", "authors": []}, {"title": " ", "authors": []}, {"title": "Decidability questions for Petri nets", "authors": []}, {"title": "Undecidability of bisimilarity for Petri nets and some related problems", "authors": []}, {"title": " ", "authors": []}, {"title": "The undecidability of the generalized Collatz problem", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "The size-change principle for program termination", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Automatic termination analysis of Prolog programs", "authors": []}, {"title": "", "authors": [" MIT Press"]}, {"title": "Termilog: A system for checking termination of queries to logic programs", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "The reachability problem requires exponential space", "authors": [" Yale University"]}, {"title": "Hilbert\u2019s tenth problem: What was done and what is to be done", "authors": []}, {"title": "J", "authors": [" American Mathematical Societ"]}, {"title": "Exact computation with leda_real -- Theory and geometric applications", "authors": []}, {"title": "", "authors": []}, {"title": "Linear algebra in net theory", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Recurrence with affine level mappings is p-time decidable for clp(r)", "authors": []}, {"title": " ", "authors": []}, {"title": "Integer and mixed-integer programming models: General properties", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "Prentice Hall, Upper Saddle River, NJ", "authors": [" Upper Saddle River", " NJ"]}, {"title": "A complete method for the synthesis of linear ranking functions", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "The covering and boundedness problems for vector addition systems", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "EATCS Monographs on Theoretical Computer Science", "authors": []}, {"title": "", "authors": []}, {"title": "Springer", "authors": []}, {"title": "Termination detection in logic programs using argument sizes", "authors": []}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A termination analyzer for java bytecode based on path-length", "authors": []}, {"title": " ", "authors": []}, {"title": "Termination of linear programs", "authors": []}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}]},
{"title": "Mixin\u2019 Up the ML Module System", "time": "April 2013", "keyword": ["Programming Languages and Systems"], "abstract": "ML modules provide hierarchical namespace management, as well as fine-grained control over the propagation of type information, but they do not allow modules to be broken up into mutually recursive, separately compilable components. Mixin modules facilitate recursive linking of separately compiled components, but they are not hierarchically composable and typically do not support type abstraction. We synthesize the complementary advantages of these two mechanisms in a novel module system design we call MixML.\nA MixML module is like an ML structure in which some of the components are specified but not defined. In other words, it unifies the ML structure and signature languages into one. MixML seamlessly integrates hierarchical composition, translucent ML-style data abstraction, and mixin-style recursive linking. Moreover, the design of MixML is clean and minimalist; it emphasizes how all the salient, semantically interesting features of the ML module system (and several proposed extensions to it) can be understood simply as stylized uses of a small set of orthogonal underlying constructs, with mixin composition playing a central role.\nWe provide a declarative type system for MixML, including two important extensions: higher-order modules, and modules as first-class values. We also present a sound and complete, three-pass type-checking algorithm for this system. The operational semantics of MixML is defined by an elaboration translation into an internal core language called LTG---namely, a polymorphic lambda calculus with single-assignment references and recursive type generativity---which employs a linear type and kind system to track definedness of term and type imports.\n", "author": [{"name": "Andreas Rossberg", "affiliation": "Google"}, {"name": "Derek Dreyer", "affiliation": "Max Planck Institute for Software Systems (MPI-SWS)"}, {"name": "Andreas Rossberg", "affiliation": "Google"}, {"name": "Derek Dreyer", "affiliation": "Max Planck Institute for Software Systems (MPI-SWS)"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "12", "references": [{"title": "", "authors": ["Abadi"]}, {"title": "Springer, New York", "authors": [" New York"]}, {"title": "Step-indexed syntactic logical relations for recursive and quantified types", "authors": ["Ahmed"]}, {"title": "Springer", "authors": []}, {"title": "A step-indexed model for substructural state", "authors": ["Ahmed", " Fluet"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "A theory of mixin modules: Basic and derived operators", "authors": ["Ancona"]}, {"title": " ", "authors": []}, {"title": "A calculus of module systems", "authors": ["Ancona"]}, {"title": " ", "authors": []}, {"title": "Mixin modules and computational effects", "authors": ["Ancona", " Fagorzi", " Moggi"]}, {"title": "Springer", "authors": []}, {"title": "An indexed model of recursive types for foundational proof-carrying code", "authors": ["Appel"]}, {"title": " ", "authors": []}, {"title": "Mixin-based inheritance", "authors": ["Bracha"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Modularity meets inheritance", "authors": ["Bracha"]}, {"title": "IEEE", "authors": []}, {"title": "Modules as objects in Newspeak", "authors": ["Bracha", " Ahe", " Bykov", " Kashai", " Maddox"]}, {"title": "ACM Press, New York", "authors": [" New York"]}, {"title": "What is a recursive module? In ", "authors": ["Crary", " Harper"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "A core calculus for Scala type checking", "authors": ["Cremet", " Garillot", " Lenglet"]}, {"title": "Springer", "authors": []}, {"title": "A type system for well-founded recursion", "authors": ["Dreyer"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Understanding and evolving the ML module system", "authors": ["Dreyer"]}, {"title": "Recursive type generativity", "authors": ["Dreyer"]}, {"title": " ", "authors": []}, {"title": "A type system for recursive modules", "authors": ["Dreyer"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Mixin\u2019 up the ML module system", "authors": ["Dreyer"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "A type system for higher-order modules", "authors": ["Dreyer", " Crary"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Modular type classes", "authors": ["Dreyer", " Harper"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Type-safe linking with recursive DLLs and shared libraries", "authors": ["Duggan"]}, {"title": " ", "authors": []}, {"title": "Mixin modules", "authors": ["Duggan"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Units: Cool modules for HOT languages", "authors": ["Flatt"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "", "authors": ["Harper"]}, {"title": "Working draft, Carnegie Mellon University, Pittsburgh, PA", "authors": [" Carnegie Mellon University", " Pittsburgh"]}, {"title": "A type-theoretic approach to higher-order modules with sharing", "authors": ["Harper"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "On the type structure of Standard ML", "authors": ["Harper"]}, {"title": " ", "authors": []}, {"title": "Design considerations for ML-style module systems", "authors": ["Harper"]}, {"title": "C", "authors": [" MIT Press", " Cambridge"]}, {"title": "A type-theoretic interpretation of Standard ML", "authors": ["Harper"]}, {"title": "Plotkin, C", "authors": [" MIT Press", " Cambridge", " MA"]}, {"title": "Higher-order modules and the phase distinction", "authors": ["Harper", " Mitchell"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Mixin modules in a call-by-value setting", "authors": ["Hirschowitz"]}, {"title": " ", "authors": []}, {"title": "A syntactic type system for recursive modules", "authors": [" Nakata", " Garrigue"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Using parameterized signatures to express modular structure", "authors": ["Jones"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Manifest types, modules, and separate compilation", "authors": ["Leroy"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Applicative functors and fully transparent higher-order modules", "authors": ["Leroy"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "A modular module system", "authors": ["Leroy"]}, {"title": " ", "authors": []}, {"title": "A proposal for recursive modules in Objective Caml", "authors": ["Leroy"]}, {"title": "Modules for Standard ML", "authors": ["MacQueen"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Lightweight linear types in System F\u00b0", "authors": ["Mazurak", " Zhao"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "", "authors": ["Milner", " Tofte", " Harper"]}, {"title": "MIT Press, Cambridge, MA", "authors": [" Cambridge", " MA"]}, {"title": "Modeling abstract types in modules with open existential types", "authors": ["Montagu"]}, {"title": " ", "authors": [" New York"]}, {"title": "Object-oriented programming with Flavors", "authors": ["Moon"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Recursive modules for programming", "authors": ["Nakata"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Non-parametric parametricity", "authors": ["Neis", " Dreyer"]}, {"title": " ", "authors": []}, {"title": "Scalable extensibility via nested inheritance", "authors": ["Nystrom", " Chong"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "J&: Nested intersection for scalable software composition", "authors": ["Nystrom", " Qi"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Scalable component abstractions", "authors": ["Odersky"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "A nominal theory of objects with dependent types", "authors": ["Odersky", " Cremet", " R\u00f6ckl"]}, {"title": "ACM Press, New York", "authors": [" New Yor"]}, {"title": "From structures and functors to modules and units", "authors": ["Owens"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Haskell 98 language and libraries: The revised report", "authors": ["Peyton Jones", " Augustsson", " Barton", " Boutel", " Burton", " Fasel", " "]}, {"title": "", "authors": []}, {"title": "An expressive language of signatures", "authors": ["Ramsey", " Fisher"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Generativity and dynamic opacity for abstract types", "authors": ["Rossberg"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "The missing link: Dynamic components for ML", "authors": ["Rossberg"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "MixML (project website)", "authors": ["Rossberg"]}, {"title": "F-ing modules", "authors": ["Rossberg", " Russo"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Types for modules", "authors": ["Russo"]}, {"title": "First-class structures for Standard ML", "authors": ["Russo"]}, {"title": "ACM Press, New York", "authors": [" New Yor"]}, {"title": "Non-dependent types for Standard ML modules", "authors": ["Russo"]}, {"title": "Springer", "authors": []}, {"title": "Recursive structures for Standard ML", "authors": ["Russo"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Extensional equivalence and singleton types", "authors": ["Stone"]}, {"title": " ", "authors": []}, {"title": "Linear types can change the world! In ", "authors": ["Wadler"]}, {"title": "Broy and C", "authors": [" North Hollan"]}, {"title": "How to make ad hoc polymorphism less ad hoc", "authors": ["Wadler"]}, {"title": "ACM Press, New York", "authors": []}, {"title": "Substructural type systems", "authors": ["Walker"]}, {"title": "C", "authors": [" MIT Press", " Cambridge"]}]},
{"title": "Bisimulation for Quantum Processes", "time": "December 2012", "keyword": ["Programming Languages and Systems"], "abstract": "Quantum cryptographic systems have been commercially available, with a striking advantage over classical systems that their security and ability to detect the presence of eavesdropping are provable based on the principles of quantum mechanics. On the other hand, quantum protocol designers may commit more faults than classical protocol designers since human intuition is poorly adapted to the quantum world. To offer formal techniques for modeling and verification of quantum protocols, several quantum extensions of process algebra have been proposed. An important issue in quantum process algebra is to discover a quantum generalization of bisimulation preserved by various process constructs, in particular, parallel composition, where one of the major differences between classical and quantum systems, namely quantum entanglement, is present. Quite a few versions of bisimulation have been defined for quantum processes in the literature, but in the best case they are only proved to be preserved by parallel composition of purely quantum processes where no classical communication is involved.\nMany quantum cryptographic protocols, however, employ the LOCC (Local Operations and Classical Communication) scheme, where classical communication must be explicitly specified. So, a notion of bisimulation preserved by parallel composition in the circumstance of both classical and quantum communication is crucial for process algebra approach to verification of quantum cryptographic protocols. In this article we introduce novel notions of strong bisimulation and weak bisimulation for quantum processes, and prove that they are congruent with respect to various process algebra combinators including parallel composition even when both classical and quantum communication are present. We also establish some basic algebraic laws for these bisimulations. In particular, we show the uniqueness of the solutions to recursive equations of quantum processes, which proves useful in verifying complex quantum protocols. To capture the idea that a quantum process approximately implements its specification, and provide techniques and tools for approximate reasoning, a quantified version of strong bisimulation, which defines for each pair of quantum processes a bisimulation-based distance characterizing the extent to which they are strongly bisimilar, is also introduced.\n", "author": [{"name": "Yuan Feng", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}, {"name": "Runyao Duan", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}, {"name": "Mingsheng Ying", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}, {"name": "Yuan Feng", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}, {"name": "Runyao Duan", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}, {"name": "Mingsheng Ying", "affiliation": "University of Technology, Sydney, Australia, and Tsinghua University, China"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "10", "references": [{"title": "A calculus for cryptographic protocols: The spi calculus", "authors": []}, {"title": " ", "authors": []}, {"title": "Weak bisimulation for fully probabilistic processes", "authors": []}, {"title": "", "authors": [" vol"]}, {"title": "Domain equations for probabilistic processes", "authors": []}, {"title": " ", "authors": []}, {"title": "Communication via one- and two-particle operators on Einstein-Podolsky-Rosen states", "authors": []}, {"title": "", "authors": [" 20", " 2881--2884"]}, {"title": "Teleporting an unknown quantum state via dual classical and EPR channels", "authors": []}, {"title": "", "authors": []}, {"title": "Logical, metric, and algorithmic characterisations of probabilistic bisimulation", "authors": [" metric"]}, {"title": "Compositional reasoning for probabilistic finite-state behaviors", "authors": []}, {"title": "", "authors": []}, {"title": "Metrics for action-labelled quantitative transition systems1", "authors": []}, {"title": " ", "authors": []}, {"title": "Remarks on testing probabilistic processes", "authors": []}, {"title": " ", "authors": []}, {"title": "Weak bisimulation is sound and complete for PCTL*", "authors": []}, {"title": "", "authors": []}, {"title": "Metrics for labelled markov processes", "authors": []}, {"title": " ", "authors": []}, {"title": "Weak bisimulation is sound and complete for PCTL*", "authors": []}, {"title": "", "authors": [" 203--219"]}, {"title": "Probabilistic bisimulations for quantum processes", "authors": []}, {"title": " ", "authors": [" 11"]}, {"title": "Bisimulations for quantum processes", "authors": []}, {"title": " ", "authors": []}, {"title": "Communicating quantum processes", "authors": []}, {"title": " ", "authors": []}, {"title": "Algebraic reasoning for probabilistic concurrent systems", "authors": []}, {"title": "", "authors": [" Amsterdam"]}, {"title": "Quantum mechanics helps in searching for a needle in a haystack", "authors": []}, {"title": "", "authors": [" 325"]}, {"title": "A proof system for communicating processes with value-passing", "authors": []}, {"title": "", "authors": []}, {"title": "A theory of communicating processes with value-passing", "authors": []}, {"title": " ", "authors": []}, {"title": "Toward a quantum process algebra", "authors": []}, {"title": " ", "authors": []}, {"title": "Quantum computations: Algorithms and error correction", "authors": []}, {"title": "", "authors": [" 1191--1249"]}, {"title": "", "authors": []}, {"title": "Springer, Berlin", "authors": [" Berli"]}, {"title": "Relations among quantum processes: Bisimilarity and congruence", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Prentice Hall, Englewood Cliffs, NJ", "authors": [" Englewood Cliffs", " NJ"]}, {"title": "A calculus of mobile processes, parts I and II", "authors": []}, {"title": "", "authors": []}, {"title": "", "authors": []}, {"title": "Cambridge University Press", "authors": []}, {"title": "Algorithms for quantum computation: Discrete log and factoring", "authors": []}, {"title": " ", "authors": []}, {"title": "http://www", "authors": []}, {"title": "", "authors": []}, {"title": "Princeton University Press, Princeton, NJ", "authors": [" Princeton"]}, {"title": "An algebra of quantum processes", "authors": []}, {"title": " ", "authors": []}, {"title": "", "authors": []}, {"title": "Springer New York", "authors": []}, {"title": "Bisimulation indexes and their applications", "authors": []}, {"title": " ", "authors": []}]},
{"title": "A Transformation Framework for Optimizing Task-Parallel Programs", "time": "April 2013", "keyword": ["Programming Languages and Systems"], "abstract": "Task parallelism has increasingly become a trend with programming models such as OpenMP 3.0, Cilk, Java Concurrency, X10, Chapel and Habanero-Java (HJ) to address the requirements of multicore programmers. While task parallelism increases productivity by allowing the programmer to express multiple levels of parallelism, it can also lead to performance degradation due to increased overheads. In this article, we introduce a transformation framework for optimizing task-parallel programs with a focus on task creation and task termination operations. These operations can appear explicitly in constructs such as async, finish in X10 and HJ, task, taskwait in OpenMP 3.0, and spawn, sync in Cilk, or implicitly in composite code statements such as foreach and ateach loops in X10, forall and foreach loops in HJ, and parallel loop in OpenMP.\nOur framework includes a definition of data dependence in task-parallel programs, a happens-before analysis algorithm, and a range of program transformations for optimizing task parallelism. Broadly, our transformations cover three different but interrelated optimizations: (1) \n, (2) \n, and (3) \n. Finish-elimination removes redundant task termination operations, forall-coarsening replaces expensive task creation and termination operations with more efficient synchronization operations, and loop-chunking extracts useful parallelism from ideal parallelism. All three optimizations are specified in an iterative transformation framework that applies a sequence of relevant transformations until a fixed point is reached. Further, we discuss the impact of exception semantics on the specified transformations, and extend them to handle task-parallel programs with precise exception semantics. Experimental results were obtained for a collection of task-parallel benchmarks on three multicore platforms: a dual-socket 128-thread (16-core) Niagara T2 system, a quad-socket 16-core Intel Xeon SMP, and a quad-socket 32-core Power7 SMP. We have observed that the proposed optimizations interact with each other in a synergistic way, and result in an overall geometric average performance improvement between 6.28\u00d7 and 10.30\u00d7, measured across all three platforms for the benchmarks studied.\n", "author": [{"name": "V. Krishna Nandivada", "affiliation": "IIT Madras"}, {"name": "Jun Shirako", "affiliation": "Rice University"}, {"name": "Jisheng Zhao", "affiliation": "Rice University"}, {"name": "Vivek Sarkar", "affiliation": "Rice University"}, {"name": "V. Krishna Nandivada", "affiliation": "IIT Madras"}, {"name": "Jun Shirako", "affiliation": "Rice University"}, {"name": "Jisheng Zhao", "affiliation": "Rice University"}, {"name": "Vivek Sarkar", "affiliation": "Rice University"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "23", "references": [{"title": "May-Happen-In-Parallel analysis of x10 programs", "authors": ["Agarwal", " Barik", " Sarkar"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Communication optimization and code generation for distributed memory machines", "authors": ["Amarasinghe"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "The nas parallel benchmarks - Summary and preliminary results", "authors": ["Bailey", " Barszcz", " Barton", " Browning", " Carter", " Dagum", " Fatoohi", " Frederickson", " Lasinski", " Schreiber", " Simon", " Venkatakrishnan"]}, {"title": " ", "authors": []}, {"title": "Efficient, portable implementation of asynchronous multi-place programs", "authors": ["Biksh", " Castanos", " Kodali", " N", " Peshansky", " Saraswat", " Sur", " Varma"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Cilk: An efficient multithreaded runtime system", "authors": ["Blumofe", " Joerg", " Kuszmaul", " Leiserson", " R"]}, {"title": " ", "authors": []}, {"title": "The high-level parallel language ZPL improves productivity and performance", "authors": ["Chamberlain", " Eun Choi", " Deitz", " And Snyder"]}, {"title": "", "authors": []}, {"title": "Chapel", "authors": ["Chapel"]}, {"title": "X10: An object-oriented approach to non-uniform cluster computing", "authors": ["Charles", " Grothoff", " Saraswat", " Donawa", " Kielstra", " Ebcioglu", " Von Praun"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A compiler-assisted approach to SPMD execution", "authors": ["Cytron", " Lipkis"]}, {"title": "", "authors": [" Los Alamitos", " CA"]}, {"title": "Optimization of object-oriented programs using static class hierarchy analysis", "authors": ["Dean", " Grove"]}, {"title": "", "authors": [" Springer"]}, {"title": "Synchronization transformations for parallel computing", "authors": ["Diniz"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Concurrency analysis in the presence of procedures using a data-flow framework", "authors": ["Duesterwald"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Barcelona openmp tasks suite: A set of benchmarks targeting the exploitation of task parallelism in openmp", "authors": ["Duran", " Teruel", " Ferrer", " Martorell"]}, {"title": " ", "authors": [" IEEE Computer Society", " Los", " Alamitos", " CA"]}, {"title": "Efficient detection of determinacy races in cilk programs", "authors": ["Feng"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Unrolling loops containing task parallelism", "authors": ["Ferrer", " Duran", " Martorell"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Scheduling variable-length parallel subtasks", "authors": ["Flynn"]}, {"title": "Location consistency-A new memory model and cache consistency protocol", "authors": ["Gao"]}, {"title": " ", "authors": []}, {"title": "Statistically rigorous java performance evaluation", "authors": ["Georges", " Buytaert"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Work-First and help-first scheduling policies for async-finish task parallelism", "authors": ["Guo", " Barik", " Raman"]}, {"title": " ", "authors": [" IEEE Computer Society", " Los Alamitos", " CA"]}, {"title": "The fuzzy barrier: A mechanism for high speed synchronization of processors", "authors": ["Gupta"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Habanero Java", "authors": ["Habanero"]}, {"title": "Synchronization barrier elimination in synchronous foralls", "authors": ["Heinz"]}, {"title": "The java grande forum benchmark suite", "authors": ["JGF"]}, {"title": "", "authors": ["Kennedy"]}, {"title": "", "authors": [" Morgan Kaufmann", " San Francisco", " CA"]}, {"title": "Allocating independent subtasks on parallel processors", "authors": ["Kruskal"]}, {"title": " ", "authors": []}, {"title": "Time clocks, and the ordering of events in a distributed system", "authors": ["Lamport"]}, {"title": " ", "authors": []}, {"title": "How to make a multiprocessor computer that correctly executes multiprocess programs", "authors": ["Lamport"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Larus"]}, {"title": "Morgan and Claypool", "authors": []}, {"title": "Scaling java points-to analysis using spark", "authors": ["Lhotak"]}, {"title": "", "authors": [" Springer"]}, {"title": "", "authors": ["Metcalfe"]}, {"title": "Oxford Science Publishers", "authors": []}, {"title": "", "authors": ["Muchnick"]}, {"title": "Morgan Kaufmann, San Francisco, CA", "authors": [" San Francisco", " CA"]}, {"title": "Temperature-Sensitive loop parallelization for chip multiprocessors", "authors": ["Narayanan", " Chen", " Mahmut K"]}, {"title": " ", "authors": [" IEEE Computer Society", " Los Alamitos", " CA"]}, {"title": "Synchronization optimizations for efficient execution on multi-cores", "authors": ["Nicolau", " Li", " Veidenbaum"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Polyglot: An extensible compiler framework for Java", "authors": ["Nystrom", " Clarkson"]}, {"title": "", "authors": [" Springer"]}, {"title": "OpenMP application program interface, version 3", "authors": ["OpenMP"]}, {"title": "", "authors": ["Peierls", " Goetz", " Bloch", " Bowbeer", " Lea"]}, {"title": "", "authors": [" Addison-Wesley Professional"]}, {"title": "Guided self-scheduling: A practical scheduling scheme for parallel supercomputers", "authors": ["Polychronopoulos"]}, {"title": " ", "authors": []}, {"title": "Purity and side effect analysis for Java programs", "authors": ["Salcianu"]}, {"title": " ", "authors": []}, {"title": "Synchronization using counting semaphores", "authors": ["Sarkar"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Efficient dependence analysis for Java arrays", "authors": ["Sarkar"]}, {"title": "", "authors": []}, {"title": "Phasers: A unified deadlock-free construct for collective and point-to-point synchronization", "authors": ["Shirako", " Peixotto", " Sarkar"]}, {"title": " ", "authors": [" New York"]}, {"title": "Chunking parallel loops in the presence of synchronization", "authors": ["Shirako", " Zhao", " N"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Compiler optimizations for eliminating barrier synchronization", "authors": ["Tseng"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Soot - A java bytecode optimization framework", "authors": ["Vallee-Rai", " Co", " Gagnon", " Hendren", " Lam"]}, {"title": "", "authors": [" IBM Press"]}, {"title": "", "authors": ["Wolfe"]}, {"title": "", "authors": [" Addison-Wesley"]}, {"title": "Data dependence and its application to parallel processing", "authors": ["Wolfe"]}, {"title": " ", "authors": []}, {"title": "Productivity and performance using partitioned global address space languages", "authors": ["Yelick", " Bonachea", " Chen", " Colella", " Datta", " Duell", " Graham", " Hargrove", " Hilfinger", " Husb", " Iancu", " Kamil", " Nishtala", " Su", " Michael"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Barrier elimination based on access dependency analysis for OpenMP", "authors": ["Yonezawa", " Wada", " And Aida"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Intermediate language extensions for parallelism", "authors": ["Zhao"]}, {"title": " ", "authors": []}, {"title": "Reducing task creation and termination overhead in explicitly parallel programs", "authors": ["Zhao", " Shirako", " N"]}, {"title": " ", "authors": [" ACM Press", " New York"]}]},
{"title": "TSL: A System for Generating Abstract Interpreters and its Application to Machine-Code Analysis", "time": "April 2013", "keyword": ["Programming Languages and Systems"], "abstract": "This article describes the design and implementation of a system, called T\n (for Transformer Specification Language), that provides a systematic solution to the problem of creating retargetable tools for analyzing machine code. T\n is a tool generator---that is, a metatool---that automatically creates different abstract interpreters for machine-code instruction sets.\nThe most challenging technical issue that we faced in designing T\n was how to automate the generation of the set of \n for a given abstract interpretation of a given instruction set. From a description of the \n of an instruction set, together with the datatypes and operations that define an abstract domain, T\n automatically creates the set of abstract transformers for the instructions of the instruction set. T\n advances the state-of-the-art in program analysis because it provides two dimensions of parameterizability: (i) a given analysis component can be retargeted to different instruction sets; (ii) multiple analysis components can be created automatically from a single specification of the concrete operational semantics of the language to be analyzed.\nT\n is an \n. The article describes the principles behind T\n, and discusses how one uses T\n to develop different abstract interpreters.\n", "author": [{"name": "Junghee Lim", "affiliation": "University of Wisconsin"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc."}, {"name": "Junghee Lim", "affiliation": "University of Wisconsin"}, {"name": "Thomas Reps", "affiliation": "University of Wisconsin and GrammaTech, Inc."}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "33", "references": [{"title": "Generation of efficient interprocedural analyzers with PAG", "authors": ["Alt"]}, {"title": "Springer, 33--50", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Adding nesting structure to words", "authors": ["Alur"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "APRON numerical abstract domain library", "authors": ["APRON"]}, {"title": "ARMv7-A in HOL", "authors": []}, {"title": "Graph rewrite systems for program optimization", "authors": ["Assmann"]}, {"title": " ", "authors": []}, {"title": "WYSINWYX: What you see is not what you execute", "authors": ["Balakrishnan"]}, {"title": "Analyzing memory accesses in x86 executables", "authors": ["Balakrishnan"]}, {"title": "", "authors": [" 5--23"]}, {"title": "DIVINE: Discovering variables in executables", "authors": ["Balakrishnan"]}, {"title": "", "authors": []}, {"title": "WYSINWYX: What you see is not what you execute", "authors": ["Balakrishnan"]}, {"title": " ", "authors": []}, {"title": "Codesurfer/x86 - A platform for analyzing x86 executables, (tool demonstration paper)", "authors": ["Balakrishnan", " Gruian", " Reps"]}, {"title": " ", "authors": []}, {"title": "Proofs from tests", "authors": ["Beckman", " Nori", " Rajamani"]}, {"title": " ", "authors": []}, {"title": "A generic approach to the static analysis of concurrent programs with procedures", "authors": ["Bouajjani", " Esparza"]}, {"title": " ", "authors": []}, {"title": "Transfer function synthesis without quantiffer elimination", "authors": ["Brauer"]}, {"title": "", "authors": []}, {"title": "Abstract interpretation of microcontroller code: Intervals meet congruences", "authors": ["Brauer", " King"]}, {"title": "To appear", "authors": []}, {"title": "BAP: A binary analysis platform", "authors": ["Brumley", " Jager", " Avgerinos"]}, {"title": "", "authors": []}, {"title": "Proving properties of programs by structural induction", "authors": ["Burstall"]}, {"title": "", "authors": []}, {"title": "Safety in numbers", "authors": ["Cok"]}, {"title": "System-level specification of instruction sets", "authors": ["Cook", " Franzon", " Harcourt"]}, {"title": "Interprocedural side-effect analysis in linear time", "authors": ["Cooper"]}, {"title": " ", "authors": []}, {"title": "Verification by abstract interpretation", "authors": ["Cousot"]}, {"title": "", "authors": [" vol"]}, {"title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "authors": ["Cousot"]}, {"title": " ", "authors": []}, {"title": "Systematic design of program analysis frameworks", "authors": ["Cousot"]}, {"title": " ", "authors": []}, {"title": "Temporal abstract interpretation", "authors": ["Cousot"]}, {"title": " ", "authors": []}, {"title": "Automatic discovery of linear constraints among variables of a program", "authors": ["Cousot"]}, {"title": " ", "authors": []}, {"title": "Code selection through object code optimization", "authors": ["Davidson"]}, {"title": " ", "authors": []}, {"title": "Z3: An efficient SMT solver", "authors": ["de Moura"]}, {"title": "", "authors": []}, {"title": "OpenNWA: A nested-word-automaton library (tool paper)", "authors": ["Driscoll", " Thakur"]}, {"title": " ", "authors": []}, {"title": "REIL: A platform-independent intermediate representation of disassembled code for static code analysis", "authors": ["Dullien"]}, {"title": "Yices: An SMT solver", "authors": ["Dutertre"]}, {"title": "Abstract domains of affine relations", "authors": ["Elder", " Lim", " Sharma", " Andersen"]}, {"title": "", "authors": [" vol"]}, {"title": "Abstract domains of affine relations", "authors": ["Elder", " Lim", " Sharma", " Andersen"]}, {"title": "The program dependence graph and its use in optimization", "authors": ["Ferrante", " Ottenstein"]}, {"title": " ", "authors": []}, {"title": "Formal specification and verification of ARM6", "authors": ["Fox"]}, {"title": "", "authors": [" vol"]}, {"title": "Directions in ISA specification", "authors": ["Fox"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "A trustworthy monadic formalization of the ARMv7 instruction set architecture", "authors": ["Fox"]}, {"title": " ", "authors": [" vol"]}, {"title": "DART: Directed automated random testing", "authors": ["Godefroid", " Klarlund"]}, {"title": " ", "authors": []}, {"title": "Construction of abstract state graphs with PVS", "authors": ["Graf"]}, {"title": "", "authors": [" vol"]}, {"title": "SYNERGY: A new algorithm for property checking", "authors": ["Gulavani", " Henzinger", " Kannan", " Nori"]}, {"title": " ", "authors": []}, {"title": "Functional specification and simulation of instruction set architectures", "authors": ["Harcourt", " Mauney"]}, {"title": "1999", "authors": []}, {"title": "Intel 64 and IA-32 architectures software developer\u2019s manual, Vol", "authors": ["Intel"]}, {"title": "Intel 64 and IA-32 architectures software developer\u2019s manual, Vol", "authors": ["Intel"]}, {"title": "YACC: Yet another compiler-compiler", "authors": ["Johnson"]}, {"title": "", "authors": ["Jones", " Gomard"]}, {"title": "Prentice-Hall International", "authors": []}, {"title": "Dataflow analysis of applicative programs using minimal function graphs", "authors": ["Jones"]}, {"title": " ", "authors": []}, {"title": "Abstract interpretation: A semantics-based tool for program analysis", "authors": ["Jones"]}, {"title": "", "authors": [" Vol"]}, {"title": "TDL: A hardware description language for retargetable postpass optimizations and analyses", "authors": ["K\u00e4stner"]}, {"title": "", "authors": []}, {"title": "Automatic abstraction for congruences", "authors": ["King"]}, {"title": " ", "authors": []}, {"title": "Banshee: A scalable constraint-based analysis toolkit", "authors": ["Kodumal"]}, {"title": " ", "authors": [" vol"]}, {"title": "Compiler optimization correctness by temporal logic", "authors": ["Lacey", " Jones", " Van Wyk"]}, {"title": " ", "authors": []}, {"title": "Improving pushdown system model checking", "authors": ["Lal"]}, {"title": " ", "authors": []}, {"title": "Extended weighted pushdown systems", "authors": ["Lal", " Reps"]}, {"title": " ", "authors": []}, {"title": "The SOOT framework for Java program analysis: A retrospective", "authors": ["Lam", " Bodden", " Lhotak"]}, {"title": "", "authors": []}, {"title": "LLVM: A compilation framework for lifelong program analysis and transformation", "authors": ["Lattner"]}, {"title": "", "authors": []}, {"title": "TVLA: A system for implementing static analyses", "authors": ["Lev-Ami"]}, {"title": "", "authors": []}, {"title": "Transformer specification language: A system for generating analyzers and its applications", "authors": ["Lim"]}, {"title": "A system for generating static analyzers for machine instructions", "authors": ["Lim"]}, {"title": "", "authors": []}, {"title": "BCE: Extracting botnet commands from bot executables", "authors": ["Lim"]}, {"title": "Symbolic analysis via semantic reinterpretation", "authors": ["Lim", " Lal"]}, {"title": "", "authors": []}, {"title": "Symbolic analysis via semantic reinterpretation", "authors": ["Lim", " Lal"]}, {"title": " ", "authors": []}, {"title": "Obfuscation of executable code to improve resistance to static disassembly", "authors": ["Linn"]}, {"title": " ", "authors": []}, {"title": "Understanding stacks and registers in the Sparc architecture(s)", "authors": ["Magnusson"]}, {"title": "Abstract interpretation of partial-evaluation algorithms", "authors": ["Malmkj\u00e6r"]}, {"title": "Path-Exploration lifting: Hi-fi tests for lo-fi emulators", "authors": ["Martignoni", " McCamant", " Poosankam", " Song"]}, {"title": " ", "authors": []}, {"title": "Trace partitioning in abstract interpretation based static analyzers", "authors": ["Mauborgne"]}, {"title": " ", "authors": [" vol"]}, {"title": "A few graph-based relational numerical abstract domains", "authors": ["Min\u00e9"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Architecture description language: Driven software toolkit generation for architectural exploration of programmable socs", "authors": ["Mishra", " Shrivastava"]}, {"title": " ", "authors": []}, {"title": "Precise interprocedural analysis through linear algebra", "authors": ["M\u00fcller-Olm"]}, {"title": "", "authors": []}, {"title": "Analysis of modular arithmetic", "authors": ["M\u00fcller-Olm"]}, {"title": " ", "authors": [" vol"]}, {"title": "A relational framework for abstract interpretation", "authors": ["Mycroft"]}, {"title": "7, Springer, 156--171 ", "authors": [" vol"]}, {"title": "Hoare logic for ARM machine code", "authors": ["Myreen", " Fox"]}, {"title": "", "authors": [" vol"]}, {"title": "Two-level semantics and abstract interpretation", "authors": ["Nielson"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Nielson"]}, {"title": "Cambridge University Press", "authors": []}, {"title": "LISA machine description language for cycle-accurate models of programmable DSP architectures", "authors": ["Pees", " Hoffmann", " Zivojnovic"]}, {"title": " ", "authors": []}, {"title": "A term pattern-match compiler inspired by finite automata theory", "authors": ["Pettersson"]}, {"title": "", "authors": []}, {"title": "High-level semantics", "authors": ["Pleban"]}, {"title": "", "authors": [" vol"]}, {"title": "2005", "authors": ["Power"]}, {"title": "Aggregate structure identification and its application to program analysis", "authors": ["Ramalingam", " Field"]}, {"title": " ", "authors": []}, {"title": "Specifying instructions\u2019 semantics using ", "authors": ["Ramsey"]}, {"title": "http://www", "authors": []}, {"title": "Specifying representations of machine instructions", "authors": ["Ramsey"]}, {"title": " ", "authors": []}, {"title": "HOIST: A system for automatically deriving static analyzers for embedded systems", "authors": ["Regehr"]}, {"title": " ", "authors": []}, {"title": "Intermediate-representation recovery from low- level code", "authors": ["Reps", " Balakrishnan"]}, {"title": " ", "authors": []}, {"title": "There\u2019s plenty of room at the bottom: Analyzing and verifying machine code", "authors": ["Reps", " Lim", " Thakur", " Balakrishnan"]}, {"title": " ", "authors": [" vol"]}, {"title": "Finite differencing of logical formulas for static analysis", "authors": ["Reps", " Sagiv"]}, {"title": " ", "authors": []}, {"title": "Symbolic implementation of the best transformer", "authors": ["Reps", " Sagiv"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Weighted pushdown systems and their application to interprocedural dataflow analysis", "authors": ["Reps", " Schwoon", " Jha"]}, {"title": " ", "authors": []}, {"title": "Automatic inference of optimizer flow functions from semantics meanings", "authors": ["Scherpelz", " Lerner"]}, {"title": " ", "authors": []}, {"title": "", "authors": ["Schmidt"]}, {"title": "Allyn and Bacon, Boston, MA", "authors": [" Boston"]}, {"title": "Dataflow analysis is model checking of abstract interpretations", "authors": ["Schmidt"]}, {"title": " ", "authors": []}, {"title": "Two approaches to interprocedural dataflow analysis", "authors": ["Sharir"]}, {"title": "Prentice-Hall", "authors": []}, {"title": "", "authors": ["Siewiorek", " Bell"]}, {"title": "Springer", "authors": []}, {"title": "BitBlaze: A new approach to computer security via binary analysis", "authors": ["Song", " Brumley", " Yin", " Caballero", " Jager", " Kang", " Liang", " Newsome", " Poosankam"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "SOOT: A Java optimization framework", "authors": ["SOOT"]}, {"title": "Dataflow analysis as model checking", "authors": ["Steffen"]}, {"title": "", "authors": [" vol"]}, {"title": "Generating dataflow analysis algorithms from modal specifications", "authors": ["Steffen"]}, {"title": " ", "authors": []}, {"title": "A method for symbolic computation of abstract operations", "authors": ["Thakur"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Bilateral algorithms for symbolic abstraction", "authors": ["Thakur", " Elder"]}, {"title": "60, Springer, 111--128  ", "authors": [" vol"]}, {"title": "Directed proof generation for machine code", "authors": ["Thakur", " Lim", " Lal", " Burton", " Driscoll", " Elder", " Andersen"]}, {"title": " ", "authors": [" vol"]}, {"title": "Sharlit: A tool for building optimizers", "authors": ["Tjiang"]}, {"title": " ", "authors": []}, {"title": "A framework for construction and evaluation of high-level specifications for program analysis techniques", "authors": ["Venkatesh"]}, {"title": " ", "authors": []}, {"title": "SPARE: A development environment for program analysis algorithms", "authors": ["Venkatesh"]}, {"title": " ", "authors": []}, {"title": "In ", "authors": ["Wadler"]}, {"title": "", "authors": [" Englewood Cliffs", " NJ"]}, {"title": "wala", "authors": ["WALA"]}, {"title": "WALi: The weighted automaton library", "authors": ["WAL"]}, {"title": "Using Datalog with binary decision diagrams for program analysis", "authors": ["Whaley", " Avots", " Carbin"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Global flow analysis and optimization in the MUG2 compiler generating system", "authors": ["Wilhelm"]}, {"title": "Prentice-Hall", "authors": []}, {"title": "SUIF: An infrastructure for research on parallelizing and optimizing compilers", "authors": ["Wilson", " French", " Wilson", " Amarasinghe", " Anderson", " Tjiang", " Liao", " Tseng", " Hall", " Lam"]}, {"title": " ", "authors": []}, {"title": "WPDS++: A C++ library for weighted pushdown systems", "authors": ["WPDS+"]}, {"title": "Automatic generation and management of interprocedural program analyses", "authors": []}, {"title": " ", "authors": []}]},
{"title": "Practical Integrated Analysis of Pointers, Dataflow and Control Flow", "time": "April 2013", "keyword": ["Programming Languages and Systems"], "abstract": "This article presents a family of static analyses to determine pointer targets, control flow, and dataflow in combination. The integrated solution to these mutually dependent problems approaches the result from the optimistic side. It is a general strategy for static program analysis and does not need any upfront approximation for one of the problems to overcome the mutual dependencies. A degenerated case yields Andersen\u2019s famous pointer analysis; otherwise, the analyses are flow-sensitive and can support direct and indirect strong updates, within the same cubic asymptotic complexity as known for Andersen, albeit with larger constants.\nSurprisingly, the ideas behind the integrated analysis are intuitive. The strategy we describe naturally evolves from considering the mutual dependencies between the three problems, or from generalizing Andersen\u2019s analysis to flow sensitivity. Such a flow-sensitive Andersen analysis not only computes pointer targets with higher precision than the original analysis, but it also creates an interprocedural SSA form at the same time.\nOur extensive experimental evaluation shows that the integrated solution is practical as it can be applied to reasonably large real-world programs within a few seconds or minutes. This uses some optimizations which together achieve a speedup of more than 100 for several programs. We compare several members of the family of analyses, from flow- and field-insensitive to flow- and field-sensitive with strong updates, both with and without optimizations. This gives some insights into the effects of these dimensions of precision on the results. It also sheds new light on the benefits of flow sensitivity versus the costs associated with it.\n", "author": [{"name": "Stefan Staiger-St\u00f6hr", "affiliation": "University of Stuttgart"}, {"name": "Stefan Staiger-St\u00f6hr", "affiliation": "University of Stuttgart"}], "publisher": "ACM Transactions on Programming Languages and Systems", "citationCount": "3", "references": [{"title": "Program analysis and specialization for the C programming language", "authors": ["Andersen"]}, {"title": "Efficient and extensible security enforcement using dynamic data flow analysis", "authors": ["Chang", " Streiff"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Analysis of pointers and structures", "authors": ["Chase", " Wegman"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Relevant context inference", "authors": ["Chatterjee", " Ryder"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Efficient flow-sensitive interprocedural computation of pointer-induced aliases and side effects", "authors": ["Choi", " Burke"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Efficiently computing static single assignment form and the control dependence graph", "authors": ["Cytron", " Ferrante", " Rosen", " Wegman"]}, {"title": " ", "authors": []}, {"title": "Partial online cycle elimination in inclusion constraint graphs", "authors": ["Fahndrich", " Foster", " Su"]}, {"title": " ", "authors": []}, {"title": "Effective typestate verification in the presence of aliasing", "authors": ["Fink", " Yahav", " Dor", " Ramalingam"]}, {"title": " ", "authors": []}, {"title": "Transformational derivation of an improved alias analysis algorithm", "authors": ["Goyal"]}, {"title": " ", "authors": []}, {"title": "Towards path-sensitive points-to analysis", "authors": ["Gutzmann", " Lundberg"]}, {"title": " ", "authors": []}, {"title": "Error checking with client-driven pointer analysis", "authors": ["Guyer"]}, {"title": " ", "authors": []}, {"title": "The ant and the grasshopper: Fast and accurate pointer analysis for millions of lines of code", "authors": ["Hardekopf"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Semi-sparse flow-sensitive pointer analysis", "authors": ["Hardekopf"]}, {"title": " ", "authors": []}, {"title": "Flow-sensitive pointer analysis for millions of lines of code", "authors": ["Hardekopf"]}, {"title": "", "authors": []}, {"title": "Using static single assignment form to improve flow-insensitive pointer analysis", "authors": ["Hasti"]}, {"title": " ", "authors": []}, {"title": "Ultra-fast aliasing analysis using CLA: A million lines of C code in a second", "authors": ["Heintze"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Pointer analysis: Haven\u2019t we solved this problem yet? In ", "authors": ["Hind"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Interprocedural pointer alias analysis", "authors": ["Hind", " Burke", " Carini"]}, {"title": " ", "authors": []}, {"title": "Assessing the effects of flow-sensitivity on pointer alias analyses", "authors": ["Hind"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Which pointer analysis should I use? In ", "authors": ["Hind"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Bootstrapping: A technique for scalable flow and context-sensitive pointer alias analysis", "authors": ["Kahlon"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "A safe approximate algorithm for interprocedural pointer aliasing", "authors": []}, {"title": " ", "authors": []}, {"title": "Program analysis using binary decision diagrams", "authors": ["Lhotak"]}, {"title": "Points-to analysis with efficient strong updates", "authors": ["Lhotak"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Context-sensitive points-to analysis: Is it worth it? In ", "authors": ["Lhotak"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Evaluating the benefits of context-sensitive points-to analysis using a BDD-based implementation", "authors": ["Lhotak"]}, {"title": " ", "authors": []}, {"title": "Firm, an intermediate language for compiler research", "authors": ["Lindenmaier", " Beck", " Boesler"]}, {"title": "A scalable flow-sensitive points-to analysis", "authors": ["Lundberg"]}, {"title": "si", "authors": []}, {"title": "Some directed graph algorithms and their application to pointer analysis", "authors": ["Pearce"]}, {"title": "Efficient field-sensitive pointer analysis of C", "authors": ["Pearce", " Kelly"]}, {"title": " ", "authors": []}, {"title": "Bauhaus -- A tool suite for program analysis and reverse engineering", "authors": ["Raza", " Vogel"]}, {"title": " ", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Precise interprocedural dataflow analysis via graph reachability", "authors": ["Reps", " Horwitz"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Points-to analysis for java using annotated constraints", "authors": ["Rountev", " Milanova"]}, {"title": " ", "authors": [" 11"]}, {"title": "Context-insensitive alias analysis reconsidered", "authors": ["Ruf"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Dimensions of precision in reference analysis of object-oriented programming languages", "authors": ["Ryder"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Pointer and escape analysis for multithreaded programs", "authors": ["Salcianu"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Fast and accurate flow-insensitive points-to analysis", "authors": ["Shapiro"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Kombinierte Statische Ermittlung von Zeigerzielen, Kontroll- und Datenfluss", "authors": ["Staiger-St\u00f6hr"]}, {"title": "Points-to analysis in almost linear time", "authors": ["Steensgaard"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "SPAS: Scalable path-sensitive pointer analysis on full-sparse SSA", "authors": ["Sui", " Ye", " Xue"]}, {"title": " ", "authors": [" Springer"]}, {"title": "Depth-first search and linear graph algorithms", "authors": ["Tarjan"]}, {"title": "", "authors": []}, {"title": "Removing unimportant computations in interprocedural program analysis", "authors": ["Tok"]}, {"title": "Efficient flow-sensitive interprocedural data-flow analysis in the presence of pointers", "authors": ["Tok", " Guyer"]}, {"title": " ", "authors": [" Springer"]}, {"title": "Context-sensitive pointer analysis using binary decision diagrams", "authors": ["Whaley"]}, {"title": "An efficient inclusion-based points-to analysis for strictly-typed languages", "authors": ["Whaley"]}, {"title": "", "authors": [" Lecture Notes in Computer Science", " vol"]}, {"title": "Efficient, context-sensitive pointer analysis for C programs", "authors": ["Wilson"]}, {"title": "Level by level: Making flow and context-sensitive pointer analysis scalable for millions of lines of code", "authors": [" Xue", " Huo", " Feng"]}, {"title": " ", "authors": [" ACM Press", " New York"]}, {"title": "Towards scalable flow and context sensitive pointer analysis", "authors": ["Zhu"]}, {"title": " ", "authors": [" ACM Press", " New York"]}]}
]